


Gadgets
=======


0x000000000008fba5: adc ah, byte ptr [rdi - 0x16]; out dx, al; mov edi, 0; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x0000000000056a8a: adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000004b33c: adc al, 0; add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x00000000000387f7: adc al, 0; add byte ptr [rax], al; sub edx, eax; mov eax, edx; pop rdx; ret; 
0x000000000003970c: adc al, 0; mov rsi, rdi; jg 0x39723; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000007c352: adc al, 0x20; pop rsi; call qword ptr [rsi]; 
0x0000000000022536: adc al, 0x24; add rsp, 0x28; ret; 
0x000000000005b3f0: adc al, 0x24; jne 0x5b3f6; xor edx, edx; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000039d2b: adc al, 0x24; jns 0x39d31; xor edx, edx; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004ab9e: adc al, 0x24; jns 0x4aba6; or rdx, 0xffffffffffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x000000000004a5d7: adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000023b4f: adc al, 0x24; mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000001bc74: adc al, 0x24; movapd xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001baf2: adc al, 0x24; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x00000000000224f5: adc al, 0x24; pop rcx; ret; 
0x00000000000427f0: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xba; syscall; 
0x000000000004d671: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000002697d: adc al, 0x27; add byte ptr [rax - 0x73], cl; adc eax, 0x6ce77; test rax, rax; cmove rax, rdx; ret; 
0x000000000003f898: adc al, 0x28; add byte ptr [rbx + rdi - 0x77], dh; ret 0x6348; 
0x000000000004c51b: adc al, 0x31; ror byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x148; 
0x000000000004c138: adc al, 0x31; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x00000000000146c4: adc al, 0x37; shl edx, 8; or eax, edx; ret; 
0x0000000000043140: adc al, 0x39; div dword ptr [rdi + rax + 0x48]; mov eax, ebp; syscall; 
0x0000000000043260: adc al, 0x41; mov eax, 1; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x000000000005ab98: adc al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x0000000000019643: adc al, 0x48; add edi, 4; sub rdx, 1; jne 0x19640; xor eax, eax; ret; 
0x000000000005aa9b: adc al, 0x48; lea esi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa9b: adc al, 0x48; lea esi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x0000000000028a28: adc al, 0x48; mov eax, edx; add rax, rdx; sete al; movzx eax, al; ret; 
0x000000000003b46d: adc al, 0x48; movsxd rdi, eax; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004b68b: adc al, 0x48; movsxd rdi, ebp; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000003b489: adc al, 0x49; movsxd rdi, eax; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000002764c: adc al, 0x51; cmp rdx, rdi; adc eax, 0; ret; 
0x00000000000545c8: adc al, 0x54; add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x000000000001f521: adc al, 0x5d; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000026248: adc al, 0x83; ret 0x4802; 
0x000000000003c67c: adc al, 0x89; ret 0xe283; 
0x000000000003915e: adc al, 0x89; ret; 
0x00000000000558e9: adc al, 0x8b; xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000001e1b4: adc al, 0x90; add rax, rdx; jmp rax; 
0x0000000000051147: adc al, 0x91; add rcx, rdx; jmp rcx; 
0x000000000005274d: adc al, 0x91; add rdx, rcx; jmp rdx; 
0x0000000000078b10: adc al, 0x9a; ret 0xb9a; 
0x00000000000709c4: adc al, 0x9b; sub eax, 0x3486009b; push rax; xor al, 0x9b; test al, 0x69; ret; 
0x00000000000528c9: adc al, 0xa0; add rax, rdx; jmp rax; 
0x0000000000020ea9: adc al, 0xb0; add rax, rdx; jmp rax; 
0x0000000000051f34: adc al, 0xb8; add rax, rdx; jmp rax; 
0x0000000000025c72: adc al, 0xd6; lea rax, [rdx + 0x10]; test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x000000000005905a: adc al, 0xe; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000001cdbf: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; ret; 
0x000000000001b80f: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba2e: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x000000000002e667: adc al, 0xf3; movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x00000000000335d5: adc al, 0xf3; movups xmmword ptr [rdi], xmm0; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000329fe: adc al, 0xf3; mulps xmm0, xmm0; movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000430f5: adc al, 0xf; mov byte ptr [rax + 1], cl; add byte ptr [rax], al; mov rax, r9; syscall; 
0x00000000000431a2: adc al, 0xf; mov byte ptr [rbx + 0x4c000000], bl; mov eax, ecx; syscall; 
0x000000000004307a: adc al, 0xf; test ebx, eax; add dword ptr [rax], eax; add byte ptr [rax + 0x66], bh; syscall; 
0x000000000005906f: adc al, 0xfd; add al, byte ptr [rax]; add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000007279c: adc al, 0xff; adc eax, 0x17ff16ff; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x00000000000231a9: adc al, 0xff; call qword ptr [rbx + 0x49]; 
0x0000000000023c77: adc al, 1; add byte ptr [rax], al; syscall; 
0x0000000000043d05: adc al, 1; ret; 
0x000000000008c376: adc al, al; ficom dword ptr [rsi]; pop rbp; ret 0xec71; 
0x000000000008ab1a: adc al, byte ptr [rax]; insd dword ptr [rdi], dx; ret 0x4d; 
0x000000000000a974: adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000009324: adc al, byte ptr [rax]; or dword ptr [rax], eax; pop rdx; ret; 
0x0000000000006f3c: adc al, byte ptr [rax]; or dword ptr [rax], eax; push rdx; ret; 
0x0000000000009e4c: adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x1bf; 
0x0000000000007344: adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x20d; 
0x000000000000f5c4: adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x4be; 
0x000000000000f3e4: adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x5b2; 
0x000000000000afbc: adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x00000000000087e4: adc al, byte ptr [rax]; or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x000000000002133d: adc al, byte ptr [rcx + 0xe0100ef]; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x000000000003da79: adc al, byte ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x25a1dd; add rsp, 0x18; ret; 
0x00000000000321eb: adc al, byte ptr [rcx]; add byte ptr [rax], al; lea rdx, [rip + 0x60d62]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000056ce4: adc al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000054902: adc al, byte ptr [rdx]; mov eax, edx; pop rdx; ret; 
0x0000000000031bd3: adc al, byte ptr [rsi]; add byte ptr [rax + 0x63], cl; add al, 0x82; add rdx, rax; jmp rdx; 
0x000000000008ab19: adc al, byte ptr es:[rax]; insd dword ptr [rdi], dx; ret 0x4d; 
0x00000000000418b8: adc al, ch; ret 0xfd2d; 
0x0000000000041d87: adc al, ch; ret; 
0x0000000000075faf: adc bh, 0x80; out 0x80, al; int 0x80; 
0x0000000000029384: adc bh, bh; ret; 
0x00000000000221ff: adc bh, byte ptr [rsi + 9]; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000333ab: adc bl, bl; and al, 0x10; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000002bec2: adc bl, bl; cmp al, 0x24; call 0x29aff; add rsp, 0x20; add rsp, 0x38; ret; 
0x0000000000005e56: adc bl, byte ptr [rax + 0x230975c2]; jp 0x5e3f; jmp rsp; 
0x000000000008a961: adc bl, byte ptr [rax + rax + 0x7b20ab]; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000003d9f9: adc bl, ch; add eax, ecx; out 8, eax; mov eax, edi; or eax, esi; ret; 
0x000000000005b7e8: adc bl, ch; in eax, dx; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x000000000002c74b: adc bl, dh; divps xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b720: adc bl, dh; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000003058e: adc bl, dh; movups xmm1, xmmword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa3d: adc bl, dh; movups xmm1, xmmword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9d2: adc bl, dh; movups xmm1, xmmword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001cdb9: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b809: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba28: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000035687: adc bl, dh; subps xmm1, xmm1; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x0000000000092bf1: adc bl, dl; mov ebp, 0x3e4cca98; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x000000000008d8ba: adc byte ptr [r10 + 0x18], sil; sar dword ptr [rdi], cl; ret 0x9725; 
0x0000000000055c25: adc byte ptr [r13 - 0x47e78b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000004e2d8: adc byte ptr [r8 + 0x3b], cl; and byte ptr [r8 - 0x77], cl; ret 0x8948; 
0x000000000004c7cf: adc byte ptr [r8 - 0x77], cl; push rbx; or byte ptr [rax + 0x39], cl; ret 0xa73; 
0x0000000000027d41: adc byte ptr [r9 - 0x77], cl; ret; 
0x000000000004c8ee: adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x0000000000041878: adc byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004e2d9: adc byte ptr [rax + 0x3b], cl; and byte ptr [r8 - 0x77], cl; ret 0x8948; 
0x000000000004b6be: adc byte ptr [rax + 0x4be04cc], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x00000000000408ce: adc byte ptr [rax + 0x4c], dl; lea ecx, [rsp + 0x28]; call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x0000000000023ab4: adc byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000002749e: adc byte ptr [rax + 0x63], cl; dec byte ptr [rax - 0x77]; ret 0xf48; 
0x0000000000022294: adc byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0x48]; mov rdx, r10; syscall; 
0x0000000000039712: adc byte ptr [rax + 0x63], cl; jg 0x39727; mov eax, 0xa0; syscall; 
0x000000000001b2e0: adc byte ptr [rax + 0x63], cl; xor al, 0x24; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000039716: adc byte ptr [rax + 0xa0], bh; syscall; 
0x0000000000039716: adc byte ptr [rax + 0xa0], bh; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000206bb: adc byte ptr [rax + 0xc593], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000021f0f: adc byte ptr [rax + 0xd], bh; mov rdi, r8; mov rdx, rcx; syscall; 
0x0000000000058175: adc byte ptr [rax + 1], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000005abcf: adc byte ptr [rax + 3], bh; syscall; 
0x000000000005b463: adc byte ptr [rax + rax], dl; call 0x389c1; add rsp, 0x18; ret; 
0x0000000000055c94: adc byte ptr [rax + rcx*2 - 0x75], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000009429c: adc byte ptr [rax + rdi*8 - 1], bl; mov byte ptr [rax], al; add byte ptr [rax], al; and byte ptr [rdi - 8], bl; jmp qword ptr [rax]; 
0x000000000004249b: adc byte ptr [rax - 0x68], cl; pop rdx; ret; 
0x00000000000389e1: adc byte ptr [rax - 0x73], cl; and al, 0x20; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x000000000003b7ab: adc byte ptr [rax - 0x73], cl; jl 0x3b7d4; jno 0x3b7e3; ror byte ptr [rax + 0x63], cl; ret 0x3949; 
0x000000000004628a: adc byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000055a1b: adc byte ptr [rax - 0x75], cl; js 0x55a28; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000049f04: adc byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000001fdfd: adc byte ptr [rax - 0x76b79aad], cl; ret 0xc148; 
0x000000000001f63a: adc byte ptr [rax - 0x76b7adad], cl; ret 0xc148; 
0x000000000003f270: adc byte ptr [rax - 0x76b7feba], cl; clc; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000001ef95: adc byte ptr [rax - 0x76cadbac], cl; ret 0xc031; 
0x000000000001ef72: adc byte ptr [rax - 0x76cedbac], cl; ret 0x448b; 
0x0000000000026ac9: adc byte ptr [rax - 0x77], cl; call 0x5c43c82c; ret; 
0x000000000003883f: adc byte ptr [rax - 0x77], cl; cli; syscall; 
0x000000000002695b: adc byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000055c8b: adc byte ptr [rax - 0x77], cl; js 0x55d08; ret; 
0x000000000004c7d0: adc byte ptr [rax - 0x77], cl; push rbx; or byte ptr [rax + 0x39], cl; ret 0xa73; 
0x000000000005a09e: adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000003d9a7: adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000000392c7: adc byte ptr [rax - 0x7b], cl; idiv byte ptr [rsi - 0x7ffbabd0]; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000025c77: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rax - 0x73], cl; adc eax, 0x6dbe3; cmove rax, rdx; ret; 
0x00000000000180cb: adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000004013b: adc byte ptr [rax - 1], bh; test edx, edx; cmove edx, eax; mov eax, edx; add rsp, 0x28; ret; 
0x0000000000045ba6: adc byte ptr [rax - 1], cl; ret; 
0x000000000004b138: adc byte ptr [rax], al; add byte ptr [rax + 0x106], bh; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000057e0b: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; 
0x0000000000057e0b: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x0000000000040908: adc byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x18; ret; 
0x0000000000046ecb: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000056aa3: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000054954: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566dc: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x0000000000023708: adc byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x0000000000023708: adc byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x144; syscall; ret; 
0x00000000000221f2: adc byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000056403: adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000389ed: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000573c4: adc byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000027810: adc byte ptr [rax], al; add byte ptr [rcx], dh; shr bl, cl; sub dword ptr [rax + 0xc], edi; syscall; 
0x0000000000023a91: adc byte ptr [rax], al; jne 0x23ab2; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000005b36b: adc byte ptr [rax], al; jne 0x5b38c; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x0000000000037392: adc byte ptr [rax], al; or rdx, rcx; or rax, rsi; add rax, rax; ret; 
0x000000000004bee6: adc byte ptr [rax], al; setne al; ret; 
0x000000000004459a: adc byte ptr [rbp + 0x2b], dh; call 0x21e65; mov rdi, r14; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000002397e: adc byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], 0x44; and al, 0x18; mov eax, 0x65; syscall; 
0x0000000000018f75: adc byte ptr [rbp + 0x48f675d2], al; sub eax, edi; sar rax, 2; ret; 
0x000000000008c132: adc byte ptr [rbp + 0x6e], ch; cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x000000000001917f: adc byte ptr [rbp + 0xbad2], al; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000001f6a3: adc byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000055c26: adc byte ptr [rbp - 0x47e78b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000003f6c2: adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000001c61a: adc byte ptr [rbx + 0x280f241c], cl; ret 0xd2e8; 
0x0000000000026d7b: adc byte ptr [rbx + 0x41], bl; pop rsi; pop r15; ret; 
0x000000000003df31: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000038092: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000039830: adc byte ptr [rbx + rcx*4 + 9], cl; syscall; 
0x0000000000039830: adc byte ptr [rbx + rcx*4 + 9], cl; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000046300: adc byte ptr [rbx - 0x57ccf16], al; or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x462ef; ret; 
0x00000000000361d3: adc byte ptr [rbx - 0x76e7dbbc], cl; ret; 
0x000000000003cdae: adc byte ptr [rbx - 0x77cf618], al; add al, 0x76; or byte ptr [rax - 1], cl; ret 0xeceb; 
0x00000000000388c6: adc byte ptr [rcx + 0x415d5bd0], cl; pop rsp; ret; 
0x00000000000562e2: adc byte ptr [rcx + 0x63], cl; jl 0x5630b; xor byte ptr [rax + 0x91], bh; syscall; 
0x0000000000058e70: adc byte ptr [rcx + 1], 0; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x0000000000058f38: adc byte ptr [rcx + 1], 0; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000057f37: adc byte ptr [rcx + 1], 0; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000055372: adc byte ptr [rcx + 7], bh; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000055371: adc byte ptr [rcx + 7], dil; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000057e81: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; 
0x0000000000057e81: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; ret; 
0x000000000004e2f1: adc byte ptr [rcx + rcx*4 - 0x20], cl; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004a8ad: adc byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000005aa7d: adc byte ptr [rcx - 0x75], cl; jo 0x5aa8a; xor r10d, r10d; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x0000000000027d42: adc byte ptr [rcx - 0x77], cl; ret; 
0x000000000001f2dc: adc byte ptr [rcx - 0x7d], cl; ret 0x4d10; 
0x000000000003fd82: adc byte ptr [rcx - 0x7d], cl; ret 0xeb1c; 
0x000000000004370e: adc byte ptr [rcx], al; add byte ptr [rax], al; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x000000000003a50b: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000005c599: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000023cd2: adc byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000021151: adc byte ptr [rcx], al; ret 0x8b41; 
0x0000000000050219: adc byte ptr [rcx], ch; ret; 
0x0000000000031eed: adc byte ptr [rcx], cl; ret; 
0x0000000000059088: adc byte ptr [rcx], dh; rol bl, 0x48; movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x000000000004bf55: adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7b], 0xd2; je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000021839: adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0x3c; ret 0x4800; 
0x000000000005a019: adc byte ptr [rcx], dh; test byte ptr [rax - 0x80], 0xff; sub eax, 0xff480875; ret; 
0x000000000001f9f9: adc byte ptr [rdi], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000002ffa8: adc byte ptr [rdi], cl; push rdi; leave; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000002f49c: adc byte ptr [rdi], cl; push rdi; leave; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x0000000000030546: adc byte ptr [rdi], cl; push rdi; leave; movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002fa19: adc byte ptr [rdi], cl; push rdi; leave; movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x000000000002c6ea: adc byte ptr [rdi], cl; push rdi; ret; 
0x000000000002b149: adc byte ptr [rdi], cl; sub cl, al; pop rbx; ret; 
0x00000000000361c1: adc byte ptr [rdi], cl; sub dl, al; pop rbx; ret; 
0x000000000001946f: adc byte ptr [rdi], cl; test ch, cl; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000000549a6: adc byte ptr [rdi], cl; xchg eax, ebp; ret 0xc2ff; 
0x000000000008d8bb: adc byte ptr [rdx + 0x18], dh; sar dword ptr [rdi], cl; ret 0x9725; 
0x00000000000333af: adc byte ptr [rdx + 0x59], bl; add rsp, 0x18; ret; 
0x000000000007084f: adc byte ptr [rdx - 0x43c483b7], cl; or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x00000000000366a8: adc byte ptr [rip + 0x5a322], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000365c8: adc byte ptr [rip + 0x5a3f2], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000036032: adc byte ptr [rip + 0x5a998], cl; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003564f: adc byte ptr [rip + 0x5b37b], dl; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x00000000000355a1: adc byte ptr [rip + 0x5b419], dl; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x00000000000354c8: adc byte ptr [rip + 0x5b502], cl; xorps xmm0, xmm1; ret; 
0x0000000000035434: adc byte ptr [rip + 0x5b586], cl; xorps xmm0, xmm1; ret; 
0x00000000000352e6: adc byte ptr [rip + 0x5b6e4], cl; xorps xmm0, xmm1; ret; 
0x000000000003513f: adc byte ptr [rip + 0x5b87b], cl; xorps xmm0, xmm1; ret; 
0x000000000003533c: adc byte ptr [rip + 0x5cdde], al; jne 0x35348; movapd xmm0, xmm1; ret; 
0x000000000003538c: adc byte ptr [rip + 0x5d836], al; jne 0x35397; movaps xmm0, xmm1; ret; 
0x00000000000342f6: adc byte ptr [rip + 0x5d934], al; add rsp, 0x40; pop rbx; ret; 
0x00000000000345f3: adc byte ptr [rip + 0x5e333], al; add rsp, 0x28; ret; 
0x00000000000336b6: adc byte ptr [rip + 0x5f1bc], al; ret; 
0x00000000000336bf: adc byte ptr [rip + 0x5f2eb], al; ret; 
0x0000000000032812: adc byte ptr [rip + 0x5f588], al; divsd xmm0, xmm1; ret; 
0x0000000000032a05: adc byte ptr [rip + 0x60171], cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ffae: adc byte ptr [rip + 0x61dec], al; divsd xmm0, xmm1; ret; 
0x000000000002fff5: adc byte ptr [rip + 0x625c5], cl; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003054c: adc byte ptr [rip + 0x6262a], al; divss xmm0, xmm1; ret; 
0x000000000002f4c4: adc byte ptr [rip + 0x62766], cl; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000030591: adc byte ptr [rip + 0x62871], cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f4a2: adc byte ptr [rip + 0x628f8], al; divsd xmm0, xmm1; ret; 
0x000000000002fa40: adc byte ptr [rip + 0x62ee6], cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa1f: adc byte ptr [rip + 0x63157], al; divss xmm0, xmm1; ret; 
0x000000000002dea5: adc byte ptr [rip + 0x63ef5], al; ret; 
0x000000000002c895: adc byte ptr [rip + 0x64135], cl; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002da8c: adc byte ptr [rip + 0x6430e], cl; movapd xmm0, xmm1; ret; 
0x000000000002c30f: adc byte ptr [rip + 0x646ab], cl; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002df29: adc byte ptr [rip + 0x64c4d], cl; movaps xmm0, xmm1; ret; 
0x000000000002dd01: adc byte ptr [rip + 0x64e75], cl; movaps xmm0, xmm1; ret; 
0x000000000002d234: adc byte ptr [rip + 0x6511e], al; call 0x33c87; add rsp, 0x20; pop rbx; ret; 
0x000000000002b43c: adc byte ptr [rip + 0x6558e], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b39c: adc byte ptr [rip + 0x6561e], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b2e0: adc byte ptr [rip + 0x656ea], cl; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c456: adc byte ptr [rip + 0x65c44], cl; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002ad74: adc byte ptr [rip + 0x65c46], cl; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c433: adc byte ptr [rip + 0x65c67], cl; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c44c: adc byte ptr [rip + 0x65eee], al; je 0x2c465; movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002aa95: adc byte ptr [rip + 0x65f35], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002bc94: adc byte ptr [rip + 0x65f96], cl; call 0x28914; add rsp, 0x28; ret; 
0x000000000002a989: adc byte ptr [rip + 0x66031], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a863: adc byte ptr [rip + 0x66167], cl; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002c9cb: adc byte ptr [rip + 0x661d7], al; je 0x2c9e3; movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9d5: adc byte ptr [rip + 0x66201], cl; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b3: adc byte ptr [rip + 0x66223], cl; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x000000000002b8f1: adc byte ptr [rip + 0x66339], al; ret; 
0x000000000002b900: adc byte ptr [rip + 0x6681a], al; ret; 
0x000000000002bd33: adc byte ptr [rip + 0x66bf3], cl; call 0x2894a; add rsp, 0x28; ret; 
0x0000000000029cdb: adc byte ptr [rip + 0x66cdf], cl; xorps xmm0, xmm1; ret; 
0x000000000002b989: adc byte ptr [rip + 0x66f9d], cl; movaps xmm0, xmm1; ret; 
0x0000000000028b01: adc byte ptr [rip + 0x67ec9], cl; xorps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000028ade: adc byte ptr [rip + 0x67edc], cl; xorps xmm1, xmm0; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000028a4c: adc byte ptr [rip + 0x691de], al; movsd qword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000028a74: adc byte ptr [rip + 0x69eb2], al; movss dword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000001cb51: adc byte ptr [rip + 0x73e69], dl; xorps xmm1, xmm2; ret; 
0x000000000001b950: adc byte ptr [rip + 0x7506a], cl; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001b699: adc byte ptr [rip + 0x75321], dl; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000001a01f: adc byte ptr [rip + 0x77c6b], cl; addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x000000000003da30: adc byte ptr [rip + 0xbf], bh; mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000002af73: adc byte ptr [rsi + 0xf], ah; sub cl, al; pop rbx; ret; 
0x0000000000036107: adc byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; ret; 
0x000000000001b765: adc byte ptr [rsi + 0xf], ah; sub dl, cl; pop rbx; ret; 
0x00000000000423f5: adc byte ptr [rsi - 0x77], ah; push rdi; add cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x000000000001c803: adc byte ptr [rsp + 0x10], dl; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000001ba1f: adc byte ptr [rsp + 0x1c], cl; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000002ea98: adc byte ptr [rsp + 0xc], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d22: adc byte ptr [rsp + 0xc], al; add rsp, 0x18; ret; 
0x000000000002896b: adc byte ptr [rsp + 0xc], cl; add rsp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000002ea32: adc byte ptr [rsp + 8], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d3f: adc byte ptr [rsp + 8], al; add rsp, 0x18; ret; 
0x00000000000364ce: adc byte ptr [rsp + 8], al; and eax, 1; mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x000000000004243b: adc byte ptr [rsp + 8], al; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x0000000000028935: adc byte ptr [rsp + 8], cl; add rsp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001ca51: adc byte ptr [rsp + 8], cl; add rsp, 0x28; ret; 
0x000000000001cd38: adc byte ptr [rsp + 8], cl; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d1a3: adc byte ptr [rsp + 8], cl; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002e4d6: adc byte ptr [rsp - 0x10], al; ret; 
0x000000000002e4c7: adc byte ptr [rsp - 0x10], dl; maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000370f0: adc byte ptr [rsp - 0x14], al; ret; 
0x00000000000370a5: adc byte ptr [rsp - 0x18], al; ret; 
0x0000000000028a85: adc byte ptr [rsp - 4], al; divss xmm0, xmm1; ret; 
0x000000000003518a: adc byte ptr [rsp - 4], al; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000001c9fc: adc byte ptr [rsp - 4], al; ret; 
0x000000000002e9b6: adc byte ptr [rsp - 4], cl; movaps xmm0, xmm1; ret; 
0x0000000000028b12: adc byte ptr [rsp - 4], cl; mulss xmm0, xmm1; ret; 
0x00000000000335f4: adc byte ptr [rsp - 4], cl; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000028a5d: adc byte ptr [rsp - 8], al; divsd xmm0, xmm1; ret; 
0x0000000000034fa6: adc byte ptr [rsp - 8], al; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000001ce32: adc byte ptr [rsp - 8], al; ret; 
0x000000000002e885: adc byte ptr [rsp - 8], cl; movapd xmm0, xmm1; ret; 
0x0000000000028aef: adc byte ptr [rsp - 8], cl; mulsd xmm0, xmm1; ret; 
0x0000000000033588: adc byte ptr [rsp - 8], cl; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000002e523: adc byte ptr [rsp - 8], dl; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000057bd0: adc byte ptr [rsp], al; add byte ptr [rax + 0x63], cl; jp 0x57c08; mov eax, 0xc8; syscall; 
0x00000000000363e4: adc byte ptr [rsp], al; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x000000000001bc73: adc byte ptr [rsp], dl; movapd xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x0000000000075fa9: adc ch, 0x80; leave; or bh, 0x80; xlatb; and dh, 0x80; int 0x80; 
0x0000000000043543: adc ch, bh; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x00000000000435aa: adc ch, bh; dec dword ptr [rax - 0x77]; ret; 
0x00000000000239e2: adc ch, byte ptr [rax]; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x000000000007fdd0: adc ch, byte ptr [rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000007fdcf: adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000003251e: adc cl, bl; insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cb47: adc cl, bl; leave; add rsp, 0x58; ret; 
0x0000000000052340: adc cl, byte ptr [rax + 0x39]; ret 0xf175; 
0x000000000004cb1c: adc cl, byte ptr [rax + 0x63]; clc; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x0000000000057312: adc cl, byte ptr [rax - 0x73]; je 0x5733b; or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000481d2: adc cl, byte ptr [rbp + 0x39]; sar dword ptr [rdi + 7], 0x7c; or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x00000000000233bf: adc cl, byte ptr [rbp - 0x7b]; sal byte ptr [rbp + 0xd], 0x49; mov edx, ebx; mov eax, 0xe8; syscall; 
0x000000000004f184: adc cl, byte ptr [rcx + 0x63]; cld; mov eax, 3; syscall; 
0x0000000000042bb9: adc cl, ch; add byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x0000000000005233: adc dh, bh; call qword ptr [rdi - 0x71]; 
0x000000000001524e: adc dh, bl; ret; 
0x0000000000049c38: adc dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call rax; 
0x0000000000004cb9: adc dh, ch; stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x0000000000092824: adc dh, cl; ret 0xde3f; 
0x00000000000912f0: adc dl, byte ptr [rcx + 0x68]; ret 0x9565; 
0x000000000002c1bf: adc dl, dh; divps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001b583: adc dl, dh; mulps xmm1, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c806: adc dl, dh; mulps xmm1, xmmword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x0000000000032820: adc dl, dh; subps xmm1, xmm0; xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000572a3: adc dword ptr [rax + 0x63], ecx; clc; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x000000000004a195: adc dword ptr [rax + 0x63], ecx; ret; 
0x000000000001e0d3: adc dword ptr [rax + rax], eax; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000056999: adc dword ptr [rax - 0x1c000000], 0x49ffffff; lea edi, [rcx + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000037986: adc dword ptr [rax - 0x1d1400b0], ecx; mov byte ptr [rax], 0; lea rax, [rip + 0x260680]; ret; 
0x0000000000045f30: adc dword ptr [rax - 0x77], ecx; ror dword ptr [rax + 0x63], 1; ret 0xc148; 
0x0000000000035336: adc dword ptr [rax - 0x7b], ecx; sal dl, 0xf; adc byte ptr [rip + 0x5cdde], al; jne 0x35348; movapd xmm0, xmm1; ret; 
0x00000000000465d5: adc dword ptr [rax - 0x7d], ecx; ret 0xeb04; 
0x00000000000435a9: adc dword ptr [rax], -3; dec dword ptr [rax - 0x77]; ret; 
0x000000000002303f: adc dword ptr [rax], eax; add byte ptr [rax], al; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000004cdfe: adc dword ptr [rax], eax; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000035385: adc dword ptr [rbp + 0xf], esi; test eax, eax; movss xmm0, dword ptr [rip + 0x5d836]; jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000028fcf: adc dword ptr [rbp + 8], eax; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000047fca: adc dword ptr [rbp - 0x6077f02e], eax; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x0000000000058028: adc dword ptr [rbp - 0x7b], eax; fisttp dword ptr [rdi]; xchg eax, ebp; ret; 
0x00000000000190de: adc dword ptr [rbp - 0x7b], eax; sal byte ptr [rsp + rcx + 0x48], 0x39; sal dword ptr [rbp - 0x29], 1; xor eax, eax; ret; 
0x0000000000024ada: adc dword ptr [rbp - 0xff70], ecx; dec dword ptr [rax - 0x73]; add eax, 0x640f8; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000028fca: adc dword ptr [rbp], ecx; movsd qword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000076d6b: adc dword ptr [rbx], -0x7c; ret; 
0x0000000000029748: adc dword ptr [rbx], eax; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000035dba: adc dword ptr [rbx], ecx; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000035afa: adc dword ptr [rbx], edx; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000077d12: adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x000000000004cb8b: adc dword ptr [rcx - 0x75], ecx; cmp al, 0x24; call rax; 
0x000000000003b8a1: adc dword ptr [rcx - 0xa], eax; ret 0x74c0; 
0x0000000000055b90: adc dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000004d4e3: adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x00000000000335d8: adc dword ptr [rdi], eax; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002969c: adc dword ptr [rdi], eax; ret; 
0x000000000004a21a: adc dword ptr [rdi], ecx; lahf; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x75], 0x5c; ret; 
0x0000000000033592: adc dword ptr [rdi], ecx; ret; 
0x00000000000296e0: adc dword ptr [rdi], esi; ret; 
0x00000000000296ab: adc dword ptr [rdi], esp; ret; 
0x0000000000023bb0: adc dword ptr [rdx + 0x800], edi; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000002231f: adc dword ptr [rdx + 1], edi; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000076d5a: adc dword ptr [rsi + rax - 0xc7c3d7c], eax; adc ebp, -0x7d; cli; add edi, -0x7d; rol dword ptr [rbx - 0x7bec7c16], 1; ret; 
0x0000000000076e9e: adc dword ptr [rsi - 0x693d6980], -0x38; xchg eax, esi; ret; 
0x000000000002eb5f: adc dword ptr [rsi], ecx; ret; 
0x000000000001cdb6: adc dword ptr [rsp + 0x10], ecx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b806: adc dword ptr [rsp + 0x10], ecx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba25: adc dword ptr [rsp + 0x10], ecx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001cdbc: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b80c: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba2b: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001da4f: adc dword ptr [rsp + 0x20], ebx; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c99d: adc dword ptr [rsp + 0x20], ecx; movss dword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001c9a3: adc dword ptr [rsp + 0x24], eax; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da55: adc dword ptr [rsp + 0x24], edx; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000033b2b: adc dword ptr [rsp + 0x28], eax; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c682: adc dword ptr [rsp + 0x28], ecx; movss dword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x0000000000033c29: adc dword ptr [rsp + 0x2c], eax; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c688: adc dword ptr [rsp + 0x2c], eax; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfd6: adc dword ptr [rsp + 0x30], ecx; movss dword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfdc: adc dword ptr [rsp + 0x34], eax; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000003373c: adc dword ptr [rsp + 0xc], eax; call 0x2248e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x00000000000336fa: adc dword ptr [rsp + 8], eax; call 0x2248e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001ca42: adc dword ptr [rsp + 8], eax; movapd xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000019c3e: adc dword ptr [rsp - 0x14], esp; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x0000000000019c38: adc dword ptr [rsp - 0x18], eax; movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000002f044: adc dword ptr [rsp - 0x1c], eax; ret; 
0x000000000002f00c: adc dword ptr [rsp - 0x20], eax; ret; 
0x00000000000370ea: adc dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002ef77: adc dword ptr [rsp - 4], eax; ret; 
0x0000000000028a7c: adc dword ptr [rsp - 4], eax; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000028b0c: adc dword ptr [rsp - 4], ecx; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000032bc6: adc dword ptr [rsp - 4], ecx; ret; 
0x00000000000338ef: adc dword ptr [rsp - 4], edx; movaps xmm0, xmm1; ret; 
0x000000000003547f: adc dword ptr [rsp - 4], edx; ret; 
0x000000000002ef3f: adc dword ptr [rsp - 8], eax; ret; 
0x0000000000028a54: adc dword ptr [rsp - 8], eax; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000002b8eb: adc dword ptr [rsp - 8], ecx; movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8fa: adc dword ptr [rsp - 8], ecx; movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x0000000000028ae9: adc dword ptr [rsp - 8], ecx; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002de94: adc dword ptr [rsp - 8], edx; movapd xmm0, xmm1; ret; 
0x000000000002de9f: adc dword ptr [rsp - 8], edx; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x00000000000353e6: adc dword ptr [rsp - 8], edx; ret; 
0x000000000001c6c7: adc dword ptr [rsp], ecx; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000027651: adc eax, 0; ret; 
0x0000000000005989: adc eax, 0x12a07c9a; ret 0x9dba; 
0x000000000007279e: adc eax, 0x17ff16ff; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000008b900: adc eax, 0x19b3ce1b; sbb dword ptr [rcx + 0x13a8e5bc], ebx; ret; 
0x000000000004dc0d: adc eax, 0x247616; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbe2: adc eax, 0x247641; movzx eax, byte ptr [rax]; ret; 
0x00000000000419e4: adc eax, 0x254897; xor esi, esi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004252c: adc eax, 0x255a8f; sub rax, 4; mov dword ptr [rax], edx; ret; 
0x0000000000018914: adc eax, 0x27f55f; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002f5cc: adc eax, 0x2f5be8; add dl, dh; mulps xmm0, xmmword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002fb41: adc eax, 0x3870e8; add bl, dh; mulps xmm0, xmmword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000006d910: adc eax, 0x393e190; cwde; cmp byte ptr [rax - 0x641765a6], bl; ret 0x534f; 
0x00000000000450a6: adc eax, 0x48000049; mov dword ptr [rbp], eax; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000464aa: adc eax, 0x4cb2d; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000005f676: adc eax, 0x54a41d82; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x0000000000018252: adc eax, 0x558948; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000035650: adc eax, 0x5b37b; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x00000000000355a2: adc eax, 0x5b419; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x00000000000321f1: adc eax, 0x60d62; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bd1: adc eax, 0x6127a; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000003145d: adc eax, 0x619da; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000008f740: adc eax, 0x67cc487b; ret; 
0x000000000002a7bc: adc eax, 0x6816b; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002a7b4: adc eax, 0x683e7; addss xmm2, dword ptr [rip + 0x6816b]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000029a6b: adc eax, 0x68448; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000026982: adc eax, 0x6ce77; test rax, rax; cmove rax, rdx; ret; 
0x00000000000263bf: adc eax, 0x6d847; mov rax, rdx; ret; 
0x0000000000025c7d: adc eax, 0x6dbe3; cmove rax, rdx; ret; 
0x000000000002275a: adc eax, 0x71004; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000001cb52: adc eax, 0x73e69; xorps xmm1, xmm2; ret; 
0x0000000000026b7b: adc eax, 0x74000027; fmul qword ptr [rax - 0x7d]; call qword ptr [rax]; 
0x000000000001b69a: adc eax, 0x75321; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000004d326: adc eax, 0x787b6348; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000001eeaf: adc eax, 0x89fffffb; ret 0x3a41; 
0x0000000000029a63: adc eax, 0xd4590ff2; subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000051f2f: adc eax, dword ptr [rax + rax]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x000000000004baea: adc eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000006291: adc eax, dword ptr [rax]; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], bl; ret; 
0x0000000000055402: adc eax, dword ptr [rbp + 0x58dd75c0]; pop rbx; pop rbp; ret; 
0x000000000002335b: adc eax, dword ptr [rbp - 0x40f08a2e]; add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xd5; syscall; 
0x0000000000023bd6: adc eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000292d7: adc eax, dword ptr [rcx]; ret; 
0x0000000000076d61: adc ebp, -0x7d; cli; add edi, -0x7d; rol dword ptr [rbx - 0x7bec7c16], 1; ret; 
0x0000000000023da9: adc ebp, dword ptr [rdi + rdi*8]; dec dword ptr [rcx - 0x77]; retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000005544: adc ebp, dword ptr [rsi + 0x4fc3242e]; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x0000000000021730: adc ebp, ecx; stosb byte ptr [rdi], al; jb 0x21734; call qword ptr [rbx + 0x48]; 
0x00000000000434a4: adc ebp, edi; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x0000000000043444: adc ebp, edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000020532: adc ebx, dword ptr [rcx]; int 0xe0; pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000005661b: adc ecx, dword ptr [rax + 0x63]; clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000022686: adc ecx, dword ptr [rax + 0x63]; dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x0000000000055a18: adc ecx, dword ptr [rax - 0x75]; adc byte ptr [rax - 0x75], cl; js 0x55a28; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000488fa: adc ecx, dword ptr [rax - 0x75]; and byte ptr [r8 - 0x75], r9b; je 0x48927; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x00000000000263ab: adc ecx, dword ptr [rax - 0x77]; adc ecx, dword ptr [rax - 0x77]; ret 0x8948; 
0x00000000000263ae: adc ecx, dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000003ae5d: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000000388a6: adc ecx, dword ptr [rax - 1]; ret 0x8948; 
0x0000000000058275: adc ecx, dword ptr [rax - 1]; ror byte ptr [rcx + rcx*4 - 0x39], 0x49; mov dword ptr [rax], eax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x000000000004b192: adc ecx, dword ptr [rbx - 0x2f]; movsxd rdi, r9d; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x00000000000556a2: adc ecx, dword ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000002effd: adc ecx, dword ptr [rdi]; push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef30: adc ecx, dword ptr [rdi]; push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x0000000000002e0e: adc ecx, dword ptr [rdx - 0x5e]; and byte ptr [rcx], al; add byte ptr [rdx], cl; and byte ptr [rcx], cl; ret; 
0x000000000006238c: adc ecx, dword ptr [rip + 0x73545338]; or ah, byte ptr [rbp - 0x45]; or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x000000000007279a: adc edi, edi; adc al, 0xff; adc eax, 0x17ff16ff; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000003e5fa: adc edi, edi; ret; 
0x000000000005af22: adc edx, dword ptr [rax + rax]; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x000000000004b703: adc edx, dword ptr [rax + rax]; mov eax, 0x10; syscall; 
0x000000000004191b: adc edx, dword ptr [rax - 0x18]; cmpsb byte ptr gs:[rsi], byte ptr [rdi]; add byte ptr [rax], al; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x000000000002fff2: adc edx, esi; movups xmm1, xmmword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002f4c1: adc edx, esi; movups xmm1, xmmword ptr [rip + 0x62766]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c453: adc edx, esi; movups xmm1, xmmword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003280b: adc edx, esi; mulps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x00000000000355d9: adc edx, esi; subps xmm1, xmm1; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035334: adc esi, dword ptr [rbp + 0x11]; test rax, rax; movsd xmm0, qword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x0000000000054c5d: adc esi, edi; ret 0xffff; 
0x000000000002b8d5: adc esp, dword ptr [rsi + 0xf]; fptan; addps xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x0000000000049b61: adc esp, dword ptr [rsi - 0x27770000]; neg eax; pop rbx; ret; 
0x0000000000092bf0: adc r11b, r10b; mov ebp, 0x3e4cca98; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x000000000006238b: adc r9, qword ptr [rip + 0x73545338]; or ah, byte ptr [rbp - 0x45]; or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x000000000005f675: adc rax, 0x54a41d82; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x00000000000648b9: add ah, bh; jmp rax; 
0x000000000008d5d9: add ah, ch; ret 0x1203; 
0x00000000000528bd: add al, 0; add byte ptr [rax - 0x73], cl; add eax, 0x40ad1; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x00000000000087ea: add al, 0; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004eb97: add al, 0; add byte ptr [rax], al; call 0x4d924; add rsp, 0x18; dec eax; ret; 
0x0000000000023bb7: add al, 0; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x0000000000040876: add al, 0; add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004326b: add al, 0; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000004b185: add al, 0; add byte ptr [rax], al; mov rdi, r8; mov rsi, rbx; syscall; 
0x000000000004b6c3: add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004d348: add al, 0; add byte ptr [rax], al; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000005abbd: add al, 0; add byte ptr [rax], al; xor eax, eax; syscall; 
0x0000000000022231: add al, 0; add byte ptr [rbp + 0x5f], dh; mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x0000000000051422: add al, 0; add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x000000000005ac04: add al, 0; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000040663: add al, 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000002223e: add al, 0; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x0000000000004039: add al, 0; add byte ptr [rsp + rax + 0x4c00000], bh; add byte ptr [rax], al; rol dword ptr [rax + rax], 0; ret; 
0x0000000000042445: add al, 0; add rsp, 0x18; ret; 
0x00000000000464ad: add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000004f499: add al, 0; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000506c6: add al, 0; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x00000000000528c5: add al, 0; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x0000000000051f30: add al, 0; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000506ac: add al, 0; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000052749: add al, 0; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000001e0d4: add al, 0; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000051140: add al, 0; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x000000000004a5ee: add al, 0; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5ee: add al, 0; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000002719d: add al, 0x11; add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000003dc71: add al, 0x1c; cmp cl, byte ptr [rax + 0x63]; ret 0x8944; 
0x00000000000597d9: add al, 0x1f; sub ebp, ebx; ret; 
0x0000000000057bd1: add al, 0x24; add byte ptr [rax + 0x63], cl; jp 0x57c08; mov eax, 0xc8; syscall; 
0x000000000001e1fc: add al, 0x24; add dword ptr [rax + 0xcc], edi; mov rdi, rcx; syscall; 
0x000000000005c7c1: add al, 0x24; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000001c6cb: add al, 0x24; add rsp, 0x18; fxch st(1); ret; 
0x000000000004d558: add al, 0x24; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000022e40: add al, 0x24; add rsp, 0x18; ret; 
0x000000000001bda5: add al, 0x24; add rsp, 0x20; pop rbx; ret; 
0x000000000001b658: add al, 0x24; add rsp, 0x30; pop rbx; ret; 
0x000000000001baf7: add al, 0x24; add rsp, 0x38; ret; 
0x00000000000239a6: add al, 0x24; add rsp, 0x50; pop rbx; ret; 
0x0000000000023bfb: add al, 0x24; call 0x23b19; add rsp, 0x18; ret; 
0x000000000005b5e8: add al, 0x24; imul eax, edx, 0x3e8; mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x000000000005a13a: add al, 0x24; je 0x5a141; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000005a284: add al, 0x24; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x00000000000363e5: add al, 0x24; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x000000000001c6c3: add al, 0x24; movsd qword ptr [rsp], xmm1; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000021e68: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x0000000000023508: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021aa0: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c98: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x0000000000022994: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000005701e: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001819f: add al, 0x2b; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000569e3: add al, 0x39; ret; 
0x0000000000056c9e: add al, 0x41; or dword ptr [rax], 8; ret; 
0x0000000000026ff0: add al, 0x42; shl eax, 4; cdqe; ret; 
0x0000000000017faf: add al, 0x48; add eax, 1; cmp byte ptr [rax], 0; jne 0x17fb0; sub rax, rdi; ret; 
0x000000000003067d: add al, 0x48; add esp, 0x18; ret; 
0x0000000000026ff4: add al, 0x48; cwde; ret; 
0x0000000000026fb5: add al, 0x48; dec ecx; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x0000000000049fb0: add al, 0x48; mov dword ptr [rax + 8], edi; ret; 
0x0000000000054a02: add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x54a0e; call rax; 
0x00000000000239a3: add al, 0x48; mov eax, dword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000005b358: add al, 0x48; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x000000000004aba1: add al, 0x48; or edx, 0xffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x0000000000019647: add al, 0x48; sub edx, 1; jne 0x19640; xor eax, eax; ret; 
0x000000000003af4f: add al, 0x49; mov dword ptr [rsp], ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000004085e: add al, 0x4c; mov eax, eax; syscall; 
0x0000000000024aea: add al, 0x50; ret; 
0x0000000000005538: add al, 0x50; test dword ptr [rbx], ebx; cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x0000000000077466: add al, 0x56; call qword ptr [rbp - 7]; 
0x00000000000735be: add al, 0x57; ret 0xd457; 
0x00000000000580e6: add al, 0x5b; pop rbp; ret; 
0x000000000002eca7: add al, 0x66; movaps xmm0, xmm1; add rsp, 0x38; ret; 
0x0000000000035343: add al, 0x66; movaps xmm0, xmm1; ret; 
0x000000000001d872: add al, 0x66; movaps xmm1, xmm0; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001e0dc: add al, 0x70; ret; 
0x000000000003a40f: add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000039d5d: add al, 0x74; out 0x48, al; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004b6bc: add al, 0x75; adc byte ptr [rax + 0x4be04cc], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000005abc8: add al, 0x75; fisttp qword ptr [rax + 0x63]; jl 0x5abf3; adc byte ptr [rax + 3], bh; syscall; 
0x0000000000037831: add al, 0x75; out dx, eax; ret; 
0x000000000003cdb4: add al, 0x76; or byte ptr [rax - 1], cl; ret 0xeceb; 
0x00000000000261e5: add al, 0x77; add eax, 0xebc0ff48; out dx, al; cmp cl, 0x20; je 0x261e8; ret; 
0x000000000008cd0d: add al, 0x7b; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x000000000003dc52: add al, 0x7d; add eax, 0x89f28944; ret; 
0x00000000000392ce: add al, 0x80; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000000328f: add al, 0x81; add al, 1; ret; 
0x0000000000043117: add al, 0x82; add rax, r10; jmp rax; 
0x0000000000031464: add al, 0x82; add rdx, rax; jmp rdx; 
0x0000000000018e27: add al, 0x83; pop rbx; ret; 
0x0000000000018d90: add al, 0x84; pop rbp; pop r12; ret; 
0x00000000000556ec: add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000005462b: add al, 0x89; ret 0xddeb; 
0x000000000001e2a9: add al, 0x89; ret; 
0x0000000000018f73: add al, 0x8b; adc byte ptr [rbp + 0x48f675d2], al; sub eax, edi; sar rax, 2; ret; 
0x000000000004e4fc: add al, 0x8b; and al, 0xc; add rsp, 0x10; pop rbx; ret; 
0x000000000003d8b8: add al, 0x8b; push rsp; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000004b6c1: add al, 0xbe; add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x00000000000262a8: add al, 0xbe; add rax, r14; jmp rax; 
0x000000000005498e: add al, 0xc1; call 0x1e5cc99; ret; 
0x0000000000044b4c: add al, 0xc2; ret; 
0x000000000000328b: add al, 0xc; add byte ptr [rcx], al; add al, 0x81; add al, 1; ret; 
0x000000000002298e: add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000005484b: add al, 0xca; ret; 
0x000000000001b867: add al, 0xd9; leave; fchs; add rsp, 0xa0; pop rbx; ret; 
0x000000000004f8cb: add al, 0xdc; ret 0xeade; 
0x0000000000024084: add al, 0xe8; ret; 
0x0000000000021218: add al, 0xeb; fisttp word ptr [rcx + 0x415d5bd8]; pop rsp; ret; 
0x00000000000548c0: add al, 0xf0; dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000029745: add al, 0xf2; movups xmmword ptr [rbx], xmm0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002a319: add al, 0xf3; addps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000005632b: add al, 0xf8; ret; 
0x000000000005514f: add al, 0xf; add eax, 0x894d4feb; ret; 
0x000000000002af05: add al, 0xf; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x000000000004310e: add al, 0xf; xchg dword ptr [rcx + 0x49000000], edi; movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x0000000000020dc7: add al, 0xf; xchg eax, esi; ret 0xff83; 
0x0000000000044276: add al, 0xfd; dec dword ptr [rax - 0x77]; fucomip st(3); out dx, al; pop rbx; ret; 
0x0000000000084ebe: add al, 0xff; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000007c3cc: add al, 0xff; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000025000: add al, 0xff; ret 0xc889; 
0x000000000003f8b1: add al, 0xff; ret 0xe9eb; 
0x0000000000033bda: add al, 0xff; ret; 
0x000000000005acd9: add al, 1; add byte ptr [rax], al; syscall; 
0x0000000000020e38: add al, 1; mov ecx, edi; and ecx, 7; sar eax, cl; and eax, 1; ret; 
0x0000000000003294: add al, 1; ret; 
0x00000000000275b4: add al, 2; add byte ptr [rax - 1], cl; ror byte ptr [rax - 0x7d], 0xf8; and byte ptr [rbp - 0x14], dh; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x00000000000324b6: add al, 6; add dh, bl; ret 0xc1de; 
0x0000000000003353: add al, 6; sub byte ptr [rax - 0x80], al; add al, byte ptr [rax]; add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x00000000000275f9: add al, 9; ret 0xd089; 
0x000000000007c3cf: add al, ah; jmp rcx; 
0x00000000000928e5: add al, ah; ret; 
0x0000000000004273: add al, al; add eax, 0x5c10000; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000007c349: add al, bh; add ch, byte ptr [rax + 0x5300300]; xor byte ptr [rax], dl; pop rsi; call qword ptr [rsi]; 
0x000000000002ca5e: add al, bl; ret 0xcad8; 
0x000000000002cbe3: add al, bl; ret; 
0x000000000003b95a: add al, byte ptr [rax + rax*8 + 0x29480775]; cli; lea eax, [rdx + 1]; ret; 
0x000000000002196d: add al, byte ptr [rax - 0x9bf0000]; rol byte ptr [rsi], 1; and byte ptr [rbx + rcx + 0x4c], dh; mov eax, ecx; syscall; 
0x0000000000040a51: add al, byte ptr [rax]; add bh, dh; ret; 
0x00000000000495dc: add al, byte ptr [rax]; add bl, ch; ret; 
0x0000000000042974: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000003359: add al, byte ptr [rax]; add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x000000000005a03c: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], cl; fmul dword ptr [rax + 0x39]; ret; 
0x00000000000019b5: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 4], dh; add byte ptr [rax], al; ret 2; 
0x000000000003c5ac: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x3c35a; add rsp, 0x18; ret; 
0x000000000004a447: add al, byte ptr [rax]; add byte ptr [rax], al; jmp rax; 
0x0000000000021755: add al, byte ptr [rax]; add byte ptr [rax], al; lea rdi, [rip + 0x276974]; mov eax, 0xda; syscall; 
0x0000000000059071: add al, byte ptr [rax]; add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000004bae5: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x13; syscall; 
0x000000000005aa21: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022326: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000004a620: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x0000000000055c50: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a620: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xe; syscall; ret; 
0x0000000000021947: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 7; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004084d: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x000000000002228a: add al, byte ptr [rax]; add byte ptr [rax], al; mov rax, r9; syscall; 
0x0000000000037fb3: add al, byte ptr [rax]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000004f14a: add al, byte ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x0000000000024188: add al, byte ptr [rax]; add byte ptr [rax], al; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000004ae0b: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004ae0b: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x0000000000057d5c: add al, byte ptr [rax]; add byte ptr [rax], al; test eax, eax; cmovne eax, edx; pop rdx; ret; 
0x000000000004ade0: add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000003cab6: add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000444dc: add al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 9], cl; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000020f7e: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret; 
0x000000000003a533: add al, byte ptr [rax]; add rsp, 0x118; ret; 
0x0000000000037f72: add al, byte ptr [rax]; add rsp, 0x120; pop rbx; ret; 
0x0000000000022e18: add al, byte ptr [rax]; add rsp, 0x28; ret; 
0x00000000000275b5: add al, byte ptr [rax]; inc rax; cmp rax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000023a9a: add al, byte ptr [rax]; mov eax, 0x27; syscall; 
0x0000000000038b0b: add al, byte ptr [rax]; mov eax, ebp; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000023046: add al, byte ptr [rax]; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x0000000000022fe6: add al, byte ptr [rax]; mov qword ptr [rip + 0x274dad], 0; pop rdx; ret; 
0x00000000000229e4: add al, byte ptr [rax]; mov rdx, rbx; add rsp, 0x840; mov rax, rdx; pop rbx; ret; 
0x0000000000023cf0: add al, byte ptr [rax]; push rax; mov eax, 0x99; syscall; 
0x000000000002759d: add al, byte ptr [rax]; ret; 
0x0000000000020e4b: add al, byte ptr [rax]; setbe al; ret; 
0x0000000000050de0: add al, byte ptr [rbx + 0x1d7705fe]; lea rax, [rip + 0x4235b]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000054b43: add al, byte ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x000000000001e77d: add al, byte ptr [rbx - 0x76bec01f]; ret; 
0x00000000000168a3: add al, byte ptr [rcx - 0x3a]; add dword ptr [rax], esi; mov byte ptr [rdi + rax], 0; ret; 
0x000000000004b319: add al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000003f66d: add al, byte ptr [rcx]; add eax, 0x258944; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x0000000000070eb4: add al, byte ptr [rsi + rax*8 - 0x80]; or dword ptr [rcx + 0x67b48142], eax; ret; 
0x0000000000003352: add al, byte ptr [rsi + rax]; sub byte ptr [rax - 0x80], al; add al, byte ptr [rax]; add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x000000000008adef: add al, ch; add byte ptr [r12 - 0x22], dil; add byte ptr [rbx - 0x26ff279c], bl; mov esi, 0x97a40031; ret; 
0x000000000005919f: add al, ch; and byte ptr [rbp + 0x595affff], dh; pop rsi; neg eax; ret; 
0x0000000000022005: add al, ch; and byte ptr [rsi], 3; add byte ptr [rcx + 0x5d5b5ad8], cl; ret; 
0x000000000005a252: add al, ch; and dword ptr [rax - 0x74b70001], esi; jl 0x5a280; sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000005e550: add al, ch; call rsp; 
0x000000000004274b: add al, ch; cmp bl, byte ptr [rdi]; add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x0000000000018e1f: add al, ch; cmp eax, dword ptr [rcx]; add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000005523a: add al, ch; fistp dword ptr [rip + 0x39480000]; ret; 
0x00000000000590b7: add al, ch; fsincos; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000022602: add al, ch; mov ebp, 0x48000320; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000054500: add al, ch; mov edi, 0x48000001; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ad00: add al, ch; mov edi, 0x48ffff99; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000023042: add al, ch; mov edx, 0x48000298; mov dword ptr [rip + 0x274d51], eax; pop rax; ret; 
0x000000000004c0ba: add al, ch; mov esi, 0x9ffffff; ret; 
0x000000000002a3ce: add al, ch; pop rcx; add dword ptr [rax], 0x580ff200; add eax, 0x67cb4; add rsp, 0x18; ret; 
0x0000000000039247: add al, ch; push -0x77000000; ret; 
0x000000000004198a: add al, ch; push 0; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003fc59: add al, ch; ret 0x144; 
0x00000000000261c2: add al, ch; ret; 
0x000000000001a99f: add al, ch; sti; ret; 
0x000000000001e0e4: add al, ch; sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003c6b5: add al, ch; test dword ptr [rdi - 3], edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000056aa6: add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000054957: add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566df: add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x000000000002e854: add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032703: add al, dh; dec dword ptr [rax + 1]; ret 0xff2; 
0x0000000000032bb7: add al, dh; jg 0x32bca; test dword ptr [rbx - 0xdffffff], eax; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000005a51f: add al, dh; or dword ptr [rsp], 0; mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000056c95: add al, dh; or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf1: add al, dh; or dword ptr [rsp], 0; test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x000000000000628f: add al, dl; adc eax, dword ptr [rax]; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], bl; ret; 
0x0000000000016f30: add bh, al; add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x0000000000066d9b: add bh, bh; call qword ptr [rcx]; 
0x000000000008ff7d: add bh, bh; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rbx], cl; jmp qword ptr [rbx]; 
0x0000000000035604: add bh, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000381d6: add bh, bh; ret 0x1389; 
0x000000000003dc83: add bh, bh; ret 0x14c; 
0x0000000000027610: add bh, bh; ret 0xd089; 
0x000000000003086a: add bh, bh; ret; 
0x000000000001e0b1: add bh, bh; ror byte ptr [rax - 0x68], 0x5a; ret; 
0x0000000000057370: add bh, byte ptr [rax + 0x16]; ja 0x5739e; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x0000000000056c4e: add bh, byte ptr [rax + 0x5f]; je 0x56ca3; test esi, esi; je 0x56c60; mov eax, 0x16; ret; 
0x00000000000919df: add bh, ch; ret 0x705f; 
0x0000000000028fb3: add bh, dh; fmul dword ptr [rdi]; push rdi; retf 0x570f; ret 0xff2; 
0x0000000000027764: add bh, dh; ret; 
0x00000000000370df: add bh, dh; shl byte ptr [rcx], 1; ror byte ptr [rcx - 0xc13dbbc], 1; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000550d9: add bl, al; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000005a985: add bl, al; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000003a53b: add bl, al; movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x0000000000039ceb: add bl, al; push rax; mov eax, 0x3f; syscall; 
0x00000000000087df: add bl, bh; and eax, 0x120000; or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x000000000001cb43: add bl, bl; insb byte ptr [rdi], dx; and al, 0x10; fxch st(1); add rsp, 0x58; ret; 
0x0000000000034c3f: add bl, bl; lodsb al, byte ptr [rsi]; and al, 0xa0; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000086806: add bl, byte ptr [rax + 0x52c59ce5]; push rdi; movsxd rsi, esp; jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x0000000000018ef3: add bl, byte ptr [rbp + 0x41]; pop rsp; ret; 
0x0000000000018ed8: add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000778c6: add bl, byte ptr [rcx - 0x66f86700]; popfq; cdq; pushfq; cdq; ret; 
0x000000000005a352: add bl, ch; add dh, byte ptr [rcx]; test byte ptr [rax + 0x63], 0xfd; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x0000000000022087: add bl, ch; cwde; pop rax; pop rbx; pop rbp; ret; 
0x000000000002aef9: add bl, ch; je 0x2aef3; ret; 
0x0000000000021a8d: add bl, ch; or cl, byte ptr [rax + 0x69]; ret; 
0x000000000005a319: add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x00000000000431b8: add bl, ch; or dword ptr [rcx + 0x63], ecx; js 0x431d3; mov eax, 0x51; syscall; 
0x000000000002bd2e: add bl, ch; or eax, 0xd100ff3; imul eax, dword ptr [rsi], 0; call 0x2894a; add rsp, 0x28; ret; 
0x000000000004924b: add bl, ch; ret; 
0x000000000003ad37: add bl, ch; sbb esi, esi; ret; 
0x000000000002a47f: add bl, dh; addps xmm0, xmmword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000002a1ad: add bl, dh; addps xmm0, xmmword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000030677: add bl, dh; addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002a7b8: add bl, dh; addps xmm2, xmmword ptr [rip + 0x6816b]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002fa24: add bl, dh; divps xmm0, xmm1; ret; 
0x000000000002a1b5: add bl, dh; divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002a7c0: add bl, dh; divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000028a79: add bl, dh; movups xmmword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000002fb46: add bl, dh; mulps xmm0, xmmword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002c745: add bl, dh; mulps xmm0, xmmword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x0000000000018d2f: add bl, dh; ret; 
0x000000000001e1f8: add bl, dh; stosd dword ptr [rdi], eax; mov byte ptr [rsp], 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000054940: add bl, dh; stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000043673: add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x000000000002fb4e: add bl, dh; subps xmm0, xmmword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002c9da: add bl, dh; subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b8: add bl, dh; subps xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x000000000001a216: add bpl, bl; fcmovu st(0), st(5); fcmovu st(0), st(1); leave; ret; 
0x00000000000235a5: add byte ptr [eax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5affff34; ret; 
0x00000000000450ac: add byte ptr [r10 + 0x5b], r11b; pop rbp; ret; 
0x000000000008adf2: add byte ptr [r12 - 0x22], dil; add byte ptr [rbx - 0x26ff279c], bl; mov esi, 0x97a40031; ret; 
0x0000000000057eff: add byte ptr [r8 + 3], r15b; mov rdi, r12; syscall; 
0x0000000000021e3a: add byte ptr [r8 - 0x7d], r9b; ret; 
0x000000000003a774: add byte ptr [r8], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x0000000000059432: add byte ptr [r8], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x000000000004d870: add byte ptr [r8], al; add rsp, 0xd8; ret; 
0x00000000000450a7: add byte ptr [r8], al; mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022590: add byte ptr [r8], r8b; add byte ptr [rdi], cl; add eax, 0xe8f86348; and al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x000000000004b01e: add byte ptr [rax + 0x101], bh; syscall; 
0x000000000004b13a: add byte ptr [rax + 0x106], bh; mov rsi, r8; mov rdx, rbx; syscall; 
0x000000000004b706: add byte ptr [rax + 0x10], bh; syscall; 
0x00000000000569ad: add byte ptr [rax + 0x111], bh; syscall; 
0x00000000000233b0: add byte ptr [rax + 0x119], bh; syscall; 
0x0000000000023b6b: add byte ptr [rax + 0x121], bh; syscall; 
0x000000000004bae8: add byte ptr [rax + 0x13], bh; syscall; 
0x000000000002370b: add byte ptr [rax + 0x144], bh; syscall; 
0x000000000002370b: add byte ptr [rax + 0x144], bh; syscall; ret; 
0x0000000000091365: add byte ptr [rax + 0x14e86bd], dl; rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x000000000000afb7: add byte ptr [rax + 0x16], dl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x000000000004b014: add byte ptr [rax + 0x1b740000], ah; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000008e318: add byte ptr [rax + 0x1c], ah; ret 0x618b; 
0x000000000001d6db: add byte ptr [rax + 0x21], cl; ret 0x3948; 
0x0000000000023a9b: add byte ptr [rax + 0x27], bh; syscall; 
0x0000000000024612: add byte ptr [rax + 0x29], cl; fmul dword ptr [rcx - 0x77]; ret 0x8d48; 
0x00000000000168be: add byte ptr [rax + 0x29], cl; ret 0x8548; 
0x0000000000049aab: add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000003abeb: add byte ptr [rax + 0x29], cl; ret; 
0x000000000000700f: add byte ptr [rax + 0x2a], dh; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x00000000000427de: add byte ptr [rax + 0x39], bh; syscall; 
0x00000000000550c6: add byte ptr [rax + 0x39], cl; int1; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000005e4da: add byte ptr [rax + 0x39], cl; ret 0x8948; 
0x0000000000017dba: add byte ptr [rax + 0x39], cl; ret; 
0x0000000000026a4c: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000054c27: add byte ptr [rax + 0x39], cl; sal dword ptr [rdi + 0xd], 1; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x0000000000026040: add byte ptr [rax + 0x39], cl; xlatb; setne dl; movzx edx, dl; and eax, edx; ret; 
0x000000000005aa5a: add byte ptr [rax + 0x3c], bh; syscall; 
0x000000000000f3df: add byte ptr [rax + 0x3c], ch; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x5b2; 
0x000000000009281d: add byte ptr [rax + 0x3e524441], ah; fist word ptr [rdx]; int1; ret 0xde3f; 
0x00000000000921ea: add byte ptr [rax + 0x3fc3d4fa], al; pop rsp; ret 0xc69a; 
0x000000000008ee4c: add byte ptr [rax + 0x3feb], ah; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x000000000008e74c: add byte ptr [rax + 0x3ff2], ah; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x000000000008f786: add byte ptr [rax + 0x4001], ch; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x000000000008d8b8: add byte ptr [rax + 0x43], ah; adc byte ptr [rdx + 0x18], dh; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000002f040: add byte ptr [rax + 0x44110ff3], al; and al, 0xe4; ret; 
0x000000000002ef73: add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; ret; 
0x000000000002b9d7: add byte ptr [rax + 0x4489d009], al; and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9ac: add byte ptr [rax + 0x4489f809], al; and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x000000000003ad77: add byte ptr [rax + 0x48067580], 0x83; ret 0xeb04; 
0x00000000000181f0: add byte ptr [rax + 0x485b0038], al; cmove eax, edx; ret; 
0x000000000005aa24: add byte ptr [rax + 0x48], bh; mov rdi, r8; syscall; 
0x000000000004cb24: add byte ptr [rax + 0x48], bh; mov rsi, r12; syscall; 
0x000000000004b83d: add byte ptr [rax + 0x48], bh; mov rsi, r13; syscall; 
0x0000000000022329: add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000022329: add byte ptr [rax + 0x48], bh; syscall; call 0x169c0; add rsp, 0x50; pop rbx; ret; 
0x0000000000023bba: add byte ptr [rax + 0x48], bh; syscall; call 0x169c0; pop rdx; ret; 
0x000000000004b0c4: add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x169c0; pop rdx; ret; 
0x0000000000033543: add byte ptr [rax + 0x48d02148], al; mov dword ptr [rdi], eax; ret; 
0x000000000003356a: add byte ptr [rax + 0x48d02148], al; mov dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002b9b2: add byte ptr [rax + 0x48d02148], al; or eax, ecx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005b1c6: add byte ptr [rax + 0x59], bh; syscall; 
0x0000000000039da7: add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x00000000000148f2: add byte ptr [rax + 0x5c415d5b], al; pop r13; ret; 
0x0000000000054be0: add byte ptr [rax + 0x5f], bh; cmovne eax, edx; ret; 
0x00000000000255ef: add byte ptr [rax + 0x63], cl; adc al, 0x90; add rax, rdx; jmp rax; 
0x000000000005274a: add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x0000000000020ea6: add byte ptr [rax + 0x63], cl; adc al, 0xb0; add rax, rdx; jmp rax; 
0x0000000000031461: add byte ptr [rax + 0x63], cl; add al, 0x82; add rdx, rax; jmp rdx; 
0x000000000005b2c1: add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; 
0x000000000005b2c1: add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000002325f: add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000002331d: add byte ptr [rax + 0x63], cl; clc; call 0x169c0; add rsp, 0x68; ret; 
0x0000000000040848: add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x0000000000040871: add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005a9a1: add byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; test byte ptr [rcx + rcx*4 - 0x40], 0xf; add eax, 0x89f0f883; ret 0xf474; 
0x0000000000043045: add byte ptr [rax + 0x63], cl; jae 0x4304e; xor edi, edi; mov eax, 0x6d; syscall; 
0x00000000000560aa: add byte ptr [rax + 0x63], cl; je 0x560d3; push 0x24c28348; syscall; 
0x0000000000049b3d: add byte ptr [rax + 0x63], cl; jg 0x49b72; syscall; 
0x000000000005a529: add byte ptr [rax + 0x63], cl; jg 0x5a55e; mov eax, 0xc8; syscall; 
0x000000000005a529: add byte ptr [rax + 0x63], cl; jg 0x5a55e; mov eax, 0xc8; syscall; xor eax, eax; ret; 
0x000000000004e6d0: add byte ptr [rax + 0x63], cl; jl 0x4e681; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000057bd3: add byte ptr [rax + 0x63], cl; jp 0x57c08; mov eax, 0xc8; syscall; 
0x000000000004a763: add byte ptr [rax + 0x63], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000024d90: add byte ptr [rax + 0x63], cl; or al, 0x88; add rax, rcx; jmp rax; 
0x000000000004f49a: add byte ptr [rax + 0x63], cl; or al, 0xb0; add rax, rcx; jmp rax; 
0x0000000000047fd2: add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x00000000000381ad: add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x000000000003f639: add byte ptr [rax + 0x63], cl; ret 0xff51; 
0x0000000000014e77: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000056fd6: add byte ptr [rax + 0x63], cl; rol byte ptr [rbx - 0x76b3fe32], cl; ror byte ptr [rax + 0x63], 0xf6; syscall; 
0x000000000005a9eb: add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x000000000004b6c6: add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000004b6ac: add byte ptr [rax + 0x63], cl; std; mov esi, 3; mov rax, r8; syscall; 
0x0000000000049b2d: add byte ptr [rax + 0x63], cl; sti; call 0x169c0; pop rbx; ret; 
0x000000000003a6e8: add byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x000000000004e4dc: add byte ptr [rax + 0x63], cl; sti; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000001e0d5: add byte ptr [rax + 0x63], cl; test byte ptr [rax + 0xf], 0xbf; add al, 0x70; ret; 
0x000000000008ee78: add byte ptr [rax + 0x65fcb015], dl; ret; 
0x0000000000043080: add byte ptr [rax + 0x66], bh; syscall; 
0x000000000008d178: add byte ptr [rax + 0x6b], al; ret; 
0x000000000008e758: add byte ptr [rax + 0x71fc201e], dl; ret; 
0x00000000000513b9: add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x000000000008db34: add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x0000000000016eae: add byte ptr [rax + 0x7fe8348], dl; mov eax, 0x16; ja 0x16ec0; ret; 
0x0000000000056a8e: add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x0000000000057e0d: add byte ptr [rax + 0x9e], bh; syscall; 
0x0000000000057e0d: add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x000000000000335a: add byte ptr [rax + 0xa2000], al; ret 0x20e2; 
0x0000000000057173: add byte ptr [rax + 0xa], bh; cmp edi, 1; sbb eax, eax; not eax; and eax, 0xb; ret; 
0x000000000003a3ed: add byte ptr [rax + 0xb], bh; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000056496: add byte ptr [rax + 0xb], bh; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000427f5: add byte ptr [rax + 0xba], bh; syscall; 
0x000000000004b079: add byte ptr [rax + 0xc740000], ah; mov edx, ebp; mov eax, 0x10c; syscall; 
0x00000000000550e3: add byte ptr [rax + 0xc8], bh; syscall; 
0x00000000000550e3: add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x000000000002b980: add byte ptr [rax + 0xc], bh; add edx, edx; je 0x2b91d; movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000002783f: add byte ptr [rax + 0xc], bh; mov rdi, rbx; syscall; 
0x0000000000056c86: add byte ptr [rax + 0xca], bh; syscall; 
0x0000000000023364: add byte ptr [rax + 0xd5], bh; syscall; 
0x0000000000023364: add byte ptr [rax + 0xd5], bh; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000002147d: add byte ptr [rax + 0xd9], bh; syscall; 
0x000000000002175f: add byte ptr [rax + 0xda], bh; syscall; 
0x000000000005a28b: add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000005a28b: add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; xor eax, eax; add rsp, 0x1b8; ret; 
0x0000000000055d70: add byte ptr [rax + 0xe], bh; mov rdx, rbx; syscall; 
0x000000000004a623: add byte ptr [rax + 0xe], bh; syscall; 
0x0000000000055c53: add byte ptr [rax + 0xe], bh; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a623: add byte ptr [rax + 0xe], bh; syscall; ret; 
0x000000000005a962: add byte ptr [rax + 0xf], cl; clc; call 0x169c0; pop rdi; ret; 
0x000000000004adfc: add byte ptr [rax + 0xf], cl; xlatb; cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000003ae56: add byte ptr [rax + 0xfc17580], 0xb6; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000038b22: add byte ptr [rax + 1], bh; pop rdx; ret; 
0x0000000000018acf: add byte ptr [rax + 1], bh; ret; 
0x000000000005a040: add byte ptr [rax + 1], cl; fmul dword ptr [rax + 0x39]; ret; 
0x000000000003c66f: add byte ptr [rax + 1], cl; ret 0xddeb; 
0x0000000000024ba7: add byte ptr [rax + 1], cl; ret; 
0x0000000000003357: add byte ptr [rax + 2], 0; add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x000000000004f148: add byte ptr [rax + 2], bh; mov rdi, rbp; syscall; 
0x0000000000057f00: add byte ptr [rax + 3], bh; mov rdi, r12; syscall; 
0x000000000000733f: add byte ptr [rax + 6], bl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x20d; 
0x000000000002194a: add byte ptr [rax + 7], bh; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000000fbb7: add byte ptr [rax + rax], ah; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x0000000000057dbc: add byte ptr [rax + rax], ah; ret; 
0x00000000000648b7: add byte ptr [rax + rax], bh; cld; jmp rax; 
0x0000000000002e59: add byte ptr [rax + rax], bl; sbb al, 0x7d; ret 0x432; 
0x0000000000016f32: add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x000000000000154b: add byte ptr [rax + rax], dh; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000003ab39: add byte ptr [rax + rcx + 0x31], dh; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x000000000004bf1b: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000002c9d0: add byte ptr [rax + rdx - 0xd], dh; movups xmm1, xmmword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004df72: add byte ptr [rax - 0x18], dl; add byte ptr fs:[rax], al; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000016e9e: add byte ptr [rax - 0x283417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000008ee58: add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x0000000000041921: add byte ptr [rax - 0x39], cl; add eax, 0x25651b; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000040f2e: add byte ptr [rax - 0x39], cl; add eax, 0x256ef6; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000022fe7: add byte ptr [rax - 0x39], cl; add eax, 0x274dad; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000039da0: add byte ptr [rax - 0x39], cl; add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000044b30: add byte ptr [rax - 0x39], cl; or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000018d9f: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000001597f: add byte ptr [rax - 0x39], cl; ret; 
0x00000000000335dd: add byte ptr [rax - 0x3dbbb77], al; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002f004: add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef37: add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 8], xmm0; ret; 
0x00000000000558bb: add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x0000000000055073: add byte ptr [rax - 0x3fcef877], al; ret; 
0x0000000000004033: add byte ptr [rax - 0x45fffffc], bh; add al, 0; add byte ptr [rsp + rax + 0x4c00000], bh; add byte ptr [rax], al; rol dword ptr [rax + rax], 0; ret; 
0x000000000002d6f7: add byte ptr [rax - 0x477bf001], al; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x000000000005469d: add byte ptr [rax - 0x47bedc8c], al; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000042bbe: add byte ptr [rax - 0x48], dl; cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004abf4: add byte ptr [rax - 0x48], dl; jg 0x4abf9; add byte ptr [rax], al; syscall; 
0x000000000005b322: add byte ptr [rax - 0x48], dl; jo 0x5b327; add byte ptr [rax], al; syscall; 
0x000000000002d61d: add byte ptr [rax - 0x507bf001], al; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000008a95f: add byte ptr [rax - 0x54ff63ee], cl; and byte ptr [rbx], bh; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000008c8e8: add byte ptr [rax - 0x61bdb20], ah; ret 0xbf; 
0x000000000006edc8: add byte ptr [rax - 0x63d7e90], al; out dx, eax; xchg dword ptr [rcx + 0x598b2089], eax; nop; ret; 
0x0000000000021fb6: add byte ptr [rax - 0x68], cl; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000059057: add byte ptr [rax - 0x73], cl; adc al, 0xe; mov rax, rdx; add rsp, 0x18; ret; 
0x00000000000321ee: add byte ptr [rax - 0x73], cl; adc eax, 0x60d62; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bce: add byte ptr [rax - 0x73], cl; adc eax, 0x6127a; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000003145a: add byte ptr [rax - 0x73], cl; adc eax, 0x619da; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000002697f: add byte ptr [rax - 0x73], cl; adc eax, 0x6ce77; test rax, rax; cmove rax, rdx; ret; 
0x0000000000018e24: add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x000000000004df78: add byte ptr [rax - 0x73], cl; add eax, 0x249ee8; pop rdx; ret; 
0x0000000000042785: add byte ptr [rax - 0x73], cl; add eax, 0x255883; pop rbx; ret; 
0x000000000003f673: add byte ptr [rax - 0x73], cl; add eax, 0x2585f5; pop rdx; ret; 
0x000000000003da7b: add byte ptr [rax - 0x73], cl; add eax, 0x25a1dd; add rsp, 0x18; ret; 
0x000000000003798e: add byte ptr [rax - 0x73], cl; add eax, 0x260680; ret; 
0x00000000000528bf: add byte ptr [rax - 0x73], cl; add eax, 0x40ad1; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x00000000000518e4: add byte ptr [rax - 0x73], cl; add eax, 0x4195c; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004f493: add byte ptr [rax - 0x73], cl; add eax, 0x43b5d; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000001e1a7: add byte ptr [rax - 0x73], cl; add eax, 0x7479d; movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000021cf7: add byte ptr [rax - 0x73], cl; add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000049f72: add byte ptr [rax - 0x73], cl; and al, 8; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000058e27: add byte ptr [rax - 0x73], cl; cmp eax, 0x23f1b9; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000559cd: add byte ptr [rax - 0x73], cl; cmp eax, 0x2426ff; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597e: add byte ptr [rax - 0x73], cl; cmp eax, 0x24274e; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004ea2e: add byte ptr [rax - 0x73], cl; cmp eax, 0x246976; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004db72: add byte ptr [rax - 0x73], cl; cmp eax, 0x247732; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000042744: add byte ptr [rax - 0x73], cl; cmp eax, 0x255870; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x0000000000021758: add byte ptr [rax - 0x73], cl; cmp eax, 0x276974; mov eax, 0xda; syscall; 
0x000000000001ad09: add byte ptr [rax - 0x73], cl; cmp eax, 0x27d3bf; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000043649: add byte ptr [rax - 0x73], cl; ja 0x43656; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000055c48: add byte ptr [rax - 0x73], cl; jae 0x55c65; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000021f41: add byte ptr [rax - 0x73], cl; je 0x21f6a; or byte ptr [rax + 0xe], bh; syscall; 
0x000000000001ac9f: add byte ptr [rax - 0x73], cl; jnp 0x1accc; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000059d7d: add byte ptr [rax - 0x73], cl; or eax, 0x3978b; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000052743: add byte ptr [rax - 0x73], cl; or eax, 0x40b65; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000005113a: add byte ptr [rax - 0x73], cl; or eax, 0x4201e; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x000000000005af25: add byte ptr [rax - 0x73], cl; push rsp; and al, 8; mov eax, 0x10; syscall; 
0x000000000005ba8a: add byte ptr [rax - 0x73], cl; push rsp; ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x00000000000507e0: add byte ptr [rax - 0x73], cl; xchg eax, esp; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000041983: add byte ptr [rax - 0x73], cl; xor eax, 0x2548f5; call 0x419fa; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004a602: add byte ptr [rax - 0x73], cl; xor eax, 0x482fe; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a602: add byte ptr [rax - 0x73], cl; xor eax, 0x482fe; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004a5e8: add byte ptr [rax - 0x73], cl; xor eax, 0x48320; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e8: add byte ptr [rax - 0x73], cl; xor eax, 0x48320; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000042d94: add byte ptr [rax - 0x73], cl; xor eax, 0x50e6f; sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x0000000000054c57: add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x000000000005631f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000004253d: add byte ptr [rax - 0x75], cl; add eax, 0x252eeb; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000002309c: add byte ptr [rax - 0x75], cl; add eax, 0x274d0c; pop rdx; ret; 
0x000000000002178f: add byte ptr [rax - 0x75], cl; add eax, 0x276921; mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x00000000000408d9: add byte ptr [rax - 0x75], cl; and al, 0x18; add rsp, 0x38; ret; 
0x0000000000040fba: add byte ptr [rax - 0x75], cl; and al, 0x18; pop rdx; pop rcx; add rsp, 0x28; ret; 
0x000000000005e56c: add byte ptr [rax - 0x75], cl; and al, 0x78; mov rsp, rbx; jmp rax; 
0x00000000000426c7: add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x10; pop rbx; ret; 
0x000000000004090a: add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x18; ret; 
0x000000000005483d: add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000004508e: add byte ptr [rax - 0x75], cl; cmp esi, dword ptr [rcx]; test byte ptr [rbp - 0x72b7feb8], 0x2c; ret 0xd231; 
0x00000000000238dc: add byte ptr [rax - 0x75], cl; je 0x23905; and byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; syscall; 
0x000000000004641d: add byte ptr [rax - 0x75], cl; je 0x46446; cmp byte ptr [rcx + 0x39c0ffc1], cl; ret 0x4c7; 
0x0000000000055688: add byte ptr [rax - 0x75], cl; jl 0x556b1; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000042976: add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000055c83: add byte ptr [rax - 0x75], cl; push rax; js 0x55cd1; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000022058: add byte ptr [rax - 0x75], cl; sbb al, ch; sub ah, byte ptr [rsi]; add eax, dword ptr [rax]; mov rdi, rbp; call rbx; 
0x000000000003a3f2: add byte ptr [rax - 0x75], cl; xor al, 0x24; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000002ba05: add byte ptr [rax - 0x76992ff7], al; and al, 0xe0; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000056322: add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000021836: add byte ptr [rax - 0x77], cl; adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0x3c; ret 0x4800; 
0x0000000000023bf8: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x23b19; add rsp, 0x18; ret; 
0x00000000000450a9: add byte ptr [rax - 0x77], cl; add byte ptr [r10 + 0x5b], r11b; pop rbp; ret; 
0x0000000000027838: add byte ptr [rax - 0x77], cl; add eax, 0x26e638; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000023047: add byte ptr [rax - 0x77], cl; add eax, 0x274d51; pop rax; ret; 
0x00000000000389dc: add byte ptr [rax - 0x77], cl; and al, 0x10; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000022915: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c0c: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022ca0: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x22b0e; add rsp, 0xd8; ret; 
0x000000000002688b: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cda: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000004bdef: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea5: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce84: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d47b: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d868: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1d: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca4: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edb9: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee48: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed7: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef61: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004eff0: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c3: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053357: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x53230; add rsp, 0xd8; ret; 
0x000000000005a418: add byte ptr [rax - 0x77], cl; and al, 0x18; lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x000000000003a36e: add byte ptr [rax - 0x77], cl; and al, 0x38; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000052f97: add byte ptr [rax - 0x77], cl; and al, 0x48; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000005320b: add byte ptr [rax - 0x77], cl; and al, 0x60; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000005b5ef: add byte ptr [rax - 0x77], cl; and al, 8; call 0x594ec; add rsp, 0x18; ret; 
0x000000000003a4aa: add byte ptr [rax - 0x77], cl; call 0x5c45020d; ret; 
0x0000000000016d6d: add byte ptr [rax - 0x77], cl; call 0x8c5f0bd; pop rbx; pop rbp; ret; 
0x0000000000016e5d: add byte ptr [rax - 0x77], cl; call 0x8c5f1ad; pop rbx; pop rbp; ret; 
0x000000000001e7b4: add byte ptr [rax - 0x77], cl; call 0xf4612a7; mov dh, 0x1c; xor ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x00000000000175ef: add byte ptr [rax - 0x77], cl; clc; ret; 
0x00000000000357ba: add byte ptr [rax - 0x77], cl; clc; shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005a427: add byte ptr [rax - 0x77], cl; cli; syscall; 
0x000000000003f7b9: add byte ptr [rax - 0x77], cl; fcomip st(3); movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x000000000005446d: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x00000000000181a1: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000002027d: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000059435: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x0000000000058e07: add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x000000000005db5a: add byte ptr [rax - 0x77], cl; fimul word ptr [rcx + rcx*4 - 0x19]; call rax; 
0x000000000004d743: add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; jmp rcx; 
0x0000000000054d64: add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; mov rdx, rsi; syscall; 
0x0000000000024899: add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000229dd: add byte ptr [rax - 0x77], cl; fucomip st(0); pop rsp; ret; 
0x000000000001e203: add byte ptr [rax - 0x77], cl; iretd; syscall; 
0x000000000005c591: add byte ptr [rax - 0x77], cl; jo 0x5c5df; add esp, 0x110; pop rbx; ret; 
0x000000000004d6ae: add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x0000000000022e0c: add byte ptr [rax - 0x77], cl; out 0x48, al; mov dword ptr [rsp + 0x18], eax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004d4d3: add byte ptr [rax - 0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000022060: add byte ptr [rax - 0x77], cl; out dx, eax; call rbx; 
0x000000000005acaf: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af8a: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004f14d: add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000003c62a: add byte ptr [rax - 0x77], cl; pop rbp; add byte ptr [rcx + 0x59], al; pop rbx; pop rbp; ret; 
0x0000000000021422: add byte ptr [rax - 0x77], cl; rcr byte ptr [rbx + 0x5d], 1; ret; 
0x000000000002238f: add byte ptr [rax - 0x77], cl; ret 0x1bf; 
0x0000000000016d2c: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000005b174: add byte ptr [rax - 0x77], cl; ret 0x48e8; 
0x000000000001594f: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000039b85: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000279c8: add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x0000000000045127: add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000005b114: add byte ptr [rax - 0x77], cl; ret 0xa8e8; 
0x0000000000020680: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000037626: add byte ptr [rax - 0x77], cl; ret 0xe083; 
0x0000000000016d11: add byte ptr [rax - 0x77], cl; ret 0xe281; 
0x00000000000536e1: add byte ptr [rax - 0x77], cl; ret 0xf129; 
0x000000000001a645: add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x00000000000192ea: add byte ptr [rax - 0x77], cl; ret; 
0x000000000003a7a3: add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0x16e8; 
0x000000000003a7d1: add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0xe8e8; 
0x00000000000225ce: add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0xebe8; 
0x000000000005c58a: add byte ptr [rax - 0x77], cl; sbb eax, 0x23b9a6; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000016f6f: add byte ptr [rax - 0x77], cl; sub rsp, 8; xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x00000000000590f3: add byte ptr [rax - 0x77], cl; test rax, rax; je 0x59112; call rax; 
0x000000000005ba4b: add byte ptr [rax - 0x77], cl; xchg eax, edi; mov byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000004b394: add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x0000000000026986: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x44; ret 0x48c3; 
0x0000000000058438: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x000000000004d660: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x000000000003542c: add byte ptr [rax - 0x7b], cl; sar byte ptr [rcx + 0xb], cl; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x0000000000020ccf: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000042d9b: add byte ptr [rax - 0x7d], cl; in al, dx; and byte ptr [rax + 0x142], bh; mov rdx, rbp; syscall; 
0x00000000000570db: add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000003d4ce: add byte ptr [rax - 0x7d], cl; js 0x3d52b; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000017627: add byte ptr [rax - 0x7d], cl; ret 0x4501; 
0x0000000000017407: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000015a2f: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000005e3dd: add byte ptr [rax - 0x7f], cl; call qword ptr [rax + 1]; 
0x00000000000235d1: add byte ptr [rax - 0x7f], cl; in al, dx; sub byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000033886: add byte ptr [rax - 0xcfa8981], al; addps xmm0, xmm2; ret; 
0x0000000000035639: add byte ptr [rax - 0xcfa8981], al; mulps xmm0, xmm1; ret; 
0x000000000002c438: add byte ptr [rax - 0xe], bl; subps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002120b: add byte ptr [rax - 1], cl; int 0x85; sar byte ptr [rax + 0xa], 1; ret; 
0x0000000000039eeb: add byte ptr [rax - 1], cl; ret 0x17e9; 
0x000000000003cdd9: add byte ptr [rax - 1], cl; ret 0x3fe8; 
0x000000000002719f: add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000003e687: add byte ptr [rax - 1], cl; ret 0x91e8; 
0x0000000000034de7: add byte ptr [rax - 1], cl; ret; 
0x00000000000275b6: add byte ptr [rax - 1], cl; ror byte ptr [rax - 0x7d], 0xf8; and byte ptr [rbp - 0x14], dh; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000037089: add byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], cl; ret 0x8948; 
0x000000000004d73c: add byte ptr [rax], 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; jmp rcx; 
0x0000000000019653: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000001969b: add byte ptr [rax], 0; add byte ptr [rax], al; sub eax, r8d; ret; 
0x0000000000018063: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000056323: add byte ptr [rax], 0; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x0000000000055b0e: add byte ptr [rax], 0; add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000057418: add byte ptr [rax], 0; add byte ptr [rcx - 0x3fcef7b9], cl; ret; 
0x000000000004f146: add byte ptr [rax], 0; mov eax, 2; mov rdi, rbp; syscall; 
0x000000000004caf5: add byte ptr [rax], 0; mov rax, r12; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x000000000002196e: add byte ptr [rax], 0; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x000000000000335b: add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x0000000000027835: add byte ptr [rax], ah; add byte ptr [rax], al; mov qword ptr [rip + 0x26e638], rax; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000000335c: add byte ptr [rax], ah; or al, byte ptr [rax]; ret 0x20e2; 
0x00000000000942a3: add byte ptr [rax], ah; pop rdi; clc; jmp qword ptr [rax]; 
0x000000000000337f: add byte ptr [rax], ah; ret; 
0x000000000000a972: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000009322: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; pop rdx; ret; 
0x0000000000006f3a: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; push rdx; ret; 
0x0000000000009e4a: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x1bf; 
0x0000000000007342: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x20d; 
0x000000000000f5c2: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x4be; 
0x000000000000f3e2: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x5b2; 
0x000000000000afba: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x00000000000087e2: add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x0000000000037390: add byte ptr [rax], al; adc byte ptr [rax], al; or rdx, rcx; or rax, rsi; add rax, rax; ret; 
0x000000000008f73e: add byte ptr [rax], al; adc eax, 0x67cc487b; ret; 
0x000000000002af03: add byte ptr [rax], al; add al, 0xf; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x00000000000928e3: add byte ptr [rax], al; add al, ah; ret; 
0x0000000000023040: add byte ptr [rax], al; add al, ch; mov edx, 0x48000298; mov dword ptr [rip + 0x274d51], eax; pop rax; ret; 
0x0000000000039245: add byte ptr [rax], al; add al, ch; push -0x77000000; ret; 
0x000000000003fc57: add byte ptr [rax], al; add al, ch; ret 0x144; 
0x000000000001a99d: add byte ptr [rax], al; add al, ch; sti; ret; 
0x000000000001e0e2: add byte ptr [rax], al; add al, ch; sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003c6b3: add byte ptr [rax], al; add al, ch; test dword ptr [rdi - 3], edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000056aa4: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000054955: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566dd: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x000000000002e852: add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032701: add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0xff2; 
0x000000000008ff7b: add byte ptr [rax], al; add bh, bh; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rbx], cl; jmp qword ptr [rbx]; 
0x0000000000030868: add byte ptr [rax], al; add bh, bh; ret; 
0x00000000000919dd: add byte ptr [rax], al; add bh, ch; ret 0x705f; 
0x00000000000550d7: add byte ptr [rax], al; add bl, al; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x0000000000039ce9: add byte ptr [rax], al; add bl, al; push rax; mov eax, 0x3f; syscall; 
0x00000000000431b6: add byte ptr [rax], al; add bl, ch; or dword ptr [rcx + 0x63], ecx; js 0x431d3; mov eax, 0x51; syscall; 
0x000000000003ad35: add byte ptr [rax], al; add bl, ch; sbb esi, esi; ret; 
0x0000000000018d2d: add byte ptr [rax], al; add bl, dh; ret; 
0x000000000005493e: add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000043671: add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x00000000000569ab: add byte ptr [rax], al; add byte ptr [rax + 0x111], bh; syscall; 
0x00000000000233ae: add byte ptr [rax], al; add byte ptr [rax + 0x119], bh; syscall; 
0x0000000000023b69: add byte ptr [rax], al; add byte ptr [rax + 0x121], bh; syscall; 
0x000000000004bae6: add byte ptr [rax], al; add byte ptr [rax + 0x13], bh; syscall; 
0x0000000000023709: add byte ptr [rax], al; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000023709: add byte ptr [rax], al; add byte ptr [rax + 0x144], bh; syscall; ret; 
0x0000000000091363: add byte ptr [rax], al; add byte ptr [rax + 0x14e86bd], dl; rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x000000000000afb5: add byte ptr [rax], al; add byte ptr [rax + 0x16], dl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x000000000008e316: add byte ptr [rax], al; add byte ptr [rax + 0x1c], ah; ret 0x618b; 
0x0000000000024610: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; fmul dword ptr [rcx - 0x77]; ret 0x8d48; 
0x00000000000168bc: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8548; 
0x0000000000049aa9: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000000700d: add byte ptr [rax], al; add byte ptr [rax + 0x2a], dh; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000026a4a: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x000000000005aa58: add byte ptr [rax], al; add byte ptr [rax + 0x3c], bh; syscall; 
0x000000000000f3dd: add byte ptr [rax], al; add byte ptr [rax + 0x3c], ch; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x5b2; 
0x000000000009281b: add byte ptr [rax], al; add byte ptr [rax + 0x3e524441], ah; fist word ptr [rdx]; int1; ret 0xde3f; 
0x00000000000921e8: add byte ptr [rax], al; add byte ptr [rax + 0x3fc3d4fa], al; pop rsp; ret 0xc69a; 
0x000000000002f03e: add byte ptr [rax], al; add byte ptr [rax + 0x44110ff3], al; and al, 0xe4; ret; 
0x000000000002ef71: add byte ptr [rax], al; add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; ret; 
0x000000000002b9d5: add byte ptr [rax], al; add byte ptr [rax + 0x4489d009], al; and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9aa: add byte ptr [rax], al; add byte ptr [rax + 0x4489f809], al; and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x00000000000181ee: add byte ptr [rax], al; add byte ptr [rax + 0x485b0038], al; cmove eax, edx; ret; 
0x000000000005aa22: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rdi, r8; syscall; 
0x000000000004cb22: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r12; syscall; 
0x000000000004b83b: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r13; syscall; 
0x0000000000022327: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000023bb8: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; call 0x169c0; pop rdx; ret; 
0x000000000004b0c2: add byte ptr [rax], al; add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x169c0; pop rdx; ret; 
0x0000000000033541: add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rdi], eax; ret; 
0x0000000000033568: add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002b9b0: add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; or eax, ecx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005b1c4: add byte ptr [rax], al; add byte ptr [rax + 0x59], bh; syscall; 
0x0000000000039da5: add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x00000000000148f0: add byte ptr [rax], al; add byte ptr [rax + 0x5c415d5b], al; pop r13; ret; 
0x0000000000054bde: add byte ptr [rax], al; add byte ptr [rax + 0x5f], bh; cmovne eax, edx; ret; 
0x000000000005b2bf: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; 
0x000000000005b2bf: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000002325d: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x0000000000040846: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x000000000004086f: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005a99f: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; test byte ptr [rcx + rcx*4 - 0x40], 0xf; add eax, 0x89f0f883; ret 0xf474; 
0x00000000000560a8: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; je 0x560d3; push 0x24c28348; syscall; 
0x0000000000049b3b: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x49b72; syscall; 
0x000000000005a527: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x5a55e; mov eax, 0xc8; syscall; 
0x000000000004e6ce: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jl 0x4e681; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000004a761: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000047fd0: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x00000000000507e6: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000056fd4: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; rol byte ptr [rbx - 0x76b3fe32], cl; ror byte ptr [rax + 0x63], 0xf6; syscall; 
0x000000000004b6c4: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000004b6aa: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; std; mov esi, 3; mov rax, r8; syscall; 
0x000000000008ee76: add byte ptr [rax], al; add byte ptr [rax + 0x65fcb015], dl; ret; 
0x000000000008e756: add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x00000000000513b7: add byte ptr [rax], al; add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x0000000000016eac: add byte ptr [rax], al; add byte ptr [rax + 0x7fe8348], dl; mov eax, 0x16; ja 0x16ec0; ret; 
0x0000000000056a8c: add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x00000000000427f3: add byte ptr [rax], al; add byte ptr [rax + 0xba], bh; syscall; 
0x00000000000550e1: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; 
0x00000000000550e1: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x0000000000056c84: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; 
0x0000000000023362: add byte ptr [rax], al; add byte ptr [rax + 0xd5], bh; syscall; 
0x000000000005a289: add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x0000000000055d6e: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov rdx, rbx; syscall; 
0x000000000004a621: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; 
0x0000000000055c51: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a621: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; ret; 
0x000000000005a960: add byte ptr [rax], al; add byte ptr [rax + 0xf], cl; clc; call 0x169c0; pop rdi; ret; 
0x000000000005a03e: add byte ptr [rax], al; add byte ptr [rax + 1], cl; fmul dword ptr [rax + 0x39]; ret; 
0x000000000003b290: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000000733d: add byte ptr [rax], al; add byte ptr [rax + 6], bl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x20d; 
0x0000000000021948: add byte ptr [rax], al; add byte ptr [rax + 7], bh; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000000fbb5: add byte ptr [rax], al; add byte ptr [rax + rax], ah; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x00000000000648b5: add byte ptr [rax], al; add byte ptr [rax + rax], bh; cld; jmp rax; 
0x0000000000002e57: add byte ptr [rax], al; add byte ptr [rax + rax], bl; sbb al, 0x7d; ret 0x432; 
0x0000000000001549: add byte ptr [rax], al; add byte ptr [rax + rax], dh; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000003ab37: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x31], dh; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x0000000000016e9c: add byte ptr [rax], al; add byte ptr [rax - 0x283417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000008ee56: add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x0000000000018d9d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000001597d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000000335db: add byte ptr [rax], al; add byte ptr [rax - 0x3dbbb77], al; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002f002: add byte ptr [rax], al; add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef35: add byte ptr [rax], al; add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 8], xmm0; ret; 
0x00000000000558b9: add byte ptr [rax], al; add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x0000000000055071: add byte ptr [rax], al; add byte ptr [rax - 0x3fcef877], al; ret; 
0x0000000000042bbc: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004abf2: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; jg 0x4abf9; add byte ptr [rax], al; syscall; 
0x000000000005b320: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; jo 0x5b327; add byte ptr [rax], al; syscall; 
0x00000000000559cb: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x2426ff; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x24274e; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000021756: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x276974; mov eax, 0xda; syscall; 
0x0000000000021f3f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; je 0x21f6a; or byte ptr [rax + 0xe], bh; syscall; 
0x000000000004a600: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x482fe; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e6: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x48320; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000054c55: add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x000000000005631d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005e56a: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x78; mov rsp, rbx; jmp rax; 
0x000000000004198d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x18; ret; 
0x000000000005483b: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000004508c: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; cmp esi, dword ptr [rcx]; test byte ptr [rbp - 0x72b7feb8], 0x2c; ret 0xd231; 
0x0000000000055686: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; jl 0x556b1; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000003a3f0: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; xor al, 0x24; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000023bf6: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x23b19; add rsp, 0x18; ret; 
0x0000000000022913: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c0a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022c9e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x22b0e; add rsp, 0xd8; ret; 
0x0000000000026889: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cd8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000004bded: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea3: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce82: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d479: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d866: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca2: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edb7: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee46: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed5: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef5f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004efee: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053355: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x53230; add rsp, 0xd8; ret; 
0x000000000003a36c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x38; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000052f95: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x48; call 0x50e82; add rsp, 0xf8; ret; 
0x0000000000053209: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x60; call 0x524d5; add rsp, 0x1f8; ret; 
0x00000000000175ed: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000005a425: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; cli; syscall; 
0x0000000000018991: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000002027b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000059433: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x000000000004d741: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; jmp rcx; 
0x0000000000054d62: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; mov rdx, rsi; syscall; 
0x0000000000024897: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000229db: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fucomip st(0); pop rsp; ret; 
0x000000000001e201: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; iretd; syscall; 
0x000000000004d6ac: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x000000000004d4d1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000005acad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af88: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004f14b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x0000000000021420: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; rcr byte ptr [rbx + 0x5d], 1; ret; 
0x0000000000019473: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000001594d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000045125: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000002067e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000037624: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xe083; 
0x00000000000536df: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xf129; 
0x00000000000192e8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000003a7a1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0x16e8; 
0x000000000003a7cf: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0xe8e8; 
0x00000000000225cc: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0xebe8; 
0x000000000004b392: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x000000000004d65e: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x00000000000570d9: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000003d4cc: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; js 0x3d52b; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000017aa8: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000021209: add byte ptr [rax], al; add byte ptr [rax - 1], cl; int 0x85; sar byte ptr [rax + 0xa], 1; ret; 
0x0000000000039ee9: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x17e9; 
0x000000000003e685: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x91e8; 
0x0000000000045aa1: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x00000000000942a1: add byte ptr [rax], al; add byte ptr [rax], ah; pop rdi; clc; jmp qword ptr [rax]; 
0x000000000008f73c: add byte ptr [rax], al; add byte ptr [rax], al; adc eax, 0x67cc487b; ret; 
0x00000000000928e1: add byte ptr [rax], al; add byte ptr [rax], al; add al, ah; ret; 
0x000000000002e850: add byte ptr [rax], al; add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x00000000000326ff: add byte ptr [rax], al; add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0xff2; 
0x00000000000919db: add byte ptr [rax], al; add byte ptr [rax], al; add bh, ch; ret 0x705f; 
0x0000000000018d2b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000091361: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x14e86bd], dl; rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x000000000008e314: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1c], ah; ret 0x618b; 
0x0000000000092819: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x3e524441], ah; fist word ptr [rdx]; int1; ret 0xde3f; 
0x000000000003353f: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rdi], eax; ret; 
0x0000000000033566: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000148ee: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x5c415d5b], al; pop r13; ret; 
0x000000000008ee74: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x65fcb015], dl; ret; 
0x000000000008e754: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x00000000000648b3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + rax], bh; cld; jmp rax; 
0x0000000000002e55: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + rax], bl; sbb al, 0x7d; ret 0x432; 
0x0000000000016e9a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x283417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000008ee54: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x0000000000018d9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000005e568: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x78; mov rsp, rbx; jmp rax; 
0x00000000000175eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000004d73f: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; jmp rcx; 
0x000000000001594b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000017b4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000008f73a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; adc eax, 0x67cc487b; ret; 
0x000000000009135f: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x14e86bd], dl; rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x000000000008e312: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1c], ah; ret 0x618b; 
0x000000000003353d: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rdi], eax; ret; 
0x000000000008ee72: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x65fcb015], dl; ret; 
0x000000000008e752: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x00000000000648b1: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + rax], bh; cld; jmp rax; 
0x000000000008ee52: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x000000000004d73d: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; jmp rcx; 
0x000000000008e310: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1c], ah; ret 0x618b; 
0x000000000008ee70: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x65fcb015], dl; ret; 
0x000000000008e750: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x000000000008ee50: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x0000000000000dbe: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000000767e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000084fad: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], dl; call qword ptr [rcx]; 
0x0000000000067804: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx], 0xf8; jmp rdi; 
0x0000000000084fcf: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], ah; jmp qword ptr [rdx]; 
0x0000000000075663: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add dl, ah; jmp rsp; 
0x000000000008b3fe: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; push rax; ret; 
0x0000000000000dc0: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000007680: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000008f192: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], dh; xor esi, dword ptr [rdi + 0x52]; ret 0x3fd3; 
0x0000000000084faf: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], dl; call qword ptr [rcx]; 
0x000000000000cd39: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp + 0x120000], al; or dword ptr [rax], eax; ret; 
0x0000000000067806: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx], 0xf8; jmp rdi; 
0x0000000000084fd1: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], ah; jmp qword ptr [rdx]; 
0x0000000000075665: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add dl, ah; jmp rsp; 
0x0000000000091a38: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; ret; 
0x00000000000648b2: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp al, 0; cld; jmp rax; 
0x0000000000090f4a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp eax, 0x4a121583; ret; 
0x00000000000913da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; jge 0x91391; mov cl, 0x5b; call rcx; 
0x00000000000019b6: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; jno 0x19c2; add byte ptr [rax], al; ret 2; 
0x000000000008fb6a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000002e84f: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x00000000000326fe: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0xff2; 
0x0000000000001d4a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov bl, 0; add byte ptr [rax], al; ret 5; 
0x000000000000931a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movabs dword ptr [0x5a0009001200001c], eax; ret; 
0x000000000003353e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rdi], rax; ret; 
0x00000000000919da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; out dx, eax; ret 0x705f; 
0x000000000008b400: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; push rax; ret; 
0x000000000000154e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000000f97a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x13; 
0x0000000000007a72: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x14; 
0x000000000000a69a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x22; 
0x0000000000008b0a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x27; 
0x000000000000f302: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x2a; 
0x000000000000f6aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x32; 
0x000000000000fbba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x000000000000e582: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x38; 
0x000000000008f78a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000008eb2: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xe; 
0x00000000000038ce: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 1; 
0x0000000000001d2e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 3; 
0x000000000000c662: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 4; 
0x000000000000f37a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 6; 
0x0000000000000a6a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000002e54: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; sbb al, 0; sbb al, 0x7d; ret 0x432; 
0x0000000000007682: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000000cd3a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; test byte ptr [rip + 0x120000], ah; or dword ptr [rax], eax; ret; 
0x000000000009167a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; test cl, bl; or ah, cl; ret 0x1291; 
0x000000000008fb0a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xchg eax, ebp; ret; 
0x000000000008f193: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor byte ptr [rbx], dh; ja 0x8f1ef; ret 0x3fd3; 
0x000000000008fbaa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x000000000008f194: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], dh; xor esi, dword ptr [rdi + 0x52]; ret 0x3fd3; 
0x0000000000084fb1: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], dl; call qword ptr [rcx]; 
0x000000000000cd3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp + 0x120000], al; or dword ptr [rax], eax; ret; 
0x0000000000067808: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx], 0xf8; jmp rdi; 
0x000000000000f8a3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x12000029], al; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000009fdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x22000029], cl; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x00000000000019b7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 4], dh; add byte ptr [rax], al; ret 2; 
0x000000000009158b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 5], dh; int1; mov ch, 0x1a; ret; 
0x0000000000084fd3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], ah; jmp qword ptr [rdx]; 
0x000000000000961b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi + 0x12000003], dh; add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x00000000000913db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi + 0x7d], cl; scasb al, byte ptr [rdi]; mov cl, 0x5b; call rcx; 
0x000000000009131b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdx - 0x52b73b], cl; dec dword ptr [rdi - 0x7ae47743]; sar byte ptr [rbx + 0x59], 0x87; ret 0x9d9b; 
0x0000000000090f4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rip + 0x4a121583], bh; ret; 
0x000000000008f73b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rip + 0x67cc487b], dl; ret; 
0x000000000008f3db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi + 0x6aadda63], dh; std; ret; 
0x000000000008f6fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi], dh; ret; 
0x000000000008fb6b: add byte ptr [rax], al; add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000075667: add byte ptr [rax], al; add byte ptr [rax], al; add dl, ah; jmp rsp; 
0x0000000000091a3b: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; ret; 
0x0000000000021e6a: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x00000000000392a7: add byte ptr [rax], al; add byte ptr [rax], al; call 0x389c1; add rsp, 0x18; ret; 
0x0000000000019183: add byte ptr [rax], al; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000005a95f: add byte ptr [rax], al; add byte ptr [rax], al; cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x000000000003d16b: add byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x00000000000648b4: add byte ptr [rax], al; add byte ptr [rax], al; cmp al, 0; cld; jmp rax; 
0x00000000000181ed: add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000090f4c: add byte ptr [rax], al; add byte ptr [rax], al; cmp eax, 0x4a121583; ret; 
0x000000000003d4cb: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x3d4dd; add rax, 0xa0; ret; 
0x000000000008fc6c: add byte ptr [rax], al; add byte ptr [rax], al; jg 0x8fc09; push rcx; mov cl, 0x68; ret; 
0x00000000000913dc: add byte ptr [rax], al; add byte ptr [rax], al; jge 0x91391; mov cl, 0x5b; call rcx; 
0x00000000000019b8: add byte ptr [rax], al; add byte ptr [rax], al; jno 0x19c2; add byte ptr [rax], al; ret 2; 
0x000000000009158c: add byte ptr [rax], al; add byte ptr [rax], al; jno 0x9158d; int1; mov ch, 0x1a; ret; 
0x00000000000170ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 1]; pop rbx; ret; 
0x000000000008fb6c: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000002e851: add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032700: add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0xff2; 
0x0000000000001d4c: add byte ptr [rax], al; add byte ptr [rax], al; mov bl, 0; add byte ptr [rax], al; ret 5; 
0x0000000000056a8b: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x82; pop rbx; ret; 
0x00000000000427f2: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xba; syscall; 
0x000000000002350a: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021aa2: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c9a: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x00000000000593be: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x000000000004bf3d: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004bf45: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000049f90: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x0000000000054c31: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x000000000004d673: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000023bf5: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x23b19; add rsp, 0x18; ret; 
0x000000000005631c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005e569: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x78]; mov rsp, rbx; jmp rax; 
0x00000000000175ec: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000021f22: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004d4d0: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000000931c: add byte ptr [rax], al; add byte ptr [rax], al; movabs dword ptr [0x5a0009001200001c], eax; ret; 
0x000000000004a760: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rsi, ebx; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000033540: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rdi], rax; ret; 
0x0000000000033567: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000919dc: add byte ptr [rax], al; add byte ptr [rax], al; out dx, eax; ret 0x705f; 
0x0000000000039da4: add byte ptr [rax], al; add byte ptr [rax], al; pop rax; pop rbx; pop rbp; ret; 
0x000000000005da29: add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x0000000000017a6b: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; cmovne rax, rdx; ret; 
0x000000000004d50b: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000049e75: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000022996: add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000042bbb: add byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x000000000008b402: add byte ptr [rax], al; add byte ptr [rax], al; push rax; ret; 
0x0000000000001550: add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000000f97c: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x13; 
0x0000000000007a74: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x14; 
0x000000000000a69c: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x22; 
0x0000000000008b0c: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x27; 
0x000000000000f304: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x2a; 
0x000000000000f6ac: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x32; 
0x000000000000fbbc: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x000000000000e584: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x38; 
0x000000000008f78c: add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000008eb4: add byte ptr [rax], al; add byte ptr [rax], al; ret 0xe; 
0x00000000000038d0: add byte ptr [rax], al; add byte ptr [rax], al; ret 1; 
0x0000000000001d30: add byte ptr [rax], al; add byte ptr [rax], al; ret 3; 
0x000000000000c664: add byte ptr [rax], al; add byte ptr [rax], al; ret 4; 
0x000000000000f37c: add byte ptr [rax], al; add byte ptr [rax], al; ret 6; 
0x0000000000000a6c: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000002e56: add byte ptr [rax], al; add byte ptr [rax], al; sbb al, 0; sbb al, 0x7d; ret 0x432; 
0x00000000000148ef: add byte ptr [rax], al; add byte ptr [rax], al; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000001969c: add byte ptr [rax], al; add byte ptr [rax], al; sub eax, r8d; ret; 
0x0000000000007684: add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000000cd3c: add byte ptr [rax], al; add byte ptr [rax], al; test byte ptr [rip + 0x120000], ah; or dword ptr [rax], eax; ret; 
0x000000000009167c: add byte ptr [rax], al; add byte ptr [rax], al; test cl, bl; or ah, cl; ret 0x1291; 
0x000000000008fb0c: add byte ptr [rax], al; add byte ptr [rax], al; xchg eax, ebp; ret; 
0x000000000008f195: add byte ptr [rax], al; add byte ptr [rax], al; xor byte ptr [rbx], dh; ja 0x8f1ef; ret 0x3fd3; 
0x0000000000018064: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000008fbac: add byte ptr [rax], al; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x0000000000017a65: add byte ptr [rax], al; add byte ptr [rax], bh; sbb byte ptr [rdx], bh; pop rbx; cmovne rax, rdx; ret; 
0x000000000008f196: add byte ptr [rax], al; add byte ptr [rax], dh; xor esi, dword ptr [rdi + 0x52]; ret 0x3fd3; 
0x0000000000084fb3: add byte ptr [rax], al; add byte ptr [rax], dl; call qword ptr [rcx]; 
0x000000000000cd3d: add byte ptr [rax], al; add byte ptr [rbp + 0x120000], al; or dword ptr [rax], eax; ret; 
0x000000000005906b: add byte ptr [rax], al; add byte ptr [rbp + 0x2fd14], cl; add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000003a76d: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000000d09d: add byte ptr [rax], al; add byte ptr [rbp + 0x39], cl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x000000000005730c: add byte ptr [rax], al; add byte ptr [rbp + 0x481274ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000004bedc: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004bec7: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x0000000000056688: add byte ptr [rax], al; add byte ptr [rbp + 0xc], dh; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000035183: add byte ptr [rax], al; add byte ptr [rbp + 0xf], dh; movss xmm0, dword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x00000000000289e1: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; xor eax, eax; shl edx, 9; sete al; ret; 
0x00000000000289ad: add byte ptr [rax], al; add byte ptr [rbp + 9], dh; xor eax, eax; shl rdx, 0xc; sete al; ret; 
0x0000000000053e46: add byte ptr [rax], al; add byte ptr [rbp + rax + 0x48], dh; test edx, edx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd0: add byte ptr [rax], al; add byte ptr [rbp + rax + 0x48], dh; test edx, edx; jne 0x53ff7; xor eax, eax; ret; 
0x00000000000250c4: add byte ptr [rax], al; add byte ptr [rbp + rsi + 0x3d], dh; ret 0; 
0x00000000000558ed: add byte ptr [rax], al; add byte ptr [rbp - 0x38f58640], al; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x00000000000573e7: add byte ptr [rax], al; add byte ptr [rbp - 0x3db7f040], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000057d5d: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbaf040], al; pop rdx; ret; 
0x0000000000020df8: add byte ptr [rax], al; add byte ptr [rbp - 0x3f6af040], al; movzx eax, al; pop rdx; ret; 
0x000000000003b89c: add byte ptr [rax], al; add byte ptr [rbp - 0x76], al; adc dword ptr [rcx - 0xa], eax; ret 0x74c0; 
0x00000000000262a0: add byte ptr [rax], al; add byte ptr [rbp - 0x77], al; dec dword ptr [rbx + 0x63]; add al, 0xbe; add rax, r14; jmp rax; 
0x000000000004794e: add byte ptr [rax], al; add byte ptr [rbx + 0x39742444], cl; ret 0x9489; 
0x0000000000027e0d: add byte ptr [rax], al; add byte ptr [rbx + 0x440ffff8], al; ret 0xa1e9; 
0x0000000000017a6c: add byte ptr [rax], al; add byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x0000000000057e94: add byte ptr [rax], al; add byte ptr [rbx + 0x48], dl; mov ebp, esi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x000000000004c71c: add byte ptr [rax], al; add byte ptr [rbx + 0x5b5affc8], al; pop rbp; ret; 
0x0000000000034f23: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004ab2d: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000042870: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000008fc6d: add byte ptr [rax], al; add byte ptr [rbx + 0x7f], al; xchg eax, esi; push rcx; mov cl, 0x68; ret; 
0x0000000000057ffd: add byte ptr [rax], al; add byte ptr [rbx + 0xf4419f8], al; fadd dword ptr [r9 + 0x69]; ret; 
0x000000000004a9f0: add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x0000000000021b92: add byte ptr [rax], al; add byte ptr [rbx - 0x16f3dbbc], cl; sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000004ed39: add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000006780a: add byte ptr [rax], al; add byte ptr [rbx], 0xf8; jmp rdi; 
0x000000000008ff81: add byte ptr [rax], al; add byte ptr [rbx], cl; jmp qword ptr [rbx]; 
0x000000000004353c: add byte ptr [rax], al; add byte ptr [rcx + 0x10eae8f5], cl; std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000004349d: add byte ptr [rax], al; add byte ptr [rcx + 0x1189e8f5], cl; std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000000f8a5: add byte ptr [rax], al; add byte ptr [rcx + 0x12000029], al; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000039869: add byte ptr [rax], al; add byte ptr [rcx + 0x1c57e9c7], cl; add byte ptr [rax], al; pop rax; ret; 
0x00000000000436bc: add byte ptr [rax], al; add byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000009fdd: add byte ptr [rax], al; add byte ptr [rcx + 0x22000029], cl; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000057bcb: add byte ptr [rax], al; add byte ptr [rcx + 0x24041005], cl; add byte ptr [rax + 0x63], cl; jp 0x57c08; mov eax, 0xc8; syscall; 
0x00000000000426b4: add byte ptr [rax], al; add byte ptr [rcx + 0x252ddf0d], cl; add byte ptr [rcx + 0x2558fd15], cl; add al, ch; ret; 
0x000000000000a96d: add byte ptr [rax], al; add byte ptr [rcx + 0x2a], bh; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000049e40: add byte ptr [rax], al; add byte ptr [rcx + 0x415d5be8], cl; pop rsp; ret; 
0x0000000000056324: add byte ptr [rax], al; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x000000000005aa91: add byte ptr [rax], al; add byte ptr [rcx + 0x49fc2444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000004d7e3: add byte ptr [rax], al; add byte ptr [rcx + 0x5d5b5ae8], cl; ret; 
0x0000000000043112: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x000000000004a8b1: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; cld; mov eax, 0xd; syscall; 
0x0000000000055b09: add byte ptr [rax], al; add byte ptr [rcx + 0x80e6], al; add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000055b0f: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x00000000000019b9: add byte ptr [rax], al; add byte ptr [rcx + 4], dh; add byte ptr [rax], al; ret 2; 
0x000000000001969d: add byte ptr [rax], al; add byte ptr [rcx + rbp - 0x40], al; ret; 
0x000000000004f0d6: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x12], cl; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000003a5ee: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x00000000000407cc: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; syscall; 
0x0000000000038883: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x000000000004f1e9: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1a], cl; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x000000000004cb27: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1a], cl; syscall; 
0x000000000004d4c6: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1e], al; mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004ac84: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1e], cl; syscall; 
0x0000000000057339: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000001907b: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000002229a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000004b5db: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000004296c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x32], cl; call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042b9f: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x32], cl; call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000054fa6: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, r8; syscall; 
0x000000000004c20a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, rbp; syscall; 
0x0000000000054eb5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, rbx; syscall; 
0x000000000001acab: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000002194d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; mov rdx, rcx; syscall; 
0x000000000004b186: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; mov rsi, rbx; syscall; 
0x000000000005aa27: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x0000000000021f23: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000055bbb: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, r12; syscall; 
0x000000000004b96f: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, r9; syscall; 
0x0000000000056dc0: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, rbx; syscall; 
0x0000000000022202: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x00000000000553a9: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, rsi; syscall; 
0x0000000000057945: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000001ace0: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000056d42: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x0000000000056fed: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x00000000000562d5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000003fadc: add byte ptr [rax], al; add byte ptr [rcx - 0x17207616], cl; ret 0xffb9; 
0x000000000005a54c: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x5a50e; loope 0x5a558; add byte ptr [rax], al; syscall; 
0x000000000005a59c: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x5a5ee; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000004bfa8: add byte ptr [rax], al; add byte ptr [rcx - 0x2076b73b], cl; call qword ptr [rbx + 0x18]; 
0x0000000000057419: add byte ptr [rax], al; add byte ptr [rcx - 0x3fcef7b9], cl; ret; 
0x000000000004322b: add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; mov ebp, 0x88; call rax; 
0x0000000000020be5: add byte ptr [rax], al; add byte ptr [rcx - 0x76], al; add cl, byte ptr [rcx - 1]; ret 0xe083; 
0x0000000000051dea: add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x000000000005574d: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fdiv dword ptr [rcx]; sar byte ptr [rsi + 0x83], cl; mov rax, rbp; syscall; 
0x0000000000018497: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret 0x8d48; 
0x0000000000055230: add byte ptr [rax], al; add byte ptr [rcx - 0x7c0fc3bd], cl; or al, 0x24; add al, ch; fistp dword ptr [rip + 0x39480000]; ret; 
0x0000000000056984: add byte ptr [rax], al; add byte ptr [rcx - 0xa], al; ret 0x7480; 
0x000000000009158d: add byte ptr [rax], al; add byte ptr [rcx - 5], dh; int1; mov ch, 0x1a; ret; 
0x0000000000084fd5: add byte ptr [rax], al; add byte ptr [rcx], ah; jmp qword ptr [rdx]; 
0x000000000000f375: add byte ptr [rax], al; add byte ptr [rcx], bl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 6; 
0x00000000000387f8: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0xd089; 
0x00000000000189cd: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000573c5: add byte ptr [rax], al; add byte ptr [rcx], dh; sal al, 0xf; mov cl, 0x17; ret; 
0x00000000000436b0: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xa5; ret; 
0x000000000004b389: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xab; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3ac: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xab; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x000000000004a61a: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; 
0x000000000004a61a: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; ret; 
0x000000000001a63a: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rcx + 0x95de8ef], 4; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000000961d: add byte ptr [rax], al; add byte ptr [rdi + 0x12000003], dh; add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x0000000000057373: add byte ptr [rax], al; add byte ptr [rdi + 0x26], dh; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x0000000000022420: add byte ptr [rax], al; add byte ptr [rdi + 0x3f], bh; call 0x2248e; xor eax, eax; pop rdx; ret; 
0x00000000000913dd: add byte ptr [rax], al; add byte ptr [rdi + 0x7d], cl; scasb al, byte ptr [rdi]; mov cl, 0x5b; call rcx; 
0x000000000004ae07: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; 
0x000000000004ae07: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x0000000000057011: add byte ptr [rax], al; add byte ptr [rdi + 4], dh; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000054b90: add byte ptr [rax], al; add byte ptr [rdi + 5], dh; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bbb: add byte ptr [rax], al; add byte ptr [rdi + 5], dh; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000016eb6: add byte ptr [rax], al; add byte ptr [rdi + 5], dh; ret; 
0x000000000004d6a3: add byte ptr [rax], al; add byte ptr [rdi + rax + 0x48], dh; mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000002af02: add byte ptr [rax], al; add byte ptr [rdi + rcx], al; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x0000000000021457: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x3ebc031; mov dword ptr [rax + 8], ebx; pop rbx; ret; 
0x0000000000055c56: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x0000000000021480: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8948c085; ret; 
0x0000000000049b0a: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x89c08548; ret; 
0x000000000002358e: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; and eax, 0x5affff34; ret; 
0x000000000005b2cb: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b05ae8f; ret; 
0x000000000005af76: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5afffbba; ret; 
0x00000000000396fb: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x5afffdd2; ret; 
0x0000000000023dfb: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x5affff2b; ret; 
0x000000000004abf8: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ebx, 0x5afffcbd; ret; 
0x000000000004a9fa: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x5afffcbf; ret; 
0x0000000000023cf5: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov esi, 0x5affff2c; ret; 
0x00000000000225a9: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x00000000000235a6: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5affff34; ret; 
0x000000000003a756: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; pop rbp; ret 0xfffd; 
0x0000000000023a4b: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5affff2f; ret; 
0x00000000000237f1: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; ret 0xff31; 
0x0000000000039cf0: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; ret; 
0x000000000005a98d: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sar bl, 0xff; pop rdx; ret; 
0x0000000000049c96: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffccd; ret; 
0x000000000003d496: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffd95; ret; 
0x000000000003a77e: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; xor eax, 0x5afffdc2; ret; 
0x0000000000022591: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8f86348; and al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x00000000000226d6: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe9c78948; fld qword ptr [rdx - 1]; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x000000000003da1d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xff; cmovbe eax, edi; ret; 
0x000000000002e0e3: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xeed9; 
0x000000000002586e: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8141; 
0x00000000000508b4: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xdb85; 
0x0000000000054950: add byte ptr [rax], al; add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566d8: add byte ptr [rax], al; add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x0000000000023a7b: add byte ptr [rax], al; add byte ptr [rdx + 0x48], dl; mov edi, dword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000056499: add byte ptr [rax], al; add byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x0000000000056db6: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd6: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054f9c: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x0000000000054d2c: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552ce: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x0000000000040877: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x0000000000055bb1: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b965: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a4: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c200: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eab: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x00000000000560da: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004084e: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x0000000000056c05: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x000000000009131d: add byte ptr [rax], al; add byte ptr [rdx - 0x52b73b], cl; dec dword ptr [rdi - 0x7ae47743]; sar byte ptr [rbx + 0x59], 0x87; ret 0x9d9b; 
0x0000000000055909: add byte ptr [rax], al; add byte ptr [rdx - 0x75], dl; pop rax; xor byte ptr [rbx + 0x2427be05], cl; add byte ptr [rcx], bh; ret; 
0x000000000004ed35: add byte ptr [rax], al; add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000090f4d: add byte ptr [rax], al; add byte ptr [rip + 0x4a121583], bh; ret; 
0x000000000008f73d: add byte ptr [rax], al; add byte ptr [rip + 0x67cc487b], dl; ret; 
0x000000000002d623: add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d6fd: add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x0000000000032bd9: add byte ptr [rax], al; add byte ptr [rip + 0x7fefffff], bh; jbe 0x32be4; ret; 
0x0000000000024ad6: add byte ptr [rax], al; add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000569a6: add byte ptr [rax], al; add byte ptr [rsi + 0x18], bh; mov eax, 0x111; syscall; 
0x0000000000022239: add byte ptr [rax], al; add byte ptr [rsi + 0x406], bh; mov rax, r9; syscall; 
0x000000000008f3dd: add byte ptr [rax], al; add byte ptr [rsi + 0x6aadda63], dh; std; ret; 
0x0000000000021969: add byte ptr [rax], al; add byte ptr [rsi + 0x8002], bh; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x0000000000055bb6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b96a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a9: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x000000000004c205: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db7c: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r9; syscall; 
0x00000000000559c6: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055977: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004b117: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x0000000000054d27: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552c9: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a4: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5d: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005aa1d: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022322: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov eax, 0x48; syscall; 
0x0000000000022286: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov rax, r9; syscall; 
0x000000000004630c: add byte ptr [rax], al; add byte ptr [rsi - 0x22], bh; ret; 
0x000000000008f6fd: add byte ptr [rax], al; add byte ptr [rsi], dh; ret; 
0x000000000001f4df: add byte ptr [rax], al; add cl, al; ret 0x410f; 
0x000000000001a296: add byte ptr [rax], al; add cl, bl; ret; 
0x000000000005a893: add byte ptr [rax], al; add cl, ch; cmp ch, 0xff; call qword ptr [rax - 0x18]; 
0x000000000004996b: add byte ptr [rax], al; add cl, ch; int 0xac; cld; call qword ptr [rbx + 0x48]; 
0x0000000000021eaf: add byte ptr [rax], al; add cl, ch; mov esp, 0x48ffffff; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000001a074: add byte ptr [rax], al; add cl, ch; ret 0xfffe; 
0x00000000000513b2: add byte ptr [rax], al; add cl, ch; ret; 
0x000000000004c745: add byte ptr [rax], al; add cl, ch; xor cl, byte ptr [rdi]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000008fb6d: add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000034c44: add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000037c53: add byte ptr [rax], al; add dh, dh; ret 0x7410; 
0x0000000000075669: add byte ptr [rax], al; add dl, ah; jmp rsp; 
0x000000000002d2c2: add byte ptr [rax], al; add dl, dh; cvtps2pd xmm0, xmm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000091a3d: add byte ptr [rax], al; add dl, dh; ret; 
0x000000000000a696: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x22; 
0x000000000005f2ff: add byte ptr [rax], al; add dword ptr [rip - 1], eax; jmp qword ptr [rbx]; 
0x000000000000058e: add byte ptr [rax], al; add eax, 0x5cb0000; add byte ptr [rax], al; ret; 
0x0000000000021e6c: add byte ptr [rax], al; add rax, 0x34; ret; 
0x0000000000017b6b: add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x000000000004b762: add byte ptr [rax], al; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003f965: add byte ptr [rax], al; add rsp, 0x18; cqo; idiv rcx; add rax, rsi; ret; 
0x0000000000043d18: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000034f39: add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000002d3b3: add byte ptr [rax], al; add rsp, 0x20; add rsp, 0x30; pop rbx; ret; 
0x000000000002d23d: add byte ptr [rax], al; add rsp, 0x20; pop rbx; ret; 
0x000000000004adda: add byte ptr [rax], al; add rsp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x000000000005482a: add byte ptr [rax], al; add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000004b2ce: add byte ptr [rax], al; add rsp, 0x28; ret; 
0x00000000000422b2: add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000005a1a7: add byte ptr [rax], al; add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bb88: add byte ptr [rax], al; add rsp, 0x48; fchs; fxch st(1); ret; 
0x000000000002e466: add byte ptr [rax], al; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000004aa91: add byte ptr [rax], al; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000001bb24: add byte ptr [rax], al; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000004bdf8: add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004f47e: add byte ptr [rax], al; add rsp, 0xf8; ret; 
0x0000000000018d57: add byte ptr [rax], al; add rsp, 8; lea rax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000017a4b: add byte ptr [rax], al; add rsp, 8; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000017cf6: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002a3d2: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x000000000002a47e: add byte ptr [rax], al; addss xmm0, dword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000000fbb6: add byte ptr [rax], al; and al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x0000000000007012: add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x000000000000b122: add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; push rdx; ret; 
0x000000000000a80a: add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x00000000000942a2: add byte ptr [rax], al; and byte ptr [rdi - 8], bl; jmp qword ptr [rax]; 
0x000000000005a573: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005a54d: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x000000000005a59d: add byte ptr [rax], al; and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000005a28f: add byte ptr [rax], al; and edi, 0x7fffffff; syscall; 
0x000000000005a28f: add byte ptr [rax], al; and edi, 0x7fffffff; syscall; xor eax, eax; add rsp, 0x1b8; ret; 
0x0000000000055b0a: add byte ptr [rax], al; and esi, 0x80; cmovne esi, r10d; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000004240d: add byte ptr [rax], al; and rax, rdx; ret; 
0x000000000003a2de: add byte ptr [rax], al; and rsi, 0xfffffffffffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x000000000001e0e3: add byte ptr [rax], al; call 0x1e115; pop rdx; ret; 
0x000000000003ab1c: add byte ptr [rax], al; call 0x21e65; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000003a8b9: add byte ptr [rax], al; call 0x21e65; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000003377b: add byte ptr [rax], al; call 0x2248e; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000022426: add byte ptr [rax], al; call 0x2248e; xor eax, eax; pop rdx; ret; 
0x000000000002baa6: add byte ptr [rax], al; call 0x29a04; add rsp, 0x18; ret; 
0x000000000002a3cd: add byte ptr [rax], al; call 0x3252d; addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x000000000002a479: add byte ptr [rax], al; call 0x333b7; addss xmm0, dword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x00000000000392a9: add byte ptr [rax], al; call 0x389c1; add rsp, 0x18; ret; 
0x000000000003c5ae: add byte ptr [rax], al; call 0x3c35a; add rsp, 0x18; ret; 
0x0000000000043710: add byte ptr [rax], al; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x000000000004aad0: add byte ptr [rax], al; call 0x4a90e; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000004ace2: add byte ptr [rax], al; call 0x4ac07; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000023041: add byte ptr [rax], al; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000004eb99: add byte ptr [rax], al; call 0x4d924; add rsp, 0x18; dec eax; ret; 
0x0000000000053d32: add byte ptr [rax], al; call 0x53c9d; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000053f74: add byte ptr [rax], al; call 0x53e7f; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000055bdc: add byte ptr [rax], al; call 0x5468b; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000022601: add byte ptr [rax], al; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005a251: add byte ptr [rax], al; call 0x55279; mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000023ad9: add byte ptr [rax], al; call 0x57ad1; movsxd rdi, dword ptr [rsp + 0x18]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000005b3b9: add byte ptr [rax], al; call 0x57ad1; movsxd rdi, dword ptr [rsp + 0x1c]; call 0x169c0; add rsp, 0x28; ret; 
0x0000000000043233: add byte ptr [rax], al; call rax; 
0x000000000005b1df: add byte ptr [rax], al; cmove ecx, eax; movsxd rdi, ecx; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000019185: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000005a961: add byte ptr [rax], al; cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x000000000004adfb: add byte ptr [rax], al; cmove rdx, rdi; cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000058309: add byte ptr [rax], al; cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000054be4: add byte ptr [rax], al; cmovne eax, edx; ret; 
0x0000000000055b10: add byte ptr [rax], al; cmovne esi, r10d; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000003d16d: add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x00000000000648b6: add byte ptr [rax], al; cmp al, 0; cld; jmp rax; 
0x000000000002d6f6: add byte ptr [rax], al; cmp bh, 0xf; test byte ptr [rax + 0x3d000000], bh; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002d61c: add byte ptr [rax], al; cmp bh, 0xf; test byte ptr [rdi + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x00000000000181ef: add byte ptr [rax], al; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000017a66: add byte ptr [rax], al; cmp byte ptr [rax], bl; mov edx, 0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000033885: add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm2; ret; 
0x0000000000035638: add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; mulss xmm0, xmm1; ret; 
0x00000000000921e9: add byte ptr [rax], al; cmp dl, 0xd4; ret; 
0x00000000000430de: add byte ptr [rax], al; cmp dword ptr [r8 + 0x14], r15d; jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x0000000000090f4e: add byte ptr [rax], al; cmp eax, 0x4a121583; ret; 
0x000000000002d624: add byte ptr [rax], al; cmp eax, 0x7f7; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d6fe: add byte ptr [rax], al; cmp eax, 0x7f7; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x0000000000032bda: add byte ptr [rax], al; cmp eax, 0x7fefffff; jbe 0x32be4; ret; 
0x000000000004b011: add byte ptr [rax], al; cmp eax, 0xa000; je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b076: add byte ptr [rax], al; cmp eax, 0xa000; je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x0000000000020fe1: add byte ptr [rax], al; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x000000000003d4cd: add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x3d4dd; add rax, 0xa0; ret; 
0x0000000000020cce: add byte ptr [rax], al; cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000026a4b: add byte ptr [rax], al; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x00000000000550c5: add byte ptr [rax], al; cmp rcx, rsi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000023688: add byte ptr [rax], al; cmp rdx, rbp; je 0x2369e; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000054ba8: add byte ptr [rax], al; cmp rsi, rdx; ja 0x54bb5; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000002d2c3: add byte ptr [rax], al; cvtsd2ss xmm0, xmm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000032bbe: add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000001bb2b: add byte ptr [rax], al; fchs; fxch st(1); ret; 
0x000000000002a523: add byte ptr [rax], al; fldln2; add rsp, 0x48; faddp st(1); ret; 
0x000000000008d5d8: add byte ptr [rax], al; in al, dx; ret 0x1203; 
0x0000000000016eb7: add byte ptr [rax], al; ja 0x16ec0; ret; 
0x0000000000001d0e: add byte ptr [rax], al; ja 0x1d15; add byte ptr [rax], al; syscall; 
0x0000000000054b91: add byte ptr [rax], al; ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bbc: add byte ptr [rax], al; ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000057012: add byte ptr [rax], al; ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000057374: add byte ptr [rax], al; ja 0x5739e; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000002d629: add byte ptr [rax], al; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d703: add byte ptr [rax], al; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x0000000000022400: add byte ptr [rax], al; je 0x22407; or edx, 0xffffffff; mov eax, edx; pop rdx; ret; 
0x0000000000023bad: add byte ptr [rax], al; je 0x23bc2; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000003ab38: add byte ptr [rax], al; je 0x3ab44; xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x000000000004b016: add byte ptr [rax], al; je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b07b: add byte ptr [rax], al; je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x000000000004d6a4: add byte ptr [rax], al; je 0x4d6af; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000053e47: add byte ptr [rax], al; je 0x53e50; test rdx, rdx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd1: add byte ptr [rax], al; je 0x53fda; test rdx, rdx; jne 0x53ff7; xor eax, eax; ret; 
0x0000000000055b84: add byte ptr [rax], al; je 0x55b96; mov esi, 0x18; xor edi, edi; mov eax, 0x111; syscall; 
0x0000000000056a84: add byte ptr [rax], al; je 0x56a94; mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x0000000000056c52: add byte ptr [rax], al; je 0x56ca3; test esi, esi; je 0x56c60; mov eax, 0x16; ret; 
0x000000000008fc6e: add byte ptr [rax], al; jg 0x8fc09; push rcx; mov cl, 0x68; ret; 
0x00000000000913de: add byte ptr [rax], al; jge 0x91391; mov cl, 0x5b; call rcx; 
0x0000000000024ad7: add byte ptr [rax], al; jle 0x24aec; lea edx, [rax - 0x100]; lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000004630d: add byte ptr [rax], al; jle 0x462ef; ret; 
0x000000000004a449: add byte ptr [rax], al; jmp rax; 
0x0000000000022232: add byte ptr [rax], al; jne 0x22295; mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x00000000000289ae: add byte ptr [rax], al; jne 0x289bb; xor eax, eax; shl rdx, 0xc; sete al; ret; 
0x00000000000289e2: add byte ptr [rax], al; jne 0x289ee; xor eax, eax; shl edx, 9; sete al; ret; 
0x0000000000034fa0: add byte ptr [rax], al; jne 0x34fb3; movsd xmm0, qword ptr [rsp - 8]; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035184: add byte ptr [rax], al; jne 0x35197; movss xmm0, dword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000004bec8: add byte ptr [rax], al; jne 0x4bed6; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004bedd: add byte ptr [rax], al; jne 0x4beeb; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x0000000000056689: add byte ptr [rax], al; jne 0x56699; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x00000000000019ba: add byte ptr [rax], al; jno 0x19c2; add byte ptr [rax], al; ret 2; 
0x000000000009158e: add byte ptr [rax], al; jno 0x9158d; int1; mov ch, 0x1a; ret; 
0x000000000000a96e: add byte ptr [rax], al; jns 0xa99c; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x000000000000700e: add byte ptr [rax], al; jo 0x703c; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000022532: add byte ptr [rax], al; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000005906c: add byte ptr [rax], al; lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000018e23: add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x00000000000170ae: add byte ptr [rax], al; lea rax, [rdi + 1]; pop rbx; ret; 
0x000000000004df77: add byte ptr [rax], al; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x000000000003798d: add byte ptr [rax], al; lea rax, [rip + 0x260680]; ret; 
0x00000000000528be: add byte ptr [rax], al; lea rax, [rip + 0x40ad1]; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x00000000000518e3: add byte ptr [rax], al; lea rax, [rip + 0x4195c]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004f492: add byte ptr [rax], al; lea rax, [rip + 0x43b5d]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000001e1a6: add byte ptr [rax], al; lea rax, [rip + 0x7479d]; movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000059d7c: add byte ptr [rax], al; lea rcx, [rip + 0x3978b]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000052742: add byte ptr [rax], al; lea rcx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000051139: add byte ptr [rax], al; lea rcx, [rip + 0x4201e]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x000000000001ac9e: add byte ptr [rax], al; lea rdi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x00000000000559cc: add byte ptr [rax], al; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597d: add byte ptr [rax], al; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004ea2d: add byte ptr [rax], al; lea rdi, [rip + 0x246976]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004db71: add byte ptr [rax], al; lea rdi, [rip + 0x247732]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000021757: add byte ptr [rax], al; lea rdi, [rip + 0x276974]; mov eax, 0xda; syscall; 
0x000000000001ad08: add byte ptr [rax], al; lea rdi, [rip + 0x27d3bf]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005ba89: add byte ptr [rax], al; lea rdx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x00000000000321ed: add byte ptr [rax], al; lea rdx, [rip + 0x60d62]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bcd: add byte ptr [rax], al; lea rdx, [rip + 0x6127a]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031459: add byte ptr [rax], al; lea rdx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000005af24: add byte ptr [rax], al; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x0000000000055c47: add byte ptr [rax], al; lea rsi, [rbx + 0x18]; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000004365c: add byte ptr [rax], al; lea rsi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000043648: add byte ptr [rax], al; lea rsi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004a601: add byte ptr [rax], al; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a601: add byte ptr [rax], al; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004a5e7: add byte ptr [rax], al; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e7: add byte ptr [rax], al; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000042d93: add byte ptr [rax], al; lea rsi, [rip + 0x50e6f]; sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x0000000000021f40: add byte ptr [rax], al; lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x0000000000059073: add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000042a9e: add byte ptr [rax], al; lea rsp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000008fb6e: add byte ptr [rax], al; leave; ret; 
0x0000000000056aa5: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000054956: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566de: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x000000000002e853: add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032702: add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0xff2; 
0x000000000005a51e: add byte ptr [rax], al; lock or dword ptr [rsp], 0; mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000001d4e: add byte ptr [rax], al; mov bl, 0; add byte ptr [rax], al; ret 5; 
0x000000000000f5be: add byte ptr [rax], al; mov bl, 0x28; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x4be; 
0x000000000008fd99: add byte ptr [rax], al; mov bl, 1; add byte ptr [rax], al; ret; 
0x000000000005510b: add byte ptr [rax], al; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x0000000000009e46: add byte ptr [rax], al; mov cl, 3; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x1bf; 
0x000000000001ae40: add byte ptr [rax], al; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e0c1: add byte ptr [rax], al; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000016f2f: add byte ptr [rax], al; mov dword ptr [rax], 0xc; xor eax, eax; add rsp, 8; ret; 
0x000000000005741a: add byte ptr [rax], al; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000057bcc: add byte ptr [rax], al; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000056289: add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005aa92: add byte ptr [rax], al; mov dword ptr [rsp - 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000004b139: add byte ptr [rax], al; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x000000000004b705: add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x00000000000569ac: add byte ptr [rax], al; mov eax, 0x111; syscall; 
0x00000000000233af: add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000023b6a: add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000004bae7: add byte ptr [rax], al; mov eax, 0x13; syscall; 
0x000000000002370a: add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x000000000002370a: add byte ptr [rax], al; mov eax, 0x144; syscall; ret; 
0x000000000005aa59: add byte ptr [rax], al; mov eax, 0x3c; syscall; 
0x000000000005aa23: add byte ptr [rax], al; mov eax, 0x48; mov rdi, r8; syscall; 
0x000000000004cb23: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000004b83c: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r13; syscall; 
0x0000000000022328: add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x0000000000023bb9: add byte ptr [rax], al; mov eax, 0x48; syscall; call 0x169c0; pop rdx; ret; 
0x000000000005b1c5: add byte ptr [rax], al; mov eax, 0x59; syscall; 
0x0000000000054bdf: add byte ptr [rax], al; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000000000004307f: add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x0000000000056a8d: add byte ptr [rax], al; mov eax, 0x82; pop rbx; ret; 
0x0000000000057e0c: add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x0000000000057e0c: add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x0000000000056495: add byte ptr [rax], al; mov eax, 0xb; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000427f4: add byte ptr [rax], al; mov eax, 0xba; syscall; 
0x00000000000550e2: add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x00000000000550e2: add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x0000000000056c85: add byte ptr [rax], al; mov eax, 0xca; syscall; 
0x0000000000023363: add byte ptr [rax], al; mov eax, 0xd5; syscall; 
0x000000000002147c: add byte ptr [rax], al; mov eax, 0xd9; syscall; 
0x000000000005a28a: add byte ptr [rax], al; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000055d6f: add byte ptr [rax], al; mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000004a622: add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x0000000000055c52: add byte ptr [rax], al; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a622: add byte ptr [rax], al; mov eax, 0xe; syscall; ret; 
0x0000000000018ace: add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000004f147: add byte ptr [rax], al; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000021949: add byte ptr [rax], al; mov eax, 7; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000002350c: add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000049e41: add byte ptr [rax], al; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000004d7e4: add byte ptr [rax], al; mov eax, ebp; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000049b63: add byte ptr [rax], al; mov eax, ebx; neg eax; pop rbx; ret; 
0x0000000000037ef3: add byte ptr [rax], al; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000003928a: add byte ptr [rax], al; mov eax, ebx; pop rbx; ret; 
0x0000000000023e4d: add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000003da34: add byte ptr [rax], al; mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000005af54: add byte ptr [rax], al; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000040048: add byte ptr [rax], al; mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023250: add byte ptr [rax], al; mov eax, edx; pop rbx; ret; 
0x0000000000022582: add byte ptr [rax], al; mov eax, esi; pop rbx; ret; 
0x00000000000595f7: add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000005733a: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004bfa9: add byte ptr [rax], al; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x00000000000436bd: add byte ptr [rax], al; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000022421: add byte ptr [rax], al; mov edi, 0x3f; call 0x2248e; xor eax, eax; pop rdx; ret; 
0x00000000000230f6: add byte ptr [rax], al; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000004ae08: add byte ptr [rax], al; mov edi, 2; syscall; 
0x000000000004ae08: add byte ptr [rax], al; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000056325: add byte ptr [rax], al; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000054951: add byte ptr [rax], al; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566d9: add byte ptr [rax], al; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x000000000004f13d: add byte ptr [rax], al; mov edx, 0x180; mov esi, 0x80c2; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000056db7: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd7: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054f9d: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x0000000000054d2d: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552cf: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000040878: add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000055bb2: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b966: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a5: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c201: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eac: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x00000000000560db: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004084f: add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x0000000000056c06: add byte ptr [rax], al; mov edx, 1; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x00000000000506a3: add byte ptr [rax], al; mov edx, eax; lea rax, [rip + 0x42992]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000004d4c7: add byte ptr [rax], al; mov edx, r12d; mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x00000000000569a7: add byte ptr [rax], al; mov esi, 0x18; mov eax, 0x111; syscall; 
0x000000000002223a: add byte ptr [rax], al; mov esi, 0x406; mov rax, r9; syscall; 
0x000000000002196a: add byte ptr [rax], al; mov esi, 0x8002; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x000000000004f142: add byte ptr [rax], al; mov esi, 0x80c2; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000055bb7: add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b96b: add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546aa: add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c206: add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb1: add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db7d: add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004b813: add byte ptr [rax], al; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x00000000000559c7: add byte ptr [rax], al; mov esi, 1; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055978: add byte ptr [rax], al; mov esi, 1; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004b118: add byte ptr [rax], al; mov esi, 1; mov eax, 0x48; syscall; 
0x0000000000054d28: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552ca: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a5: add byte ptr [rax], al; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5e: add byte ptr [rax], al; mov esi, 1; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005aa1e: add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022323: add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000022287: add byte ptr [rax], al; mov esi, 2; mov rax, r9; syscall; 
0x0000000000023bb4: add byte ptr [rax], al; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004af2e: add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000004b33e: add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x0000000000021aa4: add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c9c: add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x00000000000450a8: add byte ptr [rax], al; mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000593b8: add byte ptr [rax], al; mov qword ptr [rbx + 0x28], 0; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x00000000000593c0: add byte ptr [rax], al; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x0000000000044b2f: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x0000000000039d9f: add byte ptr [rax], al; mov qword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004bf3f: add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005ba4a: add byte ptr [rax], al; mov qword ptr [rdi + 0x88], rdx; pop rbp; ret; 
0x000000000004bf47: add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000049f92: add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x0000000000054c33: add byte ptr [rax], al; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x00000000000550d1: add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004d675: add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000041920: add byte ptr [rax], al; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000040f2d: add byte ptr [rax], al; mov qword ptr [rip + 0x256ef6], 0; pop rdx; ret; 
0x0000000000027837: add byte ptr [rax], al; mov qword ptr [rip + 0x26e638], rax; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000004d6ad: add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000389db: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000022914: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c0b: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022c9f: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x22b0e; add rsp, 0xd8; ret; 
0x000000000002688a: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cd9: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000004bdee: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea4: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce83: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d47a: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d867: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1c: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca3: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edb8: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee47: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed6: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef60: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004efef: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c2: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053356: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x53230; add rsp, 0xd8; ret; 
0x000000000005a417: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x000000000003a36d: add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000052f96: add byte ptr [rax], al; mov qword ptr [rsp + 0x48], rax; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000005320a: add byte ptr [rax], al; mov qword ptr [rsp + 0x60], rax; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000005b5ee: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x0000000000023bf7: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x23b19; add rsp, 0x18; ret; 
0x00000000000262a1: add byte ptr [rax], al; mov r15d, r15d; movsxd rax, dword ptr [r14 + r15*4]; add rax, r14; jmp rax; 
0x000000000005574e: add byte ptr [rax], al; mov r8, rbx; xor edx, edx; mov esi, 0x83; mov rax, rbp; syscall; 
0x00000000000555ca: add byte ptr [rax], al; mov r8d, 0xca; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005631e: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000004cc13: add byte ptr [rax], al; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000002309b: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x000000000002178e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x276921]; mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x00000000000408d8: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x0000000000040fb9: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; pop rdx; pop rcx; add rsp, 0x28; ret; 
0x000000000005e56b: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x78]; mov rsp, rbx; jmp rax; 
0x0000000000040909: add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004caf6: add byte ptr [rax], al; mov rax, r12; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x00000000000180dd: add byte ptr [rax], al; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000004aff4: add byte ptr [rax], al; mov rax, r14; mov rdx, r13; syscall; 
0x0000000000055bbc: add byte ptr [rax], al; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b970: add byte ptr [rax], al; mov rax, r8; mov rdi, r9; syscall; 
0x0000000000056dc1: add byte ptr [rax], al; mov rax, r8; mov rdi, rbx; syscall; 
0x0000000000022203: add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000553aa: add byte ptr [rax], al; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000057946: add byte ptr [rax], al; mov rax, r8; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000001ace1: add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000056d43: add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x0000000000056fee: add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000054fa7: add byte ptr [rax], al; mov rax, r9; mov rdi, r8; syscall; 
0x000000000004c20b: add byte ptr [rax], al; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb6: add byte ptr [rax], al; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000001acac: add byte ptr [rax], al; mov rax, r9; syscall; 
0x0000000000055758: add byte ptr [rax], al; mov rax, rbp; syscall; 
0x00000000000188f7: add byte ptr [rax], al; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000018992: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000002027c: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000018e16: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000059434: add byte ptr [rax], al; mov rax, rbx; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000175ee: add byte ptr [rax], al; mov rax, rdi; ret; 
0x00000000000357b9: add byte ptr [rax], al; mov rax, rdi; shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000021421: add byte ptr [rax], al; mov rax, rdx; pop rbx; pop rbp; ret; 
0x00000000000229ee: add byte ptr [rax], al; mov rax, rdx; pop rbx; ret; 
0x0000000000021ec4: add byte ptr [rax], al; mov rax, rdx; syscall; 
0x0000000000022057: add byte ptr [rax], al; mov rbx, qword ptr [rax]; call 0x5468b; mov rdi, rbp; call rbx; 
0x0000000000042975: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000005483c: add byte ptr [rax], al; mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000004322c: add byte ptr [rax], al; mov rdi, qword ptr [r13 + 0x88]; call rax; 
0x0000000000055687: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000407cd: add byte ptr [rax], al; mov rdi, r12; mov rdx, r13; syscall; 
0x0000000000038884: add byte ptr [rax], al; mov rdi, r12; syscall; 
0x00000000000444dd: add byte ptr [rax], al; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000002194e: add byte ptr [rax], al; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004b187: add byte ptr [rax], al; mov rdi, r8; mov rsi, rbx; syscall; 
0x000000000005aa28: add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000004b5dc: add byte ptr [rax], al; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000004a472: add byte ptr [rax], al; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004a4d9: add byte ptr [rax], al; mov rdi, rax; call 0x169c0; add rsp, 0x30; pop rbx; ret; 
0x0000000000023aa6: add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000043663: add byte ptr [rax], al; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005acae: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af89: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004f14c: add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x00000000000578e3: add byte ptr [rax], al; mov rdi, rbx; call 0x3a3dc; xor eax, eax; pop rbx; ret; 
0x000000000004e7c7: add byte ptr [rax], al; mov rdi, rbx; call 0x4bf87; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x000000000004bd5b: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d8: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004c160: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000054d63: add byte ptr [rax], al; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000049c50: add byte ptr [rax], al; mov rdi, rbx; mov rdx, rsi; syscall; 
0x000000000005ad9c: add byte ptr [rax], al; mov rdi, rbx; mov rsi, rdx; syscall; 
0x000000000003f7b8: add byte ptr [rax], al; mov rdi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x0000000000027843: add byte ptr [rax], al; mov rdi, rbx; syscall; 
0x000000000001e202: add byte ptr [rax], al; mov rdi, rcx; syscall; 
0x000000000004b393: add byte ptr [rax], al; mov rdi, rdx; syscall; 
0x00000000000232c2: add byte ptr [rax], al; mov rdi, rsi; syscall; 
0x0000000000055c82: add byte ptr [rax], al; mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000002229b: add byte ptr [rax], al; mov rdx, r10; syscall; 
0x000000000004ac85: add byte ptr [rax], al; mov rdx, r12; syscall; 
0x00000000000223c8: add byte ptr [rax], al; mov rdx, r8; syscall; 
0x00000000000223c8: add byte ptr [rax], al; mov rdx, r8; syscall; neg eax; ret; 
0x0000000000042da3: add byte ptr [rax], al; mov rdx, rbp; syscall; 
0x0000000000055d74: add byte ptr [rax], al; mov rdx, rbx; syscall; 
0x000000000005a426: add byte ptr [rax], al; mov rdx, rdi; syscall; 
0x00000000000221ec: add byte ptr [rax], al; mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000043225: add byte ptr [rax], al; mov rsi, qword ptr [r13 + 0xa0]; mov rdi, qword ptr [r13 + 0x88]; call rax; 
0x00000000000238db: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x28]; syscall; 
0x000000000003a3f1: add byte ptr [rax], al; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000004f1ea: add byte ptr [rax], al; mov rsi, r12; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x0000000000038837: add byte ptr [rax], al; mov rsi, r12; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000004cb28: add byte ptr [rax], al; mov rsi, r12; syscall; 
0x000000000004f0d7: add byte ptr [rax], al; mov rsi, r13; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000003a5ef: add byte ptr [rax], al; mov rsi, r13; syscall; 
0x00000000000562d6: add byte ptr [rax], al; mov rsi, r14; syscall; 
0x000000000004b13e: add byte ptr [rax], al; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000021f24: add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004296d: add byte ptr [rax], al; mov rsi, r9; call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042ba0: add byte ptr [rax], al; mov rsi, r9; call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000052eca: add byte ptr [rax], al; mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x000000000004b53a: add byte ptr [rax], al; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000004b5c8: add byte ptr [rax], al; mov rsi, r9; syscall; 
0x000000000004d4d2: add byte ptr [rax], al; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004af4e: add byte ptr [rax], al; mov rsi, rbx; sub rsp, 0x28; syscall; 
0x000000000004b107: add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x000000000005b7af: add byte ptr [rax], al; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x0000000000022e0b: add byte ptr [rax], al; mov rsi, rsp; mov qword ptr [rsp + 0x18], rax; call 0x4b25f; add rsp, 0x28; ret; 
0x0000000000022414: add byte ptr [rax], al; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000008ee4b: add byte ptr [rax], al; movabs al, byte ptr [0x3feb]; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x000000000008e74b: add byte ptr [rax], al; movabs al, byte ptr [0x3ff2]; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x000000000000931e: add byte ptr [rax], al; movabs dword ptr [0x5a0009001200001c], eax; ret; 
0x0000000000032d97: add byte ptr [rax], al; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000043d6d: add byte ptr [rax], al; movsx eax, byte ptr [rdi]; ret; 
0x0000000000043113: add byte ptr [rax], al; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x0000000000040847: add byte ptr [rax], al; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000040870: add byte ptr [rax], al; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005a528: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a528: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; xor eax, eax; ret; 
0x0000000000049b3c: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000004e661: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000004e6cf: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x000000000004b6ab: add byte ptr [rax], al; movsxd rdi, ebp; mov esi, 3; mov rax, r8; syscall; 
0x0000000000049b2c: add byte ptr [rax], al; movsxd rdi, ebx; call 0x169c0; pop rbx; ret; 
0x000000000004e4db: add byte ptr [rax], al; movsxd rdi, ebx; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000005b206: add byte ptr [rax], al; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000005737c: add byte ptr [rax], al; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000005a9a0: add byte ptr [rax], al; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x000000000002325e: add byte ptr [rax], al; movsxd rdi, edi; push rax; mov eax, 0x9e; syscall; 
0x000000000003a776: add byte ptr [rax], al; movsxd rdi, edi; push rax; mov eax, 0xf5; syscall; 
0x000000000005b2c0: add byte ptr [rax], al; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000004a8b2: add byte ptr [rax], al; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x0000000000043265: add byte ptr [rax], al; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x000000000004b6c5: add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005a9ea: add byte ptr [rax], al; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x0000000000056fd5: add byte ptr [rax], al; movsxd rdx, edx; or esi, 1; mov rax, r8; movsxd rsi, esi; syscall; 
0x000000000004d34a: add byte ptr [rax], al; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000004313b: add byte ptr [rax], al; movsxd rsi, dword ptr [r8 + 0x14]; cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x0000000000043044: add byte ptr [rax], al; movsxd rsi, dword ptr [rbx + 4]; xor edi, edi; mov eax, 0x6d; syscall; 
0x00000000000560a9: add byte ptr [rax], al; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x000000000004a762: add byte ptr [rax], al; movsxd rsi, ebx; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004081f: add byte ptr [rax], al; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x0000000000040756: add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x00000000000567dd: add byte ptr [rax], al; movsxd rsi, r8d; syscall; 
0x00000000000171ee: add byte ptr [rax], al; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000017bae: add byte ptr [rax], al; movzx eax, dl; movzx edx, cl; sub eax, edx; ret; 
0x0000000000024d85: add byte ptr [rax], al; movzx ecx, al; lea rax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x000000000003da1e: add byte ptr [rax], al; movzx edi, di; cmovbe eax, edi; ret; 
0x00000000000255e4: add byte ptr [rax], al; movzx edx, al; lea rax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000002f5d0: add byte ptr [rax], al; mulsd xmm0, qword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002c1b8: add byte ptr [rax], al; mulsd xmm0, qword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002fb45: add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002c744: add byte ptr [rax], al; mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x0000000000016ead: add byte ptr [rax], al; nop; cmp rsi, 7; mov eax, 0x16; ja 0x16ec0; ret; 
0x000000000004bf08: add byte ptr [rax], al; not eax; shr eax, 0x1f; ret; 
0x0000000000056a1e: add byte ptr [rax], al; not esi; and esi, 0x80; or esi, 7; movsxd rsi, esi; syscall; 
0x000000000004ed36: add byte ptr [rax], al; or al, byte ptr [rax]; add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000000a806: add byte ptr [rax], al; or bl, byte ptr [rdx]; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x0000000000033542: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rdi], rax; ret; 
0x0000000000033569: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002b9b1: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; or rax, rcx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000335dc: add byte ptr [rax], al; or byte ptr [rcx - 0xc03dbbc], 0xf; adc byte ptr [rsp - 4], al; ret; 
0x00000000000558ba: add byte ptr [rax], al; or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002b9d6: add byte ptr [rax], al; or byte ptr [rcx], 0xd0; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9ab: add byte ptr [rax], al; or byte ptr [rcx], 0xf8; mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x000000000004ed3a: add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000003b078: add byte ptr [rax], al; or eax, 0xffffffff; add rsp, 0x18; ret; 
0x0000000000038ab2: add byte ptr [rax], al; or eax, 0xffffffff; add rsp, 0x20; pop rbx; ret; 
0x000000000004c71d: add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; pop rbx; pop rbp; ret; 
0x000000000001ae46: add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000022461: add byte ptr [rax], al; or eax, 0xffffffff; ret; 
0x000000000004caf0: add byte ptr [rax], al; or edi, 0x8000; mov rax, r12; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000056a26: add byte ptr [rax], al; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000056c0b: add byte ptr [rax], al; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x000000000002418a: add byte ptr [rax], al; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000001e0c7: add byte ptr [rax], al; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x00000000000919de: add byte ptr [rax], al; out dx, eax; ret 0x705f; 
0x0000000000001d0a: add byte ptr [rax], al; outsd dx, dword ptr [rsi]; add eax, dword ptr [rax]; add byte ptr [rdi + 3], dh; add byte ptr [rax], al; syscall; 
0x0000000000037163: add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x0000000000039da6: add byte ptr [rax], al; pop rax; pop rbx; pop rbp; ret; 
0x0000000000039871: add byte ptr [rax], al; pop rax; ret; 
0x000000000005ba51: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000017a6d: add byte ptr [rax], al; pop rbx; cmovne rax, rdx; ret; 
0x0000000000018d8b: add byte ptr [rax], al; pop rbx; lea rax, [r12 + rax*4]; pop rbp; pop r12; ret; 
0x00000000000236fc: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022ec1: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000003cab7: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000001b871: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000017a26: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000000324df: add byte ptr [rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x00000000000324ec: add byte ptr [rax], al; pop rdx; cvttss2si rax, xmm0; ret; 
0x000000000005649a: add byte ptr [rax], al; pop rdx; pop rbx; pop rbp; ret; 
0x000000000001e0e8: add byte ptr [rax], al; pop rdx; ret; 
0x000000000002244e: add byte ptr [rax], al; pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000042bbd: add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x000000000005b321: add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x000000000004abf3: add byte ptr [rax], al; push rax; mov eax, 0x7f; syscall; 
0x000000000004b0c3: add byte ptr [rax], al; push rax; mov rdi, -9; call 0x169c0; pop rdx; ret; 
0x000000000008b404: add byte ptr [rax], al; push rax; ret; 
0x0000000000057e95: add byte ptr [rax], al; push rbx; mov rbp, rsi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x000000000002334c: add byte ptr [rax], al; push rcx; mov rdx, rdi; syscall; 
0x000000000004ebbb: add byte ptr [rax], al; push rcx; syscall; 
0x0000000000023a7c: add byte ptr [rax], al; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000001e1f7: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov byte ptr [rsp], 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x000000000005493f: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000043672: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000001552: add byte ptr [rax], al; ret 0; 
0x000000000000f97e: add byte ptr [rax], al; ret 0x13; 
0x0000000000007a76: add byte ptr [rax], al; ret 0x14; 
0x0000000000071c84: add byte ptr [rax], al; ret 0x1a7c; 
0x000000000000a69e: add byte ptr [rax], al; ret 0x22; 
0x0000000000008b0e: add byte ptr [rax], al; ret 0x27; 
0x000000000000f306: add byte ptr [rax], al; ret 0x2a; 
0x000000000000f6ae: add byte ptr [rax], al; ret 0x32; 
0x000000000000fbbe: add byte ptr [rax], al; ret 0x34; 
0x000000000000e586: add byte ptr [rax], al; ret 0x38; 
0x00000000000890ee: add byte ptr [rax], al; ret 0x7475; 
0x000000000008f78e: add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000008eb6: add byte ptr [rax], al; ret 0xe; 
0x000000000006596b: add byte ptr [rax], al; ret 0xffff; 
0x000000000000195e: add byte ptr [rax], al; ret 1; 
0x00000000000019be: add byte ptr [rax], al; ret 2; 
0x0000000000001d32: add byte ptr [rax], al; ret 3; 
0x00000000000007b2: add byte ptr [rax], al; ret 4; 
0x0000000000001d52: add byte ptr [rax], al; ret 5; 
0x000000000000f37e: add byte ptr [rax], al; ret 6; 
0x0000000000000596: add byte ptr [rax], al; ret; 
0x000000000000403e: add byte ptr [rax], al; rol byte ptr [rax + rax], 0; rol dword ptr [rax + rax], 0; ret; 
0x0000000000004042: add byte ptr [rax], al; rol dword ptr [rax + rax], 0; ret; 
0x000000000008fdcd: add byte ptr [rax], al; ror dword ptr [rsi], cl; add byte ptr [rax], al; ret; 
0x0000000000002e58: add byte ptr [rax], al; sbb al, 0; sbb al, 0x7d; ret 0x432; 
0x00000000000148f1: add byte ptr [rax], al; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000057413: add byte ptr [rax], al; sbb eax, eax; and eax, 0x80; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000071afc: add byte ptr [rax], al; sbb ebx, dword ptr [rsi + rdi + 0x739f5a49]; push rbp; ret; 
0x000000000002134a: add byte ptr [rax], al; seta al; ret; 
0x0000000000020fe7: add byte ptr [rax], al; setne al; movzx eax, al; ret; 
0x000000000004a9b4: add byte ptr [rax], al; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x000000000000638e: add byte ptr [rax], al; sub eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001969e: add byte ptr [rax], al; sub eax, r8d; ret; 
0x00000000000387f9: add byte ptr [rax], al; sub edx, eax; mov eax, edx; pop rdx; ret; 
0x00000000000570da: add byte ptr [rax], al; sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x00000000000235d0: add byte ptr [rax], al; sub rsp, 0x128; syscall; 
0x000000000005ac15: add byte ptr [rax], al; sub rsp, 0x20; syscall; 
0x0000000000039734: add byte ptr [rax], al; sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000005ac6e: add byte ptr [rax], al; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x0000000000001d12: add byte ptr [rax], al; syscall; 
0x000000000002232d: add byte ptr [rax], al; syscall; call 0x169c0; add rsp, 0x50; pop rbx; ret; 
0x0000000000023bbe: add byte ptr [rax], al; syscall; call 0x169c0; pop rdx; ret; 
0x000000000004ae0d: add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x0000000000055c57: add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000003a757: add byte ptr [rax], al; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x00000000000225aa: add byte ptr [rax], al; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000022664: add byte ptr [rax], al; syscall; movsxd rdi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000022592: add byte ptr [rax], al; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000003971a: add byte ptr [rax], al; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000223b3: add byte ptr [rax], al; syscall; neg eax; ret; 
0x000000000002370f: add byte ptr [rax], al; syscall; ret; 
0x000000000005a531: add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x0000000000001d2a: add byte ptr [rax], al; test al, 2; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 3; 
0x000000000002196f: add byte ptr [rax], al; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x000000000004305d: add byte ptr [rax], al; test byte ptr [rbx], 1; je 0x4309e; mov eax, 0x68; syscall; 
0x000000000000cd3e: add byte ptr [rax], al; test byte ptr [rip + 0x120000], ah; or dword ptr [rax], eax; ret; 
0x000000000009167e: add byte ptr [rax], al; test cl, bl; or ah, cl; ret 0x1291; 
0x0000000000070848: add byte ptr [rax], al; test eax, 0x1480028d; adc byte ptr [rdx - 0x43c483b7], cl; or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x0000000000057d5e: add byte ptr [rax], al; test eax, eax; cmovne eax, edx; pop rdx; ret; 
0x00000000000573e8: add byte ptr [rax], al; test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004d715: add byte ptr [rax], al; test eax, eax; jne 0x4d6eb; call 0x4d67f; xor eax, eax; ret; 
0x00000000000558ee: add byte ptr [rax], al; test eax, eax; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000020df9: add byte ptr [rax], al; test eax, eax; setne al; movzx eax, al; pop rdx; ret; 
0x000000000005730d: add byte ptr [rax], al; test edi, edi; je 0x57325; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000043695: add byte ptr [rax], al; test esi, 0xffffff00; jne 0x436a3; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000004d65f: add byte ptr [rax], al; test rdx, rdx; je 0x4d66e; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000008fb0e: add byte ptr [rax], al; xchg eax, ebp; ret; 
0x000000000000154a: add byte ptr [rax], al; xor al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000002f03f: add byte ptr [rax], al; xor bl, 0xf; adc dword ptr [rsp - 0x1c], eax; ret; 
0x000000000002ef72: add byte ptr [rax], al; xor bl, 0xf; adc dword ptr [rsp - 4], eax; ret; 
0x000000000002f003: add byte ptr [rax], al; xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x20], eax; ret; 
0x000000000002ef36: add byte ptr [rax], al; xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 8], eax; ret; 
0x000000000008f197: add byte ptr [rax], al; xor byte ptr [rbx], dh; ja 0x8f1ef; ret 0x3fd3; 
0x000000000000c95e: add byte ptr [rax], al; xor dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000016f35: add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x00000000000230aa: add byte ptr [rax], al; xor eax, eax; call 0x22175; pop rdx; sar eax, 0x1f; ret; 
0x0000000000020e81: add byte ptr [rax], al; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000054986: add byte ptr [rax], al; xor eax, eax; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x00000000000573c6: add byte ptr [rax], al; xor eax, eax; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000004bf35: add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x00000000000189ce: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b2f6: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000054c4e: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000002242b: add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x00000000000436b1: add byte ptr [rax], al; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004b38a: add byte ptr [rax], al; xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3ad: add byte ptr [rax], al; xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x0000000000018066: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000005abbf: add byte ptr [rax], al; xor eax, eax; syscall; 
0x0000000000021295: add byte ptr [rax], al; xor eax, eax; test edi, edi; setne al; neg eax; ret; 
0x0000000000055b8b: add byte ptr [rax], al; xor edi, edi; mov eax, 0x111; syscall; 
0x0000000000055be6: add byte ptr [rax], al; xor edi, edi; mov rax, rdx; syscall; 
0x000000000004a61b: add byte ptr [rax], al; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000004a61b: add byte ptr [rax], al; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; ret; 
0x000000000008fbae: add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x0000000000009fe7: add byte ptr [rax], bh; ret; 
0x0000000000017a67: add byte ptr [rax], bh; sbb byte ptr [rdx], bh; pop rbx; cmovne rax, rdx; ret; 
0x000000000002147a: add byte ptr [rax], cl; add byte ptr [rax], al; mov eax, 0xd9; syscall; 
0x0000000000023bb2: add byte ptr [rax], cl; add byte ptr [rax], al; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004087b: add byte ptr [rax], cl; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000008d388: add byte ptr [rax], dh; ret 0x7b8f; 
0x000000000008f198: add byte ptr [rax], dh; xor esi, dword ptr [rdi + 0x52]; ret 0x3fd3; 
0x000000000004b137: add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000022ec9: add byte ptr [rax], dl; add byte ptr [rax], al; ret; 
0x0000000000084fb5: add byte ptr [rax], dl; call qword ptr [rcx]; 
0x00000000000225cb: add byte ptr [rax], r8b; add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 1; ret 0xebe8; 
0x00000000000225a8: add byte ptr [rax], r8b; add byte ptr [rdi], cl; add eax, 0xe8c78948; or al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x0000000000017cf5: add byte ptr [rax], r8b; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000018acd: add byte ptr [rax], r8b; mov eax, 1; ret; 
0x0000000000018e15: add byte ptr [rax], r8b; mov rax, rbx; pop rbx; ret; 
0x00000000000171ed: add byte ptr [rax], r8b; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000017bad: add byte ptr [rax], r8b; movzx eax, dl; movzx edx, cl; sub eax, edx; ret; 
0x0000000000017a25: add byte ptr [rax], r8b; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001901d: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x000000000000cd3f: add byte ptr [rbp + 0x120000], al; or dword ptr [rax], eax; ret; 
0x0000000000023a92: add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x0000000000056994: add byte ptr [rbp + 0x1e], dh; mov qword ptr [r9 + 0x90], -0x1c; lea rdi, [r9 + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x000000000005906d: add byte ptr [rbp + 0x2fd14], cl; add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000003a76f: add byte ptr [rbp + 0x31], al; shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x00000000000430df: add byte ptr [rbp + 0x39], al; js 0x430f8; jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x000000000000d09f: add byte ptr [rbp + 0x39], cl; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x0000000000056c9a: add byte ptr [rbp + 0x410475c0], al; or dword ptr [rax], 8; ret; 
0x0000000000056cf6: add byte ptr [rbp + 0x410a75c0], al; or dword ptr [rax], 4; ret; 
0x000000000005729f: add byte ptr [rbp + 0x481174c0], al; movsxd rdi, eax; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x000000000005730e: add byte ptr [rbp + 0x481274ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000022233: add byte ptr [rbp + 0x5f], dh; mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x000000000004b0fe: add byte ptr [rbp + 0x6c], dh; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x0000000000089112: add byte ptr [rbp + 0x74], dh; xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000004bede: add byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004bec9: add byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000005668a: add byte ptr [rbp + 0xc], dh; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000028995: add byte ptr [rbp + 0xd], dh; add rdx, rdx; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x000000000003a83a: add byte ptr [rbp + 0xf], dh; cmp edi, -1; je 0x3a84c; movsx eax, dil; and eax, 0xdfff; ret; 
0x0000000000034fa1: add byte ptr [rbp + 0xf], dh; movsd xmm0, qword ptr [rsp - 8]; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035185: add byte ptr [rbp + 0xf], dh; movss xmm0, dword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000035391: add byte ptr [rbp + 3], dh; movaps xmm0, xmm1; ret; 
0x0000000000035341: add byte ptr [rbp + 4], dh; movapd xmm0, xmm1; ret; 
0x00000000000289e3: add byte ptr [rbp + 8], dh; xor eax, eax; shl edx, 9; sete al; ret; 
0x00000000000289af: add byte ptr [rbp + 9], dh; xor eax, eax; shl rdx, 0xc; sete al; ret; 
0x0000000000053e48: add byte ptr [rbp + rax + 0x48], dh; test edx, edx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd2: add byte ptr [rbp + rax + 0x48], dh; test edx, edx; jne 0x53ff7; xor eax, eax; ret; 
0x0000000000037868: add byte ptr [rbp + rdi*8 - 0x26fc88c1], dl; stc; ret; 
0x000000000004d324: add byte ptr [rbp + rdx + 0x48], dh; movsxd rdi, dword ptr [rbx + 0x78]; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x00000000000250c6: add byte ptr [rbp + rsi + 0x3d], dh; ret 0; 
0x0000000000058e6a: add byte ptr [rbp - 0x2d9645b9], cl; adc byte ptr [rcx + 1], 0; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x00000000000269fd: add byte ptr [rbp - 0x33], dh; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000000558ef: add byte ptr [rbp - 0x38f58640], al; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x00000000000573e9: add byte ptr [rbp - 0x3db7f040], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000057d5f: add byte ptr [rbp - 0x3dbaf040], al; pop rdx; ret; 
0x0000000000020dfa: add byte ptr [rbp - 0x3f6af040], al; movzx eax, al; pop rdx; ret; 
0x0000000000051424: add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x000000000003b89e: add byte ptr [rbp - 0x76], al; adc dword ptr [rcx - 0xa], eax; ret 0x74c0; 
0x000000000003d57f: add byte ptr [rbp - 0x76c88740], al; ret; 
0x00000000000262a2: add byte ptr [rbp - 0x77], al; dec dword ptr [rbx + 0x63]; add al, 0xbe; add rax, r14; jmp rax; 
0x00000000000354c1: add byte ptr [rbp - 0xcf4862e], al; movups xmm1, xmmword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x000000000002c88e: add byte ptr [rbp - 0xcf48b25], al; movups xmm1, xmmword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002c308: add byte ptr [rbp - 0xdf48b25], al; movups xmm1, xmmword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x0000000000017fb6: add byte ptr [rbp - 9], dh; sub rax, rdi; ret; 
0x000000000008a963: add byte ptr [rbx + 0x2e007b20], ch; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x0000000000057248: add byte ptr [rbx + 0x3108247c], cl; imul al; ret 0xfffe; 
0x0000000000017a27: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000047950: add byte ptr [rbx + 0x39742444], cl; ret 0x9489; 
0x0000000000084ec1: add byte ptr [rbx + 0x3ff0500], ah; inc dword ptr [rsi]; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000027e0f: add byte ptr [rbx + 0x440ffff8], al; ret 0xa1e9; 
0x00000000000181f3: add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x0000000000017a6e: add byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x0000000000057e96: add byte ptr [rbx + 0x48], dl; mov ebp, esi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x0000000000017bbf: add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x17780; mov rax, rbx; pop rbx; ret; 
0x000000000001815f: add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x17840; mov rax, rbx; pop rbx; ret; 
0x000000000002350d: add byte ptr [rbx + 0x48c33040], cl; movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x0000000000018d8c: add byte ptr [rbx + 0x49], bl; lea eax, [rsp + rax*4]; pop rbp; pop r12; ret; 
0x0000000000022751: add byte ptr [rbx + 0x5188fde2], al; lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000004c71e: add byte ptr [rbx + 0x5b5affc8], al; pop rbp; ret; 
0x0000000000027411: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000000236fd: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000022ec2: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000018d61: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000008fc6f: add byte ptr [rbx + 0x7f], al; xchg eax, esi; push rcx; mov cl, 0x68; ret; 
0x0000000000057fff: add byte ptr [rbx + 0xf4419f8], al; fadd dword ptr [r9 + 0x69]; ret; 
0x000000000004a9f2: add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x000000000004b017: add byte ptr [rbx + rbx - 0x46], dh; add byte ptr [rcx], al; sub al, byte ptr [rax]; mov eax, 0x101; syscall; 
0x0000000000047fc3: add byte ptr [rbx + rcx*4 + 0x48], cl; and byte ptr [rcx - 0x75], al; adc dword ptr [rbp - 0x6077f02e], eax; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x00000000000481bf: add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x8b4c; 
0x000000000003f89a: add byte ptr [rbx + rdi - 0x77], dh; ret 0x6348; 
0x0000000000021b94: add byte ptr [rbx - 0x16f3dbbc], cl; sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000227ac: add byte ptr [rbx - 0x17], bl; fcomp dword ptr [rsi]; add eax, dword ptr [rax]; pop rbx; ret; 
0x000000000008adf7: add byte ptr [rbx - 0x26ff279c], bl; mov esi, 0x97a40031; ret; 
0x0000000000056777: add byte ptr [rbx - 0x2dcef932], al; movsxd rsi, esi; mov r10, rbp; mov rax, r13; syscall; 
0x000000000004ed3b: add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000003adff: add byte ptr [rbx - 0x78f0c006], 0xfc; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000006780c: add byte ptr [rbx], 0xf8; jmp rdi; 
0x000000000005b59b: add byte ptr [rbx], al; and al, 0x38; add rsp, 0x48; ret; 
0x000000000007c34d: add byte ptr [rbx], al; xor byte ptr [rip + 0x5e201430], al; call qword ptr [rsi]; 
0x0000000000071afd: add byte ptr [rbx], bl; pushfq; pop r10; lahf; jae 0x71b5b; ret; 
0x000000000008a95b: add byte ptr [rbx], cl; add byte ptr [rax - 0x54ff63ee], cl; and byte ptr [rbx], bh; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x0000000000057909: add byte ptr [rbx], cl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x000000000008ff83: add byte ptr [rbx], cl; jmp qword ptr [rbx]; 
0x000000000004353e: add byte ptr [rcx + 0x10eae8f5], cl; std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000004349f: add byte ptr [rcx + 0x1189e8f5], cl; std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000000f8a7: add byte ptr [rcx + 0x12000029], al; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000070849: add byte ptr [rcx + 0x1480028d], ch; adc byte ptr [rdx - 0x43c483b7], cl; or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x000000000003986b: add byte ptr [rcx + 0x1c57e9c7], cl; add byte ptr [rax], al; pop rax; ret; 
0x00000000000436be: add byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000009fdf: add byte ptr [rcx + 0x22000029], cl; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000057bcd: add byte ptr [rcx + 0x24041005], cl; add byte ptr [rax + 0x63], cl; jp 0x57c08; mov eax, 0xc8; syscall; 
0x00000000000426b6: add byte ptr [rcx + 0x252ddf0d], cl; add byte ptr [rcx + 0x2558fd15], cl; add al, ch; ret; 
0x00000000000426bc: add byte ptr [rcx + 0x2558fd15], cl; add al, ch; ret; 
0x0000000000021fb0: add byte ptr [rcx + 0x275fc105], cl; add byte ptr [rax - 0x68], cl; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x000000000000a96f: add byte ptr [rcx + 0x2a], bh; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x0000000000040049: add byte ptr [rcx + 0x415d5bd0], cl; pop rsp; ret; 
0x000000000005664f: add byte ptr [rcx + 0x415d5bd8], cl; pop rsp; pop r13; ret; 
0x0000000000037ef4: add byte ptr [rcx + 0x415d5bd8], cl; pop rsp; ret; 
0x0000000000049e42: add byte ptr [rcx + 0x415d5be8], cl; pop rsp; ret; 
0x000000000002334d: add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x0000000000056326: add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x0000000000022583: add byte ptr [rcx + 0x48c35bf0], cl; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x000000000005aa93: add byte ptr [rcx + 0x49fc2444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x00000000000506a4: add byte ptr [rcx + 0x58d48c2], cl; xchg eax, edx; sub dword ptr [rax + rax], eax; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000003c62e: add byte ptr [rcx + 0x59], al; pop rbx; pop rbp; ret; 
0x0000000000049b64: add byte ptr [rcx + 0x5bd8f7d8], cl; ret; 
0x000000000002200a: add byte ptr [rcx + 0x5d5b5ad8], cl; ret; 
0x0000000000038b0c: add byte ptr [rcx + 0x5d5b5ae8], cl; ret; 
0x0000000000043114: add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x000000000004a8b3: add byte ptr [rcx + 0x63], cl; cld; mov eax, 0xd; syscall; 
0x000000000004313c: add byte ptr [rcx + 0x63], cl; jo 0x43155; cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x0000000000038586: add byte ptr [rcx + 0x63], cl; ret 0x178b; 
0x000000000004caf1: add byte ptr [rcx + 0x8000cf], al; add byte ptr [rcx + rcx*4 - 0x20], cl; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000055b0b: add byte ptr [rcx + 0x80e6], al; add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000055b11: add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000058061: add byte ptr [rcx + 1], al; ret 0xc031; 
0x0000000000027d4f: add byte ptr [rcx + 1], cl; ret; 
0x00000000000019bb: add byte ptr [rcx + 4], dh; add byte ptr [rax], al; ret 2; 
0x0000000000027dea: add byte ptr [rcx + 9], cl; ret; 
0x0000000000039822: add byte ptr [rcx + rax - 0x27], cl; cmp r11d, 0x2f; jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000028412: add byte ptr [rcx + rax - 0xc], dh; sub rax, rdi; ret; 
0x00000000000190ef: add byte ptr [rcx + rbp - 0x40], al; ret; 
0x000000000004aff5: add byte ptr [rcx + rcx*4 - 0x10], cl; mov rdx, r13; syscall; 
0x000000000004f0d8: add byte ptr [rcx + rcx*4 - 0x12], cl; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000003a5f0: add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x000000000004b819: add byte ptr [rcx + rcx*4 - 0x18], cl; mov rdi, r14; syscall; 
0x00000000000407ce: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; syscall; 
0x0000000000038885: add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x000000000004f1eb: add byte ptr [rcx + rcx*4 - 0x1a], cl; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x0000000000038838: add byte ptr [rcx + rcx*4 - 0x1a], cl; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000004cb29: add byte ptr [rcx + rcx*4 - 0x1a], cl; syscall; 
0x000000000004d4c8: add byte ptr [rcx + rcx*4 - 0x1e], al; mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004ac86: add byte ptr [rcx + rcx*4 - 0x1e], cl; syscall; 
0x000000000005733b: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004caf7: add byte ptr [rcx + rcx*4 - 0x20], cl; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x00000000000180de: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000002229c: add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000002229c: add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000004b5dd: add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000004296e: add byte ptr [rcx + rcx*4 - 0x32], cl; call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042ba1: add byte ptr [rcx + rcx*4 - 0x32], cl; call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000052ecb: add byte ptr [rcx + rcx*4 - 0x32], cl; call 0x50c60; add rsp, 0x108; ret; 
0x000000000004b53b: add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x000000000004b5c9: add byte ptr [rcx + rcx*4 - 0x32], cl; syscall; 
0x0000000000054fa8: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, r8; syscall; 
0x000000000004c20c: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, rbp; syscall; 
0x0000000000054eb7: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rdi, rbx; syscall; 
0x000000000001acad: add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000002194f: add byte ptr [rcx + rcx*4 - 0x39], cl; mov rdx, rcx; syscall; 
0x000000000004b188: add byte ptr [rcx + rcx*4 - 0x39], cl; mov rsi, rbx; syscall; 
0x000000000005aa29: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x000000000005aa29: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; movsxd rdi, r9d; call 0x169c0; pop rdx; ret; 
0x000000000004b13f: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov rdx, rbx; syscall; 
0x0000000000021f25: add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000223c9: add byte ptr [rcx + rcx*4 - 0x3e], cl; syscall; 
0x00000000000223c9: add byte ptr [rcx + rcx*4 - 0x3e], cl; syscall; neg eax; ret; 
0x0000000000055bbd: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, r12; syscall; 
0x000000000004b971: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, r9; syscall; 
0x0000000000056dc2: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdi, rbx; syscall; 
0x0000000000022204: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x00000000000553ab: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, rsi; syscall; 
0x0000000000057947: add byte ptr [rcx + rcx*4 - 0x40], cl; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000001ace2: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000056d44: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x0000000000056fef: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x00000000000562d7: add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x00000000000444de: add byte ptr [rcx + rcx*4 - 9], cl; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000004a218: add byte ptr [rcx + rdx + 0xf], dh; lahf; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x75], 0x5c; ret; 
0x0000000000023bae: add byte ptr [rcx + rdx - 0x46], dh; add byte ptr [rax], cl; add byte ptr [rax], al; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000002231d: add byte ptr [rcx + rdx - 0x46], dh; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000002c451: add byte ptr [rcx + rdx - 0xe], dh; movups xmm1, xmmword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003fade: add byte ptr [rcx - 0x17207616], cl; ret 0xffb9; 
0x00000000000548eb: add byte ptr [rcx - 0x18], dl; or r8d, dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310c74c0], cl; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x000000000005a54e: add byte ptr [rcx - 0x19], al; jg 0x5a50e; loope 0x5a558; add byte ptr [rax], al; syscall; 
0x000000000005a59e: add byte ptr [rcx - 0x19], al; jg 0x5a5ee; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000004bfaa: add byte ptr [rcx - 0x2076b73b], cl; call qword ptr [rbx + 0x18]; 
0x000000000003808c: add byte ptr [rcx - 0x3b7cb728], cl; adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005953e: add byte ptr [rcx - 0x3fce0609], bl; test edx, edx; sete al; ret; 
0x000000000005741b: add byte ptr [rcx - 0x3fcef7b9], cl; ret; 
0x0000000000058e73: add byte ptr [rcx - 0x40], ch; xor byte ptr [rbx], 0xe1; add dword ptr [rcx], eax; ror byte ptr [rax - 0x68], 1; ret; 
0x00000000000555cb: add byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x00000000000778c8: add byte ptr [rcx - 0x666266f9], bl; pushfq; cdq; ret; 
0x000000000001689f: add byte ptr [rcx - 0x73], al; add al, byte ptr [rcx - 0x3a]; add dword ptr [rax], esi; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000043226: add byte ptr [rcx - 0x75], cl; mov ch, 0xa0; add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; mov ebp, 0x88; call rax; 
0x000000000004322d: add byte ptr [rcx - 0x75], cl; mov ebp, 0x88; call rax; 
0x0000000000020be7: add byte ptr [rcx - 0x76], al; add cl, byte ptr [rcx - 1]; ret 0xe083; 
0x0000000000051dec: add byte ptr [rcx - 0x77], al; ret; 
0x000000000005574f: add byte ptr [rcx - 0x77], cl; fdiv dword ptr [rcx]; sar byte ptr [rsi + 0x83], cl; mov rax, rbp; syscall; 
0x000000000005c7c5: add byte ptr [rcx - 0x77], cl; pop rax; add rsp, 0x100; ret; 
0x0000000000018499: add byte ptr [rcx - 0x77], cl; ret 0x8d48; 
0x0000000000058a2e: add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000023d28: add byte ptr [rcx - 0x77], cl; retf 0x4850; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x0000000000055232: add byte ptr [rcx - 0x7c0fc3bd], cl; or al, 0x24; add al, ch; fistp dword ptr [rip + 0x39480000]; ret; 
0x0000000000041598: add byte ptr [rcx - 0x7d], cl; add byte ptr ds:[rdi], cl; test edx, esi; add dword ptr [rax], eax; add bh, dh; ret; 
0x000000000001842a: add byte ptr [rcx - 0x7d], cl; mov byte ptr [rcx], 0x89; ret 0xc189; 
0x0000000000017063: add byte ptr [rcx - 0x7d], cl; rol byte ptr [rcx], 0x39; ret 0x788; 
0x0000000000056986: add byte ptr [rcx - 0xa], al; ret 0x7480; 
0x0000000000021970: add byte ptr [rcx - 0xa], al; rol byte ptr [rsi], 1; and byte ptr [rbx + rcx + 0x4c], dh; mov eax, ecx; syscall; 
0x000000000005ed70: add byte ptr [rcx - 1], cl; ret 0x894d; 
0x000000000009158f: add byte ptr [rcx - 5], dh; int1; mov ch, 0x1a; ret; 
0x000000000004f140: add byte ptr [rcx], 0; add byte ptr [rsi + 0x80c2], bh; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000084fd7: add byte ptr [rcx], ah; jmp qword ptr [rdx]; 
0x000000000000328d: add byte ptr [rcx], al; add al, 0x81; add al, 1; ret; 
0x000000000005de84: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000230f4: add byte ptr [rcx], al; add byte ptr [rax], al; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000004aff2: add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r14; mov rdx, r13; syscall; 
0x000000000005c7cd: add byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000005f300: add byte ptr [rcx], al; add eax, 0xffffffff; jmp qword ptr [rbx]; 
0x0000000000021992: add byte ptr [rcx], al; add rsp, 0x158; ret; 
0x00000000000275c5: add byte ptr [rcx], al; ret; 
0x00000000000033d5: add byte ptr [rcx], al; sbb al, byte ptr [rax]; sbb byte ptr [rax], ah; and dword ptr [rax], esi; or byte ptr [rax - 0x60], cl; ret 0xf140; 
0x000000000004b01b: add byte ptr [rcx], al; sub al, byte ptr [rax]; mov eax, 0x101; syscall; 
0x00000000000150c6: add byte ptr [rcx], bh; ret; 
0x000000000000f377: add byte ptr [rcx], bl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 6; 
0x00000000000387fa: add byte ptr [rcx], ch; ret 0xd089; 
0x00000000000179b8: add byte ptr [rcx], ch; vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000009fe5: add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000006295: add byte ptr [rcx], cl; add byte ptr [rdx], bl; ret; 
0x0000000000006d15: add byte ptr [rcx], cl; add byte ptr [rdx], ch; ret 4; 
0x0000000000009625: add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x0000000000035e37: add byte ptr [rcx], dh; call qword ptr [rdx + 0x52]; 
0x00000000000362ec: add byte ptr [rcx], dh; call qword ptr [rsi + 0x56]; 
0x000000000005b966: add byte ptr [rcx], dh; rcl byte ptr [rbp + 0x48], 0x83; leave; call qword ptr [rbx - 0x45]; 
0x00000000000189cf: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000054c4f: add byte ptr [rcx], dh; rcr byte ptr [rbx - 0x3d], 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x0000000000022138: add byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x000000000005499b: add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310a74c0], cl; rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x00000000000548f1: add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310c74c0], cl; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x0000000000020f68: add byte ptr [rcx], dh; rol byte ptr [rbp - 0x3d6af040], cl; mov eax, edx; pop rbx; ret; 
0x0000000000020e82: add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000021343: add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000043528: add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x4b; or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000000434d5: add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x53; or byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x0000000000054c98: add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x39], 0x44; or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x00000000000573c7: add byte ptr [rcx], dh; sal al, 0xf; mov cl, 0x17; ret; 
0x0000000000054987: add byte ptr [rcx], dh; sal al, 0xf; mov cl, 0x57; add al, 0xc1; call 0x1e5cc99; ret; 
0x00000000000436b2: add byte ptr [rcx], dh; sal bl, 0xa5; ret; 
0x000000000004b38b: add byte ptr [rcx], dh; sal bl, 0xab; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3ae: add byte ptr [rcx], dh; sal bl, 0xab; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x000000000004a61c: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; 
0x000000000004a61c: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; ret; 
0x0000000000027812: add byte ptr [rcx], dh; shr bl, cl; sub dword ptr [rax + 0xc], edi; syscall; 
0x000000000008aeb7: add byte ptr [rcx], dh; test al, 0x27; add cl, dh; outsb dx, byte ptr [rsi]; ret; 
0x000000000001a63c: add byte ptr [rcx], dh; test byte ptr [rcx + 0x95de8ef], 4; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000000961f: add byte ptr [rdi + 0x12000003], dh; add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x0000000000020fda: add byte ptr [rdi + 0x18], dh; and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x0000000000057375: add byte ptr [rdi + 0x26], dh; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x0000000000022422: add byte ptr [rdi + 0x3f], bh; call 0x2248e; xor eax, eax; pop rdx; ret; 
0x000000000008ab13: add byte ptr [rdi + 0x5c00aeed], ch; adc al, byte ptr es:[rax]; insd dword ptr [rdi], dx; ret 0x4d; 
0x00000000000913df: add byte ptr [rdi + 0x7d], cl; scasb al, byte ptr [rdi]; mov cl, 0x5b; call rcx; 
0x000000000004ae09: add byte ptr [rdi + 2], bh; syscall; 
0x000000000004ae09: add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x0000000000001d0b: add byte ptr [rdi + 3], ch; add byte ptr [rax], al; ja 0x1d15; add byte ptr [rax], al; syscall; 
0x0000000000001d0f: add byte ptr [rdi + 3], dh; add byte ptr [rax], al; syscall; 
0x0000000000057013: add byte ptr [rdi + 4], dh; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000054b92: add byte ptr [rdi + 5], dh; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bbd: add byte ptr [rdi + 5], dh; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x00000000000296a6: add byte ptr [rdi + 5], dh; movsd qword ptr [rdi], xmm4; ret; 
0x0000000000016eb8: add byte ptr [rdi + 5], dh; ret; 
0x0000000000022e49: add byte ptr [rdi + 9], bh; setne al; movzx eax, al; neg eax; ret; 
0x000000000003d4d3: add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x000000000004d6a5: add byte ptr [rdi + rax + 0x48], dh; mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000002af04: add byte ptr [rdi + rcx], al; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x00000000000230f7: add byte ptr [rdi - 0x64], bh; call 0x4b501; add rsp, 0x28; ret; 
0x000000000008a96b: add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000002ea90: add byte ptr [rdi], bh; mov dword ptr [rsp + 0xc], edx; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000023195: add byte ptr [rdi], bl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000021459: add byte ptr [rdi], cl; add eax, 0x3ebc031; mov dword ptr [rax + 8], ebx; pop rbx; ret; 
0x0000000000023aaf: add byte ptr [rdi], cl; add eax, 0x58106b89; pop rbx; pop rbp; ret; 
0x0000000000023402: add byte ptr [rdi], cl; add eax, 0x6348c289; cli; call 0x169c0; pop rdx; ret; 
0x0000000000055c58: add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x00000000000235d8: add byte ptr [rdi], cl; add eax, 0x8908ff83; ret; 
0x0000000000021482: add byte ptr [rdi], cl; add eax, 0x8948c085; ret; 
0x0000000000049b0c: add byte ptr [rdi], cl; add eax, 0x89c08548; ret; 
0x00000000000233f0: add byte ptr [rdi], cl; add eax, 0x89daf883; ret 0xd75; 
0x0000000000023c90: add byte ptr [rdi], cl; add eax, 0xe8c78948; and eax, 0x5affff2d; ret; 
0x0000000000023590: add byte ptr [rdi], cl; add eax, 0xe8c78948; and eax, 0x5affff34; ret; 
0x000000000005b2cd: add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b05ae8f; ret; 
0x000000000005a8bb: add byte ptr [rdi], cl; add eax, 0xe8c78948; cli; sar bl, 0xff; pop rdx; ret; 
0x000000000005af78: add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5afffbba; ret; 
0x00000000000396fd: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x5afffdd2; ret; 
0x0000000000023dfd: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x5affff2b; ret; 
0x000000000004abfa: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ebx, 0x5afffcbd; ret; 
0x000000000004a9fc: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x5afffcbf; ret; 
0x0000000000023cf7: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov esi, 0x5affff2c; ret; 
0x00000000000225ab: add byte ptr [rdi], cl; add eax, 0xe8c78948; or al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x00000000000235a8: add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5affff34; ret; 
0x000000000003a758: add byte ptr [rdi], cl; add eax, 0xe8c78948; pop rbp; ret 0xfffd; 
0x0000000000023a4d: add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5affff2f; ret; 
0x00000000000237f3: add byte ptr [rdi], cl; add eax, 0xe8c78948; ret 0xff31; 
0x0000000000039cf2: add byte ptr [rdi], cl; add eax, 0xe8c78948; ret; 
0x000000000005a98f: add byte ptr [rdi], cl; add eax, 0xe8c78948; sar bl, 0xff; pop rdx; ret; 
0x0000000000049c98: add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffccd; ret; 
0x000000000003d498: add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffd95; ret; 
0x0000000000023b0c: add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x5affff2e; ret; 
0x000000000003a780: add byte ptr [rdi], cl; add eax, 0xe8c78948; xor eax, 0x5afffdc2; ret; 
0x0000000000022593: add byte ptr [rdi], cl; add eax, 0xe8f86348; and al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x0000000000023c7a: add byte ptr [rdi], cl; add eax, 0xe9c78948; cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; 
0x00000000000226d8: add byte ptr [rdi], cl; add eax, 0xe9c78948; fld qword ptr [rdx - 1]; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x0000000000046c5f: add byte ptr [rdi], cl; lahf; ret 0x48d; 
0x000000000003da1f: add byte ptr [rdi], cl; mov bh, 0xff; cmovbe eax, edi; ret; 
0x0000000000024ae7: add byte ptr [rdi], cl; mov bh, 4; push rax; ret; 
0x000000000004dbe6: add byte ptr [rdi], cl; mov dh, 0; ret; 
0x00000000000171ef: add byte ptr [rdi], cl; mov dh, 0xc1; sub eax, r8d; ret; 
0x0000000000017baf: add byte ptr [rdi], cl; mov dh, 0xc2; movzx edx, cl; sub eax, edx; ret; 
0x0000000000024d86: add byte ptr [rdi], cl; mov dh, 0xc8; lea rax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x00000000000255e5: add byte ptr [rdi], cl; mov dh, 0xd0; lea rax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000001e1ae: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000051141: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000031923: add byte ptr [rdi], cl; push rdi; ret 0x7ae8; 
0x0000000000035bc2: add byte ptr [rdi], cl; push rdi; ret 0xede9; 
0x000000000002bb87: add byte ptr [rdi], cl; push rdi; ret 0xff3; 
0x000000000001dea8: add byte ptr [rdi], cl; push rdi; ret; 
0x000000000003529a: add byte ptr [rdi], cl; push rdi; retf 0x3941; sal byte ptr [rax - 1], 1; ret 0x3941; 
0x00000000000350f0: add byte ptr [rdi], cl; push rdi; retf 0x3941; sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x0000000000030fa1: add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000002ad79: add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000035654: add byte ptr [rdi], cl; push rdi; sal ebx, 1; divps xmm0, xmm2; ret; 
0x00000000000355a6: add byte ptr [rdi], cl; push rdi; sal edx, 1; divps xmm0, xmm2; ret; 
0x000000000002bbe3: add byte ptr [rdi], cl; push rdi; shr ebx, 5; call 0x29aa6; add rsp, 0x18; ret; 
0x0000000000022533: add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x0000000000032d98: add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b98e: add byte ptr [rdi], cl; sub cl, al; ret; 
0x00000000000556e3: add byte ptr [rdi], cl; test byte ptr [rdi - 0x75000000], al; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000018424: add byte ptr [rdi], cl; test dh, cl; add dword ptr [rax], eax; add byte ptr [rcx - 0x7d], cl; mov byte ptr [rcx], 0x89; ret 0xc189; 
0x0000000000040a4d: add byte ptr [rdi], cl; test ebx, esi; add al, byte ptr [rax]; add bh, dh; ret; 
0x000000000004159c: add byte ptr [rdi], cl; test edx, esi; add dword ptr [rax], eax; add bh, dh; ret; 
0x000000000005a901: add byte ptr [rdi], cl; xchg eax, ebp; rol byte ptr [rbx], 0x44; and al, 0x30; add rsp, 0x48; ret; 
0x000000000002e0e5: add byte ptr [rdi], cl; xchg eax, edi; ret 0xeed9; 
0x0000000000025870: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8141; 
0x000000000002ee02: add byte ptr [rdi], cl; xchg eax, esp; ret 0x840f; 
0x0000000000026471: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x00000000000508b6: add byte ptr [rdi], cl; xchg eax, esp; ret 0xdb85; 
0x0000000000054952: add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566da: add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x000000000004f13e: add byte ptr [rdx + 0x180], bh; mov esi, 0x80c2; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000023a7d: add byte ptr [rdx + 0x48], dl; mov edi, dword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000005dbe7: add byte ptr [rdx + 0x5b], bl; pop rbp; jmp rax; 
0x00000000000452cf: add byte ptr [rdx + 0x5b], bl; pop rbp; pop r12; pop r13; ret; 
0x00000000000450ad: add byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x00000000000506c7: add byte ptr [rdx + 0x63], cl; adc al, 0x90; add rax, rdx; jmp rax; 
0x00000000000528c6: add byte ptr [rdx + 0x63], cl; adc al, 0xa0; add rax, rdx; jmp rax; 
0x0000000000051f31: add byte ptr [rdx + 0x63], cl; adc al, 0xb8; add rax, rdx; jmp rax; 
0x0000000000056db8: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd8: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054f9e: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x0000000000054d2e: add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552d0: add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x0000000000040879: add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x000000000002114c: add byte ptr [rdx + 0xf], al; mov dh, 4; adc byte ptr [rcx], al; ret 0x8b41; 
0x000000000004b78b: add byte ptr [rdx + 0xf], dh; xchg eax, ebp; ret; 
0x0000000000055bb3: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b967: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a6: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c202: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054ead: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db79: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000040850: add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x0000000000056c07: add byte ptr [rdx + 1], bh; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x0000000000016960: add byte ptr [rdx + 3], dh; mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004ed2f: add byte ptr [rdx + rcx - 0x39], dh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000004cb1a: add byte ptr [rdx + rdx + 0x48], dh; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000009131f: add byte ptr [rdx - 0x52b73b], cl; dec dword ptr [rdi - 0x7ae47743]; sar byte ptr [rbx + 0x59], 0x87; ret 0x9d9b; 
0x000000000005590b: add byte ptr [rdx - 0x75], dl; pop rax; xor byte ptr [rbx + 0x2427be05], cl; add byte ptr [rcx], bh; ret; 
0x00000000000324ed: add byte ptr [rdx - 0xd], bl; cvttps2pi mm0, xmm0; ret; 
0x00000000000324e0: add byte ptr [rdx - 0xe], bl; cvttps2pi mm0, xmm0; ret; 
0x0000000000009fe3: add byte ptr [rdx], ah; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000053125: add byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000003d169: add byte ptr [rdx], bh; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003f400: add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, ebx; pop rbx; ret; 
0x0000000000006297: add byte ptr [rdx], bl; ret; 
0x0000000000006d17: add byte ptr [rdx], ch; ret 4; 
0x000000000004ed37: add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000002e13: add byte ptr [rdx], cl; and byte ptr [rcx], cl; ret; 
0x000000000006b92b: add byte ptr [rdx], dh; and byte ptr [rbx], dh; and byte ptr [rbx], al; and dword ptr [rbx], ebp; and eax, esp; jmp rcx; 
0x000000000000f8ab: add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000006293: add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], bl; ret; 
0x0000000000006d13: add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], ch; ret 4; 
0x0000000000009623: add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x0000000000090f4f: add byte ptr [rip + 0x4a121583], bh; ret; 
0x000000000008f73f: add byte ptr [rip + 0x67cc487b], dl; ret; 
0x0000000000084ec3: add byte ptr [rip + 0x6ff03ff], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000002d625: add byte ptr [rip + 0x7f7], bh; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d6ff: add byte ptr [rip + 0x7f7], bh; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x0000000000032bdb: add byte ptr [rip + 0x7fefffff], bh; jbe 0x32be4; ret; 
0x000000000004b012: add byte ptr [rip + 0xa000], bh; je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b077: add byte ptr [rip + 0xa000], bh; je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x00000000000544a1: add byte ptr [rip - 0x131], ah; or eax, 0x30; mov dword ptr [rdi + 8], eax; ret; 
0x000000000002303d: add byte ptr [rsi + 0x11], bh; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x0000000000024ad8: add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000569a8: add byte ptr [rsi + 0x18], bh; mov eax, 0x111; syscall; 
0x000000000005a524: add byte ptr [rsi + 0x20], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x000000000002223b: add byte ptr [rsi + 0x406], bh; mov rax, r9; syscall; 
0x000000000008f3df: add byte ptr [rsi + 0x6aadda63], dh; std; ret; 
0x000000000002196b: add byte ptr [rsi + 0x8002], bh; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x000000000004f143: add byte ptr [rsi + 0x80c2], bh; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000055bb8: add byte ptr [rsi + 0x81], bh; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b96c: add byte ptr [rsi + 0x81], bh; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546ab: add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x000000000004c207: add byte ptr [rsi + 0x81], bh; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb2: add byte ptr [rsi + 0x81], bh; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db7e: add byte ptr [rsi + 0x81], bh; mov rax, r9; syscall; 
0x000000000004b814: add byte ptr [rsi + 0x88000], bh; mov rax, r13; mov rdi, r14; syscall; 
0x000000000005669f: add byte ptr [rsi + 0xa], bh; push rax; call 0x57d91; xor eax, eax; pop rdx; ret; 
0x000000000002da91: add byte ptr [rsi + 0xf], ah; sub cl, al; ret; 
0x00000000000559c8: add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055979: add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004b119: add byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x0000000000054d29: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552cb: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a6: add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5f: add byte ptr [rsi + 1], bh; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005aa1f: add byte ptr [rsi + 2], bh; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022324: add byte ptr [rsi + 2], bh; mov eax, 0x48; syscall; 
0x0000000000022288: add byte ptr [rsi + 2], bh; mov rax, r9; syscall; 
0x0000000000023bb5: add byte ptr [rsi + 4], bh; mov eax, 0x48; syscall; 
0x000000000002d62a: add byte ptr [rsi + 5], dh; addss xmm0, xmm0; ret; 
0x0000000000055b85: add byte ptr [rsi + rcx - 0x42], dh; sbb byte ptr [rax], al; add byte ptr [rax], al; xor edi, edi; mov eax, 0x111; syscall; 
0x000000000004630e: add byte ptr [rsi - 0x22], bh; ret; 
0x0000000000026fe6: add byte ptr [rsi - 0x3f], ah; call 0x3fe2f2f4; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000027475: add byte ptr [rsi - 0x3f], ah; call 0x3fe2f783; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x000000000000426f: add byte ptr [rsi - 0x3ffffffb], bh; add eax, 0x5c10000; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000709c8: add byte ptr [rsi - 0x64cbafcc], al; test al, 0x69; ret; 
0x000000000001875d: add byte ptr [rsi - 0x70], ah; movzx edx, byte ptr [rsi]; mov rax, rdi; test dl, dl; jne 0x18770; ret; 
0x0000000000009627: add byte ptr [rsi], ah; ret; 
0x0000000000084e3d: add byte ptr [rsi], bh; jmp rbx; 
0x000000000008a967: add byte ptr [rsi], ch; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000008f6ff: add byte ptr [rsi], dh; ret; 
0x000000000004a9ee: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x0000000000092ce5: add byte ptr [rsi], dl; ret; 
0x000000000000403b: add byte ptr [rsp + rax + 0x4c00000], bh; add byte ptr [rax], al; rol dword ptr [rax + rax], 0; ret; 
0x0000000000056a85: add byte ptr [rsp + rcx - 0x39], dh; adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000000328a: add byte ptr [rsp + rcx], al; add byte ptr [rcx], al; add al, 0x81; add al, 1; ret; 
0x000000000003b46b: add byte ptr [rsp + rdx + 0x48], dh; movsxd rdi, eax; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000008adf3: add byte ptr [rsp - 0x22], bh; add byte ptr [rbx - 0x26ff279c], bl; mov esi, 0x97a40031; ret; 
0x0000000000024896: add byte ptr cs:[rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000324de: add byte ptr cs:[rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000070847: add byte ptr ds:[rax], al; test eax, 0x1480028d; adc byte ptr [rdx - 0x43c483b7], cl; or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x000000000004b0fd: add byte ptr ds:[rbp + 0x6c], dh; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000004159b: add byte ptr ds:[rdi], cl; test edx, esi; add dword ptr [rax], eax; add bh, dh; ret; 
0x000000000002603f: add byte ptr es:[rax + 0x39], cl; xlatb; setne dl; movzx edx, dl; and eax, edx; ret; 
0x000000000002783e: add byte ptr es:[rax + 0xc], bh; mov rdi, rbx; syscall; 
0x00000000000277a6: add byte ptr es:[rax - 0x7d], cl; ret; 
0x0000000000054930: add byte ptr es:[rax], al; ret; 
0x00000000000275c4: add byte ptr es:[rcx], al; ret; 
0x000000000004df75: add byte ptr fs:[rax], al; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x00000000000890ed: add byte ptr gs:[rax], al; ret 0x7475; 
0x0000000000089119: add byte ptr gs:[rax], al; ret; 
0x0000000000089111: add byte ptr gs:[rbp + 0x74], dh; xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000001a217: add ch, bl; fcmovu st(0), st(5); fcmovu st(0), st(1); leave; ret; 
0x000000000007c34b: add ch, byte ptr [rax + 0x5300300]; xor byte ptr [rax], dl; pop rsi; call qword ptr [rsi]; 
0x0000000000093638: add ch, byte ptr [rsp + rdi*8 - 1]; imul edi, esp, 0xfc6c02ff; jmp rsp; 
0x00000000000935d4: add ch, byte ptr [rsp + rdi*8 - 1]; lea ebp, [rdx - 4]; inc dword ptr [rdx + rbp*2 - 4]; jmp qword ptr [rax + 0x6a]; 
0x0000000000093618: add ch, byte ptr [rsp + rdi*8 - 1]; sahf; push 0x6c02fffc; cld; call qword ptr [rdx]; 
0x000000000009362c: add ch, byte ptr [rsp + rdi*8 - 1]; sbb eax, 0x81fffc69; push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x0000000000004277: add cl, al; add eax, 0; add byte ptr [rax], al; ret; 
0x000000000001f4e1: add cl, al; ret 0x410f; 
0x000000000002a524: add cl, bl; in eax, dx; add rsp, 0x48; faddp st(1); ret; 
0x000000000008adfb: add cl, bl; mov esi, 0x97a40031; ret; 
0x000000000001bb4d: add cl, bl; ret 0x7cdb; 
0x000000000002eea0: add cl, bl; ret 0xc9d8; 
0x000000000001a298: add cl, bl; ret; 
0x000000000003b78e: add cl, byte ptr [rax + 0x39]; ret 0x820f; 
0x00000000000423f9: add cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x0000000000019161: add cl, byte ptr [rax - 0x77]; ret; 
0x0000000000053aa0: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x0000000000025632: add cl, byte ptr [rax - 0x7d]; ret 0x4904; 
0x000000000003582d: add cl, byte ptr [rcx + 0x7fc783c7]; shl edi, 0x17; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000198a9: add cl, byte ptr [rcx - 0x7d]; ret 0x4801; 
0x0000000000020bea: add cl, byte ptr [rcx - 1]; ret 0xe083; 
0x00000000000275f2: add cl, byte ptr [rcx]; ret 0xd089; 
0x000000000002adff: add cl, byte ptr [rcx]; ret; 
0x00000000000444d8: add cl, byte ptr [rdi]; test byte ptr [rdx + rax], dh; add byte ptr [rcx + rcx*4 - 9], cl; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000020eed: add cl, ch; add dword ptr [rcx], 0xc0310000; ret; 
0x000000000005a895: add cl, ch; cmp ch, 0xff; call qword ptr [rax - 0x18]; 
0x000000000004996d: add cl, ch; int 0xac; cld; call qword ptr [rbx + 0x48]; 
0x000000000005b31d: add cl, ch; jo 0x5b321; add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x0000000000021eb1: add cl, ch; mov esp, 0x48ffffff; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x0000000000020ee8: add cl, ch; outsd dx, dword ptr [rsi]; add dword ptr [rax], eax; add cl, ch; add dword ptr [rcx], 0xc0310000; ret; 
0x000000000005492d: add cl, ch; push rcx; add byte ptr es:[rax], al; ret; 
0x000000000001a076: add cl, ch; ret 0xfffe; 
0x00000000000249ae: add cl, ch; ret; 
0x000000000005a979: add cl, ch; sar r11b, cl; dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x000000000004c747: add cl, ch; xor cl, byte ptr [rdi]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000007c347: add cl, cl; add al, bh; add ch, byte ptr [rax + 0x5300300]; xor byte ptr [rax], dl; pop rsi; call qword ptr [rsi]; 
0x000000000008fb6f: add cl, cl; ret; 
0x000000000008aebb: add cl, dh; outsb dx, byte ptr [rsi]; ret; 
0x0000000000074d63: add dh, 0x81; ret; 
0x000000000002719b: add dh, al; add al, 0x11; add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000001819d: add dh, al; add al, 0x2b; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000041d92: add dh, bh; dec dword ptr [rax - 0x77]; ret; 
0x000000000002cee8: add dh, bl; rcr ebx, 0x2d; cmovb eax, dword ptr [rsi]; add al, bl; ret 0xcad8; 
0x000000000002cdc5: add dh, bl; rcr ebx, 0x2d; xor al, byte ptr [rbx + 6]; add al, bl; ret 0xcad8; 
0x00000000000322ca: add dh, bl; ret 0x25d8; 
0x00000000000324b8: add dh, bl; ret 0xc1de; 
0x00000000000323a0: add dh, bl; ret 0xc9d9; 
0x000000000002ca9a: add dh, bl; ret 0xf1de; 
0x0000000000019efd: add dh, bl; ret; 
0x0000000000029b77: add dh, bl; retf 0xe1de; fsubp st(1); ret; 
0x0000000000055411: add dh, byte ptr [rbp + 0x23]; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000560d4: add dh, byte ptr [rbp + 0x23]; mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000001b2a1: add dh, byte ptr [rbp + 0x4d]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000003c665: add dh, byte ptr [rbp + rcx - 0x7d]; rol byte ptr [rbx], 0x25; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0xddeb; 
0x000000000002b0db: add dh, byte ptr [rbp + rcx - 0x7f]; ret 0; 
0x000000000008c372: add dh, byte ptr [rbx]; ret 0x1270; 
0x000000000005a30d: add dh, byte ptr [rcx + rsi*2 + 0x7f]; or al, byte ptr [rbp - 0x3277f040]; add dword ptr [rax], eax; add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x00000000000450ed: add dh, byte ptr [rcx]; rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x0000000000054af2: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x77], 0xe; ret; 
0x0000000000022fca: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0xec; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000005b3f3: add dh, byte ptr [rcx]; ror byte ptr [rcx - 0x3b7cb730], cl; sbb bl, al; push rax; mov eax, 0x58; syscall; 
0x000000000005a354: add dh, byte ptr [rcx]; test byte ptr [rax + 0x63], 0xfd; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x00000000000239a1: add dh, byte ptr [rdi + 4]; mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000003a5e6: add dh, byte ptr [rsp + rbx + 0x49]; movsxd rdi, esp; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000002aefe: add dh, byte ptr [rsp + rcx + 5]; add byte ptr [rax], al; add byte ptr [rdi + rcx], al; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x000000000004305e: add dh, dh; add eax, dword ptr [rcx]; je 0x4309e; mov eax, 0x68; syscall; 
0x0000000000037cb9: add dh, dh; ret 0x7402; 
0x0000000000037ca4: add dh, dh; ret 0x7404; 
0x0000000000037c55: add dh, dh; ret 0x7410; 
0x000000000003ae3d: add dh, dh; ret; 
0x00000000000358b9: add di, 0x3fff; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], di; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000007566b: add dl, ah; jmp rsp; 
0x000000000006f66e: add dl, bh; push r10; jmp qword ptr [rsi - 0x6b]; 
0x0000000000057e0a: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x0000000000057e0a: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x0000000000033496: add dl, dh; addps xmm0, xmmword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a752: add dl, dh; addps xmm0, xmmword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a3d3: add dl, dh; addps xmm0, xmmword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x00000000000300e0: add dl, dh; addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000029d43: add dl, dh; addps xmm1, xmm2; mulsd xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000001a024: add dl, dh; addps xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x000000000002d2c4: add dl, dh; cvtps2pd xmm0, xmm0; add rsp, 0x20; pop rbx; ret; 
0x000000000002a75a: add dl, dh; cvtps2pd xmm0, xmm0; ret; 
0x0000000000032bbf: add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002f4a7: add dl, dh; divps xmm0, xmm1; ret; 
0x0000000000029dd0: add dl, dh; divps xmm1, xmm0; movapd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fee: add dl, dh; divps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001ca4e: add dl, dh; movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000028fcc: add dl, dh; movups xmmword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000028a51: add dl, dh; movups xmmword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000002ff8b: add dl, dh; mulps xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x000000000002f5d1: add dl, dh; mulps xmm0, xmmword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002c1b9: add dl, dh; mulps xmm0, xmmword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x00000000000288a1: add dl, dh; mulps xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a6f: add dl, dh; mulps xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000091a3f: add dl, dh; ret; 
0x000000000002f5d9: add dl, dh; subps xmm0, xmmword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002c45b: add dl, dh; subps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000040978: add dword ptr [eax], eax; add rsp, 0x10; mov rax, rbx; pop rbx; ret; 
0x000000000003e13b: add dword ptr [r11 - 0x3fc33f20], r8d; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000053e6f: add dword ptr [r8 - 0x77], ecx; or byte ptr [r10 - 0x47f977ff], r9b; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000054b8d: add dword ptr [rax + 0x16], edi; ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bb8: add dword ptr [rax + 0x16], edi; ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005700e: add dword ptr [rax + 0x16], edi; ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000020cd3: add dword ptr [rax + 0x19], ecx; ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x0000000000053e76: add dword ptr [rax + 0x1b806], ecx; add byte ptr [rax], al; ret; 
0x000000000001e1fe: add dword ptr [rax + 0xcc], edi; mov rdi, rcx; syscall; 
0x0000000000024bf7: add dword ptr [rax + 1], ecx; fisttp dword ptr [rax - 0x77]; ret 0x8348; 
0x0000000000020ca6: add dword ptr [rax - 0x67c00bd], ecx; push qword ptr [rbp - 0x14]; add rsp, 0x90; pop rbx; ret; 
0x000000000004dc0a: add dword ptr [rax - 0x77], ecx; adc eax, 0x247616; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbdf: add dword ptr [rax - 0x77], ecx; adc eax, 0x247641; movzx eax, byte ptr [rax]; ret; 
0x000000000003f273: add dword ptr [rax - 0x77], ecx; clc; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000004cf7f: add dword ptr [rax - 0x77], ecx; jb 0x4cfac; mov byte ptr [rcx], dil; ret; 
0x000000000004e982: add dword ptr [rax - 0x77], ecx; jb 0x4e9af; mov byte ptr [rcx], dil; ret; 
0x000000000004e9b1: add dword ptr [rax - 0x77], ecx; jb 0x4e9de; mov byte ptr [rcx], dil; ret; 
0x0000000000053e70: add dword ptr [rax - 0x77], ecx; or byte ptr [r10 - 0x47f977ff], r9b; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000004eae2: add dword ptr [rax - 0x77], ecx; or eax, 0x24685e; mov byte ptr [rdx], dil; ret; 
0x000000000004eaa9: add dword ptr [rax - 0x77], ecx; or eax, 0x246897; mov byte ptr [rdx], dil; ret; 
0x000000000004c260: add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000021cfb: add dword ptr [rax - 0x77], ecx; sbb al, 0xd0; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000003f272: add dword ptr [rax - 0x77], r9d; clc; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x00000000000178f3: add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000017fb3: add dword ptr [rax - 0x88affc8], eax; sub rax, rdi; ret; 
0x000000000005e0f1: add dword ptr [rax - 1], ecx; ret 0x8348; 
0x00000000000513f3: add dword ptr [rax - 1], ecx; ret; 
0x00000000000920d1: add dword ptr [rax], -0x6e; and al, 0x49; ret 0xd3f; 
0x000000000004a9f9: add dword ptr [rax], 0; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x5afffcbf; ret; 
0x000000000002b0b1: add dword ptr [rax], 0x390d0000; ret 0x877; 
0x000000000002a3d1: add dword ptr [rax], 0x580ff200; add eax, 0x67cb4; add rsp, 0x18; ret; 
0x000000000002a3cc: add dword ptr [rax], 0x8159e800; add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x0000000000056dbf: add dword ptr [rax], 0x894c0000; ror byte ptr [rax - 0x77], 0xdf; syscall; 
0x00000000000415a0: add dword ptr [rax], eax; add bh, dh; ret; 
0x000000000003a539: add dword ptr [rax], eax; add bl, al; movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x000000000005a317: add dword ptr [rax], eax; add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x0000000000049249: add dword ptr [rax], eax; add bl, ch; ret; 
0x0000000000058c94: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000043043: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; jae 0x4304e; xor edi, edi; mov eax, 0x6d; syscall; 
0x00000000000381ab: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x0000000000014e75: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000005a9e9: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x000000000004307e: add dword ptr [rax], eax; add byte ptr [rax + 0x66], bh; syscall; 
0x0000000000024ba5: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret; 
0x00000000000321ec: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x60d62; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bcc: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x6127a; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031458: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x619da; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000018e22: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x00000000000518e2: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x4195c; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004f491: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x43b5d; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000042ba7: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x00000000000185e6: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000005b172: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x48e8; 
0x00000000000279c6: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000005b112: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xa8e8; 
0x000000000005d656: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x00000000000235cf: add dword ptr [rax], eax; add byte ptr [rax - 0x7f], cl; in al, dx; sub byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000003cdd7: add dword ptr [rax], eax; add byte ptr [rax - 1], cl; ret 0x3fe8; 
0x000000000000a698: add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x22; 
0x000000000002baa4: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x29a04; add rsp, 0x18; ret; 
0x000000000004ba52: add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000559ca: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597b: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005aa57: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x3c; syscall; 
0x000000000004cb21: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000004b83a: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004af67: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000005b1c3: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x59; syscall; 
0x0000000000023361: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xd5; syscall; 
0x0000000000055d6d: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xe; mov rdx, rbx; syscall; 
0x00000000000595f5: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, esi; ret; 
0x0000000000054d2b: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552cd: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000055bb5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b969: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a8: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c204: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eaf: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db7b: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005aa1c: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022321: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000022285: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov rax, r9; syscall; 
0x00000000000553a8: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000057944: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000001acef: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000056d41: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x0000000000056fec: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001acba: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000004bd59: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d6: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004c15e: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000054d61: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000043d6b: add dword ptr [rax], eax; add byte ptr [rax], al; movsx eax, byte ptr [rdi]; ret; 
0x000000000005b204: add dword ptr [rax], eax; add byte ptr [rax], al; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000043263: add dword ptr [rax], eax; add byte ptr [rax], al; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x0000000000056c09: add dword ptr [rax], eax; add byte ptr [rax], al; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x0000000000038b24: add dword ptr [rax], eax; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000018ad1: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000043150: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005aaa2: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x00000000000236fb: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000022ec0: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000003e4ab: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000040047: add dword ptr [rax], eax; add byte ptr [rcx + 0x415d5bd0], cl; pop rsp; ret; 
0x0000000000037ef2: add dword ptr [rax], eax; add byte ptr [rcx + 0x415d5bd8], cl; pop rsp; ret; 
0x000000000002334b: add dword ptr [rax], eax; add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x000000000004caef: add dword ptr [rax], eax; add byte ptr [rcx + 0x8000cf], al; add byte ptr [rcx + rcx*4 - 0x20], cl; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x000000000005805f: add dword ptr [rax], eax; add byte ptr [rcx + 1], al; ret 0xc031; 
0x000000000004aff3: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x10], cl; mov rdx, r13; syscall; 
0x0000000000038836: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1a], cl; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000005ab03: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1a], cl; syscall; 
0x000000000004b539: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x000000000004b5c7: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x32], cl; syscall; 
0x00000000000430f9: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000004b13d: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x3a], cl; mov rdx, rbx; syscall; 
0x00000000000223c7: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x3e], cl; syscall; 
0x00000000000223c7: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x3e], cl; syscall; neg eax; ret; 
0x0000000000018428: add dword ptr [rax], eax; add byte ptr [rcx - 0x7d], cl; mov byte ptr [rcx], 0x89; ret 0xc189; 
0x000000000005ed6e: add dword ptr [rax], eax; add byte ptr [rcx - 1], cl; ret 0x894d; 
0x0000000000021062: add dword ptr [rax], eax; add byte ptr [rcx], bh; ret; 
0x00000000000230f5: add dword ptr [rax], eax; add byte ptr [rdi - 0x64], bh; call 0x4b501; add rsp, 0x28; ret; 
0x00000000000235d6: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x8908ff83; ret; 
0x000000000004b021: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x8948c085; ret; 
0x00000000000233ee: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x89daf883; ret 0xd75; 
0x0000000000023c8e: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0xe8c78948; and eax, 0x5affff2d; ret; 
0x0000000000023b0a: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x5affff2e; ret; 
0x0000000000023c78: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0xe9c78948; cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; 
0x0000000000032d96: add dword ptr [rax], eax; add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000004f141: add dword ptr [rax], eax; add byte ptr [rsi + 0x80c2], bh; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000020eeb: add dword ptr [rax], eax; add cl, ch; add dword ptr [rcx], 0xc0310000; ret; 
0x000000000004305c: add dword ptr [rax], eax; add dh, dh; add eax, dword ptr [rcx]; je 0x4309e; mov eax, 0x68; syscall; 
0x000000000003ae3b: add dword ptr [rax], eax; add dh, dh; ret; 
0x0000000000032bbd: add dword ptr [rax], eax; add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000040979: add dword ptr [rax], eax; add rsp, 0x10; mov rax, rbx; pop rbx; ret; 
0x0000000000039c53: add dword ptr [rax], eax; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039b39: add dword ptr [rax], eax; add rsp, 0x18; ret; 
0x000000000002417f: add dword ptr [rax], eax; call 0x21e65; mov dword ptr [rax], 2; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x0000000000022e2e: add dword ptr [rax], eax; cmp qword ptr [rsp], 0x7fffffff; mov eax, 0x7fffffff; cmovbe rax, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000001cb42: add dword ptr [rax], eax; fld xword ptr [rsp + 0x10]; fxch st(1); add rsp, 0x58; ret; 
0x0000000000058e72: add dword ptr [rax], eax; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x0000000000058f3a: add dword ptr [rax], eax; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000042784: add dword ptr [rax], eax; lea rax, [rip + 0x255883]; pop rbx; ret; 
0x000000000003da7a: add dword ptr [rax], eax; lea rax, [rip + 0x25a1dd]; add rsp, 0x18; ret; 
0x00000000000427dd: add dword ptr [rax], eax; mov eax, 0x39; syscall; 
0x000000000003a3ec: add dword ptr [rax], eax; mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000038b21: add dword ptr [rax], eax; mov eax, 1; pop rdx; ret; 
0x0000000000039ae8: add dword ptr [rax], eax; mov eax, ebp; pop rdx; pop rbx; pop rbp; ret; 
0x000000000002372f: add dword ptr [rax], eax; mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x000000000003c629: add dword ptr [rax], eax; mov qword ptr [rbp], rbx; pop r9; pop rbx; pop rbp; ret; 
0x00000000000426c6: add dword ptr [rax], eax; mov rax, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000003a4a9: add dword ptr [rax], eax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000004274f: add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x000000000003a3a9: add dword ptr [rax], eax; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000017ee7: add dword ptr [rax], eax; mov rdi, rsi; call 0x17f50; add rax, rbx; pop rbx; ret; 
0x000000000001ca4d: add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000003a6e7: add dword ptr [rax], eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000057f39: add dword ptr [rax], eax; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000024047: add dword ptr [rax], eax; xor eax, eax; pop rdx; ret; 
0x000000000002e41d: add dword ptr [rax], edi; ret 0x2874; 
0x00000000000168a6: add dword ptr [rax], esi; mov byte ptr [rdi + rax], 0; ret; 
0x00000000000235ce: add dword ptr [rax], r8d; add byte ptr [rax - 0x7f], cl; in al, dx; sub byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000001762b: add dword ptr [rbp + 0x39], eax; ret 0x1d74; 
0x0000000000025c2f: add dword ptr [rbp + 0xa], esi; push rax; call 0x14680; xor eax, eax; pop rdx; ret; 
0x000000000004a267: add dword ptr [rbp - 0x2ec6febe], ecx; cmovg eax, esi; mov dword ptr [r9 + 0x18], eax; sub eax, r8d; ret; 
0x000000000001964b: add dword ptr [rbp - 0xe], esi; xor eax, eax; ret; 
0x000000000002ca5b: add dword ptr [rbx + 6], eax; add al, bl; ret 0xcad8; 
0x000000000003e13c: add dword ptr [rbx - 0x3fc33f20], eax; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x00000000000212fb: add dword ptr [rbx - 0x3fe6fe08], eax; add eax, 2; ret; 
0x000000000003c5e5: add dword ptr [rbx - 0x57f3f1e], eax; xor byte ptr [rbp + 0x1e], 0xeb; sbb byte ptr [rcx - 2], al; ret; 
0x0000000000092b00: add dword ptr [rbx], ebp; stc; call rdi; 
0x0000000000092afc: add dword ptr [rbx], ebp; stc; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092b08: add dword ptr [rbx], ebp; stc; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x0000000000092b0c: add dword ptr [rbx], ebp; stc; jmp rdx; 
0x0000000000019b95: add dword ptr [rcx + 0x5740477], ecx; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000020e39: add dword ptr [rcx + 0x7e183f9], ecx; sar eax, cl; and eax, 1; ret; 
0x000000000005493b: add dword ptr [rcx + 0xa], edi; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000000328e: add dword ptr [rcx + rax*4], eax; add al, 1; ret; 
0x0000000000056fdc: add dword ptr [rcx + rcx*4 - 0x40], ecx; movsxd rsi, esi; syscall; 
0x0000000000017071: add dword ptr [rcx + rdi - 0x3f], ecx; jne 0x17060; xor eax, eax; pop rbx; ret; 
0x00000000000275e2: add dword ptr [rcx - 0x3e077606], ecx; call 0x9ed46ef; ret 0xd089; 
0x0000000000015443: add dword ptr [rcx - 0x7d], eax; mov byte ptr [rcx], 9; ret 0xf283; 
0x0000000000019b70: add dword ptr [rcx - 0x7d], ecx; ret 0x4110; 
0x0000000000032bbc: add dword ptr [rcx], 0; add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000020eef: add dword ptr [rcx], 0xc0310000; ret; 
0x000000000004b020: add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000058f2f: add dword ptr [rcx], eax; ret 0x6348; 
0x0000000000058e79: add dword ptr [rcx], eax; ror byte ptr [rax - 0x68], 1; ret; 
0x0000000000034339: add dword ptr [rcx], ebx; sal bh, 0xd0; add eax, 2; ret; 
0x0000000000056f7b: add dword ptr [rcx], ebx; sal bh, 0xd0; and eax, 0x10; ret; 
0x0000000000057178: add dword ptr [rcx], ebx; sal bh, 0xd0; and eax, 0xb; ret; 
0x0000000000057d43: add dword ptr [rcx], ebx; sal bh, 0xd0; and eax, 0xfffffffe; pop rdx; ret; 
0x000000000002f036: add dword ptr [rcx], ebx; sal bl, 0xf; pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef69: add dword ptr [rcx], ebx; sal bl, 0xf; pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 4], xmm0; ret; 
0x0000000000015447: add dword ptr [rcx], ecx; ret 0xf283; 
0x000000000001704e: add dword ptr [rcx], edi; ret 0x788; 
0x000000000004a26a: add dword ptr [rcx], edi; ror dword ptr [rdi], 1; mov byte ptr [r9 - 0x77], 0x41; sbb byte ptr [rcx + rbp - 0x40], al; ret; 
0x000000000007244a: add dword ptr [rcx], esi; jb 0x72468; pop rbx; sub al, 0xb6; shl byte ptr [rax], 0xe2; ret; 
0x000000000001704d: add dword ptr [rcx], r15d; ret 0x788; 
0x00000000000224ed: add dword ptr [rdi + 0x1246c08], ebx; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000004bf7f: add dword ptr [rdi + 8], esi; ret; 
0x0000000000017995: add dword ptr [rdi], ecx; mov dh, 0x7d; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000224f2: add dword ptr [rdi], ecx; scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x000000000002c9d7: add dword ptr [rdx + 6], esp; add bl, dh; subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000230ff: add dword ptr [rdx], 0; add rsp, 0x28; ret; 
0x000000000004b01c: add dword ptr [rdx], ebp; add byte ptr [rax + 0x101], bh; syscall; 
0x000000000003f66e: add dword ptr [rip + 0x258944], eax; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x000000000005f301: add dword ptr [rip - 1], eax; jmp qword ptr [rbx]; 
0x0000000000003287: add dword ptr [rsi + 0x40], ecx; add byte ptr [rsp + rcx], al; add byte ptr [rcx], al; add al, 0x81; add al, 1; ret; 
0x00000000000513bc: add dword ptr [rsi + 0x74], ebx; or byte ptr [rax - 1], cl; ret; 
0x000000000002a7b6: add dword ptr [rsi], 0; addss xmm2, dword ptr [rip + 0x6816b]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002a7ed: add dword ptr [rsi], 0x5a0ff300; ret 0xff3; 
0x0000000000032a08: add dword ptr [rsi], eax; add bl, dh; divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000021341: add dword ptr [rsi], ecx; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000058301: add dword ptr [rsi], edx; cmp eax, 6; mov edx, 6; cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000031bcb: add dword ptr cs:[rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x6127a; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000038835: add dword ptr cs:[rax], eax; add byte ptr [rcx + rcx*4 - 0x1a], cl; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x0000000000023516: add dword ptr es:[rax], eax; add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x0000000000004279: add eax, 0; add byte ptr [rax], al; ret; 
0x0000000000042e49: add eax, 0x1178ee8; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000043155: add eax, 0x14244489; and eax, 0xfffffffe; mov rsi, r14; movsxd rdx, eax; mov rax, r12; syscall; 
0x00000000000570d6: add eax, 0x16b8; add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000370de: add eax, 0x21d0f700; ror byte ptr [rcx - 0xc13dbbc], 1; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000005b7ac: add eax, 0x227f; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000005db56: add eax, 0x239de5; mov rsi, rbx; mov rdi, r12; call rax; 
0x000000000005da24: add eax, 0x23a4bb; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x00000000000590ef: add eax, 0x23c37c; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000005ba95: add eax, 0x23c5be; ret; 
0x0000000000056c91: add eax, 0x23e816; lock or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000057dba: add eax, 0x2400e1; ret; 
0x0000000000057bcf: add eax, 0x240410; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000054b79: add eax, 0x240926; mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000005595a: add eax, 0x242679; ret; 
0x000000000003982b: add eax, 0x244c8b48; adc byte ptr [rbx + rcx*4 + 9], cl; syscall; 
0x000000000004e66c: add eax, 0x247c6348; sbb al, 0x48; mov eax, edx; syscall; 
0x000000000004df7b: add eax, 0x249ee8; pop rdx; ret; 
0x0000000000049f6e: add eax, 0x24dd1d; lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000042540: add eax, 0x252eeb; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x0000000000042788: add eax, 0x255883; pop rbx; ret; 
0x00000000000424ce: add eax, 0x255985; shr rax, 0x21; ret; 
0x00000000000424c4: add eax, 0x25598f; inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x00000000000424b1: add eax, 0x2559a2; ret; 
0x000000000004014f: add eax, 0x255e0c; ret; 
0x0000000000041931: add eax, 0x25650e; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000041924: add eax, 0x25651b; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000040f3e: add eax, 0x256ee9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000040f31: add eax, 0x256ef6; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003d4df: add eax, 0x257ac4; ret; 
0x000000000003f676: add eax, 0x2585f5; pop rdx; ret; 
0x000000000003f66f: add eax, 0x258944; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x000000000003f61b: add eax, 0x258994; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000003f610: add eax, 0x25899f; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000003d2d3: add eax, 0x258c68; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003d165: add eax, 0x258d96; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003da7e: add eax, 0x25a1dd; add rsp, 0x18; ret; 
0x0000000000038a02: add eax, 0x25f63b; ret; 
0x0000000000037991: add eax, 0x260680; ret; 
0x000000000002783b: add eax, 0x26e638; mov eax, 0xc; mov rdi, rbx; syscall; 
0x00000000000275cb: add eax, 0x26e8a0; ret; 
0x0000000000026001: add eax, 0x26ebfa; ret; 
0x00000000000271aa: add eax, 0x26ecc0; add ebx, ebp; or bh, bh; ret 0x1588; 
0x0000000000027663: add eax, 0x270a74; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000296a8: add eax, 0x27110ff2; ret; 
0x0000000000020ce2: add eax, 0x2740b1; ret; 
0x0000000000020cba: add eax, 0x2740d1; ret; 
0x000000000002309f: add eax, 0x274d0c; pop rdx; ret; 
0x000000000002304a: add eax, 0x274d51; pop rax; ret; 
0x0000000000022ff7: add eax, 0x274da0; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000022fea: add eax, 0x274dad; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000021fb2: add eax, 0x275fc1; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000021cf3: add eax, 0x276080; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000021792: add eax, 0x276921; mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x000000000005aeeb: add eax, 0x27b8c3; add byte ptr [rax], al; syscall; 
0x000000000003760f: add eax, 0x280f6600; ret 0x98e9; 
0x00000000000325db: add eax, 0x280f6600; ret; 
0x000000000003328c: add eax, 0x280f6600; retf 0xff2; pop rcx; ret 0xff2; 
0x0000000000032bea: add eax, 0x280f6600; sal edx, 0xf; pop rax; ret 0x4866; 
0x00000000000550ce: add eax, 0x2db7; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000003195d: add eax, 0x2e0f0000; ret 0xa76; 
0x0000000000021cc1: add eax, 0x31188948; fisttp dword ptr [rax - 1]; ret 0x8348; 
0x000000000003a74b: add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x0000000000021e6f: add eax, 0x34; ret; 
0x0000000000001d09: add eax, 0x36f0000; add byte ptr [rax], al; ja 0x1d15; add byte ptr [rax], al; syscall; 
0x000000000005907e: add eax, 0x374c085; neg eax; ret; 
0x000000000005a981: add eax, 0x38e49; ret; 
0x000000000002145b: add eax, 0x3ebc031; mov dword ptr [rax + 8], ebx; pop rbx; ret; 
0x00000000000528c2: add eax, 0x40ad1; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x000000000001e0d1: add eax, 0x411aa; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000051f2d: add eax, 0x4135e; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000518e7: add eax, 0x4195c; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000050de8: add eax, 0x4235b; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000506a9: add eax, 0x42992; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000506c3: add eax, 0x42a58; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000004f496: add eax, 0x43b5d; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000043074: add eax, 0x4489c085; and al, 0x14; jne 0x43244; mov eax, 0x66; syscall; 
0x00000000000430ef: add eax, 0x4489c085; and al, 0x14; js 0x43244; mov rax, r9; syscall; 
0x000000000003d28d: add eax, 0x450f4800; ret 0xd231; 
0x000000000004085a: add eax, 0x47b6348; mov rax, r8; syscall; 
0x000000000004b105: add eax, 0x48000000; mov esi, ebx; syscall; 
0x000000000004b087: add eax, 0x48c08941; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005abd6: add eax, 0x49d23145; movsxd rdi, eax; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000004b10d: add eax, 0x49f7f883; mov edx, eax; jne 0x4b1a6; mov esi, 1; mov eax, 0x48; syscall; 
0x00000000000431d7: add eax, 0x49ffffff; movsxd rdi, edi; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000057ebf: add eax, 0x4c000000; mov edi, esp; syscall; 
0x000000000004b5c6: add eax, 0x4c000001; mov esi, ecx; syscall; 
0x0000000000042442: add eax, 0x4f7e9; add rsp, 0x18; ret; 
0x000000000005abc4: add eax, 0x4f88348; jne 0x5aba8; movsxd rdi, dword ptr [rsp + 0x10]; mov eax, 3; syscall; 
0x0000000000068351: add eax, 0x50e050d; syscall; 
0x0000000000023712: add eax, 0x50f689c3; mov eax, 0x13f; syscall; 
0x0000000000049b00: add eax, 0x53c3d8f7; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000033495: add eax, 0x580ff200; or dl, sil; addps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000328d9: add eax, 0x580ff200; ret 0xf66; 
0x0000000000032dc6: add eax, 0x580ff300; ret 0xf66; 
0x0000000000023ab1: add eax, 0x58106b89; pop rbx; pop rbp; ret; 
0x000000000002d09b: add eax, 0x590ff200; ret 0xff2; 
0x000000000004db96: add eax, 0x5ac08944; ret; 
0x00000000000359b9: add eax, 0x5b002; add rsp, 0x18; ret; 
0x000000000005b0bd: add eax, 0x5b5ac031; pop rbp; ret; 
0x0000000000088e51: add eax, 0x5bc05bb; mov ebp, 0xbf05be05; add eax, 0x5c105c0; ret 0xc305; 
0x000000000004ea52: add eax, 0x5bc08944; ret; 
0x0000000000088e53: add eax, 0x5bd05bc; mov esi, 0xc005bf05; add eax, 0x5c205c1; ret; 
0x0000000000004275: add eax, 0x5c10000; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000088e5b: add eax, 0x5c105c0; ret 0xc305; 
0x0000000000088e5d: add eax, 0x5c205c1; ret; 
0x0000000000037a37: add eax, 0x5c67c; pop rbx; ret; 
0x0000000000037a40: add eax, 0x5c800; ret; 
0x0000000000035428: add eax, 0x5c803; test rdx, rdx; jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x0000000000000591: add eax, 0x5cb0000; add byte ptr [rax], al; ret; 
0x000000000003533d: add eax, 0x5cdde; jne 0x35348; movapd xmm0, xmm1; ret; 
0x00000000000354bd: add eax, 0x5d46a; test edx, edx; jns 0x354d1; movss xmm1, dword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x000000000003538d: add eax, 0x5d836; jne 0x35397; movaps xmm0, xmm1; ret; 
0x00000000000342f7: add eax, 0x5d934; add rsp, 0x40; pop rbx; ret; 
0x000000000007c350: add eax, 0x5e201430; call qword ptr [rsi]; 
0x00000000000345f4: add eax, 0x5e333; add rsp, 0x28; ret; 
0x00000000000336b7: add eax, 0x5f1bc; ret; 
0x00000000000336c7: add eax, 0x5f2e4; ret; 
0x00000000000336c0: add eax, 0x5f2eb; ret; 
0x0000000000032813: add eax, 0x5f588; divsd xmm0, xmm1; ret; 
0x00000000000300dc: add eax, 0x61d17; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002ffaf: add eax, 0x61dec; divsd xmm0, xmm1; ret; 
0x000000000003054d: add eax, 0x6262a; divss xmm0, xmm1; ret; 
0x0000000000030673: add eax, 0x62730; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002f5d5: add eax, 0x6281e; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002f4a3: add eax, 0x628f8; divsd xmm0, xmm1; ret; 
0x000000000002f5dd: add eax, 0x62ef6; add rsp, 0x28; ret; 
0x000000000002fa20: add eax, 0x63157; divss xmm0, xmm1; ret; 
0x000000000002fb52: add eax, 0x6323d; add rsp, 0x18; ret; 
0x000000000002fb4a: add eax, 0x63259; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x0000000000022292: add eax, 0x634810eb; idiv byte ptr [rax + 0x48]; mov rdx, r10; syscall; 
0x0000000000023404: add eax, 0x6348c289; cli; call 0x169c0; pop rdx; ret; 
0x000000000002de8c: add eax, 0x63d9f; ret; 
0x000000000002dea6: add eax, 0x63ef5; ret; 
0x0000000000024ae3: add eax, 0x640f8; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002d235: add eax, 0x6511e; call 0x33c87; add rsp, 0x20; pop rbx; ret; 
0x000000000002c44d: add eax, 0x65eee; je 0x2c465; movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035340: add eax, 0x66047500; movaps xmm0, xmm1; ret; 
0x000000000002c9cc: add eax, 0x661d7; je 0x2c9e3; movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002b8f2: add eax, 0x66339; ret; 
0x000000000002b8e3: add eax, 0x66348; ret; 
0x000000000002b901: add eax, 0x6681a; ret; 
0x000000000002a74e: add eax, 0x674d5; addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a5a9: add eax, 0x67682; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a756: add eax, 0x67925; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fea: add eax, 0x67c41; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a3d7: add eax, 0x67cb4; add rsp, 0x18; ret; 
0x000000000002a483: add eax, 0x6872c; add rsp, 0x18; ret; 
0x000000000002a1b1: add eax, 0x68776; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002a1a9: add eax, 0x689f2; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005adf5: add eax, 0x68b8c3; add byte ptr [rax], al; syscall; 
0x0000000000028a4d: add eax, 0x691de; movsd qword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000028a75: add eax, 0x69eb2; movss dword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000005aded: add eax, 0x6bb8c3; add byte ptr [rax], al; syscall; 
0x0000000000025bc1: add eax, 0x6cf32; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6f: add eax, 0x6cf38; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255eb: add eax, 0x6d470; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000026482: add eax, 0x6d784; ret; 
0x0000000000024d8c: add eax, 0x6dc2b; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x0000000000025d0c: add eax, 0x6defa; ret; 
0x000000000005aef3: add eax, 0x6eb8c3; add byte ptr [rax], al; syscall; 
0x0000000000084ec4: add eax, 0x6ff03ff; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000020ea2: add eax, 0x71ad1; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x000000000001e1aa: add eax, 0x7479d; movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000023b72: add eax, 0x74daf883; add eax, 0xebf86348; mov r8d, 0x11a; syscall; 
0x000000000003f6bf: add eax, 0x75105839; int1; pop rbx; ret; 
0x000000000005414c: add eax, 0x75caffa4; sti; ret; 
0x00000000000221fa: add eax, 0x75eaf883; adc bh, byte ptr [rsi + 9]; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000022245: add eax, 0x75eaf883; xor al, byte ptr [rbp + 0x31]; ror byte ptr [rcx + rcx*4 - 0x38], 0x4c; mov edx, eax; syscall; 
0x00000000000354c0: add eax, 0x79d28500; or esi, ebx; movups xmm1, xmmword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x0000000000076e8a: add eax, 0x7b921692; xchg eax, ebp; lea edx, [rbp - 0x6a6f6a74]; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x00000000000565b3: add eax, 0x7de80024; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000002f03d: add eax, 0x80000000; movss dword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef70: add eax, 0x80000000; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000055c5a: add eax, 0x87b8b48; call qword ptr [rbx]; 
0x00000000000235da: add eax, 0x8908ff83; ret; 
0x0000000000021484: add eax, 0x8948c085; ret; 
0x000000000004075c: add eax, 0x8949c085; ror byte ptr [rcx - 0x79cb73b], 0x78; cmp bh, dh; ret; 
0x0000000000055151: add eax, 0x894d4feb; ret; 
0x0000000000049b0e: add eax, 0x89c08548; ret; 
0x00000000000233f2: add eax, 0x89daf883; ret 0xd75; 
0x000000000004cb2e: add eax, 0x89ee8948; fucomip st(0); ret 0xffea; 
0x000000000005a9ac: add eax, 0x89f0f883; ret 0xf474; 
0x000000000003dc54: add eax, 0x89f28944; ret; 
0x0000000000052741: add eax, 0x8d480000; or eax, 0x40b65; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000050de3: add eax, 0x8d481d77; add eax, 0x4235b; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000003d4d7: add eax, 0xa0; ret; 
0x000000000005aa6a: add eax, 0xb8c78948; jno 0x5aa71; add byte ptr [rax], al; syscall; 
0x000000000004306a: add eax, 0xb8c78948; push 0; add byte ptr [rax], al; syscall; 
0x0000000000057e1c: add eax, 0xb8ff3148; cmp al, 0; add byte ptr [rax], al; syscall; 
0x0000000000057e14: add eax, 0xbb8c3; add byte ptr [rax], al; syscall; 
0x000000000002d62c: add eax, 0xc0580ff3; ret; 
0x000000000004c222: add eax, 0xc089445a; pop rbx; pop rbp; ret; 
0x000000000004cf29: add eax, 0xc089445b; pop rbp; pop r12; ret; 
0x0000000000036036: add eax, 0xc1570f00; add rsp, 0x18; ret; 
0x0000000000030fa0: add eax, 0xc1570f00; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000000365cc: add eax, 0xc1570f00; add rsp, 0x20; pop rbx; ret; 
0x0000000000035143: add eax, 0xc1570f00; ret; 
0x000000000003558e: add eax, 0xc1590ff2; ret; 
0x000000000003563d: add eax, 0xc1590ff3; ret; 
0x00000000000337cd: add eax, 0xc2580ff2; ret; 
0x000000000003388a: add eax, 0xc2580ff3; ret; 
0x0000000000032b97: add eax, 0xc25e0ff2; ret; 
0x0000000000032d71: add eax, 0xc25e0ff3; ret; 
0x00000000000342fa: add eax, 0xc4834800; pop rbx; ret; 
0x0000000000023a2c: add eax, 0xca8949c3; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x28; syscall; 
0x00000000000355a5: add eax, 0xd1570f00; divsd xmm0, xmm2; ret; 
0x0000000000035653: add eax, 0xd1570f00; divss xmm0, xmm2; ret; 
0x0000000000032b8b: add eax, 0xd2570f00; ucomisd xmm1, xmm0; jp 0x32b9d; jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000032d66: add eax, 0xd2570f00; ucomiss xmm1, xmm0; jp 0x32d77; jne 0x32d77; divss xmm0, xmm2; ret; 
0x000000000003542b: add eax, 0xd2854800; jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x000000000003721f: add eax, 0xd9ddfdd9; ret; 
0x000000000001acb2: add eax, 0xdaf88348; jne 0x1acc3; mov esi, 1; mov rax, r9; syscall; 
0x000000000001ace7: add eax, 0xdaf88348; jne 0x1acf8; mov esi, 1; mov rax, r8; syscall; 
0x000000000001ad1f: add eax, 0xdaf88348; jne 0x1ad30; mov esi, 1; mov rax, r8; syscall; 
0x000000000004b979: add eax, 0xdaf88348; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b979: add eax, 0xdaf88348; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004c214: add eax, 0xdaf88348; jne 0x4c223; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004cf1b: add eax, 0xdaf88348; jne 0x4cf2a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004da9e: add eax, 0xdaf88348; jne 0x4daad; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004db88: add eax, 0xdaf88348; jne 0x4db97; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004e91e: add eax, 0xdaf88348; jne 0x4e92d; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ea44: add eax, 0xdaf88348; jne 0x4ea53; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005465c: add eax, 0xdaf88348; jne 0x5466a; xor esi, esi; mov rax, r9; syscall; 
0x00000000000546b5: add eax, 0xdaf88348; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000546b5: add eax, 0xdaf88348; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x00000000000548ac: add eax, 0xdaf88348; jne 0x5489c; xor esi, esi; mov rax, r12; syscall; 
0x0000000000054d3b: add eax, 0xdaf88348; jne 0x54d47; mov rax, r8; syscall; 
0x0000000000054d6f: add eax, 0xdaf88348; jne 0x54d7b; mov rax, r8; syscall; 
0x0000000000054dd5: add eax, 0xdaf88348; jne 0x54df9; mov rax, r8; syscall; 
0x0000000000054e3b: add eax, 0xdaf88348; jne 0x54e47; mov rax, r8; syscall; 
0x0000000000054ebf: add eax, 0xdaf88348; jne 0x54ece; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054f1d: add eax, 0xdaf88348; jne 0x54f08; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000054f76: add eax, 0xdaf88348; jne 0x54f85; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fe8: add eax, 0xdaf88348; jne 0x54ff7; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fb0: add eax, 0xdaf88348; jne 0x5500a; mov esi, 1; mov rax, r9; syscall; 
0x0000000000055038: add eax, 0xdaf88348; jne 0x55047; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000552da: add eax, 0xdaf88348; jne 0x552e6; mov rax, r8; syscall; 
0x00000000000552da: add eax, 0xdaf88348; jne 0x552e6; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055325: add eax, 0xdaf88348; jne 0x55331; mov rax, r8; syscall; 
0x00000000000553b3: add eax, 0xdaf88348; jne 0x553bf; mov rax, r8; syscall; 
0x00000000000553b3: add eax, 0xdaf88348; jne 0x553bf; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055428: add eax, 0xdaf88348; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055428: add eax, 0xdaf88348; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005569c: add eax, 0xdaf88348; jne 0x556b6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005575e: add eax, 0xdaf88348; jne 0x5577a; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000055734: add eax, 0xdaf88348; jne 0x5577a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005598d: add eax, 0xdaf88348; jne 0x55999; mov rax, r8; syscall; 
0x000000000005598d: add eax, 0xdaf88348; jne 0x55999; mov rax, r8; syscall; ret; 
0x00000000000559dc: add eax, 0xdaf88348; jne 0x559e8; mov rax, r8; syscall; 
0x00000000000559dc: add eax, 0xdaf88348; jne 0x559e8; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055b1d: add eax, 0xdaf88348; jne 0x55aba; mov rax, r15; mov esi, 1; syscall; 
0x0000000000055bc5: add eax, 0xdaf88348; jne 0x55bd4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000560eb: add eax, 0xdaf88348; jne 0x560fa; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c18: add eax, 0xdaf88348; jne 0x56c27; mov rax, rbp; mov rsi, rdx; syscall; 
0x0000000000056d39: add eax, 0xdaf88348; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d39: add eax, 0xdaf88348; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056dca: add eax, 0xdaf88348; jne 0x56dff; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056fe4: add eax, 0xdaf88348; jne 0x56ff5; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057952: add eax, 0xdaf88348; jne 0x57961; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057df4: add eax, 0xdaf88348; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057df4: add eax, 0xdaf88348; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000562dc: add eax, 0xdbf7c389; jne 0x562f3; movsxd rdi, dword ptr [r12 + 0x30]; mov eax, 0x91; syscall; 
0x0000000000035509: add eax, 0xde0d7700; ret 0xc9d9; 
0x00000000000322bf: add eax, 0xdec1de00; retf 0x2ddb; and eax, 0xde0005f4; ret 0x25d8; 
0x000000000003714c: add eax, 0xe0d9d9dd; ret; 
0x000000000004af92: add eax, 0xe8c78948; and eax, 0x48fffcba; add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000023c92: add eax, 0xe8c78948; and eax, 0x5affff2d; ret; 
0x0000000000023592: add eax, 0xe8c78948; and eax, 0x5affff34; ret; 
0x000000000005b2cf: add eax, 0xe8c78948; call 0x5b05ae8f; ret; 
0x000000000005a8bd: add eax, 0xe8c78948; cli; sar bl, 0xff; pop rdx; ret; 
0x000000000005af7a: add eax, 0xe8c78948; cmp eax, 0x5afffbba; ret; 
0x0000000000023c11: add eax, 0xe8c78948; cmpsb byte ptr [rsi], byte ptr [rdi]; sub eax, 0xc35affff; push rax; mov eax, 0xa8; syscall; 
0x000000000005aed8: add eax, 0xe8c78948; fistp qword ptr [rdx - 0x3ca50005]; xor edi, edi; mov eax, 0x79; syscall; 
0x000000000005af07: add eax, 0xe8c78948; mov al, 0xba; sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005b273: add eax, 0xe8c78948; mov dil, 0xfb; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x00000000000396ff: add eax, 0xe8c78948; mov eax, 0x5afffdd2; ret; 
0x0000000000023dff: add eax, 0xe8c78948; mov eax, 0x5affff2b; ret; 
0x000000000004abfc: add eax, 0xe8c78948; mov ebx, 0x5afffcbd; ret; 
0x000000000004a9fe: add eax, 0xe8c78948; mov ecx, 0x5afffcbf; ret; 
0x000000000003a3fd: add eax, 0xe8c78948; mov edx, 0x48fffdc5; add esp, 0x18; ret; 
0x0000000000023cf9: add eax, 0xe8c78948; mov esi, 0x5affff2c; ret; 
0x000000000005af68: add eax, 0xe8c78948; movabs r10, 0x56b850c35afffb; add byte ptr [rax], al; syscall; 
0x00000000000225ad: add eax, 0xe8c78948; or al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x0000000000023cad: add eax, 0xe8c78948; or ch, byte ptr [rip - 0x3ca50001]; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x00000000000235aa: add eax, 0xe8c78948; or eax, 0x5affff34; ret; 
0x000000000005a5ae: add eax, 0xe8c78948; or esp, eax; sti; lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000003a75a: add eax, 0xe8c78948; pop rbp; ret 0xfffd; 
0x0000000000023a4f: add eax, 0xe8c78948; push 0x5affff2f; ret; 
0x000000000003a5f5: add eax, 0xe8c78948; ret 0xfdc3; 
0x00000000000237f5: add eax, 0xe8c78948; ret 0xff31; 
0x0000000000039cf4: add eax, 0xe8c78948; ret; 
0x0000000000023ded: add eax, 0xe8c78948; retf 0xff2b; lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x000000000005b419: add eax, 0xe8c78948; sahf; mov ch, 0xfb; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x000000000005a991: add eax, 0xe8c78948; sar bl, 0xff; pop rdx; ret; 
0x0000000000049c9a: add eax, 0xe8c78948; sbb eax, 0x5afffccd; ret; 
0x000000000003d49a: add eax, 0xe8c78948; sbb eax, 0x5afffd95; ret; 
0x0000000000023c50: add eax, 0xe8c78948; sub eax, 0xc35affff; push rax; mov eax, 0x63; syscall; 
0x0000000000023b0e: add eax, 0xe8c78948; test eax, 0x5affff2e; ret; 
0x000000000003a782: add eax, 0xe8c78948; xor eax, 0x5afffdc2; ret; 
0x0000000000022595: add eax, 0xe8f86348; and al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x00000000000226f0: add eax, 0xe8f86348; mov dword ptr [rdx - 1], 0x50c35aff; mov eax, 0x43; syscall; 
0x000000000005aa2e: add eax, 0xe8f96349; mov dword ptr [rdi - 0x3ca50005], edi; mov r8, rdi; mov eax, 0x6c; syscall; 
0x000000000004079d: add eax, 0xe8fd6348; sbb ah, byte ptr [rdx - 3]; lcall [rdx + 0x5b]; pop rbp; ret; 
0x0000000000023d92: add eax, 0xe9c78948; and eax, 0x48ffff2c; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x0000000000023c7c: add eax, 0xe9c78948; cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; 
0x0000000000023c7c: add eax, 0xe9c78948; cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000226da: add eax, 0xe9c78948; fld qword ptr [rdx - 1]; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x000000000002bd2b: add eax, 0xeb00066c; or eax, 0xd100ff3; imul eax, dword ptr [rsi], 0; call 0x2894a; add rsp, 0x28; ret; 
0x000000000003d9f6: add eax, 0xeb10e7c1; add eax, ecx; out 8, eax; mov eax, edi; or eax, esi; ret; 
0x00000000000261e7: add eax, 0xebc0ff48; out dx, al; cmp cl, 0x20; je 0x261e8; ret; 
0x0000000000023b77: add eax, 0xebf86348; mov r8d, 0x11a; syscall; 
0x000000000005ac24: add eax, 0xebfa6348; sub eax, 0x1be; add byte ptr [rax + 0x48], bh; syscall; 
0x000000000004af60: add eax, 0xebfa6348; xor byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x0000000000042d9a: add eax, 0xec834800; and byte ptr [rax + 0x142], bh; mov rdx, rbp; syscall; 
0x0000000000035390: add eax, 0xf037500; sub cl, al; ret; 
0x0000000000035d80: add eax, 0xf2c7500; push rdi; retf 0x570f; ret 0xff3; 
0x0000000000055330: add eax, 0xf70c538b; ret 0xffff; 
0x000000000004a5f8: add eax, 0xfa8948c3; mov r10d, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005914e: add eax, 0xfbd86ce8; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005532b: add eax, 0xfc0894c; add eax, 0xf70c538b; ret 0xffff; 
0x0000000000057e04: add eax, 0xfe8948c3; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000004a62a: add eax, 0xff6348c3; push rax; mov eax, 0x24; syscall; 
0x000000000005adfd: add eax, 0xff6348c3; push rax; mov eax, 0x73; syscall; 
0x000000000005aefb: add eax, 0xff6348c3; push rax; mov eax, 0x7c; syscall; 
0x000000000005aa42: add eax, 0xffce8348; mov rdi, rax; mov eax, 0x72; syscall; 
0x000000000005f302: add eax, 0xffffffff; jmp qword ptr [rbx]; 
0x0000000000017fb1: add eax, 1; cmp byte ptr [rax], 0; jne 0x17fb0; sub rax, rdi; ret; 
0x000000000003f66b: add eax, 2; add dword ptr [rip + 0x258944], eax; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x0000000000021301: add eax, 2; ret; 
0x00000000000289a1: add eax, 3; ret; 
0x0000000000020cdc: add eax, 4; ret; 
0x00000000000224e9: add eax, dword ptr [rax - 0x60fedb9c]; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000017db8: add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000005b5ed: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; and al, 8; call 0x594ec; add rsp, 0x18; ret; 
0x0000000000039da3: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004b6b1: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000055766: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, rbp; syscall; 
0x0000000000057f02: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x000000000004e65f: add eax, dword ptr [rax]; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000021456: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003f940: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; ret; 
0x0000000000018d8a: add eax, dword ptr [rax]; add byte ptr [rbx + 0x49], bl; lea eax, [rsp + rax*4]; pop rbp; pop r12; ret; 
0x0000000000001d0d: add eax, dword ptr [rax]; add byte ptr [rdi + 3], dh; add byte ptr [rax], al; syscall; 
0x0000000000009621: add eax, dword ptr [rax]; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rsi], ah; ret; 
0x0000000000017737: add eax, dword ptr [rax]; add rax, rbx; pop rbx; ret; 
0x000000000001e275: add eax, dword ptr [rax]; add rsp, 0x170; pop rbx; ret; 
0x0000000000023b59: add eax, dword ptr [rax]; add rsp, 0x18; ret; 
0x0000000000016f7c: add eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000021fc0: add eax, dword ptr [rax]; call rbx; 
0x000000000001e0b0: add eax, dword ptr [rax]; inc eax; cdqe; pop rdx; ret; 
0x0000000000058e26: add eax, dword ptr [rax]; lea rdi, [rip + 0x23f1b9]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x0000000000022009: add eax, dword ptr [rax]; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000005c7c4: add eax, dword ptr [rax]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000002296f: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 8]; ret; 
0x000000000002171d: add eax, dword ptr [rax]; mov rax, qword ptr [rdi]; ret; 
0x0000000000016d6c: add eax, dword ptr [rax]; mov rax, rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001790f: add eax, dword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000022606: add eax, dword ptr [rax]; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000023838: add eax, dword ptr [rax]; mov rdi, rax; call 0x169c0; add rsp, 0x28; ret; 
0x000000000002239b: add eax, dword ptr [rax]; mov rdi, rax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000002205f: add eax, dword ptr [rax]; mov rdi, rbp; call rbx; 
0x0000000000023ade: add eax, dword ptr [rax]; movsxd rdi, dword ptr [rsp + 0x18]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000002331c: add eax, dword ptr [rax]; movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x0000000000059d83: add eax, dword ptr [rax]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x00000000000227b1: add eax, dword ptr [rax]; pop rbx; ret; 
0x000000000005ee86: add eax, dword ptr [rax]; push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x000000000005a984: add eax, dword ptr [rax]; ret; 
0x000000000003cae2: add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x0000000000022137: add eax, dword ptr [rax]; xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000054b29: add eax, dword ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x0000000000022403: add eax, dword ptr [rbx - 0x2f760036]; pop rdx; ret; 
0x0000000000051a70: add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x000000000005c670: add eax, dword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000004b35e: add eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000043060: add eax, dword ptr [rcx]; je 0x4309e; mov eax, 0x68; syscall; 
0x000000000004bd33: add eax, dword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000002298d: add eax, dword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000005484a: add eax, dword ptr [rdx + rcx*8]; ret; 
0x000000000005db55: add eax, dword ptr [rip + 0x239de5]; mov rsi, rbx; mov rdi, r12; call rax; 
0x000000000005a905: add eax, dword ptr [rsp + 0x30]; add rsp, 0x48; ret; 
0x000000000005b59c: add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x000000000003780a: add eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 8], rax; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x0000000000021fbf: add eax, dword ptr es:[rax]; call rbx; 
0x0000000000022008: add eax, dword ptr es:[rax]; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000002205e: add eax, dword ptr es:[rax]; mov rdi, rbp; call rbx; 
0x000000000002c33e: add eax, eax; cvtsi2sd xmm2, eax; divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002c8c1: add eax, eax; divss xmm1, xmm0; cvtsi2ss xmm2, eax; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x0000000000058207: add eax, eax; mov eax, r8d; neg eax; test r9d, r9d; cmove eax, r8d; ret; 
0x000000000003739b: add eax, eax; ret; 
0x0000000000017dda: add eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000181ea: add eax, ebx; mov edx, 0; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000017df5: add eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000058177: add eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000001773a: add eax, ebx; pop rbx; ret; 
0x0000000000024d96: add eax, ecx; jmp rax; 
0x000000000003d9fb: add eax, ecx; out 8, eax; mov eax, edi; or eax, esi; ret; 
0x0000000000058e7a: add eax, edx; cdqe; ret; 
0x000000000001e1b7: add eax, edx; jmp rax; 
0x0000000000026b16: add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x000000000004d5bd: add eax, edx; pop rbx; ret; 
0x0000000000028a2d: add eax, edx; sete al; movzx eax, al; ret; 
0x0000000000023099: add eax, esi; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x000000000003cae0: add eax, esi; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x00000000000168d9: add eax, esi; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000262ab: add eax, esi; jmp rax; 
0x000000000004e0dd: add eax, esi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x000000000004c8f8: add eax, esi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000005840e: add eax, esi; pop r13; pop r14; pop r15; ret; 
0x000000000003f971: add eax, esi; ret; 
0x0000000000035dad: add ebp, ebx; or al, 0xf; push rdi; ret 0xff3; 
0x00000000000187f8: add ebx, dword ptr [rbx - 0xd]; ret; 
0x000000000005529c: add ebx, dword ptr [rdx + 0x5b]; pop rbp; jmp rax; 
0x00000000000271af: add ebx, ebp; or bh, bh; ret 0x1588; 
0x000000000003786d: add ebx, ecx; stc; ret; 
0x00000000000263a8: add ecx, dword ptr [rax - 0x75]; adc ecx, dword ptr [rax - 0x77]; adc ecx, dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000004a22b: add ecx, dword ptr [rax - 0x77]; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000001f623: add ecx, dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000005c671: add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000003b297: add ecx, dword ptr [rax - 1]; ret; 
0x000000000002dd4e: add ecx, dword ptr [rdi]; push rdi; leave; movapd xmm0, xmm1; ret; 
0x000000000002dd8a: add ecx, dword ptr [rdi]; push rdi; leave; movaps xmm0, xmm1; ret; 
0x0000000000030c91: add ecx, dword ptr [rdi]; push rdi; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000035393: add ecx, dword ptr [rdi]; sub cl, al; ret; 
0x0000000000035429: add ecx, eax; add eax, 0xd2854800; jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x0000000000039824: add ecx, ebx; cmp r11d, 0x2f; jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x000000000005114a: add ecx, edx; jmp rcx; 
0x0000000000076d65: add edi, -0x7d; rol dword ptr [rbx - 0x7bec7c16], 1; ret; 
0x00000000000358ba: add edi, 0x7cdb3fff; and al, 0xe8; mov word ptr [rsp - 0x10], di; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000035830: add edi, 0x7f; shl edi, 0x17; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000436b9: add edi, 0x88; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000001706f: add edi, 1; cmp rcx, r8; jne 0x17060; xor eax, eax; pop rbx; ret; 
0x000000000001e28f: add edi, 4; dec esi; bswap eax; mov dword ptr [rdi - 4], eax; jne 0x1e28c; ret; 
0x0000000000019645: add edi, 4; sub rdx, 1; jne 0x19640; xor eax, eax; ret; 
0x00000000000436ab: add edi, 8; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000049b5e: add edi, eax; call 0x54178; mov eax, ebx; neg eax; pop rbx; ret; 
0x000000000006780d: add edi, eax; jmp rdi; 
0x000000000003a7f3: add edi, eax; mov eax, 0xf1; syscall; 
0x00000000000442a9: add edi, ebp; dec dword ptr [rax - 0x77]; ret; 
0x000000000005fc47: add edi, ebp; fnsave dword ptr [rdx]; ret; 
0x0000000000032808: add edi, ecx; jne 0x3281d; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000005a56d: add edi, edi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000007fb6f: add edx, -0x7d; ret; 
0x00000000000560b1: add edx, 0x24; syscall; 
0x000000000006edcb: add edx, 0x8187eff9; mov dword ptr [rax], esp; mov ebx, dword ptr [rcx - 0x70]; ret; 
0x0000000000057cef: add edx, 2; mov eax, edx; pop rdx; ret; 
0x00000000000735bc: add edx, dword ptr [rdi + 4]; push rdi; ret 0xd457; 
0x0000000000031467: add edx, eax; jmp rdx; 
0x0000000000058f30: add edx, eax; movsxd rdx, edx; imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000052750: add edx, ecx; jmp rdx; 
0x000000000008b185: add edx, edx; cmp al, 0x9b; sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x00000000000289ce: add edx, edx; cmp edx, 1; sbb eax, eax; add eax, 3; ret; 
0x0000000000028999: add edx, edx; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x000000000002b983: add edx, edx; je 0x2b91d; movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000002df23: add edx, edx; je 0x2dec2; movss xmm1, dword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x00000000000363e1: add edx, esi; movups xmm0, xmmword ptr [rsp]; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x000000000007c34e: add esi, dword ptr [rax]; add eax, 0x5e201430; call qword ptr [rsi]; 
0x0000000000056d22: add esi, dword ptr [rbp + 0x25]; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005514d: add esi, dword ptr [rbp + 4]; syscall; 
0x000000000002198a: add esi, dword ptr [rbp - 0x1c]; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x000000000005421e: add esi, ebx; stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000054c06: add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000017aae: add esi, esi; ret; 
0x000000000005c7cb: add esp, 0x100; ret; 
0x000000000003e4a8: add esp, 0x108; pop rbx; pop rbp; ret; 
0x0000000000052ed5: add esp, 0x108; ret; 
0x0000000000058173: add esp, 0x10; add rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000388c4: add esp, 0x10; mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000026ac7: add esp, 0x10; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000026959: add esp, 0x10; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000004097c: add esp, 0x10; mov rax, rbx; pop rbx; ret; 
0x000000000002af71: add esp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000036105: add esp, 0x10; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001b763: add esp, 0x10; movapd xmm1, xmm2; pop rbx; ret; 
0x000000000002b147: add esp, 0x10; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000361bf: add esp, 0x10; movaps xmm0, xmm2; pop rbx; ret; 
0x0000000000026d79: add esp, 0x10; pop rbx; pop r14; pop r15; ret; 
0x0000000000038090: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021387: add esp, 0x10; pop rbx; ret; 
0x00000000000371cf: add esp, 0x10; ret; 
0x0000000000057d1e: add esp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000003a509: add esp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x000000000005c597: add esp, 0x110; pop rbx; ret; 
0x000000000003a536: add esp, 0x118; ret; 
0x0000000000037f75: add esp, 0x120; pop rbx; ret; 
0x000000000004abaa: add esp, 0x138; ret; 
0x000000000005b558: add esp, 0x148; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000043718: add esp, 0x150; pop rbx; ret; 
0x0000000000021995: add esp, 0x158; ret; 
0x0000000000022ebd: add esp, 0x170; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e278: add esp, 0x170; pop rbx; ret; 
0x000000000003f968: add esp, 0x18; cqo; idiv rcx; add rax, rsi; ret; 
0x000000000004eba1: add esp, 0x18; dec eax; ret; 
0x000000000001c6ce: add esp, 0x18; fxch st(1); ret; 
0x0000000000049c16: add esp, 0x18; mov rax, -0x26; pop rbx; pop rbp; ret; 
0x0000000000054289: add esp, 0x18; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000000169ef: add esp, 0x18; mov rax, rdi; ret; 
0x0000000000049c08: add esp, 0x18; mov rsi, rbp; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x00000000000355df: add esp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x000000000001ba63: add esp, 0x18; movapd xmm2, xmm0; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000003568d: add esp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x000000000002344a: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x000000000002893a: add esp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x0000000000028970: add esp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000002f8f0: add esp, 0x18; pop rbx; pop rbp; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x00000000000219fe: add esp, 0x18; pop rbx; pop rbp; jmp rax; 
0x00000000000148bd: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022962: add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001bc87: add esp, 0x18; ret; 
0x000000000001b957: add esp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000005b7b5: add esp, 0x190; jmp rax; 
0x0000000000038011: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a29c: add esp, 0x1b8; ret; 
0x0000000000053217: add esp, 0x1f8; ret; 
0x0000000000053123: add esp, 0x200; pop rbx; pop rbp; pop r12; ret; 
0x000000000002d3b6: add esp, 0x20; add rsp, 0x30; pop rbx; ret; 
0x000000000002becc: add esp, 0x20; add rsp, 0x38; ret; 
0x000000000002cd07: add esp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x0000000000036d05: add esp, 0x20; fmulp st(1); fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x0000000000039791: add esp, 0x20; mov eax, ebx; pop rbx; ret; 
0x0000000000042dec: add esp, 0x20; mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000053575: add esp, 0x20; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000001d878: add esp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000030fa6: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bda8: add esp, 0x20; pop rbx; ret; 
0x0000000000056e00: add esp, 0x20; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003cab3: add esp, 0x228; pop rbx; pop rbp; ret; 
0x000000000004addd: add esp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x000000000005482d: add esp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000003a2bb: add esp, 0x28; or rax, 0xffffffffffffffff; pop rbx; pop rbp; ret; 
0x000000000002f35e: add esp, 0x28; pop rbx; pop rbp; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000001f1f5: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017bf6: add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000000001c322: add esp, 0x28; ret; 
0x00000000000422b5: add esp, 0x28; sar eax, 0x1f; ret; 
0x0000000000017ca6: add esp, 0x28; sub rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000036825: add esp, 0x30; add rsp, 0x38; ret; 
0x0000000000035dbd: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b58b: add esp, 0x30; pop rbx; ret; 
0x00000000000372c9: add esp, 0x30; ret; 
0x0000000000030a8d: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029f69: add esp, 0x38; pop rbx; pop rbp; ret; 
0x000000000001b728: add esp, 0x38; ret; 
0x0000000000031eae: add esp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c693: add esp, 0x40; pop rbx; ret; 
0x0000000000040660: add esp, 0x450; pop rbx; pop rbp; pop r12; ret; 
0x000000000002a528: add esp, 0x48; faddp st(1); ret; 
0x000000000001bb8b: add esp, 0x48; fchs; fxch st(1); ret; 
0x0000000000036d0e: add esp, 0x48; fmulp st(1); ret; 
0x000000000001fa31: add esp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000000317ec: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000028fd3: add esp, 0x48; pop rbx; pop rbp; ret; 
0x000000000001ba36: add esp, 0x48; ret; 
0x000000000005ac01: add esp, 0x4b8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004a906: add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022337: add esp, 0x50; pop rbx; ret; 
0x00000000000324c5: add esp, 0x58; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001cb4b: add esp, 0x58; ret; 
0x000000000002cd0d: add esp, 0x60; pop rbx; ret; 
0x000000000001b895: add esp, 0x68; fsubrp st(1); fxch st(1); fchs; fxch st(1); ret; 
0x0000000000023179: add esp, 0x68; pop rbx; pop rbp; ret; 
0x00000000000223a6: add esp, 0x68; ret; 
0x000000000005933b: add esp, 0x70; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000002e469: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a387: add esp, 0x70; pop rbx; ret; 
0x000000000001bfa4: add esp, 0x78; fxch st(1); ret; 
0x00000000000299d8: add esp, 0x78; pop rbx; pop rbp; ret; 
0x00000000000238f2: add esp, 0x78; ret; 
0x00000000000229ea: add esp, 0x840; mov rax, rdx; pop rbx; ret; 
0x0000000000020278: add esp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000004286d: add esp, 0x88; pop rbx; pop rbp; ret; 
0x000000000001b2f2: add esp, 0x88; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002257e: add esp, 0x90; mov eax, esi; pop rbx; ret; 
0x0000000000057f17: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000000020cb0: add esp, 0x90; pop rbx; ret; 
0x000000000002141d: add esp, 0x98; mov rax, rdx; pop rbx; pop rbp; ret; 
0x0000000000034f20: add esp, 0x98; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004a78d: add esp, 0x98; pop rbx; pop rbp; ret; 
0x000000000004ab2a: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b86d: add esp, 0xa0; pop rbx; ret; 
0x000000000001bb27: add esp, 0xa8; fchs; fxch st(1); ret; 
0x000000000004aad8: add esp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000004b254: add esp, 0xb0; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f21f: add esp, 0xb8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002324c: add esp, 0xd0; mov eax, edx; pop rbx; ret; 
0x0000000000022921: add esp, 0xd8; ret; 
0x0000000000053d04: add esp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004f481: add esp, 0xf8; ret; 
0x0000000000018d5a: add esp, 8; lea rax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000017a4e: add esp, 8; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000000175dc: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000016967: add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000016f3a: add esp, 8; ret; 
0x0000000000017cf9: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000007c3ca: add esp, dword ptr [rcx]; add al, 0xff; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000084eba: add esp, dword ptr [rcx]; in eax, 0xff; add al, 0xff; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000022501: add esp, dword ptr [rip + 0xc00]; ret; 
0x000000000004bb9e: add esp, edx; movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r13d; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000002840e: add esp, esi; cmp byte ptr [rdx], 0; je 0x28416; hlt; sub rax, rdi; ret; 
0x0000000000026fbd: add esp, esi; ret; 
0x0000000000028414: add esp, esi; sub rax, rdi; ret; 
0x000000000003f743: add qword ptr [r8], r8; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004eae1: add qword ptr [rax - 0x77], rcx; or eax, 0x24685e; mov byte ptr [rdx], dil; ret; 
0x000000000004eaa8: add qword ptr [rax - 0x77], rcx; or eax, 0x246897; mov byte ptr [rdx], dil; ret; 
0x0000000000021cfa: add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000005b55a: add qword ptr [rax], rax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000000430f8: add qword ptr [rax], rax; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000004bf7e: add qword ptr [rdi + 8], rsi; ret; 
0x0000000000058300: add qword ptr [rsi], rdx; cmp eax, 6; mov edx, 6; cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000028fcb: add r10b, r14b; movups xmmword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000004bb9d: add r12, rdx; movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r13d; mov rax, r14; mov rsi, rbp; syscall; 
0x0000000000058206: add r8d, eax; mov eax, r8d; neg eax; test r9d, r9d; cmove eax, r8d; ret; 
0x000000000003195c: add rax, 0x2e0f0000; ret 0xa76; 
0x0000000000021e6e: add rax, 0x34; ret; 
0x000000000003d4d6: add rax, 0xa0; ret; 
0x0000000000017fb0: add rax, 1; cmp byte ptr [rax], 0; jne 0x17fb0; sub rax, rdi; ret; 
0x000000000003f66a: add rax, 2; add dword ptr [rip + 0x258944], eax; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x0000000000020cdb: add rax, 4; ret; 
0x000000000005c7c3: add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000002331b: add rax, qword ptr [r8]; movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000005ee85: add rax, qword ptr [r8]; push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x000000000005c66f: add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000004bd32: add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000002298c: add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000054849: add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000005db54: add rax, qword ptr [rip + 0x239de5]; mov rsi, rbx; mov rdi, r12; call rax; 
0x0000000000037809: add rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 8], rax; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x0000000000043119: add rax, r10; jmp rax; 
0x00000000000262aa: add rax, r14; jmp rax; 
0x000000000003739a: add rax, rax; ret; 
0x0000000000017dd9: add rax, rbp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000181e9: add rax, rbx; mov edx, 0; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000017df4: add rax, rbx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000058176: add rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017739: add rax, rbx; pop rbx; ret; 
0x0000000000024d95: add rax, rcx; jmp rax; 
0x000000000001e1b6: add rax, rdx; jmp rax; 
0x000000000004d5bc: add rax, rdx; pop rbx; ret; 
0x0000000000028a2c: add rax, rdx; sete al; movzx eax, al; ret; 
0x00000000000168d8: add rax, rsi; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000004e0dc: add rax, rsi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x000000000004c8f7: add rax, rsi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000005840d: add rax, rsi; pop r13; pop r14; pop r15; ret; 
0x000000000003f970: add rax, rsi; ret; 
0x0000000000039823: add rcx, r11; cmp r11d, 0x2f; jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000051149: add rcx, rdx; jmp rcx; 
0x00000000000436b8: add rdi, 0x88; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000001706e: add rdi, 1; cmp rcx, r8; jne 0x17060; xor eax, eax; pop rbx; ret; 
0x000000000001e28e: add rdi, 4; dec esi; bswap eax; mov dword ptr [rdi - 4], eax; jne 0x1e28c; ret; 
0x0000000000019644: add rdi, 4; sub rdx, 1; jne 0x19640; xor eax, eax; ret; 
0x00000000000436aa: add rdi, 8; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000049b5d: add rdi, rax; call 0x54178; mov eax, ebx; neg eax; pop rbx; ret; 
0x000000000003a7f2: add rdi, rax; mov eax, 0xf1; syscall; 
0x0000000000032807: add rdi, rcx; jne 0x3281d; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000005a56c: add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x00000000000560b0: add rdx, 0x24; syscall; 
0x0000000000031466: add rdx, rax; jmp rdx; 
0x000000000005274f: add rdx, rcx; jmp rdx; 
0x0000000000028998: add rdx, rdx; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x0000000000054c05: add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000005c7ca: add rsp, 0x100; ret; 
0x000000000003e4a7: add rsp, 0x108; pop rbx; pop rbp; ret; 
0x0000000000052ed4: add rsp, 0x108; ret; 
0x0000000000058172: add rsp, 0x10; add rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000388c3: add rsp, 0x10; mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000026ac6: add rsp, 0x10; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000026958: add rsp, 0x10; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000004097b: add rsp, 0x10; mov rax, rbx; pop rbx; ret; 
0x000000000002af70: add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000036104: add rsp, 0x10; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001b762: add rsp, 0x10; movapd xmm1, xmm2; pop rbx; ret; 
0x000000000002b146: add rsp, 0x10; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000361be: add rsp, 0x10; movaps xmm0, xmm2; pop rbx; ret; 
0x0000000000026d78: add rsp, 0x10; pop rbx; pop r14; pop r15; ret; 
0x000000000003808f: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021386: add rsp, 0x10; pop rbx; ret; 
0x00000000000371ce: add rsp, 0x10; ret; 
0x0000000000057d1d: add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000003a508: add rsp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x000000000005c596: add rsp, 0x110; pop rbx; ret; 
0x000000000003a535: add rsp, 0x118; ret; 
0x0000000000037f74: add rsp, 0x120; pop rbx; ret; 
0x000000000004aba9: add rsp, 0x138; ret; 
0x000000000005b557: add rsp, 0x148; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000043717: add rsp, 0x150; pop rbx; ret; 
0x0000000000021994: add rsp, 0x158; ret; 
0x0000000000022ebc: add rsp, 0x170; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e277: add rsp, 0x170; pop rbx; ret; 
0x000000000003f967: add rsp, 0x18; cqo; idiv rcx; add rax, rsi; ret; 
0x000000000004eba0: add rsp, 0x18; dec eax; ret; 
0x000000000001c6cd: add rsp, 0x18; fxch st(1); ret; 
0x0000000000049c15: add rsp, 0x18; mov rax, -0x26; pop rbx; pop rbp; ret; 
0x0000000000054288: add rsp, 0x18; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000000169ee: add rsp, 0x18; mov rax, rdi; ret; 
0x0000000000049c07: add rsp, 0x18; mov rsi, rbp; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x00000000000355de: add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x000000000001ba62: add rsp, 0x18; movapd xmm2, xmm0; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000003568c: add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x0000000000023449: add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x0000000000028939: add rsp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000002896f: add rsp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000002f8ef: add rsp, 0x18; pop rbx; pop rbp; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x00000000000219fd: add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x00000000000148bc: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022961: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001bc86: add rsp, 0x18; ret; 
0x000000000001b956: add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000005b7b4: add rsp, 0x190; jmp rax; 
0x0000000000038010: add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a29b: add rsp, 0x1b8; ret; 
0x0000000000053216: add rsp, 0x1f8; ret; 
0x0000000000053122: add rsp, 0x200; pop rbx; pop rbp; pop r12; ret; 
0x000000000002d3b5: add rsp, 0x20; add rsp, 0x30; pop rbx; ret; 
0x000000000002becb: add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002cd06: add rsp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x0000000000036d04: add rsp, 0x20; fmulp st(1); fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x0000000000039790: add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x0000000000042deb: add rsp, 0x20; mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000053574: add rsp, 0x20; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000001d877: add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000030fa5: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bda7: add rsp, 0x20; pop rbx; ret; 
0x0000000000056dff: add rsp, 0x20; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003cab2: add rsp, 0x228; pop rbx; pop rbp; ret; 
0x000000000004addc: add rsp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x000000000005482c: add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000003a2ba: add rsp, 0x28; or rax, 0xffffffffffffffff; pop rbx; pop rbp; ret; 
0x000000000002f35d: add rsp, 0x28; pop rbx; pop rbp; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000001f1f4: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017bf5: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000001c321: add rsp, 0x28; ret; 
0x00000000000422b4: add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000017ca5: add rsp, 0x28; sub rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000036824: add rsp, 0x30; add rsp, 0x38; ret; 
0x0000000000035dbc: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b58a: add rsp, 0x30; pop rbx; ret; 
0x00000000000372c8: add rsp, 0x30; ret; 
0x0000000000030a8c: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029f68: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000001b727: add rsp, 0x38; ret; 
0x0000000000031ead: add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c692: add rsp, 0x40; pop rbx; ret; 
0x000000000004065f: add rsp, 0x450; pop rbx; pop rbp; pop r12; ret; 
0x000000000002a527: add rsp, 0x48; faddp st(1); ret; 
0x000000000001bb8a: add rsp, 0x48; fchs; fxch st(1); ret; 
0x0000000000036d0d: add rsp, 0x48; fmulp st(1); ret; 
0x000000000001fa30: add rsp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000000317eb: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000028fd2: add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000001ba35: add rsp, 0x48; ret; 
0x000000000005ac00: add rsp, 0x4b8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004a905: add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022336: add rsp, 0x50; pop rbx; ret; 
0x00000000000324c4: add rsp, 0x58; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001cb4a: add rsp, 0x58; ret; 
0x000000000002cd0c: add rsp, 0x60; pop rbx; ret; 
0x000000000001b894: add rsp, 0x68; fsubrp st(1); fxch st(1); fchs; fxch st(1); ret; 
0x0000000000023178: add rsp, 0x68; pop rbx; pop rbp; ret; 
0x00000000000223a5: add rsp, 0x68; ret; 
0x000000000005933a: add rsp, 0x70; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000002e468: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a386: add rsp, 0x70; pop rbx; ret; 
0x000000000001bfa3: add rsp, 0x78; fxch st(1); ret; 
0x00000000000299d7: add rsp, 0x78; pop rbx; pop rbp; ret; 
0x00000000000238f1: add rsp, 0x78; ret; 
0x00000000000229e9: add rsp, 0x840; mov rax, rdx; pop rbx; ret; 
0x0000000000020277: add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000004286c: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000001b2f1: add rsp, 0x88; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002257d: add rsp, 0x90; mov eax, esi; pop rbx; ret; 
0x0000000000057f16: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000000020caf: add rsp, 0x90; pop rbx; ret; 
0x000000000002141c: add rsp, 0x98; mov rax, rdx; pop rbx; pop rbp; ret; 
0x0000000000034f1f: add rsp, 0x98; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004a78c: add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000004ab29: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b86c: add rsp, 0xa0; pop rbx; ret; 
0x000000000001bb26: add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000004aad7: add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000004b253: add rsp, 0xb0; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f21e: add rsp, 0xb8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002324b: add rsp, 0xd0; mov eax, edx; pop rbx; ret; 
0x0000000000022920: add rsp, 0xd8; ret; 
0x0000000000053d03: add rsp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004f480: add rsp, 0xf8; ret; 
0x0000000000018d59: add rsp, 8; lea rax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000017a4d: add rsp, 8; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000000175db: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000016966: add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000016f39: add rsp, 8; ret; 
0x0000000000017cf8: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002a323: addps xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000002a17a: addps xmm0, xmm0; add rsp, 0x28; ret; 
0x000000000002d62e: addps xmm0, xmm0; ret; 
0x000000000002d1ac: addps xmm0, xmm1; add rsp, 0x28; ret; 
0x0000000000029af3: addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a7: addps xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b8db: addps xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002d6c7: addps xmm0, xmm1; mulsd xmm0, qword ptr [rsp - 0x10]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029d4d: addps xmm0, xmm1; ret; 
0x00000000000332c0: addps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000331d1: addps xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a31f: addps xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000032b5b: addps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000029af7: addps xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b6f5: addps xmm0, xmm2; divsd xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000002de84: addps xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x0000000000033b26: addps xmm0, xmm2; movsd qword ptr [rsp + 0x28], xmm0; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x0000000000033c24: addps xmm0, xmm2; movss dword ptr [rsp + 0x2c], xmm0; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x0000000000029a75: addps xmm0, xmm2; ret; 
0x000000000002a31b: addps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x00000000000331d5: addps xmm0, xmm4; ret; 
0x0000000000028852: addps xmm0, xmm6; ret; 
0x00000000000332bb: addps xmm0, xmmword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b8e1: addps xmm0, xmmword ptr [rip + 0x66348]; ret; 
0x000000000002a5a7: addps xmm0, xmmword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a754: addps xmm0, xmmword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fe8: addps xmm0, xmmword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a3d5: addps xmm0, xmmword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x000000000002a481: addps xmm0, xmmword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000002a1af: addps xmm0, xmmword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000030679: addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x00000000000300e2: addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002b61e: addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000032d1e: addps xmm1, xmm0; movapd xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x0000000000032eb0: addps xmm1, xmm0; movaps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000002eb5a: addps xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000029d45: addps xmm1, xmm2; mulsd xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000002eb56: addps xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000032b54: addps xmm2, xmm0; movaps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000033844: addps xmm2, xmm0; movsd qword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x00000000000338ea: addps xmm2, xmm0; movss dword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x00000000000331c9: addps xmm2, xmm1; addsd xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000001a026: addps xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x00000000000331cd: addps xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002884a: addps xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x00000000000331c8: addps xmm2, xmm9; addsd xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a7ba: addps xmm2, xmmword ptr [rip + 0x6816b]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x00000000000332ba: addsd xmm0, qword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b8e0: addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002a5a6: addsd xmm0, qword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a753: addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fe7: addsd xmm0, qword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a3d4: addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x00000000000300e1: addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002b8df: addsd xmm0, qword ptr es:[rip + 0x66348]; ret; 
0x000000000002a179: addsd xmm0, xmm0; add rsp, 0x28; ret; 
0x000000000002d1ab: addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x0000000000029af2: addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a6: addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b8da: addsd xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002d6c6: addsd xmm0, xmm1; mulsd xmm0, qword ptr [rsp - 0x10]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029d4c: addsd xmm0, xmm1; ret; 
0x00000000000332bf: addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000331d0: addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000029af6: addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b6f4: addsd xmm0, xmm2; divsd xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000002de83: addsd xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x0000000000033b25: addsd xmm0, xmm2; movsd qword ptr [rsp + 0x28], xmm0; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x0000000000029a74: addsd xmm0, xmm2; ret; 
0x00000000000331d4: addsd xmm0, xmm4; ret; 
0x0000000000028851: addsd xmm0, xmm6; ret; 
0x000000000002b61d: addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000032d1d: addsd xmm1, xmm0; movapd xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x000000000002eb59: addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000029d44: addsd xmm1, xmm2; mulsd xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000002eb55: addsd xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000033843: addsd xmm2, xmm0; movsd qword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000001a025: addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x00000000000331cc: addsd xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000028849: addsd xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x00000000000331c7: addsd xmm2, xmm9; addsd xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a480: addss xmm0, dword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000002a1ae: addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000030678: addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002a322: addss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000002d62d: addss xmm0, xmm0; ret; 
0x000000000002a7c9: addss xmm0, xmm1; ret; 
0x000000000002a31e: addss xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000032b5a: addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000033c23: addss xmm0, xmm2; movss dword ptr [rsp + 0x2c], xmm0; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000002c8ce: addss xmm0, xmm2; ret; 
0x000000000002a31a: addss xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000032eaf: addss xmm1, xmm0; movaps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000002a7b9: addss xmm2, dword ptr [rip + 0x6816b]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000032b53: addss xmm2, xmm0; movaps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x00000000000338e9: addss xmm2, xmm0; movss dword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x000000000006ba1e: and ah, byte ptr [rcx]; ret 0xd833; 
0x000000000006b995: and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x000000000006b999: and ah, dl; call rdx; 
0x000000000000fbb8: and al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0x34; 
0x000000000004a631: and al, 0; add byte ptr [rax], al; syscall; 
0x0000000000049f71: and al, 0; lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004eaaf: and al, 0; mov byte ptr [rdx], dil; ret; 
0x000000000004db78: and al, 0; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005a523: and al, 0; mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000054b7c: and al, 0; mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x0000000000055984: and al, 0; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000057bd2: and al, 0; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004dbe5: and al, 0; movzx eax, byte ptr [rax]; ret; 
0x00000000000567d4: and al, 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x000000000004df7e: and al, 0; pop rdx; ret; 
0x000000000004df71: and al, 0; push rax; call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x000000000005595d: and al, 0; ret; 
0x0000000000055951: and al, 0; test eax, eax; je 0x55960; dec eax; mov dword ptr [rip + 0x242679], eax; ret; 
0x0000000000056c99: and al, 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf5: and al, 0; test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x000000000001cdc4: and al, 0x10; add rsp, 0x28; ret; 
0x000000000003d899: and al, 0x10; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b814: and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x000000000001b725: and al, 0x10; add rsp, 0x38; ret; 
0x000000000001ba33: and al, 0x10; add rsp, 0x48; ret; 
0x0000000000038f05: and al, 0x10; call rax; 
0x000000000002c1be: and al, 0x10; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002c74a: and al, 0x10; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x00000000000333aa: and al, 0x10; fild dword ptr [rsp + 0x10]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000003251d: and al, 0x10; fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000002bec1: and al, 0x10; fstp xword ptr [rsp]; call 0x29aff; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000001cb46: and al, 0x10; fxch st(1); add rsp, 0x58; ret; 
0x00000000000389e0: and al, 0x10; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000021f0e: and al, 0x10; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005abce: and al, 0x10; mov eax, 3; syscall; 
0x0000000000057e80: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e80: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000004a8ac: and al, 0x10; mov r10d, 8; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000003982f: and al, 0x10; mov r9, qword ptr [rcx]; syscall; 
0x000000000001b71f: and al, 0x10; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001cdb8: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b808: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba27: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001b2df: and al, 0x10; movsxd rsi, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000001b582: and al, 0x10; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c805: and al, 0x10; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x00000000000333ae: and al, 0x10; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x0000000000043158: and al, 0x14; and eax, 0xfffffffe; mov rsi, r14; movsxd rdx, eax; mov rax, r12; syscall; 
0x0000000000043079: and al, 0x14; jne 0x43244; mov eax, 0x66; syscall; 
0x00000000000430f4: and al, 0x14; js 0x43244; mov rax, r9; syscall; 
0x000000000004325f: and al, 0x14; mov r8d, 1; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x000000000005ab97: and al, 0x14; mov r8d, eax; mov eax, 3; syscall; 
0x000000000001cdbe: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b80e: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba2d: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000408dd: and al, 0x18; add rsp, 0x38; ret; 
0x0000000000023ae3: and al, 0x18; call 0x169c0; add rsp, 0x28; ret; 
0x0000000000022919: and al, 0x18; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c10: and al, 0x18; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022ca4: and al, 0x18; call 0x22b0e; add rsp, 0xd8; ret; 
0x000000000002688f: and al, 0x18; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cde: and al, 0x18; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000004a980: and al, 0x18; call 0x4a614; mov eax, dword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000005b58d: and al, 0x18; call 0x4a796; imul eax, dword ptr [rsp + 0x30], 0xf4240; add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x0000000000022e13: and al, 0x18; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004bdf3: and al, 0x18; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea9: and al, 0x18; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce88: and al, 0x18; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d47f: and al, 0x18; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d86c: and al, 0x18; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da21: and al, 0x18; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca8: and al, 0x18; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edbd: and al, 0x18; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee4c: and al, 0x18; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eedb: and al, 0x18; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef65: and al, 0x18; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004eff4: and al, 0x18; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c7: and al, 0x18; call 0x5321e; add rsp, 0xd8; ret; 
0x000000000005335b: and al, 0x18; call 0x53230; add rsp, 0xd8; ret; 
0x00000000000444e5: and al, 0x18; call rax; 
0x000000000001cba6: and al, 0x18; fchs; fld xword ptr [rsp + 8]; ret; 
0x0000000000037125: and al, 0x18; fpatan; ret; 
0x000000000005a41c: and al, 0x18; lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x0000000000052ec6: and al, 0x18; mov byte ptr [r8], 0; mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x00000000000389ea: and al, 0x18; mov eax, 0x10; syscall; 
0x0000000000023985: and al, 0x18; mov eax, 0x65; syscall; 
0x000000000001b2e8: and al, 0x18; mov eax, 0x81; syscall; 
0x000000000005a421: and al, 0x18; mov eax, 0xe; mov rdx, rdi; syscall; 
0x000000000004e666: and al, 0x18; mov rax, rdx; syscall; 
0x00000000000560a0: and al, 0x18; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x90; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x0000000000022656: and al, 0x18; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x42; syscall; 
0x0000000000040fbe: and al, 0x18; pop rdx; pop rcx; add rsp, 0x28; ret; 
0x000000000001ca03: and al, 0x18; ret; 
0x000000000001fc8a: and al, 0x19; int 0xe0; pop rbx; ret; 
0x000000000005b3c3: and al, 0x1c; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004e670: and al, 0x1c; mov rax, rdx; syscall; 
0x000000000001ba21: and al, 0x1c; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000032521: and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000000337d: and al, 0x20; add byte ptr [rax], ah; ret; 
0x000000000002cd04: and al, 0x20; add rsp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x000000000001da5d: and al, 0x20; add rsp, 0x38; ret; 
0x000000000001c9ab: and al, 0x20; add rsp, 0x40; pop rbx; ret; 
0x0000000000041005: and al, 0x20; call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x000000000005a260: and al, 0x20; call rax; 
0x0000000000051841: and al, 0x20; dec dword ptr [rax - 1]; ret; 
0x00000000000389e5: and al, 0x20; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x00000000000238e0: and al, 0x20; mov rdx, qword ptr [rsp + 0x28]; syscall; 
0x000000000001c99f: and al, 0x20; movss dword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da51: and al, 0x20; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000004ac7d: and al, 0x20; movsxd rsi, ebx; mov eax, 0x81; mov rdx, r12; syscall; 
0x00000000000378f4: and al, 0x21; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x000000000001da57: and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c9a5: and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001c690: and al, 0x28; add rsp, 0x40; pop rbx; ret; 
0x00000000000408d3: and al, 0x28; call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x000000000005a25b: and al, 0x28; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000052e27: and al, 0x28; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x0000000000033b2d: and al, 0x28; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c684: and al, 0x28; movss dword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x00000000000238e5: and al, 0x28; syscall; 
0x00000000000238e5: and al, 0x28; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x78; ret; 
0x0000000000033c2b: and al, 0x2c; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c68a: and al, 0x2c; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x00000000000556e1: and al, 0x30; add byte ptr [rdi], cl; test byte ptr [rdi - 0x75000000], al; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000001dfe4: and al, 0x30; add rsp, 0x40; pop rbx; ret; 
0x000000000005a907: and al, 0x30; add rsp, 0x48; ret; 
0x00000000000562e6: and al, 0x30; mov eax, 0x91; syscall; 
0x000000000005a48e: and al, 0x30; mov eax, 0xde; syscall; 
0x0000000000057efb: and al, 0x30; mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x000000000001dfd8: and al, 0x30; movss dword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000005b596: and al, 0x30; sldt word ptr [rbx]; and al, 0x38; add rsp, 0x48; ret; 
0x00000000000562cd: and al, 0x30; test edi, edi; je 0x562f3; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000001dfde: and al, 0x34; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000005b59e: and al, 0x38; add rsp, 0x48; ret; 
0x000000000003681d: and al, 0x38; call 0x29dde; add rsp, 0x30; add rsp, 0x38; ret; 
0x0000000000038ef6: and al, 0x38; mov edx, ebp; mov rsi, qword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000003a372: and al, 0x38; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000027eb4: and al, 0x39; ret; 
0x0000000000055d6a: and al, 0x40; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x0000000000055d65: and al, 0x40; mov qword ptr [rsp + 0x40], rax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000001adcc: and al, 0x40; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000001adc2: and al, 0x40; movsxd rdi, dword ptr [rsp + 0x50]; movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x0000000000043171: and al, 0x41; mov edx, dword ptr [rax + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x000000000002eb0e: and al, 0x48; add esp, 0x10; pop rbx; ret; 
0x000000000001c6cc: and al, 0x48; add esp, 0x18; fxch st(1); ret; 
0x000000000004d559: and al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000022e41: and al, 0x48; add esp, 0x18; ret; 
0x000000000001bda6: and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x0000000000022537: and al, 0x48; add esp, 0x28; ret; 
0x000000000001b659: and al, 0x48; add esp, 0x30; pop rbx; ret; 
0x000000000001baf8: and al, 0x48; add esp, 0x38; ret; 
0x0000000000036d0c: and al, 0x48; add esp, 0x48; fmulp st(1); ret; 
0x00000000000239a7: and al, 0x48; add esp, 0x50; pop rbx; ret; 
0x0000000000052f9b: and al, 0x48; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000004a5d8: and al, 0x48; mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x000000000001b2e4: and al, 0x48; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x0000000000023b50: and al, 0x48; mov dword ptr [rsp + 8], eax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000003a3f6: and al, 0x48; mov edi, dword ptr [rsp + 8]; syscall; 
0x000000000005568c: and al, 0x48; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004b44c: and al, 0x48; mov qword ptr [rbx + 0x50], rax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000005c7c2: and al, 0x49; add eax, dword ptr [rax]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000008d0c4: and al, 0x49; ret 0x653f; 
0x00000000000920d4: and al, 0x49; ret 0xd3f; 
0x000000000001bfa1: and al, 0x4c; add rsp, 0x78; fxch st(1); ret; 
0x000000000001bf9d: and al, 0x4c; fld dword ptr [rsp + 0x4c]; add rsp, 0x78; fxch st(1); ret; 
0x000000000003a27f: and al, 0x4c; movsxd rdx, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x000000000001ce1c: and al, 0x50; fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x000000000001adc7: and al, 0x50; movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000001add1: and al, 0x58; mov eax, 0x81; syscall; 
0x00000000000224fd: and al, 0x58; shr eax, 3; and eax, 0xc00; ret; 
0x00000000000224f6: and al, 0x59; ret; 
0x000000000003af53: and al, 0x5b; pop rbp; pop r12; ret; 
0x0000000000022544: and al, 0x5e; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000005320f: and al, 0x60; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000001ce20: and al, 0x60; fxch st(1); add rsp, 0x48; ret; 
0x000000000001bc75: and al, 0x66; movaps xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x00000000000560ae: and al, 0x68; add rdx, 0x24; syscall; 
0x000000000005b5e9: and al, 0x69; ret 0x3e8; 
0x000000000003a6ca: and al, 0x70; mov eax, 0xf4; syscall; 
0x000000000003a6c5: and al, 0x70; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x000000000000554a: and al, 0x73; push 0x4e; ret 0xf3ba; 
0x000000000005e570: and al, 0x78; mov rsp, rbx; jmp rax; 
0x000000000003a6bd: and al, 0x78; movsxd rdi, r12d; lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x000000000004ab9f: and al, 0x79; add al, 0x48; or edx, 0xffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x0000000000056cb3: and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000001d06f: and al, 0x83; iretd; jmp qword ptr [rsi + 0xf]; 
0x000000000001c558: and al, 0x89; ret; 
0x000000000005a285: and al, 0x8b; mov eax, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000004cfe: and al, 0x8f; shl dword ptr [rax - 0x6c], 0x7f; fldenv [rsi + 0x7d49ae9]; out 0xbd, eax; insb byte ptr [rdi], dx; ret 0x1bb7; 
0x000000000002e0e1: and al, 0x90; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xeed9; 
0x0000000000034c42: and al, 0xa0; add byte ptr [rax], al; add dh, bl; ret; 
0x000000000003cdd5: and al, 0xa8; add dword ptr [rax], eax; add byte ptr [rax - 1], cl; ret 0x3fe8; 
0x00000000000427ab: and al, 0xa; call 0x42756; add rsp, 0x18; ret; 
0x000000000004794c: and al, 0xb4; add byte ptr [rax], al; add byte ptr [rbx + 0x39742444], cl; ret 0x9489; 
0x00000000000507e4: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000005547: and al, 0xc3; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x00000000000392a5: and al, 0xc; add byte ptr [rax], al; add byte ptr [rax], al; call 0x389c1; add rsp, 0x18; ret; 
0x000000000004d0e4: and al, 0xc; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021384: and al, 0xc; add rsp, 0x10; pop rbx; ret; 
0x000000000002896d: and al, 0xc; add rsp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000004c62c: and al, 0xc; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000053d24: and al, 0xc; add rsp, 0x18; ret; 
0x000000000002c750: and al, 0xc; add rsp, 0x20; pop rbx; ret; 
0x000000000003cab0: and al, 0xc; add rsp, 0x228; pop rbx; pop rbp; ret; 
0x000000000002137b: and al, 0xc; call 0x14680; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000003373e: and al, 0xc; call 0x2248e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000034f34: and al, 0xc; call 0x34f53; add rsp, 0x18; ret; 
0x0000000000034f47: and al, 0xc; call 0x35149; add rsp, 0x18; ret; 
0x000000000003a9eb: and al, 0xc; mov dword ptr [rbx], edx; add rsp, 0x10; pop rbx; ret; 
0x00000000000392d7: and al, 0xc; mov eax, 0x10; syscall; 
0x0000000000057316: and al, 0xc; mov eax, 0x8e; syscall; 
0x000000000005a35d: and al, 0xc; mov eax, 0xde; syscall; 
0x000000000005a487: and al, 0xc; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000003d8bb: and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005abba: and al, 0xc; mov edx, 4; xor eax, eax; syscall; 
0x000000000005b460: and al, 0xc; mov esi, 0x5410; call 0x389c1; add rsp, 0x18; ret; 
0x00000000000389ae: and al, 0xc; mov rsi, rbx; call 0x23ab9; add rsp, 0x90; pop rbx; ret; 
0x000000000002ea94: and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d1e: and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000039b32: and al, 0xc; xor esi, esi; call 0x57116; add rsp, 0x18; ret; 
0x000000000003fada: and al, 0xd0; add byte ptr [rax], al; add byte ptr [rcx - 0x17207616], cl; ret 0xffb9; 
0x000000000001cb9b: and al, 0xd8; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000001cba1: and al, 0xd8; ret; 
0x0000000000037281: and al, 0xd9; ret 0xc9d8; 
0x0000000000029f09: and al, 0xd9; ret; 
0x000000000001c6c9: and al, 0xdd; add al, 0x24; add rsp, 0x18; fxch st(1); ret; 
0x00000000000371fa: and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000002ba0c: and al, 0xe0; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000019c4a: and al, 0xe0; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x0000000000019c50: and al, 0xe0; ret; 
0x000000000002f046: and al, 0xe4; ret; 
0x000000000008c8eb: and al, 0xe4; stc; ret 0xbf; 
0x0000000000036368: and al, 0xe8; and eax, 0xe0d9ffff; add rsp, 0x20; add rsp, 0x38; ret; 
0x00000000000337c4: and al, 0xe8; and rdx, rcx; cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x000000000002b4ba: and al, 0xe8; cwde; ret; 
0x000000000003a6e3: and al, 0xe8; fld xword ptr [rdx + 0x63480001]; sti; mov eax, 3; syscall; 
0x0000000000035513: and al, 0xe8; fldz; fmulp st(1); ret; 
0x000000000002b865: and al, 0xe8; fmulp st(1); ret; 
0x000000000005b3e7: and al, 0xe8; jmp rax; 
0x00000000000299f6: and al, 0xe8; mov eax, dword ptr [rsp - 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000019c45: and al, 0xe8; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x00000000000358c0: and al, 0xe8; mov word ptr [rsp - 0x10], di; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000003a3e8: and al, 0xe8; movabs dword ptr [0xbb80001d9], eax; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x00000000000370a1: and al, 0xe8; movsd xmm0, qword ptr [rsp - 0x18]; ret; 
0x0000000000019c3a: and al, 0xe8; movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000001df2b: and al, 0xe8; ret 0x184; 
0x00000000000370a7: and al, 0xe8; ret; 
0x000000000001c56d: and al, 0xe9; ret 0; 
0x00000000000427a6: and al, 0xe; lea rdi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x0000000000030c8f: and al, 0xeb; add ecx, dword ptr [rdi]; push rdi; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000019c40: and al, 0xec; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x00000000000370e6: and al, 0xec; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000370f2: and al, 0xec; ret; 
0x000000000002ba01: and al, 0xf0; and ax, 0x8000; or eax, edx; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x000000000002d6ce: and al, 0xf0; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000358c5: and al, 0xf0; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000050e73: and al, 0xf0; lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000056cda: and al, 0xf0; lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x000000000002e4c9: and al, 0xf0; maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000050e7c: and al, 0xf0; mov rax, qword ptr [rax]; ret; 
0x0000000000037847: and al, 0xf0; mov rax, qword ptr [rsp - 0x10]; ret; 
0x0000000000059078: and al, 0xf0; movsxd rdi, edx; syscall; 
0x000000000002e4d8: and al, 0xf0; ret; 
0x00000000000299fa: and al, 0xf0; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000001c6c4: and al, 0xf2; movups xmmword ptr [rsp], xmm1; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x000000000001da58: and al, 0xf3; movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x000000000001c9a6: and al, 0xf3; movd dword ptr [rsp + 0x20], mm0; add rsp, 0x40; pop rbx; ret; 
0x000000000001bda1: and al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001b654: and al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001baf3: and al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x38; ret; 
0x0000000000028a5f: and al, 0xf8; divsd xmm0, xmm1; ret; 
0x00000000000224b1: and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000002e525: and al, 0xf8; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002de96: and al, 0xf8; movapd xmm0, xmm1; ret; 
0x000000000002dea1: and al, 0xf8; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x000000000002b8ed: and al, 0xf8; movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8fc: and al, 0xf8; movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x000000000002b9bd: and al, 0xf8; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002e881: and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000028aeb: and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000033584: and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000001c9f8: and al, 0xf8; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001ce2e: and al, 0xf8; movss xmm0, dword ptr [rsp - 8]; ret; 
0x00000000000357c5: and al, 0xf8; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000034fa8: and al, 0xf8; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000028af1: and al, 0xf8; mulsd xmm0, xmm1; ret; 
0x00000000000224c1: and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000001ce34: and al, 0xf8; ret; 
0x000000000003358a: and al, 0xf8; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x00000000000224b6: and al, 0xf8; xor eax, eax; ret; 
0x0000000000056cdf: and al, 0xf8; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000028a56: and al, 0xf8; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x00000000000929d5: and al, 0xf9; jmp qword ptr [rdi]; 
0x00000000000929cd: and al, 0xf9; push qword ptr [rdi + 0x24]; stc; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x00000000000929d1: and al, 0xf9; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x000000000004b9e8: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000005b1c0: and al, 0xf; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000004bd56: and al, 0xf; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d3: and al, 0xf; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005b200: and al, 0xf; mov r10d, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000031864: and al, 0xf; push rdi; ret 0x40e9; 
0x00000000000185e2: and al, 0xf; test byte ptr [rdi], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000028a87: and al, 0xfc; divss xmm0, xmm1; ret; 
0x000000000005aa9f: and al, 0xfc; mov eax, 1; syscall; 
0x000000000005aa9f: and al, 0xfc; mov eax, 1; syscall; xor eax, eax; ret; 
0x000000000002e9b8: and al, 0xfc; movaps xmm0, xmm1; ret; 
0x00000000000370ec: and al, 0xfc; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002b9dd: and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9b2: and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x0000000000028b0e: and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000335f0: and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000005aa96: and al, 0xfc; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x0000000000035838: and al, 0xfc; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000003518c: and al, 0xfc; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000028b14: and al, 0xfc; mulss xmm0, xmm1; ret; 
0x000000000001c9fe: and al, 0xfc; ret; 
0x00000000000335f6: and al, 0xfc; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000056c7e: and al, 0xfc; xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x0000000000028a7e: and al, 0xfc; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000005a9e8: and al, 1; add byte ptr [rax], al; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x00000000000224ec: and al, 1; lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x00000000000224f1: and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000001e1fd: and al, 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x000000000004a403: and al, 1; xor esi, esi; push rcx; call rax; 
0x0000000000038a7d: and al, 2; add byte ptr [rcx], bh; ret; 
0x000000000004af2c: and al, 4; add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000003067c: and al, 4; add rsp, 0x18; ret; 
0x000000000002a318: and al, 4; addss xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000041bd6: and al, 8; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000002ea34: and al, 8; add rsp, 0x10; pop rbx; ret; 
0x0000000000028937: and al, 8; add rsp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x00000000000219fb: and al, 8; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x000000000004d5f9: and al, 8; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004090e: and al, 8; add rsp, 0x18; ret; 
0x000000000001ca53: and al, 8; add rsp, 0x28; ret; 
0x000000000001b588: and al, 8; add rsp, 0x30; pop rbx; ret; 
0x000000000001caf5: and al, 8; add rsp, 0x38; ret; 
0x000000000004a78a: and al, 8; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x0000000000021f3c: and al, 8; and byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x00000000000364d0: and al, 8; and eax, 1; mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x00000000000336fc: and al, 8; call 0x2248e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000003af67: and al, 8; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b377: and al, 8; call 0x3b23f; add rsp, 0x18; ret; 
0x0000000000049f76: and al, 8; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000023b54: and al, 8; call 0x591ab; add rsp, 0x18; ret; 
0x000000000005b5f3: and al, 8; call 0x594ec; add rsp, 0x18; ret; 
0x0000000000037865: and al, 8; cmp eax, 0x3ffd9400; ja 0x37871; fyl2xp1; ret; 
0x0000000000037811: and al, 8; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x00000000000372e9: and al, 8; fabs; ret; 
0x0000000000037843: and al, 8; fistp qword ptr [rsp - 0x10]; mov rax, qword ptr [rsp - 0x10]; ret; 
0x0000000000037121: and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000002eb0a: and al, 8; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003712c: and al, 8; fld1; fpatan; ret; 
0x0000000000028b29: and al, 8; fmulp st(1); fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b21; ret; 
0x0000000000037303: and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x00000000000378fe: and al, 8; frndint; ret; 
0x000000000003790f: and al, 8; fsqrt; ret; 
0x00000000000299f2: and al, 8; fstp xword ptr [rsp - 0x18]; mov eax, dword ptr [rsp - 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000037853: and al, 8; fyl2x; ret; 
0x0000000000020bb3: and al, 8; jne 0x20b83; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x000000000003af62: and al, 8; lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b372: and al, 8; lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x0000000000057d19: and al, 8; mov dword ptr [rbx], eax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005af29: and al, 8; mov eax, 0x10; syscall; 
0x0000000000021f45: and al, 8; mov eax, 0xe; syscall; 
0x000000000005abe0: and al, 8; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000004b700: and al, 8; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000005ac89: and al, 8; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000003780c: and al, 8; mov qword ptr [rsp + 8], rax; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000004a825: and al, 8; mov qword ptr [rsp + 8], rax; xor edx, edx; mov eax, 0xe; syscall; 
0x0000000000057e7b: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e7b: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000057e3a: and al, 8; mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000264b2: and al, 8; mov rax, rdx; add rsp, 0x28; ret; 
0x000000000004cced: and al, 8; mov rdi, qword ptr [rcx]; call rax; 
0x0000000000038efd: and al, 8; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000001cd3a: and al, 8; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001c80b: and al, 8; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000001ca44: and al, 8; movapd xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001cd2e: and al, 8; movq qword ptr [rsp + 8], xmm1; movsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001caef: and al, 8; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000002ea2e: and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d3b: and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000042437: and al, 8; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000001cd34: and al, 8; movsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d19f: and al, 8; movsd xmm1, qword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002d1a5: and al, 8; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000001cbac: and al, 8; ret; 
0x0000000000023172: and al, 8; shr rax, 9; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000004243d: and al, 8; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000003a3fa: and al, 8; syscall; 
0x000000000003a3fa: and al, 8; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000057e85: and al, 8; syscall; ret; 
0x000000000004a82a: and al, 8; xor edx, edx; mov eax, 0xe; syscall; 
0x0000000000037309: and al, 9; fldcw word ptr [rsp + 8]; ret; 
0x0000000000057bca: and al, byte ptr [rax]; add byte ptr [rax], al; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000007014: and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x000000000000b124: and al, byte ptr [rax]; or dword ptr [rax], eax; push rdx; ret; 
0x000000000000a80c: and al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x000000000008beb3: and al, byte ptr [rbp + 0x66]; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x000000000006b98f: and al, byte ptr [rbx + 0x29222a22]; and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x00000000000233ed: and al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000002259a: and al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x000000000006b98d: and al, byte ptr [rdx + 0x2a228322]; and ch, byte ptr [rcx]; and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x000000000002b714: and ax, 0x7fff; cmp ax, 0x7fff; movzx ecx, ax; jne 0x2b724; fadd st(0); ret; 
0x000000000002ba03: and ax, 0x8000; or eax, edx; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000083169: and bh, 0x80; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x000000000003b3a7: and bh, bh; inc dword ptr [rax + 0xf]; mov dh, 0xff; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x00000000000352a2: and bh, bh; ret 0x3941; 
0x0000000000028200: and bh, bh; ret 0xc166; 
0x000000000008beb0: and bh, byte ptr [rdi + 0x664522b3]; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x0000000000090e12: and bl, bh; ret; 
0x0000000000078b04: and bl, byte ptr [rdx - 0x65d865e0]; and ebx, dword ptr [rdx - 0x65e365e2]; adc al, 0x9a; ret 0xb9a; 
0x000000000001c9a0: and bl, dh; movups xmmword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da52: and bl, dh; movups xmmword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001fc82: and byte ptr [r11 - 0x38e07c27], r13b; and al, 0x19; int 0xe0; pop rbx; ret; 
0x00000000000488fd: and byte ptr [r8 - 0x75], r9b; je 0x48927; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000048e89: and byte ptr [r8 - 0x75], r9b; je 0x48eb3; and byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004e2dc: and byte ptr [r8 - 0x77], cl; ret 0x8948; 
0x0000000000056b6b: and byte ptr [r8 - 0x7f], r9b; ret 0x88; 
0x0000000000042d9f: and byte ptr [rax + 0x142], bh; mov rdx, rbp; syscall; 
0x0000000000021cf4: and byte ptr [rax + 0x27], 0; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000041000: and byte ptr [rax + 0x4c], dl; lea eax, [rsp + 0x20]; call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x000000000004ac7e: and byte ptr [rax + 0x63], cl; mov eax, 0x81; mov rdx, r12; syscall; 
0x00000000000562d2: and byte ptr [rax + 0x8f], bh; mov rsi, r14; syscall; 
0x00000000000206a1: and byte ptr [rax + 0xc393], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000001dbc7: and byte ptr [rax + 9], cl; ret 0xb848; 
0x000000000001bae7: and byte ptr [rax + 9], cl; ret 0xd289; 
0x000000000001b648: and byte ptr [rax + 9], cl; ret; 
0x000000000001cb8f: and byte ptr [rax + 9], cl; retf 0xd089; or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000005113f: and byte ptr [rax + rax], al; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x000000000001f778: and byte ptr [rax - 0x75], cl; je 0x1f7a1; sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x00000000000488fe: and byte ptr [rax - 0x75], cl; je 0x48927; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000048e8a: and byte ptr [rax - 0x75], cl; je 0x48eb3; and byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x00000000000418b3: and byte ptr [rax - 0x75], cl; jl 0x418dc; adc al, ch; ret 0xfd2d; 
0x00000000000238e1: and byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; syscall; 
0x000000000001fde9: and byte ptr [rax - 0x76b79cad], cl; ret 0xc148; 
0x000000000001f64e: and byte ptr [rax - 0x76b7abad], cl; ret 0xc148; 
0x00000000000389e6: and byte ptr [rax - 0x77], cl; and al, 0x18; mov eax, 0x10; syscall; 
0x0000000000053577: and byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000003284c: and byte ptr [rax - 0x77], cl; ret 0x4866; 
0x000000000004e2dd: and byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000030c35: and byte ptr [rax - 0x77], cl; ret 0xc031; 
0x0000000000048e8f: and byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000056b6c: and byte ptr [rax - 0x7f], cl; ret 0x88; 
0x0000000000028227: and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000003b3a6: and byte ptr [rax], 0xff; inc dword ptr [rax + 0xf]; mov dh, 0xff; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x0000000000027836: and byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x26e638; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000002e53: and byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + rax], bl; sbb al, 0x7d; ret 0x432; 
0x0000000000021f3e: and byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x000000000003a36b: and byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x000000000005a526: and byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000430ea: and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000436af: and byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000054999: and byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310a74c0], cl; rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x000000000004bf1a: and byte ptr [rax], al; je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004bed1: and byte ptr [rax], al; setne al; ret; 
0x0000000000054f0f: and byte ptr [rbp + 0x31], al; ror byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r9; mov rdx, rbx; syscall; 
0x00000000000591a1: and byte ptr [rbp + 0x595affff], dh; pop rsi; neg eax; ret; 
0x00000000000920c9: and byte ptr [rbp + rax*8 - 0x33], cl; mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x00000000000275bd: and byte ptr [rbp - 0x14], dh; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x000000000001fe41: and byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x000000000003043a: and byte ptr [rbx + 0x5d], bl; pop r12; divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002fe93: and byte ptr [rbx + 0x5d], bl; pop r12; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002288a: and byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000030fa8: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000021976: and byte ptr [rbx + rcx + 0x4c], dh; mov eax, ecx; syscall; 
0x000000000001fc83: and byte ptr [rbx - 0x38e07c27], ch; and al, 0x19; int 0xe0; pop rbx; ret; 
0x000000000002b457: and byte ptr [rbx - 0x76d7dbbc], cl; ret 0xc166; 
0x000000000004a5ec: and byte ptr [rbx - 0xcefffc], al; mov eax, 0xe; syscall; 
0x000000000004a5ec: and byte ptr [rbx - 0xcefffc], al; mov eax, 0xe; syscall; ret; 
0x000000000006b92f: and byte ptr [rbx], al; and dword ptr [rbx], ebp; and eax, esp; jmp rcx; 
0x000000000007c3c9: and byte ptr [rbx], al; and dword ptr [rdi + rdi*8], eax; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000084eb9: and byte ptr [rbx], al; and ebp, esp; inc dword ptr [rdi + rdi*8]; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000008a965: and byte ptr [rbx], bh; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000006b92d: and byte ptr [rbx], dh; and byte ptr [rbx], al; and dword ptr [rbx], ebp; and eax, esp; jmp rcx; 
0x000000000007c3c7: and byte ptr [rbx], dh; and byte ptr [rbx], al; and dword ptr [rdi + rdi*8], eax; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000042dee: and byte ptr [rcx + 0x415d5bd0], cl; pop rsp; ret; 
0x0000000000037443: and byte ptr [rcx + 1], cl; ret; 
0x000000000004bd0f: and byte ptr [rcx - 0x377cf9], cl; ret; 
0x0000000000047fc7: and byte ptr [rcx - 0x75], al; adc dword ptr [rbp - 0x6077f02e], eax; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x0000000000037f77: and byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000002e11: and byte ptr [rcx], al; add byte ptr [rdx], cl; and byte ptr [rcx], cl; ret; 
0x000000000002e584: and byte ptr [rcx], bh; ret; 
0x0000000000002e15: and byte ptr [rcx], cl; ret; 
0x0000000000056e02: and byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000020d93: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000020d15: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x0000000000021083: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x00000000000942a4: and byte ptr [rdi - 8], bl; jmp qword ptr [rax]; 
0x0000000000015617: and byte ptr [rdi], cl; xchg eax, esp; ret 0xca08; 
0x0000000000020d32: and byte ptr [rdi], cl; xchg eax, esp; ret 0xff83; 
0x0000000000020dcd: and byte ptr [rdi], cl; xchg eax, esp; ror byte ptr [rcx], 0xd0; movzx eax, al; ret; 
0x000000000001d87a: and byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; ret; 
0x0000000000022007: and byte ptr [rsi], 3; add byte ptr [rcx + 0x5d5b5ad8], cl; ret; 
0x00000000000224ea: and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000006b997: and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x000000000006b993: and ch, byte ptr [rcx]; and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x00000000000280da: and ch, byte ptr [rcx]; ret 0x5389; 
0x000000000006b991: and ch, byte ptr [rdx]; and ch, byte ptr [rcx]; and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x000000000003b975: and cl, byte ptr [rax + 0x29]; cli; lea eax, [rdx + 2]; ret; 
0x000000000005464e: and cl, byte ptr [rcx + 0x63]; rol byte ptr [rbp + 0x31], 1; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000075fb1: and dh, 0x80; int 0x80; 
0x0000000000036d07: and dh, bl; leave; fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x000000000002cd09: and dh, bl; stc; add rsp, 0x60; pop rbx; ret; 
0x000000000006b929: and dh, byte ptr [rax + 0x33203200]; and byte ptr [rbx], al; and dword ptr [rbx], ebp; and eax, esp; jmp rcx; 
0x000000000002de88: and dh, dl; subps xmm0, xmmword ptr [rip + 0x63d9f]; ret; 
0x000000000008beaf: and dil, byte ptr [rdi + 0x664522b3]; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x0000000000072452: and dl, ah; ret; 
0x000000000005a254: and dword ptr [rax - 0x74b70001], esi; jl 0x5a280; sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000001952b: and dword ptr [rax - 0x7d], ecx; ret 0xe901; 
0x0000000000037fee: and dword ptr [rax - 0x7f], ecx; ret; 
0x00000000000550e0: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x00000000000550e0: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x000000000005a99e: and dword ptr [rax], eax; add byte ptr [rax], al; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x00000000000033db: and dword ptr [rax], esi; or byte ptr [rax - 0x60], cl; ret 0xf140; 
0x000000000006253b: and dword ptr [rbp + 0x38e9b5db], 0x5bf348b5; ret 0x3956; 
0x0000000000087854: and dword ptr [rbp - 0x76], 0xffffff8b; wait; lahf; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x000000000002269b: and dword ptr [rbx - 1], eax; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x000000000006b931: and dword ptr [rbx], ebp; and eax, esp; jmp rcx; 
0x0000000000092a94: and dword ptr [rcx + rdi*8], ebp; jmp qword ptr [rcx]; 
0x000000000007f1ba: and dword ptr [rcx - 0x6e], edx; push rdi; ret 0x8b64; 
0x0000000000058435: and dword ptr [rcx - 0x7ab7fffd], edi; ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x0000000000023b6d: and dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000020d71: and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x0000000000054497: and dword ptr [rdi + 0xc], 0xffff7fb4; mov byte ptr [rdi + 0x16], 0; and eax, 0xfffffecf; or eax, 0x30; mov dword ptr [rdi + 8], eax; ret; 
0x0000000000056693: and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000007c3cb: and dword ptr [rdi + rdi*8], eax; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000056c60: and dword ptr [rdi], 0xfffffff7; xor eax, eax; ret; 
0x0000000000056d00: and dword ptr [rdi], 0xfffffffb; xor eax, eax; ret; 
0x000000000004aa41: and dword ptr [rdi], eax; xor eax, eax; pop rdx; ret; 
0x0000000000022283: and dword ptr [rdx + 1], edi; mov esi, 2; mov rax, r9; syscall; 
0x000000000006b990: and dword ptr [rdx], 0x2a; and ch, byte ptr [rcx]; and ah, byte ptr [rdi]; and ch, byte ptr [rax]; and ah, dl; call rdx; 
0x000000000005739c: and dword ptr [rdx], ecx; ret; 
0x0000000000005540: and dword ptr [rip - 0x51ec50f5], 0x2e; and al, 0xc3; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x000000000007fb5b: and dword ptr [rsi - 0x537c587d], 0xffffff83; lodsd eax, dword ptr [rsi]; sub dword ptr [rsi - 0x4a7c507d], -0x7d; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x00000000000224af: and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000087853: and dword ptr gs:[rbp - 0x76], 0xffffff8b; wait; lahf; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x0000000000021e69: and eax, 0; add rax, 0x34; ret; 
0x000000000003d4ca: and eax, 0; cmp qword ptr [rax + 0x58], 0; je 0x3d4dd; add rax, 0xa0; ret; 
0x00000000000427f1: and eax, 0; mov eax, 0xba; syscall; 
0x0000000000023509: and eax, 0; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021aa1: and eax, 0; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c99: and eax, 0; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004d672: and eax, 0; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000005631b: and eax, 0; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000021f21: and eax, 0; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004a75f: and eax, 0; movsxd rsi, ebx; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000022995: and eax, 0; pop rdx; ret; 
0x000000000005701f: and eax, 0; ret; 
0x000000000005447b: and eax, 0x100f; ret; 
0x0000000000056aac: and eax, 0x10; ret; 
0x000000000000cd41: and eax, 0x120000; or dword ptr [rax], eax; ret; 
0x00000000000087e1: and eax, 0x120000; or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x00000000000427d8: and eax, 0x1dfee800; add dword ptr [rax], eax; mov eax, 0x39; syscall; 
0x000000000004274a: and eax, 0x1f3ae800; add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x0000000000039309: and eax, 0x22; add rsp, 0x10; pop rbx; ret; 
0x00000000000929e9: and eax, 0x251afff9; stc; jmp rdi; 
0x0000000000092a01: and eax, 0x26a4fff9; stc; jmp rdi; 
0x0000000000040ff5: and eax, 0x31fe8900; call qword ptr [rax + 0x48]; 
0x0000000000026feb: and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x000000000001e9eb: and eax, 0x3f; ret; 
0x000000000004af97: and eax, 0x48fffcba; add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000023d97: and eax, 0x48ffff2c; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x0000000000023c97: and eax, 0x5affff2d; ret; 
0x0000000000023597: and eax, 0x5affff34; ret; 
0x000000000004be23: and eax, 0x5bfffffb; ret; 
0x00000000000210d5: and eax, 0x5f; cmp edx, 0x19; cmova eax, edi; ret; 
0x00000000000296a2: and eax, 0x687c9; ja 0x296ae; movsd qword ptr [rdi], xmm4; ret; 
0x0000000000041989: and eax, 0x6ae800; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004bc57: and eax, 0x787f6348; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000210b8: and eax, 0x7f; ret; 
0x000000000002de02: and eax, 0x7fffffff; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x0000000000035632: and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x35643; mulss xmm0, xmm1; ret; 
0x0000000000054b11: and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000558d9: and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000001ae55: and eax, 0x7fffffff; ret; 
0x00000000000335c3: and eax, 0x80000000; mov dword ptr [rdi], eax; ret; 
0x0000000000055070: and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x00000000000335da: and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002b9d4: and eax, 0x80000000; or eax, edx; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000558b8: and eax, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000057417: and eax, 0x80; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000041b8a: and eax, 0x89480000; ret; 
0x0000000000005541: and eax, 0xae13af0b; and al, 0xc3; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x0000000000075228: and eax, 0xb49daf9c; popfq; ret 0xb89d; 
0x000000000005717d: and eax, 0xb; ret; 
0x000000000003d168: and eax, 0xba00; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x0000000000022502: and eax, 0xc00; ret; 
0x0000000000022136: and eax, 0xc0310003; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000424c7: and eax, 0xc0ff4800; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x00000000000051c8: and eax, 0xc70d8275; ret; 
0x000000000001acd2: and eax, 0xcab841; add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005571f: and eax, 0xcab841; add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000002ba04: and eax, 0xd0098000; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x00000000000322c7: and eax, 0xde0005f4; ret 0x25d8; 
0x000000000002ca97: and eax, 0xde000643; ret 0xf1de; 
0x000000000003a846: and eax, 0xdfff; ret; 
0x000000000003636b: and eax, 0xe0d9ffff; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002a757: and eax, 0xf2000679; cvtps2pd xmm0, xmm0; ret; 
0x000000000003e0e9: and eax, 0xf; ret; 
0x0000000000050fc3: and eax, 0xff483775; ret; 
0x00000000000544ca: and eax, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000026fd3: and eax, 0xfffff000; sub rax, 0x10; ret; 
0x00000000000544a2: and eax, 0xfffffecf; or eax, 0x30; mov dword ptr [rdi + 8], eax; ret; 
0x000000000003da10: and eax, 0xffffff; ret; 
0x000000000003e13d: and eax, 0xffffffc0; cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000004f5e6: and eax, 0xfffffff0; lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000005b81b: and eax, 0xfffffff; ret; 
0x0000000000056d12: and eax, 0xfffffffc; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000020cd8: and eax, 0xfffffffd; add rax, 4; ret; 
0x000000000004315a: and eax, 0xfffffffe; mov rsi, r14; movsxd rdx, eax; mov rax, r12; syscall; 
0x0000000000057d48: and eax, 0xfffffffe; pop rdx; ret; 
0x00000000000212f9: and eax, 1; cmp eax, 1; sbb eax, eax; add eax, 2; ret; 
0x0000000000054b2a: and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000364d2: and eax, 1; mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x00000000000363df: and eax, 1; movsd xmm0, qword ptr [rsp]; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x0000000000020e41: and eax, 1; ret; 
0x0000000000054b4e: and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000028a3a: and eax, 4; ret; 
0x0000000000050dea: and eax, dword ptr [rax + rax]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000005da27: and eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x000000000004acfa: and eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000058e2d: and eax, dword ptr [rax]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x000000000005be3f: and eax, dword ptr [rax]; cmp rdi, rax; je 0x5be51; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000056c94: and eax, dword ptr [rax]; lock or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf0: and eax, dword ptr [rax]; lock or dword ptr [rsp], 0; test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x000000000005c590: and eax, dword ptr [rax]; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005c589: and eax, dword ptr [rax]; mov qword ptr [rip + 0x23b9a6], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x00000000000590f2: and eax, dword ptr [rax]; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000005db59: and eax, dword ptr [rax]; mov rsi, rbx; mov rdi, r12; call rax; 
0x000000000005dbe6: and eax, dword ptr [rax]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x000000000005ba98: and eax, dword ptr [rax]; ret; 
0x0000000000023a8e: and eax, dword ptr [rbx + 0x7500107b]; sbb eax, 0x44e8ff31; imul eax, dword ptr [rdx], 0; mov eax, 0x27; syscall; 
0x00000000000560d6: and eax, dword ptr [rcx - 0x47]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x00000000000546a0: and eax, dword ptr [rcx - 0x48]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000002334a: and eax, dword ptr [rcx]; add byte ptr [rax], al; push rcx; mov rdx, rdi; syscall; 
0x000000000004aa0d: and eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000002254a: and eax, edi; ret; 
0x00000000000370e2: and eax, edx; mov dword ptr [rsp - 0x14], eax; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000335ec: and eax, edx; mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000033546: and eax, edx; mov qword ptr [rdi], rax; ret; 
0x000000000005ba91: and eax, edx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000003356d: and eax, edx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003357f: and eax, edx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000002dde8: and eax, edx; movabs rdx, 0x7fefffffffffffff; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000002b9b5: and eax, edx; or rax, rcx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002604a: and eax, edx; ret; 
0x0000000000035588: and eax, esi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000006b933: and eax, esp; jmp rcx; 
0x000000000005faf8: and ebp, 0xdadc3ae5; ret 0x3437; 
0x0000000000084ebb: and ebp, esp; inc dword ptr [rdi + rdi*8]; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000078b0a: and ebx, dword ptr [rdx - 0x65e365e2]; adc al, 0x9a; ret 0xb9a; 
0x000000000003387d: and ecx, 0x7fffffff; cmp ecx, 0x7f800000; jbe 0x33890; addss xmm0, xmm2; ret; 
0x0000000000020e3c: and ecx, 7; sar eax, cl; and eax, 1; ret; 
0x000000000004b6f9: and ecx, dword ptr [rax + 0x63]; std; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000018706: and ecx, dword ptr [rax - 0x7d]; ret 0xe901; 
0x00000000000537b6: and ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000005a575: and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005a54f: and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x000000000005a59f: and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000005a291: and edi, 0x7fffffff; syscall; 
0x000000000005a291: and edi, 0x7fffffff; syscall; xor eax, eax; add rsp, 0x1b8; ret; 
0x0000000000020fdd: and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x0000000000020d29: and edi, 0xffffff80; sete al; ret; 
0x0000000000033c7c: and edi, 1; mov eax, edi; neg eax; add eax, 2; ret; 
0x00000000000929dd: and edi, ecx; jmp rdi; 
0x00000000000350f8: and edi, edi; ret 0x3941; 
0x0000000000034335: and edi, edx; cmp edi, 1; sbb eax, eax; not eax; add eax, 2; ret; 
0x0000000000057ef2: and edi, esi; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000026b13: and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x000000000002b9ce: and edx, 0x7fffffff; and eax, 0x80000000; or eax, edx; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000022752: and edx, 0xfffffffd; mov byte ptr [rcx + 0x42], dl; lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000021250: and edx, 2; mov rax, rdx; pop rbx; ret; 
0x0000000000054148: and edx, 7; je 0x54152; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x5414d; ret; 
0x0000000000062209: and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x00000000000337c7: and edx, ecx; cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000055b0c: and esi, 0x80; cmovne esi, r10d; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000056a22: and esi, 0x80; or esi, 7; movsxd rsi, esi; syscall; 
0x000000000003a2e1: and esi, 0xfffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x0000000000057e40: and esi, 0xfffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000054939: and esi, 1; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000001e408: and esi, ecx; xor dword ptr [rdx], esi; pop r12; pop r13; pop r14; ret; 
0x000000000002c9b5: and esp, dword ptr [rdx + 6]; add bl, dh; subps xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x00000000000921e0: and esp, ebx; out dx, al; sbb byte ptr [rsi + 0x3e], ah; mov ebx, 0x3f; cmp dl, 0xd4; ret; 
0x000000000004aa40: and qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x000000000005739b: and qword ptr [rdx], rcx; ret; 
0x00000000000281ff: and r15b, r15b; ret 0xc166; 
0x0000000000041988: and rax, 0x6ae800; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000026fd2: and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000004f5e5: and rax, 0xfffffffffffffff0; lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x0000000000020cd7: and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000004aa0c: and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000033545: and rax, rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005ba90: and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000003356c: and rax, rdx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003357e: and rax, rdx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000002dde7: and rax, rdx; movabs rdx, 0x7fefffffffffffff; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000002b9b4: and rax, rdx; or rax, rcx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000004240f: and rax, rdx; ret; 
0x0000000000035587: and rax, rsi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x00000000000337c6: and rdx, rcx; cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x000000000003a2e0: and rsi, 0xfffffffffffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x0000000000057e3f: and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000735ba: andnps xmm0, xmmword ptr [rbx]; push rdi; add al, 0x57; ret 0xd457; 
0x00000000000372d6: andps xmm0, xmm1; ret; 
0x0000000000086e1c: bnd jbe 0x86dd1; jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x0000000000060525: bnd jno 0x604b1; je 0x60535; sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x0000000000037a50: bsf eax, edi; inc eax; ret; 
0x0000000000037a5e: bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x0000000000037a4f: bsf rax, rdi; inc eax; ret; 
0x0000000000037a5d: bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000002403f: bswap eax; lea esi, [rax + 0x14]; call 0x3a3dc; xor eax, eax; pop rdx; ret; 
0x000000000001e294: bswap eax; mov dword ptr [rdi - 4], eax; jne 0x1e28c; ret; 
0x000000000003f24c: bswap eax; mov eax, eax; ret; 
0x0000000000023e51: bswap eax; ret; 
0x0000000000021448: call 0x14640; test rax, rax; jne 0x21460; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002137d: call 0x14680; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000004c00e: call 0x14680; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000049e6d: call 0x14680; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000049e65: call 0x14680; mov rdi, qword ptr [rbx]; call 0x14680; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000025c33: call 0x14680; xor eax, eax; pop rdx; ret; 
0x000000000003f26f: call 0x14a7a84; mov rax, rdi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000005ac45: call 0x16820; mov eax, 0x50; mov rdi, rbx; syscall; 
0x000000000004af81: call 0x16820; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000049c67: call 0x169c0; add rsp, 0x10; pop rbx; ret; 
0x000000000002260b: call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ac57: call 0x169c0; add rsp, 0x20; pop rbx; ret; 
0x000000000004af96: call 0x169c0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002383d: call 0x169c0; add rsp, 0x28; ret; 
0x000000000004a4de: call 0x169c0; add rsp, 0x30; pop rbx; ret; 
0x000000000005acc0: call 0x169c0; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000004a900: call 0x169c0; add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022331: call 0x169c0; add rsp, 0x50; pop rbx; ret; 
0x00000000000222a5: call 0x169c0; add rsp, 0x58; ret; 
0x00000000000223a0: call 0x169c0; add rsp, 0x68; ret; 
0x000000000003a381: call 0x169c0; add rsp, 0x70; pop rbx; ret; 
0x00000000000238ec: call 0x169c0; add rsp, 0x78; ret; 
0x0000000000042867: call 0x169c0; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000004b24e: call 0x169c0; add rsp, 0xb0; pop rbx; pop rbp; pop r12; ret; 
0x000000000004ae78: call 0x169c0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000049b31: call 0x169c0; pop rbx; ret; 
0x000000000005a967: call 0x169c0; pop rdi; ret; 
0x00000000000233d5: call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022599: call 0x169c0; pop rdx; ret; 
0x0000000000017bc4: call 0x17780; mov rax, rbx; pop rbx; ret; 
0x0000000000018164: call 0x17840; mov rax, rbx; pop rbx; ret; 
0x0000000000017bed: call 0x17a80; sub rax, rbp; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000005add9: call 0x17cc0; lea rsp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x0000000000017b68: call 0x17f50; add rax, rbx; pop rbx; ret; 
0x000000000003d5ca: call 0x18160; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021045: call 0x18df0; test rax, rax; setne al; movzx eax, al; pop rdx; ret; 
0x0000000000018dd8: call 0x18e60; add rsp, 8; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000018d54: call 0x18f60; add rsp, 8; lea rax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000018e20: call 0x18f60; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x0000000000019131: call 0x19aa0; mov rax, rbx; pop rbx; ret; 
0x000000000001af7c: call 0x1ae5b; mov eax, ebx; pop rbx; ret; 
0x000000000004b9f4: call 0x1af6d; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000001bb21: call 0x1bb32; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001be94: call 0x1bea5; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001bb85: call 0x1cafc; add rsp, 0x48; fchs; fxch st(1); ret; 
0x000000000001d675: call 0x1d616; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001e04b: call 0x1dfec; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001e0e5: call 0x1e115; pop rdx; ret; 
0x0000000000054990: call 0x1e5cc99; ret; 
0x0000000000054b28: call 0x1e5ce30; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054b35: call 0x1e5ce41; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054b42: call 0x1e5ce49; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000020bbe: call 0x1e9ef; add rsp, 0x18; ret; 
0x000000000004beef: call 0x1f541f6; and eax, 1; ret; 
0x000000000004befb: call 0x1f54203; and eax, 1; ret; 
0x0000000000020dab: call 0x20cf0; test eax, eax; sete al; movzx eax, al; pop rdx; ret; 
0x0000000000020df6: call 0x20e10; test eax, eax; setne al; movzx eax, al; pop rdx; ret; 
0x0000000000038aa9: call 0x21e65; mov dword ptr [rax], 0x16; or eax, 0xffffffff; add rsp, 0x20; pop rbx; ret; 
0x000000000001ae3d: call 0x21e65; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e0be: call 0x21e65; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000024029: call 0x21e65; mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x000000000003b06f: call 0x21e65; mov dword ptr [rax], 0x54; or eax, 0xffffffff; add rsp, 0x18; ret; 
0x000000000003ab1e: call 0x21e65; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000003a8bb: call 0x21e65; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000002318f: call 0x21e65; mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000057a44: call 0x21e65; mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000016f2c: call 0x21e65; mov dword ptr [rax], 0xc; xor eax, eax; add rsp, 8; ret; 
0x0000000000037fac: call 0x21e65; mov dword ptr [rax], 2; mov rax, rbx; pop rbx; ret; 
0x0000000000024181: call 0x21e65; mov dword ptr [rax], 2; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000004ac15: call 0x21e65; mov dword ptr [rax], ebx; or eax, 0xffffffff; pop rbx; ret; 
0x000000000003925a: call 0x21e65; mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x000000000004459d: call 0x21e65; mov rdi, r14; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000003a80f: call 0x21e65; or edx, 0xffffffff; mov dword ptr [rax], ebx; mov eax, edx; pop rbx; ret; 
0x000000000005a89c: call 0x21eb7; movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x000000000004e791: call 0x22175; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000230ae: call 0x22175; pop rdx; sar eax, 0x1f; ret; 
0x000000000003377d: call 0x2248e; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000336fe: call 0x2248e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000033740: call 0x2248e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000022428: call 0x2248e; xor eax, eax; pop rdx; ret; 
0x000000000002244b: call 0x224bb; pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000022411: call 0x2253d; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000002291b: call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c12: call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022ca6: call 0x22b0e; add rsp, 0xd8; ret; 
0x00000000000389b3: call 0x23ab9; add rsp, 0x90; pop rbx; ret; 
0x0000000000023bfd: call 0x23b19; add rsp, 0x18; ret; 
0x0000000000025d46: call 0x23e54; test rax, rax; je 0x25d34; pop rbx; ret; 
0x000000000003f279: call 0x24a7a86; ret; 
0x0000000000026891: call 0x266b1; add rsp, 0xd8; ret; 
0x00000000000359b2: call 0x287b9; xorps xmm0, xmmword ptr [rip + 0x5b002]; add rsp, 0x18; ret; 
0x000000000003602b: call 0x28856; movss xmm1, dword ptr [rip + 0x5a998]; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000036369: call 0x288af; fchs; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002bc9a: call 0x28914; add rsp, 0x28; ret; 
0x000000000002bd39: call 0x2894a; add rsp, 0x28; ret; 
0x0000000000017bf4: call 0x28c5ff41; pop rbx; pop rbp; ret; 
0x000000000002baa8: call 0x29a04; add rsp, 0x18; ret; 
0x000000000002bbe9: call 0x29aa6; add rsp, 0x18; ret; 
0x000000000002bec6: call 0x29aff; add rsp, 0x20; add rsp, 0x38; ret; 
0x00000000000363e9: call 0x29b7f; add rsp, 0x18; ret; 
0x00000000000364d7: call 0x29d51; add rsp, 0x18; ret; 
0x000000000003681f: call 0x29dde; add rsp, 0x30; add rsp, 0x38; ret; 
0x000000000002c42c: call 0x2bed4; movsd xmm1, qword ptr [rip + 0x65c67]; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c9ac: call 0x2c46a; movss xmm1, dword ptr [rip + 0x66223]; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x00000000000371f5: call 0x2cdf33d8; and al, 0xde; leave; add rsp, 0x10; ret; 
0x0000000000033319: call 0x2ef10; cvtsi2sd xmm0, eax; pop rax; ret; 
0x000000000003335a: call 0x2ef7c; cvtsi2ss xmm0, eax; pop rax; ret; 
0x000000000002a3cf: call 0x3252d; addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x000000000001ca4a: call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002f5cd: call 0x3252d; mulsd xmm0, qword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002a47b: call 0x333b7; addss xmm0, dword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000002fb42: call 0x333b7; mulss xmm0, dword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002d23a: call 0x33c87; add rsp, 0x20; pop rbx; ret; 
0x000000000002d3b0: call 0x345fe; add rsp, 0x20; add rsp, 0x30; pop rbx; ret; 
0x0000000000034f36: call 0x34f53; add rsp, 0x18; ret; 
0x0000000000034f49: call 0x35149; add rsp, 0x18; ret; 
0x00000000000324dc: call 0x35398; pop rdx; cvttsd2si rax, xmm0; ret; 
0x00000000000324e9: call 0x3543e; pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000036be9: call 0x3682d; cvtsd2ss xmm0, xmm0; pop rdx; ret; 
0x0000000000037160: call 0x3716f; pop rax; fld1; fsubp st(1); ret; 
0x000000000001cb3f: call 0x37881; fld xword ptr [rsp + 0x10]; fxch st(1); add rsp, 0x58; ret; 
0x00000000000392ab: call 0x389c1; add rsp, 0x18; ret; 
0x000000000003d596: call 0x389c1; movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x0000000000039ce0: call 0x39bee; add rsp, 0xd8; ret; 
0x000000000002417c: call 0x3a3dc; call 0x21e65; mov dword ptr [rax], 2; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x00000000000578e8: call 0x3a3dc; xor eax, eax; pop rbx; ret; 
0x0000000000024044: call 0x3a3dc; xor eax, eax; pop rdx; ret; 
0x000000000003af69: call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b3bd: call 0x3b082; pop rdx; ret; 
0x000000000003b379: call 0x3b23f; add rsp, 0x18; ret; 
0x000000000003c5b0: call 0x3c35a; add rsp, 0x18; ret; 
0x000000000003caa9: call 0x3ca4e; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x228; pop rbx; pop rbp; ret; 
0x000000000003f21f: call 0x3f0d5; mov edx, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000026fe9: call 0x3fe2f2f4; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000027478: call 0x3fe2f783; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000041007: call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000408d5: call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000419bc: call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000001805a: call 0x415dc1bc; pop rbp; ret; 
0x0000000000019014: call 0x415dd176; pop rbp; ret; 
0x000000000002180e: call 0x415f736d; pop rsp; pop r13; ret; 
0x000000000003bbd8: call 0x415ffd3a; pop rbp; pop r14; ret; 
0x0000000000052f53: call 0x416170b5; pop rbp; pop r14; ret; 
0x000000000004c894: call 0x416223f3; pop rsp; pop r13; ret; 
0x0000000000040906: call 0x419fa; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000042474: call 0x423c4; pop rdx; shr rax, 0x11; ret; 
0x0000000000042493: call 0x423c4; shr rax, 0x10; cdqe; pop rdx; ret; 
0x00000000000427ad: call 0x42756; add rsp, 0x18; ret; 
0x0000000000042972: call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042a9b: call 0x42bbf; lea rsp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x0000000000042ba5: call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000043712: call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x00000000000370a2: call 0x44138099; and al, 0xe8; ret; 
0x0000000000044f0b: call 0x44ea2; pop rdx; ret; 
0x0000000000044efe: call 0x44ea2; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017735: call 0x48017b03; add eax, ebx; pop rbx; ret; 
0x000000000003a7d9: call 0x4803a97c; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000003f963: call 0x4803f96b; add esp, 0x18; cqo; idiv rcx; add rax, rsi; ret; 
0x000000000005b5ec: call 0x4805b5f4; mov dword ptr [rsp + 8], eax; call 0x594ec; add rsp, 0x18; ret; 
0x0000000000053734: call 0x481cc081; mov dword ptr [rdi + 8], eax; ret; 
0x00000000000337c5: call 0x48cd5912; cmp edx, edi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x00000000000450a5: call 0x499bf; mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000049f78: call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000023a97: call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000004a982: call 0x4a614; mov eax, dword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000004a782: call 0x4a614; mov rax, qword ptr [rsp + 8]; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000005b58f: call 0x4a796; imul eax, dword ptr [rsp + 0x30], 0xf4240; add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x000000000004ab24: call 0x4a90e; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000004aad2: call 0x4a90e; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000004aa8e: call 0x4ac07; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000004abe1: call 0x4ae15; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000022e15: call 0x4b25f; add rsp, 0x28; ret; 
0x00000000000230fd: call 0x4b501; add rsp, 0x28; ret; 
0x000000000004c625: call 0x4b94c; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004d552: call 0x4b94c; mov eax, dword ptr [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004c19a: call 0x4b94c; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000004eb76: call 0x4b94c; mov eax, ebp; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004c041: call 0x4b94c; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004d5f1: call 0x4b94c; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004df20: call 0x4b94c; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f2a0: call 0x4b94c; movzx eax, bpl; pop rbx; pop rbp; pop r12; ret; 
0x000000000004bc86: call 0x4bb5c; add rsp, 0x18; ret; 
0x0000000000038b1e: call 0x4bf87; mov eax, 1; pop rdx; ret; 
0x000000000004191d: call 0x4bf87; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x000000000004e7cc: call 0x4bf87; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x000000000004bfa6: call 0x4c07e; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x0000000000023043: call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000004b90f: call 0x4cd71c5c; mov edi, ecx; mov rsi, r12; syscall; 
0x00000000000422af: call 0x4ce08; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004d71b: call 0x4d67f; xor eax, eax; ret; 
0x000000000004eb9b: call 0x4d924; add rsp, 0x18; dec eax; ret; 
0x000000000004dfad: call 0x4df82; mov rax, rbx; pop rbx; ret; 
0x000000000001e0ad: call 0x4ed42; inc eax; cdqe; pop rdx; ret; 
0x000000000003da77: call 0x4ed42; lea rax, [rip + 0x25a1dd]; add rsp, 0x18; ret; 
0x0000000000053662: call 0x4edcc; mov rax, rbx; pop rbx; ret; 
0x000000000004bdf5: call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004beab: call 0x4f42f; add rsp, 0xd8; ret; 
0x0000000000052ecf: call 0x50c60; add rsp, 0x108; ret; 
0x000000000004ce8a: call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004f47b: call 0x50c60; add rsp, 0xf8; ret; 
0x000000000004d481: call 0x50e82; add rsp, 0xd8; ret; 
0x0000000000052f9d: call 0x50e82; add rsp, 0xf8; ret; 
0x000000000004d86e: call 0x5237c; add rsp, 0xd8; ret; 
0x0000000000053211: call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000004da23: call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004ecaa: call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edbf: call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee4e: call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eedd: call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef67: call 0x53067; add rsp, 0xd8; ret; 
0x000000000004eff6: call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c9: call 0x5321e; add rsp, 0xd8; ret; 
0x000000000005335d: call 0x53230; add rsp, 0xd8; ret; 
0x0000000000053d17: call 0x53c9d; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000053d34: call 0x53c9d; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000053f59: call 0x53e7f; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000053f76: call 0x53e7f; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000017734: call 0x54121; add rax, rbx; pop rbx; ret; 
0x0000000000042781: call 0x54121; lea rax, [rip + 0x255883]; pop rbx; ret; 
0x0000000000016f79: call 0x54178; add rsp, 8; ret; 
0x0000000000049b60: call 0x54178; mov eax, ebx; neg eax; pop rbx; ret; 
0x000000000004b810: call 0x54178; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x000000000001790c: call 0x54178; mov rax, rbx; pop rbx; ret; 
0x0000000000049b29: call 0x54178; movsxd rdi, ebx; call 0x169c0; pop rbx; ret; 
0x000000000004df74: call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x00000000000427da: call 0x545dd; mov eax, 0x39; syscall; 
0x0000000000021fbd: call 0x5468b; call rbx; 
0x0000000000022006: call 0x5468b; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000055bde: call 0x5468b; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x000000000004274c: call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x000000000002205c: call 0x5468b; mov rdi, rbp; call rbx; 
0x0000000000022134: call 0x5468b; xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022603: call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000023835: call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004a4d6: call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x30; pop rbx; ret; 
0x0000000000022398: call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x68; ret; 
0x00000000000591a0: call 0x546c5; pop rdx; pop rcx; pop rsi; neg eax; ret; 
0x0000000000054b82: call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000003a6e4: call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005a253: call 0x55279; mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000055108: call 0x559ea; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x0000000000055c64: call 0x559ea; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000057d56: call 0x56409; mov edx, 2; test eax, eax; cmovne eax, edx; pop rdx; ret; 
0x0000000000040976: call 0x57116; add rsp, 0x10; mov rax, rbx; pop rbx; ret; 
0x0000000000039c50: call 0x57116; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039b36: call 0x57116; add rsp, 0x18; ret; 
0x0000000000054827: call 0x57116; add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000057164: call 0x573d9; mov eax, ebx; pop rbx; ret; 
0x000000000005371e: call 0x577dc; add byte ptr [rax - 0x77], cl; ret 0xf129; 
0x0000000000057ac6: call 0x578f1; mov dword ptr [rbx], ebp; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000023adb: call 0x57ad1; movsxd rdi, dword ptr [rsp + 0x18]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000005b3bb: call 0x57ad1; movsxd rdi, dword ptr [rsp + 0x1c]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000003a3e9: call 0x57d91; mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000054c4b: call 0x57d91; xor eax, eax; pop rbx; ret; 
0x00000000000566a3: call 0x57d91; xor eax, eax; pop rdx; ret; 
0x0000000000023319: call 0x57e27; movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000005827f: call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x00000000000591f7: call 0x58f51; add rsp, 0x40; pop rbx; ret; 
0x000000000005a5cb: call 0x590e8; not eax; shr eax, 0x1f; pop rdx; ret; 
0x00000000000594f7: call 0x59158; neg eax; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023b56: call 0x591ab; add rsp, 0x18; ret; 
0x000000000005b5f5: call 0x594ec; add rsp, 0x18; ret; 
0x000000000004df7c: call 0x5a05041f; ret; 
0x000000000004249a: call 0x5a9c6caf; ret; 
0x0000000000037f6f: call 0x5ad52; add rsp, 0x120; pop rbx; ret; 
0x000000000005b2d4: call 0x5b05ae8f; ret; 
0x000000000003a530: call 0x5b5a5; add rsp, 0x118; ret; 
0x000000000005ee89: call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x00000000000179bc: call 0x5c42d71c; ret; 
0x0000000000017ddb: call 0x5c42db3b; pop r13; ret; 
0x0000000000026a02: call 0x5c43c762; ret; 
0x0000000000026acc: call 0x5c43c82c; ret; 
0x000000000003a4ad: call 0x5c45020d; ret; 
0x000000000003a6fe: call 0x5c45045e; pop r13; pop r14; ret; 
0x0000000000049e44: call 0x5c45fba4; ret; 
0x000000000004a43f: call 0x5c46019f; pop r13; mov esi, 2; jmp rax; 
0x000000000004c014: call 0x5c461d74; ret; 
0x000000000004c1a0: call 0x5c461f00; ret; 
0x000000000004c330: call 0x5c462090; pop r13; ret; 
0x000000000004cc04: call 0x5c462964; pop r13; pop r14; ret; 
0x000000000004df27: call 0x5c463c87; ret; 
0x000000000005db4b: call 0x5c7d2; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x239de5]; mov rsi, rbx; mov rdi, r12; call rax; 
0x0000000000052e2b: call 0x5d468a71; pop r14; ret; 
0x0000000000050947: call 0x634de4d1; ret; 
0x0000000000019c3b: call 0x6412ac33; and al, 0xec; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000005ff91: call 0x6c21df8e; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000002e4b6: call 0x74cb1dfa; or dword ptr [rbp + 0x661a74c0], eax; movaps xmm0, xmm1; ret; 
0x000000000008adf0: call 0x7c08efe8; fiadd word ptr fs:[rax]; wait; fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x0000000000037879: call 0x827e559; fyl2x; ret; 
0x0000000000016d70: call 0x8c5f0bd; pop rbx; pop rbp; ret; 
0x0000000000016e60: call 0x8c5f1ad; pop rbx; pop rbp; ret; 
0x00000000000275e8: call 0x9ed46ef; ret 0xd089; 
0x0000000000028653: call 0x9ed575a; ret 0xd089; 
0x0000000000018a7d: call 0x9fa0db2; jbe 0x18af6; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x0000000000022500: call 0xc024a08; add byte ptr [rax], al; ret; 
0x000000000001e7b7: call 0xf4612a7; mov dh, 0x1c; xor ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x0000000000056c93: call 0xffffffff83f56cbb; or al, 0x24; add byte ptr [rbp + 0x410475c0], al; or dword ptr [rax], 8; ret; 
0x0000000000029244: call 0xffffffff850298d2; jmp qword ptr [rsi + 0xf]; 
0x0000000000038d02: call 0xffffffff89c61626; rcr byte ptr [rdx + 0x5b], 1; pop rbp; ret; 
0x000000000001f81a: call 0xffffffff89e0e32f; ret 0x894c; 
0x000000000003c676: call 0xffffffff8b2bb17f; adc al, 0x89; ret 0xe283; 
0x0000000000050e6d: call 0xffffffff8b4d1d5d; and al, 0xf0; lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x00000000000524c0: call 0xffffffff8b4d33b0; and al, 0xf0; lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x00000000000299fe: call 0xffffffffc0b9a912; ret; 
0x0000000000037113: call 0xffffffffc2dc52f4; fmulp st(1); fsqrt; fpatan; ret; 
0x0000000000030442: call 0xffffffffc55d1439; ret; 
0x0000000000035514: call 0xffffffffc9e243f2; ret; 
0x000000000008878e: call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x000000000003714a: call 0xffffffffd9e076c1; fchs; ret; 
0x0000000000029b74: call 0xffffffffde02a1e9; retf 0xe1de; fsubp st(1); ret; 
0x00000000000053b3: call 0xffffffffde7fe464; ret 0x793b; 
0x000000000007dc86: call 0xffffffffe29c91ed; insb byte ptr [rdi], dx; pop rdx; push rbx; ret; 
0x000000000008316c: call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x00000000000299f7: call 0xfffffffff026de87; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000002b9fe: call 0xfffffffff026fe8e; and ax, 0x8000; or eax, edx; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000037872: call 0xfffffffff1dd3a55; ret; 
0x000000000003721d: call 0xfffffffffddc779a; fstp st(1); ret; 
0x000000000005bd73: call 0xffffffffff4ebd76; ret; 
0x000000000002258a: call qword ptr [rax + 0x48]; 
0x0000000000055c68: call qword ptr [rax + 0x48]; mov eax, edi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000005b5b9: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x00000000000237c6: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x000000000002359f: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000023c87: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023b03: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x00000000000226e5: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004a643: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x00000000000225a2: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x000000000002258a: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x00000000000234a0: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005b2c4: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000002355d: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x000000000005e3e0: call qword ptr [rax + 1]; 
0x00000000000778f6: call qword ptr [rax + 3]; 
0x000000000001ae3b: call qword ptr [rax - 0x18]; 
0x00000000000324da: call qword ptr [rax - 0x18]; mov bh, 0x2e; add byte ptr [rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x00000000000226a3: call qword ptr [rax - 0x48]; 
0x0000000000023ccf: call qword ptr [rax - 0x48]; adc byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000003a53f: call qword ptr [rax - 0x48]; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004a62e: call qword ptr [rax - 0x48]; and al, 0; add byte ptr [rax], al; syscall; 
0x000000000005a989: call qword ptr [rax - 0x48]; and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005908e: call qword ptr [rax - 0x48]; in eax, 0; add byte ptr [rax], al; syscall; 
0x000000000005ae01: call qword ptr [rax - 0x48]; jae 0x5ae06; add byte ptr [rax], al; syscall; 
0x000000000005aeff: call qword ptr [rax - 0x48]; jl 0x5af04; add byte ptr [rax], al; syscall; 
0x0000000000023a47: call qword ptr [rax - 0x48]; jnp 0x23a4c; add byte ptr [rax], al; syscall; 
0x000000000005aed0: call qword ptr [rax - 0x48]; jns 0x5aed5; add byte ptr [rax], al; syscall; 
0x0000000000023a5b: call qword ptr [rax - 0x48]; jp 0x23a60; add byte ptr [rax], al; syscall; 
0x0000000000023c48: call qword ptr [rax - 0x48]; xor al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000002346f: call qword ptr [rax - 0x77]; 
0x000000000002346f: call qword ptr [rax - 0x77]; idiv byte ptr [rax + 0x12c]; syscall; 
0x000000000004b314: call qword ptr [rax - 0x77]; sar byte ptr [rax + 0x102], cl; syscall; 
0x0000000000023546: call qword ptr [rax - 0x77]; sar byte ptr [rax + 0xfe], cl; syscall; 
0x00000000000396f2: call qword ptr [rax - 0x77]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x8d; syscall; 
0x000000000006e5f8: call qword ptr [rax - 0xe]; 
0x000000000006baf5: call qword ptr [rax - 1]; 
0x0000000000024e25: call qword ptr [rax]; 
0x0000000000058faf: call qword ptr [rbp + 0x41]; 
0x0000000000050d6e: call qword ptr [rbp + 0x48]; 
0x00000000000219ca: call qword ptr [rbp + 0x53]; 
0x00000000000235c7: call qword ptr [rbp + 0x53]; movsxd rsi, esi; mov eax, 0x144; sub rsp, 0x128; syscall; 
0x0000000000079bde: call qword ptr [rbp + 2]; 
0x0000000000092ff7: call qword ptr [rbp + rax*8 - 0x3b530005]; sti; call rsp; 
0x0000000000093283: call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x000000000009327b: call qword ptr [rbp - 0x6a000419]; out 0xfb, eax; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x000000000006baff: call qword ptr [rbp - 1]; 
0x0000000000077468: call qword ptr [rbp - 7]; 
0x000000000001b2a7: call qword ptr [rbx + 0x10]; 
0x000000000004bfb0: call qword ptr [rbx + 0x18]; 
0x000000000004bd60: call qword ptr [rbx + 0x40]; 
0x000000000000509f: call qword ptr [rbx + 0x41]; 
0x000000000001e114: call qword ptr [rbx + 0x48]; 
0x00000000000231ab: call qword ptr [rbx + 0x49]; 
0x000000000004c165: call qword ptr [rbx + 0x50]; 
0x000000000005b96d: call qword ptr [rbx - 0x45]; 
0x000000000002393a: call qword ptr [rbx - 0x73]; 
0x0000000000020f53: call qword ptr [rbx - 0x77]; 
0x000000000004d56f: call qword ptr [rbx - 0xa]; 
0x000000000009339f: call qword ptr [rbx - 0xb]; 
0x000000000009339f: call qword ptr [rbx - 0xb]; sti; jmp qword ptr [rax - 0xb]; 
0x000000000006bafb: call qword ptr [rbx - 1]; 
0x0000000000005cea: call qword ptr [rbx]; 
0x0000000000072799: call qword ptr [rbx]; call qword ptr [rdi + rdi*8]; adc eax, 0x17ff16ff; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000004a9c2: call qword ptr [rcx + 0x74]; 
0x00000000000232bb: call qword ptr [rcx + 0x75]; 
0x000000000005a542: call qword ptr [rcx + 0x79]; 
0x0000000000090ec5: call qword ptr [rcx - 0x48]; 
0x00000000000387dd: call qword ptr [rcx - 0x77]; 
0x00000000000387dd: call qword ptr [rcx - 0x77]; idiv byte ptr [rax + 0x8c]; syscall; 
0x000000000006baf7: call qword ptr [rcx - 1]; 
0x0000000000080f7a: call qword ptr [rcx - 5]; 
0x0000000000014c31: call qword ptr [rcx]; 
0x000000000002c79a: call qword ptr [rdi + 0x3f]; 
0x000000000004bcb3: call qword ptr [rdi + 0x48]; 
0x00000000000934d7: call qword ptr [rdi + 0x66]; 
0x0000000000079e82: call qword ptr [rdi + 1]; 
0x000000000007279b: call qword ptr [rdi + rdi*8]; adc eax, 0x17ff16ff; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x0000000000092963: call qword ptr [rdi - 0x18000748]; mov eax, 0xb8e7fff8; clc; jmp qword ptr [rdx]; 
0x0000000000005235: call qword ptr [rdi - 0x71]; 
0x000000000006bb03: call qword ptr [rdi - 1]; 
0x000000000002c2dd: call qword ptr [rdi]; 
0x00000000000727a1: call qword ptr [rdi]; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x0000000000072a34: call qword ptr [rdx + 0x16]; 
0x000000000005d9f3: call qword ptr [rdx + 0x48]; 
0x0000000000035e39: call qword ptr [rdx + 0x52]; 
0x000000000005a93b: call qword ptr [rdx + 0x6a]; 
0x0000000000086e2e: call qword ptr [rdx + 5]; 
0x000000000009346b: call qword ptr [rdx - 0x4d00039a]; cld; call rdx; 
0x00000000000806aa: call qword ptr [rdx - 0x5f]; 
0x0000000000004a66: call qword ptr [rdx - 0x67]; xchg eax, esp; jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x000000000006e2ca: call qword ptr [rdx - 0x6b]; 
0x000000000006baf9: call qword ptr [rdx - 1]; 
0x0000000000031b79: call qword ptr [rdx]; 
0x0000000000072703: call qword ptr [rdx]; xor al, ah; jmp rcx; 
0x000000000007279d: call qword ptr [rip + 0x17ff16ff]; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000004cc62: call qword ptr [rsi + 0x10]; 
0x000000000004d283: call qword ptr [rsi + 0x40]; 
0x0000000000053b77: call qword ptr [rsi + 0x41]; 
0x0000000000031f1c: call qword ptr [rsi + 0x56]; 
0x0000000000023122: call qword ptr [rsi + 1]; 
0x0000000000082168: call qword ptr [rsi + 4]; 
0x000000000008b038: call qword ptr [rsi - 0x17]; 
0x0000000000092acb: call qword ptr [rsi - 0x520006d5]; xor cl, bh; call rcx; 
0x0000000000073294: call qword ptr [rsi - 0x7e]; 
0x000000000006bb01: call qword ptr [rsi - 1]; 
0x000000000006ba81: call qword ptr [rsi]; 
0x000000000007279f: call qword ptr [rsi]; call qword ptr [rdi]; lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x0000000000057e53: call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x0000000000038f07: call rax; 
0x000000000005db61: call rax; lea rsp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000006257a: call rbp; ret; 
0x0000000000007018: call rbx; 
0x000000000004e692: call rcx; 
0x00000000000913e5: call rcx; mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x0000000000057e54: call rcx; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x0000000000092abb: call rcx; xor cl, bh; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092aaf: call rcx; xor cl, bh; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092abf: call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab3: call rcx; xor cl, bh; jmp rdx; 
0x00000000000215fe: call rdi; 
0x0000000000055a28: call rdx; 
0x0000000000004a74: call rsi; 
0x00000000000219c2: call rsp; 
0x0000000000023cf4: cdq; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov esi, 0x5affff2c; ret; 
0x00000000000778c7: cdq; add byte ptr [rcx - 0x666266f9], bl; pushfq; cdq; ret; 
0x000000000005953f: cdq; idiv ecx; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000003f96c: cdq; idiv rcx; add rax, rsi; ret; 
0x0000000000053681: cdq; idiv rsi; ret; 
0x000000000007403b: cdq; lodsd eax, dword ptr [rsi]; cdq; ret; 
0x00000000000778d1: cdq; mov ecx, 0xba99bb99; cdq; ret 0xbd99; 
0x0000000000083989: cdq; mov edi, 0xc199c099; cdq; ret 0xc399; 
0x0000000000083983: cdq; mov esp, 0xbe99bd99; cdq; mov edi, 0xc199c099; cdq; ret 0xc399; 
0x00000000000703d8: cdq; pop rsi; ret 0x125f; 
0x00000000000778cb: cdq; popfq; cdq; pushfq; cdq; ret; 
0x000000000007188f: cdq; push -0x67; ret; 
0x00000000000778cd: cdq; pushfq; cdq; ret; 
0x000000000007dcd5: cdq; ret 0x9553; 
0x00000000000778d7: cdq; ret 0xbd99; 
0x000000000008398f: cdq; ret 0xc399; 
0x0000000000071891: cdq; ret; 
0x0000000000004a69: cdq; xchg eax, esp; jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x0000000000044b49: cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000059370: cdqe; mov qword ptr [rbx + 8], rax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000044b5b: cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000021fb7: cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x00000000000481ad: cdqe; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001e0b4: cdqe; pop rdx; ret; 
0x0000000000086157: cdqe; push rax; ret 0x7153; 
0x0000000000026ff5: cdqe; ret; 
0x000000000001f6a2: clc; adc byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x00000000000549a5: clc; adc byte ptr [rdi], cl; xchg eax, ebp; ret 0xc2ff; 
0x000000000005abc7: clc; add al, 0x75; fisttp qword ptr [rax + 0x63]; jl 0x5abf3; adc byte ptr [rax + 3], bh; syscall; 
0x000000000003cdb3: clc; add al, 0x76; or byte ptr [rax - 1], cl; ret 0xeceb; 
0x000000000004310d: clc; add al, 0xf; xchg dword ptr [rcx + 0x49000000], edi; movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x0000000000020dc6: clc; add al, 0xf; xchg eax, esi; ret 0xff83; 
0x0000000000018ef2: clc; add bl, byte ptr [rbp + 0x41]; pop rsp; ret; 
0x0000000000018ed7: clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000004e6cd: clc; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jl 0x4e681; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000053d06: clc; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004a217: clc; add byte ptr [rcx + rdx + 0xf], dh; lahf; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x75], 0x5c; ret; 
0x0000000000019160: clc; add cl, byte ptr [rax - 0x77]; ret; 
0x000000000001b2a0: clc; add dh, byte ptr [rbp + 0x4d]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x0000000000019b94: clc; add dword ptr [rcx + 0x5740477], ecx; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000056f7a: clc; add dword ptr [rcx], ebx; sal bh, 0xd0; and eax, 0x10; ret; 
0x000000000005514c: clc; add esi, dword ptr [rbp + 4]; syscall; 
0x00000000000275bc: clc; and byte ptr [rbp - 0x14], dh; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x000000000001fe40: clc; and byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000015616: clc; and byte ptr [rdi], cl; xchg eax, esp; ret 0xca08; 
0x00000000000210d4: clc; and eax, 0x5f; cmp edx, 0x19; cmova eax, edi; ret; 
0x00000000000210b7: clc; and eax, 0x7f; ret; 
0x000000000003da0f: clc; and eax, 0xffffff; ret; 
0x00000000000212f8: clc; and eax, 1; cmp eax, 1; sbb eax, eax; add eax, 2; ret; 
0x0000000000020e40: clc; and eax, 1; ret; 
0x0000000000023e50: clc; bswap eax; ret; 
0x0000000000049c66: clc; call 0x169c0; add rsp, 0x10; pop rbx; ret; 
0x000000000004b5e8: clc; call 0x169c0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002266a: clc; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000023320: clc; call 0x169c0; add rsp, 0x68; ret; 
0x000000000005a966: clc; call 0x169c0; pop rdi; ret; 
0x0000000000022598: clc; call 0x169c0; pop rdx; ret; 
0x0000000000092962: clc; call qword ptr [rdi - 0x18000748]; mov eax, 0xb8e7fff8; clc; jmp qword ptr [rdx]; 
0x000000000005367f: clc; cqo; idiv rsi; ret; 
0x000000000009429e: clc; dec dword ptr [rax + 0x20000000]; pop rdi; clc; jmp qword ptr [rax]; 
0x000000000009295a: clc; dec dword ptr [rbp - 0x68000748]; mov eax, 0xb897fff8; clc; jmp rdi; 
0x0000000000028a60: clc; divsd xmm0, xmm1; ret; 
0x00000000000233b9: clc; fiadd dword ptr [rcx - 0x77]; ret 0x1275; 
0x000000000005569f: clc; fidiv dword ptr [rbp + 0x13]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055761: clc; fidiv dword ptr [rbp + 0x15]; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000054dd8: clc; fidiv dword ptr [rbp + 0x1d]; mov rax, r8; syscall; 
0x0000000000056dcd: clc; fidiv dword ptr [rbp + 0x2e]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000055737: clc; fidiv dword ptr [rbp + 0x3f]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000054fb3: clc; fidiv dword ptr [rbp + 0x53]; mov esi, 1; mov rax, r9; syscall; 
0x000000000001acea: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d3c: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000001acb5: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r9; syscall; 
0x0000000000054d3e: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x00000000000559df: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055990: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; ret; 
0x00000000000552dd: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005465f: clc; fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000004b97c: clc; fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b97c: clc; fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004c217: clc; fidiv dword ptr [rbp + 8]; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c1b: clc; fidiv dword ptr [rbp + 8]; mov rax, rbp; mov rsi, rdx; syscall; 
0x00000000000548af: clc; fidiv dword ptr [rbp - 0x17]; xor esi, esi; mov rax, r12; syscall; 
0x0000000000054f20: clc; fidiv dword ptr [rbp - 0x1c]; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000055b20: clc; fidiv dword ptr [rbp - 0x6a]; mov rax, r15; mov esi, 1; syscall; 
0x00000000000233f4: clc; fimul dword ptr [rcx - 0x7af28a3e]; div byte ptr [rbp + 9]; mov eax, 0x11c; syscall; 
0x000000000005ff92: clc; fistp word ptr [rbx]; insb byte ptr [rdi], dx; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000003782a: clc; fnstsw ax; fstp st(1); test ah, 4; jne 0x37823; ret; 
0x00000000000897ce: clc; in al, 0xa3; iretd; cld; hlt; ret; 
0x000000000003da37: clc; ja 0x3da3e; shr eax, 0x10; ret; 
0x00000000000942a6: clc; jmp qword ptr [rax]; 
0x0000000000092996: clc; jmp qword ptr [rdi - 0x1b]; 
0x0000000000092992: clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000009296e: clc; jmp qword ptr [rdx]; 
0x000000000000530f: clc; jmp rdi; 
0x000000000002073a: clc; jne 0x206d6; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023525: clc; jne 0x23536; test edx, edx; jne 0x23536; mov eax, 0xfd; syscall; 
0x0000000000022281: clc; js 0x222a5; mov edx, 1; mov esi, 2; mov rax, r9; syscall; 
0x000000000009298a: clc; lcall [rax - 0x1b]; clc; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000009298e: clc; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x00000000000224b2: clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000005abdc: clc; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000004297a: clc; leave; ret; 
0x000000000002e526: clc; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003f252: clc; mov byte ptr [rsi + 1], dil; shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000002e9af: clc; mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x000000000005a95d: clc; mov eax, 0; cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x000000000005aa3b: clc; mov eax, 0x6c; syscall; 
0x0000000000022261: clc; mov eax, 3; syscall; 
0x000000000003b48c: clc; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004cb1f: clc; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000003b470: clc; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000055b26: clc; mov esi, 1; syscall; 
0x0000000000043197: clc; mov rax, rbp; syscall; 
0x0000000000055c6c: clc; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000002de97: clc; movapd xmm0, xmm1; ret; 
0x000000000002586c: clc; movsd dword ptr [rdi], dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8141; 
0x000000000002dea2: clc; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x000000000002b8ee: clc; movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8fd: clc; movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x000000000002b9be: clc; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002e882: clc; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000028aec: clc; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000033585: clc; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000001c9f9: clc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001ce2f: clc; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000005661e: clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000572a6: clc; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x00000000000357c6: clc; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000034fa9: clc; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000028af2: clc; mulsd xmm0, xmm1; ret; 
0x0000000000033c80: clc; neg eax; add eax, 2; ret; 
0x0000000000018a80: clc; or dword ptr [rsi + 0x72], esi; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x00000000000224c2: clc; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x00000000000210c0: clc; or eax, 0x20; cmp edx, 0x19; cmova eax, edi; ret; 
0x000000000003da00: clc; or eax, esi; ret; 
0x0000000000057cea: clc; or ecx, dword ptr [rdi]; xchg eax, esp; ret 0xc283; 
0x0000000000027581: clc; pop rbx; pop rbp; pop r14; pop r15; ret; 
0x0000000000036a54: clc; push 0xff2d475; pop rsi; ret 0xff2; 
0x000000000004c518: clc; push qword ptr [rsp + rdx + 0x31]; ror byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x148; 
0x00000000000804c0: clc; push rcx; ret; 
0x000000000008e77b: clc; push rdx; xchg eax, ebp; ret 0x8bf; 
0x000000000006cdca: clc; ret 0xc2f9; 
0x00000000000169cb: clc; ret; 
0x000000000005336d: clc; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x0000000000018f7c: clc; sar rax, 2; ret; 
0x0000000000053671: clc; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000058001: clc; sbb dword ptr [rdi + rcx + 0x45], eax; fadd dword ptr [rcx + 0x69]; ret; 
0x00000000000357bd: clc; shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003f276: clc; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000002f4a4: clc; sub byte ptr [rsi], al; add dl, dh; divps xmm0, xmm1; ret; 
0x000000000003358b: clc; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x0000000000018765: clc; test dl, dl; jne 0x18770; ret; 
0x000000000004b10f: clc; test dword ptr [rcx - 0x77], 0x8c850fc2; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x000000000003d559: clc; xchg al, ah; ret; 
0x00000000000224b7: clc; xor eax, eax; ret; 
0x0000000000056ce0: clc; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000028a57: clc; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000003ad34: cld; add byte ptr [rax], al; add bl, ch; sbb esi, esi; ret; 
0x000000000003ae05: cld; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000008aeb6: cld; add byte ptr [rcx], dh; test al, 0x27; add cl, dh; outsb dx, byte ptr [rsi]; ret; 
0x0000000000093656: cld; call qword ptr [rax]; 
0x0000000000058fae: cld; call qword ptr [rbp + 0x41]; 
0x0000000000049971: cld; call qword ptr [rbx + 0x48]; 
0x00000000000934d6: cld; call qword ptr [rdi + 0x66]; 
0x000000000005a93a: cld; call qword ptr [rdx + 0x6a]; 
0x000000000009346a: cld; call qword ptr [rdx - 0x4d00039a]; cld; call rdx; 
0x0000000000093622: cld; call qword ptr [rdx]; 
0x0000000000093442: cld; call qword ptr [rsi]; 
0x000000000009360a: cld; call rdi; 
0x0000000000093472: cld; call rdx; 
0x000000000004b9f7: cld; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000004a185: cld; dec dword ptr [rax + 0x63]; ret; 
0x0000000000059260: cld; dec dword ptr [rax - 0x73]; je 0x5928a; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000052f16: cld; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000004a380: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000004b780: cld; dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 9], 0x31; fild dword ptr [rax + 0xf72007d]; xchg eax, ebp; ret; 
0x00000000000935d6: cld; dec dword ptr [rbp + 0x44fffc6a]; push -4; jmp qword ptr [rax + 0x6a]; 
0x000000000004c011: cld; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x000000000005b4a5: cld; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x00000000000935fe: cld; dec dword ptr [rcx - 0x61000398]; push 0x68b3fffc; cld; call rdi; 
0x000000000009357e: cld; dec dword ptr [rcx - 0x61000398]; push 0x68bdfffc; cld; jmp rdx; 
0x0000000000028a88: cld; divss xmm0, xmm1; ret; 
0x00000000000897d3: cld; hlt; ret; 
0x000000000005bbb5: cld; imul edi, esp, -1; add rsp, 0xd8; ret; 
0x0000000000093632: cld; inc dword ptr [rcx + 0x2fffc68]; insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000004a584: cld; inc dword ptr [rcx + 0x58]; pop r9; add rsp, 0x10; pop rbx; ret; 
0x000000000003c66c: cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0xddeb; 
0x00000000000935da: cld; inc dword ptr [rdx + rbp*2 - 4]; jmp qword ptr [rax + 0x6a]; 
0x0000000000093652: cld; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; call qword ptr [rax]; 
0x000000000009361e: cld; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x0000000000093636: cld; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009363e: cld; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; jmp rsp; 
0x00000000000934ce: cld; inc edx; push 0x68c2fffc; cld; call qword ptr [rdi + 0x66]; 
0x000000000009349e: cld; inc edx; push 0x68c2fffc; cld; jmp rcx; 
0x000000000001e336: cld; ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x000000000005264b: cld; jg 0x526c5; or dword ptr [rax - 1], ecx; or r9b, bpl; ret; 
0x0000000000074d58: cld; jg 0x74dcc; xor byte ptr [rdx - 0x80], 0x70; sub byte ptr [rdi - 0x80], 0x73; add dh, 0x81; ret; 
0x00000000000935de: cld; jmp qword ptr [rax + 0x6a]; 
0x000000000009363a: cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009347a: cld; jmp qword ptr [rcx]; 
0x00000000000648ba: cld; jmp rax; 
0x00000000000934a6: cld; jmp rcx; 
0x000000000009358a: cld; jmp rdx; 
0x0000000000093642: cld; jmp rsp; 
0x000000000001e298: cld; jne 0x1e28c; ret; 
0x0000000000046e92: cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x0000000000049b34: cld; lcall [rbx - 0x3d]; push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000049af2: cld; lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000049bad: cld; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x0000000000049c8c: cld; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x0000000000049cbf: cld; lcall [rdx - 0x3d]; push rax; mov eax, 0x18; syscall; 
0x000000000004ebd2: cld; lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x000000000009362e: cld; lcall [rip - 0x7e000397]; push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009361a: cld; lcall [rsi + 0x2fffc68]; insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x0000000000054172: cld; lea rax, [rdi + 1]; ret; 
0x000000000003a6c1: cld; lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x0000000000037306: cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000000522a: cld; mov dh, 0xea; js 0x51b0; sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x000000000004a8b6: cld; mov eax, 0xd; syscall; 
0x000000000003a5eb: cld; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000005aaa0: cld; mov eax, 1; syscall; 
0x000000000005aaa0: cld; mov eax, 1; syscall; xor eax, eax; ret; 
0x000000000004f187: cld; mov eax, 3; syscall; 
0x000000000002e9b9: cld; movaps xmm0, xmm1; ret; 
0x00000000000370ed: cld; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002b9de: cld; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9b3: cld; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x0000000000028b0f: cld; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000335f1: cld; movss xmm1, dword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000005aa97: cld; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x0000000000035839: cld; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000003518d: cld; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000028b15: cld; mulss xmm0, xmm1; ret; 
0x0000000000056d14: cld; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000079bdc: cld; push rbp; call qword ptr [rbp + 2]; 
0x0000000000053600: cld; push rdi; fdivr dword ptr [rcx]; ret; 
0x000000000006cdd0: cld; ret 0xc300; 
0x0000000000036060: cld; ret 5; 
0x000000000001c9ff: cld; ret; 
0x0000000000004b84: cld; rol dword ptr [rax + 0xf], cl; or dword ptr [rsi + rbp*4], ebp; jmp qword ptr [rcx]; 
0x00000000000335f7: cld; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000056c7f: cld; xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x0000000000028a7f: cld; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000027650: cli; adc eax, 0; ret; 
0x000000000003a40e: cli; add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000057d42: cli; add dword ptr [rcx], ebx; sal bh, 0xd0; and eax, 0xfffffffe; pop rdx; ret; 
0x0000000000076d64: cli; add edi, -0x7d; rol dword ptr [rbx - 0x7bec7c16], 1; ret; 
0x0000000000021989: cli; add esi, dword ptr [rbp - 0x1c]; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x0000000000054998: cli; and byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310a74c0], cl; rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x00000000000233d4: cli; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000023409: cli; call 0x169c0; pop rdx; ret; 
0x0000000000037104: cli; fabs; fxch st(1); fpatan; ret; 
0x000000000003711b: cli; fpatan; ret; 
0x00000000000337cb: cli; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x000000000003da0a: cli; jg 0x3da84; or byte ptr [rcx - 0xda08], cl; inc dword ptr [rax]; ret; 
0x000000000003b961: cli; lea eax, [rdx + 1]; ret; 
0x000000000003b978: cli; lea eax, [rdx + 2]; ret; 
0x000000000004b3b5: cli; mov eax, 0x8a; syscall; 
0x000000000005336b: cli; mov eax, edi; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x000000000003da1b: cli; mov edi, 0xf000000; mov bh, 0xff; cmovbe eax, edi; ret; 
0x0000000000026a45: cli; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000004a5fc: cli; mov r10d, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e2: cli; mov r10d, 8; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005366e: cli; mov rax, rdi; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x000000000003c5bf: cli; mov rax, rdx; je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x0000000000046305: cli; or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x462ef; ret; 
0x000000000003e0e2: cli; push qword ptr [rbp + 7]; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000006f66f: cli; push r10; jmp qword ptr [rsi - 0x6b]; 
0x0000000000037912: cli; ret; 
0x000000000005a8c2: cli; sar bl, 0xff; pop rdx; ret; 
0x000000000005fb7c: cli; sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x00000000000932d9: cli; sti; call rsp; 
0x000000000008bd03: cli; sti; mov ebp, 0x1e09bc91; xlatb; pop rbx; ret 0xef12; 
0x0000000000023351: cli; syscall; 
0x000000000005907c: cli; syscall; test eax, eax; je 0x59086; neg eax; ret; 
0x000000000003c5ea: cli; xor byte ptr [rbp + 0x1e], 0xeb; sbb byte ptr [rcx - 2], al; ret; 
0x000000000003a77d: cmc; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; xor eax, 0x5afffdc2; ret; 
0x0000000000017db7: cmc; add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000041987: cmc; and rax, 0x6ae800; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004b9f6: cmc; cld; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x00000000000378af: cmc; fnstsw ax; fstp st(1); test ah, 4; jne 0x378a8; ret; 
0x000000000004cb89: cmc; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x0000000000057e9a: cmc; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x0000000000059872: cmc; mov rbx, rdi; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000005b047: cmc; push rcx; mov rbx, rdi; mov eax, 0x125; syscall; 
0x000000000005fcfa: cmc; push rdi; movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x00000000000778f2: cmc; pushfq; cmpsd dword ptr [rsi], dword ptr [rdi]; sahf; call qword ptr [rax + 3]; 
0x000000000006ce1e: cmc; ret; 
0x000000000009339d: cmc; sti; call qword ptr [rbx - 0xb]; 
0x000000000009339d: cmc; sti; call qword ptr [rbx - 0xb]; sti; jmp qword ptr [rax - 0xb]; 
0x00000000000933a5: cmc; sti; dec dword ptr [rsi - 7]; sti; jmp qword ptr [rax - 0xb]; 
0x00000000000585d4: cmc; sti; inc dword ptr [rbp - 0x16318b40]; ret; 
0x0000000000093399: cmc; sti; inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; 
0x00000000000933a1: cmc; sti; jmp qword ptr [rax - 0xb]; 
0x0000000000004cba: cmc; stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x0000000000071c60: cmc; xor esp, dword ptr [rbx + 2]; push 0x5d5735d2; ret 0xda8b; 
0x00000000000210c7: cmova eax, edi; ret; 
0x0000000000027644: cmova eax, edx; movsxd rdx, eax; movzx edx, word ptr [rcx + rdx*2]; cmp rdx, rdi; adc eax, 0; ret; 
0x00000000000234c4: cmova edx, eax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x00000000000234c3: cmova rdx, rax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x000000000002406e: cmovae eax, edx; ret; 
0x000000000002ceed: cmovb eax, dword ptr [rsi]; add al, bl; ret 0xcad8; 
0x0000000000092d2e: cmovb ebx, dword ptr [rbx]; or byte ptr [rdi], ch; mov cl, 0x2d; ret; 
0x0000000000022e3e: cmovbe eax, dword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000003b3b1: cmovbe eax, edi; ret; 
0x0000000000022e3d: cmovbe rax, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000058212: cmove eax, eax; ret; 
0x00000000000181f6: cmove eax, edx; ret; 
0x0000000000058211: cmove eax, r8d; ret; 
0x00000000000392d1: cmove ebx, eax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000024a74: cmove ebx, eax; mov rax, rdx; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000005b1e1: cmove ecx, eax; movsxd rdi, ecx; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005a964: cmove edi, eax; call 0x169c0; pop rdi; ret; 
0x0000000000026a43: cmove edi, edx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x0000000000040143: cmove edx, eax; mov eax, edx; add rsp, 0x28; ret; 
0x000000000004adfe: cmove edx, edi; cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x00000000000181f5: cmove rax, rdx; ret; 
0x00000000000392d0: cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000024a73: cmove rbx, rax; mov rax, rdx; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000005a963: cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x0000000000026a42: cmove rdi, rdx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000004adfd: cmove rdx, rdi; cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005830c: cmovg eax, edx; mov byte ptr [rdi + rax], 0; ret; 
0x000000000004a26d: cmovg eax, esi; mov dword ptr [r9 + 0x18], eax; sub eax, r8d; ret; 
0x000000000005830b: cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x00000000000168df: cmovl edx, eax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000168de: cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000001e9e8: cmovle eax, edx; and eax, 0x3f; ret; 
0x000000000003d170: cmovne eax, edx; add rsp, 0x18; ret; 
0x00000000000181d3: cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000057d62: cmovne eax, edx; pop rdx; ret; 
0x0000000000017a71: cmovne eax, edx; ret; 
0x000000000004b7e3: cmovne ebx, edx; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000057940: cmovne esi, eax; mov edx, 1; mov rax, r8; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000004ae02: cmovne esi, edi; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004ae02: cmovne esi, edi; mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000055b13: cmovne esi, edx; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000055b12: cmovne esi, r10d; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000003d16f: cmovne rax, rdx; add rsp, 0x18; ret; 
0x00000000000181d2: cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000017a70: cmovne rax, rdx; ret; 
0x000000000004ae01: cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004ae01: cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000005b201: cmovno edi, dword ptr [rdx + 1]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x00000000000378f6: cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x00000000000573ec: cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002d209: cmovs ebx, dword ptr [rax + 0x4100ff2]; ret; 
0x000000000002d228: cmovs ebx, dword ptr [rax + 0x4590ff2]; ret; 
0x0000000000054840: cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000005b21c: cmovs edi, dword ptr [rcx]; ret 0xb8; 
0x0000000000019690: cmovs edi, dword ptr [rcx]; sal dword ptr [rbp - 0x16], 1; xor eax, eax; ret; 
0x000000000003d932: cmovs edi, edi; ret; 
0x0000000000022719: cmovs esi, eax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000002368e: cmovs esp, dword ptr [rbx + 0x7a]; xor byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000022718: cmovs rsi, rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000021ec2: cmp al, 0; add byte ptr [rax], al; mov rax, rdx; syscall; 
0x0000000000057e21: cmp al, 0; add byte ptr [rax], al; syscall; 
0x0000000000055be4: cmp al, 0; add byte ptr [rax], al; xor edi, edi; mov rax, rdx; syscall; 
0x00000000000648b8: cmp al, 0; cld; jmp rax; 
0x000000000001d673: cmp al, 0x24; call 0x1d616; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001e049: cmp al, 0x24; call 0x1dfec; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x0000000000036367: cmp al, 0x24; call 0x288af; fchs; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002bec4: cmp al, 0x24; call 0x29aff; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000003a6e2: cmp al, 0x24; call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004cb8e: cmp al, 0x24; call rax; 
0x000000000003a27e: cmp al, 0x24; movsxd r10, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x000000000008dddf: cmp al, 0x31; ret; 
0x0000000000050d65: cmp al, 0x31; sal byte ptr [rcx], cl; test byte ptr [rcx + rcx*4 - 0x11], 0x41; call qword ptr [rbp + 0x48]; 
0x000000000008c720: cmp al, 0x38; sub al, 0xa7; in al, 0x89; ret 0x66bf; 
0x0000000000082002: cmp al, 0x55; ret 0xc390; 
0x000000000002fff0: cmp al, 0x77; adc edx, esi; movups xmm1, xmmword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000029f2b: cmp al, 0x85; fcmovnu st(0), st(1); ret 0x3074; 
0x00000000000481bd: cmp al, 0x86; add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x8b4c; 
0x000000000002a477: cmp al, 0x8f; add byte ptr [rax], al; call 0x333b7; addss xmm0, dword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x000000000008b187: cmp al, 0x9b; sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x000000000006264b: cmp al, 0xbb; or ch, byte ptr [rdx + 0x76]; out 0xae, al; in eax, dx; leave; ret 0x3b81; 
0x000000000003e140: cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000008d9bf: cmp al, 0xe6; ret 0xfe20; 
0x0000000000043972: cmp al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000028411: cmp al, byte ptr [rax]; je 0x28416; hlt; sub rax, rdi; ret; 
0x0000000000032d95: cmp al, byte ptr [rcx]; add byte ptr [rax], al; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003681e: cmp al, ch; mov edx, 0x48ffff35; add esp, 0x30; add rsp, 0x38; ret; 
0x000000000002b718: cmp ax, 0x7fff; movzx ecx, ax; jne 0x2b724; fadd st(0); ret; 
0x000000000002d6f8: cmp bh, 0xf; test byte ptr [rax + 0x3d000000], bh; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002d61e: cmp bh, 0xf; test byte ptr [rdi + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000043063: cmp bh, byte ptr [rax + 0x68]; syscall; 
0x0000000000092df3: cmp bh, byte ptr [rsi + 0x56]; pop rcx; sub eax, 0x31ad6446; ret 0x9dff; 
0x00000000000600f0: cmp bh, ch; je 0x600e8; ret 0x89bd; 
0x000000000003b465: cmp bh, dh; ret; 
0x000000000004274d: cmp bl, byte ptr [rdi]; add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x0000000000021753: cmp byte ptr [r10], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x276974; mov eax, 0xda; syscall; 
0x000000000004ba27: cmp byte ptr [r8 + 0x39], cl; sub byte ptr [r10 + r9 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000005aa87: cmp byte ptr [rax + 0x10d], bh; syscall; 
0x000000000002eb79: cmp byte ptr [rax + 0x21], cl; ret 0x2148; 
0x000000000004ba28: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r10 + r9 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000021474: cmp byte ptr [rax + 0x63], cl; jg 0x21481; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x000000000002067a: cmp byte ptr [rax + 0xc093], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000006d916: cmp byte ptr [rax - 0x641765a6], bl; ret 0x534f; 
0x000000000001fdcb: cmp byte ptr [rax - 0x76b79fad], cl; ret 0xc148; 
0x000000000002311d: cmp byte ptr [rax - 0x77], cl; fsubp st(0); call qword ptr [rsi + 1]; 
0x00000000000490c1: cmp byte ptr [rax - 0x77], cl; ret 0xff48; 
0x0000000000048903: cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000045847: cmp byte ptr [rax - 0x7d], cl; ret; 
0x0000000000017b27: cmp byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], 1; ror dword ptr [rax - 0x77], 1; ret 0x894c; 
0x0000000000017fb4: cmp byte ptr [rax], 0; jne 0x17fb0; sub rax, rdi; ret; 
0x00000000000181f1: cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x00000000000264aa: cmp byte ptr [rax], 0x3b; jne 0x264b4; mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x0000000000023095: cmp byte ptr [rax], 0xa; jne 0x2309d; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x000000000002fb44: cmp byte ptr [rax], al; add bl, dh; mulps xmm0, xmmword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x0000000000017fb5: cmp byte ptr [rax], al; jne 0x17fb0; sub rax, rdi; ret; 
0x00000000000181f2: cmp byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000005a900: cmp byte ptr [rax], al; setne al; add eax, dword ptr [rsp + 0x30]; add rsp, 0x48; ret; 
0x0000000000017a68: cmp byte ptr [rax], bl; mov edx, 0; pop rbx; cmovne rax, rdx; ret; 
0x000000000008c909: cmp byte ptr [rbp - 0x4063658b], 0xbf; ret 0xb7e4; 
0x000000000006238e: cmp byte ptr [rbx + 0x54], dl; jae 0x6239d; mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x0000000000030a8f: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000029f6b: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x000000000003a373: cmp byte ptr [rbx - 0x2d], cl; mov eax, 0x19; syscall; 
0x000000000003e3c6: cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x00000000000264ab: cmp byte ptr [rbx], bh; jne 0x264b4; mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x0000000000046422: cmp byte ptr [rcx + 0x39c0ffc1], cl; ret 0x4c7; 
0x0000000000038ef7: cmp byte ptr [rcx + 0x748b48ea], cl; and al, 8; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000002aab4: cmp byte ptr [rcx - 0x173e993e], cl; pcmpgtd mm0, qword ptr [rcx - 0x7680001e]; ret; 
0x0000000000056a06: cmp byte ptr [rcx - 0xa], al; ret 0x7408; 
0x000000000004abac: cmp byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000020cd2: cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000005af4c: cmp byte ptr [rcx], cl; je 0x5af56; mov dword ptr [rax], 0x19; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000033887: cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm2; ret; 
0x000000000003563a: cmp byte ptr [rdi + 0x76], 5; mulss xmm0, xmm1; ret; 
0x0000000000004928: cmp byte ptr [rdi + 0x772180d], dl; scasb al, byte ptr [rdi]; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x000000000003a7ec: cmp byte ptr [rdi], 0x2f; sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000008c721: cmp byte ptr [rdi], ch; in al, 0x89; ret 0x66bf; 
0x0000000000028410: cmp byte ptr [rdx], 0; je 0x28416; hlt; sub rax, rdi; ret; 
0x0000000000021754: cmp byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x276974; mov eax, 0xda; syscall; 
0x0000000000023096: cmp byte ptr [rdx], cl; jne 0x2309d; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x000000000002edd1: cmp byte ptr [rsi + 0x39], ah; ret; 
0x000000000004b0fc: cmp byte ptr [rsi], 0; jne 0x4b16d; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000006e5ab: cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x0000000000039d5c: cmp byte ptr [rsp + rsi*2], al; out 0x48, al; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000005a897: cmp ch, 0xff; call qword ptr [rax - 0x18]; 
0x000000000005fb78: cmp ch, ah; jp 0x5fb68; cli; sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x0000000000085bfa: cmp ch, byte ptr [rdx - 0x7c]; xchg eax, edi; sub ch, byte ptr [rax + 0x5c]; push rcx; ret; 
0x0000000000093398: cmp ch, dh; sti; inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; 
0x00000000000261ed: cmp cl, 0x20; je 0x261e8; ret; 
0x00000000000171df: cmp cl, al; jne 0x171f0; cmp rdx, rax; jne 0x171d0; xor eax, eax; ret; 
0x000000000003dc73: cmp cl, byte ptr [rax + 0x63]; ret 0x8944; 
0x000000000004a13e: cmp cl, byte ptr [rax - 0x73]; or byte ptr [r8 + 0x63], r9b; ret; 
0x000000000005ac85: cmp cl, byte ptr [rax - 0x77]; push rsp; and al, 8; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000004fc48: cmp cl, byte ptr [rax - 0x7d]; ret 0x8904; 
0x0000000000017b20: cmp cl, byte ptr [rax - 9]; ror byte ptr [rbp + rcx*4 + 4], cl; cmp byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], 1; ror dword ptr [rax - 0x77], 1; ret 0x894c; 
0x000000000000553c: cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x00000000000171de: cmp cl, r8b; jne 0x171f0; cmp rdx, rax; jne 0x171d0; xor eax, eax; ret; 
0x000000000002783c: cmp dh, ah; add byte ptr es:[rax + 0xc], bh; mov rdi, rbx; syscall; 
0x000000000003d883: cmp dh, byte ptr [rcx + 0x6348ffff]; sti; mov edx, eax; mov eax, 3; syscall; 
0x0000000000023582: cmp dh, byte ptr [rdi + rdi*8]; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x00000000000803c0: cmp dh, byte ptr [rdi - 0xd]; lea esi, [rcx*4 + 0x5e1694c1]; test dword ptr [rbx + 0x2c], edx; push rsp; ret; 
0x00000000000921eb: cmp dl, 0xd4; ret; 
0x000000000003e0e1: cmp dl, 0xff; jne 0x3e0ed; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x00000000000430e0: cmp dword ptr [r8 + 0x14], r15d; jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x000000000003f6c0: cmp dword ptr [rax + 0x10], ebx; jne 0x3f6b6; pop rbx; ret; 
0x00000000000430e1: cmp dword ptr [rax + 0x14], edi; jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x000000000003d4d0: cmp dword ptr [rax + 0x58], 0; je 0x3d4dd; add rax, 0xa0; ret; 
0x000000000008c12c: cmp dword ptr [rax + 0x61d64076], ebx; adc byte ptr [rbp + 0x6e], ch; cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x000000000008c12b: cmp dword ptr [rax + 0x61d64076], r11d; adc byte ptr [rbp + 0x6e], ch; cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x0000000000043194: cmp dword ptr [rax + 0x63], ecx; clc; mov rax, rbp; syscall; 
0x000000000003dd98: cmp dword ptr [rax + 0x753a017e], eax; mov word ptr [rax - 1], cs; ret; 
0x0000000000039281: cmp dword ptr [rax], 0x1c; jne 0x3928c; mov dword ptr [rax], 0xb; mov eax, ebx; pop rbx; ret; 
0x0000000000020cd1: cmp dword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000039d5b: cmp dword ptr [rax], 4; je 0x39d46; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000005af4b: cmp dword ptr [rax], 9; je 0x5af56; mov dword ptr [rax], 0x19; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000427e0: cmp dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000023a8f: cmp dword ptr [rbx + 0x10], 0; jne 0x23ab2; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000005b369: cmp dword ptr [rbx + 0x10], 0; jne 0x5b38c; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000004ba2a: cmp dword ptr [rbx + 0x28], eax; je 0x4ba39; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000006e5a4: cmp dword ptr [rbx + rcx*8 + 0x7d], -0x1f; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x000000000007fb69: cmp dword ptr [rbx - 0x407c417d], -0x7d; ret 0xc383; 
0x00000000000053ad: cmp dword ptr [rbx - 0x76], ecx; sub cl, bl; pushfq; call 0xffffffffde7fe464; ret 0x793b; 
0x000000000008c8e1: cmp dword ptr [rbx], ecx; pop rax; movabs rbx, 0xf9e424e0a0003ff1; ret 0xbf; 
0x0000000000078d86: cmp dword ptr [rcx - 0x68], edx; push rdx; xchg eax, edi; push rdx; ret; 
0x000000000004bee4: cmp dword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000003970a: cmp dword ptr [rdi + 0x14], 0; mov rsi, rdi; jg 0x39723; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000004bf18: cmp dword ptr [rdi + 0x20], 0; je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004becf: cmp dword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004bcaa: cmp dword ptr [rdi + 0x28], eax; je 0x4bcb6; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004d589: cmp dword ptr [rdi + 0x28], esi; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000004ed2c: cmp dword ptr [rdi + 0x60], 0; je 0x4ed3c; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000008ab38: cmp dword ptr [rdi + rax + 0x15200c00], esi; add al, bl; ret; 
0x000000000003ab3e: cmp dword ptr [rdi], 0; sete al; ret; 
0x0000000000054b04: cmp dword ptr [rdi], 0; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005273d: cmp dword ptr [rdi], ecx; xchg dword ptr [rbx + 0x48000005], ebp; lea ecx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000006f56c: cmp dword ptr [rdx - 0x21], edx; pop rbx; out 0x64, al; sub eax, 0xed7d2e67; push rax; ret; 
0x0000000000042973: cmp dword ptr [rdx], eax; add byte ptr [rax], al; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000005735b: cmp dword ptr [rdx], esi; je 0x57366; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000057d83: cmp dword ptr [rdx], esi; je 0x57d8e; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000003a5e3: cmp dword ptr [rsi + 0xc], 2; je 0x3a605; movsxd rdi, r12d; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000007fb6b: cmp dword ptr [rsi - 0x3d7c407d], -0x7d; ret; 
0x0000000000022e31: cmp dword ptr [rsp], 0x7fffffff; mov eax, 0x7fffffff; cmovbe rax, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000004ebc0: cmp eax, -0x15; jne 0x4ebcc; mov eax, 0x54; syscall; 
0x00000000000221fb: cmp eax, -0x16; jne 0x22212; mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000022246: cmp eax, -0x16; jne 0x2227d; xor r8d, r8d; mov rax, r9; mov rdx, r8; syscall; 
0x000000000001acb4: cmp eax, -0x26; jne 0x1acc3; mov esi, 1; mov rax, r9; syscall; 
0x000000000001ace9: cmp eax, -0x26; jne 0x1acf8; mov esi, 1; mov rax, r8; syscall; 
0x000000000001ad21: cmp eax, -0x26; jne 0x1ad30; mov esi, 1; mov rax, r8; syscall; 
0x000000000004b97b: cmp eax, -0x26; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b97b: cmp eax, -0x26; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004c216: cmp eax, -0x26; jne 0x4c223; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004cf1d: cmp eax, -0x26; jne 0x4cf2a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004daa0: cmp eax, -0x26; jne 0x4daad; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004db8a: cmp eax, -0x26; jne 0x4db97; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004e920: cmp eax, -0x26; jne 0x4e92d; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ea46: cmp eax, -0x26; jne 0x4ea53; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005465e: cmp eax, -0x26; jne 0x5466a; xor esi, esi; mov rax, r9; syscall; 
0x00000000000546b7: cmp eax, -0x26; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000546b7: cmp eax, -0x26; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x00000000000548ae: cmp eax, -0x26; jne 0x5489c; xor esi, esi; mov rax, r12; syscall; 
0x0000000000054d3d: cmp eax, -0x26; jne 0x54d47; mov rax, r8; syscall; 
0x0000000000054d71: cmp eax, -0x26; jne 0x54d7b; mov rax, r8; syscall; 
0x0000000000054dd7: cmp eax, -0x26; jne 0x54df9; mov rax, r8; syscall; 
0x0000000000054e3d: cmp eax, -0x26; jne 0x54e47; mov rax, r8; syscall; 
0x0000000000054ec1: cmp eax, -0x26; jne 0x54ece; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054f1f: cmp eax, -0x26; jne 0x54f08; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000054f78: cmp eax, -0x26; jne 0x54f85; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fea: cmp eax, -0x26; jne 0x54ff7; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fb2: cmp eax, -0x26; jne 0x5500a; mov esi, 1; mov rax, r9; syscall; 
0x000000000005503a: cmp eax, -0x26; jne 0x55047; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000552dc: cmp eax, -0x26; jne 0x552e6; mov rax, r8; syscall; 
0x00000000000552dc: cmp eax, -0x26; jne 0x552e6; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055327: cmp eax, -0x26; jne 0x55331; mov rax, r8; syscall; 
0x00000000000553b5: cmp eax, -0x26; jne 0x553bf; mov rax, r8; syscall; 
0x00000000000553b5: cmp eax, -0x26; jne 0x553bf; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005542a: cmp eax, -0x26; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005542a: cmp eax, -0x26; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005569e: cmp eax, -0x26; jne 0x556b6; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055760: cmp eax, -0x26; jne 0x5577a; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000055736: cmp eax, -0x26; jne 0x5577a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005598f: cmp eax, -0x26; jne 0x55999; mov rax, r8; syscall; 
0x000000000005598f: cmp eax, -0x26; jne 0x55999; mov rax, r8; syscall; ret; 
0x00000000000559de: cmp eax, -0x26; jne 0x559e8; mov rax, r8; syscall; 
0x00000000000559de: cmp eax, -0x26; jne 0x559e8; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055b1f: cmp eax, -0x26; jne 0x55aba; mov rax, r15; mov esi, 1; syscall; 
0x0000000000055bc7: cmp eax, -0x26; jne 0x55bd4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000560ed: cmp eax, -0x26; jne 0x560fa; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c1a: cmp eax, -0x26; jne 0x56c27; mov rax, rbp; mov rsi, rdx; syscall; 
0x0000000000056d3b: cmp eax, -0x26; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d3b: cmp eax, -0x26; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056dcc: cmp eax, -0x26; jne 0x56dff; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056fe6: cmp eax, -0x26; jne 0x56ff5; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057954: cmp eax, -0x26; jne 0x57961; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057df6: cmp eax, -0x26; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057df6: cmp eax, -0x26; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000022760: cmp eax, -1; cmove rax, rdx; ret; 
0x000000000004b10e: cmp eax, -9; mov r10, rax; jne 0x4b1a6; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000001f6a1: cmp eax, 0x10; jne 0x1f674; pop rbx; pop rbp; pop r12; ret; 
0x00000000000549a4: cmp eax, 0x10; setne dl; inc edx; mov eax, edx; pop rdx; ret; 
0x0000000000004636: cmp eax, 0x1a44a900; ret; 
0x000000000001fe3f: cmp eax, 0x20; jne 0x1fe12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000275bb: cmp eax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000004931: cmp eax, 0x22b0f347; xchg eax, ebp; ret; 
0x000000000005be4c: cmp eax, 0x23c0ef; ret; 
0x0000000000058e2a: cmp eax, 0x23f1b9; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000559d0: cmp eax, 0x2426ff; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055981: cmp eax, 0x24274e; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004ea31: cmp eax, 0x246976; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004db75: cmp eax, 0x247732; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004df6e: cmp eax, 0x24a055; push rax; call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000042747: cmp eax, 0x255870; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000427d5: cmp eax, 0x2558fe; call 0x545dd; mov eax, 0x39; syscall; 
0x0000000000021fac: cmp eax, 0x275fc3; mov dword ptr [rip + 0x275fc1], eax; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x000000000002175b: cmp eax, 0x276974; mov eax, 0xda; syscall; 
0x000000000001ad0c: cmp eax, 0x27d3bf; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005ee83: cmp eax, 0x34916; push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x0000000000078910: cmp eax, 0x3f5b3e5b; pop rbx; ret; 
0x0000000000037867: cmp eax, 0x3ffd9400; ja 0x37871; fyl2xp1; ret; 
0x0000000000020739: cmp eax, 0x40; jne 0x206d6; pop rbx; pop rbp; pop r12; ret; 
0x000000000002fb53: cmp eax, 0x48000632; add esp, 0x18; ret; 
0x0000000000090f50: cmp eax, 0x4a121583; ret; 
0x000000000005af7f: cmp eax, 0x5afffbba; ret; 
0x000000000008b18f: cmp eax, 0x68497682; ret 0x3c25; 
0x0000000000023039: cmp eax, 0x6db12; mov esi, 0x11; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000002d626: cmp eax, 0x7f7; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d700: cmp eax, 0x7f7; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x0000000000032db5: cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x000000000002de07: cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x0000000000035637: cmp eax, 0x7f800000; jbe 0x35643; mulss xmm0, xmm1; ret; 
0x0000000000032bdc: cmp eax, 0x7fefffff; jbe 0x32be4; ret; 
0x000000000003b957: cmp eax, 0x8402b60f; sal byte ptr [rbp + 7], 0x48; sub edx, edi; lea eax, [rdx + 1]; ret; 
0x000000000004b013: cmp eax, 0xa000; je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b078: cmp eax, 0xa000; je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x0000000000059111: cmp eax, 0xb8fd6348; in al, 0; add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x0000000000057ce9: cmp eax, 0xb; sete dl; add edx, 2; mov eax, edx; pop rdx; ret; 
0x000000000008db2b: cmp eax, 0xbc8f4176; push rdx; xor ebx, dword ptr [rcx + 0x1c]; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x000000000003da31: cmp eax, 0xbf; mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x00000000000223fd: cmp eax, 0xc00; je 0x22407; or edx, 0xffffffff; mov eax, edx; pop rdx; ret; 
0x000000000005fd67: cmp eax, 0xcf62a1f2; lea ebx, es:[rbx - 0x60]; or dword ptr [rax - 0x38495c04], 0xffffffc1; ret; 
0x000000000001cb40: cmp eax, 0xdb0001ad; insb byte ptr [rdi], dx; and al, 0x10; fxch st(1); add rsp, 0x58; ret; 
0x0000000000063a32: cmp eax, 0xffc718d6; ret; 
0x0000000000019b93: cmp eax, 1; mov dword ptr [rdi + 4], esi; je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000212fc: cmp eax, 1; sbb eax, eax; add eax, 2; ret; 
0x0000000000056f79: cmp eax, 1; sbb eax, eax; not eax; and eax, 0x10; ret; 
0x000000000002124a: cmp eax, 1; sbb rdx, rdx; and edx, 2; mov rax, rdx; pop rbx; ret; 
0x000000000001b29f: cmp eax, 2; jne 0x1b2f1; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000005514b: cmp eax, 3; jne 0x55154; syscall; 
0x000000000004310c: cmp eax, 4; ja 0x431ce; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x000000000005abc6: cmp eax, 4; jne 0x5aba8; movsxd rdi, dword ptr [rsp + 0x10]; mov eax, 3; syscall; 
0x0000000000058303: cmp eax, 6; mov edx, 6; cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000018a7f: cmp eax, 9; jbe 0x18af6; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x000000000004f498: cmp eax, dword ptr [rax + rax]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000042bc1: cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003e3c7: cmp eax, dword ptr [rax]; sete al; pop rbx; ret; 
0x000000000008f785: cmp eax, dword ptr [rax]; test al, 1; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000018e21: cmp eax, dword ptr [rcx]; add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000001968d: cmp eax, eax; jne 0x196a0; cmp rcx, rdx; jne 0x19680; xor eax, eax; ret; 
0x000000000002e4b8: cmp eax, ecx; je 0x2e4c5; test eax, eax; je 0x2e4da; movapd xmm0, xmm1; ret; 
0x0000000000035061: cmp eax, ecx; je 0x350aa; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003521d: cmp eax, ecx; je 0x35261; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001e332: cmp eax, ecx; mov dword ptr [rcx - 4], ebx; ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x000000000003558b: cmp eax, edx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000004d6e7: cmp eax, edx; jne 0x4d6ef; or eax, 0xffffffff; ret; 
0x0000000000026a4e: cmp eax, edx; mov rdx, -1; cmove rax, rdx; ret; 
0x0000000000028275: cmp eax, edx; setb al; movzx eax, al; pop rbx; ret; 
0x000000000002ddf5: cmp eax, edx; setbe al; movzx eax, al; ret; 
0x0000000000043191: cmp eax, esi; je 0x431ce; movsxd rdi, eax; mov rax, rbp; syscall; 
0x000000000001968c: cmp eax, r8d; jne 0x196a0; cmp rcx, rdx; jne 0x19680; xor eax, eax; ret; 
0x0000000000055c65: cmp ebp, 0x4850ffff; mov eax, edi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023c81: cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; 
0x0000000000023c81: cmp ebp, dword ptr [rip + 0x6348ffff]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x000000000004e793: cmp ebp, edi; dec dword ptr [rax + 0x63]; jl 0x4e746; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000015a29: cmp ebx, 0x1f0fffff; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000039827: cmp ebx, 0x2f; jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x000000000002399f: cmp ebx, 2; ja 0x239a8; mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000005489e: cmp ebx, eax; jne 0x548bc; xor r10d, r10d; mov rax, rbp; mov rsi, r9; syscall; 
0x00000000000299d3: cmp ebx, ebx; jnp 0x299e7; add rsp, 0x78; pop rbx; pop rbp; ret; 
0x0000000000020caa: cmp ecx, -1; jne 0x20c9b; add rsp, 0x90; pop rbx; ret; 
0x000000000004ab44: cmp ecx, 0x3f; ja 0x4ab52; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000033883: cmp ecx, 0x7f800000; jbe 0x33890; addss xmm0, xmm2; ret; 
0x0000000000046309: cmp ecx, 0xff; jle 0x462ef; ret; 
0x000000000002488f: cmp ecx, dword ptr [rax + 0xf]; mov r8d, 0x2ebe; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x000000000004b588: cmp ecx, dword ptr [rax - 0x77]; ret 0x1877; 
0x000000000004b563: cmp ecx, dword ptr [rax - 0x77]; ret 0x3d77; 
0x0000000000046150: cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000002e515: cmp ecx, eax; je 0x2e521; test edx, edx; jns 0x2e535; movaps xmm0, xmm1; ret; 
0x0000000000017073: cmp ecx, eax; jne 0x17060; xor eax, eax; pop rbx; ret; 
0x0000000000024064: cmp ecx, eax; mov eax, 0xffffffff; seta dl; cmovae eax, edx; ret; 
0x000000000004a26b: cmp ecx, edx; cmovg eax, esi; mov dword ptr [r9 + 0x18], eax; sub eax, r8d; ret; 
0x0000000000054c29: cmp ecx, edx; ja 0x54c3a; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x000000000004bf70: cmp ecx, edx; je 0x4bf7d; sub rdx, rcx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x00000000000190e5: cmp ecx, edx; jne 0x190c0; xor eax, eax; ret; 
0x0000000000019692: cmp ecx, edx; jne 0x19680; xor eax, eax; ret; 
0x00000000000550c8: cmp ecx, esi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000003a83d: cmp edi, -1; je 0x3a84c; movsx eax, dil; and eax, 0xdfff; ret; 
0x000000000002ef92: cmp edi, 0x1375ffff; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x0000000000020d1b: cmp edi, 0x19; setbe al; ret; 
0x0000000000020dcb: cmp edi, 0x20; sete al; or eax, edx; movzx eax, al; ret; 
0x0000000000020e47: cmp edi, 0x2fffd; setbe al; ret; 
0x0000000000030587: cmp edi, 0x32ffffff; ja 0x3059f; movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ffeb: cmp edi, 0x3c8fffff; ja 0x30004; movsd xmm1, qword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000053d18: cmp edi, 0x5cd9ffff; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000020d74: cmp edi, 0x5d; setbe al; ret; 
0x0000000000020d96: cmp edi, 0x5e; setbe al; ret; 
0x000000000001e9e5: cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x000000000002fa36: cmp edi, 0x7f7fffff; jbe 0x2fa4e; movss xmm1, dword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003b383: cmp edi, 0x7f; ja 0x3b38b; mov eax, edi; ret; 
0x0000000000020d4d: cmp edi, 0x7f; sete al; or eax, edx; movzx eax, al; ret; 
0x0000000000021346: cmp edi, 0xee; seta al; ret; 
0x0000000000020fe3: cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x00000000000169c1: cmp edi, 0xfffff000; ja 0x169d0; mov rax, rdi; ret; 
0x0000000000034337: cmp edi, 1; sbb eax, eax; not eax; add eax, 2; ret; 
0x0000000000057176: cmp edi, 1; sbb eax, eax; not eax; and eax, 0xb; ret; 
0x0000000000020e85: cmp edi, 2; setbe al; ret; 
0x0000000000021089: cmp edi, 5; setbe al; ret; 
0x0000000000051f22: cmp edi, 7; ja 0x51b11; lea rax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x0000000000020d07: cmp edi, 9; setbe al; ret; 
0x0000000000020d36: cmp edi, 9; sete al; or eax, edx; movzx eax, al; ret; 
0x000000000004084b: cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x0000000000040874: cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005be42: cmp edi, eax; je 0x5be51; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000026042: cmp edi, edx; setne dl; movzx edx, dl; and eax, edx; ret; 
0x0000000000043141: cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x00000000000561c7: cmp edi, esi; sete al; ret; 
0x00000000000210c4: cmp edx, 0x19; cmova eax, edi; ret; 
0x0000000000035501: cmp edx, 0x5d93ffd; mov edx, ebx; add eax, 0xde0d7700; ret 0xc9d9; 
0x000000000003b3ae: cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x000000000003da09: cmp edx, 0x7f; ja 0x3da16; mov eax, edi; and eax, 0xffffff; ret; 
0x000000000003da1a: cmp edx, 0xbf; movzx edi, di; cmovbe eax, edi; ret; 
0x000000000002899c: cmp edx, 1; sbb eax, eax; add eax, 3; ret; 
0x0000000000057d41: cmp edx, 1; sbb eax, eax; not eax; and eax, 0xfffffffe; pop rdx; ret; 
0x0000000000021988: cmp edx, 3; jne 0x21971; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x000000000003a40d: cmp edx, 4; je 0x3a41e; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000506b8: cmp edx, 7; ja 0x50302; lea rax, [rip + 0x42a58]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000046304: cmp edx, 9; ja 0x46311; cmp ecx, 0xff; jle 0x462ef; ret; 
0x00000000000171e4: cmp edx, eax; jne 0x171d0; xor eax, eax; ret; 
0x0000000000056f5b: cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a3c: cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x000000000002368b: cmp edx, ebp; je 0x2369e; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000026fba: cmp edx, ecx; jbe 0x26fbf; hlt; ret; 
0x000000000002764f: cmp edx, edi; adc eax, 0; ret; 
0x00000000000337ca: cmp edx, edi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000022e47: cmp esi, 0; jg 0x22e55; setne al; movzx eax, al; neg eax; ret; 
0x0000000000039d58: cmp esi, 0x43883ff; je 0x39d46; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003c5c5: cmp esi, 0xa; je 0x3c5d6; ret; 
0x0000000000020e9b: cmp esi, 0xb; ja 0x20ef3; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000054b8b: cmp esi, 1; mov eax, 0x16; ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bb6: cmp esi, 1; mov eax, 0x16; ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005700c: cmp esi, 1; mov eax, 0x16; ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x00000000000444d6: cmp esi, 2; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000050de1: cmp esi, 5; ja 0x50e03; lea rax, [rip + 0x4235b]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000016eb1: cmp esi, 7; mov eax, 0x16; ja 0x16ec0; ret; 
0x00000000000264ac: cmp esi, dword ptr [rbp + 5]; mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x0000000000045091: cmp esi, dword ptr [rcx]; test byte ptr [rbp - 0x72b7feb8], 0x2c; ret 0xd231; 
0x000000000004c156: cmp esi, eax; je 0x4c168; sub rsi, rax; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000017b5b: cmp esi, eax; jne 0x17b50; mov rax, rbx; pop rbx; ret; 
0x00000000000168dc: cmp esi, ecx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000003b972: cmp esi, ecx; jbe 0x3b998; sub rdx, rdi; lea eax, [rdx + 2]; ret; 
0x0000000000054bab: cmp esi, edx; ja 0x54bb5; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000004c8f3: cmp esi, edx; jg 0x4c8ad; add rax, rsi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000004e0d8: cmp esi, edx; jg 0x4e08b; add rax, rsi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x0000000000050fc2: cmp esp, dword ptr [rip - 0xb7c88b]; ret; 
0x000000000003d4cf: cmp qword ptr [rax + 0x58], 0; je 0x3d4dd; add rax, 0xa0; ret; 
0x0000000000020cd0: cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000004ba29: cmp qword ptr [rbx + 0x28], rax; je 0x4ba39; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004bee3: cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004bf17: cmp qword ptr [rdi + 0x20], 0; je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004bece: cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004bca9: cmp qword ptr [rdi + 0x28], rax; je 0x4bcb6; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004d588: cmp qword ptr [rdi + 0x28], rsi; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000004ed2b: cmp qword ptr [rdi + 0x60], 0; je 0x4ed3c; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000004ab37: cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000005735a: cmp qword ptr [rdx], rsi; je 0x57366; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000057d82: cmp qword ptr [rdx], rsi; je 0x57d8e; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000022e30: cmp qword ptr [rsp], 0x7fffffff; mov eax, 0x7fffffff; cmovbe rax, qword ptr [rsp]; add rsp, 0x18; ret; 
0x00000000000506b7: cmp r10d, 7; ja 0x50302; lea rax, [rip + 0x42a58]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000039826: cmp r11d, 0x2f; jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000051f21: cmp r15d, 7; ja 0x51b11; lea rax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x0000000000019b92: cmp r8, 1; mov dword ptr [rdi + 4], esi; je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001e331: cmp r8, rcx; mov dword ptr [rcx - 4], ebx; ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x0000000000035060: cmp r8d, ecx; je 0x350aa; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003521c: cmp r8d, ecx; je 0x35261; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001acb3: cmp rax, -0x26; jne 0x1acc3; mov esi, 1; mov rax, r9; syscall; 
0x000000000001ace8: cmp rax, -0x26; jne 0x1acf8; mov esi, 1; mov rax, r8; syscall; 
0x000000000001ad20: cmp rax, -0x26; jne 0x1ad30; mov esi, 1; mov rax, r8; syscall; 
0x000000000004b97a: cmp rax, -0x26; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b97a: cmp rax, -0x26; jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004c215: cmp rax, -0x26; jne 0x4c223; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004cf1c: cmp rax, -0x26; jne 0x4cf2a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004da9f: cmp rax, -0x26; jne 0x4daad; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004db89: cmp rax, -0x26; jne 0x4db97; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004e91f: cmp rax, -0x26; jne 0x4e92d; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ea45: cmp rax, -0x26; jne 0x4ea53; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005465d: cmp rax, -0x26; jne 0x5466a; xor esi, esi; mov rax, r9; syscall; 
0x00000000000546b6: cmp rax, -0x26; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000546b6: cmp rax, -0x26; jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x00000000000548ad: cmp rax, -0x26; jne 0x5489c; xor esi, esi; mov rax, r12; syscall; 
0x0000000000054d3c: cmp rax, -0x26; jne 0x54d47; mov rax, r8; syscall; 
0x0000000000054d70: cmp rax, -0x26; jne 0x54d7b; mov rax, r8; syscall; 
0x0000000000054dd6: cmp rax, -0x26; jne 0x54df9; mov rax, r8; syscall; 
0x0000000000054e3c: cmp rax, -0x26; jne 0x54e47; mov rax, r8; syscall; 
0x0000000000054ec0: cmp rax, -0x26; jne 0x54ece; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054f1e: cmp rax, -0x26; jne 0x54f08; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000054f77: cmp rax, -0x26; jne 0x54f85; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fe9: cmp rax, -0x26; jne 0x54ff7; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fb1: cmp rax, -0x26; jne 0x5500a; mov esi, 1; mov rax, r9; syscall; 
0x0000000000055039: cmp rax, -0x26; jne 0x55047; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000552db: cmp rax, -0x26; jne 0x552e6; mov rax, r8; syscall; 
0x00000000000552db: cmp rax, -0x26; jne 0x552e6; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055326: cmp rax, -0x26; jne 0x55331; mov rax, r8; syscall; 
0x00000000000553b4: cmp rax, -0x26; jne 0x553bf; mov rax, r8; syscall; 
0x00000000000553b4: cmp rax, -0x26; jne 0x553bf; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055429: cmp rax, -0x26; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055429: cmp rax, -0x26; jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005569d: cmp rax, -0x26; jne 0x556b6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005575f: cmp rax, -0x26; jne 0x5577a; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000055735: cmp rax, -0x26; jne 0x5577a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005598e: cmp rax, -0x26; jne 0x55999; mov rax, r8; syscall; 
0x000000000005598e: cmp rax, -0x26; jne 0x55999; mov rax, r8; syscall; ret; 
0x00000000000559dd: cmp rax, -0x26; jne 0x559e8; mov rax, r8; syscall; 
0x00000000000559dd: cmp rax, -0x26; jne 0x559e8; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055b1e: cmp rax, -0x26; jne 0x55aba; mov rax, r15; mov esi, 1; syscall; 
0x0000000000055bc6: cmp rax, -0x26; jne 0x55bd4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000560ec: cmp rax, -0x26; jne 0x560fa; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c19: cmp rax, -0x26; jne 0x56c27; mov rax, rbp; mov rsi, rdx; syscall; 
0x0000000000056d3a: cmp rax, -0x26; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d3a: cmp rax, -0x26; jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056dcb: cmp rax, -0x26; jne 0x56dff; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056fe5: cmp rax, -0x26; jne 0x56ff5; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057953: cmp rax, -0x26; jne 0x57961; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057df5: cmp rax, -0x26; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057df5: cmp rax, -0x26; jne 0x57e05; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000002275f: cmp rax, -1; cmove rax, rdx; ret; 
0x000000000001f6a0: cmp rax, 0x10; jne 0x1f674; pop rbx; pop rbp; pop r12; ret; 
0x000000000001fe3e: cmp rax, 0x20; jne 0x1fe12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000275ba: cmp rax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000004930: cmp rax, 0x22b0f347; xchg eax, ebp; ret; 
0x0000000000020738: cmp rax, 0x40; jne 0x206d6; pop rbx; pop rbp; pop r12; ret; 
0x000000000005514a: cmp rax, 3; jne 0x55154; syscall; 
0x000000000005abc5: cmp rax, 4; jne 0x5aba8; movsxd rdi, dword ptr [rsp + 0x10]; mov eax, 3; syscall; 
0x000000000003558a: cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000004d6e6: cmp rax, rdx; jne 0x4d6ef; or eax, 0xffffffff; ret; 
0x0000000000026a4d: cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x0000000000028274: cmp rax, rdx; setb al; movzx eax, al; pop rbx; ret; 
0x000000000002ddf4: cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x0000000000017072: cmp rcx, r8; jne 0x17060; xor eax, eax; pop rbx; ret; 
0x0000000000054c28: cmp rcx, rdx; ja 0x54c3a; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x000000000004bf6f: cmp rcx, rdx; je 0x4bf7d; sub rdx, rcx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x00000000000190e4: cmp rcx, rdx; jne 0x190c0; xor eax, eax; ret; 
0x0000000000019691: cmp rcx, rdx; jne 0x19680; xor eax, eax; ret; 
0x00000000000550c7: cmp rcx, rsi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x00000000000169c0: cmp rdi, -0x1000; ja 0x169d0; mov rax, rdi; ret; 
0x000000000005be41: cmp rdi, rax; je 0x5be51; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000026041: cmp rdi, rdx; setne dl; movzx edx, dl; and eax, edx; ret; 
0x00000000000561c6: cmp rdi, rsi; sete al; ret; 
0x000000000002899b: cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x0000000000021987: cmp rdx, 3; jne 0x21971; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x00000000000171e3: cmp rdx, rax; jne 0x171d0; xor eax, eax; ret; 
0x000000000002368a: cmp rdx, rbp; je 0x2369e; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000026fb9: cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x000000000002764e: cmp rdx, rdi; adc eax, 0; ret; 
0x00000000000337c9: cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000020e9a: cmp rsi, 0xb; ja 0x20ef3; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000016eb0: cmp rsi, 7; mov eax, 0x16; ja 0x16ec0; ret; 
0x000000000004c155: cmp rsi, rax; je 0x4c168; sub rsi, rax; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x00000000000168db: cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000003b971: cmp rsi, rcx; jbe 0x3b998; sub rdx, rdi; lea eax, [rdx + 2]; ret; 
0x0000000000054baa: cmp rsi, rdx; ja 0x54bb5; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000004c8f2: cmp rsi, rdx; jg 0x4c8ad; add rax, rsi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000004e0d7: cmp rsi, rdx; jg 0x4e08b; add rax, rsi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x0000000000049b62: cmpsb byte ptr [rsi], byte ptr [rdi]; add byte ptr [rax], al; mov eax, ebx; neg eax; pop rbx; ret; 
0x000000000004191f: cmpsb byte ptr [rsi], byte ptr [rdi]; add byte ptr [rax], al; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000049b2b: cmpsb byte ptr [rsi], byte ptr [rdi]; add byte ptr [rax], al; movsxd rdi, ebx; call 0x169c0; pop rbx; ret; 
0x000000000005c58e: cmpsb byte ptr [rsi], byte ptr [rdi]; mov ecx, 0x89480023; jo 0x5c5df; add esp, 0x110; pop rbx; ret; 
0x000000000006060f: cmpsb byte ptr [rsi], byte ptr [rdi]; sub eax, 0x9f3f0925; out 8, al; ret 0x6132; 
0x0000000000023c16: cmpsb byte ptr [rsi], byte ptr [rdi]; sub eax, 0xc35affff; push rax; mov eax, 0xa8; syscall; 
0x000000000008c135: cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x000000000004191e: cmpsb byte ptr gs:[rsi], byte ptr [rdi]; add byte ptr [rax], al; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000049983: cmpsd dword ptr [rsi], dword ptr [rdi]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000049248: cmpsd dword ptr [rsi], dword ptr [rdi]; add dword ptr [rax], eax; add bl, ch; ret; 
0x0000000000062208: cmpsd dword ptr [rsi], dword ptr [rdi]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x000000000008c723: cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x000000000005bc6d: cmpsd dword ptr [rsi], dword ptr [rdi]; ret 0x23; 
0x00000000000778f4: cmpsd dword ptr [rsi], dword ptr [rdi]; sahf; call qword ptr [rax + 3]; 
0x0000000000056aa8: cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000005498b: cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000054959: cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566e1: cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x0000000000056f58: cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a39: cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x0000000000056f76: cmpxchg dword ptr [rdi], edx; cmp eax, 1; sbb eax, eax; not eax; and eax, 0x10; ret; 
0x00000000000573cb: cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000573bb: cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x573b6; ret; 
0x000000000003f96b: cqo; idiv rcx; add rax, rsi; ret; 
0x0000000000053680: cqo; idiv rsi; ret; 
0x000000000007188e: cqo; push -0x67; ret; 
0x000000000003331f: cvtpi2ps xmm0, mm0; pop rax; ret; 
0x00000000000332b7: cvtpi2ps xmm0, mm2; addsd xmm0, qword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000059207: cvtpi2ps xmm0, mm7; ret; 
0x000000000002c341: cvtpi2ps xmm2, mm0; divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002c8c8: cvtpi2ps xmm2, mm0; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x0000000000037814: cvtps2pd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d2c6: cvtps2pd xmm0, xmm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000036bef: cvtps2pd xmm0, xmm0; pop rdx; ret; 
0x0000000000036be5: cvtps2pd xmm0, xmm0; push rax; call 0x3682d; cvtsd2ss xmm0, xmm0; pop rdx; ret; 
0x00000000000288ab: cvtps2pd xmm0, xmm0; ret; 
0x0000000000030444: cvtps2pd xmm0, xmm5; ret; 
0x0000000000032bc1: cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b6fd: cvtps2pd xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x00000000000296db: cvtps2pd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000037837: cvtps2pi mm0, xmm0; ret; 
0x0000000000037835: cvtsd2si rax, xmm0; ret; 
0x0000000000037813: cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d2c5: cvtsd2ss xmm0, xmm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000036bee: cvtsd2ss xmm0, xmm0; pop rdx; ret; 
0x00000000000288aa: cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030443: cvtsd2ss xmm0, xmm5; ret; 
0x0000000000032bc0: cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b6fc: cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000003331e: cvtsi2sd xmm0, eax; pop rax; ret; 
0x00000000000332b6: cvtsi2sd xmm0, edx; addsd xmm0, qword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000059205: cvtsi2sd xmm0, rdi; ret; 
0x000000000002c340: cvtsi2sd xmm2, eax; divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003335f: cvtsi2ss xmm0, eax; pop rax; ret; 
0x000000000002c8c7: cvtsi2ss xmm2, eax; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x0000000000036be4: cvtss2sd xmm0, xmm0; push rax; call 0x3682d; cvtsd2ss xmm0, xmm0; pop rdx; ret; 
0x00000000000296da: cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x000000000003783b: cvtss2si rax, xmm0; ret; 
0x00000000000324e4: cvttps2pi mm0, xmm0; ret; 
0x00000000000324e2: cvttsd2si rax, xmm0; ret; 
0x00000000000324ef: cvttss2si rax, xmm0; ret; 
0x0000000000023045: cwde; add al, byte ptr [rax]; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000002141f: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; rcr byte ptr [rbx + 0x5d], 1; ret; 
0x0000000000037616: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000034f22: cwde; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004a78f: cwde; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000004ae32: cwde; add byte ptr [rax], al; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000093440: cwde; cld; call qword ptr [rsi]; 
0x000000000006d915: cwde; cmp byte ptr [rax - 0x641765a6], bl; ret 0x534f; 
0x000000000007188d: cwde; cqo; push -0x67; ret; 
0x00000000000832ad: cwde; ficomp dword ptr [rax + 0x5f406bb3]; ret 0xf36b; 
0x00000000000832ab: cwde; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x00000000000832af: cwde; mov bl, 0x6b; pop rdi; ret 0xf36b; 
0x0000000000044b4a: cwde; mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000008368d: cwde; mov edi, 0xc198c098; cwde; ret 0xc398; 
0x0000000000083687: cwde; mov esp, 0xbe98bd98; cwde; mov edi, 0xc198c098; cwde; ret 0xc398; 
0x0000000000059371: cwde; mov qword ptr [rbx + 8], rax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000044b5c: cwde; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000021fb8: cwde; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000078ce7: cwde; movsxd rbx, dword ptr [rax - 0x673e67a1]; ret 0x5098; 
0x000000000006e36b: cwde; out dx, eax; cwde; ret; 
0x000000000007144c: cwde; pop r15; pop rax; ret; 
0x0000000000022089: cwde; pop rax; pop rbx; pop rbp; ret; 
0x00000000000481ae: cwde; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002073d: cwde; pop rbx; pop rbp; pop r12; ret; 
0x000000000002e5b3: cwde; pop rbx; ret; 
0x000000000001e0b5: cwde; pop rdx; ret; 
0x0000000000086158: cwde; push rax; ret 0x7153; 
0x0000000000078d88: cwde; push rdx; xchg eax, edi; push rdx; ret; 
0x00000000000832a5: cwde; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x00000000000832a7: cwde; rcr dword ptr [rax - 0x6726672b], cl; ficomp dword ptr [rax + 0x5f406bb3]; ret 0xf36b; 
0x0000000000078ced: cwde; ret 0x5098; 
0x0000000000005e57: cwde; ret 0x975; 
0x000000000006cd9c: cwde; ret 0xc29b; 
0x0000000000083693: cwde; ret 0xc398; 
0x0000000000026ff6: cwde; ret; 
0x0000000000092bf4: cwde; retf 0x3e4c; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x0000000000074039: cwde; scasb al, byte ptr [rdi]; cdq; lodsd eax, dword ptr [rsi]; cdq; ret; 
0x000000000001f7e4: dec byte ptr [rax - 0x77]; fild word ptr [rbx - 0x76b7fc40]; ret 0x8948; 
0x00000000000274a1: dec byte ptr [rax - 0x77]; ret 0xf48; 
0x0000000000020e9c: dec byte ptr [rbx]; ja 0x20ef3; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x000000000004315c: dec byte ptr [rcx + rcx*4 - 0xa]; movsxd rdx, eax; mov rax, r12; syscall; 
0x0000000000017e88: dec byte ptr [rcx - 0x77]; ret 0x8d4e; 
0x000000000003c5c6: dec byte ptr [rdx]; je 0x3c5d6; ret; 
0x000000000008dbac: dec dword ptr [r10 - 0x78e9bfc4]; stc; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x0000000000058ae0: dec dword ptr [r8 + 0x39]; ret 0x840f; 
0x00000000000424ad: dec dword ptr [r8 - 0x77]; add eax, 0x2559a2; ret; 
0x00000000000548c2: dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000009429f: dec dword ptr [rax + 0x20000000]; pop rdi; clc; jmp qword ptr [rax]; 
0x0000000000017bf1: dec dword ptr [rax + 0x29]; call 0x28c5ff41; pop rbx; pop rbp; ret; 
0x0000000000058641: dec dword ptr [rax + 0x29]; ret; 
0x000000000001e178: dec dword ptr [rax + 0x39]; ret 0x840f; 
0x00000000000226e2: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x0000000000023c84: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000226e2: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x0000000000023543: dec dword ptr [rax + 0x63]; call qword ptr [rax - 0x77]; 
0x0000000000023543: dec dword ptr [rax + 0x63]; call qword ptr [rax - 0x77]; sar byte ptr [rax + 0xfe], cl; syscall; 
0x00000000000387da: dec dword ptr [rax + 0x63]; call qword ptr [rcx - 0x77]; 
0x00000000000387da: dec dword ptr [rax + 0x63]; call qword ptr [rcx - 0x77]; idiv byte ptr [rax + 0x8c]; syscall; 
0x000000000004b9f8: dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x00000000000406d1: dec dword ptr [rax + 0x63]; div byte ptr [rcx]; sar byte ptr [rax + 0x30], cl; syscall; 
0x000000000003df47: dec dword ptr [rax + 0x63]; div byte ptr [rcx]; sar byte ptr [rax + 0x32], cl; syscall; 
0x0000000000023c72: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x114]; syscall; 
0x0000000000023459: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x11d]; syscall; 
0x0000000000023ca3: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x11e]; syscall; 
0x00000000000238fc: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x12e]; syscall; 
0x0000000000023a33: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x28]; syscall; 
0x000000000004e795: dec dword ptr [rax + 0x63]; jl 0x4e746; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000004e7d0: dec dword ptr [rax + 0x63]; jl 0x4e781; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000005ab93: dec dword ptr [rax + 0x63]; jl 0x5abbc; adc al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000004d342: dec dword ptr [rax + 0x63]; jnp 0x4d3bf; mov esi, 4; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000003f058: dec dword ptr [rax + 0x63]; ret; 
0x000000000005b269: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x108], cl; syscall; 
0x000000000005af8e: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x109], cl; syscall; 
0x0000000000023bd1: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x113], cl; syscall; 
0x0000000000023333: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x146], cl; syscall; 
0x000000000005aacb: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1b7], cl; syscall; 
0x000000000002271e: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1d], cl; syscall; 
0x00000000000226d0: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1e], cl; syscall; 
0x0000000000023d2f: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x3d], cl; syscall; 
0x00000000000239b4: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0xb3], cl; syscall; 
0x000000000005afa5: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 8], cl; syscall; 
0x000000000003d59a: dec dword ptr [rax + 0x63]; sti; mov edx, eax; mov eax, 3; syscall; 
0x00000000000406ad: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x36; syscall; 
0x000000000003d4ae: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x37; syscall; 
0x0000000000022689: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x000000000002265a: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x42; syscall; 
0x0000000000023383: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0xe9; syscall; 
0x000000000005a9a4: dec dword ptr [rax + 0x63]; test byte ptr [rcx + rcx*4 - 0x40], 0xf; add eax, 0x89f0f883; ret 0xf474; 
0x00000000000181e8: dec dword ptr [rax + 1]; fdivr dword ptr [rdx]; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x000000000002e856: dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032705: dec dword ptr [rax + 1]; ret 0xff2; 
0x00000000000188cb: dec dword ptr [rax + 1]; ret; 
0x000000000004aa3c: dec dword ptr [rax - 0x2d]; ror byte ptr [rax + 0x21], 7; xor eax, eax; pop rdx; ret; 
0x000000000005da21: dec dword ptr [rax - 0x39]; add eax, 0x23a4bb; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x0000000000042497: dec dword ptr [rax - 0x3f]; call 0x5a9c6caf; ret; 
0x000000000005a97e: dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x0000000000051f2a: dec dword ptr [rax - 0x73]; add eax, 0x4135e; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000506c0: dec dword ptr [rax - 0x73]; add eax, 0x42a58; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000024ae0: dec dword ptr [rax - 0x73]; add eax, 0x640f8; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000025d09: dec dword ptr [rax - 0x73]; add eax, 0x6defa; ret; 
0x000000000004eade: dec dword ptr [rax - 0x73]; add qword ptr [rax - 0x77], rcx; or eax, 0x24685e; mov byte ptr [rdx], dil; ret; 
0x000000000004eaa5: dec dword ptr [rax - 0x73]; add qword ptr [rax - 0x77], rcx; or eax, 0x246897; mov byte ptr [rdx], dil; ret; 
0x00000000000427d2: dec dword ptr [rax - 0x73]; cmp eax, 0x2558fe; call 0x545dd; mov eax, 0x39; syscall; 
0x0000000000059261: dec dword ptr [rax - 0x73]; je 0x5928a; or byte ptr [rax - 0x77], cl; ret; 
0x000000000004cf7b: dec dword ptr [rax - 0x73]; jno 0x4cf81; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000004e97e: dec dword ptr [rax - 0x73]; jno 0x4e984; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000004e9ad: dec dword ptr [rax - 0x73]; jno 0x4e9b3; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000003cdd1: dec dword ptr [rax - 0x73]; mov esp, 0x1a824; add byte ptr [rax - 1], cl; ret 0x3fe8; 
0x000000000004dc06: dec dword ptr [rax - 0x73]; push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x247616; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbdb: dec dword ptr [rax - 0x73]; push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x247641; movzx eax, byte ptr [rax]; ret; 
0x0000000000056328: dec dword ptr [rax - 0x75]; add al, 0xf8; ret; 
0x000000000004100b: dec dword ptr [rax - 0x75]; and al, 0x18; add rsp, 0x38; ret; 
0x000000000004d5f5: dec dword ptr [rax - 0x75]; and al, 8; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000419c0: dec dword ptr [rax - 0x75]; and al, 8; add rsp, 0x18; ret; 
0x000000000004a786: dec dword ptr [rax - 0x75]; and al, 8; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x0000000000048e86: dec dword ptr [rax - 0x75]; and byte ptr [r8 - 0x75], r9b; je 0x48eb3; and byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000005a099: dec dword ptr [rax - 0x75]; je 0x5a0c2; adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000005a257: dec dword ptr [rax - 0x75]; jl 0x5a280; sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000005db4f: dec dword ptr [rax - 0x75]; or byte ptr [rax + 3], cl; add eax, 0x239de5; mov rsi, rbx; mov rdi, r12; call rax; 
0x0000000000023b4c: dec dword ptr [rax - 0x77]; adc al, 0x24; mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x00000000000424ae: dec dword ptr [rax - 0x77]; add eax, 0x2559a2; ret; 
0x000000000004df24: dec dword ptr [rax - 0x77]; call 0x5c463c87; ret; 
0x0000000000024c41: dec dword ptr [rax - 0x77]; fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x0000000000014921: dec dword ptr [rax - 0x77]; fisttp word ptr [rcx - 0x17f3db8c]; ret 0x1f; 
0x000000000003ca5b: dec dword ptr [rax - 0x77]; fucomip st(3); out dx, al; pop rbx; ret; 
0x000000000004361a: dec dword ptr [rax - 0x77]; fucomip st(3); out dx, al; xor eax, eax; pop rbx; ret; 
0x00000000000181c5: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000047d41: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000052f17: dec dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000057ef4: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x00000000000590bc: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000024a55: dec dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000038d80: dec dword ptr [rax - 0x77]; ret 0xc883; 
0x00000000000434a6: dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x00000000000248bc: dec dword ptr [rax - 0x77]; ret 0xf4c; 
0x0000000000024207: dec dword ptr [rax - 0x77]; ret; 
0x000000000003a52a: dec dword ptr [rax - 0x7b]; push qword ptr [rbp + rax - 0x18]; jo 0x3a543; add al, byte ptr [rax]; add rsp, 0x118; ret; 
0x000000000004f17c: dec dword ptr [rax - 0x7b]; ror byte ptr [rax - 0x77], 0xc2; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x000000000004cb38: dec dword ptr [rax - 0x7b]; ror byte ptr [rax - 0x77], 0xc6; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005f03f: dec dword ptr [rax - 0x7b]; ror byte ptr [rcx + 0xf], 0x44; ret; 
0x00000000000448a8: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0x56], 0xeb; ret 0x8948; 
0x000000000002144c: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0xe], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004b781: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 9], 0x31; fild dword ptr [rax + 0xf72007d]; xchg eax, ebp; ret; 
0x000000000003f6ba: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + rax + 0x39], 0x58; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x0000000000037f0f: dec dword ptr [rax - 0x7b]; sal byte ptr [rsi + rdx*2 - 0x80], 0x38; add byte ptr [rax - 0x77], cl; ret; 
0x000000000004df4a: dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rax - 0x75], 0x54; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003f669: dec dword ptr [rax - 0x7d]; rol byte ptr [rdx], 1; add eax, 0x258944; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x0000000000051a73: dec dword ptr [rax - 0x7d]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x00000000000249c5: dec dword ptr [rax - 1]; ret; 
0x00000000000548c3: dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000935d7: dec dword ptr [rbp + 0x44fffc6a]; push -4; jmp qword ptr [rax + 0x6a]; 
0x000000000009295b: dec dword ptr [rbp - 0x68000748]; mov eax, 0xb897fff8; clc; jmp rdi; 
0x00000000000424ab: dec dword ptr [rbp - 0x76b700b9]; add eax, 0x2559a2; ret; 
0x0000000000020dc1: dec dword ptr [rbp - 0x77c08b9]; add al, 0xf; xchg eax, esi; ret 0xff83; 
0x0000000000092987: dec dword ptr [rbp - 8]; lcall [rax - 0x1b]; clc; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x00000000000444d3: dec dword ptr [rbx + 0x2fe8330]; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000000492f: dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x000000000004d0e1: dec dword ptr [rbx + 0x480c2444]; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021381: dec dword ptr [rbx + 0x480c2444]; add esp, 0x10; pop rbx; ret; 
0x000000000004c629: dec dword ptr [rbx + 0x480c2444]; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003caad: dec dword ptr [rbx + 0x480c2444]; add esp, 0x228; pop rbx; pop rbp; ret; 
0x00000000000262a5: dec dword ptr [rbx + 0x63]; add al, 0xbe; add rax, r14; jmp rax; 
0x000000000002749a: dec dword ptr [rbx + rcx*4 + 0x57]; adc byte ptr [rax + 0x63], cl; dec byte ptr [rax - 0x77]; ret 0xf48; 
0x0000000000055c23: dec dword ptr [rbx - 0x3f7aefbd]; je 0x55c43; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000001ef5c: dec dword ptr [rbx - 0x76d7dbbc]; ret 0x4488; 
0x00000000000390ef: dec dword ptr [rbx - 0x76f7db84]; ret; 
0x000000000001f814: dec dword ptr [rbx - 0x7cf7dbbc]; call 0xffffffff89e0e32f; ret 0x894c; 
0x000000000006ba6b: dec dword ptr [rbx]; dec dword ptr [rdi + rdi*8]; or eax, 0xfff0eff; call qword ptr [rax]; 
0x000000000004b35a: dec dword ptr [rcx + 0x103b8d2]; add byte ptr [rax], al; syscall; 
0x000000000005acd5: dec dword ptr [rcx + 0x104b8d2]; add byte ptr [rax], al; syscall; 
0x000000000004afbc: dec dword ptr [rcx + 0x10cb8d2]; add byte ptr [rax], al; syscall; 
0x000000000002348a: dec dword ptr [rcx + 0x12db8f6]; add byte ptr [rax], al; syscall; 
0x000000000003b4b6: dec dword ptr [rcx + 0x31b8d2]; add byte ptr [rax], al; syscall; 
0x000000000004c012: dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x000000000003925e: dec dword ptr [rcx + 0x5bc03118]; ret; 
0x000000000003a816: dec dword ptr [rcx + 0x5bd08918]; ret; 
0x0000000000057aca: dec dword ptr [rcx + 0x5d5b5a2b]; ret; 
0x000000000004c045: dec dword ptr [rcx + 0x5d5b5ad8]; ret; 
0x000000000004eb7a: dec dword ptr [rcx + 0x5d5b5ae8]; ret; 
0x000000000005ac68: dec dword ptr [rcx + 0x5db8d2]; add byte ptr [rax], al; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x00000000000210b5: dec dword ptr [rcx + 0x7fe083f8]; ret; 
0x000000000004b056: dec dword ptr [rcx + rcx*4 - 0x10]; mov rsi, r12; mov rdx, r13; syscall; 
0x000000000004bc7c: dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r9; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x000000000003a2e6: dec dword ptr [rcx + rcx*4 - 0x39]; sub rsi, r8; syscall; 
0x00000000000445a1: dec dword ptr [rcx + rcx*4 - 9]; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000333a7: dec dword ptr [rcx - 0x24efdbbc]; and al, 0x10; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000003978a: dec dword ptr [rcx - 0x347ce8]; add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x000000000004ac19: dec dword ptr [rcx - 0x377ce8]; pop rbx; ret; 
0x0000000000057253: dec dword ptr [rcx - 0x3b7cb728]; xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000003f223: dec dword ptr [rcx - 0x49cb73e]; mov eax, 3; syscall; 
0x00000000000935ff: dec dword ptr [rcx - 0x61000398]; push 0x68b3fffc; cld; call rdi; 
0x000000000009357f: dec dword ptr [rcx - 0x61000398]; push 0x68bdfffc; cld; jmp rdx; 
0x0000000000058add: dec dword ptr [rcx - 0x73]; dec dword ptr [r8 + 0x39]; ret 0x840f; 
0x00000000000569a1: dec dword ptr [rcx - 0x73]; mov ecx, 0x88; mov esi, 0x18; mov eax, 0x111; syscall; 
0x00000000000233a7: dec dword ptr [rcx - 0x77]; fiadd dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x000000000005b262: dec dword ptr [rcx - 0x77]; retf 0x4850; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x0000000000023dac: dec dword ptr [rcx - 0x77]; retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x000000000006ba67: dec dword ptr [rcx]; dec dword ptr [rdx]; dec dword ptr [rbx]; dec dword ptr [rdi + rdi*8]; or eax, 0xfff0eff; call qword ptr [rax]; 
0x000000000004c0bf: dec dword ptr [rcx]; ret; 
0x0000000000020d08: dec dword ptr [rcx]; setbe al; ret; 
0x0000000000020d37: dec dword ptr [rcx]; sete al; or eax, edx; movzx eax, al; ret; 
0x000000000006ba6d: dec dword ptr [rdi + rdi*8]; or eax, 0xfff0eff; call qword ptr [rax]; 
0x000000000008dbb4: dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x0000000000091325: dec dword ptr [rdi - 0x7ae47743]; sar byte ptr [rbx + 0x59], 0x87; ret 0x9d9b; 
0x000000000002ffee: dec dword ptr [rdi - 0xdee88c4]; movups xmm1, xmmword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000006ba73: dec dword ptr [rdi]; call qword ptr [rax]; 
0x0000000000025bbb: dec dword ptr [rdi]; mov dh, 0xd0; lea rax, [rip + 0x6cf32]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b69: dec dword ptr [rdi]; mov dh, 0xd0; lea rax, [rip + 0x6cf38]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000359b6: dec dword ptr [rdi]; push rdi; add eax, 0x5b002; add rsp, 0x18; ret; 
0x0000000000057965: dec dword ptr [rdi]; ret; 
0x0000000000034a03: dec dword ptr [rdi]; scasd eax, dword ptr [rdi]; ret; 
0x000000000002d6f9: dec dword ptr [rdi]; test byte ptr [rax + 0x3d000000], bh; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002d61f: dec dword ptr [rdi]; test byte ptr [rdi + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x00000000000262be: dec dword ptr [rdi]; xchg eax, ebp; ret 0x2148; 
0x000000000002129a: dec dword ptr [rdi]; xchg eax, ebp; sal bh, 0xd8; ret; 
0x000000000002406a: dec dword ptr [rdi]; xchg eax, edi; ret 0x430f; 
0x0000000000046364: dec dword ptr [rdi]; xchg eax, esp; ret 0x8548; 
0x000000000008dbad: dec dword ptr [rdx - 0x78e9bfc4]; stc; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x000000000006ba69: dec dword ptr [rdx]; dec dword ptr [rbx]; dec dword ptr [rdi + rdi*8]; or eax, 0xfff0eff; call qword ptr [rax]; 
0x0000000000084ec9: dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000006ba6f: dec dword ptr [rip + 0xfff0eff]; call qword ptr [rax]; 
0x00000000000933a7: dec dword ptr [rsi - 7]; sti; jmp qword ptr [rax - 0xb]; 
0x000000000006ba71: dec dword ptr [rsi]; dec dword ptr [rdi]; call qword ptr [rax]; 
0x000000000004310a: dec eax; cmp eax, 4; ja 0x431ce; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x000000000004b9e1: dec eax; jne 0x4b9b2; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004bd64: dec eax; jne 0x4bd4e; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000000044b44: dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000044b56: dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000055957: dec eax; mov dword ptr [rip + 0x242679], eax; ret; 
0x000000000004d74e: dec eax; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000004eba4: dec eax; ret; 
0x0000000000026fb7: dec ecx; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x0000000000055146: dec ecx; je 0x55150; cmp rax, 3; jne 0x55154; syscall; 
0x0000000000057f33: dec edi; lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000005414e: dec edx; jne 0x5414d; ret; 
0x000000000001e292: dec esi; bswap eax; mov dword ptr [rdi - 4], eax; jne 0x1e28c; ret; 
0x0000000000028b49: dec esi; fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b43; fstp st(1); ret; 
0x0000000000054bda: dec esi; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0000000000049cbd: dec esp; cld; lcall [rdx - 0x3d]; push rax; mov eax, 0x18; syscall; 
0x000000000004b9e0: dec rax; jne 0x4b9b2; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004bd63: dec rax; jne 0x4bd4e; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004d74d: dec rax; mov qword ptr [rdi + 0x80], rax; ret; 
0x0000000000026fb6: dec rcx; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x00000000000573b9: div al; cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x573b6; ret; 
0x0000000000049f89: div byte ptr [rbp + 0x10]; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x00000000000329fc: div byte ptr [rbp + 0x14]; mulss xmm0, xmm0; movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000043d23: div byte ptr [rbp + 0xa]; mov qword ptr [rdx], 0; xor eax, eax; ret; 
0x00000000000233fb: div byte ptr [rbp + 9]; mov eax, 0x11c; syscall; 
0x00000000000406d4: div byte ptr [rcx]; sar byte ptr [rax + 0x30], cl; syscall; 
0x000000000003df4a: div byte ptr [rcx]; sar byte ptr [rax + 0x32], cl; syscall; 
0x000000000005712b: div byte ptr [rsi + rax + 0xf]; mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000043142: div dword ptr [rdi + rax + 0x48]; mov eax, ebp; syscall; 
0x000000000004074d: div edi; inc dword ptr [rbp + 0x31]; leave; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000059204: div edx; cvtpi2ps xmm0, mm7; ret; 
0x000000000002f03a: divps xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6d: divps xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002f007: divps xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef3a: divps xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x0000000000028a93: divps xmm0, xmm0; ret; 
0x0000000000028a62: divps xmm0, xmm1; ret; 
0x0000000000032b99: divps xmm0, xmm2; ret; 
0x000000000002c74d: divps xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002c1c1: divps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002b6f9: divps xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000002c8c4: divps xmm1, xmm0; cvtsi2ss xmm2, eax; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002c345: divps xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000029dd2: divps xmm1, xmm0; movapd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029ff0: divps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a1b7: divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032ba2: divps xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000032d7c: divps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000002a7c2: divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000001dd90: divps xmm1, xmm4; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001dd8c: divps xmm2, xmm4; divsd xmm1, xmm4; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000030440: divps xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002f364: divps xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002f8f6: divps xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x000000000002c1c0: divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x0000000000028a92: divsd xmm0, xmm0; ret; 
0x0000000000028a61: divsd xmm0, xmm1; ret; 
0x0000000000032b98: divsd xmm0, xmm2; ret; 
0x000000000002b6f8: divsd xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000002c344: divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000029dd1: divsd xmm1, xmm0; movapd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fef: divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000032ba1: divsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000001dd8f: divsd xmm1, xmm4; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001dd8b: divsd xmm2, xmm4; divsd xmm1, xmm4; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000003043f: divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002f363: divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002c74c: divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002f039: divss xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6c: divss xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002f006: divss xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef39: divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x0000000000028a9b: divss xmm0, xmm0; ret; 
0x0000000000028a89: divss xmm0, xmm1; ret; 
0x0000000000032d72: divss xmm0, xmm2; ret; 
0x000000000002c8c3: divss xmm1, xmm0; cvtsi2ss xmm2, eax; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002a1b6: divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032d7b: divss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000002a7c1: divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002f8f5: divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x00000000000371c6: f2xm1; faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x00000000000372c2: f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000003715c: f2xm1; ret; 
0x0000000000037154: fabs; fucomip st(1); fstp st(0); ja 0x3715f; f2xm1; ret; 
0x0000000000037105: fabs; fxch st(1); fpatan; ret; 
0x00000000000372eb: fabs; ret; 
0x0000000000058005: fadd dword ptr [r9 + 0x69]; ret; 
0x000000000004d6a2: fadd dword ptr [rax]; add byte ptr [rax], al; je 0x4d6af; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000022923: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000023a05: fadd dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000008adfa: fadd dword ptr [rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x000000000005820d: fadd dword ptr [rbp - 0x7b]; leave; cmove eax, r8d; ret; 
0x0000000000058006: fadd dword ptr [rcx + 0x69]; ret; 
0x000000000003538f: fadd dword ptr [rip + 0xf037500]; sub cl, al; ret; 
0x000000000008adf9: fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x000000000003538e: fadd dword ptr ss:[rip + 0xf037500]; sub cl, al; ret; 
0x0000000000075fa6: fadd qword ptr [rax - 0x7f2a7f36]; leave; or bh, 0x80; xlatb; and dh, 0x80; int 0x80; 
0x00000000000226be: fadd qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000007dcd0: fadd qword ptr [rbx - 0x66ef7adf]; ret 0x9553; 
0x0000000000073f50: fadd qword ptr [rbx - 0x7c2b7bf9]; fild word ptr [rbx - 0x792079a5]; fld dword ptr [rsi - 0x792b7913]; fild dword ptr [rsi - 0x792f791c]; fiadd word ptr [rsi - 0x773e77a9]; ret 0xb188; 
0x0000000000024d8e: fadd qword ptr [rsi]; add byte ptr [rax + 0x63], cl; or al, 0x88; add rax, rcx; jmp rax; 
0x000000000002b721: fadd st(0); ret; 
0x0000000000037116: fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x00000000000591a9: fadd st(3); movsxd rdi, edi; push rax; mov eax, 0xe3; syscall; 
0x0000000000049b02: fadd st(3); push rbx; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x000000000003a1e4: fadd st(7); std; lcall [rdx - 0x3d]; push rax; mov eax, 0x95; syscall; 
0x00000000000372c6: faddp st(1); add rsp, 0x30; ret; 
0x00000000000372c0: faddp st(1); f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000002b861: faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x00000000000371f6: faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x00000000000371c8: faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037873: faddp st(1); fyl2x; ret; 
0x0000000000028b30: faddp st(1); jne 0x28b21; ret; 
0x0000000000028b4e: faddp st(1); jne 0x28b43; fstp st(1); ret; 
0x0000000000028911: faddp st(1); ret; 
0x000000000002890f: faddp st(2); faddp st(1); ret; 
0x000000000003550d: faddp st(2); fxch st(1); fstp xword ptr [rsp - 0x18]; fldz; fmulp st(1); ret; 
0x000000000006ebf0: fbstp tbyte ptr [rax + 0x36]; jno 0x6ec4e; jno 0x6eb8a; stc; ret; 
0x000000000003636e: fchs; add rsp, 0x20; add rsp, 0x38; ret; 
0x00000000000336ac: fchs; add rsp, 0x20; pop rbx; ret; 
0x000000000001b86a: fchs; add rsp, 0xa0; pop rbx; ret; 
0x0000000000036783: fchs; fcmove st(0), st(1); fstp st(1); add rsp, 0x10; pop rbx; ret; 
0x000000000002ce3a: fchs; fcmove st(0), st(1); fstp st(1); add rsp, 0x20; pop rbx; ret; 
0x000000000002b4cd: fchs; fcmove st(0), st(1); fstp st(1); add rsp, 0x30; pop rbx; ret; 
0x000000000002ab82: fchs; fcmove st(0), st(1); fstp st(1); add rsp, 0x50; pop rbx; ret; 
0x000000000001cba8: fchs; fld xword ptr [rsp + 8]; ret; 
0x000000000001b89c: fchs; fxch st(1); ret; 
0x000000000003714f: fchs; ret; 
0x0000000000036785: fcmove st(0), st(1); fstp st(1); add rsp, 0x10; pop rbx; ret; 
0x000000000002ce3c: fcmove st(0), st(1); fstp st(1); add rsp, 0x20; pop rbx; ret; 
0x000000000002b4cf: fcmove st(0), st(1); fstp st(1); add rsp, 0x30; pop rbx; ret; 
0x000000000002ab84: fcmove st(0), st(1); fstp st(1); add rsp, 0x50; pop rbx; ret; 
0x0000000000039b37: fcmovnbe st(0), st(5); add dword ptr [rax], eax; add rsp, 0x18; ret; 
0x0000000000029f2d: fcmovnu st(0), st(1); ret 0x3074; 
0x000000000001a21b: fcmovu st(0), st(1); leave; ret; 
0x000000000001a219: fcmovu st(0), st(5); fcmovu st(0), st(1); leave; ret; 
0x0000000000077d2c: fcom dword ptr [rdx - 0x6d286d17]; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x000000000008bcb2: fcom qword ptr [rsi - 0x27]; ret; 
0x0000000000093130: fcom st(5); sti; jmp rdx; 
0x000000000001da4c: fcomi st(3); movups xmmword ptr [rsp + 0x20], xmm3; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000003f7bc: fcomip st(3); movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x000000000004cfb8: fcomp dword ptr [rbp + 0x41]; pop rsp; ret; 
0x00000000000261ce: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000000017df6: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000017a1d: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000017a53: fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000039304: fcomp dword ptr [rcx]; sal bh, 0xd0; and eax, 0x22; add rsp, 0x10; pop rbx; ret; 
0x000000000002200c: fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x00000000000227af: fcomp dword ptr [rsi]; add eax, dword ptr [rax]; pop rbx; ret; 
0x0000000000023e4b: fcomp qword ptr [rsi]; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000005fafc: fcomp st(0), st(2); ret 0x3437; 
0x000000000002ddd3: fcomp st(1); out dx, al; pop rax; ret; 
0x000000000002ddd1: fcomp st(5); fcomp st(1); out dx, al; pop rax; ret; 
0x0000000000055752: fdiv dword ptr [rcx]; sar byte ptr [rsi + 0x83], cl; mov rax, rbp; syscall; 
0x0000000000037159: fdiv dword ptr [rdi + 3]; f2xm1; ret; 
0x0000000000029a61: fdiv qword ptr [rbp + 0x15]; mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000092ff4: fdiv qword ptr [rbx + rdi*8]; call qword ptr [rbp + rax*8 - 0x3b530005]; sti; call rsp; 
0x000000000008d8b2: fdiv qword ptr [rdi - 0x4d]; mov esi, 0x60003fe7; adc byte ptr [r10 + 0x18], sil; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000001cb9c: fdiv st(3); movd dword ptr [rsp - 0x28], mm0; ret; 
0x0000000000057cfc: fdiv st(7), st(0); call qword ptr [rbx + 0x48]; 
0x000000000002cd0a: fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x000000000005a097: fdivp st(3); dec dword ptr [rax - 0x75]; je 0x5a0c2; adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000006e5a2: fdivr dword ptr [rcx - 0x7d]; jl 0x6e572; jge 0x6e58a; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x0000000000053603: fdivr dword ptr [rcx]; ret; 
0x00000000000370dc: fdivr dword ptr [rdx - 0x2f08fffb]; and eax, edx; mov dword ptr [rsp - 0x14], eax; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000181eb: fdivr dword ptr [rdx]; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x000000000008db2a: fdivr dword ptr [rip - 0x4370be8a]; push rdx; xor ebx, dword ptr [rcx + 0x1c]; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x0000000000070f2c: fdivr qword ptr [rbp - 0x66]; pop rcx; ret; 
0x0000000000059151: fdivr st(3); lcall [rdx + 0x5b]; pop rbp; ret; 
0x00000000000930f1: fdivr st(3); push qword ptr [rdi - 0x2a]; sti; jmp qword ptr [rbx - 0x29]; 
0x0000000000093350: fdivr st(4), st(0); sti; jmp rsp; 
0x0000000000093348: fdivr st(4), st(0); sti; ljmp [rsp + rsi*8 - 0xb230005]; sti; jmp rsp; 
0x000000000004459f: fdivr st(5); dec dword ptr [rcx + rcx*4 - 9]; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000005afc9: fdivr st(5); inc dword ptr [rcx]; ret; 
0x0000000000024205: fdivr st(7); dec dword ptr [rax - 0x77]; ret; 
0x000000000001eb18: fdivr st(7); ret; 
0x000000000002b85d: fdivrp st(2); fmul st(1), st(0); faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000024a7c: fdivrp st(3); movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000055c2c: fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x0000000000021761: fiadd dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000053472: fiadd dword ptr [rbp + 0x440f48c9]; ret 0x41c3; 
0x000000000005341b: fiadd dword ptr [rbp + 0x440f48c9]; ret 0xfc3; 
0x00000000000533c5: fiadd dword ptr [rbp - 0x3dbbf037]; ret; 
0x0000000000037645: fiadd dword ptr [rbp - 0x7b]; ror byte ptr [rax + 0xf], 0x45; ret 0x48f2; 
0x00000000000233aa: fiadd dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x00000000000233ba: fiadd dword ptr [rcx - 0x77]; ret 0x1275; 
0x0000000000035508: fiadd dword ptr [rip - 0x21f28900]; ret 0xc9d9; 
0x0000000000039787: fiadd dword ptr [rsi + 0x1889fffe]; or ebx, 0xffffffff; add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x000000000005a360: fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000008adf6: fiadd word ptr [rax]; wait; fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x0000000000076d58: fiadd word ptr [rbx - 0x7bf97bef]; ret 0xf383; 
0x0000000000073f68: fiadd word ptr [rsi - 0x773e77a9]; ret 0xb188; 
0x000000000008adf5: fiadd word ptr fs:[rax]; wait; fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x000000000006e88a: ficom dword ptr [rsi - 0x7e]; push rdi; std; pop rax; ret 0x885a; 
0x000000000008c378: ficom dword ptr [rsi]; pop rbp; ret 0xec71; 
0x0000000000078a94: ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x0000000000028a4e: ficom word ptr [rcx + 0xff20006]; adc dword ptr [rsp - 8], eax; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x00000000000832ae: ficomp dword ptr [rax + 0x5f406bb3]; ret 0xf36b; 
0x000000000001ca4b: ficomp word ptr [rdx + 1]; add dl, dh; movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000556a0: fidiv dword ptr [rbp + 0x13]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055762: fidiv dword ptr [rbp + 0x15]; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000049c48: fidiv dword ptr [rbp + 0x19]; xor esi, esi; mov eax, 0x135; mov rdi, rbx; mov rdx, rsi; syscall; 
0x0000000000054dd9: fidiv dword ptr [rbp + 0x1d]; mov rax, r8; syscall; 
0x0000000000056dce: fidiv dword ptr [rbp + 0x2e]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000055738: fidiv dword ptr [rbp + 0x3f]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000054fb4: fidiv dword ptr [rbp + 0x53]; mov esi, 1; mov rax, r9; syscall; 
0x000000000001aceb: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d3d: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056fe8: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001acb6: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r9; syscall; 
0x0000000000054d3f: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x00000000000559e0: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055991: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; ret; 
0x00000000000552de: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000054660: fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000004b97d: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b97d: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057956: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000004c218: fidiv dword ptr [rbp + 8]; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c1c: fidiv dword ptr [rbp + 8]; mov rax, rbp; mov rsi, rdx; syscall; 
0x00000000000548b0: fidiv dword ptr [rbp - 0x17]; xor esi, esi; mov rax, r12; syscall; 
0x0000000000054f21: fidiv dword ptr [rbp - 0x1c]; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000004b91e: fidiv dword ptr [rbp - 0x3d]; xor r10d, r10d; xor esi, esi; mov rax, rbp; mov rdi, r9; syscall; 
0x0000000000055b21: fidiv dword ptr [rbp - 0x6a]; mov rax, r15; mov esi, 1; syscall; 
0x00000000000378f1: fidiv dword ptr [rdx]; and al, 0x21; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x00000000000233c7: fidivr dword ptr [rax + 0xe8]; syscall; 
0x0000000000092bf2: fidivr dword ptr [rbp + 0x3e4cca98]; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x000000000004b788: fild dword ptr [rax + 0xf72007d]; xchg eax, ebp; ret; 
0x0000000000073f62: fild dword ptr [rsi - 0x792f791c]; fiadd word ptr [rsi - 0x773e77a9]; ret 0xb188; 
0x000000000002303b: fild dword ptr [rsi]; add byte ptr [rsi + 0x11], bh; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x00000000000333ac: fild dword ptr [rsp + 0x10]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x0000000000029cdd: fild qword ptr [rsi + rax]; xorps xmm0, xmm1; ret; 
0x000000000003ad16: fild word ptr [rax]; add byte ptr [rax - 1], cl; ret; 
0x000000000005a5a9: fild word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000051ec1: fild word ptr [rbx + 0x440f03f9]; ret 0xf883; 
0x000000000001f7e7: fild word ptr [rbx - 0x76b7fc40]; ret 0x8948; 
0x0000000000073f56: fild word ptr [rbx - 0x792079a5]; fld dword ptr [rsi - 0x792b7913]; fild dword ptr [rsi - 0x792f791c]; fiadd word ptr [rsi - 0x773e77a9]; ret 0xb188; 
0x000000000004b7e4: fimul dword ptr [r9 + 0x5d5b5ad8]; ret; 
0x0000000000058e0a: fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x000000000006009f: fimul dword ptr [rax - 0x1414017]; ret; 
0x0000000000026137: fimul dword ptr [rax - 1]; ret; 
0x00000000000464a5: fimul dword ptr [rcx + 0x158d48d0]; sub eax, 0x480004cb; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000004b7e5: fimul dword ptr [rcx + 0x5d5b5ad8]; ret; 
0x00000000000233f5: fimul dword ptr [rcx - 0x7af28a3e]; div byte ptr [rbp + 9]; mov eax, 0x11c; syscall; 
0x000000000005acb5: fimul word ptr [rax - 0x75]; push rsp; and al, 8; syscall; 
0x000000000002657b: fimul word ptr [rax - 1]; ret; 
0x000000000000530a: fimul word ptr [rbx]; jl 0x5375; jle 0x5308; jmp rdi; 
0x000000000005db5d: fimul word ptr [rcx + rcx*4 - 0x19]; call rax; 
0x0000000000022578: fimul word ptr [rcx]; retf 0xd609; add rsp, 0x90; mov eax, esi; pop rbx; ret; 
0x0000000000077d2a: fist word ptr [rdx - 0x6d166d28]; xlatb; xchg eax, edx; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000092823: fist word ptr [rdx]; int1; ret 0xde3f; 
0x0000000000092822: fist word ptr ds:[rdx]; int1; ret 0xde3f; 
0x000000000007890c: fistp dword ptr [rax + 0x12]; pop rcx; cmp eax, 0x3f5b3e5b; pop rbx; ret; 
0x000000000005523c: fistp dword ptr [rip + 0x39480000]; ret; 
0x000000000004e792: fistp qword ptr [rcx]; std; dec dword ptr [rax + 0x63]; jl 0x4e746; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000005aedd: fistp qword ptr [rdx - 0x3ca50005]; xor edi, edi; mov eax, 0x79; syscall; 
0x0000000000037845: fistp qword ptr [rsp - 0x10]; mov rax, qword ptr [rsp - 0x10]; ret; 
0x0000000000049c10: fistp word ptr [rbx + 0x5d]; jmp rcx; 
0x00000000000590da: fistp word ptr [rbx + 0x5d]; jmp rdx; 
0x000000000004d8ad: fistp word ptr [rbx + 0x5d]; pop r12; pop r13; jmp rax; 
0x0000000000048301: fistp word ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000004be20: fistp word ptr [rbx - 0x17]; and eax, 0x5bfffffb; ret; 
0x000000000004d746: fistp word ptr [rbx - 0x17]; jmp rcx; 
0x0000000000024a90: fistp word ptr [rbx - 0x17]; or dword ptr [rax], ebp; add byte ptr [rax], al; pop rbx; ret; 
0x000000000006f56e: fistp word ptr [rbx - 0x1a]; sub eax, 0xed7d2e67; push rax; ret; 
0x000000000005ff93: fistp word ptr [rbx]; insb byte ptr [rdi], dx; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x0000000000050949: fisttp dword ptr [rax + 0x63]; ret; 
0x000000000004ff0b: fisttp dword ptr [rax + 1]; ret; 
0x000000000001b64d: fisttp dword ptr [rax + 9]; ret; 
0x0000000000024bfa: fisttp dword ptr [rax - 0x77]; ret 0x8348; 
0x0000000000021cc6: fisttp dword ptr [rax - 1]; ret 0x8348; 
0x0000000000052006: fisttp dword ptr [rcx + 0x63]; ret; 
0x000000000005d8b7: fisttp dword ptr [rdi]; test dword ptr [rsi + 0x5bfffffe], ebx; pop rbp; pop r12; ret; 
0x000000000004fcf5: fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xd121; 
0x000000000005802b: fisttp dword ptr [rdi]; xchg eax, ebp; ret; 
0x000000000005abca: fisttp qword ptr [rax + 0x63]; jl 0x5abf3; adc byte ptr [rax + 3], bh; syscall; 
0x0000000000055109: fisttp qword ptr [rax]; add byte ptr [rax], al; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x0000000000038f01: fisttp word ptr [rax - 0x75]; and al, 0x10; call rax; 
0x000000000004ba4b: fisttp word ptr [rax - 0x75]; push r8; pop rbx; mov edx, 1; jmp rax; 
0x000000000001f780: fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x000000000003741e: fisttp word ptr [rax - 0x77]; ret; 
0x000000000002121a: fisttp word ptr [rcx + 0x415d5bd8]; pop rsp; ret; 
0x0000000000054d67: fisttp word ptr [rcx + rcx*4 - 0x40]; mov rdx, rsi; syscall; 
0x0000000000014924: fisttp word ptr [rcx - 0x17f3db8c]; ret 0x1f; 
0x000000000002489c: fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000929dc: fisub word ptr [rbx]; stc; jmp rdi; 
0x0000000000059ff6: fisubr dword ptr [rbx - 1]; or cl, byte ptr [rax - 1]; ret; 
0x000000000001bb4a: fisubr word ptr [rbp + 7]; add cl, bl; ret 0x7cdb; 
0x000000000002147f: fld dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003a3eb: fld dword ptr [rcx]; add byte ptr [rax + 0xb], bh; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x00000000000336c6: fld dword ptr [rip + 0x5f2e4]; ret; 
0x00000000000342f9: fld dword ptr [rip - 0x3b7cb800]; pop rbx; ret; 
0x0000000000073f5c: fld dword ptr [rsi - 0x792b7913]; fild dword ptr [rsi - 0x792f791c]; fiadd word ptr [rsi - 0x773e77a9]; ret 0xb188; 
0x000000000001bf9f: fld dword ptr [rsp + 0x4c]; add rsp, 0x78; fxch st(1); ret; 
0x00000000000223b1: fld qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000223b1: fld qword ptr [rax]; add byte ptr [rax], al; syscall; neg eax; ret; 
0x000000000004f5d8: fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x00000000000226df: fld qword ptr [rdx - 1]; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x00000000000226df: fld qword ptr [rdx - 1]; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000001c6ca: fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x000000000001c6c2: fld qword ptr [rsp]; movsd qword ptr [rsp], xmm1; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000028b2d: fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b21; ret; 
0x0000000000028b4b: fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b43; fstp st(1); ret; 
0x000000000004f5f1: fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000003a6e5: fld xword ptr [rdx + 0x63480001]; sti; mov eax, 3; syscall; 
0x0000000000029b72: fld xword ptr [rip + 0x670e8]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x0000000000029b51: fld xword ptr [rip + 0x670f9]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000001cb44: fld xword ptr [rsp + 0x10]; fxch st(1); add rsp, 0x58; ret; 
0x000000000001cba4: fld xword ptr [rsp + 0x18]; fchs; fld xword ptr [rsp + 8]; ret; 
0x0000000000037123: fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000001ca01: fld xword ptr [rsp + 0x18]; ret; 
0x000000000001ce1a: fld xword ptr [rsp + 0x50]; fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x000000000001ce1e: fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x0000000000037863: fld xword ptr [rsp + 8]; cmp eax, 0x3ffd9400; ja 0x37871; fyl2xp1; ret; 
0x00000000000372e7: fld xword ptr [rsp + 8]; fabs; ret; 
0x0000000000037841: fld xword ptr [rsp + 8]; fistp qword ptr [rsp - 0x10]; mov rax, qword ptr [rsp - 0x10]; ret; 
0x000000000003711f: fld xword ptr [rsp + 8]; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000003712a: fld xword ptr [rsp + 8]; fld1; fpatan; ret; 
0x00000000000378fc: fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003790d: fld xword ptr [rsp + 8]; fsqrt; ret; 
0x0000000000037851: fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000001cbaa: fld xword ptr [rsp + 8]; ret; 
0x000000000002b863: fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002ba0e: fld xword ptr [rsp - 0x28]; ret; 
0x000000000002eb0c: fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036d0a: fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000371f8: fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x00000000000371f4: fld1; faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x0000000000037871: fld1; faddp st(1); fyl2x; ret; 
0x0000000000037878: fld1; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000003712e: fld1; fpatan; ret; 
0x0000000000037166: fld1; fsubp st(1); ret; 
0x0000000000037149: fld1; jb 0x37152; fstp st(1); fchs; ret; 
0x000000000003721c: fld1; js 0x37225; fscale; fstp st(1); ret; 
0x00000000000049bc: fldcw word ptr [rdi - 0x6ad51348]; ret; 
0x000000000003251f: fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000037301: fldcw word ptr [rsp + 8]; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003730b: fldcw word ptr [rsp + 8]; ret; 
0x0000000000022518: fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000004d04: fldenv [rsi + 0x7d49ae9]; out 0xbd, eax; insb byte ptr [rdi], dx; ret 0x1bb7; 
0x000000000003784f: fldlg2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000002a525: fldln2; add rsp, 0x48; faddp st(1); ret; 
0x0000000000037881: fldln2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000029f29: fldpi; cmp al, 0x85; fcmovnu st(0), st(1); ret 0x3074; 
0x00000000000482cb: fldpi; ret 0xc748; 
0x0000000000035515: fldz; fmulp st(1); ret; 
0x000000000002ddd4: fldz; pop rax; ret; 
0x0000000000026d17: fmul dword ptr [rax + 0x21]; ret; 
0x000000000005a83e: fmul dword ptr [rax + 0x39]; ret 0xe472; 
0x000000000005a043: fmul dword ptr [rax + 0x39]; ret; 
0x00000000000594fd: fmul dword ptr [rax + 0x63]; clc; call 0x169c0; pop rdx; ret; 
0x0000000000018ed4: fmul dword ptr [rax - 0x3f]; clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000392d3: fmul dword ptr [rax - 0x73]; push rsp; and al, 0xc; mov eax, 0x10; syscall; 
0x0000000000018911: fmul dword ptr [rax - 0x77]; adc eax, 0x27f55f; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000024a76: fmul dword ptr [rax - 0x77]; ror byte ptr [rax - 0x77], 1; fdivrp st(3); movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x00000000000354db: fmul dword ptr [rbx - 0x761fdbbc]; ret 0xc0d9; 
0x0000000000024615: fmul dword ptr [rcx - 0x77]; ret 0x8d48; 
0x00000000000274ee: fmul dword ptr [rcx - 0x77]; ret; 
0x0000000000028fb5: fmul dword ptr [rdi]; push rdi; retf 0x570f; ret 0xff2; 
0x000000000002a203: fmul dword ptr [rdi]; push rdi; sal bl, 0xf; pop rsi; ret; 
0x0000000000034672: fmul dword ptr [rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000002e413: fmul dword ptr [rdx + 0xf402444]; xchg eax, ebp; ret 0xe083; 
0x0000000000038940: fmul qword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000026b80: fmul qword ptr [rax - 0x7d]; call qword ptr [rax]; 
0x000000000005bc9b: fmul qword ptr [rax - 1]; ret; 
0x000000000002cf84: fmul st(0); add rsp, 0x28; ret; 
0x000000000002b85f: fmul st(1), st(0); faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x00000000000372c4: fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000002bdf6: fmul st(1); fmulp st(1); pop rax; pop rdx; add rsp, 0x38; ret; 
0x00000000000371fb: fmulp st(1); add rsp, 0x10; ret; 
0x0000000000029b59: fmulp st(1); faddp st(1); ret; 
0x0000000000028b2b: fmulp st(1); fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b21; ret; 
0x0000000000036d08: fmulp st(1); fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x0000000000037101: fmulp st(1); fsqrt; fabs; fxch st(1); fpatan; ret; 
0x0000000000037118: fmulp st(1); fsqrt; fpatan; ret; 
0x000000000002bdf8: fmulp st(1); pop rax; pop rdx; add rsp, 0x38; ret; 
0x000000000002b867: fmulp st(1); ret; 
0x0000000000029b4f: fmulp st(2); fld xword ptr [rip + 0x670f9]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000029b78: fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x000000000003533e: fmulp st(5); add eax, 0x66047500; movaps xmm0, xmm1; ret; 
0x000000000006bdd8: fnsave dword ptr [rbx]; sal byte ptr [rbx], 1; sal dword ptr [rbx], cl; ret; 
0x000000000005fc49: fnsave dword ptr [rdx]; ret; 
0x00000000000481de: fnstcw word ptr [rax + 1]; ret; 
0x000000000008adfc: fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x000000000002250a: fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000003782b: fnstsw ax; fstp st(1); test ah, 4; jne 0x37823; ret; 
0x00000000000378b0: fnstsw ax; fstp st(1); test ah, 4; jne 0x378a8; ret; 
0x0000000000022546: fnstsw ax; or eax, esi; and eax, edi; ret; 
0x0000000000037109: fpatan; ret; 
0x00000000000378ae: fprem1; fnstsw ax; fstp st(1); test ah, 4; jne 0x378a8; ret; 
0x0000000000037829: fprem; fnstsw ax; fstp st(1); test ah, 4; jne 0x37823; ret; 
0x000000000002b8d9: fptan; addps xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x0000000000037305: frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x0000000000037900: frndint; ret; 
0x0000000000049f70: frstor dword ptr [rax + rax]; lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000444d1: fscale; dec dword ptr [rbx + 0x2fe8330]; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000371ca: fscale; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037220: fscale; fstp st(1); ret; 
0x00000000000590ba: fsincos; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x00000000000930ed: fsincos; jmp rcx; 
0x0000000000037103: fsqrt; fabs; fxch st(1); fpatan; ret; 
0x000000000003711a: fsqrt; fpatan; ret; 
0x0000000000037911: fsqrt; ret; 
0x0000000000092148: fst dword ptr [rcx - 0x19]; mov esi, 0x3fe844cb; ret 0x49d6; 
0x00000000000921c1: fst qword ptr [rcx + 0x6b]; ret 0x8bed; 
0x0000000000077d32: fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000086e27: fstp dword ptr [esi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x0000000000055948: fstp dword ptr [rax + 0x5b]; pop rbp; ret; 
0x00000000000832ac: fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x00000000000053b1: fstp dword ptr [rax + rbp*8 - 0x21806f54]; ret 0x793b; 
0x0000000000086e28: fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x000000000001bf9b: fstp dword ptr [rsp + 0x4c]; fld dword ptr [rsp + 0x4c]; add rsp, 0x78; fxch st(1); ret; 
0x0000000000053d1c: fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000055406: fstp qword ptr [rax + 0x5b]; pop rbp; ret; 
0x000000000008644a: fstp qword ptr [rbx - 0x17]; pop rbx; ret; 
0x0000000000053d39: fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000002ef07: fstp st(0); add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000002ddd2: fstp st(0); fldz; pop rax; ret; 
0x000000000002ddd0: fstp st(0); fstp st(0); fldz; pop rax; ret; 
0x0000000000029f64: fstp st(0); fstp st(1); add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000003703d: fstp st(0); fstp st(1); add rsp, 0x58; ret; 
0x0000000000037158: fstp st(0); ja 0x3715f; f2xm1; ret; 
0x0000000000036787: fstp st(1); add rsp, 0x10; pop rbx; ret; 
0x00000000000371cc: fstp st(1); add rsp, 0x10; ret; 
0x000000000002ce3e: fstp st(1); add rsp, 0x20; pop rbx; ret; 
0x000000000002b4d1: fstp st(1); add rsp, 0x30; pop rbx; ret; 
0x0000000000029f66: fstp st(1); add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000033a18: fstp st(1); add rsp, 0x48; ret; 
0x000000000002ab86: fstp st(1); add rsp, 0x50; pop rbx; ret; 
0x000000000003703f: fstp st(1); add rsp, 0x58; ret; 
0x000000000003714d: fstp st(1); fchs; ret; 
0x0000000000036283: fstp st(1); fstp st(1); add rsp, 0x20; pop rbx; ret; 
0x0000000000028b52: fstp st(1); ret; 
0x000000000003782d: fstp st(1); test ah, 4; jne 0x37823; ret; 
0x00000000000378b2: fstp st(1); test ah, 4; jne 0x378a8; ret; 
0x000000000003703b: fstp st(2); fstp st(0); fstp st(1); add rsp, 0x58; ret; 
0x000000000001a218: fstp st(2); fstp st(2); fxch st(1); ret; 
0x000000000001a21a: fstp st(2); fxch st(1); ret; 
0x00000000000299d4: fstp xword ptr [rbx + 0x10]; add rsp, 0x78; pop rbx; pop rbp; ret; 
0x0000000000035eed: fstp xword ptr [rbx]; add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x00000000000299d2: fstp xword ptr [rbx]; fstp xword ptr [rbx + 0x10]; add rsp, 0x78; pop rbx; pop rbp; ret; 
0x000000000002af08: fstp xword ptr [rcx]; ret 0x1877; 
0x00000000000336aa: fstp xword ptr [rdi]; fchs; add rsp, 0x20; pop rbx; ret; 
0x000000000004f5da: fstp xword ptr [rdi]; ret; 
0x0000000000035511: fstp xword ptr [rsp - 0x18]; fldz; fmulp st(1); ret; 
0x00000000000299f4: fstp xword ptr [rsp - 0x18]; mov eax, dword ptr [rsp - 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x00000000000358be: fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], di; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000001d672: fstp xword ptr [rsp]; call 0x1d616; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x000000000001e048: fstp xword ptr [rsp]; call 0x1dfec; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x0000000000036366: fstp xword ptr [rsp]; call 0x288af; fchs; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002bec3: fstp xword ptr [rsp]; call 0x29aff; add rsp, 0x20; add rsp, 0x38; ret; 
0x000000000002988b: fstpnce st(1), st(0); ret 0xddc; 
0x0000000000027616: fsub dword ptr [rcx]; ret 0x8d48; 
0x00000000000280d6: fsub dword ptr [rcx]; sal byte ptr [rdx + 0x29], 1; ret 0x5389; 
0x000000000002890b: fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x00000000000170a3: fsub st(3), st(0); shl dword ptr [rsi + 0x2e], 1; nop dword ptr [rax + rax]; lea rax, [rdi + 1]; pop rbx; ret; 
0x0000000000023120: fsubp st(0); call qword ptr [rsi + 1]; 
0x0000000000029b70: fsubp st(1); fld xword ptr [rip + 0x670e8]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x0000000000029b7c: fsubp st(1); ret; 
0x0000000000029b57: fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000037114: fsubr st(1), st(0); fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x000000000008d0f1: fsubrp st(0); ret; 
0x000000000002890d: fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x0000000000029b7a: fsubrp st(1); fsubp st(1); ret; 
0x000000000001b898: fsubrp st(1); fxch st(1); fchs; fxch st(1); ret; 
0x0000000000028909: fsubrp st(4); fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x0000000000057b6e: fucomi st(1); int1; add byte ptr [rax], al; add byte ptr [rax + 0xba], bh; syscall; 
0x000000000004e690: fucomip st(0); call rcx; 
0x000000000004c00d: fucomip st(0); insd dword ptr [rdi], dx; xchg ah, bh; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x000000000004c199: fucomip st(0); lodsd eax, dword ptr [rsi]; idiv edi; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x00000000000229e0: fucomip st(0); pop rsp; ret; 
0x000000000003fae2: fucomip st(0); ret 0xffb9; 
0x000000000004cb33: fucomip st(0); ret 0xffea; 
0x0000000000055d1d: fucomip st(0); ret 0xfffb; 
0x0000000000052592: fucomip st(0); ret; 
0x000000000004bfa5: fucomip st(0); rol dword ptr [rax], cl; add byte ptr [rax], al; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x0000000000037147: fucomip st(1); fld1; jb 0x37152; fstp st(1); fchs; ret; 
0x0000000000037156: fucomip st(1); fstp st(0); ja 0x3715f; f2xm1; ret; 
0x000000000003ca5e: fucomip st(3); out dx, al; pop rbx; ret; 
0x000000000004361d: fucomip st(3); out dx, al; xor eax, eax; pop rbx; ret; 
0x0000000000050b81: fucompp; ret 0; 
0x000000000001ce22: fxch st(1); add rsp, 0x48; ret; 
0x000000000001cb48: fxch st(1); add rsp, 0x58; ret; 
0x000000000001b868: fxch st(1); fchs; add rsp, 0xa0; pop rbx; ret; 
0x000000000001b89a: fxch st(1); fchs; fxch st(1); ret; 
0x0000000000037107: fxch st(1); fpatan; ret; 
0x00000000000336a8: fxch st(1); fstp xword ptr [rdi]; fchs; add rsp, 0x20; pop rbx; ret; 
0x000000000003550f: fxch st(1); fstp xword ptr [rsp - 0x18]; fldz; fmulp st(1); ret; 
0x000000000001a21c: fxch st(1); ret; 
0x0000000000037855: fyl2x; ret; 
0x000000000003786e: fyl2xp1; ret; 
0x000000000003a5ed: hlt; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x00000000000322be: hlt; add eax, 0xdec1de00; retf 0x2ddb; and eax, 0xde0005f4; ret 0x25d8; 
0x000000000002840f: hlt; cmp byte ptr [rdx], 0; je 0x28416; hlt; sub rax, rdi; ret; 
0x00000000000046d2: hlt; in al, dx; ret 0x33b1; 
0x000000000008680e: hlt; jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x00000000000572a9: hlt; mov eax, 0x90; syscall; 
0x0000000000062219: hlt; out dx, eax; call rcx; 
0x000000000005a9b3: hlt; push rax; movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x00000000000600f3: hlt; ret 0x89bd; 
0x0000000000021aac: hlt; ret; 
0x0000000000004ffc: hlt; sal esi, 0xfe; mov al, 0xb0; test al, 0x94; ret 0x88ad; 
0x0000000000093351: hlt; sti; jmp rsp; 
0x0000000000093349: hlt; sti; ljmp [rsp + rsi*8 - 0xb230005]; sti; jmp rsp; 
0x0000000000028415: hlt; sub rax, rdi; ret; 
0x0000000000056c16: hlt; syscall; 
0x0000000000062203: hlt; xchg eax, edi; ljmp [rdx]; cmpsd dword ptr [rsi], dword ptr [rdi]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x000000000003507d: idiv bh; retf 0x3944; ret 0xe775; 
0x0000000000035238: idiv bh; retf 0x3944; ret 0xe875; 
0x0000000000023c75: idiv byte ptr [rax + 0x114]; syscall; 
0x0000000000023c8b: idiv byte ptr [rax + 0x11b]; syscall; 
0x00000000000223c4: idiv byte ptr [rax + 0x11d]; mov rdx, r8; syscall; 
0x00000000000223c4: idiv byte ptr [rax + 0x11d]; mov rdx, r8; syscall; neg eax; ret; 
0x000000000002345c: idiv byte ptr [rax + 0x11d]; syscall; 
0x000000000002345c: idiv byte ptr [rax + 0x11d]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023ca6: idiv byte ptr [rax + 0x11e]; syscall; 
0x0000000000023ca6: idiv byte ptr [rax + 0x11e]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023472: idiv byte ptr [rax + 0x12c]; syscall; 
0x000000000002348c: idiv byte ptr [rax + 0x12d]; syscall; 
0x000000000002348c: idiv byte ptr [rax + 0x12d]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000238ff: idiv byte ptr [rax + 0x12e]; syscall; 
0x00000000000238ff: idiv byte ptr [rax + 0x12e]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023b07: idiv byte ptr [rax + 0x134]; syscall; 
0x0000000000049c4c: idiv byte ptr [rax + 0x135]; mov rdi, rbx; mov rdx, rsi; syscall; 
0x00000000000235cc: idiv byte ptr [rax + 0x144]; sub rsp, 0x128; syscall; 
0x0000000000043691: idiv byte ptr [rax + 0x16]; test esi, 0xffffff00; jne 0x436a3; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x00000000000226e9: idiv byte ptr [rax + 0x1f]; syscall; 
0x00000000000226e9: idiv byte ptr [rax + 0x1f]; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023a36: idiv byte ptr [rax + 0x28]; syscall; 
0x000000000004a647: idiv byte ptr [rax + 0x3e]; syscall; 
0x00000000000225a6: idiv byte ptr [rax + 0x44]; syscall; 
0x00000000000225a6: idiv byte ptr [rax + 0x44]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000002258e: idiv byte ptr [rax + 0x47]; syscall; 
0x000000000002258e: idiv byte ptr [rax + 0x47]; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000022297: idiv byte ptr [rax + 0x48]; mov rdx, r10; syscall; 
0x00000000000234a4: idiv byte ptr [rax + 0x49]; syscall; 
0x00000000000234a4: idiv byte ptr [rax + 0x49]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000059133: idiv byte ptr [rax + 0x60]; mov rdi, rbx; syscall; 
0x000000000005b2c8: idiv byte ptr [rax + 0x6d]; syscall; 
0x000000000005b2c8: idiv byte ptr [rax + 0x6d]; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000387e0: idiv byte ptr [rax + 0x8c]; syscall; 
0x000000000005a5a7: idiv byte ptr [rax + 0xdf]; syscall; 
0x000000000003a753: idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000003a753: idiv byte ptr [rax + 0xf0]; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000023561: idiv byte ptr [rax + 0xff]; syscall; 
0x0000000000023706: idiv byte ptr [rdi + 0x10]; mov eax, 0x144; syscall; 
0x0000000000023706: idiv byte ptr [rdi + 0x10]; mov eax, 0x144; syscall; ret; 
0x000000000008d176: idiv byte ptr [rdi]; add byte ptr [rax + 0x6b], al; ret; 
0x000000000008fb68: idiv byte ptr [rdi]; add byte ptr [rax], al; leave; ret; 
0x00000000000392ca: idiv byte ptr [rsi - 0x7ffbabd0]; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000004ffe: idiv dh; mov al, 0xb0; test al, 0x94; ret 0x88ad; 
0x000000000004ae03: idiv dword ptr [r8 + 0xe]; mov edi, 2; syscall; 
0x000000000004ae03: idiv dword ptr [r8 + 0xe]; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000039730: idiv dword ptr [rax + 0x12e]; sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000004ae04: idiv dword ptr [rax + 0xe]; mov edi, 2; syscall; 
0x000000000004ae04: idiv dword ptr [rax + 0xe]; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000003f96e: idiv ecx; add rax, rsi; ret; 
0x000000000005923d: idiv ecx; mov word ptr [rbx + 8], ax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000059540: idiv ecx; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000004c19c: idiv edi; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x00000000000306fd: idiv edi; jmp qword ptr [rcx]; 
0x000000000004d341: idiv edi; movsxd rdi, dword ptr [rbx + 0x78]; mov esi, 4; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000004074e: idiv edi; xor r9d, r9d; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x00000000000534eb: idiv esi; mov ecx, eax; shl rdx, 0x20; mov rax, rcx; or rax, rdx; ret; 
0x0000000000053683: idiv esi; ret; 
0x0000000000030cfb: idiv r15; jmp qword ptr [rcx]; 
0x000000000003f96d: idiv rcx; add rax, rsi; ret; 
0x000000000005923c: idiv rcx; mov word ptr [rbx + 8], ax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000053682: idiv rsi; ret; 
0x0000000000039b35: imul al; fcmovnbe st(0), st(5); add dword ptr [rax], eax; add rsp, 0x18; ret; 
0x000000000005a43e: imul al; pop rdi; mov eax, 0x894cffff; out 0x89, eax; ret; 
0x0000000000019130: imul al; push 9; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000049980: imul al; repne cmpsd dword ptr [rsi], dword ptr [rdi]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000005724e: imul al; ret 0xfffe; 
0x0000000000017948: imul al; sub cl, al; add eax, dword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x000000000005a017: imul bl; adc byte ptr [rcx], dh; test byte ptr [rax - 0x80], 0xff; sub eax, 0xff480875; ret; 
0x000000000008329e: imul eax, dword ptr [r14 + 0x6b], 0x59; imul edx, ecx, -0x68; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x000000000004b0fb: imul eax, dword ptr [rax + 0x6c75003e], 0x48; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000007415b: imul eax, dword ptr [rdi + 0x6b], 0x6bc06b72; mov edi, 0xfd6bd36b; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x0000000000023a99: imul eax, dword ptr [rdx], 0; mov eax, 0x27; syscall; 
0x00000000000424c2: imul eax, dword ptr [rip + 0x25598f]; inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x000000000008329f: imul eax, dword ptr [rsi + 0x6b], 0x59; imul edx, ecx, -0x68; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x000000000002bd36: imul eax, dword ptr [rsi], 0; call 0x2894a; add rsp, 0x28; ret; 
0x000000000005b594: imul eax, dword ptr [rsp + 0x30], 0xf4240; add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x0000000000058e74: imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x000000000007415f: imul eax, eax, 0x6b; mov edi, 0xfd6bd36b; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x000000000007b8e7: imul eax, eax, 0x6b; ret; 
0x000000000005b5ea: imul eax, edx, 0x3e8; mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x0000000000021d4b: imul eax; jmp qword ptr [rcx - 1]; 
0x0000000000026d1f: imul eax; ret 0xfffd; 
0x000000000005fa4f: imul ebp, dword ptr [rdx + rdx*2 + 0x64], 0xb19ee156; ret 0x2a5; 
0x0000000000074159: imul ebx, dword ptr [rbx + 0x69], 0x6b726b47; shr byte ptr [rbx - 0x41], 0x6b; shr dword ptr [rbx - 3], cl; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x0000000000080943: imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x0000000000086e19: imul ebx, dword ptr [rbx], 0x73; bnd jbe 0x86dd1; jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x00000000000832a1: imul ebx, dword ptr [rcx + 0x6b], -0x2f; cwde; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x000000000007dcce: imul ebx, dword ptr [rdi - 0x24], 0x10852183; cdq; ret 0x9553; 
0x00000000000775c5: imul ebx, dword ptr [rsi - 0x5f946095], 0x6b; ret; 
0x000000000008a764: imul ecx, dword ptr [rax + rax*8 + 0x47c41900], 0; int 0x67; ret; 
0x00000000000775c1: imul ecx, dword ptr [rbp + 0x6b], 0x4b; imul ebx, dword ptr [rsi - 0x5f946095], 0x6b; ret; 
0x00000000000051ae: imul ecx, dword ptr [rcx + 0x410fdff1]; ret; 
0x000000000007b8e3: imul edi, dword ptr [rbp - 0x3f944195], 0x6b; ret; 
0x000000000007b8db: imul edi, dword ptr [rcx - 0x44944595], 0x6b; mov esp, 0xbe6bbd6b; imul eax, eax, 0x6b; ret; 
0x000000000001a021: imul edi, dword ptr [rdi + rax], -0xe; addps xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000060608: imul edi, eax, 0xdea090d4; pop rsp; cmpsb byte ptr [rsi], byte ptr [rdi]; sub eax, 0x9f3f0925; out 8, al; ret 0x6132; 
0x0000000000058f2a: imul edi, edi, 0x1e13380; add edx, eax; movsxd rdx, edx; imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000021247: imul edi, edi, 0x1f883ff; sbb rdx, rdx; and edx, 2; mov rax, rdx; pop rbx; ret; 
0x000000000005bbb6: imul edi, esp, -1; add rsp, 0xd8; ret; 
0x0000000000093631: imul edi, esp, 0xfc6881ff; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009363d: imul edi, esp, 0xfc6c02ff; jmp rsp; 
0x0000000000023ab3: imul edx, dword ptr [rax], 0x58; pop rbx; pop rbp; ret; 
0x000000000008282e: imul edx, dword ptr [rbx + 0x6fa76fc9], -0x47; outsd dx, dword ptr [rsi]; mov dh, 0x6f; ret 0xe16f; 
0x000000000008282c: imul edx, dword ptr [rbx + 0x6fc9936b], 0x6fb96fa7; mov dh, 0x6f; ret 0xe16f; 
0x0000000000040ff3: imul edx, dword ptr [rdx + 0x25], 0x31fe8900; call qword ptr [rax + 0x48]; 
0x0000000000074163: imul edx, ebx, 0x6b; std; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x00000000000832a3: imul edx, ecx, -0x68; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x0000000000058e6e: imul edx, edx, 0x15180; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x0000000000058f36: imul edx, edx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000074a81: imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x0000000000021833: imul esi, dword ptr [rdi], 0x89480027; adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0x3c; ret 0x4800; 
0x0000000000023751: imul esi, dword ptr [rdx], -1; lcall [rdx - 0x3d]; mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000002f8eb: imul esi, dword ptr [rsi + rax], 0xc4834800; sbb byte ptr [rbx + 0x5d], bl; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x000000000007b8d7: imul esi, dword ptr [rsi - 0x46944795], 0x6b; mov edx, 0xbc6bbb6b; imul edi, dword ptr [rbp - 0x3f944195], 0x6b; ret; 
0x0000000000059052: imul esi, esi, 0xf4240; lea rdx, [rsi + rcx]; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004ea33: imul esp, dword ptr [rax + rax], 0x1ba; add byte ptr [rsi + 0x81], bh; mov rax, r9; syscall; 
0x000000000004e9d4: imul esp, dword ptr [rax + rax], 0xffceb9e8; inc dword ptr [rdi + rcx - 0x4a]; ret; 
0x00000000000775bb: imul esp, dword ptr [rbp + 0x4a69c669], 0x4b6b4d6b; imul ebx, dword ptr [rsi - 0x5f946095], 0x6b; ret; 
0x000000000002175d: imul esp, dword ptr [rdi], 0xdab800; add byte ptr [rax], al; syscall; 
0x0000000000074167: imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x00000000000832a0: imul r11d, dword ptr [rcx + 0x6b], -0x2f; cwde; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x0000000000023a98: imul r8d, dword ptr [rdx], 0; mov eax, 0x27; syscall; 
0x00000000000424c1: imul rax, qword ptr [rip + 0x25598f]; inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x00000000000775c4: imul rbx, qword ptr [r14 - 0x5f946095], 0x6b; ret; 
0x00000000000775c0: imul rcx, qword ptr [rbp + 0x6b], 0x4b; imul ebx, dword ptr [rsi - 0x5f946095], 0x6b; ret; 
0x0000000000058f29: imul rdi, rdi, 0x1e13380; add edx, eax; movsxd rdx, edx; imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000058f35: imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000059051: imul rsi, rsi, 0xf4240; lea rdx, [rsi + rcx]; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004e9d3: imul rsp, qword ptr [r8 + rax], -0x314618; inc dword ptr [rdi + rcx - 0x4a]; ret; 
0x0000000000059116: in al, 0; add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x0000000000054f23: in al, 0x31; test byte ptr [rax - 0x77], 0xe8; mov rdx, r12; syscall; 
0x000000000003f6a6: in al, 0x48; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000006dba8: in al, 0x52; ret; 
0x0000000000025d4f: in al, 0x5b; ret; 
0x0000000000060600: in al, 0x6a; ret; 
0x000000000005141c: in al, 0x84; ror byte ptr [rdi], 0x84; sub al, byte ptr [rax + rax]; add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x000000000008c724: in al, 0x89; ret 0x66bf; 
0x00000000000897cf: in al, 0xa3; iretd; cld; hlt; ret; 
0x00000000000352e8: in al, 0xb6; add eax, 0xc1570f00; ret; 
0x000000000008d009: in al, 0xc4; or rax, qword ptr [rsi + r9*8 - 0x5e55d2c1]; movsxd rdx, ecx; ret 0x3fe9; 
0x000000000000454a: in al, 0xd8; ret 0x7358; 
0x00000000000625f8: in al, 0xe; out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x000000000008c8ec: in al, 0xf9; ret 0xbf; 
0x000000000002f66d: in al, 0xf; push rdi; ret 0x2e0f; 
0x000000000003883e: in al, dx; adc byte ptr [rax - 0x77], cl; cli; syscall; 
0x0000000000027199: in al, dx; add dh, al; add al, 0x11; add byte ptr [rax - 1], cl; ret 0x8348; 
0x0000000000020cae: in al, dx; add rsp, 0x90; pop rbx; ret; 
0x0000000000042d9e: in al, dx; and byte ptr [rax + 0x142], bh; mov rdx, rbp; syscall; 
0x000000000005fa4b: in al, dx; call qword ptr [rdi]; 
0x000000000005fb7b: in al, dx; cli; sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x000000000002eb78: in al, dx; cmp byte ptr [rax + 0x21], cl; ret 0x2148; 
0x0000000000037850: in al, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000004ebd0: in al, dx; jge 0x4ebcf; lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x000000000005fb79: in al, dx; jp 0x5fb68; cli; sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x00000000000275bf: in al, dx; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000018e53: in al, dx; mov edx, eax; sub eax, edx; ret; 
0x0000000000019c41: in al, dx; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x00000000000370e7: in al, dx; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x0000000000017db4: in al, dx; or al, ch; cmc; add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000017a3a: in al, dx; or al, ch; syscall; 
0x000000000004b4e7: in al, dx; or byte ptr [rcx - 0x763ca430], 0xff; push rax; mov eax, 0x5f; syscall; 
0x000000000008d5da: in al, dx; ret 0x1203; 
0x00000000000046d3: in al, dx; ret 0x33b1; 
0x000000000006cdc0: in al, dx; ret 0xc2ed; 
0x00000000000370f3: in al, dx; ret; 
0x0000000000022fcf: in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000059878: in al, dx; sbb byte ptr [rdx + 0x63], cl; adc al, 0x90; add rax, rdx; jmp rax; 
0x00000000000235d4: in al, dx; sub byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000046e90: in al, dx; xlatb; cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000005651c: in al, dx; xor byte ptr [rcx], 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005906a: in eax, 0; add byte ptr [rax], al; lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000059091: in eax, 0; add byte ptr [rax], al; syscall; 
0x00000000000334af: in eax, 0x1e; add byte ptr [rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x000000000005fafa: in eax, 0x3a; fcomp st(0), st(2); ret 0x3437; 
0x000000000004a00e: in eax, 0x41; call rax; 
0x0000000000017a1a: in eax, 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000714be: in eax, 0x49; movabs al, byte ptr [0xb24a3597404a2467]; xchg eax, edi; ret 0x5497; 
0x0000000000086278: in eax, 0x82; ret 0x315b; 
0x000000000007fdca: in eax, 0x82; xor dword ptr [rdi - 0x6e], ebx; adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x0000000000042598: in eax, 0x83; or byte ptr [rcx], al; ret; 
0x000000000005db57: in eax, 0x9d; and eax, dword ptr [rax]; mov rsi, rbx; mov rdi, r12; call rax; 
0x00000000000534cf: in eax, 0xeb; ret 0xc031; 
0x0000000000042bf5: in eax, 0xee; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000029a98: in eax, 0xf2; subps xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000092995: in eax, 0xf8; jmp qword ptr [rdi - 0x1b]; 
0x0000000000092991: in eax, 0xf8; jmp qword ptr [rdx - 0x1b]; 
0x0000000000092989: in eax, 0xf8; lcall [rax - 0x1b]; clc; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000009298d: in eax, 0xf8; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x0000000000054a47: in eax, 0xfb; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000084ebc: in eax, 0xff; add al, 0xff; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000004305b: in eax, 1; add byte ptr [rax], al; test byte ptr [rbx], 1; je 0x4309e; mov eax, 0x68; syscall; 
0x00000000000224e8: in eax, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000002a526: in eax, dx; add rsp, 0x48; faddp st(1); ret; 
0x0000000000093478: in eax, dx; cld; jmp qword ptr [rcx]; 
0x0000000000037882: in eax, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000062652: in eax, dx; leave; ret 0x3b81; 
0x000000000005b7ea: in eax, dx; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x000000000005b7d1: in eax, dx; movzx edx, al; sub eax, edx; ret; 
0x00000000000790dc: in eax, dx; popfq; ret 0xd09e; 
0x000000000006f576: in eax, dx; push rax; ret; 
0x000000000006cdc2: in eax, dx; ret 0xc2ef; 
0x0000000000028b33: in eax, dx; ret; 
0x000000000004cb83: in eax, dx; test rdx, rdx; mov r13, rsi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x000000000003e3c3: in eax, dx; xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x000000000002354b: inc byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000022e48: inc byte ptr [rax]; jg 0x22e55; setne al; movzx eax, al; neg eax; ret; 
0x0000000000043042: inc byte ptr [rcx]; add byte ptr [rax], al; movsxd rsi, dword ptr [rbx + 4]; xor edi, edi; mov eax, 0x6d; syscall; 
0x0000000000054b8c: inc byte ptr [rcx]; mov eax, 0x16; ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bb7: inc byte ptr [rcx]; mov eax, 0x16; ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005700d: inc byte ptr [rcx]; mov eax, 0x16; ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000016eb2: inc byte ptr [rdi]; mov eax, 0x16; ja 0x16ec0; ret; 
0x000000000004a606: inc byte ptr [rdx - 0xcefffc]; mov eax, 0xe; syscall; 
0x000000000004a606: inc byte ptr [rdx - 0xcefffc]; mov eax, 0xe; syscall; ret; 
0x00000000000444d7: inc byte ptr [rdx]; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000032d65: inc byte ptr [rip - 0x2da8f100]; ucomiss xmm1, xmm0; jp 0x32d77; jne 0x32d77; divss xmm0, xmm2; ret; 
0x0000000000050de2: inc byte ptr [rip - 0x72b7e289]; add eax, 0x4235b; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000020ca8: inc dword ptr [r11 - 0x138a0007]; add rsp, 0x90; pop rbx; ret; 
0x0000000000058f2b: inc dword ptr [rax + 0x101e133]; ret 0x6348; 
0x0000000000023094: inc dword ptr [rax + 0x3750a38]; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x00000000000264a9: inc dword ptr [rax + 0x5753b38]; mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x000000000004f2a4: inc dword ptr [rax + 0xf]; mov dh, 0xc5; pop rbx; pop rbp; pop r12; ret; 
0x000000000003b3a9: inc dword ptr [rax + 0xf]; mov dh, 0xff; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x000000000002636a: inc dword ptr [rax - 0x76b7c0c8]; ret 0x3f75; 
0x000000000008ff7f: inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rbx], cl; jmp qword ptr [rbx]; 
0x000000000004630b: inc dword ptr [rax]; add byte ptr [rax], al; jle 0x462ef; ret; 
0x0000000000023563: inc dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000020e80: inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x00000000000659fb: inc dword ptr [rax]; ret 0x89; 
0x000000000003da13: inc dword ptr [rax]; ret; 
0x000000000004074f: inc dword ptr [rbp + 0x31]; leave; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004071d: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; syscall; 
0x000000000002e6dc: inc dword ptr [rbp + 0x75595ac0]; ret; 
0x0000000000046284: inc dword ptr [rbp - 0x146f8a40]; adc byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x00000000000585d6: inc dword ptr [rbp - 0x16318b40]; ret; 
0x0000000000059398: inc dword ptr [rbp - 0x17f08640]; ret; 
0x0000000000040140: inc dword ptr [rbp - 0x2fbbf02e]; mov eax, edx; add rsp, 0x28; ret; 
0x00000000000495d6: inc dword ptr [rbp - 0x327bf040]; add al, byte ptr [rax]; add bl, ch; ret; 
0x000000000003cadc: inc dword ptr [rbp - 0x39fc8040]; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x000000000005453e: inc dword ptr [rbp - 0x3f6af040]; movzx eax, al; neg eax; pop rdx; ret; 
0x0000000000020daf: inc dword ptr [rbp - 0x3f6bf040]; movzx eax, al; pop rdx; ret; 
0x0000000000049243: inc dword ptr [rbp - 0x587bf040]; add dword ptr [rax], eax; add bl, ch; ret; 
0x00000000000406ff: inc dword ptr [rbp - 0x74fb8740]; push rsp; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003d8b4: inc dword ptr [rbp - 0x74fb8b40]; push rsp; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005066d: inc dword ptr [rbp - 0x77]; ret; 
0x000000000009339b: inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; 
0x000000000009339b: inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; sti; jmp qword ptr [rax - 0xb]; 
0x000000000003a813: inc dword ptr [rbx + 0x1889ffca]; mov eax, edx; pop rbx; ret; 
0x00000000000920d0: inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x0000000000039280: inc dword ptr [rbx + 0x6751c38]; mov dword ptr [rax], 0xb; mov eax, ebx; pop rbx; ret; 
0x000000000005530e: inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000020ca9: inc dword ptr [rbx - 0x138a0007]; add rsp, 0x90; pop rbx; ret; 
0x0000000000039d5a: inc dword ptr [rbx - 0x198bfbc8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000020d7f: inc dword ptr [rbx - 0x3fce9e11]; cmp edi, 0x19; setbe al; ret; 
0x0000000000020ddb: inc dword ptr [rbx - 0x3fcebe11]; cmp edi, 0x19; setbe al; ret; 
0x0000000000020d5d: inc dword ptr [rbx - 0x3fcecf11]; cmp edi, 9; setbe al; ret; 
0x0000000000020d6e: inc dword ptr [rbx - 0x3fcede11]; cmp edi, 0x5d; setbe al; ret; 
0x0000000000020d90: inc dword ptr [rbx - 0x3fcedf11]; cmp edi, 0x5e; setbe al; ret; 
0x0000000000020d12: inc dword ptr [rbx - 0x3fcedf31]; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000020d46: inc dword ptr [rbx - 0x69f0e001]; ret 0xff83; 
0x0000000000084ec5: inc dword ptr [rbx]; inc dword ptr [rsi]; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000092a3b: inc dword ptr [rcx + 0x29]; stc; jmp rdi; 
0x0000000000093633: inc dword ptr [rcx + 0x2fffc68]; insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000004a585: inc dword ptr [rcx + 0x58]; pop r9; add rsp, 0x10; pop rbx; ret; 
0x0000000000058205: inc dword ptr [rcx + 1]; rol byte ptr [rcx + rcx*4 - 0x40], 0xf7; fadd dword ptr [rbp - 0x7b]; leave; cmove eax, r8d; ret; 
0x00000000000552c3: inc dword ptr [rcx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005539e: inc dword ptr [rcx + 8]; mov r8d, 0xca; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004afef: inc dword ptr [rcx - 0x46]; add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r14; mov rdx, r13; syscall; 
0x0000000000019a33: inc dword ptr [rcx - 0x75]; push rbx; or byte ptr [rcx - 0x77], al; push rdx; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000001ed9b: inc dword ptr [rcx - 0x77]; ret 0xc5e9; 
0x0000000000058b13: inc dword ptr [rcx - 0x77]; ret; 
0x0000000000030586: inc dword ptr [rcx - 1]; xor dh, byte ptr [rdi + 0x10]; movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003c66d: inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0xddeb; 
0x0000000000065967: inc dword ptr [rcx]; or byte ptr [rax], al; add byte ptr [rax], al; ret 0xffff; 
0x000000000005afcb: inc dword ptr [rcx]; ret; 
0x0000000000034338: inc dword ptr [rcx]; sbb eax, eax; not eax; add eax, 2; ret; 
0x0000000000057177: inc dword ptr [rcx]; sbb eax, eax; not eax; and eax, 0xb; ret; 
0x0000000000092aff: inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092afb: inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092b07: inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x0000000000092b0b: inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x00000000000725c3: inc dword ptr [rcx]; xor byte ptr [rdx], al; xor byte ptr [rsi], cl; jmp qword ptr [rdi]; 
0x000000000004e9db: inc dword ptr [rdi + rcx - 0x4a]; ret; 
0x0000000000084ebd: inc dword ptr [rdi + rdi*8]; movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x0000000000051f23: inc dword ptr [rdi]; ja 0x51b11; lea rax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000934cb: inc dword ptr [rdx + 0x66]; cld; inc edx; push 0x68c2fffc; cld; call qword ptr [rdi + 0x66]; 
0x00000000000935db: inc dword ptr [rdx + rbp*2 - 4]; jmp qword ptr [rax + 0x6a]; 
0x0000000000035827: inc dword ptr [rdx - 0x1407b3f1]; add cl, byte ptr [rcx + 0x7fc783c7]; shl edi, 0x17; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000093653: inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; call qword ptr [rax]; 
0x000000000009361f: inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x00000000000935d3: inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; dec dword ptr [rbp + 0x44fffc6a]; push -4; jmp qword ptr [rax + 0x6a]; 
0x0000000000093637: inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009363f: inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; jmp rsp; 
0x0000000000020e86: inc dword ptr [rdx]; setbe al; ret; 
0x0000000000057db9: inc dword ptr [rip + 0x2400e1]; ret; 
0x0000000000020b36: inc dword ptr [rsi]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000084ec7: inc dword ptr [rsi]; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000001e0b2: inc eax; cdqe; pop rdx; ret; 
0x00000000000275b8: inc eax; cmp rax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x00000000000275c8: inc eax; mov byte ptr [rip + 0x26e8a0], al; ret; 
0x00000000000424ca: inc eax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x0000000000058277: inc eax; mov rdi, r8; mov qword ptr [r8], rax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x0000000000037a53: inc eax; ret; 
0x000000000005b7cc: inc ecx; test al, al; jne 0x5b7bf; movzx edx, al; sub eax, edx; ret; 
0x0000000000057907: inc edi; add byte ptr [rbx], cl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000023193: inc edi; add byte ptr [rdi], bl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x000000000003f3fe: inc edi; add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, ebx; pop rbx; ret; 
0x000000000004a9ec: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x00000000000929ff: inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x0000000000022514: inc edi; je 0x22520; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000021985: inc edx; cmp rdx, 3; jne 0x21971; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x00000000000549aa: inc edx; mov eax, edx; pop rdx; ret; 
0x00000000000934cf: inc edx; push 0x68c2fffc; cld; call qword ptr [rdi + 0x66]; 
0x0000000000093463: inc edx; push 0x68c2fffc; cld; call qword ptr [rdx - 0x4d00039a]; cld; call rdx; 
0x000000000009349f: inc edx; push 0x68c2fffc; cld; jmp rcx; 
0x000000000004d58f: inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x00000000000275b7: inc rax; cmp rax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x00000000000424c9: inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x0000000000058276: inc rax; mov rdi, r8; mov qword ptr [r8], rax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x000000000005b7cb: inc rcx; test al, al; jne 0x5b7bf; movzx edx, al; sub eax, edx; ret; 
0x0000000000022513: inc rdi; je 0x22520; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000021984: inc rdx; cmp rdx, 3; jne 0x21971; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x0000000000089118: insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x0000000000089110: insb byte ptr [rdi], dx; add byte ptr gs:[rbp + 0x74], dh; xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000001cb45: insb byte ptr [rdi], dx; and al, 0x10; fxch st(1); add rsp, 0x58; ret; 
0x000000000001cba5: insb byte ptr [rdi], dx; and al, 0x18; fchs; fld xword ptr [rsp + 8]; ret; 
0x0000000000037124: insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x000000000001ca02: insb byte ptr [rdi], dx; and al, 0x18; ret; 
0x0000000000032520: insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001ce1b: insb byte ptr [rdi], dx; and al, 0x50; fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x000000000001ce1f: insb byte ptr [rdi], dx; and al, 0x60; fxch st(1); add rsp, 0x48; ret; 
0x000000000002ba0f: insb byte ptr [rdi], dx; and al, 0xd8; ret; 
0x000000000002b864: insb byte ptr [rdi], dx; and al, 0xe8; fmulp st(1); ret; 
0x00000000000224f0: insb byte ptr [rdi], dx; and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000004a402: insb byte ptr [rdi], dx; and al, 1; xor esi, esi; push rcx; call rax; 
0x0000000000037864: insb byte ptr [rdi], dx; and al, 8; cmp eax, 0x3ffd9400; ja 0x37871; fyl2xp1; ret; 
0x00000000000372e8: insb byte ptr [rdi], dx; and al, 8; fabs; ret; 
0x0000000000037842: insb byte ptr [rdi], dx; and al, 8; fistp qword ptr [rsp - 0x10]; mov rax, qword ptr [rsp - 0x10]; ret; 
0x0000000000037120: insb byte ptr [rdi], dx; and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000003712b: insb byte ptr [rdi], dx; and al, 8; fld1; fpatan; ret; 
0x0000000000037302: insb byte ptr [rdi], dx; and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x00000000000378fd: insb byte ptr [rdi], dx; and al, 8; frndint; ret; 
0x000000000003790e: insb byte ptr [rdi], dx; and al, 8; fsqrt; ret; 
0x0000000000037852: insb byte ptr [rdi], dx; and al, 8; fyl2x; ret; 
0x000000000001cbab: insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000093655: insb byte ptr [rdi], dx; cld; call qword ptr [rax]; 
0x0000000000093621: insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x00000000000935d5: insb byte ptr [rdi], dx; cld; dec dword ptr [rbp + 0x44fffc6a]; push -4; jmp qword ptr [rax + 0x6a]; 
0x00000000000935fd: insb byte ptr [rdi], dx; cld; dec dword ptr [rcx - 0x61000398]; push 0x68b3fffc; cld; call rdi; 
0x000000000009357d: insb byte ptr [rdi], dx; cld; dec dword ptr [rcx - 0x61000398]; push 0x68bdfffc; cld; jmp rdx; 
0x0000000000093651: insb byte ptr [rdi], dx; cld; inc dword ptr [rdx]; insb byte ptr [rdi], dx; cld; call qword ptr [rax]; 
0x0000000000093639: insb byte ptr [rdi], dx; cld; jmp qword ptr [rbp + 0x69]; 
0x0000000000093641: insb byte ptr [rdi], dx; cld; jmp rsp; 
0x000000000009362d: insb byte ptr [rdi], dx; cld; lcall [rip - 0x7e000397]; push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x0000000000093619: insb byte ptr [rdi], dx; cld; lcall [rsi + 0x2fffc68]; insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x0000000000092d2d: insb byte ptr [rdi], dx; cmovb ebx, dword ptr [rbx]; or byte ptr [rdi], ch; mov cl, 0x2d; ret; 
0x0000000000059150: insb byte ptr [rdi], dx; fdivr st(3); lcall [rdx + 0x5b]; pop rbp; ret; 
0x0000000000086813: insb byte ptr [rdi], dx; int 0x73; ret; 
0x000000000007b9f5: insb byte ptr [rdi], dx; mov bh, 0x6c; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x000000000007b9f3: insb byte ptr [rdi], dx; mov dh, 0x6c; mov bh, 0x6c; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x0000000000092df1: insb byte ptr [rdi], dx; mov eax, 0x59567e3a; sub eax, 0x31ad6446; ret 0x9dff; 
0x000000000007b9f7: insb byte ptr [rdi], dx; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x000000000005ff95: insb byte ptr [rdi], dx; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000004b100: insb byte ptr [rdi], dx; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000006e2bd: insb byte ptr [rdi], dx; or bh, byte ptr [rbp + 0xb]; jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000007dc8b: insb byte ptr [rdi], dx; pop rdx; push rbx; ret; 
0x0000000000004d0c: insb byte ptr [rdi], dx; ret 0x1bb7; 
0x00000000000219ae: insb byte ptr [rdi], dx; ret 0x4808; 
0x0000000000074a85: insb byte ptr [rdi], dx; ret 0xb16f; 
0x0000000000075bab: insb byte ptr [rdi], dx; ret 0xba6c; 
0x000000000006cd86: insb byte ptr [rdi], dx; ret 0xc26d; 
0x000000000007b9fd: insb byte ptr [rdi], dx; ret 0xc36c; 
0x0000000000085db9: insb byte ptr [rdi], dx; ret 0xed72; 
0x000000000006cdf4: insb byte ptr [rdi], dx; ret; 
0x000000000007b9f9: insb byte ptr [rdi], dx; shr byte ptr [rcx + rax*8 + 0x6c], 0xc2; insb byte ptr [rdi], dx; ret; 
0x00000000000911c5: insb byte ptr [rdi], dx; xor dword ptr [rdi + rbx*2 - 0x7e], eax; jecxz 0x91198; push r15; sbb eax, 0x153f5945; ret; 
0x000000000005b2ca: insd dword ptr [rdi], dx; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b05ae8f; ret; 
0x0000000000038a7c: insd dword ptr [rdi], dx; and al, 2; add byte ptr [rcx], bh; ret; 
0x0000000000032db4: insd dword ptr [rdi], dx; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x000000000007fdc9: insd dword ptr [rdi], dx; in eax, 0x82; xor dword ptr [rdi - 0x6e], ebx; adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000007eb92: insd dword ptr [rdi], dx; jns 0x7ebd7; push rdx; mov eax, 0xc46d4e60; pop rbx; ret 0xa15b; 
0x00000000000894d3: insd dword ptr [rdi], dx; mov dh, 0xdd; xchg byte ptr [rbx + 0x6e], bl; mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x000000000007bb03: insd dword ptr [rdi], dx; mov ebp, 0xc16dbe6d; insd dword ptr [rdi], dx; ret 0xc36d; 
0x000000000007baff: insd dword ptr [rdi], dx; mov ebx, 0xbd6dbc6d; insd dword ptr [rdi], dx; mov esi, 0xc26dc16d; insd dword ptr [rdi], dx; ret; 
0x000000000007bafd: insd dword ptr [rdi], dx; mov edx, 0xbc6dbb6d; insd dword ptr [rdi], dx; mov ebp, 0xc16dbe6d; insd dword ptr [rdi], dx; ret 0xc36d; 
0x000000000007bb05: insd dword ptr [rdi], dx; mov esi, 0xc26dc16d; insd dword ptr [rdi], dx; ret; 
0x000000000007bb01: insd dword ptr [rdi], dx; mov esp, 0xbe6dbd6d; insd dword ptr [rdi], dx; shr dword ptr [rbp - 0x3e], 0x6d; ret; 
0x000000000008c133: insd dword ptr [rdi], dx; outsb dx, byte ptr [rsi]; cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x00000000000720cf: insd dword ptr [rdi], dx; pop rbp; push 0x69e1346f; or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000000585e: insd dword ptr [rdi], dx; pop rsp; push 0x39b74082; pop rsi; test al, 0x20; ret 0x9504; 
0x000000000008ab1c: insd dword ptr [rdi], dx; ret 0x4d; 
0x000000000006cd88: insd dword ptr [rdi], dx; ret 0xc270; 
0x000000000007bb09: insd dword ptr [rdi], dx; ret 0xc36d; 
0x0000000000071269: insd dword ptr [rdi], dx; ret 0xce5c; 
0x00000000000766bb: insd dword ptr [rdi], dx; ret 0xcf6d; 
0x0000000000063a06: insd dword ptr [rdi], dx; ret; 
0x000000000007bb07: insd dword ptr [rdi], dx; shr dword ptr [rbp - 0x3e], 0x6d; ret; 
0x0000000000006d10: insd dword ptr [rdi], dx; sub dword ptr [rax], eax; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], ch; ret 4; 
0x0000000000070b69: insd dword ptr [rdi], dx; test byte ptr [rax], bl; mov dword ptr [rsi], edi; test al, 0x51; ret; 
0x000000000004c00f: insd dword ptr [rdi], dx; xchg ah, bh; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x00000000000381d4: int 0x25; add bh, bh; ret 0x1389; 
0x00000000000920cc: int 0x45; mov bh, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x00000000000269ff: int 0x48; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075e42: int 0x67; mov bl, 0x67; mul dword ptr [rdi - 0xa]; out dx, al; jecxz 0x75eb5; ret 0xb967; 
0x000000000008a76c: int 0x67; ret; 
0x0000000000086814: int 0x73; ret; 
0x000000000005bd49: int 0x80; 
0x000000000002120e: int 0x85; sar byte ptr [rax + 0xa], 1; ret; 
0x00000000000884ea: int 0x8a; ret 0xda8a; 
0x000000000004996f: int 0xac; cld; call qword ptr [rbx + 0x48]; 
0x0000000000005228: int 0xcb; cld; mov dh, 0xea; js 0x51b0; sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x000000000002eed0: int 0xde; ret 0xccd9; 
0x0000000000020534: int 0xe0; pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000001fc8c: int 0xe0; pop rbx; ret; 
0x000000000004b80f: int 0xe8; movsxd rcx, dword ptr [rcx + 0xbe0000]; or byte ptr [rax], 0; mov rax, r13; mov rdi, r14; syscall; 
0x000000000004b9e4: int 0xf; mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000000049c8b: int 0xfc; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000004c141: int 0xff; call qword ptr [rbx + 0x48]; 
0x000000000004eb78: int 0xff; dec dword ptr [rcx + 0x5d5b5ae8]; ret; 
0x000000000004ec1c: int 0xff; lcall [rax + 0x5b]; pop rbp; ret; 
0x000000000003533f: int 5; add byte ptr [rbp + 4], dh; movapd xmm0, xmm1; ret; 
0x0000000000034c32: int 5; add cl, bl; ret 0xc9d8; 
0x0000000000004cb8: int1; adc dh, ch; stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x0000000000057b70: int1; add byte ptr [rax], al; add byte ptr [rax + 0xba], bh; syscall; 
0x0000000000058e2c: int1; and eax, dword ptr [rax]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x0000000000028b51: int1; fstp st(1); ret; 
0x0000000000092ced: int1; iretd; ret 0; 
0x00000000000550c9: int1; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000091592: int1; mov ch, 0x1a; ret; 
0x0000000000080de0: int1; mov ecx, eax; push rbx; jl 0x80e44; ret 0xe48f; 
0x0000000000017b5e: int1; mov rax, rbx; pop rbx; ret; 
0x000000000003564c: int1; movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x00000000000536ec: int1; or rdx, r8; shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005372e: int1; or rdx, r8; shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000008aebc: int1; outsb dx, byte ptr [rsi]; ret; 
0x000000000003f6c4: int1; pop rbx; ret; 
0x000000000006cdc6: int1; ret 0xc2f6; 
0x0000000000092825: int1; ret 0xde3f; 
0x000000000001e29a: int1; ret; 
0x0000000000075fae: iretd; adc bh, 0x80; out 0x80, al; int 0x80; 
0x0000000000020d14: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x0000000000021082: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x00000000000897d1: iretd; cld; hlt; ret; 
0x000000000001d071: iretd; jmp qword ptr [rsi + 0xf]; 
0x0000000000032809: iretd; jne 0x3281d; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000005fd6b: iretd; lea ebx, es:[rbx - 0x60]; or dword ptr [rax - 0x38495c04], 0xffffffc1; ret; 
0x0000000000057f34: iretd; lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x00000000000350ed: iretd; mov eax, 0x570f0005; retf 0x3941; sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x000000000004b915: iretd; mov rsi, r12; syscall; 
0x000000000004b5e0: iretd; mov rsi, rdx; syscall; 
0x0000000000088a84: iretd; popfq; ret 0xd99d; 
0x0000000000075cf0: iretd; push rsp; ret; 
0x0000000000092cee: iretd; ret 0; 
0x0000000000062308: iretd; sti; sal byte ptr [rbp - 0x164a245b], 0x5b; ret 0x3956; 
0x000000000001e206: iretd; syscall; 
0x0000000000078a98: iretd; xchg eax, ebx; ret 0xda93; 
0x00000000000169c7: ja 0x169d0; mov rax, rdi; ret; 
0x0000000000016eb9: ja 0x16ec0; ret; 
0x0000000000019b97: ja 0x19b9d; je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000019b9c: ja 0x19ba6; ret; 
0x0000000000001d10: ja 0x1d15; add byte ptr [rax], al; syscall; 
0x000000000001e337: ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x0000000000020e9e: ja 0x20ef3; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000020fdb: ja 0x20ff5; and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x0000000000021471: ja 0x2148b; jl 0x214ad; movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x00000000000239a2: ja 0x239a8; mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x00000000000296a7: ja 0x296ae; movsd qword ptr [rdi], xmm4; ret; 
0x0000000000029cd8: ja 0x29ccc; movups xmm1, xmmword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x000000000002fff1: ja 0x30004; movsd xmm1, qword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003058d: ja 0x3059f; movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000031455: ja 0x31590; lea rdx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000032bb3: ja 0x32bcb; test eax, 0x7ff00000; jne 0x32d43; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003559d: ja 0x3558f; movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000003564b: ja 0x3563e; movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x000000000003715a: ja 0x3715f; f2xm1; ret; 
0x000000000003786c: ja 0x37871; fyl2xp1; ret; 
0x000000000003b386: ja 0x3b38b; mov eax, edi; ret; 
0x000000000003da0c: ja 0x3da16; mov eax, edi; and eax, 0xffffff; ret; 
0x000000000003da38: ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000004310f: ja 0x431ce; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x000000000004364c: ja 0x43656; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000436a5: ja 0x436ab; xor eax, eax; ret; 
0x0000000000046307: ja 0x46311; cmp ecx, 0xff; jle 0x462ef; ret; 
0x00000000000464a4: ja 0x46480; mov eax, edx; lea rdx, [rip + 0x4cb2d]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000004a5a8: ja 0x4a5ca; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004ab47: ja 0x4ab52; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000004bf80: ja 0x4bf8a; ret; 
0x000000000004d58a: ja 0x4d5b4; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000004db77: ja 0x4db9d; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004f48e: ja 0x4f5f5; lea rax, [rip + 0x43b5d]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000506bb: ja 0x50302; lea rax, [rip + 0x42a58]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000050de4: ja 0x50e03; lea rax, [rip + 0x4235b]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000518df: ja 0x51a46; lea rax, [rip + 0x4195c]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000051f25: ja 0x51b11; lea rax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x000000000005273e: ja 0x52cef; lea rcx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000544d4: ja 0x544de; ret; 
0x0000000000054b93: ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054b96: ja 0x54bb0; xor eax, eax; ret; 
0x0000000000054bad: ja 0x54bb5; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x0000000000054bb1: ja 0x54bbb; xor eax, eax; ret; 
0x0000000000054bbe: ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000054bc1: ja 0x54bdf; xor eax, eax; ret; 
0x0000000000054bcf: ja 0x54bf1; xor eax, eax; ret; 
0x0000000000054c03: ja 0x54c11; add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000054c0f: ja 0x54c21; ret; 
0x0000000000054c2b: ja 0x54c3a; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x0000000000057014: ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000057376: ja 0x5739e; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000006264a: ja 0x62688; mov ebx, 0xe6766a0a; scasb al, byte ptr [rdi]; in eax, dx; leave; ret 0x3b81; 
0x00000000000715b8: ja 0x715cf; sbb dword ptr [rsi], edx; ret; 
0x000000000007dcc9: ja 0x7dcf4; mov es, edi; xchg eax, ecx; imul ebx, dword ptr [rdi - 0x24], 0x10852183; cdq; ret 0x9553; 
0x00000000000803c1: ja 0x803b6; lea esi, [rcx*4 + 0x5e1694c1]; test dword ptr [rbx + 0x2c], edx; push rsp; ret; 
0x0000000000086d5d: ja 0x86da5; jp 0x86d47; xchg eax, ecx; ret; 
0x000000000008d8b3: ja 0x8d868; mov esi, 0x60003fe7; adc byte ptr [r10 + 0x18], sil; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000008f19b: ja 0x8f1ef; ret 0x3fd3; 
0x00000000000929d0: ja 0x929f6; stc; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x00000000000930f4: ja 0x930cc; sti; jmp qword ptr [rbx - 0x29]; 
0x0000000000023a84: jae 0x23a8e; syscall; 
0x0000000000043048: jae 0x4304e; xor edi, edi; mov eax, 0x6d; syscall; 
0x00000000000550ca: jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000055c4b: jae 0x55c65; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000005ae04: jae 0x5ae06; add byte ptr [rax], al; syscall; 
0x000000000005b357: jae 0x5b35d; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000062391: jae 0x6239d; mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x0000000000071550: jae 0x715c3; ret 0xcd0a; 
0x0000000000071b04: jae 0x71b5b; ret; 
0x00000000000720da: jae 0x72145; ret; 
0x0000000000086e1b: jae 0x86e0f; jbe 0x86dd1; jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x000000000008a1b0: jae 0x8a189; pop rsp; wait; ret 0xd6cc; 
0x000000000008f704: jae 0x8f6d9; ret; 
0x000000000003a83c: jae 0xa78a841; movsx eax, dil; and eax, 0xdfff; ret; 
0x000000000001aecd: jae 0xffffffff9510b80e; ret; 
0x0000000000016961: jb 0x16966; mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000018a83: jb 0x18a94; mov dh, 0xc1; movzx edx, r8b; sub eax, edx; ret; 
0x000000000001bb86: jb 0x1bb97; add byte ptr [rax], al; add rsp, 0x48; fchs; fxch st(1); ret; 
0x0000000000021733: jb 0x21734; call qword ptr [rbx + 0x48]; 
0x0000000000026ec4: jb 0x26ece; mov qword ptr [rax], rsi; ret; 
0x000000000002743e: jb 0x27448; mov qword ptr [rax], rsi; ret; 
0x000000000002aef7: jb 0x2aeff; add bl, ch; je 0x2aef3; ret; 
0x000000000003714b: jb 0x37152; fstp st(1); fchs; ret; 
0x000000000000492c: jb 0x4935; scasb al, byte ptr [rdi]; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x000000000004ac17: jb 0x4ac16; dec dword ptr [rcx - 0x377ce8]; pop rbx; ret; 
0x000000000004b78c: jb 0x4b79d; xchg eax, ebp; ret; 
0x000000000004cf82: jb 0x4cfac; mov byte ptr [rcx], dil; ret; 
0x000000000004e985: jb 0x4e9af; mov byte ptr [rcx], dil; ret; 
0x000000000004e9b4: jb 0x4e9de; mov byte ptr [rcx], dil; ret; 
0x000000000005aa4b: jb 0x5aa4d; add byte ptr [rax], al; syscall; 
0x000000000005fcfd: jb 0x5fd21; sbb edi, edi; ret; 
0x0000000000070b68: jb 0x70bd7; test byte ptr [rax], bl; mov dword ptr [rsi], edi; test al, 0x51; ret; 
0x000000000007244c: jb 0x72468; pop rbx; sub al, 0xb6; shl byte ptr [rax], 0xe2; ret; 
0x000000000007415e: jb 0x741cb; shr byte ptr [rbx - 0x41], 0x6b; shr dword ptr [rbx - 3], cl; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x0000000000086d5b: jb 0x86dc3; ja 0x86da5; jp 0x86d47; xchg eax, ecx; ret; 
0x000000000008d8bc: jb 0x8d8d6; sar dword ptr [rdi], cl; ret 0x9725; 
0x0000000000092ce9: jb 0x92c9c; mov spl, 0xf1; iretd; ret 0; 
0x0000000000018a82: jbe 0x18af6; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x00000000000191bb: jbe 0x191b0; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000020d00: jbe 0x20d0d; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x0000000000026ecc: jbe 0x26ed6; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x0000000000026fbc: jbe 0x26fbf; hlt; ret; 
0x0000000000027446: jbe 0x27450; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x00000000000296d2: jbe 0x296e3; subss xmm0, xmm0; xor eax, eax; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x000000000002a5ab: jbe 0x2a5b3; add dl, dh; divps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002b8de: jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002d62b: jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d705: jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x000000000002de87: jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x000000000002f4c0: jbe 0x2f4d3; movsd xmm1, qword ptr [rip + 0x62766]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002fa3c: jbe 0x2fa4e; movss xmm1, dword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032be1: jbe 0x32be4; ret; 
0x0000000000032dba: jbe 0x32dbd; ret; 
0x00000000000337cc: jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000033889: jbe 0x33890; addss xmm0, xmm2; ret; 
0x000000000003558d: jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000003563c: jbe 0x35643; mulss xmm0, xmm1; ret; 
0x00000000000372cf: jbe 0x3729a; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372dc: jbe 0x372a7; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000038815: jbe 0x38817; add byte ptr [rax], al; syscall; 
0x000000000003982a: jbe 0x39831; mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x000000000003a811: jbe 0x3a811; inc dword ptr [rbx + 0x1889ffca]; mov eax, edx; pop rbx; ret; 
0x000000000003b974: jbe 0x3b998; sub rdx, rdi; lea eax, [rdx + 2]; ret; 
0x000000000003da2f: jbe 0x3da41; cmp eax, 0xbf; mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000004dbe4: jbe 0x4dc0a; add byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000004dc0f: jbe 0x4dc35; add byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000004ea32: jbe 0x4ea9d; and al, 0; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000000592d: jbe 0x590d; mov al, 0xd5; pop rsp; ret 0x9ec0; 
0x0000000000062397: jbe 0x623c7; leave; ret 0x8581; 
0x000000000006264f: jbe 0x62637; scasb al, byte ptr [rdi]; in eax, dx; leave; ret 0x3b81; 
0x000000000006e2bc: jbe 0x6e32a; or bh, byte ptr [rbp + 0xb]; jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000007e492: jbe 0x7e4f6; ret 0x9062; 
0x0000000000081fa2: jbe 0x81ff8; push sp; popfq; push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x0000000000086153: jbe 0x861a7; or word ptr [rsi - 0x68], cx; push rax; ret 0x7153; 
0x0000000000086686: jbe 0x866d9; ret; 
0x000000000008680f: jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x0000000000086e1d: jbe 0x86dd1; jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x0000000000014926: je 0x1494c; or al, 0xe8; ret 0x1f; 
0x0000000000017b59: je 0x17b5f; cmp esi, eax; jne 0x17b50; mov rax, rbx; pop rbx; ret; 
0x00000000000190e2: je 0x190f0; cmp rcx, rdx; jne 0x190c0; xor eax, eax; ret; 
0x0000000000019642: je 0x19658; add rdi, 4; sub rdx, 1; jne 0x19640; xor eax, eax; ret; 
0x00000000000197bd: je 0x197c6; mov edx, dword ptr [r8 + 8]; mov dword ptr [rdi + 8], edx; pop rbx; pop rbp; ret; 
0x000000000001990c: je 0x19914; mov ecx, dword ptr [rsi + rdx*4]; mov dword ptr [rax + rdx*4], ecx; pop rbx; pop rbp; ret; 
0x0000000000019a2e: je 0x19914; mov edx, dword ptr [r11 + 8]; mov dword ptr [r10 + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000019b90: je 0x19ba0; cmp r8, 1; mov dword ptr [rdi + 4], esi; je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000019b99: je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001acd1: je 0x1acf8; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000001adcb: je 0x1adf1; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000001af78: je 0x1af81; xor esi, esi; call 0x1ae5b; mov eax, ebx; pop rbx; ret; 
0x000000000001b29d: je 0x1b2ac; cmp eax, 2; jne 0x1b2f1; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001cdb2: je 0x1cd72; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001ce18: je 0x1cde2; fld xword ptr [rsp + 0x50]; fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x000000000001f77b: je 0x1f7a1; sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x0000000000020ba2: je 0x20bb8; or byte ptr [rax - 1], cl; ret 0x8349; 
0x000000000002133c: je 0x21350; sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x0000000000021977: je 0x21984; mov rax, r9; syscall; 
0x0000000000021f0d: je 0x21f33; adc byte ptr [rax + 0xd], bh; mov rdi, r8; mov rdx, rcx; syscall; 
0x0000000000021f44: je 0x21f6a; or byte ptr [rax + 0xe], bh; syscall; 
0x0000000000022259: je 0x22272; test eax, eax; js 0x22269; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000002231e: je 0x22331; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000022402: je 0x22407; or edx, 0xffffffff; mov eax, edx; pop rdx; ret; 
0x00000000000224ab: je 0x224b8; not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000022516: je 0x22520; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000002311b: je 0x23141; cmp byte ptr [rax - 0x77], cl; fsubp st(0); call qword ptr [rsi + 1]; 
0x000000000002368d: je 0x2369e; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x00000000000238df: je 0x23905; and byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; syscall; 
0x0000000000023a7a: je 0x23a7c; add byte ptr [rax], al; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000023b95: je 0x23ba8; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000023baf: je 0x23bc2; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x0000000000024027: je 0x24034; call 0x21e65; mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x0000000000025d4e: je 0x25d34; pop rbx; ret; 
0x00000000000261f0: je 0x261e8; ret; 
0x0000000000026fd0: je 0x26fdd; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000002745f: je 0x2746c; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027660: je 0x2766d; mov dword ptr [rip + 0x270a74], 0; ret; 
0x0000000000028413: je 0x28416; hlt; sub rax, rdi; ret; 
0x0000000000028a27: je 0x28a3d; mov rax, rdx; add rax, rdx; sete al; movzx eax, al; ret; 
0x00000000000297d7: je 0x297df; add cl, bl; ret; 
0x0000000000029cd7: je 0x29d50; movsd xmm1, qword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x000000000002a750: je 0x2a758; add dl, dh; addps xmm0, xmmword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a985: je 0x2a992; movsd xmm1, qword ptr [rip + 0x66031]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002aa91: je 0x2aa9e; movss xmm1, dword ptr [rip + 0x65f35]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002aefb: je 0x2aef3; ret; 
0x000000000002b398: je 0x2b3a5; movsd xmm1, qword ptr [rip + 0x6561e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b438: je 0x2b445; movss xmm1, dword ptr [rip + 0x6558e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b985: je 0x2b91d; movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000002c30b: je 0x2c318; movsd xmm1, qword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002c452: je 0x2c465; movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c891: je 0x2c89e; movss xmm1, dword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002c9d1: je 0x2c9e3; movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002d620: je 0x2d6d5; cmp eax, 0x7f7; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x000000000002d6fa: je 0x2d7b8; cmp eax, 0x7f7; jbe 0x2d70c; addss xmm0, xmm0; ret; 
0x000000000002df25: je 0x2dec2; movss xmm1, dword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000002e4ba: je 0x2e4c5; test eax, eax; je 0x2e4da; movapd xmm0, xmm1; ret; 
0x000000000002e4be: je 0x2e4da; movapd xmm0, xmm1; ret; 
0x000000000002e517: je 0x2e521; test edx, edx; jns 0x2e535; movaps xmm0, xmm1; ret; 
0x000000000002e65f: je 0x2e66f; test edx, edx; movaps xmm0, xmm1; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002f0ce: je 0x2f0f4; sbb byte ptr [rdi], cl; push rdi; ret 0xf66; 
0x000000000002f668: je 0x2f68e; or al, 0xf; push rdi; in al, 0xf; push rdi; ret 0x2e0f; 
0x0000000000035063: je 0x350aa; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003513b: je 0x35148; movsd xmm1, qword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x000000000003521f: je 0x35261; movss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000352e2: je 0x352ef; movss xmm1, dword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x00000000000355d8: je 0x355eb; subsd xmm1, xmm1; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035686: je 0x35698; subss xmm1, xmm1; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x00000000000365c4: je 0x365d1; movsd xmm1, qword ptr [rip + 0x5a3f2]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000366a4: je 0x366b1; movss xmm1, dword ptr [rip + 0x5a322]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000003681c: je 0x36842; cmp al, ch; mov edx, 0x48ffff35; add esp, 0x30; add rsp, 0x38; ret; 
0x0000000000037a4a: je 0x37a55; movsxd rdi, edi; bsf rax, rdi; inc eax; ret; 
0x0000000000037a5b: je 0x37a64; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000037a6a: je 0x37a73; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000038b1b: je 0x38b2a; push rax; call 0x4bf87; mov eax, 1; pop rdx; ret; 
0x0000000000038efc: je 0x38f22; or byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x75]; and al, 0x10; call rax; 
0x000000000003905a: je 0x39080; or byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x75]; and al, 0x10; call rax; 
0x0000000000039258: je 0x39263; call 0x21e65; mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x0000000000039d5e: je 0x39d46; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003a410: je 0x3a41e; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003a410: je 0x3a41e; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x000000000003a52e: je 0x3a535; call 0x5b5a5; add rsp, 0x118; ret; 
0x000000000003a5e7: je 0x3a605; movsxd rdi, r12d; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000003a683: je 0x3a69c; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003a6c4: je 0x3a6ea; jo 0x3a710; mov dword ptr [rsp + 0x70], eax; mov eax, 0xf4; syscall; 
0x000000000003a840: je 0x3a84c; movsx eax, dil; and eax, 0xdfff; ret; 
0x000000000003a9e7: je 0x3a9ef; mov edx, dword ptr [rsp + 0xc]; mov dword ptr [rbx], edx; add rsp, 0x10; pop rbx; ret; 
0x000000000003ab3a: je 0x3ab44; xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x000000000003af4e: je 0x3af54; mov qword ptr [r12], rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000003b3b8: je 0x3b3c4; push rcx; xor edx, edx; call 0x3b082; pop rdx; ret; 
0x000000000003b46c: je 0x3b482; movsxd rdi, eax; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000003b488: je 0x3b49e; movsxd rdi, r8d; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000003c5c3: je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x000000000003c5c8: je 0x3c5d6; ret; 
0x000000000003d4d4: je 0x3d4dd; add rax, 0xa0; ret; 
0x000000000003d8b7: je 0x3d8bd; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003f6be: je 0x3f6c5; cmp dword ptr [rax + 0x10], ebx; jne 0x3f6b6; pop rbx; ret; 
0x000000000004076f: je 0x40785; movsxd rdi, eax; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000040788: je 0x4079e; movsxd rdi, r8d; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004191a: je 0x4192f; push rax; call 0x4bf87; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000043062: je 0x4309e; mov eax, 0x68; syscall; 
0x0000000000043143: je 0x4314c; mov rax, rbp; syscall; 
0x0000000000043193: je 0x431ce; movsxd rdi, eax; mov rax, rbp; syscall; 
0x00000000000444db: je 0x444df; add byte ptr [rax], al; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000444d9: je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000456dd: je 0x456f3; mov dword ptr [rax], 0xffffffff; mov dword ptr [rax + 4], 0xffffffff; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000046420: je 0x46446; cmp byte ptr [rcx + 0x39c0ffc1], cl; ret 0x4c7; 
0x0000000000047954: je 0x4798f; ret 0x9489; 
0x0000000000048901: je 0x48927; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000048e8d: je 0x48eb3; and byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000049c37: je 0x49c4b; xor edx, edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000049faf: je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x0000000000049fcd: je 0x49fd2; mov qword ptr [rdx], rax; ret; 
0x000000000004a824: je 0x4a84a; or byte ptr [rax - 0x77], cl; and al, 8; xor edx, edx; mov eax, 0xe; syscall; 
0x000000000004aa8f: je 0x4aa92; add byte ptr [rax], al; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000004ac13: je 0x4ac1f; call 0x21e65; mov dword ptr [rax], ebx; or eax, 0xffffffff; pop rbx; ret; 
0x000000000004ae76: je 0x4ae4f; call 0x169c0; pop rbx; pop rbp; pop r12; ret; 
0x000000000004b018: je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b07d: je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x000000000004b68a: je 0x4b6a0; movsxd rdi, ebp; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004b9f5: je 0x4b9ec; cld; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000004ba2d: je 0x4ba39; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004badf: je 0x4baee; mov rsi, rsp; mov edx, 2; mov eax, 0x13; syscall; 
0x000000000004bcad: je 0x4bcb6; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004bd0b: je 0x4bd16; or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x000000000004bf1c: je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004bf5b: je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004bf72: je 0x4bf7d; sub rdx, rcx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x000000000004c137: je 0x4c14d; xor edx, edx; xor esi, esi; mov rdi, rbx; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000004c158: je 0x4c168; sub rsi, rax; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004cb1b: je 0x4cb2f; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000004cb8a: je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x000000000004cc1c: je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004d325: je 0x4d33c; movsxd rdi, dword ptr [rbx + 0x78]; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004d5b3: je 0x4d5bf; mov rdx, qword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000004d664: je 0x4d66e; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000004d6a6: je 0x4d6af; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004df4e: je 0x4df54; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000004ed30: je 0x4ed3c; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000000509d: je 0x50a7; call qword ptr [rbx + 0x41]; 
0x0000000000053e49: je 0x53e50; test rdx, rdx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd3: je 0x53fda; test rdx, rdx; jne 0x53ff7; xor eax, eax; ret; 
0x000000000005414b: je 0x54152; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x5414d; ret; 
0x000000000005469f: je 0x546c4; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000548bf: je 0x548c5; lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000549e8: je 0x549ec; call rax; 
0x0000000000054a0a: je 0x54a0e; call rax; 
0x00000000000549e0: je 0x54a2d; mov rax, qword ptr [rbx]; test rax, rax; je 0x549ec; call rax; 
0x0000000000054bd8: je 0x54be9; dec esi; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0000000000055022: je 0x55047; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000055148: je 0x55150; cmp rax, 3; jne 0x55154; syscall; 
0x0000000000055144: je 0x55154; dec ecx; je 0x55150; cmp rax, 3; jne 0x55154; syscall; 
0x000000000005571e: je 0x55745; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000558e8: je 0x558fe; mov eax, dword ptr [rdi + 0x8c]; test eax, eax; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000055955: je 0x55960; dec eax; mov dword ptr [rip + 0x242679], eax; ret; 
0x0000000000055a17: je 0x55a2c; mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000055b86: je 0x55b96; mov esi, 0x18; xor edi, edi; mov eax, 0x111; syscall; 
0x0000000000055c29: je 0x55c43; mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000055d64: je 0x55d8a; mov qword ptr [rsp + 0x40], rax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x00000000000560ad: je 0x560d3; push 0x24c28348; syscall; 
0x00000000000561fa: je 0x5620a; mov qword ptr [rsi + 0x10], rax; mov rax, qword ptr [rdx + 0x60]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x00000000000562d1: je 0x562f3; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000005661a: je 0x5662f; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000566c4: je 0x566ca; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000056a86: je 0x56a94; mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x0000000000056c58: je 0x56c60; mov eax, 0x16; ret; 
0x0000000000056c54: je 0x56ca3; test esi, esi; je 0x56c60; mov eax, 0x16; ret; 
0x0000000000056e2b: je 0x56e35; mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x0000000000056ebf: je 0x56e72; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000056f35: je 0x56ef8; pop rdx; pop rbx; pop rbp; ret; 
0x000000000005712c: je 0x57134; movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000057162: je 0x57169; call 0x573d9; mov eax, ebx; pop rbx; ret; 
0x00000000000572a2: je 0x572b5; movsxd rdi, eax; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x0000000000057311: je 0x57325; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000057315: je 0x5733b; or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005735d: je 0x57366; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000005762: je 0x5773; ret 0x878e; 
0x0000000000057d85: je 0x57d8e; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000057dde: je 0x57e05; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000059081: je 0x59086; neg eax; ret; 
0x00000000000590fa: je 0x59112; call rax; 
0x0000000000059110: je 0x5914f; movsxd rdi, ebp; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x00000000000591f2: je 0x591fc; mov rsi, rbx; call 0x58f51; add rsp, 0x40; pop rbx; ret; 
0x0000000000059264: je 0x5928a; or byte ptr [rax - 0x77], cl; ret; 
0x000000000005a09c: je 0x5a0c2; adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000005a13c: je 0x5a141; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000005a420: je 0x5a446; sbb byte ptr [rax + 0xe], bh; mov rdx, rdi; syscall; 
0x000000000005a9b2: je 0x5a9a8; push rax; movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x000000000005aa54: je 0x5aa64; mov edi, 1; mov eax, 0x3c; syscall; 
0x000000000005aa9e: je 0x5aac4; cld; mov eax, 1; syscall; 
0x000000000005aa9e: je 0x5aac4; cld; mov eax, 1; syscall; xor eax, eax; ret; 
0x000000000005aac4: je 0x5aae2; movsxd r10, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000005abb9: je 0x5abdf; or al, 0xba; add al, 0; add byte ptr [rax], al; xor eax, eax; syscall; 
0x000000000005abdf: je 0x5ac05; or byte ptr [rdx - 0x80000000], bh; mov eax, 0x3d; syscall; 
0x000000000005af4e: je 0x5af56; mov dword ptr [rax], 0x19; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005b45f: je 0x5b485; or al, 0xbe; adc byte ptr [rax + rax], dl; call 0x389c1; add rsp, 0x18; ret; 
0x000000000005b4a0: je 0x5b4ab; call 0x21e65; mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x000000000005be44: je 0x5be51; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x000000000005c66d: je 0x5c679; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005c7bd: je 0x5c7ca; mov rax, qword ptr [rsp]; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000005d995: je 0x5d9a1; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x00000000000600f2: je 0x600e8; ret 0x89bd; 
0x0000000000060529: je 0x60535; sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x0000000000089114: je 0x8917c; xor esi, dword ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000008e59b: je 0x8e523; ret 0xbfcb; 
0x0000000000075e4b: jecxz 0x75eb5; ret 0xb967; 
0x00000000000911cc: jecxz 0x91198; push r15; sbb eax, 0x153f5945; ret; 
0x0000000000020d4f: jg 0x20d60; xchg eax, esp; ror byte ptr [rcx], 0xd0; movzx eax, al; ret; 
0x0000000000020f9c: jg 0x20f21; jmp qword ptr [rax]; 
0x0000000000021291: jg 0x21352; xor eax, eax; test edi, edi; setne al; neg eax; ret; 
0x0000000000021477: jg 0x21481; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x0000000000022e4a: jg 0x22e55; setne al; movzx eax, al; neg eax; ret; 
0x0000000000022eba: jg 0x22e85; add rsp, 0x170; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022e3c: jg 0x22e86; cmovbe eax, dword ptr [rsp]; add rsp, 0x18; ret; 
0x00000000000234c2: jg 0x2350c; cmova edx, eax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x00000000000234bc: jg 0x2350e; mov eax, 0x7fffffff; cmova rdx, rax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x0000000000029dce: jg 0x29dd6; add dl, dh; divps xmm1, xmm0; movapd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002aabf: jg 0x2aa4a; ret; 
0x000000000002b466: jg 0x2b3f1; ret; 
0x000000000002b71b: jg 0x2b72c; mov bh, 0xc8; jne 0x2b724; fadd st(0); ret; 
0x000000000002b9d3: jg 0x2b9fa; add byte ptr [rax], al; add byte ptr [rax + 0x4489d009], al; and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002ddf3: jg 0x2de3d; cmp eax, edx; setbe al; movzx eax, al; ret; 
0x000000000002de0a: jg 0x2de8b; setbe al; movzx eax, al; ret; 
0x000000000002ee00: jg 0x2ee02; add byte ptr [rdi], cl; xchg eax, esp; ret 0x840f; 
0x000000000002f4bf: jg 0x2f537; adc edx, esi; movups xmm1, xmmword ptr [rip + 0x62766]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002fa3b: jg 0x2fab3; adc bl, dh; movups xmm1, xmmword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa3a: jg 0x2fabb; jbe 0x2fa4e; movss xmm1, dword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032bb9: jg 0x32bca; test dword ptr [rbx - 0xdffffff], eax; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000032db8: jg 0x32e39; jbe 0x32dbd; ret; 
0x0000000000033882: jg 0x33805; stc; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm2; ret; 
0x0000000000033888: jg 0x33900; add eax, 0xc2580ff3; ret; 
0x0000000000035636: jg 0x35675; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; mulss xmm0, xmm1; ret; 
0x000000000003563b: jg 0x356b3; add eax, 0xc1590ff3; ret; 
0x0000000000035832: jg 0x357f5; out 0x17, eax; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000039711: jg 0x39723; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000039715: jg 0x39727; mov eax, 0xa0; syscall; 
0x0000000000039715: jg 0x39727; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000003c6b8: jg 0x3c6b7; dec dword ptr [rax - 0x77]; ret; 
0x000000000003cadf: jg 0x3cae4; mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x000000000003da0b: jg 0x3da84; or byte ptr [rcx - 0xda08], cl; inc dword ptr [rax]; ret; 
0x000000000003da2e: jg 0x3daa6; adc byte ptr [rip + 0xbf], bh; mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000003f742: jg 0x3f793; add dword ptr [rax], eax; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000049af8: jg 0x49b2a; mov eax, 0xcb; syscall; 
0x0000000000049af8: jg 0x49b2a; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000049b40: jg 0x49b72; syscall; 
0x000000000004a5ac: jg 0x4a5d6; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004abf7: jg 0x4abf9; add byte ptr [rax], al; syscall; 
0x000000000004bc5a: jg 0x4bcd4; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004beac: jg 0x4bee3; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004bf19: jg 0x4bf3b; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004c8f5: jg 0x4c8ad; add rax, rsi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000004d6e5: jg 0x4d72f; cmp eax, edx; jne 0x4d6ef; or eax, 0xffffffff; ret; 
0x000000000004e0da: jg 0x4e08b; add rax, rsi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x000000000004ed2d: jg 0x4ed8f; add byte ptr [rdx + rcx - 0x39], dh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000004ff39: jg 0x4ff64; ret 0xd339; 
0x000000000005264c: jg 0x526c5; or dword ptr [rax - 1], ecx; or r9b, bpl; ret; 
0x00000000000053b6: jg 0x5396; ret 0x793b; 
0x0000000000054d33: jg 0x54d81; mov eax, eax; mov rdi, r13; syscall; 
0x0000000000054dcd: jg 0x54e1b; mov eax, eax; mov rdi, r13; syscall; 
0x000000000005536d: jg 0x552f4; ror byte ptr [rcx + 0x779104a], 0x48; mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x00000000000552d5: jg 0x55323; mov eax, eax; syscall; 
0x0000000000055320: jg 0x5536e; mov eax, eax; syscall; 
0x0000000000055c6f: jg 0x55c79; call qword ptr [rax]; 
0x0000000000056486: jg 0x564c1; ret 0xca75; 
0x0000000000056dbd: jg 0x56d7d; add dword ptr [rax], 0x894c0000; ror byte ptr [rax - 0x77], 0xdf; syscall; 
0x000000000005a554: jg 0x5a50e; loope 0x5a558; add byte ptr [rax], al; syscall; 
0x000000000005a52c: jg 0x5a55e; mov eax, 0xc8; syscall; 
0x000000000005a52c: jg 0x5a55e; mov eax, 0xc8; syscall; xor eax, eax; ret; 
0x000000000005a5a4: jg 0x5a5ee; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000005b7ad: jg 0x5b7d1; add byte ptr [rax], al; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000005fc42: jg 0x5fbf5; sub bh, bh; mov word ptr [rcx], es; out dx, eax; fnsave dword ptr [rdx]; ret; 
0x0000000000063c06: jg 0x63c08; jmp rbx; 
0x000000000006e5a9: jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x000000000006e55e: jg 0x6e5bf; ret 0x2962; 
0x0000000000074d57: jg 0x74d55; jg 0x74dcc; xor byte ptr [rdx - 0x80], 0x70; sub byte ptr [rdi - 0x80], 0x73; add dh, 0x81; ret; 
0x0000000000074d59: jg 0x74dcc; xor byte ptr [rdx - 0x80], 0x70; sub byte ptr [rdi - 0x80], 0x73; add dh, 0x81; ret; 
0x000000000008fc71: jg 0x8fc09; push rcx; mov cl, 0x68; ret; 
0x0000000000023298: jge 0x2329a; add byte ptr [rax], al; syscall; 
0x000000000002646f: jge 0x26471; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x000000000003505b: jge 0x35080; lea ecx, [rdx + 1]; cmp r8d, ecx; je 0x350aa; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000035217: jge 0x3523b; lea ecx, [rdx + 1]; cmp r8d, ecx; je 0x35261; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000004b78a: jge 0x4b78c; jb 0x4b79d; xchg eax, ebp; ret; 
0x000000000004ebd1: jge 0x4ebcf; lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x0000000000056bb4: jge 0x56bba; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000062218: jge 0x6220e; out dx, eax; call rcx; 
0x000000000006e2bf: jge 0x6e2cc; jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000006e2c1: jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000006e5a7: jge 0x6e58a; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x000000000006f575: jge 0x6f564; push rax; ret; 
0x000000000006f664: jge 0x6f5e6; rol dword ptr [rbx - 0x68ae7535], 0xd6; wait; add dl, bh; push r10; jmp qword ptr [rsi - 0x6b]; 
0x0000000000070f2d: jge 0x70ec9; pop rcx; ret; 
0x000000000007f1b9: jge 0x7f1dc; push rcx; xchg eax, edx; push rdi; ret 0x8b64; 
0x0000000000086681: jge 0x866d5; push rbx; xchg eax, esi; mov byte ptr [rsi + 0x51], dh; ret; 
0x0000000000086e1f: jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x00000000000913e1: jge 0x91391; mov cl, 0x5b; call rcx; 
0x00000000000913e1: jge 0x91391; mov cl, 0x5b; call rcx; mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x000000000001a022: jl 0x1a02b; add dl, dh; addps xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x000000000001adc6: jl 0x1adec; push rax; movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000001b2de: jl 0x1b304; adc byte ptr [rax + 0x63], cl; xor al, 0x24; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000001f41f: jl 0x1f3e2; ret 0x4110; 
0x0000000000020bb2: jl 0x20bd8; or byte ptr [rbp - 0x34], dh; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x0000000000021473: jl 0x214ad; movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x00000000000219d5: jl 0x21999; or byte ptr [rax - 0x77], cl; ret; 
0x00000000000224c4: jl 0x224ea; clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x00000000000299f5: jl 0x29a1b; call 0xfffffffff026de87; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000029fec: jl 0x29ff4; add dl, dh; divps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002aaae: jl 0x2aad4; xor byte ptr [rbx - 0x76c7dbbc], cl; ret 0xc166; 
0x000000000002b455: jl 0x2b47b; and byte ptr [rbx - 0x76d7dbbc], cl; ret 0xc166; 
0x0000000000034f33: jl 0x34f59; or al, 0xe8; sbb byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x00000000000354d9: jl 0x354ff; fmul dword ptr [rbx - 0x761fdbbc]; ret 0xc0d9; 
0x0000000000035512: jl 0x35538; call 0xffffffffc9e243f2; ret; 
0x0000000000035837: jl 0x3585d; cld; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000361d1: jl 0x361f7; adc byte ptr [rbx - 0x76e7dbbc], cl; ret; 
0x000000000003a3f9: jl 0x3a41f; or byte ptr [rdi], cl; add eax, 0xe8c78948; mov edx, 0x48fffdc5; add esp, 0x18; ret; 
0x000000000003b7ae: jl 0x3b7d4; jno 0x3b7e3; ror byte ptr [rax + 0x63], cl; ret 0x3949; 
0x000000000003ca59: jl 0x3ca58; dec dword ptr [rax - 0x77]; fucomip st(3); out dx, al; pop rbx; ret; 
0x000000000003dc81: jl 0x3dc88; add bh, bh; ret 0x14c; 
0x00000000000418b6: jl 0x418dc; adc al, ch; ret 0xfd2d; 
0x0000000000045ba4: jl 0x45bca; adc byte ptr [rax - 1], cl; ret; 
0x00000000000049ed: jl 0x49b5; std; ret 0xbd07; 
0x0000000000004a6b: jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x0000000000004cb7: jl 0x4caa; adc dh, ch; stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x000000000004e6d3: jl 0x4e681; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000004e66f: jl 0x4e695; sbb al, 0x48; mov eax, edx; syscall; 
0x000000000004e798: jl 0x4e746; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000004e7d3: jl 0x4e781; sbb byte ptr [rax + 3], bh; syscall; 
0x00000000000517b1: jl 0x517d7; or byte ptr [rax - 0x77], cl; ret 0x1de8; 
0x000000000000530c: jl 0x5375; jle 0x5308; jmp rdi; 
0x00000000000053ab: jl 0x53e0; cmp dword ptr [rbx - 0x76], ecx; sub cl, bl; pushfq; call 0xffffffffde7fe464; ret 0x793b; 
0x000000000005568b: jl 0x556b1; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x00000000000562cc: jl 0x562f2; xor byte ptr [rbp - 0x47df8b01], al; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x00000000000562e5: jl 0x5630b; xor byte ptr [rax + 0x91], bh; syscall; 
0x0000000000056c7d: jl 0x56ca3; cld; xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x000000000005724a: jl 0x57270; or byte ptr [rcx], dh; imul al; ret 0xfffe; 
0x00000000000590f0: jl 0x590b5; and eax, dword ptr [rax]; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000005925e: jl 0x591e8; cld; dec dword ptr [rax - 0x73]; je 0x5928a; or byte ptr [rax - 0x77], cl; ret; 
0x000000000005a25a: jl 0x5a280; sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000005ab96: jl 0x5abbc; adc al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000005abcd: jl 0x5abf3; adc byte ptr [rax + 3], bh; syscall; 
0x000000000005af02: jl 0x5af04; add byte ptr [rax], al; syscall; 
0x000000000006e5a5: jl 0x6e572; jge 0x6e58a; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x0000000000076eec: jl 0x76f40; ret; 
0x0000000000080de4: jl 0x80e44; ret 0xe48f; 
0x0000000000087bc2: jl 0x87c33; pop rax; outsd dx, dword ptr [rsi]; mov gs, word ptr [rdi - 0x6f]; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x000000000008a31b: jl 0x8a2fe; ret; 
0x000000000008adf4: jl 0x8ae5a; fiadd word ptr [rax]; wait; fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x0000000000092a90: jl 0x92ac1; stc; jmp qword ptr [rcx]; 
0x0000000000018d16: jle 0x18d30; movzx eax, byte ptr [rdi + 0x1d]; mov byte ptr [rsi + 0x1c], al; movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000019c4e: jle 0x19c94; and al, 0xe0; ret; 
0x000000000001b657: jle 0x1b65d; and al, 0x48; add esp, 0x30; pop rbx; ret; 
0x000000000001b723: jle 0x1b769; and al, 0x10; add rsp, 0x38; ret; 
0x000000000001b812: jle 0x1b858; and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba31: jle 0x1ba77; and al, 0x10; add rsp, 0x48; ret; 
0x000000000001baf6: jle 0x1bafc; and al, 0x48; add esp, 0x38; ret; 
0x000000000001bda4: jle 0x1bdaa; and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000001be69: jle 0x1be6f; and al, 0x48; add esp, 0x38; ret; 
0x000000000001c68e: jle 0x1c6d4; and al, 0x28; add rsp, 0x40; pop rbx; ret; 
0x000000000001c9a9: jle 0x1c9ef; and al, 0x20; add rsp, 0x40; pop rbx; ret; 
0x000000000001caf3: jle 0x1cb39; and al, 8; add rsp, 0x38; ret; 
0x000000000001cb9f: jle 0x1cbe5; and al, 0xd8; ret; 
0x000000000001cdc2: jle 0x1ce08; and al, 0x10; add rsp, 0x28; ret; 
0x000000000001cef8: jle 0x1cefe; and al, 0x48; add esp, 0x38; ret; 
0x000000000001d60c: jle 0x1d652; and al, 0x28; add rsp, 0x40; pop rbx; ret; 
0x000000000001da5b: jle 0x1daa1; and al, 0x20; add rsp, 0x38; ret; 
0x000000000001db5c: jle 0x1db62; and al, 0x48; add esp, 0x38; ret; 
0x000000000001dfe2: jle 0x1e028; and al, 0x30; add rsp, 0x40; pop rbx; ret; 
0x0000000000023286: jle 0x23288; add byte ptr [rax], al; syscall; 
0x0000000000024ad9: jle 0x24aec; lea edx, [rax - 0x100]; lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000299e1: jle 0x299a3; shr rax, 0x3f; ret; 
0x00000000000299ea: jle 0x299ac; shr eax, 0x1f; ret; 
0x0000000000029d41: jle 0x29d49; add dl, dh; addps xmm1, xmm2; mulsd xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000002b8d4: jle 0x2b8e9; ucomisd xmm3, xmm1; addsd xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002de00: jle 0x2ddc2; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002de7d: jle 0x2de92; ucomisd xmm2, xmm4; addsd xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x00000000000334bc: jle 0x334dd; add byte ptr [rax], al; pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000035585: jle 0x35555; and rax, rsi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x0000000000035630: jle 0x355fa; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x35643; mulss xmm0, xmm1; ret; 
0x000000000003a5e4: jle 0x3a5f2; add dh, byte ptr [rsp + rbx + 0x49]; movsxd rdi, esp; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000003f255: jle 0x3f258; shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000004630f: jle 0x462ef; ret; 
0x000000000000530e: jle 0x5308; jmp rdi; 
0x00000000000566a0: jle 0x566ac; push rax; call 0x57d91; xor eax, eax; pop rdx; ret; 
0x00000000000605f4: jle 0x605a0; stc; pop rsp; ret 0x1948; 
0x0000000000073d3e: jle 0x73d9e; retf 0xc15e; pop rsi; ret 0xc45e; 
0x0000000000080631: jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x000000000008c138: jle 0x8c0d5; ret; 
0x0000000000092df4: jle 0x92e4c; pop rcx; sub eax, 0x31ad6446; ret 0x9dff; 
0x00000000000727a7: jmp qword ptr [rax + 0x21]; 
0x0000000000084ea1: jmp qword ptr [rax + 0x22]; 
0x00000000000935df: jmp qword ptr [rax + 0x6a]; 
0x000000000001e9e6: jmp qword ptr [rax + 0xf]; 
0x000000000007aa54: jmp qword ptr [rax + 2]; 
0x0000000000076a8c: jmp qword ptr [rax + 4]; 
0x00000000000933a3: jmp qword ptr [rax - 0xb]; 
0x0000000000005ccb: jmp qword ptr [rax]; 
0x0000000000092ac3: jmp qword ptr [rbp + 0x2b]; 
0x0000000000070534: jmp qword ptr [rbp + 0x53]; 
0x000000000006ecfa: jmp qword ptr [rbp + 0x64]; 
0x000000000009363b: jmp qword ptr [rbp + 0x69]; 
0x000000000007b0c4: jmp qword ptr [rbp + 1]; 
0x00000000000930f7: jmp qword ptr [rbx - 0x29]; 
0x0000000000081e62: jmp qword ptr [rbx - 0x3c]; 
0x000000000008dbcd: jmp qword ptr [rbx - 0x44]; 
0x000000000002c6c2: jmp qword ptr [rbx]; 
0x0000000000075250: jmp qword ptr [rcx + 0x24]; 
0x0000000000092fdf: jmp qword ptr [rcx + 0x3b]; 
0x000000000008cb4d: jmp qword ptr [rcx + 0x3c]; 
0x0000000000081af6: jmp qword ptr [rcx + 0x79]; 
0x000000000002c0ad: jmp qword ptr [rcx + 6]; 
0x000000000006efdc: jmp qword ptr [rcx - 0x14]; 
0x0000000000021d4d: jmp qword ptr [rcx - 1]; 
0x000000000008772a: jmp qword ptr [rcx - 3]; 
0x0000000000004b8b: jmp qword ptr [rcx]; 
0x000000000004a5b2: jmp qword ptr [rdi + 0x38]; 
0x0000000000092997: jmp qword ptr [rdi - 0x1b]; 
0x0000000000073368: jmp qword ptr [rdi - 0x2d]; 
0x0000000000085b98: jmp qword ptr [rdi - 0x32]; 
0x00000000000599ac: jmp qword ptr [rdi - 0x47]; 
0x000000000008005c: jmp qword ptr [rdi - 0x75]; 
0x0000000000020fb3: jmp qword ptr [rdi]; 
0x0000000000073654: jmp qword ptr [rdx + 0x4e]; 
0x0000000000027c8c: jmp qword ptr [rdx + 0x7f]; 
0x000000000006dc92: jmp qword ptr [rdx + 0xe]; 
0x000000000007f778: jmp qword ptr [rdx - 0x16]; 
0x0000000000092993: jmp qword ptr [rdx - 0x1b]; 
0x0000000000087778: jmp qword ptr [rdx - 0x3a]; 
0x0000000000030629: jmp qword ptr [rdx]; 
0x0000000000073dca: jmp qword ptr [rsi + 0x1f]; 
0x00000000000726ab: jmp qword ptr [rsi + 0x22]; 
0x0000000000015562: jmp qword ptr [rsi + 0x2e]; 
0x00000000000368d3: jmp qword ptr [rsi + 0x40]; 
0x000000000001a0af: jmp qword ptr [rsi + 0x41]; 
0x000000000003f364: jmp qword ptr [rsi + 0x42]; 
0x000000000001c6ea: jmp qword ptr [rsi + 0x48]; 
0x0000000000032d8a: jmp qword ptr [rsi + 0x77]; 
0x0000000000014936: jmp qword ptr [rsi + 0xf]; 
0x00000000000866ca: jmp qword ptr [rsi - 0x10]; 
0x000000000006f672: jmp qword ptr [rsi - 0x6b]; 
0x0000000000014f5d: jmp qword ptr [rsi - 0x70]; 
0x000000000008039e: jmp qword ptr [rsi - 0x71]; 
0x0000000000024ee7: jmp qword ptr [rsi - 0x75]; 
0x000000000003f356: jmp qword ptr [rsi - 0x77]; 
0x0000000000028113: jmp qword ptr [rsi]; 
0x000000000001e1b9: jmp rax; 
0x0000000000063a46: jmp rbx; 
0x0000000000049c13: jmp rcx; 
0x0000000000005310: jmp rdi; 
0x0000000000031469: jmp rdx; 
0x000000000006bacd: jmp rsi; 
0x0000000000005e5f: jmp rsp; 
0x0000000000035387: jne 0x1013474d; add eax, 0x5d836; jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000017075: jne 0x17060; xor eax, eax; pop rbx; ret; 
0x00000000000171e6: jne 0x171d0; xor eax, eax; ret; 
0x00000000000171e1: jne 0x171f0; cmp rdx, rax; jne 0x171d0; xor eax, eax; ret; 
0x0000000000017a19: jne 0x17a00; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017b5d: jne 0x17b50; mov rax, rbx; pop rbx; ret; 
0x0000000000017ba4: jne 0x17b90; xor eax, eax; sub eax, edx; ret; 
0x0000000000017ba0: jne 0x17bb0; test dl, dl; jne 0x17b90; xor eax, eax; sub eax, edx; ret; 
0x0000000000017ca3: jne 0x17c88; add rsp, 0x28; sub rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000017fb7: jne 0x17fb0; sub rax, rdi; ret; 
0x0000000000018768: jne 0x18770; ret; 
0x0000000000018e0c: jne 0x18e00; xor eax, eax; pop rbx; ret; 
0x0000000000018e52: jne 0x18e40; mov edx, eax; sub eax, edx; ret; 
0x0000000000018e4e: jne 0x18e56; test eax, eax; jne 0x18e40; mov edx, eax; sub eax, edx; ret; 
0x0000000000018f78: jne 0x18f70; sub rax, rdi; sar rax, 2; ret; 
0x00000000000190e7: jne 0x190c0; xor eax, eax; ret; 
0x000000000001912d: jne 0x19118; xor esi, esi; call 0x19aa0; mov rax, rbx; pop rbx; ret; 
0x000000000001964c: jne 0x19640; xor eax, eax; ret; 
0x0000000000019694: jne 0x19680; xor eax, eax; ret; 
0x000000000001968f: jne 0x196a0; cmp rcx, rdx; jne 0x19680; xor eax, eax; ret; 
0x000000000001acb7: jne 0x1acc3; mov esi, 1; mov rax, r9; syscall; 
0x000000000001acec: jne 0x1acf8; mov esi, 1; mov rax, r8; syscall; 
0x000000000001ad24: jne 0x1ad30; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b2a2: jne 0x1b2f1; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001e299: jne 0x1e28c; ret; 
0x000000000001f6a4: jne 0x1f674; pop rbx; pop rbp; pop r12; ret; 
0x000000000001fe42: jne 0x1fe12; pop rbx; pop rbp; pop r12; ret; 
0x000000000002073c: jne 0x206d6; pop rbx; pop rbp; pop r12; ret; 
0x0000000000020bb5: jne 0x20b83; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x0000000000020cad: jne 0x20c9b; add rsp, 0x90; pop rbx; ret; 
0x0000000000021450: jne 0x21460; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002198b: jne 0x21971; mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x00000000000221fe: jne 0x22212; mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000221e6: jne 0x2222e; mov r8d, 0x48; mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000022249: jne 0x2227d; xor r8d, r8d; mov rax, r9; mov rdx, r8; syscall; 
0x0000000000022234: jne 0x22295; mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x0000000000023098: jne 0x2309d; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x00000000000232bd: jne 0x232cb; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000002335e: jne 0x2336f; mov edi, 1; mov eax, 0xd5; syscall; 
0x000000000002335a: jne 0x2336f; test edx, edx; jne 0x2336f; mov edi, 1; mov eax, 0xd5; syscall; 
0x00000000000233c3: jne 0x233d2; mov r10, rbx; mov eax, 0xe8; syscall; 
0x00000000000233be: jne 0x233d2; test r8, r8; jne 0x233d2; mov r10, rbx; mov eax, 0xe8; syscall; 
0x00000000000233fc: jne 0x23407; mov eax, 0x11c; syscall; 
0x00000000000233f8: jne 0x23407; test esi, esi; jne 0x23407; mov eax, 0x11c; syscall; 
0x000000000002352a: jne 0x23536; mov eax, 0xfd; syscall; 
0x0000000000023526: jne 0x23536; test edx, edx; jne 0x23536; mov eax, 0xfd; syscall; 
0x0000000000023a93: jne 0x23ab2; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x0000000000025c30: jne 0x25c3c; push rax; call 0x14680; xor eax, eax; pop rdx; ret; 
0x00000000000264ad: jne 0x264b4; mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x00000000000269fe: jne 0x269cd; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000000275be: jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000028996: jne 0x289a5; add rdx, rdx; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x00000000000289b0: jne 0x289bb; xor eax, eax; shl rdx, 0xc; sete al; ret; 
0x00000000000289cc: jne 0x289d9; add edx, edx; cmp edx, 1; sbb eax, eax; add eax, 3; ret; 
0x00000000000289e4: jne 0x289ee; xor eax, eax; shl edx, 9; sete al; ret; 
0x0000000000028a10: jne 0x28a1c; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x0000000000028b32: jne 0x28b21; ret; 
0x0000000000028b50: jne 0x28b43; fstp st(1); ret; 
0x0000000000029a62: jne 0x29a79; mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x000000000002b71f: jne 0x2b724; fadd st(0); ret; 
0x000000000002ef2f: jne 0x2ef44; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000002ef96: jne 0x2efab; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000002effc: jne 0x2f011; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002f49b: jne 0x2f4ad; xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x000000000002fa18: jne 0x2fa2a; xorps xmm1, xmm1; movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x000000000002ffa7: jne 0x2ffb9; xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x0000000000030545: jne 0x30557; xorps xmm1, xmm1; movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000003280a: jne 0x3281d; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x00000000000329fd: jne 0x32a13; mulss xmm0, xmm0; movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032b96: jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000032bba: jne 0x32d43; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000032d70: jne 0x32d77; divss xmm0, xmm2; ret; 
0x00000000000335d4: jne 0x335ea; movss dword ptr [rdi], xmm0; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000034fa2: jne 0x34fb3; movsd xmm0, qword ptr [rsp - 8]; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035186: jne 0x35197; movss xmm0, dword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000035342: jne 0x35348; movapd xmm0, xmm1; ret; 
0x0000000000035335: jne 0x35348; test rax, rax; movsd xmm0, qword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x0000000000035392: jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000035386: jne 0x35397; test eax, eax; movss xmm0, dword ptr [rip + 0x5d836]; jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000037832: jne 0x37823; ret; 
0x00000000000378b7: jne 0x378a8; ret; 
0x000000000003887c: jne 0x388c3; mov rsi, rsp; mov eax, 0x61; mov rdi, r12; syscall; 
0x0000000000039284: jne 0x3928c; mov dword ptr [rax], 0xb; mov eax, ebx; pop rbx; ret; 
0x000000000003a83b: jne 0x3a84c; cmp edi, -1; je 0x3a84c; movsx eax, dil; and eax, 0xdfff; ret; 
0x000000000003b95d: jne 0x3b966; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000003e0e4: jne 0x3e0ed; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003e3c2: jne 0x3e3b1; xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x000000000003f6a5: jne 0x3f68b; mov rax, rbx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003f6c3: jne 0x3f6b6; pop rbx; ret; 
0x0000000000042547: jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x00000000000427eb: jne 0x42843; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x00000000000431d5: jne 0x430e0; movsxd rdi, r15d; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x00000000000430e4: jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x000000000004307b: jne 0x43244; mov eax, 0x66; syscall; 
0x000000000004369d: jne 0x436a3; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000043d24: jne 0x43d30; mov qword ptr [rdx], 0; xor eax, eax; ret; 
0x000000000004459b: jne 0x445c8; call 0x21e65; mov rdi, r14; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000049c49: jne 0x49c64; xor esi, esi; mov eax, 0x135; mov rdi, rbx; mov rdx, rsi; syscall; 
0x0000000000049f8a: jne 0x49f9c; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004afb5: jne 0x4afce; xor r10d, r10d; movsxd rdi, edi; mov edx, edx; mov eax, 0x10c; syscall; 
0x000000000004b0ff: jne 0x4b16d; movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000004b182: jne 0x4b193; mov eax, 4; mov rdi, r8; mov rsi, rbx; syscall; 
0x000000000004b114: jne 0x4b1a6; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000004b5d7: jne 0x4b5e6; mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000004b6bd: jne 0x4b6cf; or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004b6a5: jne 0x4b6d5; mov r8d, 0x48; movsxd rdi, ebp; mov esi, 3; mov rax, r8; syscall; 
0x000000000004b6f8: jne 0x4b71d; movsxd rdi, ebp; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004b91f: jne 0x4b8e4; xor r10d, r10d; xor esi, esi; mov rax, rbp; mov rdi, r9; syscall; 
0x000000000004b97e: jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b97e: jne 0x4b988; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004b9e3: jne 0x4b9b2; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004bc56: jne 0x4bc7d; movsxd rdi, dword ptr [rdi + 0x78]; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004bd66: jne 0x4bd4e; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004beca: jne 0x4bed6; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004bedf: jne 0x4beeb; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004c219: jne 0x4c223; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004cb3f: jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004cf20: jne 0x4cf2a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004d719: jne 0x4d6eb; call 0x4d67f; xor eax, eax; ret; 
0x000000000004d6e9: jne 0x4d6ef; or eax, 0xffffffff; ret; 
0x000000000004daa3: jne 0x4daad; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004db8d: jne 0x4db97; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004e65c: jne 0x4e67c; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000004e923: jne 0x4e92d; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ea49: jne 0x4ea53; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ebc3: jne 0x4ebcc; mov eax, 0x54; syscall; 
0x000000000004f183: jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x0000000000053e4e: jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd8: jne 0x53ff7; xor eax, eax; ret; 
0x0000000000054150: jne 0x5414d; ret; 
0x0000000000054219: jne 0x54226; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000054286: jne 0x54267; add rsp, 0x18; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000054661: jne 0x5466a; xor esi, esi; mov rax, r9; syscall; 
0x00000000000546ba: jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000546ba: jne 0x546c4; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x00000000000548b1: jne 0x5489c; xor esi, esi; mov rax, r12; syscall; 
0x00000000000548a0: jne 0x548bc; xor r10d, r10d; mov rax, rbp; mov rsi, r9; syscall; 
0x000000000005495f: jne 0x5494c; ret; 
0x0000000000054c49: jne 0x54c54; call 0x57d91; xor eax, eax; pop rbx; ret; 
0x0000000000054d40: jne 0x54d47; mov rax, r8; syscall; 
0x0000000000054d74: jne 0x54d7b; mov rax, r8; syscall; 
0x0000000000054dda: jne 0x54df9; mov rax, r8; syscall; 
0x0000000000054e40: jne 0x54e47; mov rax, r8; syscall; 
0x0000000000054ec4: jne 0x54ece; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054f22: jne 0x54f08; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000054f0e: jne 0x54f30; xor r10d, r10d; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x0000000000054f7b: jne 0x54f85; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fed: jne 0x54ff7; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000054fb5: jne 0x5500a; mov esi, 1; mov rax, r9; syscall; 
0x000000000005503d: jne 0x55047; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005514e: jne 0x55154; syscall; 
0x00000000000552df: jne 0x552e6; mov rax, r8; syscall; 
0x00000000000552df: jne 0x552e6; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005532a: jne 0x55331; mov rax, r8; syscall; 
0x00000000000553b8: jne 0x553bf; mov rax, r8; syscall; 
0x00000000000553b8: jne 0x553bf; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000055405: jne 0x553e4; pop rax; pop rbx; pop rbp; ret; 
0x0000000000055412: jne 0x55437; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005542d: jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005542d: jne 0x55437; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x00000000000556a1: jne 0x556b6; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055763: jne 0x5577a; mov esi, 3; mov rax, rbp; syscall; 
0x0000000000055739: jne 0x5577a; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000055992: jne 0x55999; mov rax, r8; syscall; 
0x0000000000055992: jne 0x55999; mov rax, r8; syscall; ret; 
0x00000000000559e1: jne 0x559e8; mov rax, r8; syscall; 
0x00000000000559e1: jne 0x559e8; mov rax, r8; syscall; pop rax; ret; 
0x0000000000055b22: jne 0x55aba; mov rax, r15; mov esi, 1; syscall; 
0x0000000000055bca: jne 0x55bd4; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000560d5: jne 0x560fa; mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x00000000000560f0: jne 0x560fa; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000562e1: jne 0x562f3; movsxd rdi, dword ptr [r12 + 0x30]; mov eax, 0x91; syscall; 
0x000000000005668b: jne 0x56699; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x00000000000566e7: jne 0x566d4; ret; 
0x0000000000056995: jne 0x569b5; mov qword ptr [r9 + 0x90], -0x1c; lea rdi, [r9 + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000056c1d: jne 0x56c27; mov rax, rbp; mov rsi, rdx; syscall; 
0x0000000000056c9d: jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf9: jne 0x56d05; or dword ptr [r8], 4; ret; 
0x0000000000056d3e: jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d3e: jne 0x56d4a; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056d23: jne 0x56d4a; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000056dcf: jne 0x56dff; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056f5d: jne 0x56f3b; xor eax, eax; ret; 
0x0000000000056fe9: jne 0x56ff5; mov esi, 1; mov rax, r8; syscall; 
0x0000000000056fe9: jne 0x56ff5; mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000573c0: jne 0x573b6; ret; 
0x0000000000057957: jne 0x57961; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057957: jne 0x57961; mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x0000000000057a3e: jne 0x57a19; xor eax, eax; ret; 
0x0000000000057df9: jne 0x57e05; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057df9: jne 0x57e05; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000059130: jne 0x5914f; xor esi, esi; mov eax, 0x60; mov rdi, rbx; syscall; 
0x000000000005aaf9: jne 0x5ab13; movsxd rdi, ebp; movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x000000000005abc9: jne 0x5aba8; movsxd rdi, dword ptr [rsp + 0x10]; mov eax, 3; syscall; 
0x000000000005b1bb: jne 0x5b1c7; lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000005b36d: jne 0x5b38c; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000005b3f2: jne 0x5b3f6; xor edx, edx; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005b7d0: jne 0x5b7bf; movzx edx, al; sub eax, edx; ret; 
0x000000000005d8b8: jne 0x5d75c; pop rbx; pop rbp; pop r12; ret; 
0x000000000006f284: jne 0x6f2d6; push rsp; ret; 
0x000000000007e490: jne 0x7e4ed; jbe 0x7e4f6; ret 0x9062; 
0x0000000000089113: jne 0x89189; xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000008d0eb: jne 0x8d100; push rdx; mov ch, 0xbf; lahf; fsubrp st(0); ret; 
0x0000000000092c70: jne 0x92c34; int1; ret; 
0x00000000000019bc: jno 0x19c2; add byte ptr [rax], al; ret 2; 
0x000000000003b7b0: jno 0x3b7e3; ror byte ptr [rax + 0x63], cl; ret 0x3949; 
0x000000000004cf7e: jno 0x4cf81; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000004e981: jno 0x4e984; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000004e9b0: jno 0x4e9b3; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000005a30f: jno 0x5a390; or al, byte ptr [rbp - 0x3277f040]; add dword ptr [rax], eax; add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x000000000005aa6f: jno 0x5aa71; add byte ptr [rax], al; syscall; 
0x000000000005f673: jno 0x5f663; adc rax, 0x54a41d82; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x000000000005fa48: jno 0x5f9d6; stosb byte ptr [rdi], al; in al, dx; call qword ptr [rdi]; 
0x0000000000060526: jno 0x604b1; je 0x60535; sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x0000000000062307: jno 0x622d8; sti; sal byte ptr [rbp - 0x164a245b], 0x5b; ret 0x3956; 
0x000000000006ebf5: jno 0x6eb8a; stc; ret; 
0x000000000006ebf3: jno 0x6ec4e; jno 0x6eb8a; stc; ret; 
0x0000000000091590: jno 0x9158d; int1; mov ch, 0x1a; ret; 
0x000000000001aca2: jnp 0x1accc; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000023a4a: jnp 0x23a4c; add byte ptr [rax], al; syscall; 
0x0000000000023a90: jnp 0x23aa2; add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x00000000000299d5: jnp 0x299e7; add rsp, 0x78; pop rbx; pop rbp; ret; 
0x0000000000035141: jnp 0x350fb; add eax, 0xc1570f00; ret; 
0x0000000000035651: jnp 0x35606; add eax, 0xd1570f00; divss xmm0, xmm2; ret; 
0x000000000004085d: jnp 0x40863; mov rax, r8; syscall; 
0x0000000000040886: jnp 0x4088c; mov rax, r8; syscall; 
0x0000000000049241: jnp 0x49240; inc dword ptr [rbp - 0x587bf040]; add dword ptr [rax], eax; add bl, ch; ret; 
0x000000000004bba2: jnp 0x4bc1c; movsxd rdx, r13d; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000004d329: jnp 0x4d3a3; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004d345: jnp 0x4d3bf; mov esi, 4; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x0000000000055298: jnp 0x552a2; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000055c5d: jnp 0x55c67; call qword ptr [rbx]; 
0x00000000000560a4: jnp 0x560d6; mov eax, 0x90; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x000000000005b08d: jnp 0x5b093; mov rax, r8; syscall; 
0x000000000005b0b7: jnp 0x5b0bd; mov rax, r8; syscall; 
0x000000000005b36a: jnp 0x5b37c; add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000005f67b: jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x00000000000605a5: jnp 0x60599; ret; 
0x0000000000071af9: jnp 0x71b04; wait; add byte ptr [rax], al; sbb ebx, dword ptr [rsi + rdi + 0x739f5a49]; push rbp; ret; 
0x0000000000076e8e: jnp 0x76e25; lea edx, [rbp - 0x6a6f6a74]; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x0000000000076eea: jnp 0x76f3e; jl 0x76f40; ret; 
0x0000000000078a7c: jnp 0x78a0c; ret 0x528e; 
0x000000000008a966: jnp 0x8a968; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000009132c: jnp 0x91387; xchg edx, eax; wait; popfq; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000023cee: jns 0x23d65; add al, byte ptr [rax]; push rax; mov eax, 0x99; syscall; 
0x000000000002a758: jns 0x2a760; add dl, dh; cvtps2pd xmm0, xmm0; ret; 
0x000000000002a85f: jns 0x2a86c; movss xmm1, dword ptr [rip + 0x66167]; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002df21: jns 0x2df2f; add edx, edx; je 0x2dec2; movss xmm1, dword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000002e51b: jns 0x2e535; movaps xmm0, xmm1; ret; 
0x000000000002e666: jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002f4af: jns 0x2f4b9; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002fa2c: jns 0x2fa36; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002ffbb: jns 0x2ffc5; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000030559: jns 0x30563; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003281f: jns 0x32831; subsd xmm1, xmm0; xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000032a15: jns 0x32a23; subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000335c1: jns 0x335cb; and eax, 0x80000000; mov dword ptr [rdi], eax; ret; 
0x0000000000035430: jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x00000000000354c4: jns 0x354d1; movss xmm1, dword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x0000000000039d2d: jns 0x39d31; xor edx, edx; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000003a6de: jns 0x3a6f6; mov rdi, qword ptr [rsp]; call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000046c5d: jns 0x46c77; add byte ptr [rdi], cl; lahf; ret 0x48d; 
0x000000000004aba0: jns 0x4aba6; or rdx, 0xffffffffffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x0000000000004eb5: jns 0x4ebe; ret; 
0x000000000005464d: jns 0x54671; movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000055373: jns 0x5537c; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x00000000000558f2: jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000005595b: jns 0x55983; and al, 0; ret; 
0x0000000000056cd5: jns 0x56cf7; lea rsi, [rsp - 0x10]; lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x000000000005a280: jns 0x5a210; mov rax, qword ptr [rsp]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005a56a: jns 0x5a57b; add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005aed3: jns 0x5aed5; add byte ptr [rax], al; syscall; 
0x000000000005aee6: jns 0x5aee8; add byte ptr [rax], al; syscall; 
0x000000000005aee6: jns 0x5aee8; add byte ptr [rax], al; syscall; ret; 
0x000000000006e5a3: jns 0x6e528; jl 0x6e572; jge 0x6e58a; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x000000000006f646: jns 0x6f5d2; ret 0x1e8a; 
0x000000000007eb93: jns 0x7ebd7; push rdx; mov eax, 0xc46d4e60; pop rbx; ret 0xa15b; 
0x0000000000091334: jns 0x9136d; lodsd eax, dword ptr [rsi]; ret; 
0x000000000000a970: jns 0xa99c; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x000000000001e27a: jo 0x1e27d; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000022ebf: jo 0x22ec2; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000024042: jo 0x24058; call 0x3a3dc; xor eax, eax; pop rdx; ret; 
0x0000000000029b75: jo 0x29b7d; add dh, bl; retf 0xe1de; fsubp st(1); ret; 
0x000000000002e46b: jo 0x2e4c8; pop rbp; pop r12; ret; 
0x000000000002fb43: jo 0x2fb7d; add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000003a389: jo 0x3a3e6; ret; 
0x000000000003a531: jo 0x3a543; add al, byte ptr [rax]; add rsp, 0x118; ret; 
0x000000000003a6c6: jo 0x3a710; mov dword ptr [rsp + 0x70], eax; mov eax, 0xf4; syscall; 
0x0000000000042748: jo 0x427a2; and eax, 0x1f3ae800; add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x0000000000043033: jo 0x43035; add byte ptr [rax], al; syscall; 
0x000000000004313f: jo 0x43155; cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x000000000004318f: jo 0x431a5; cmp eax, esi; je 0x431ce; movsxd rdi, eax; mov rax, rbp; syscall; 
0x0000000000057165: jo 0x57169; add byte ptr [rax], al; mov eax, ebx; pop rbx; ret; 
0x000000000005933d: jo 0x59387; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005aa80: jo 0x5aa8a; xor r10d, r10d; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x000000000005b31f: jo 0x5b321; add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x000000000005b325: jo 0x5b327; add byte ptr [rax], al; syscall; 
0x000000000005c595: jo 0x5c5df; add esp, 0x110; pop rbx; ret; 
0x000000000006ebf1: jo 0x6ec29; jno 0x6ec4e; jno 0x6eb8a; stc; ret; 
0x000000000006edca: jo 0x6ed4d; ret 0xeff9; 
0x0000000000007010: jo 0x703c; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; call rbx; 
0x00000000000381fd: jo 0x75038481; or edi, edi; ret 0x1389; 
0x000000000008beae: jo 0x8bef0; and bh, byte ptr [rdi + 0x664522b3]; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x000000000008c375: jo 0x8c389; rcr dl, 0x16; pop rbp; ret 0xec71; 
0x0000000000023691: jp 0x236c3; mov rax, r8; syscall; 
0x0000000000023a5e: jp 0x23a60; add byte ptr [rax], al; syscall; 
0x0000000000028fb1: jp 0x28fb9; add bh, dh; fmul dword ptr [rdi]; push rdi; retf 0x570f; ret 0xff2; 
0x0000000000032b94: jp 0x32b9d; jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000032d6e: jp 0x32d77; jne 0x32d77; divss xmm0, xmm2; ret; 
0x000000000004314b: jp 0x43199; mov eax, esp; mov esi, 1; syscall; 
0x000000000004eede: jp 0x4ef20; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000005302: jp 0x52a3; push rsp; movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x0000000000057136: jp 0x57178; xor eax, eax; ret; 
0x0000000000057160: jp 0x571a3; je 0x57169; call 0x573d9; mov eax, ebx; pop rbx; ret; 
0x0000000000057bd6: jp 0x57c08; mov eax, 0xc8; syscall; 
0x000000000005c407: jp 0x5c40c; add byte ptr [rax + 1], cl; ret; 
0x0000000000005e5d: jp 0x5e3f; jmp rsp; 
0x000000000005fb7a: jp 0x5fb68; cli; sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x00000000000605f3: jp 0x60673; stosb byte ptr [rdi], al; stc; pop rsp; ret 0x1948; 
0x0000000000076ee6: jp 0x76f3a; js 0x76f3c; jnp 0x76f3e; jl 0x76f40; ret; 
0x0000000000086d5f: jp 0x86d47; xchg eax, ecx; ret; 
0x000000000001bfa6: js 0x1bf81; leave; ret; 
0x0000000000021f2b: js 0x21f5d; mov eax, 0xc8; syscall; 
0x000000000002225d: js 0x22269; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000022282: js 0x222a5; mov edx, 1; mov esi, 2; mov rax, r9; syscall; 
0x00000000000277a4: js 0x27789; add byte ptr es:[rax - 0x7d], cl; ret; 
0x00000000000299da: js 0x29a37; pop rbp; ret; 
0x000000000002b981: js 0x2b98f; add edx, edx; je 0x2b91d; movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000003721e: js 0x37225; fscale; fstp st(1); ret; 
0x00000000000387f4: js 0x387fd; mov edx, 0x14; sub edx, eax; mov eax, edx; pop rdx; ret; 
0x0000000000038803: js 0x38805; add byte ptr [rax], al; syscall; 
0x000000000003a6be: js 0x3a709; movsxd rdi, esp; lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x000000000003d4d1: js 0x3d52b; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000040702: js 0x40708; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000430e2: js 0x430f8; jne 0x43106; movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x0000000000043170: js 0x43196; mov edx, dword ptr [r8 + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x00000000000431bd: js 0x431d3; mov eax, 0x51; syscall; 
0x00000000000430f6: js 0x43244; mov rax, r9; syscall; 
0x00000000000495d4: js 0x495d3; inc dword ptr [rbp - 0x327bf040]; add al, byte ptr [rax]; add bl, ch; ret; 
0x0000000000049fb3: js 0x49fbd; ret; 
0x000000000004a769: js 0x4a79b; mov eax, 0xc8; syscall; 
0x000000000004b834: js 0x4b88c; movsxd rdi, edi; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004bba3: js 0x4bbee; movsxd rdx, ebp; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000004bc5b: js 0x4bca5; lea edx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004c347: js 0x4c34e; mov qword ptr [rbx], rax; xor edx, edx; mov eax, edx; pop rbx; ret; 
0x000000000004d32a: js 0x4d2e6; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004d346: js 0x4d306; add al, 0; add byte ptr [rax], al; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000004f163: js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000000522d: js 0x51b0; sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x0000000000054565: js 0x5456b; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000550dd: js 0x5510f; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x00000000000550dd: js 0x5510f; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x0000000000055a1e: js 0x55a28; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000055c87: js 0x55cd1; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000055c8e: js 0x55d08; ret; 
0x0000000000057174: js 0x57180; cmp edi, 1; sbb eax, eax; not eax; and eax, 0xb; ret; 
0x000000000005aa9a: js 0x5aab0; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa9a: js 0x5aab0; lea rsi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x000000000005b446: js 0x5b44c; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005be48: js 0x5beb2; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x000000000005e571: js 0x5e5bb; mov esp, ebx; jmp rax; 
0x000000000005fcf7: js 0x5fc9e; test ch, dh; push rdi; movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x0000000000076ee8: js 0x76f3c; jnp 0x76f3e; jl 0x76f40; ret; 
0x000000000007f1b7: js 0x7f1e8; jge 0x7f1dc; push rcx; xchg eax, edx; push rdi; ret 0x8b64; 
0x000000000008fb64: js 0x8fb9a; mov ecx, 0xbff6af; add byte ptr [rax], al; add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000047fcf: lahf; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6348; 
0x000000000008a96a: lahf; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000008d0f0: lahf; fsubrp st(0); ret; 
0x0000000000071b03: lahf; jae 0x71b5b; ret; 
0x0000000000081af5: lahf; jmp qword ptr [rcx + 0x79]; 
0x00000000000210d2: lahf; mov eax, edi; and eax, 0x5f; cmp edx, 0x19; cmova eax, edi; ret; 
0x0000000000070f28: lahf; mov ecx, gs; mov esp, ds; jge 0x70ec9; pop rcx; ret; 
0x00000000000224ee: lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000060614: lahf; out 8, al; ret 0x6132; 
0x000000000007db70: lahf; pop rcx; pop rax; ret 0x7f81; 
0x0000000000005303: lahf; push rsp; movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x0000000000046c61: lahf; ret 0x48d; 
0x000000000004d7c0: lahf; ret 0x548d; 
0x000000000007f347: lahf; ret; 
0x000000000004a363: lahf; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x73], 0x54; ret; 
0x000000000004a21c: lahf; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x75], 0x5c; ret; 
0x000000000008785a: lahf; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x0000000000042c3f: lahf; syscall; 
0x000000000004ec1e: lcall [rax + 0x5b]; pop rbp; ret; 
0x000000000009298b: lcall [rax - 0x1b]; clc; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000006bb05: lcall [rax - 1]; pop rcx; lcall [rdx - 1]; pop rbx; lcall [rdi + rdi*8 + 0x5d]; jmp rbx; 
0x00000000000727a3: lcall [rax]; lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000009298f: lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000001b272: lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000000024bb3: lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000001e33c: lcall [rbx + 0x5d]; ret; 
0x0000000000049b35: lcall [rbx - 0x3d]; push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000006ba8b: lcall [rbx]; lcall [rdi + rdi*8]; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x00000000000727a5: lcall [rcx]; jmp qword ptr [rax + 0x21]; 
0x000000000006ba87: lcall [rcx]; lcall [rdx]; lcall [rbx]; lcall [rdi + rdi*8]; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x0000000000020d1c: lcall [rcx]; setbe al; ret; 
0x000000000006bb0d: lcall [rdi + rdi*8 + 0x5d]; jmp rbx; 
0x000000000006ba8d: lcall [rdi + rdi*8]; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x000000000008cd14: lcall [rdi - 0x5dc9c013]; sysenter; 
0x000000000006ba93: lcall [rdi]; jmp qword ptr [rax]; 
0x0000000000042478: lcall [rdx + 0x48]; shr eax, 0x11; ret; 
0x00000000000591a4: lcall [rdx + 0x59]; pop rsi; neg eax; ret; 
0x000000000003f3e5: lcall [rdx + 0x5b]; pop rbp; pop r12; pop r13; ret; 
0x0000000000022aad: lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005a5b6: lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000005af0f: lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005b421: lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x0000000000023a57: lcall [rdx - 0x3d]; mov edi, edi; push rax; mov eax, 0x7a; syscall; 
0x000000000002346b: lcall [rdx - 0x3d]; mov edi, edi; push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023754: lcall [rdx - 0x3d]; mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000005a91d: lcall [rdx - 0x3d]; mov esi, esi; push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000023d41: lcall [rdx - 0x3d]; mov r10, rcx; mov eax, 0xbf; syscall; 
0x000000000002390e: lcall [rdx - 0x3d]; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000023768: lcall [rdx - 0x3d]; mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x0000000000023dc2: lcall [rdx - 0x3d]; mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000226b3: lcall [rdx - 0x3d]; mov r10, rcx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x0000000000023d01: lcall [rdx - 0x3d]; mov r10d, ecx; movsxd rdi, edi; mov eax, 0x116; syscall; 
0x0000000000023c6a: lcall [rdx - 0x3d]; mov r10d, ecx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023c2b: lcall [rdx - 0x3d]; mov r10d, ecx; push rax; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x000000000005aa36: lcall [rdx - 0x3d]; mov r8, rdi; mov eax, 0x6c; syscall; 
0x000000000005a999: lcall [rdx - 0x3d]; mov r8d, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000049af3: lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x00000000000239c6: lcall [rdx - 0x3d]; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x00000000000226cb: lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x000000000005afa0: lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x0000000000023cca: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x0000000000023cb5: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x0000000000023c43: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x000000000002269e: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x0000000000049bae: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x0000000000049c8d: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000003a1f9: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x0000000000023585: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x0000000000023e19: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x000000000004b30f: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x000000000005b5b4: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x00000000000237c1: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x000000000002359a: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000023afe: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x000000000004a63e: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x000000000002259d: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x000000000002349b: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000023558: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000023570: lcall [rdx - 0x3d]; movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x000000000005b40c: lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x0000000000023791: lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0xa6; syscall; 
0x0000000000049cc0: lcall [rdx - 0x3d]; push rax; mov eax, 0x18; syscall; 
0x000000000003a1d5: lcall [rdx - 0x3d]; push rax; mov eax, 0x1b; syscall; 
0x00000000000226f8: lcall [rdx - 0x3d]; push rax; mov eax, 0x43; syscall; 
0x000000000004ebd3: lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x000000000005b27b: lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x000000000005af70: lcall [rdx - 0x3d]; push rax; mov eax, 0x56; syscall; 
0x0000000000023c58: lcall [rdx - 0x3d]; push rax; mov eax, 0x63; syscall; 
0x0000000000038810: lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x0000000000023293: lcall [rdx - 0x3d]; push rax; mov eax, 0x7d; syscall; 
0x0000000000023281: lcall [rdx - 0x3d]; push rax; mov eax, 0x7e; syscall; 
0x00000000000237d9: lcall [rdx - 0x3d]; push rax; mov eax, 0x87; syscall; 
0x000000000003a1e7: lcall [rdx - 0x3d]; push rax; mov eax, 0x95; syscall; 
0x000000000003a3c7: lcall [rdx - 0x3d]; push rax; mov eax, 0x98; syscall; 
0x00000000000237eb: lcall [rdx - 0x3d]; push rax; mov eax, 0x9b; syscall; 
0x00000000000232a5: lcall [rdx - 0x3d]; push rax; mov eax, 0xa1; syscall; 
0x000000000005a8b3: lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x0000000000023c19: lcall [rdx - 0x3d]; push rax; mov eax, 0xa8; syscall; 
0x0000000000023742: lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x0000000000023df5: lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x0000000000023e07: lcall [rdx - 0x3d]; push rax; mov eax, 0xc6; syscall; 
0x000000000005aee0: lcall [rdx - 0x3d]; xor edi, edi; mov eax, 0x79; syscall; 
0x000000000002377d: lcall [rdx - 0x3d]; xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000006bb09: lcall [rdx - 1]; pop rbx; lcall [rdi + rdi*8 + 0x5d]; jmp rbx; 
0x000000000006ba89: lcall [rdx]; lcall [rbx]; lcall [rdi + rdi*8]; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x000000000006ba8f: lcall [rip + 0x1fff1eff]; jmp qword ptr [rax]; 
0x000000000009362f: lcall [rip - 0x7e000397]; push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x000000000009361b: lcall [rsi + 0x2fffc68]; insb byte ptr [rdi], dx; cld; call qword ptr [rdx]; 
0x00000000000929fb: lcall [rsi - 7]; inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x000000000005f2fd: lcall [rsi]; add byte ptr [rax], al; add dword ptr [rip - 1], eax; jmp qword ptr [rbx]; 
0x0000000000084ea5: lcall [rsi]; jmp qword ptr [rsi + 0x22]; 
0x000000000006ba91: lcall [rsi]; lcall [rdi]; jmp qword ptr [rax]; 
0x000000000002251b: ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x00000000000224b3: ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000022534: ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x00000000000224f3: ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x00000000000168a0: lea eax, [r8 + 2]; mov byte ptr [r9], 0x30; mov byte ptr [rdi + rax], 0; ret; 
0x00000000000168a1: lea eax, [rax + 2]; mov byte ptr [r9], 0x30; mov byte ptr [rdi + rax], 0; ret; 
0x000000000003e148: lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000056284: lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000396fa: lea eax, [rax]; add byte ptr [rax], al; syscall; 
0x0000000000070f7d: lea eax, [rbp + 0x74]; ret 0xff3e; 
0x0000000000018d5e: lea eax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000018e26: lea eax, [rbx + rax*4]; pop rbx; ret; 
0x0000000000053e6e: lea eax, [rcx + 1]; mov qword ptr [rdi + 8], rax; mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x00000000000170b1: lea eax, [rdi + 1]; pop rbx; ret; 
0x0000000000037a61: lea eax, [rdi + 1]; ret; 
0x000000000001e9df: lea eax, [rdi - 0x3b]; lea edx, [rdi - 0x35]; cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x0000000000058e6b: lea eax, [rdi - 0x46]; imul edx, edx, 0x15180; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x00000000000424ac: lea eax, [rdi - 1]; mov qword ptr [rip + 0x2559a2], rax; ret; 
0x0000000000025c75: lea eax, [rdx + 0x10]; test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x000000000004a268: lea eax, [rdx + 1]; cmp ecx, edx; cmovg eax, esi; mov dword ptr [r9 + 0x18], eax; sub eax, r8d; ret; 
0x000000000003b962: lea eax, [rdx + 1]; ret; 
0x000000000003b979: lea eax, [rdx + 2]; ret; 
0x0000000000058f3d: lea eax, [rdx + rdi + 0x386e9500]; ret; 
0x000000000005b7ab: lea eax, [rip + 0x227f]; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000004df7a: lea eax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000049f6d: lea eax, [rip + 0x24dd1d]; lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000042787: lea eax, [rip + 0x255883]; pop rbx; ret; 
0x000000000004014e: lea eax, [rip + 0x255e0c]; ret; 
0x000000000003f675: lea eax, [rip + 0x2585f5]; pop rdx; ret; 
0x000000000003d2d2: lea eax, [rip + 0x258c68]; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003d164: lea eax, [rip + 0x258d96]; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003da7d: lea eax, [rip + 0x25a1dd]; add rsp, 0x18; ret; 
0x0000000000037990: lea eax, [rip + 0x260680]; ret; 
0x0000000000026000: lea eax, [rip + 0x26ebfa]; ret; 
0x0000000000020ce1: lea eax, [rip + 0x2740b1]; ret; 
0x0000000000020cb9: lea eax, [rip + 0x2740d1]; ret; 
0x00000000000550cd: lea eax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000005a980: lea eax, [rip + 0x38e49]; ret; 
0x00000000000528c1: lea eax, [rip + 0x40ad1]; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x000000000001e0d0: lea eax, [rip + 0x411aa]; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000051f2c: lea eax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000518e6: lea eax, [rip + 0x4195c]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000050de7: lea eax, [rip + 0x4235b]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000506a8: lea eax, [rip + 0x42992]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000506c2: lea eax, [rip + 0x42a58]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000004f495: lea eax, [rip + 0x43b5d]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000037a36: lea eax, [rip + 0x5c67c]; pop rbx; ret; 
0x0000000000037a3f: lea eax, [rip + 0x5c800]; ret; 
0x0000000000024ae2: lea eax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000025bc0: lea eax, [rip + 0x6cf32]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6e: lea eax, [rip + 0x6cf38]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255ea: lea eax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000026481: lea eax, [rip + 0x6d784]; ret; 
0x0000000000024d8b: lea eax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x0000000000025d0b: lea eax, [rip + 0x6defa]; ret; 
0x0000000000020ea1: lea eax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x000000000001e1a9: lea eax, [rip + 0x7479d]; movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000041003: lea eax, [rsp + 0x20]; call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000389e3: lea eax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000018d8f: lea eax, [rsp + rax*4]; pop rbp; pop r12; ret; 
0x00000000000935d8: lea ebp, [rdx - 4]; inc dword ptr [rdx + rbp*2 - 4]; jmp qword ptr [rax + 0x6a]; 
0x000000000004a401: lea ebp, [rsp + 1]; xor esi, esi; push rcx; call rax; 
0x000000000005fd6e: lea ebx, [rbx - 0x60]; or dword ptr [rax - 0x38495c04], 0xffffffc1; ret; 
0x0000000000020b67: lea ebx, [rip + 0x7318f]; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000020271: lea ebx, [rip + 0x73a85]; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000001fa2a: lea ebx, [rip + 0x742cc]; add rsp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000005fd6d: lea ebx, es:[rbx - 0x60]; or dword ptr [rax - 0x38495c04], 0xffffffc1; ret; 
0x000000000004f5ea: lea ecx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5d1: lea ecx, [rax + 8]; mov qword ptr [rdx + 8], rcx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a5: lea ecx, [rax + 8]; mov qword ptr [rdx + 8], rcx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x000000000003505d: lea ecx, [rdx + 1]; cmp r8d, ecx; je 0x350aa; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000035219: lea ecx, [rdx + 1]; cmp r8d, ecx; je 0x35261; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000021cf9: lea ecx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000004eae0: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x24685e], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000004eaa7: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x246897], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000059d7f: lea ecx, [rip + 0x3978b]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000052745: lea ecx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000005113c: lea ecx, [rip + 0x4201e]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x00000000000408d1: lea ecx, [rsp + 0x28]; call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x0000000000038ef4: lea ecx, [rsp + 0x38]; mov edx, ebp; mov rsi, qword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000049f74: lea ecx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004316f: lea edi, [rax + 0x24]; mov edx, dword ptr [r8 + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x000000000009295c: lea edi, [rax - 0x47680008]; clc; call qword ptr [rdi - 0x18000748]; mov eax, 0xb8e7fff8; clc; jmp qword ptr [rdx]; 
0x0000000000056bb3: lea edi, [rbp + 4]; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x000000000001aca1: lea edi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x00000000000569a3: lea edi, [rcx + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000058e29: lea edi, [rip + 0x23f1b9]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000559cf: lea edi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055980: lea edi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004ea30: lea edi, [rip + 0x246976]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004db74: lea edi, [rip + 0x247732]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004df6d: lea edi, [rip + 0x24a055]; push rax; call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000042746: lea edi, [rip + 0x255870]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000427d4: lea edi, [rip + 0x2558fe]; call 0x545dd; mov eax, 0x39; syscall; 
0x0000000000021fab: lea edi, [rip + 0x275fc3]; mov dword ptr [rip + 0x275fc1], eax; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x000000000002175a: lea edi, [rip + 0x276974]; mov eax, 0xda; syscall; 
0x000000000001ad0b: lea edi, [rip + 0x27d3bf]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005ee82: lea edi, [rip + 0x34916]; push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x0000000000023038: lea edi, [rip + 0x6db12]; mov esi, 0x11; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000004a97e: lea edi, [rsp + 0x18]; call 0x4a614; mov eax, dword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x00000000000427a9: lea edi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x0000000000034f32: lea edi, [rsp + 0xc]; call 0x34f53; add rsp, 0x18; ret; 
0x0000000000034f45: lea edi, [rsp + 0xc]; call 0x35149; add rsp, 0x18; ret; 
0x0000000000020bb1: lea edi, [rsp + 8]; jne 0x20b83; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x0000000000056c7c: lea edi, [rsp - 4]; xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x0000000000018abd: lea edx, [r8 - 0x30]; movzx eax, al; movzx edx, dl; sub eax, edx; ret; 
0x0000000000057f35: lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000004c25e: lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dc08: lea edx, [rax + 1]; mov qword ptr [rip + 0x247616], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbdd: lea edx, [rax + 1]; mov qword ptr [rip + 0x247641], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000050e76: lea edx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000024adb: lea edx, [rax - 0x100]; lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000018abe: lea edx, [rax - 0x30]; movzx eax, al; movzx edx, dl; sub eax, edx; ret; 
0x0000000000076e90: lea edx, [rbp - 0x6a6f6a74]; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x000000000005ba8c: lea edx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000001e9e2: lea edx, [rdi - 0x35]; cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x00000000000210bc: lea edx, [rdi - 0x41]; mov eax, edi; or eax, 0x20; cmp edx, 0x19; cmova eax, edi; ret; 
0x000000000005906e: lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000054900: lea edx, [rdx + rdx + 2]; mov eax, edx; pop rdx; ret; 
0x00000000000419e3: lea edx, [rip + 0x254897]; xor esi, esi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000464a9: lea edx, [rip + 0x4cb2d]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x00000000000321f0: lea edx, [rip + 0x60d62]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bd0: lea edx, [rip + 0x6127a]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000003145c: lea edx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000026981: lea edx, [rip + 0x6ce77]; test rax, rax; cmove rax, rdx; ret; 
0x00000000000263be: lea edx, [rip + 0x6d847]; mov rax, rdx; ret; 
0x0000000000025c7c: lea edx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000022759: lea edx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000059059: lea edx, [rsi + rcx]; mov rax, rdx; add rsp, 0x18; ret; 
0x00000000000392d5: lea edx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000005a35b: lea edx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x000000000005a485: lea edx, [rsp + 0xc]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000005b1fe: lea edx, [rsp + 0xf]; mov r10d, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000005af27: lea edx, [rsp + 8]; mov eax, 0x10; syscall; 
0x000000000004b6fe: lea edx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000056cdd: lea edx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000024041: lea esi, [rax + 0x14]; call 0x3a3dc; xor eax, eax; pop rdx; ret; 
0x0000000000055c4a: lea esi, [rbx + 0x18]; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000004cf7d: lea esi, [rcx + 1]; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x00000000000803c3: lea esi, [rcx*4 + 0x5e1694c1]; test dword ptr [rbx + 0x2c], edx; push rsp; ret; 
0x0000000000021470: lea esi, [rdi + 0x18]; jl 0x214ad; movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x000000000004365f: lea esi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004364b: lea esi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004246d: lea esi, [rip + 0x252fb3]; push rax; call 0x423c4; pop rdx; shr rax, 0x11; ret; 
0x0000000000041985: lea esi, [rip + 0x2548f5]; call 0x419fa; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000020bb8: lea esi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x00000000000550c1: lea esi, [rip + 0x2dc2]; cmp rcx, rsi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004a604: lea esi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a604: lea esi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004a5ea: lea esi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5ea: lea esi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000042d96: lea esi, [rip + 0x50e6f]; sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x000000000005416b: lea esi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000021f0c: lea esi, [rsp + 0x10]; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005a41f: lea esi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x0000000000055d63: lea esi, [rsp + 0x40]; mov qword ptr [rsp + 0x40], rax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000003a6c3: lea esi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x0000000000057314: lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000005abb8: lea esi, [rsp + 0xc]; mov edx, 4; xor eax, eax; syscall; 
0x000000000005b1be: lea esi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000004bd54: lea esi, [rsp + 0xf]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d1: lea esi, [rsp + 0xf]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003af65: lea esi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b375: lea esi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x0000000000021f43: lea esi, [rsp + 8]; mov eax, 0xe; syscall; 
0x000000000005abde: lea esi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000004a823: lea esi, [rsp + 8]; mov qword ptr [rsp + 8], rax; xor edx, edx; mov eax, 0xe; syscall; 
0x000000000004cceb: lea esi, [rsp + 8]; mov rdi, qword ptr [rcx]; call rax; 
0x0000000000056cd8: lea esi, [rsp - 0x10]; lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000059076: lea esi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000005aa9d: lea esi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa9d: lea esi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x0000000000086661: lea esp, [rax]; nop; ret; 
0x0000000000042aa1: lea esp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000003d167: lea esp, [rip + 0xba00]; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000004a400: lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x0000000000049f6c: lea r8, [rip + 0x24dd1d]; lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000041002: lea r8, [rsp + 0x20]; call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000408d0: lea r9, [rsp + 0x28]; call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x0000000000018d8e: lea rax, [r12 + rax*4]; pop rbp; pop r12; ret; 
0x0000000000018d5d: lea rax, [rbp + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000018e25: lea rax, [rbx + rax*4]; pop rbx; ret; 
0x0000000000053e6d: lea rax, [rcx + 1]; mov qword ptr [rdi + 8], rax; mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x00000000000170b0: lea rax, [rdi + 1]; pop rbx; ret; 
0x0000000000054173: lea rax, [rdi + 1]; ret; 
0x0000000000025c74: lea rax, [rdx + 0x10]; test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000058f3c: lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x000000000005b7aa: lea rax, [rip + 0x227f]; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000004df79: lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000042786: lea rax, [rip + 0x255883]; pop rbx; ret; 
0x000000000004014d: lea rax, [rip + 0x255e0c]; ret; 
0x000000000003f674: lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x000000000003d2d1: lea rax, [rip + 0x258c68]; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003d163: lea rax, [rip + 0x258d96]; mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x000000000003da7c: lea rax, [rip + 0x25a1dd]; add rsp, 0x18; ret; 
0x000000000003798f: lea rax, [rip + 0x260680]; ret; 
0x0000000000025fff: lea rax, [rip + 0x26ebfa]; ret; 
0x0000000000020ce0: lea rax, [rip + 0x2740b1]; ret; 
0x0000000000020cb8: lea rax, [rip + 0x2740d1]; ret; 
0x00000000000550cc: lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000005a97f: lea rax, [rip + 0x38e49]; ret; 
0x00000000000528c0: lea rax, [rip + 0x40ad1]; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x000000000001e0cf: lea rax, [rip + 0x411aa]; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000051f2b: lea rax, [rip + 0x4135e]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x00000000000518e5: lea rax, [rip + 0x4195c]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000050de6: lea rax, [rip + 0x4235b]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000506a7: lea rax, [rip + 0x42992]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000506c1: lea rax, [rip + 0x42a58]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000004f494: lea rax, [rip + 0x43b5d]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000037a35: lea rax, [rip + 0x5c67c]; pop rbx; ret; 
0x0000000000037a3e: lea rax, [rip + 0x5c800]; ret; 
0x0000000000024ae1: lea rax, [rip + 0x640f8]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000025bbf: lea rax, [rip + 0x6cf32]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6d: lea rax, [rip + 0x6cf38]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255e9: lea rax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000026480: lea rax, [rip + 0x6d784]; ret; 
0x0000000000024d8a: lea rax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x0000000000025d0a: lea rax, [rip + 0x6defa]; ret; 
0x0000000000020ea0: lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x000000000001e1a8: lea rax, [rip + 0x7479d]; movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000389e2: lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000020b66: lea rbx, [rip + 0x7318f]; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000020270: lea rbx, [rip + 0x73a85]; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000001fa29: lea rbx, [rip + 0x742cc]; add rsp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000004f5e9: lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5d0: lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a4: lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000021cf8: lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000004eadf: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x24685e], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000004eaa6: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x246897], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000059d7e: lea rcx, [rip + 0x3978b]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000052744: lea rcx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000005113b: lea rcx, [rip + 0x4201e]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000038ef3: lea rcx, [rsp + 0x38]; mov edx, ebp; mov rsi, qword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000049f73: lea rcx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004316e: lea rdi, [r8 + 0x24]; mov edx, dword ptr [r8 + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x00000000000569a2: lea rdi, [r9 + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000056bb2: lea rdi, [rbp + 4]; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x000000000001aca0: lea rdi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000058e28: lea rdi, [rip + 0x23f1b9]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000559ce: lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597f: lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004ea2f: lea rdi, [rip + 0x246976]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004db73: lea rdi, [rip + 0x247732]; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004df6c: lea rdi, [rip + 0x24a055]; push rax; call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000042745: lea rdi, [rip + 0x255870]; call 0x5468b; mov rax, rbx; pop rbx; ret; 
0x00000000000427d3: lea rdi, [rip + 0x2558fe]; call 0x545dd; mov eax, 0x39; syscall; 
0x0000000000021faa: lea rdi, [rip + 0x275fc3]; mov dword ptr [rip + 0x275fc1], eax; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000021759: lea rdi, [rip + 0x276974]; mov eax, 0xda; syscall; 
0x000000000001ad0a: lea rdi, [rip + 0x27d3bf]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005ee81: lea rdi, [rip + 0x34916]; push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x0000000000023037: lea rdi, [rip + 0x6db12]; mov esi, 0x11; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x000000000004a97d: lea rdi, [rsp + 0x18]; call 0x4a614; mov eax, dword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x00000000000427a8: lea rdi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x0000000000034f31: lea rdi, [rsp + 0xc]; call 0x34f53; add rsp, 0x18; ret; 
0x0000000000034f44: lea rdi, [rsp + 0xc]; call 0x35149; add rsp, 0x18; ret; 
0x0000000000020bb0: lea rdi, [rsp + 8]; jne 0x20b83; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x0000000000056c7b: lea rdi, [rsp - 4]; xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x000000000004c25d: lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dc07: lea rdx, [rax + 1]; mov qword ptr [rip + 0x247616], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbdc: lea rdx, [rax + 1]; mov qword ptr [rip + 0x247641], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000050e75: lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x000000000005ba8b: lea rdx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x00000000000419e2: lea rdx, [rip + 0x254897]; xor esi, esi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000464a8: lea rdx, [rip + 0x4cb2d]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x00000000000321ef: lea rdx, [rip + 0x60d62]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000031bcf: lea rdx, [rip + 0x6127a]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000003145b: lea rdx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000026980: lea rdx, [rip + 0x6ce77]; test rax, rax; cmove rax, rdx; ret; 
0x00000000000263bd: lea rdx, [rip + 0x6d847]; mov rax, rdx; ret; 
0x0000000000025c7b: lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000022758: lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000059058: lea rdx, [rsi + rcx]; mov rax, rdx; add rsp, 0x18; ret; 
0x00000000000392d4: lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000005a35a: lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x000000000005a484: lea rdx, [rsp + 0xc]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000005b1fd: lea rdx, [rsp + 0xf]; mov r10d, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000005af26: lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x000000000004b6fd: lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000056cdc: lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000055c49: lea rsi, [rbx + 0x18]; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000004cf7c: lea rsi, [rcx + 1]; mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000002146f: lea rsi, [rdi + 0x18]; jl 0x214ad; movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x000000000004365e: lea rsi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004364a: lea rsi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004246c: lea rsi, [rip + 0x252fb3]; push rax; call 0x423c4; pop rdx; shr rax, 0x11; ret; 
0x0000000000041984: lea rsi, [rip + 0x2548f5]; call 0x419fa; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000020bb7: lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x00000000000550c0: lea rsi, [rip + 0x2dc2]; cmp rcx, rsi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004a603: lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a603: lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004a5e9: lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e9: lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000042d95: lea rsi, [rip + 0x50e6f]; sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x000000000005416a: lea rsi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000021f0b: lea rsi, [rsp + 0x10]; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005a41e: lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x0000000000055d62: lea rsi, [rsp + 0x40]; mov qword ptr [rsp + 0x40], rax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000003a6c2: lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x0000000000057313: lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000005abb7: lea rsi, [rsp + 0xc]; mov edx, 4; xor eax, eax; syscall; 
0x000000000005b1bd: lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000004bd53: lea rsi, [rsp + 0xf]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d0: lea rsi, [rsp + 0xf]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003af64: lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b374: lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x0000000000021f42: lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x000000000005abdd: lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000004a822: lea rsi, [rsp + 8]; mov qword ptr [rsp + 8], rax; xor edx, edx; mov eax, 0xe; syscall; 
0x000000000004ccea: lea rsi, [rsp + 8]; mov rdi, qword ptr [rcx]; call rax; 
0x0000000000056cd7: lea rsi, [rsp - 0x10]; lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000059075: lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000005aa9c: lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa9c: lea rsi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x0000000000042aa0: lea rsp, [rbp - 0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000007c348: leave; add al, bh; add ch, byte ptr [rax + 0x5300300]; xor byte ptr [rax], dl; pop rsi; call qword ptr [rsi]; 
0x0000000000017736: leave; add eax, dword ptr [rax]; add rax, rbx; pop rbx; ret; 
0x0000000000021fbe: leave; add eax, dword ptr es:[rax]; call rbx; 
0x00000000000371fc: leave; add rsp, 0x10; ret; 
0x0000000000022ebb: leave; add rsp, 0x170; pop rbx; pop rbp; pop r12; ret; 
0x00000000000355dd: leave; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x000000000003568b: leave; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x000000000001ce23: leave; add rsp, 0x48; ret; 
0x000000000001cb49: leave; add rsp, 0x58; ret; 
0x00000000000331c6: leave; addsd xmm2, xmm9; addsd xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000004b2ca: leave; call 0x4b501; add rsp, 0x28; ret; 
0x000000000005b96c: leave; call qword ptr [rbx - 0x45]; 
0x00000000000533c7: leave; cmove eax, edx; ret; 
0x0000000000058210: leave; cmove eax, r8d; ret; 
0x000000000005341d: leave; cmove rax, rdx; ret; 
0x0000000000057f3f: leave; cmovne eax, edx; ret; 
0x0000000000026fb8: leave; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x0000000000032ba0: leave; divsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000032a1d: leave; divss xmm0, xmm1; ret; 
0x000000000002a766: leave; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032d7a: leave; divss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x00000000000372c5: leave; faddp st(1); add rsp, 0x30; ret; 
0x000000000002b860: leave; faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000029b5a: leave; faddp st(1); ret; 
0x000000000001b869: leave; fchs; add rsp, 0xa0; pop rbx; ret; 
0x000000000001b89b: leave; fchs; fxch st(1); ret; 
0x0000000000028b2c: leave; fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b21; ret; 
0x0000000000036d09: leave; fld xword ptr [rsp]; add rsp, 0x48; fmulp st(1); ret; 
0x000000000002bdf7: leave; fmulp st(1); pop rax; pop rdx; add rsp, 0x38; ret; 
0x0000000000037108: leave; fpatan; ret; 
0x0000000000037102: leave; fsqrt; fabs; fxch st(1); fpatan; ret; 
0x0000000000037119: leave; fsqrt; fpatan; ret; 
0x0000000000036786: leave; fstp st(1); add rsp, 0x10; pop rbx; ret; 
0x000000000002ce3d: leave; fstp st(1); add rsp, 0x20; pop rbx; ret; 
0x000000000002b4d0: leave; fstp st(1); add rsp, 0x30; pop rbx; ret; 
0x000000000002ab85: leave; fstp st(1); add rsp, 0x50; pop rbx; ret; 
0x00000000000336a9: leave; fstp xword ptr [rdi]; fchs; add rsp, 0x20; pop rbx; ret; 
0x0000000000035510: leave; fstp xword ptr [rsp - 0x18]; fldz; fmulp st(1); ret; 
0x0000000000055147: leave; je 0x55150; cmp rax, 3; jne 0x55154; syscall; 
0x0000000000042546: leave; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000004b181: leave; jne 0x4b193; mov eax, 4; mov rdi, r8; mov rsi, rbx; syscall; 
0x00000000000335c0: leave; jns 0x335cb; and eax, 0x80000000; mov dword ptr [rdi], eax; ret; 
0x0000000000040752: leave; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000040726: leave; mov eax, 0x29; syscall; 
0x00000000000407c9: leave; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000004081b: leave; mov eax, 0x35; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x00000000000541f9: leave; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000003af5e: leave; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b36e: leave; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x000000000005a608: leave; mov rsi, r8; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000002dd51: leave; movapd xmm0, xmm1; ret; 
0x000000000002b6ff: leave; movaps xmm0, xmm1; ret; 
0x000000000002ffab: leave; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000002f49f: leave; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x0000000000028a5a: leave; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000030549: leave; movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002fa1c: leave; movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x0000000000028a82: leave; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000003d490: leave; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d12a: leave; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4b3: leave; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x0000000000023bce: leave; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x0000000000023330: leave; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x00000000000406aa: leave; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4ab: leave; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x37; syscall; 
0x00000000000406ce: leave; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df44: leave; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x00000000000353df: leave; mulsd xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000035478: leave; mulss xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000075fac: leave; or bh, 0x80; xlatb; and dh, 0x80; int 0x80; 
0x000000000002bdf9: leave; pop rax; pop rdx; add rsp, 0x38; ret; 
0x00000000000372dd: leave; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372d0: leave; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000911ce: leave; push r15; sbb eax, 0x153f5945; ret; 
0x0000000000087160: leave; push rax; retf 0xb350; push rax; ret 0xd650; 
0x0000000000073258: leave; push rdx; ret; 
0x0000000000062655: leave; ret 0x3b81; 
0x0000000000062399: leave; ret 0x8581; 
0x000000000001a21d: leave; ret; 
0x0000000000029cd2: leave; subsd xmm0, xmm1; je 0x29d50; movsd xmm1, qword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x00000000000296a3: leave; xchg dword ptr [rsi], eax; add byte ptr [rdi + 5], dh; movsd qword ptr [rdi], xmm4; ret; 
0x000000000007854e: leave; xchg eax, ebp; ret; 
0x000000000005b593: ljmp [rcx + 0x44]; and al, 0x30; sldt word ptr [rbx]; and al, 0x38; add rsp, 0x48; ret; 
0x0000000000062205: ljmp [rdx]; cmpsd dword ptr [rsi], dword ptr [rdi]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x000000000005a01e: ljmp [rip - 0xb7f78b]; ret; 
0x000000000009334b: ljmp [rsp + rsi*8 - 0xb230005]; sti; jmp rsp; 
0x0000000000053208: lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x60; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000003a755: lock add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; pop rbp; ret 0xfffd; 
0x000000000004b010: lock add byte ptr [rax], al; cmp eax, 0xa000; je 0x4b035; mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x000000000004b075: lock add byte ptr [rax], al; cmp eax, 0xa000; je 0x4b08b; mov edx, ebp; mov eax, 0x10c; syscall; 
0x0000000000056692: lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000056aa7: lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000005498a: lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000054958: lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566e0: lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x0000000000056f57: lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a38: lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x0000000000056f75: lock cmpxchg dword ptr [rdi], edx; cmp eax, 1; sbb eax, eax; not eax; and eax, 0x10; ret; 
0x00000000000573ca: lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000573ba: lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x573b6; ret; 
0x00000000000548c1: lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000002e855: lock dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032704: lock dec dword ptr [rax + 1]; ret 0xff2; 
0x0000000000057964: lock dec dword ptr [rdi]; ret; 
0x000000000005530d: lock inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000552c2: lock inc dword ptr [rcx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005539d: lock inc dword ptr [rcx + 8]; mov r8d, 0xca; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000057db8: lock inc dword ptr [rip + 0x2400e1]; ret; 
0x000000000005a520: lock or dword ptr [rsp], 0; mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000567d1: lock or dword ptr [rsp], 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x00000000000573d3: lock or dword ptr [rsp], 0; ret; 
0x0000000000056c96: lock or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf2: lock or dword ptr [rsp], 0; test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x000000000002358d: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; and eax, 0x5affff34; ret; 
0x0000000000035d7f: lodsb al, byte ptr [rsi]; add eax, 0xf2c7500; push rdi; retf 0x570f; ret 0xff3; 
0x000000000002e0e0: lodsb al, byte ptr [rsi]; and al, 0x90; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xeed9; 
0x0000000000034c41: lodsb al, byte ptr [rsi]; and al, 0xa0; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000049970: lodsb al, byte ptr [rsi]; cld; call qword ptr [rbx + 0x48]; 
0x0000000000080630: lodsb al, byte ptr [rsi]; jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x00000000000053b4: lodsb al, byte ptr [rsi]; nop; jg 0x5396; ret 0x793b; 
0x000000000006cda8: lodsb al, byte ptr [rsi]; ret 0xc2ad; 
0x000000000008b951: lodsb al, byte ptr [rsi]; ret 0xed60; 
0x000000000006d422: lodsb al, byte ptr [rsi]; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000004e6d4: lodsb al, byte ptr [rsi]; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000046282: lodsb al, byte ptr [rsi]; std; inc dword ptr [rbp - 0x146f8a40]; adc byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000007fb60: lodsb al, byte ptr [rsi]; sub dword ptr [rbp - 0x507c517d], -0x7d; mov ch, 0x83; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x000000000007fe28: lodsb al, byte ptr [rsi]; test byte ptr [rbp - 0x4f7b517c], ch; test byte ptr [rcx - 0x4a7b4c7c], dh; test byte ptr [rsi - 0x447b487c], dh; test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x000000000004da24: lodsd eax, dword ptr [rsi]; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000001cb41: lodsd eax, dword ptr [rsi]; add dword ptr [rax], eax; fld xword ptr [rsp + 0x10]; fxch st(1); add rsp, 0x58; ret; 
0x000000000007dc84: lodsd eax, dword ptr [rsi]; call 0xffffffffe29c91ed; insb byte ptr [rdi], dx; pop rdx; push rbx; ret; 
0x000000000007403c: lodsd eax, dword ptr [rsi]; cdq; ret; 
0x000000000004c19b: lodsd eax, dword ptr [rsi]; idiv edi; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x000000000002812f: lodsd eax, dword ptr [rsi]; jmp qword ptr [rsi]; 
0x000000000006f280: lodsd eax, dword ptr [rsi]; pop rsp; push rax; jne 0x6f2d6; push rsp; ret; 
0x000000000008f3e3: lodsd eax, dword ptr [rsi]; push -3; ret; 
0x0000000000081faa: lodsd eax, dword ptr [rsi]; push rsp; ret 0xb454; 
0x000000000006cdaa: lodsd eax, dword ptr [rsi]; ret 0xc2b4; 
0x0000000000091336: lodsd eax, dword ptr [rsi]; ret; 
0x000000000007fb62: lodsd eax, dword ptr [rsi]; sub dword ptr [rsi - 0x4a7c507d], -0x7d; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x0000000000078a92: lodsd eax, dword ptr [rsi]; xchg eax, ecx; ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x0000000000092ad0: lodsd eax, dword ptr [rsi]; xor cl, bh; call rcx; 
0x000000000006bdc8: lodsd eax, dword ptr [rsi]; xor ebp, dword ptr [rsi - 0x24cc50cd]; xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000006f27f: lodsq rax, qword ptr [rsi]; pop rsp; push rax; jne 0x6f2d6; push rsp; ret; 
0x000000000001b899: loope 0x1b874; leave; fchs; fxch st(1); ret; 
0x000000000001bb41: loope 0x1bb1c; ret 0xc2d8; 
0x000000000001d3d5: loope 0x1d3d6; jmp qword ptr [rsi + 0xf]; 
0x0000000000020e3d: loope 0x20e46; sar eax, cl; and eax, 1; ret; 
0x000000000002102a: loope 0x21033; sar eax, cl; and eax, 1; ret; 
0x00000000000239e7: loope 0x239e7; mov eax, 0xa9; syscall; 
0x0000000000025d07: loope 0x25d08; dec dword ptr [rax - 0x73]; add eax, 0x6defa; ret; 
0x000000000002890e: loope 0x288ee; ret 0xc1de; 
0x0000000000029a9c: loope 0x29a90; subps xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x000000000002de3b: loope 0x2de4c; wait; ret 0x450f; 
0x00000000000370fe: loope 0x370d8; ret 0xc9de; 
0x0000000000037106: loope 0x370e1; leave; fpatan; ret; 
0x0000000000037115: loope 0x370ef; ret 0xc9de; 
0x000000000003880e: loope 0x3880d; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x0000000000049c14: loope 0x49c5e; add esp, 0x18; mov rax, -0x26; pop rbx; pop rbp; ret; 
0x0000000000057dbb: loope 0x57dbd; and al, 0; ret; 
0x0000000000058e78: loope 0x58e7b; add eax, edx; cdqe; ret; 
0x0000000000058f2e: loope 0x58f31; add edx, eax; movsxd rdx, edx; imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x000000000005a556: loope 0x5a558; add byte ptr [rax], al; syscall; 
0x000000000006e5a8: loope 0x6e629; movsd dword ptr [rdi], dword ptr [rsi]; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x000000000006f1d4: loope 0x6f230; ret 0x585b; 
0x00000000000720d4: loope 0x7213f; or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x00000000000930f0: loope 0x930ca; sti; push qword ptr [rdi - 0x2a]; sti; jmp qword ptr [rbx - 0x29]; 
0x000000000002e4cc: maxps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002e528: maxps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002e4cb: maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002e527: maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002e616: minps xmm0, xmmword ptr [rsp - 0x10]; ret; 
0x000000000002e670: minps xmm0, xmmword ptr [rsp - 8]; ret; 
0x000000000002e615: minsd xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000002e66f: minss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000007974a: mov ah, 0x51; mov eax, 0xba51b951; push rcx; mov esi, 0xc151bf51; push rcx; ret 0xc351; 
0x0000000000087372: mov ah, 0x56; ret 0xbc56; 
0x0000000000070ebc: mov ah, 0x67; ret; 
0x0000000000083166: mov ah, 0x80; mov bh, 0x80; out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x00000000000817ec: mov ah, 0x8b; mov ch, 0x8b; mov bh, 0x8b; ret 0xc38b; 
0x00000000000888ae: mov ah, 0x97; ret; 
0x000000000007522c: mov ah, 0x9d; ret 0xb89d; 
0x0000000000092cec: mov ah, 0xf1; iretd; ret 0; 
0x000000000003d598: mov ah, 0xff; dec dword ptr [rax + 0x63]; sti; mov edx, eax; mov eax, 3; syscall; 
0x00000000000355a4: mov ah, 5; add byte ptr [rdi], cl; push rdi; sal edx, 1; divps xmm0, xmm2; ret; 
0x000000000005925f: mov ah, bh; dec dword ptr [rax - 0x73]; je 0x5928a; or byte ptr [rax - 0x77], cl; ret; 
0x000000000005eebe: mov ah, byte ptr [rbx]; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000513b0: mov al, 0; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000004b256: mov al, 0; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000002375b: mov al, 0; add byte ptr [rax], al; syscall; 
0x0000000000004934: mov al, 0x22; xchg eax, ebp; ret; 
0x0000000000057e5a: mov al, 0x3c; syscall; 
0x0000000000057e5a: mov al, 0x3c; syscall; hlt; ret; 
0x000000000004f49e: mov al, 0x48; add eax, ecx; jmp rax; 
0x0000000000020eaa: mov al, 0x48; add eax, edx; jmp rax; 
0x000000000008727e: mov al, 0x53; mov dh, 0x53; ret; 
0x0000000000005536: mov al, 0x56; add al, 0x50; test dword ptr [rbx], ebx; cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x00000000000873c8: mov al, 0x57; ret; 
0x0000000000027296: mov al, 0x5b; pop rbp; pop r12; pop r14; pop r15; ret; 
0x0000000000080946: mov al, 0x65; sti; pop rdi; ret; 
0x000000000008390e: mov al, 0x75; ret; 
0x00000000000705f6: mov al, 0x7a; ret 0xc37a; 
0x0000000000072ef2: mov al, 0x8f; ret 0xc68f; 
0x0000000000078a90: mov al, 0x91; lodsd eax, dword ptr [rsi]; xchg eax, ecx; ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x0000000000071886: mov al, 0x95; mov eax, 0xd1973295; cwde; cqo; push -0x67; ret; 
0x0000000000005001: mov al, 0xa8; xchg eax, esp; ret 0x88ad; 
0x0000000000005000: mov al, 0xb0; test al, 0x94; ret 0x88ad; 
0x000000000005af0c: mov al, 0xba; sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000008987e: mov al, 0xc4; ret 0x4e90; 
0x000000000000592f: mov al, 0xd5; pop rsp; ret 0x9ec0; 
0x0000000000042bf3: mov al, 0xe8; in eax, 0xee; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000005a255: mov al, 0xff; dec dword ptr [rax - 0x75]; jl 0x5a280; sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000005365d: mov al, 1; mov rdi, rbx; call 0x4edcc; mov rax, rbx; pop rbx; ret; 
0x0000000000037087: mov al, 5; add byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], cl; ret 0x8948; 
0x000000000008beb6: mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x000000000004b3b7: mov al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000053e75: mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x000000000003e0e6: mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000006e2c4: mov al, byte ptr [rsi - 0x69106a80]; call qword ptr [rdx - 0x6b]; 
0x000000000007b1b7: mov ax, 0xba66; mov bx, 0xbc66; mov bp, 0xbf66; shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x000000000003f241: mov ax, word ptr [rdi]; xchg al, ah; movzx eax, ax; ret; 
0x000000000002764b: mov bh, 0x14; push rcx; cmp rdx, rdi; adc eax, 0; ret; 
0x00000000000550cf: mov bh, 0x2d; add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x00000000000324dd: mov bh, 0x2e; add byte ptr [rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000005863: mov bh, 0x39; pop rsi; test al, 0x20; ret 0x9504; 
0x00000000000920ce: mov bh, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x000000000007a3b6: mov bh, 0x5b; mov edx, 0xbc5bbb5b; pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x000000000008785e: mov bh, 0x65; ret; 
0x000000000007b1b6: mov bh, 0x66; mov eax, 0xbb66ba66; mov sp, 0xbd66; mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x000000000007b9f6: mov bh, 0x6c; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x0000000000078984: mov bh, 0x74; ret; 
0x00000000000776fa: mov bh, 0x7d; ret 0xa37d; 
0x0000000000083168: mov bh, 0x80; out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x0000000000076878: mov bh, 0x86; ret 0xc186; 
0x00000000000817f0: mov bh, 0x8b; ret 0xc38b; 
0x00000000000849aa: mov bh, 0x9e; mov ecx, 0xbc9eba9e; sahf; mov edi, 0xc19ec09e; sahf; ret 0xc39e; 
0x00000000000168ba: mov bh, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8548; 
0x0000000000029a01: mov bh, 0xc0; ret; 
0x000000000002b71d: mov bh, 0xc8; jne 0x2b724; fadd st(0); ret; 
0x00000000000046d1: mov bh, 0xf4; in al, dx; ret 0x33b1; 
0x000000000005b279: mov bh, 0xfb; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x000000000003a1f6: mov bh, 0xfd; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x000000000003da21: mov bh, 0xff; cmovbe eax, edi; ret; 
0x000000000005aad0: mov bh, 1; add byte ptr [rax], al; syscall; 
0x0000000000024ae9: mov bh, 4; push rax; ret; 
0x0000000000026fef: mov bh, 4; shl eax, 4; cdqe; ret; 
0x0000000000035298: mov bh, 5; add byte ptr [rdi], cl; push rdi; retf 0x3941; sal byte ptr [rax - 1], 1; ret 0x3941; 
0x0000000000088e4c: mov bh, 5; mov eax, 0xbb05b905; add eax, 0x5bd05bc; mov esi, 0xc005bf05; add eax, 0x5c205c1; ret; 
0x0000000000001d50: mov bl, 0; add byte ptr [rax], al; ret 5; 
0x00000000000239b9: mov bl, 0; add byte ptr [rax], al; syscall; 
0x000000000008b903: mov bl, 0x19; sbb dword ptr [rcx + 0x13a8e5bc], ebx; ret; 
0x000000000008beb2: mov bl, 0x22; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x000000000000f5c0: mov bl, 0x28; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x4be; 
0x0000000000087164: mov bl, 0x50; ret 0xd650; 
0x00000000000740bc: mov bl, 0x5a; ret 0xb25a; 
0x0000000000075e44: mov bl, 0x67; mul dword ptr [rdi - 0xa]; out dx, al; jecxz 0x75eb5; ret 0xb967; 
0x0000000000093608: mov bl, 0x68; cld; call rdi; 
0x00000000000832b0: mov bl, 0x6b; pop rdi; ret 0xf36b; 
0x0000000000087d80: mov bl, 0x75; ret; 
0x000000000000553f: mov bl, 0x83; and eax, 0xae13af0b; and al, 0xc3; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x000000000006f378: mov bl, 0x8d; ret; 
0x00000000000888ac: mov bl, 0x97; mov ah, 0x97; ret; 
0x000000000008d8b4: mov bl, 0xbe; out 0x3f, eax; add byte ptr [rax + 0x43], ah; adc byte ptr [rdx + 0x18], dh; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000002d099: mov bl, 0xe5; add eax, 0x590ff200; ret 0xff2; 
0x000000000008a948: mov bl, 0xe7; ret; 
0x000000000002e6da: mov bl, 0xff; inc dword ptr [rbp + 0x75595ac0]; ret; 
0x000000000008fd9b: mov bl, 1; add byte ptr [rax], al; ret; 
0x0000000000035652: mov bl, 5; add byte ptr [rdi], cl; push rdi; sal ebx, 1; divps xmm0, xmm2; ret; 
0x00000000000045b6: mov bl, 8; xchg eax, edi; ret 0x4f7a; 
0x000000000006e6b8: mov bl, byte ptr [rsi - 0x60]; pop rsi; ret 0xf35e; 
0x000000000007b1bf: mov bp, 0xbf66; shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x00000000000053ae: mov bpl, byte ptr [r8]; fstp dword ptr [rax + rbp*8 - 0x21806f54]; ret 0x793b; 
0x00000000000921e4: mov bx, 0x3f; add byte ptr [rax], al; cmp dl, 0xd4; ret; 
0x000000000007b1bb: mov bx, 0xbc66; mov bp, 0xbf66; shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x0000000000086811: mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x0000000000052ec8: mov byte ptr [r8], 0; mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x000000000004a26e: mov byte ptr [r9 - 0x77], 0x41; sbb byte ptr [rcx + rbp - 0x40], al; ret; 
0x00000000000168a4: mov byte ptr [r9], 0x30; mov byte ptr [rdi + rax], 0; ret; 
0x000000000005510d: mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x00000000000430f7: mov byte ptr [rax + 1], cl; add byte ptr [rax], al; mov rax, r9; syscall; 
0x0000000000088433: mov byte ptr [rax + rcx*4 - 0x77407750], ah; mov cl, 0x88; ret; 
0x000000000003798c: mov byte ptr [rax], 0; lea rax, [rip + 0x260680]; ret; 
0x000000000002309a: mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x00000000000180dc: mov byte ptr [rax], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000189a8: mov byte ptr [rax], 0; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000052ec9: mov byte ptr [rax], 0; mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x00000000000942a0: mov byte ptr [rax], al; add byte ptr [rax], al; and byte ptr [rdi - 8], bl; jmp qword ptr [rax]; 
0x0000000000043231: mov byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x00000000000436bb: mov byte ptr [rax], al; add byte ptr [rax], al; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000569a5: mov byte ptr [rax], al; add byte ptr [rax], al; mov esi, 0x18; mov eax, 0x111; syscall; 
0x000000000002027a: mov byte ptr [rax], al; add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000043661: mov byte ptr [rax], al; add byte ptr [rax], al; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005ba4f: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000004286f: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000001b2f4: mov byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000086812: mov byte ptr [rbp + rcx*8 + 0x73], ch; ret; 
0x0000000000088421: mov byte ptr [rbp - 0x7d778d78], dh; mov byte ptr [rdi - 0x51776d78], dl; mov byte ptr [rcx - 0x72775d78], bl; mov byte ptr [rax + rcx*4 - 0x77407750], ah; mov cl, 0x88; ret; 
0x00000000000431a4: mov byte ptr [rbx + 0x4c000000], bl; mov eax, ecx; syscall; 
0x000000000001819e: mov byte ptr [rbx + rbp], 0; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ad34: mov byte ptr [rbx + rdi*8 - 0x3b7cb701], bh; sbb bl, al; movsxd rdi, edi; push rax; mov eax, 0x4d; syscall; 
0x0000000000020ca7: mov byte ptr [rbx - 1], al; cmp ecx, -1; jne 0x20c9b; add rsp, 0x90; pop rbx; ret; 
0x000000000002296e: mov byte ptr [rbx], 0; mov rax, qword ptr [rax + 8]; ret; 
0x000000000003cae1: mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x0000000000022755: mov byte ptr [rcx + 0x42], dl; lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000085e73: mov byte ptr [rcx + 0x79], al; ret 0xbe4f; 
0x000000000008842d: mov byte ptr [rcx - 0x72775d78], bl; mov byte ptr [rax + rcx*4 - 0x77407750], ah; mov cl, 0x88; ret; 
0x000000000004a26f: mov byte ptr [rcx - 0x77], 0x41; sbb byte ptr [rcx + rbp - 0x40], al; ret; 
0x0000000000042ba6: mov byte ptr [rcx], 0; add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000017ee6: mov byte ptr [rcx], 0; mov rdi, rsi; call 0x17f50; add rax, rbx; pop rbx; ret; 
0x00000000000168a5: mov byte ptr [rcx], 0x30; mov byte ptr [rdi + rax], 0; ret; 
0x000000000001842d: mov byte ptr [rcx], 0x89; ret 0xc189; 
0x0000000000015446: mov byte ptr [rcx], 9; ret 0xf283; 
0x000000000004cf85: mov byte ptr [rcx], bh; ret; 
0x000000000004cf84: mov byte ptr [rcx], dil; ret; 
0x000000000005449e: mov byte ptr [rdi + 0x16], 0; and eax, 0xfffffecf; or eax, 0x30; mov dword ptr [rdi + 8], eax; ret; 
0x00000000000168a8: mov byte ptr [rdi + rax], 0; ret; 
0x0000000000088427: mov byte ptr [rdi - 0x51776d78], dl; mov byte ptr [rcx - 0x72775d78], bl; mov byte ptr [rax + rcx*4 - 0x77407750], ah; mov cl, 0x88; ret; 
0x00000000000585ce: mov byte ptr [rdi - 0x5617fffd], dh; cmc; sti; inc dword ptr [rbp - 0x16318b40]; ret; 
0x0000000000026b18: mov byte ptr [rdi - 3], al; ret; 
0x0000000000050df6: mov byte ptr [rdi], dl; ret; 
0x0000000000057135: mov byte ptr [rdx + 0x40], bh; xor eax, eax; ret; 
0x0000000000057134: mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000005715f: mov byte ptr [rdx + 0x41], bh; je 0x57169; call 0x573d9; mov eax, ebx; pop rbx; ret; 
0x000000000005715e: mov byte ptr [rdx + 0x41], dil; je 0x57169; call 0x573d9; mov eax, ebx; pop rbx; ret; 
0x00000000000275b3: mov byte ptr [rdx + rax], 0; inc rax; cmp rax, 0x20; jne 0x275ac; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x0000000000016963: mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000050ddf: mov byte ptr [rdx], 0x83; inc byte ptr [rip - 0x72b7e289]; add eax, 0x4235b; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004eab2: mov byte ptr [rdx], bh; ret; 
0x000000000004eab1: mov byte ptr [rdx], dil; ret; 
0x000000000008a960: mov byte ptr [rdx], dl; pushfq; add byte ptr [rbx + 0x2e007b20], ch; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x00000000000275ca: mov byte ptr [rip + 0x26e8a0], al; ret; 
0x00000000000275c0: mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x000000000002198d: mov byte ptr [rip + 0x2766ae], 1; add rsp, 0x158; ret; 
0x0000000000018d1c: mov byte ptr [rsi + 0x1c], al; movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000018d23: mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000086685: mov byte ptr [rsi + 0x51], dh; ret; 
0x000000000003f271: mov byte ptr [rsi + 1], al; mov rax, rdi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000003f254: mov byte ptr [rsi + 1], bh; shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000003f253: mov byte ptr [rsi + 1], dil; shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000003f27b: mov byte ptr [rsi + 2], al; ret; 
0x0000000000053e77: mov byte ptr [rsi], al; mov eax, 1; ret; 
0x000000000003f25a: mov byte ptr [rsi], al; ret; 
0x0000000000037307: mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000001e1fb: mov byte ptr [rsp], 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000005308: mov ch, 0x1a; fimul word ptr [rbx]; jl 0x5375; jle 0x5308; jmp rdi; 
0x0000000000091593: mov ch, 0x1a; ret; 
0x0000000000062541: mov ch, 0x48; pop rbx; ret 0x3956; 
0x0000000000004eb3: mov ch, 0x51; jns 0x4ebe; ret; 
0x000000000005f67c: mov ch, 0x59; pop rdx; ret 0xd539; 
0x000000000007b9f2: mov ch, 0x6c; mov dh, 0x6c; mov bh, 0x6c; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x000000000007bc4e: mov ch, 0x6e; mov eax, 0xbc6eb96e; outsb dx, byte ptr [rsi]; mov esi, 0xc06ebf6e; outsb dx, byte ptr [rsi]; ret; 
0x000000000007fb68: mov ch, 0x83; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x00000000000817ee: mov ch, 0x8b; mov bh, 0x8b; ret 0xc38b; 
0x000000000008a969: mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x0000000000043229: mov ch, 0xa0; add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; mov ebp, 0x88; call rax; 
0x000000000008d0ee: mov ch, 0xbf; lahf; fsubrp st(0); ret; 
0x000000000008d8b1: mov ch, 0xdc; ja 0x8d868; mov esi, 0x60003fe7; adc byte ptr [r10 + 0x18], sil; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000006230e: mov ch, 0xe9; pop rbx; ret 0x3956; 
0x000000000005b41f: mov ch, 0xfb; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x000000000005b40a: mov ch, 0xfb; lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x00000000000591a2: mov ch, 0xff; lcall [rdx + 0x59]; pop rsi; neg eax; ret; 
0x00000000000053af: mov ch, byte ptr [rax]; fstp dword ptr [rax + rbp*8 - 0x21806f54]; ret 0x793b; 
0x000000000005a315: mov ch, cl; add dword ptr [rax], eax; add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x0000000000056f77: mov cl, 0x17; cmp eax, 1; sbb eax, eax; not eax; and eax, 0x10; ret; 
0x00000000000573cc: mov cl, 0x17; ret; 
0x00000000000573bc: mov cl, 0x17; test eax, eax; jne 0x573b6; ret; 
0x0000000000092d33: mov cl, 0x2d; ret; 
0x00000000000920c6: mov cl, 0x3f; outsb dx, byte ptr [rsi]; and byte ptr [rbp + rax*8 - 0x33], cl; mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x00000000000569e1: mov cl, 0x42; add al, 0x39; ret; 
0x0000000000092cea: mov cl, 0x42; mov ah, 0xf1; iretd; ret 0; 
0x00000000000273be: mov cl, 0x4b; sbb al, 0x39; ret 0xc875; 
0x000000000005498c: mov cl, 0x57; add al, 0xc1; call 0x1e5cc99; ret; 
0x0000000000056ec0: mov cl, 0x5a; pop rbx; pop rbp; ret; 
0x00000000000913e3: mov cl, 0x5b; call rcx; 
0x00000000000913e3: mov cl, 0x5b; call rcx; mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x000000000008fc75: mov cl, 0x68; ret; 
0x000000000008390c: mov cl, 0x75; mov al, 0x75; ret; 
0x0000000000027148: mov cl, 0x7e; sbb al, 0x39; ret 0xed75; 
0x000000000008843a: mov cl, 0x88; ret; 
0x000000000006cf8b: mov cl, 0xc6; ret; 
0x0000000000056f59: mov cl, 0xf; cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a3a: mov cl, 0xf; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x000000000003d884: mov cl, 0xff; dec dword ptr [rax + 0x63]; sti; mov edx, eax; mov eax, 3; syscall; 
0x0000000000009e48: mov cl, 3; add byte ptr [rax], al; adc al, byte ptr [rax]; or dword ptr [rax], eax; ret 0x1bf; 
0x0000000000087856: mov cl, byte ptr [rbx + 0x659f659b]; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x0000000000087855: mov cl, byte ptr gs:[rbx + 0x659f659b]; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x00000000000536eb: mov cl, dh; or rdx, r8; shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005372d: mov cl, dh; or rdx, r8; shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x00000000000536ea: mov cl, sil; or rdx, r8; shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005372c: mov cl, sil; or rdx, r8; shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000004e2d5: mov cs, word ptr [rax + 3]; adc byte ptr [r8 + 0x3b], cl; and byte ptr [r8 - 0x77], cl; ret 0x8948; 
0x000000000005a281: mov cs, word ptr [rax - 0x75]; add al, 0x24; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000004c266: mov dh, 0; ret; 
0x0000000000018761: mov dh, 0x16; mov rax, rdi; test dl, dl; jne 0x18770; ret; 
0x000000000001e7bc: mov dh, 0x1c; xor ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x00000000000703d4: mov dh, 0x1d; xchg eax, edx; pop rsi; cdq; pop rsi; ret 0x125f; 
0x000000000005712f: mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000004b9e6: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000004c8f6: mov dh, 0x48; add eax, esi; mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x0000000000087280: mov dh, 0x53; ret; 
0x0000000000079b90: mov dh, 0x55; mov eax, 0xbc55ba55; push rbp; mov edi, 0xc155c055; push rbp; ret 0xc355; 
0x0000000000087370: mov dh, 0x56; mov ah, 0x56; ret 0xbc56; 
0x000000000007a4dc: mov dh, 0x5c; mov ecx, 0xbb5cba5c; pop rsp; mov esp, 0xc05cbe5c; pop rsp; ret 0xc35c; 
0x000000000007b9f4: mov dh, 0x6c; mov bh, 0x6c; mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x000000000007416e: mov dh, 0x6e; ret 0x906e; 
0x0000000000082836: mov dh, 0x6f; ret 0xe16f; 
0x0000000000017997: mov dh, 0x7d; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000007085c: mov dh, 0x8e; ret; 
0x0000000000072450: mov dh, 0xc0; and dl, ah; ret; 
0x000000000003e146: mov dh, 0xc0; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000018ac2: mov dh, 0xc0; movzx edx, dl; sub eax, edx; ret; 
0x0000000000041d59: mov dh, 0xc0; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023424: mov dh, 0xc0; neg eax; pop rdx; ret; 
0x0000000000022e50: mov dh, 0xc0; neg eax; ret; 
0x000000000004cfb4: mov dh, 0xc0; pop rbx; neg eax; pop rbp; pop r12; ret; 
0x0000000000020f87: mov dh, 0xc0; pop rbx; ret; 
0x0000000000020db6: mov dh, 0xc0; pop rdx; ret; 
0x0000000000020d3f: mov dh, 0xc0; ret; 
0x0000000000018a85: mov dh, 0xc1; movzx edx, r8b; sub eax, edx; ret; 
0x00000000000171f1: mov dh, 0xc1; sub eax, r8d; ret; 
0x0000000000017bb1: mov dh, 0xc2; movzx edx, cl; sub eax, edx; ret; 
0x000000000004f2a7: mov dh, 0xc5; pop rbx; pop rbp; pop r12; ret; 
0x000000000003da18: mov dh, 0xc7; cmp edx, 0xbf; movzx edi, di; cmovbe eax, edi; ret; 
0x0000000000024d88: mov dh, 0xc8; lea rax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x0000000000025bbd: mov dh, 0xd0; lea rax, [rip + 0x6cf32]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6b: mov dh, 0xd0; lea rax, [rip + 0x6cf38]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255e7: mov dh, 0xd0; lea rax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000018a89: mov dh, 0xd0; sub eax, edx; ret; 
0x0000000000017bb4: mov dh, 0xd1; sub eax, edx; ret; 
0x0000000000026048: mov dh, 0xd2; and eax, edx; ret; 
0x000000000001e1b0: mov dh, 0xd2; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000051143: mov dh, 0xd2; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000018ac5: mov dh, 0xd2; sub eax, edx; ret; 
0x00000000000894d4: mov dh, 0xdd; xchg byte ptr [rbx + 0x6e], bl; mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x000000000005a096: mov dh, 0xde; sti; dec dword ptr [rax - 0x75]; je 0x5a0c2; adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000000522b: mov dh, 0xea; js 0x51b0; sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x000000000003b3ac: mov dh, 0xff; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x000000000003b959: mov dh, 2; test al, al; jne 0x3b966; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000002114f: mov dh, 4; adc byte ptr [rcx], al; ret 0x8b41; 
0x0000000000020e37: mov dh, 4; add dword ptr [rcx + 0x7e183f9], ecx; sar eax, cl; and eax, 1; ret; 
0x00000000000720d9: mov dh, byte ptr [rbx + 0x69]; ret; 
0x0000000000071441: mov dh, byte ptr [rdx + rcx*4 - 0x732b73af]; mov word ptr [rcx*4 + 0x585f4798], ds; ret; 
0x000000000007b1c1: mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x0000000000005862: mov dil, 0x39; pop rsi; test al, 0x20; ret 0x9504; 
0x000000000005b278: mov dil, 0xfb; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x0000000000004cbc: mov dl, 0x1e; ret; 
0x0000000000092af4: mov dl, 0x2d; stc; call rdi; 
0x000000000008715e: mov dl, 0x50; leave; push rax; retf 0xb350; push rax; ret 0xd650; 
0x000000000007a3b4: mov dl, 0x5b; mov bh, 0x5b; mov edx, 0xbc5bbb5b; pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x0000000000093470: mov dl, 0x66; cld; call rdx; 
0x0000000000087c9a: mov dl, 0x72; ret; 
0x000000000007430c: mov dl, 0x8c; ret; 
0x00000000000714c8: mov dl, 0x97; ret 0x5497; 
0x000000000008de09: mov dl, 0xfc; ret; 
0x0000000000036775: mov dl, 5; add dh, bl; ret 0xf1de; 
0x0000000000077d10: mov dl, byte ptr [rcx - 0x6e7d6e7f]; test byte ptr [rcx - 0x6d2f6e80], dl; ret; 
0x000000000003e0df: mov dl, byte ptr [rdi]; cmp dl, 0xff; jne 0x3e0ed; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000007913d: mov ds, word ptr [rbp - 0x426e4172]; xchg eax, ecx; ret 0x6b91; 
0x0000000000058289: mov dword ptr [r10 + 0x10], 0x1c20; ret; 
0x0000000000058284: mov dword ptr [r10 + 0x10], eax; ret; 
0x0000000000019a38: mov dword ptr [r10 + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000054ca3: mov dword ptr [r8 + 8], edx; ret; 
0x0000000000059086: mov dword ptr [r8], edx; xor eax, eax; ret; 
0x000000000004a270: mov dword ptr [r9 + 0x18], eax; sub eax, r8d; ret; 
0x0000000000021aa7: mov dword ptr [rax + 0x28], edx; pop rbx; ret; 
0x000000000005c7c7: mov dword ptr [rax + 0x58], eax; add rsp, 0x100; ret; 
0x000000000005be47: mov dword ptr [rax + 0x68], edi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000055c8d: mov dword ptr [rax + 0x78], edi; ret; 
0x0000000000055c9f: mov dword ptr [rax + 0x78], edx; ret; 
0x000000000004d6a9: mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000456e5: mov dword ptr [rax + 4], 0xffffffff; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x00000000000456ec: mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000021460: mov dword ptr [rax + 8], ebx; pop rbx; ret; 
0x0000000000049fb2: mov dword ptr [rax + 8], edi; ret; 
0x0000000000054ca4: mov dword ptr [rax + 8], edx; ret; 
0x0000000000019646: mov dword ptr [rax + rcx*2], 0x7501ea83; xor eax, eax; ret; 
0x0000000000019911: mov dword ptr [rax + rdx*4], ecx; pop rbx; pop rbp; ret; 
0x0000000000021cfd: mov dword ptr [rax + rdx*8], ebx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000005e567: mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x78]; mov rsp, rbx; jmp rax; 
0x000000000003b28f: mov dword ptr [rax], 0x1480000; ret; 
0x0000000000038aae: mov dword ptr [rax], 0x16; or eax, 0xffffffff; add rsp, 0x20; pop rbx; ret; 
0x000000000001ae42: mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e0c3: mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000002402e: mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x000000000005af50: mov dword ptr [rax], 0x19; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000057908: mov dword ptr [rax], 0x4b; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000023e21: mov dword ptr [rax], 0x50f0000; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003b074: mov dword ptr [rax], 0x54; or eax, 0xffffffff; add rsp, 0x18; ret; 
0x000000000003ab23: mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x000000000003a8c0: mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000003f3ff: mov dword ptr [rax], 0x5a; mov eax, ebx; pop rbx; ret; 
0x0000000000023194: mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000039286: mov dword ptr [rax], 0xb; mov eax, ebx; pop rbx; ret; 
0x0000000000057a49: mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000016f31: mov dword ptr [rax], 0xc; xor eax, eax; add rsp, 8; ret; 
0x00000000000456df: mov dword ptr [rax], 0xffffffff; mov dword ptr [rax + 4], 0xffffffff; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000037fb1: mov dword ptr [rax], 2; mov rax, rbx; pop rbx; ret; 
0x0000000000024186: mov dword ptr [rax], 2; or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x0000000000032bd8: mov dword ptr [rax], eax; add byte ptr [rax], al; cmp eax, 0x7fefffff; jbe 0x32be4; ret; 
0x000000000004b391: mov dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rdx; syscall; 
0x000000000004b812: mov dword ptr [rax], eax; add byte ptr [rsi + 0x88000], bh; mov rax, r13; mov rdi, r14; syscall; 
0x000000000005827d: mov dword ptr [rax], eax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x000000000004dfab: mov dword ptr [rax], ebx; call 0x4df82; mov rax, rbx; pop rbx; ret; 
0x000000000003a817: mov dword ptr [rax], ebx; mov eax, edx; pop rbx; ret; 
0x000000000004ac1a: mov dword ptr [rax], ebx; or eax, 0xffffffff; pop rbx; ret; 
0x000000000003978b: mov dword ptr [rax], ebx; or ebx, 0xffffffff; add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x000000000003925f: mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x00000000000169e5: mov dword ptr [rax], edi; mov rdi, -1; add rsp, 0x18; mov rax, rdi; ret; 
0x0000000000042549: mov dword ptr [rax], edi; ret; 
0x0000000000042535: mov dword ptr [rax], edx; ret; 
0x0000000000059087: mov dword ptr [rax], edx; xor eax, eax; ret; 
0x0000000000026ec7: mov dword ptr [rax], esi; ret; 
0x000000000006edd1: mov dword ptr [rax], esp; mov ebx, dword ptr [rcx - 0x70]; ret; 
0x000000000004e37b: mov dword ptr [rbp + 0x10], eax; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000004348b: mov dword ptr [rbp + 8], ebx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000057efe: mov dword ptr [rbp], eax; mov eax, 3; mov rdi, r12; syscall; 
0x000000000003a997: mov dword ptr [rbp], eax; mov rax, rcx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000450ab: mov dword ptr [rbp], eax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003c62c: mov dword ptr [rbp], ebx; pop r9; pop rbx; pop rbp; ret; 
0x0000000000026476: mov dword ptr [rbp], edx; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000018254: mov dword ptr [rbp], edx; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000023ab2: mov dword ptr [rbx + 0x10], ebp; pop rax; pop rbx; pop rbp; ret; 
0x000000000004bced: mov dword ptr [rbx + 0x10], edx; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x0000000000021798: mov dword ptr [rbx + 0x20], eax; mov eax, edx; pop rbx; ret; 
0x00000000000593bb: mov dword ptr [rbx + 0x28], 0; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x000000000004d4cd: mov dword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x00000000000593c3: mov dword ptr [rbx + 0x30], eax; mov rax, rbx; pop rbx; ret; 
0x0000000000021752: mov dword ptr [rbx + 0x38], 2; lea rdi, [rip + 0x276974]; mov eax, 0xda; syscall; 
0x000000000004b44f: mov dword ptr [rbx + 0x50], eax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000005c593: mov dword ptr [rbx + 0x70], eax; add rsp, 0x110; pop rbx; ret; 
0x0000000000055a25: mov dword ptr [rbx + 0x78], eax; call rdx; 
0x000000000008a315: mov dword ptr [rbx + 0xa], 0xe17c250b; ret; 
0x0000000000044b32: mov dword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004d508: mov dword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000059240: mov dword ptr [rbx + 8], eax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000054b7f: mov dword ptr [rbx + 8], eax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x00000000000567ce: mov dword ptr [rbx + 8], eax; lock or dword ptr [rsp], 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x0000000000023246: mov dword ptr [rbx + 8], eax; xor edx, edx; add rsp, 0xd0; mov eax, edx; pop rbx; ret; 
0x000000000004352c: mov dword ptr [rbx + 8], ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005710a: mov dword ptr [rbx + 8], edx; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000004bcf1: mov dword ptr [rbx + 8], edx; pop rbx; ret; 
0x00000000000434d9: mov dword ptr [rbx + 8], edx; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003582f: mov dword ptr [rbx - 0x183e8039], 0x247c8917; cld; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000003a527: mov dword ptr [rbx - 0x7ab70038], 0xe80574ff; jo 0x3a543; add al, byte ptr [rax]; add rsp, 0x118; ret; 
0x0000000000039da2: mov dword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x0000000000049e73: mov dword ptr [rbx], 0; pop rbx; ret; 
0x000000000001a883: mov dword ptr [rbx], 0x3d834800; ret 0x27d4; 
0x000000000005a13f: mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000057d1b: mov dword ptr [rbx], eax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000004aea0: mov dword ptr [rbx], eax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x0000000000022417: mov dword ptr [rbx], eax; xor eax, eax; pop rbx; ret; 
0x000000000004c34a: mov dword ptr [rbx], eax; xor edx, edx; mov eax, edx; pop rbx; ret; 
0x0000000000057acb: mov dword ptr [rbx], ebp; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003a9ed: mov dword ptr [rbx], edx; add rsp, 0x10; pop rbx; ret; 
0x0000000000057107: mov dword ptr [rbx], esi; mov qword ptr [rbx + 8], rdx; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000004e0e0: mov dword ptr [rcx + 0x10], eax; add rsp, 0x28; ret; 
0x000000000004a271: mov dword ptr [rcx + 0x18], eax; sub eax, r8d; ret; 
0x0000000000056998: mov dword ptr [rcx + 0x90], 0xffffffe4; lea rdi, [r9 + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000026a47: mov dword ptr [rcx + 0xa8], edi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000003da19: mov dword ptr [rcx + 0xbffa], 0xffb70f00; cmovbe eax, edi; ret; 
0x000000000001983e: mov dword ptr [rcx + 0xf], 0x845c093; ret 0x840f; 
0x000000000001e334: mov dword ptr [rcx - 4], ebx; ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x000000000004c8fb: mov dword ptr [rcx], eax; add rsp, 0x28; ret; 
0x00000000000434a3: mov dword ptr [rcx], edx; std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000004bf42: mov dword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000054c2e: mov dword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x0000000000055c89: mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000054c0e: mov dword ptr [rdi + 0x10], esi; ret; 
0x0000000000054b95: mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bc0: mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000001fc81: mov dword ptr [rdi + 0x20], 0x1f83d9ab; mov dword ptr [rdi + 0x24], 0x5be0cd19; ret; 
0x000000000004bd37: mov dword ptr [rdi + 0x20], eax; xor eax, eax; ret; 
0x0000000000054bce: mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x000000000001fc88: mov dword ptr [rdi + 0x24], 0x5be0cd19; ret; 
0x0000000000054bc8: mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000004bf3a: mov dword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004bd2f: mov dword ptr [rdi + 0x28], eax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000002051c: mov dword ptr [rdi + 0x30], eax; movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004a5d2: mov dword ptr [rdi + 0x30], edx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004bd2b: mov dword ptr [rdi + 0x38], eax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000002052a: mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004a5da: mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x0000000000020538: mov dword ptr [rdi + 0x40], eax; ret; 
0x000000000004d751: mov dword ptr [rdi + 0x80], eax; ret; 
0x000000000005ba4d: mov dword ptr [rdi + 0x88], edx; pop rbp; ret; 
0x00000000000558f4: mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000004ed32: mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x00000000000168e3: mov dword ptr [rdi + 0xb8], edx; ret; 
0x0000000000044b46: mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000044b58: mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000004d6a0: mov dword ptr [rdi + 0xd8], eax; je 0x4d6af; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000042402: mov dword ptr [rdi + 4], edx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000019b96: mov dword ptr [rdi + 4], esi; je 0x19ba0; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000436a4: mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x0000000000049f8d: mov dword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004bf4a: mov dword ptr [rdi + 8], 0; ret; 
0x0000000000043625: mov dword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x0000000000053e72: mov dword ptr [rdi + 8], eax; mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x0000000000053739: mov dword ptr [rdi + 8], eax; ret; 
0x000000000005741c: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x00000000000536f4: mov dword ptr [rdi + 8], edx; mov qword ptr [rdi], rax; ret; 
0x000000000004c262: mov dword ptr [rdi + 8], edx; movzx eax, byte ptr [rax]; ret; 
0x00000000000197c3: mov dword ptr [rdi + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000019b9b: mov dword ptr [rdi + 8], esi; ret; 
0x0000000000054bb0: mov dword ptr [rdi + 8], esi; xor eax, eax; ret; 
0x000000000001e290: mov dword ptr [rdi + rdi*8], 0x89c80fce; cld; jne 0x1e28c; ret; 
0x0000000000054200: mov dword ptr [rdi + rdx - 0x27], eax; mov rax, rdi; ret; 
0x00000000000541fb: mov dword ptr [rdi + rdx - 0x2f], eax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000541f6: mov dword ptr [rdi + rdx - 0x37], eax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000541f1: mov dword ptr [rdi + rdx - 0x3f], eax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000005aa33: mov dword ptr [rdi - 0x3ca50005], edi; mov r8, rdi; mov eax, 0x6c; syscall; 
0x000000000001e296: mov dword ptr [rdi - 4], eax; jne 0x1e28c; ret; 
0x0000000000049f95: mov dword ptr [rdi], 0; ret; 
0x000000000004aa48: mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000046341: mov dword ptr [rdi], 0xffffffff; ret; 
0x00000000000408d6: mov dword ptr [rdi], eax; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000573d1: mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x000000000004bd10: mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x0000000000033549: mov dword ptr [rdi], eax; ret; 
0x000000000004aa10: mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000053736: mov dword ptr [rdi], edx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000002eb05: mov dword ptr [rdi], edx; mov word ptr [rsp + 8], ax; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000050dfa: mov dword ptr [rdi], edx; ret; 
0x0000000000054c09: mov dword ptr [rdi], edx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000035139: mov dword ptr [rdi], esi; je 0x35148; movsd xmm1, qword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x00000000000352e0: mov dword ptr [rdi], esi; je 0x352ef; movss xmm1, dword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x0000000000026ed2: mov dword ptr [rdi], esi; ret; 
0x000000000004369f: mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000005828a: mov dword ptr [rdx + 0x10], 0x1c20; ret; 
0x0000000000058285: mov dword ptr [rdx + 0x10], eax; ret; 
0x0000000000055370: mov dword ptr [rdx + 0x10], ecx; jns 0x5537c; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000056a88: mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x000000000004cf81: mov dword ptr [rdx + 0x28], esi; mov byte ptr [rcx], dil; ret; 
0x0000000000080624: mov dword ptr [rdx + 0x59d4840e], 0x4f2a4f1f; pop rsp; lodsb al, byte ptr [rsi]; jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x000000000004dfa7: mov dword ptr [rdx + 0x68], ebx; mov qword ptr [rax], rbx; call 0x4df82; mov rax, rbx; pop rbx; ret; 
0x00000000000550d4: mov dword ptr [rdx + 0xa8], eax; ret; 
0x000000000004d678: mov dword ptr [rdx + 0xc0], eax; ret; 
0x000000000004d667: mov dword ptr [rdx + 0xd8], eax; ret; 
0x0000000000056e32: mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x000000000004f5d5: mov dword ptr [rdx + 8], ecx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5ee: mov dword ptr [rdx + 8], ecx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a9: mov dword ptr [rdx + 8], ecx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000019a39: mov dword ptr [rdx + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000026ec3: mov dword ptr [rdx + 8], esi; mov qword ptr [rax], rsi; ret; 
0x00000000000226f5: mov dword ptr [rdx - 1], 0x50c35aff; mov eax, 0x43; syscall; 
0x0000000000043d27: mov dword ptr [rdx], 0; xor eax, eax; ret; 
0x000000000007c34a: mov dword ptr [rdx], 0x300300a8; add eax, 0x5e201430; call qword ptr [rsi]; 
0x0000000000055376: mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x0000000000043d69: mov dword ptr [rdx], 1; movsx eax, byte ptr [rdi]; ret; 
0x0000000000049fd0: mov dword ptr [rdx], eax; ret; 
0x0000000000054af1: mov dword ptr [rdx], eax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x00000000000566c8: mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000057360: mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000054943: mov dword ptr [rdx], esi; ret; 
0x000000000005da23: mov dword ptr [rip + 0x23a4bb], 0; pop rax; ret; 
0x000000000005c58c: mov dword ptr [rip + 0x23b9a6], ebx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005be4b: mov dword ptr [rip + 0x23c0ef], edi; ret; 
0x000000000005ba94: mov dword ptr [rip + 0x23c5be], eax; ret; 
0x0000000000056c90: mov dword ptr [rip + 0x23e816], eax; lock or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000057bce: mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000055959: mov dword ptr [rip + 0x242679], eax; ret; 
0x000000000004eae4: mov dword ptr [rip + 0x24685e], ecx; mov byte ptr [rdx], dil; ret; 
0x000000000004eaab: mov dword ptr [rip + 0x246897], ecx; mov byte ptr [rdx], dil; ret; 
0x000000000004dc0c: mov dword ptr [rip + 0x247616], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbe1: mov dword ptr [rip + 0x247641], edx; movzx eax, byte ptr [rax]; ret; 
0x00000000000424cd: mov dword ptr [rip + 0x255985], eax; shr rax, 0x21; ret; 
0x00000000000424b0: mov dword ptr [rip + 0x2559a2], eax; ret; 
0x0000000000041930: mov dword ptr [rip + 0x25650e], 0; ret; 
0x0000000000041923: mov dword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000040f3d: mov dword ptr [rip + 0x256ee9], 0; ret; 
0x0000000000040f30: mov dword ptr [rip + 0x256ef6], 0; pop rdx; ret; 
0x000000000003f61a: mov dword ptr [rip + 0x258994], 0; ret; 
0x000000000003f60f: mov dword ptr [rip + 0x25899f], 0; ret; 
0x000000000002783a: mov dword ptr [rip + 0x26e638], eax; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000027662: mov dword ptr [rip + 0x270a74], 0; ret; 
0x0000000000023049: mov dword ptr [rip + 0x274d51], eax; pop rax; ret; 
0x0000000000022ff6: mov dword ptr [rip + 0x274da0], 0; ret; 
0x0000000000022fe9: mov dword ptr [rip + 0x274dad], 0; pop rdx; ret; 
0x0000000000021fb1: mov dword ptr [rip + 0x275fc1], eax; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000021d01: mov dword ptr [rip + 0x276069], ecx; pop rbx; ret; 
0x0000000000021cf2: mov dword ptr [rip + 0x276080], eax; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000018913: mov dword ptr [rip + 0x27f55f], edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000561fd: mov dword ptr [rsi + 0x10], eax; mov rax, qword ptr [rdx + 0x60]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000039720: mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000004d6b0: mov dword ptr [rsi + 0xc0], edi; ret; 
0x00000000000580e4: mov dword ptr [rsi + 4], edx; pop rbx; pop rbp; ret; 
0x0000000000026ebc: mov dword ptr [rsi + 8], eax; mov qword ptr [rsi], rdx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x0000000000026ecb: mov dword ptr [rsi + 8], esi; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x0000000000076e9c: mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x0000000000054ad3: mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x000000000002a1ab: mov dword ptr [rsi], eax; add bl, dh; addps xmm0, xmmword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000057132: mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000005b7f0: mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x0000000000043635: mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054af6: mov dword ptr [rsi], ecx; ret; 
0x0000000000057e48: mov dword ptr [rsi], ecx; syscall; 
0x0000000000049fa7: mov dword ptr [rsi], edi; mov rax, qword ptr [rdi]; test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x0000000000070b6c: mov dword ptr [rsi], edi; test al, 0x51; ret; 
0x00000000000580e0: mov dword ptr [rsi], edi; xor eax, eax; mov dword ptr [rsi + 4], edx; pop rbx; pop rbp; ret; 
0x0000000000026ec0: mov dword ptr [rsi], edx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x000000000004bf7b: mov dword ptr [rsi], edx; ret; 
0x0000000000026ecf: mov dword ptr [rsi], esi; mov qword ptr [rdi], rsi; ret; 
0x00000000000333a8: mov dword ptr [rsp + 0x10], eax; fild dword ptr [rsp + 0x10]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x00000000000389de: mov dword ptr [rsp + 0x10], eax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x000000000001b71d: mov dword ptr [rsp + 0x10], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000004370b: mov dword ptr [rsp + 0x110], eax; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x0000000000043156: mov dword ptr [rsp + 0x14], eax; and eax, 0xfffffffe; mov rsi, r14; movsxd rdx, eax; mov rax, r12; syscall; 
0x0000000000043077: mov dword ptr [rsp + 0x14], eax; jne 0x43244; mov eax, 0x66; syscall; 
0x00000000000430f2: mov dword ptr [rsp + 0x14], eax; js 0x43244; mov rax, r9; syscall; 
0x0000000000022917: mov dword ptr [rsp + 0x18], eax; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c0e: mov dword ptr [rsp + 0x18], eax; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022ca2: mov dword ptr [rsp + 0x18], eax; call 0x22b0e; add rsp, 0xd8; ret; 
0x000000000002688d: mov dword ptr [rsp + 0x18], eax; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cdc: mov dword ptr [rsp + 0x18], eax; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000005b58b: mov dword ptr [rsp + 0x18], eax; call 0x4a796; imul eax, dword ptr [rsp + 0x30], 0xf4240; add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x0000000000022e11: mov dword ptr [rsp + 0x18], eax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004bdf1: mov dword ptr [rsp + 0x18], eax; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea7: mov dword ptr [rsp + 0x18], eax; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce86: mov dword ptr [rsp + 0x18], eax; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d47d: mov dword ptr [rsp + 0x18], eax; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d86a: mov dword ptr [rsp + 0x18], eax; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1f: mov dword ptr [rsp + 0x18], eax; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca6: mov dword ptr [rsp + 0x18], eax; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edbb: mov dword ptr [rsp + 0x18], eax; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee4a: mov dword ptr [rsp + 0x18], eax; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed9: mov dword ptr [rsp + 0x18], eax; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef63: mov dword ptr [rsp + 0x18], eax; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004eff2: mov dword ptr [rsp + 0x18], eax; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c5: mov dword ptr [rsp + 0x18], eax; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053359: mov dword ptr [rsp + 0x18], eax; call 0x53230; add rsp, 0xd8; ret; 
0x000000000005a41a: mov dword ptr [rsp + 0x18], eax; lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x00000000000389e8: mov dword ptr [rsp + 0x18], eax; mov eax, 0x10; syscall; 
0x0000000000023983: mov dword ptr [rsp + 0x18], eax; mov eax, 0x65; syscall; 
0x000000000001b2e6: mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x0000000000022654: mov dword ptr [rsp + 0x18], eax; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x42; syscall; 
0x000000000004ac7b: mov dword ptr [rsp + 0x20], eax; movsxd rsi, ebx; mov eax, 0x81; mov rdx, r12; syscall; 
0x0000000000052e25: mov dword ptr [rsp + 0x28], eax; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000005a48c: mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000003a370: mov dword ptr [rsp + 0x38], eax; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000055d68: mov dword ptr [rsp + 0x40], eax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x0000000000052f99: mov dword ptr [rsp + 0x48], eax; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000001adcf: mov dword ptr [rsp + 0x58], eax; mov eax, 0x81; syscall; 
0x000000000005320d: mov dword ptr [rsp + 0x60], eax; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000003a6c8: mov dword ptr [rsp + 0x70], eax; mov eax, 0xf4; syscall; 
0x00000000000392a3: mov dword ptr [rsp + 0xc], 0; call 0x389c1; add rsp, 0x18; ret; 
0x0000000000021379: mov dword ptr [rsp + 0xc], eax; call 0x14680; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000002ea92: mov dword ptr [rsp + 0xc], edx; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000005b45e: mov dword ptr [rsp + 0xc], esi; mov esi, 0x5410; call 0x389c1; add rsp, 0x18; ret; 
0x00000000000427a4: mov dword ptr [rsp + 0xe], edi; lea rdi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x0000000000021f3a: mov dword ptr [rsp + 8], 0x20; lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x0000000000023b52: mov dword ptr [rsp + 8], eax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000005b5f1: mov dword ptr [rsp + 8], eax; call 0x594ec; add rsp, 0x18; ret; 
0x000000000003780f: mov dword ptr [rsp + 8], eax; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002eb08: mov dword ptr [rsp + 8], eax; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000001caed: mov dword ptr [rsp + 8], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000002ea2c: mov dword ptr [rsp + 8], eax; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000042435: mov dword ptr [rsp + 8], eax; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002d19d: mov dword ptr [rsp + 8], eax; movsd xmm1, qword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000004a828: mov dword ptr [rsp + 8], eax; xor edx, edx; mov eax, 0xe; syscall; 
0x0000000000057e83: mov dword ptr [rsp + 8], ebx; syscall; 
0x0000000000057e83: mov dword ptr [rsp + 8], ebx; syscall; ret; 
0x000000000005ac87: mov dword ptr [rsp + 8], edx; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000003af60: mov dword ptr [rsp + 8], esi; lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b370: mov dword ptr [rsp + 8], esi; lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x00000000000358c3: mov dword ptr [rsp - 0x10], edi; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000050e7a: mov dword ptr [rsp - 0x10], edx; mov rax, qword ptr [rax]; ret; 
0x00000000000370e4: mov dword ptr [rsp - 0x14], eax; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002ba0a: mov dword ptr [rsp - 0x20], eax; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000019c48: mov dword ptr [rsp - 0x20], eax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000001cb99: mov dword ptr [rsp - 0x28], eax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000002b9db: mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e9b0: mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x00000000000335ee: mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000005aa94: mov dword ptr [rsp - 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x0000000000035836: mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002b9bb: mov dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002e87f: mov dword ptr [rsp - 8], eax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000033582: mov dword ptr [rsp - 8], eax; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x00000000000357c3: mov dword ptr [rsp - 8], eax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000023bfa: mov dword ptr [rsp], eax; call 0x23b19; add rsp, 0x18; ret; 
0x000000000005b5e7: mov dword ptr [rsp], eax; imul eax, edx, 0x3e8; mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x000000000001bd9f: mov dword ptr [rsp], ebx; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b652: mov dword ptr [rsp], ebx; movq xmm0, qword ptr [rsp]; add rsp, 0x30; pop rbx; ret; 
0x000000000003af51: mov dword ptr [rsp], ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023b4e: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000001baf1: mov dword ptr [rsp], edx; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000003a3e6: mov dword ptr [rsp], esi; call 0x57d91; mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000007b1b9: mov dx, 0xbb66; mov sp, 0xbd66; mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x000000000005a95e: mov eax, 0; cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x0000000000022ec8: mov eax, 0x1000; ret; 
0x000000000004b01f: mov eax, 0x101; syscall; 
0x000000000004b318: mov eax, 0x102; syscall; 
0x000000000004b35d: mov eax, 0x103; syscall; 
0x000000000005acd8: mov eax, 0x104; syscall; 
0x000000000004b5c5: mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000004b13b: mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x000000000005b5be: mov eax, 0x107; syscall; 
0x000000000005b5be: mov eax, 0x107; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005b26d: mov eax, 0x108; syscall; 
0x000000000005af92: mov eax, 0x109; syscall; 
0x0000000000056402: mov eax, 0x10; ret; 
0x00000000000389ec: mov eax, 0x10; syscall; 
0x000000000005b413: mov eax, 0x10a; syscall; 
0x000000000005b20b: mov eax, 0x10b; syscall; 
0x000000000004afbf: mov eax, 0x10c; syscall; 
0x000000000005ab01: mov eax, 0x10d; mov rsi, r12; syscall; 
0x000000000005aa88: mov eax, 0x10d; syscall; 
0x0000000000023cd1: mov eax, 0x110; syscall; 
0x0000000000055b8f: mov eax, 0x111; syscall; 
0x0000000000056ce3: mov eax, 0x112; syscall; 
0x0000000000023bd5: mov eax, 0x113; syscall; 
0x0000000000023c76: mov eax, 0x114; syscall; 
0x0000000000023c35: mov eax, 0x115; syscall; 
0x0000000000023c35: mov eax, 0x115; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023d0a: mov eax, 0x116; syscall; 
0x000000000004b537: mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x00000000000233b1: mov eax, 0x119; syscall; 
0x0000000000023b7d: mov eax, 0x11a; syscall; 
0x0000000000023c8c: mov eax, 0x11b; syscall; 
0x00000000000233fe: mov eax, 0x11c; syscall; 
0x00000000000223c5: mov eax, 0x11d; mov rdx, r8; syscall; 
0x00000000000223c5: mov eax, 0x11d; mov rdx, r8; syscall; neg eax; ret; 
0x000000000002345d: mov eax, 0x11d; syscall; 
0x000000000002345d: mov eax, 0x11d; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023ca7: mov eax, 0x11e; syscall; 
0x0000000000023ca7: mov eax, 0x11e; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023cbc: mov eax, 0x11f; syscall; 
0x0000000000023cbc: mov eax, 0x11f; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023b6c: mov eax, 0x121; syscall; 
0x00000000000233ec: mov eax, 0x122; syscall; 
0x0000000000023349: mov eax, 0x123; push rcx; mov rdx, rdi; syscall; 
0x000000000005b04c: mov eax, 0x125; syscall; 
0x0000000000023515: mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x0000000000023473: mov eax, 0x12c; syscall; 
0x000000000002348d: mov eax, 0x12d; syscall; 
0x000000000002348d: mov eax, 0x12d; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000038834: mov eax, 0x12e; mov rsi, r12; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x0000000000039731: mov eax, 0x12e; sub rsp, 0x20; xor edi, edi; syscall; 
0x0000000000023900: mov eax, 0x12e; syscall; 
0x0000000000023900: mov eax, 0x12e; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000237b3: mov eax, 0x12f; syscall; 
0x00000000000237b3: mov eax, 0x12f; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000237cb: mov eax, 0x130; syscall; 
0x00000000000232ce: mov eax, 0x131; syscall; 
0x0000000000023c4a: mov eax, 0x132; syscall; 
0x0000000000023b08: mov eax, 0x134; syscall; 
0x0000000000049c4d: mov eax, 0x135; mov rdi, rbx; mov rdx, rsi; syscall; 
0x000000000002392c: mov eax, 0x136; syscall; 
0x0000000000023917: mov eax, 0x137; syscall; 
0x000000000004bae9: mov eax, 0x13; syscall; 
0x0000000000023717: mov eax, 0x13f; syscall; 
0x0000000000023717: mov eax, 0x13f; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000053e6c: mov eax, 0x1418d48; mov qword ptr [rdi + 8], rax; mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x0000000000042da0: mov eax, 0x142; mov rdx, rbp; syscall; 
0x00000000000235cd: mov eax, 0x144; sub rsp, 0x128; syscall; 
0x000000000002370c: mov eax, 0x144; syscall; 
0x000000000002370c: mov eax, 0x144; syscall; ret; 
0x0000000000023734: mov eax, 0x145; syscall; 
0x0000000000023734: mov eax, 0x145; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023337: mov eax, 0x146; syscall; 
0x000000000005a8a5: mov eax, 0x15; syscall; 
0x000000000005a8a5: mov eax, 0x15; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000054ba5: mov eax, 0x16; cmp rsi, rdx; ja 0x54bb5; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x0000000000016eb4: mov eax, 0x16; ja 0x16ec0; ret; 
0x0000000000054b8e: mov eax, 0x16; ja 0x54b9a; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000054bb9: mov eax, 0x16; ja 0x54bc5; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005700f: mov eax, 0x16; ja 0x5701a; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000057371: mov eax, 0x16; ja 0x5739e; mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x00000000000558c4: mov eax, 0x16; ret; 
0x00000000000570d7: mov eax, 0x16; sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b026: mov eax, 0x16; syscall; 
0x000000000005b026: mov eax, 0x16; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000043692: mov eax, 0x16; test esi, 0xffffff00; jne 0x436a3; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000049cc4: mov eax, 0x18; syscall; 
0x0000000000057d4d: mov eax, 0x18; syscall; ret; 
0x000000000003a377: mov eax, 0x19; syscall; 
0x000000000005aacf: mov eax, 0x1b7; syscall; 
0x000000000003a1d9: mov eax, 0x1b; syscall; 
0x000000000003a1c7: mov eax, 0x1c; syscall; 
0x000000000003a415: mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000022722: mov eax, 0x1d; syscall; 
0x0000000000022722: mov eax, 0x1d; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000226d4: mov eax, 0x1e; syscall; 
0x00000000000226ea: mov eax, 0x1f; syscall; 
0x00000000000226ea: mov eax, 0x1f; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x00000000000430e9: mov eax, 0x20; syscall; 
0x000000000005a99d: mov eax, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x000000000004acf9: mov eax, 0x23; ret; 
0x000000000004a630: mov eax, 0x24; syscall; 
0x0000000000043677: mov eax, 0x26; ret; 
0x000000000004a79a: mov eax, 0x26; syscall; 
0x000000000004a79a: mov eax, 0x26; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023a9c: mov eax, 0x27; syscall; 
0x000000000005aeed: mov eax, 0x27; syscall; ret; 
0x0000000000023a37: mov eax, 0x28; syscall; 
0x0000000000040753: mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000040727: mov eax, 0x29; syscall; 
0x0000000000024894: mov eax, 0x2ebe; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000406d7: mov eax, 0x30; syscall; 
0x000000000001e272: mov eax, 0x31069; add rsp, 0x170; pop rbx; ret; 
0x000000000003b4b9: mov eax, 0x31; syscall; 
0x000000000003df4d: mov eax, 0x32; syscall; 
0x000000000003d494: mov eax, 0x33; syscall; 
0x000000000003d12e: mov eax, 0x34; syscall; 
0x00000000000407ca: mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000004081c: mov eax, 0x35; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x00000000000406b4: mov eax, 0x36; syscall; 
0x00000000000406b4: mov eax, 0x36; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000003d4b5: mov eax, 0x37; syscall; 
0x000000000003d4b5: mov eax, 0x37; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x00000000000427df: mov eax, 0x39; syscall; 
0x0000000000043971: mov eax, 0x3a; syscall; 
0x0000000000042bc0: mov eax, 0x3b; syscall; 
0x0000000000057e20: mov eax, 0x3c; syscall; 
0x000000000002d6fc: mov eax, 0x3d000000; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000023d33: mov eax, 0x3d; syscall; 
0x0000000000023d33: mov eax, 0x3d; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023aab: mov eax, 0x3e; syscall; 
0x0000000000039cee: mov eax, 0x3f; syscall; 
0x000000000004acf3: mov eax, 0x40; ret; 
0x0000000000022690: mov eax, 0x40; syscall; 
0x0000000000022690: mov eax, 0x40; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000226a5: mov eax, 0x41; syscall; 
0x00000000000226a5: mov eax, 0x41; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000022661: mov eax, 0x42; syscall; 
0x0000000000022661: mov eax, 0x42; syscall; movsxd rdi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x00000000000226fc: mov eax, 0x43; syscall; 
0x00000000000226fc: mov eax, 0x43; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000225a7: mov eax, 0x44; syscall; 
0x00000000000225a7: mov eax, 0x44; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000002258f: mov eax, 0x47; syscall; 
0x000000000002258f: mov eax, 0x47; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000005aa25: mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022298: mov eax, 0x48; mov rdx, r10; syscall; 
0x00000000000221e9: mov eax, 0x48; mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000004cb25: mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000004b83e: mov eax, 0x48; mov rsi, r13; syscall; 
0x0000000000040844: mov eax, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000004086d: mov eax, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004b6a8: mov eax, 0x48; movsxd rdi, ebp; mov esi, 3; mov rax, r8; syscall; 
0x000000000002232a: mov eax, 0x48; syscall; 
0x000000000002232a: mov eax, 0x48; syscall; call 0x169c0; add rsp, 0x50; pop rbx; ret; 
0x0000000000023bbb: mov eax, 0x48; syscall; call 0x169c0; pop rdx; ret; 
0x000000000002488a: mov eax, 0x48d4a00; cmp ecx, dword ptr [rax + 0xf]; mov r8d, 0x2ebe; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x000000000002bbea: mov eax, 0x48ffffde; add esp, 0x18; ret; 
0x00000000000234a5: mov eax, 0x49; syscall; 
0x00000000000234a5: mov eax, 0x49; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005b472: mov eax, 0x4c; syscall; 
0x000000000005b472: mov eax, 0x4c; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005ad41: mov eax, 0x4d; syscall; 
0x000000000005ad41: mov eax, 0x4d; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005ad99: mov eax, 0x4f; mov rdi, rbx; mov rsi, rdx; syscall; 
0x000000000005ac4a: mov eax, 0x50; mov rdi, rbx; syscall; 
0x000000000005a90f: mov eax, 0x50; syscall; 
0x000000000005a90f: mov eax, 0x50; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005ac12: mov eax, 0x51; sub rsp, 0x20; syscall; 
0x00000000000431bf: mov eax, 0x51; syscall; 
0x000000000004ebd7: mov eax, 0x52; syscall; 
0x000000000004ebd7: mov eax, 0x52; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004b301: mov eax, 0x53; syscall; 
0x000000000004b301: mov eax, 0x53; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004ebc5: mov eax, 0x54; syscall; 
0x000000000005b27f: mov eax, 0x54; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004ebc5: mov eax, 0x54; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000005af74: mov eax, 0x56; syscall; 
0x000000000005af74: mov eax, 0x56; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000350ee: mov eax, 0x570f0005; retf 0x3941; sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x000000000004f165: mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000004ebb8: mov eax, 0x57; push rcx; syscall; 
0x000000000005b5a6: mov eax, 0x57; syscall; 
0x000000000005b5a6: mov eax, 0x57; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005b3fe: mov eax, 0x58; syscall; 
0x000000000005b3fe: mov eax, 0x58; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000092df2: mov eax, 0x59567e3a; sub eax, 0x31ad6446; ret 0x9dff; 
0x000000000005b1c7: mov eax, 0x59; syscall; 
0x000000000004af86: mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004af33: mov eax, 0x5a; syscall; 
0x000000000004af33: mov eax, 0x5a; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004af83: mov eax, 0x5ab8fffc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x0000000000039704: mov eax, 0x5afffdd2; ret; 
0x0000000000023e04: mov eax, 0x5affff2b; ret; 
0x000000000004f221: mov eax, 0x5b000000; pop rbp; pop r12; pop r13; ret; 
0x000000000005ac03: mov eax, 0x5b000004; pop rbp; pop r12; pop r13; ret; 
0x0000000000043d15: mov eax, 0x5b; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004af4b: mov eax, 0x5b; mov rsi, rbx; sub rsp, 0x28; syscall; 
0x000000000005a925: mov eax, 0x5c; syscall; 
0x000000000005a925: mov eax, 0x5c; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005ac6b: mov eax, 0x5d; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x000000000005af62: mov eax, 0x5e; syscall; 
0x000000000005af62: mov eax, 0x5e; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000054be1: mov eax, 0x5f; cmovne eax, edx; ret; 
0x0000000000056c4f: mov eax, 0x5f; je 0x56ca3; test esi, esi; je 0x56c60; mov eax, 0x16; ret; 
0x000000000004b4f0: mov eax, 0x5f; syscall; 
0x000000000004b4f0: mov eax, 0x5f; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000059134: mov eax, 0x60; mov rdi, rbx; syscall; 
0x0000000000038881: mov eax, 0x61; mov rdi, r12; syscall; 
0x00000000000388d2: mov eax, 0x62; syscall; 
0x00000000000388d2: mov eax, 0x62; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023c5c: mov eax, 0x63; syscall; 
0x000000000005a5b9: mov eax, 0x64; syscall; 
0x000000000005a5b9: mov eax, 0x64; syscall; ret; 
0x0000000000023987: mov eax, 0x65; syscall; 
0x0000000000043081: mov eax, 0x66; syscall; 
0x000000000005af12: mov eax, 0x66; syscall; ret; 
0x00000000000235a4: mov eax, 0x67; syscall; 
0x00000000000235a4: mov eax, 0x67; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000043064: mov eax, 0x68; syscall; 
0x000000000005adf7: mov eax, 0x68; syscall; ret; 
0x000000000004308b: mov eax, 0x69; syscall; 
0x000000000004306e: mov eax, 0x6a; syscall; 
0x000000000005aa64: mov eax, 0x6b; syscall; 
0x000000000005adef: mov eax, 0x6b; syscall; ret; 
0x000000000005aa3c: mov eax, 0x6c; syscall; 
0x000000000005ade7: mov eax, 0x6c; syscall; ret; 
0x000000000004304c: mov eax, 0x6d; syscall; 
0x000000000005b2c9: mov eax, 0x6d; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005aef5: mov eax, 0x6e; syscall; 
0x000000000005aef5: mov eax, 0x6e; syscall; ret; 
0x0000000000043032: mov eax, 0x70; syscall; 
0x000000000005aa6e: mov eax, 0x71; syscall; 
0x000000000005aa4a: mov eax, 0x72; syscall; 
0x000000000005ae03: mov eax, 0x73; syscall; 
0x0000000000023a79: mov eax, 0x74; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000038814: mov eax, 0x76; syscall; 
0x0000000000038802: mov eax, 0x78; syscall; 
0x000000000005aed2: mov eax, 0x79; syscall; 
0x000000000005aee5: mov eax, 0x79; syscall; ret; 
0x0000000000023a5d: mov eax, 0x7a; syscall; 
0x0000000000023a49: mov eax, 0x7b; syscall; 
0x000000000005af01: mov eax, 0x7c; syscall; 
0x0000000000023297: mov eax, 0x7d; syscall; 
0x0000000000023285: mov eax, 0x7e; syscall; 
0x000000000004abf6: mov eax, 0x7f; syscall; 
0x00000000000234be: mov eax, 0x7fffffff; cmova rdx, rax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x0000000000022e38: mov eax, 0x7fffffff; cmovbe rax, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000002f001: mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef34: mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000004ac82: mov eax, 0x81; mov rdx, r12; syscall; 
0x000000000001add3: mov eax, 0x81; syscall; 
0x0000000000056a8f: mov eax, 0x82; pop rbx; ret; 
0x000000000004a9f8: mov eax, 0x83; syscall; 
0x000000000004a9f8: mov eax, 0x83; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004b343: mov eax, 0x85; syscall; 
0x00000000000237dd: mov eax, 0x87; syscall; 
0x000000000005a441: mov eax, 0x894cffff; out 0x89, eax; ret; 
0x000000000004b390: mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3b6: mov eax, 0x8a; syscall; 
0x00000000000387e1: mov eax, 0x8c; syscall; 
0x00000000000396f9: mov eax, 0x8d; syscall; 
0x0000000000057318: mov eax, 0x8e; syscall; 
0x00000000000562d3: mov eax, 0x8f; mov rsi, r14; syscall; 
0x00000000000560a6: mov eax, 0x90; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x00000000000572aa: mov eax, 0x90; syscall; 
0x00000000000562e8: mov eax, 0x91; syscall; 
0x0000000000049ba0: mov eax, 0x92; syscall; 
0x0000000000049ba0: mov eax, 0x92; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000049bb5: mov eax, 0x93; syscall; 
0x0000000000049bb5: mov eax, 0x93; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000049c94: mov eax, 0x94; syscall; 
0x0000000000049c94: mov eax, 0x94; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003a1eb: mov eax, 0x95; syscall; 
0x000000000003a1eb: mov eax, 0x95; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003a3b9: mov eax, 0x96; syscall; 
0x000000000003a3b9: mov eax, 0x96; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003a200: mov eax, 0x97; syscall; 
0x000000000003a200: mov eax, 0x97; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003a3cb: mov eax, 0x98; syscall; 
0x000000000003a3cb: mov eax, 0x98; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023cf3: mov eax, 0x99; syscall; 
0x0000000000023cf3: mov eax, 0x99; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000237ef: mov eax, 0x9b; syscall; 
0x00000000000237ef: mov eax, 0x9b; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023264: mov eax, 0x9e; syscall; 
0x0000000000023264: mov eax, 0x9e; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000057e0e: mov eax, 0x9e; syscall; ret; 
0x00000000000232bf: mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000039717: mov eax, 0xa0; syscall; 
0x0000000000039717: mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000232a9: mov eax, 0xa1; syscall; 
0x00000000000232a9: mov eax, 0xa1; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005b424: mov eax, 0xa2; syscall; 
0x000000000005b424: mov eax, 0xa2; syscall; ret; 
0x000000000005a8b7: mov eax, 0xa3; syscall; 
0x000000000005a287: mov eax, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000002376f: mov eax, 0xa5; syscall; 
0x000000000002376f: mov eax, 0xa5; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023783: mov eax, 0xa6; syscall; 
0x0000000000023783: mov eax, 0xa6; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023c0b: mov eax, 0xa7; syscall; 
0x0000000000023c0b: mov eax, 0xa7; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023c1d: mov eax, 0xa8; syscall; 
0x00000000000239e9: mov eax, 0xa9; syscall; 
0x00000000000239e9: mov eax, 0xa9; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000003a2db: mov eax, 0xa; and rsi, 0xfffffffffffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x0000000000023af0: mov eax, 0xaa; syscall; 
0x0000000000023af0: mov eax, 0xaa; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000396df: mov eax, 0xab; syscall; 
0x00000000000396df: mov eax, 0xab; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000002358c: mov eax, 0xac; syscall; 
0x000000000002358c: mov eax, 0xac; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023577: mov eax, 0xad; syscall; 
0x0000000000023577: mov eax, 0xad; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023746: mov eax, 0xaf; syscall; 
0x0000000000023746: mov eax, 0xaf; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000002375a: mov eax, 0xb0; syscall; 
0x00000000000239b8: mov eax, 0xb3; syscall; 
0x0000000000092955: mov eax, 0xb883fff8; clc; dec dword ptr [rbp - 0x68000748]; mov eax, 0xb897fff8; clc; jmp rdi; 
0x000000000009295d: mov eax, 0xb897fff8; clc; call qword ptr [rdi - 0x18000748]; mov eax, 0xb8e7fff8; clc; jmp qword ptr [rdx]; 
0x0000000000092961: mov eax, 0xb897fff8; clc; jmp rdi; 
0x000000000006c97f: mov eax, 0xb8c1b8c0; ret; 
0x0000000000092969: mov eax, 0xb8e7fff8; clc; jmp qword ptr [rdx]; 
0x000000000003a3ee: mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000056497: mov eax, 0xb; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000056f68: mov eax, 0xb; ret; 
0x0000000000057e16: mov eax, 0xb; syscall; 
0x0000000000004034: mov eax, 0xba000004; add al, 0; add byte ptr [rsp + rax + 0x4c00000], bh; add byte ptr [rax], al; rol dword ptr [rax + rax], 0; ret; 
0x000000000007974c: mov eax, 0xba51b951; push rcx; mov esi, 0xc151bf51; push rcx; ret 0xc351; 
0x000000000007986e: mov eax, 0xba52b952; push rdx; mov ebx, 0xbd52bc52; push rdx; rcl byte ptr [rdx - 0x3f], 0x52; ret 0xc452; 
0x000000000007a8f4: mov eax, 0xba5fb95f; pop rdi; mov ebx, 0xbf5fbe5f; pop rdi; rcr byte ptr [rdi - 0x3f], 0x5f; ret 0xc75f; 
0x00000000000427f6: mov eax, 0xba; syscall; 
0x0000000000088e4e: mov eax, 0xbb05b905; add eax, 0x5bd05bc; mov esi, 0xc005bf05; add eax, 0x5c205c1; ret; 
0x000000000007b1b8: mov eax, 0xbb66ba66; mov sp, 0xbd66; mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x00000000000239cc: mov eax, 0xbb; syscall; 
0x00000000000795f2: mov eax, 0xbc50b950; push rax; mov ebp, 0xbf50be50; push rax; rcl byte ptr [rax - 0x3f], 0x50; ret 0xc350; 
0x0000000000079b92: mov eax, 0xbc55ba55; push rbp; mov edi, 0xc155c055; push rbp; ret 0xc355; 
0x000000000007a0ee: mov eax, 0xbc59ba59; pop rcx; mov ebp, 0xc059bf59; pop rcx; rcr dword ptr [rcx - 0x3e], 0x59; ret; 
0x000000000007bc50: mov eax, 0xbc6eb96e; outsb dx, byte ptr [rsi]; mov esi, 0xc06ebf6e; outsb dx, byte ptr [rsi]; ret; 
0x0000000000023db4: mov eax, 0xbc; syscall; 
0x0000000000023db4: mov eax, 0xbc; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023dcc: mov eax, 0xbd; syscall; 
0x0000000000023dcc: mov eax, 0xbd; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023de7: mov eax, 0xbe; syscall; 
0x0000000000023de7: mov eax, 0xbe; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023d47: mov eax, 0xbf; syscall; 
0x000000000005668d: mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000023d59: mov eax, 0xc0; syscall; 
0x0000000000023d6e: mov eax, 0xc1; syscall; 
0x0000000000023d7d: mov eax, 0xc2; syscall; 
0x0000000000023d8c: mov eax, 0xc3; syscall; 
0x000000000007eb96: mov eax, 0xc46d4e60; pop rbx; ret 0xa15b; 
0x0000000000023d9e: mov eax, 0xc4; syscall; 
0x0000000000023df9: mov eax, 0xc5; syscall; 
0x0000000000023df9: mov eax, 0xc5; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000088a7e: mov eax, 0xc69dba9d; popfq; iretd; popfq; ret 0xd99d; 
0x0000000000023e0b: mov eax, 0xc6; syscall; 
0x0000000000023e0b: mov eax, 0xc6; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000023e20: mov eax, 0xc7; syscall; 
0x0000000000023e20: mov eax, 0xc7; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000021f2d: mov eax, 0xc8; syscall; 
0x00000000000550e4: mov eax, 0xc8; syscall; ret; 
0x000000000005a52e: mov eax, 0xc8; syscall; xor eax, eax; ret; 
0x0000000000027840: mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000023a26: mov eax, 0xc; syscall; 
0x0000000000023a26: mov eax, 0xc; syscall; ret; 
0x0000000000056db4: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd4: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000055baf: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b963: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a2: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000559c4: mov eax, 0xca; mov esi, 1; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055975: mov eax, 0xca; mov esi, 1; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d25: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552c7: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a2: mov eax, 0xca; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5b: mov eax, 0xca; mov esi, 1; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055684: mov eax, 0xca; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000056fd2: mov eax, 0xca; movsxd rdx, edx; or esi, 1; mov rax, r8; movsxd rsi, esi; syscall; 
0x00000000000567da: mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x0000000000056a1b: mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000056bb6: mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000056c87: mov eax, 0xca; syscall; 
0x0000000000049ae5: mov eax, 0xcb; syscall; 
0x0000000000049ae5: mov eax, 0xcb; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000049afa: mov eax, 0xcb; syscall; neg eax; ret; 
0x000000000001e1ff: mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000049b39: mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000049b08: mov eax, 0xcc; syscall; 
0x000000000004d6aa: mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000071888: mov eax, 0xd1973295; cwde; cqo; push -0x67; ret; 
0x0000000000023365: mov eax, 0xd5; syscall; 
0x0000000000023365: mov eax, 0xd5; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023a04: mov eax, 0xd8; syscall; 
0x000000000002147e: mov eax, 0xd9; syscall; 
0x0000000000021f10: mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004a8b7: mov eax, 0xd; syscall; 
0x0000000000055c2b: mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000021760: mov eax, 0xda; syscall; 
0x00000000000226bd: mov eax, 0xdc; syscall; 
0x00000000000223b0: mov eax, 0xdd; syscall; 
0x00000000000223b0: mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000036774: mov eax, 0xde0005b2; ret 0xf1de; 
0x000000000005a35f: mov eax, 0xde; syscall; 
0x000000000005a5a8: mov eax, 0xdf; syscall; 
0x000000000005a57b: mov eax, 0xe0; syscall; 
0x000000000005a57b: mov eax, 0xe0; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005a555: mov eax, 0xe1; syscall; 
0x000000000005a28c: mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005a28c: mov eax, 0xe2; and edi, 0x7fffffff; syscall; xor eax, eax; add rsp, 0x1b8; ret; 
0x000000000005a538: mov eax, 0xe2; syscall; 
0x000000000005a538: mov eax, 0xe2; syscall; ret; 
0x00000000000591af: mov eax, 0xe3; syscall; 
0x00000000000591af: mov eax, 0xe3; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000008d84c: mov eax, 0xe3fd071; ret; 
0x0000000000059115: mov eax, 0xe4; mov rsi, rbx; syscall; 
0x0000000000059069: mov eax, 0xe5; lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000059090: mov eax, 0xe5; syscall; 
0x0000000000021eba: mov eax, 0xe7; syscall; 
0x00000000000233c8: mov eax, 0xe8; syscall; 
0x000000000002338a: mov eax, 0xe9; syscall; 
0x000000000002338a: mov eax, 0xe9; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004ae05: mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004ae05: mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000055d71: mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000005a423: mov eax, 0xe; mov rdx, rdi; syscall; 
0x0000000000021f47: mov eax, 0xe; syscall; 
0x0000000000055c54: mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a5f2: mov eax, 0xe; syscall; ret; 
0x000000000004b5d9: mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000003a754: mov eax, 0xf0; syscall; 
0x000000000003a754: mov eax, 0xf0; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000003a7f5: mov eax, 0xf1; syscall; 
0x000000000003a5ec: mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000003a6cc: mov eax, 0xf4; syscall; 
0x000000000003a77c: mov eax, 0xf5; syscall; 
0x000000000003a77c: mov eax, 0xf5; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004aeb3: mov eax, 0xf; syscall; 
0x000000000002352c: mov eax, 0xfd; syscall; 
0x000000000002352c: mov eax, 0xfd; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000002354a: mov eax, 0xfe; syscall; 
0x0000000000023562: mov eax, 0xff; syscall; 
0x0000000000055112: mov eax, 0xffffff83; pop rdx; ret; 
0x0000000000049c1a: mov eax, 0xffffffda; pop rbx; pop rbp; ret; 
0x000000000005519d: mov eax, 0xfffffffc; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004aa37: mov eax, 0xfffffffe; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x0000000000022712: mov eax, 0xffffffff; cmovs rsi, rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000018af6: mov eax, 0xffffffff; ret; 
0x0000000000024066: mov eax, 0xffffffff; seta dl; cmovae eax, edx; ret; 
0x000000000004013c: mov eax, 0xffffffff; test edx, edx; cmove edx, eax; mov eax, edx; add rsp, 0x28; ret; 
0x0000000000043262: mov eax, 1; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x0000000000038b23: mov eax, 1; pop rdx; ret; 
0x0000000000018ad0: mov eax, 1; ret; 
0x000000000005aaa1: mov eax, 1; syscall; 
0x000000000005aaa1: mov eax, 1; syscall; xor eax, eax; ret; 
0x000000000004f149: mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000057f01: mov eax, 3; mov rdi, r12; syscall; 
0x0000000000021455: mov eax, 3; syscall; 
0x000000000003f93f: mov eax, 3; syscall; ret; 
0x000000000004b184: mov eax, 4; mov rdi, r8; mov rsi, rbx; syscall; 
0x0000000000057ebe: mov eax, 5; mov rdi, r12; syscall; 
0x000000000004b104: mov eax, 5; mov rsi, rbx; syscall; 
0x000000000004f1f1: mov eax, 6; mov rdi, rbp; syscall; 
0x000000000004f0de: mov eax, 6; mov rdi, rbx; syscall; 
0x000000000002194b: mov eax, 7; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005afa9: mov eax, 8; syscall; 
0x000000000003a289: mov eax, 9; syscall; 
0x0000000000021e67: mov eax, dword ptr [0]; add rax, 0x34; ret; 
0x0000000000023507: mov eax, dword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021a9f: mov eax, dword ptr [0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c97: mov eax, dword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005701d: mov eax, dword ptr [0]; ret; 
0x0000000000055a21: mov eax, dword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004a310: mov eax, dword ptr [rax + 0x18]; pop rbx; pop rbp; sub eax, r8d; pop r12; ret; 
0x000000000005a489: mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000002350e: mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000056321: mov eax, dword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000022989: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000005db51: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x239de5]; mov rsi, rbx; mov rdi, r12; call rax; 
0x0000000000022972: mov eax, dword ptr [rax + 8]; ret; 
0x000000000005632a: mov eax, dword ptr [rax + rdi*8]; ret; 
0x000000000004f5ad: mov eax, dword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000050e7f: mov eax, dword ptr [rax]; ret; 
0x0000000000044b69: mov eax, dword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000055c24: mov eax, dword ptr [rbx + 0x10]; test eax, eax; je 0x55c43; mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000054a04: mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x54a0e; call rax; 
0x000000000004ba4d: mov eax, dword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x000000000005529b: mov eax, dword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000018e08: mov eax, dword ptr [rbx]; test eax, eax; jne 0x18e00; xor eax, eax; pop rbx; ret; 
0x00000000000549e3: mov eax, dword ptr [rbx]; test rax, rax; je 0x549ec; call rax; 
0x000000000004b5f6: mov eax, dword ptr [rdi + 0x18]; jmp rax; 
0x0000000000054aa9: mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054abb: mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054acb: mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000026fc7: mov eax, dword ptr [rdi + 0x20]; test rax, -0x1000; je 0x26fdd; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027456: mov eax, dword ptr [rdi + 0x20]; test rax, -0x1000; je 0x2746c; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000054ac3: mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004bf1f: mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005627f: mov eax, dword ptr [rdi + 0x30]; not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004bca6: mov eax, dword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x4bcb6; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004bf11: mov eax, dword ptr [rdi + 0x60]; ret; 
0x000000000001ae52: mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000001ae4e: mov eax, dword ptr [rdi + 0x78]; ret; 
0x00000000000558ea: mov eax, dword ptr [rdi + 0x8c]; test eax, eax; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000004bf04: mov eax, dword ptr [rdi + 0x90]; not eax; shr eax, 0x1f; ret; 
0x000000000004363a: mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054846: mov eax, dword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000054478: mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x00000000000544c7: mov eax, dword ptr [rdi + 8]; and eax, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x000000000005b7ec: mov eax, dword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000054ab2: mov eax, dword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000002138c: mov eax, dword ptr [rdi + 8]; ret; 
0x0000000000054b0f: mov eax, dword ptr [rdi]; and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000558b6: mov eax, dword ptr [rdi]; and eax, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000056d10: mov eax, dword ptr [rdi]; and eax, 0xfffffffc; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000054b4c: mov eax, dword ptr [rdi]; and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003f24a: mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x0000000000058314: mov eax, dword ptr [rdi]; bswap eax; ret; 
0x0000000000054b56: mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054afa: mov eax, dword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000044b63: mov eax, dword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000043632: mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x0000000000021720: mov eax, dword ptr [rdi]; ret; 
0x0000000000054b1b: mov eax, dword ptr [rdi]; shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000054b3f: mov eax, dword ptr [rdi]; shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004beec: mov eax, dword ptr [rdi]; shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x0000000000054b25: mov eax, dword ptr [rdi]; shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004bef8: mov eax, dword ptr [rdi]; shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x0000000000054b32: mov eax, dword ptr [rdi]; shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004ab4a: mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000054aeb: mov eax, dword ptr [rdi]; sub rcx, rax; mov qword ptr [rdx], rax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000049faa: mov eax, dword ptr [rdi]; test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x000000000003f242: mov eax, dword ptr [rdi]; xchg al, ah; movzx eax, ax; ret; 
0x000000000004cc16: mov eax, dword ptr [rdx + 0x20]; test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000057bc6: mov eax, dword ptr [rdx + 0x30]; mov esi, 0x22; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000056201: mov eax, dword ptr [rdx + 0x60]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000004f5cd: mov eax, dword ptr [rdx + 8]; lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a1: mov eax, dword ptr [rdx + 8]; lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000044b4b: mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000006ee44: mov eax, dword ptr [rdx - 0x79a17a2b]; ret 0x478f; 
0x00000000000590ee: mov eax, dword ptr [rip + 0x23c37c]; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x0000000000054b78: mov eax, dword ptr [rip + 0x240926]; mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000004253f: mov eax, dword ptr [rip + 0x252eeb]; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000003d4de: mov eax, dword ptr [rip + 0x257ac4]; ret; 
0x000000000002309e: mov eax, dword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x0000000000021791: mov eax, dword ptr [rip + 0x276921]; mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x000000000003e14d: mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000004aa0a: mov eax, dword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000054bc6: mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x00000000000566c6: mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000004abb2: mov eax, dword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000056e2d: mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x0000000000032524: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000003d897: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000038f03: mov eax, dword ptr [rsp + 0x10]; call rax; 
0x00000000000408db: mov eax, dword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000444e3: mov eax, dword ptr [rsp + 0x18]; call rax; 
0x0000000000040fbc: mov eax, dword ptr [rsp + 0x18]; pop rdx; pop rcx; add rsp, 0x28; ret; 
0x000000000005a25e: mov eax, dword ptr [rsp + 0x20]; call rax; 
0x0000000000057ef9: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x000000000004b44a: mov eax, dword ptr [rsp + 0x48]; mov qword ptr [rbx + 0x50], rax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000005e56e: mov eax, dword ptr [rsp + 0x78]; mov rsp, rbx; jmp rax; 
0x000000000004d0e2: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021382: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000004c62a: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003caae: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x228; pop rbx; pop rbp; ret; 
0x0000000000041bd4: mov eax, dword ptr [rsp + 8]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000000426c9: mov eax, dword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000004d5f7: mov eax, dword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004090c: mov eax, dword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004a788: mov eax, dword ptr [rsp + 8]; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x0000000000057d17: mov eax, dword ptr [rsp + 8]; mov dword ptr [rbx], eax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000057e79: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e79: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000023170: mov eax, dword ptr [rsp + 8]; shr rax, 9; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002b9ff: mov eax, dword ptr [rsp - 0x10]; and ax, 0x8000; or eax, edx; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000050e71: mov eax, dword ptr [rsp - 0x10]; lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x000000000003784a: mov eax, dword ptr [rsp - 0x10]; ret; 
0x00000000000299f8: mov eax, dword ptr [rsp - 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000019c43: mov eax, dword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000005c7c0: mov eax, dword ptr [rsp]; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000004d557: mov eax, dword ptr [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004a987: mov eax, dword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x00000000000239a5: mov eax, dword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000005a139: mov eax, dword ptr [rsp]; je 0x5a141; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000005a283: mov eax, dword ptr [rsp]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005ab9a: mov eax, eax; mov eax, 3; syscall; 
0x0000000000055bbf: mov eax, eax; mov rdi, r12; syscall; 
0x0000000000054d35: mov eax, eax; mov rdi, r13; syscall; 
0x000000000004b973: mov eax, eax; mov rdi, r9; syscall; 
0x0000000000056dc4: mov eax, eax; mov rdi, rbx; syscall; 
0x0000000000022206: mov eax, eax; mov rdx, r10; syscall; 
0x0000000000054d69: mov eax, eax; mov rdx, rsi; syscall; 
0x0000000000054f14: mov eax, eax; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004b981: mov eax, eax; mov rsi, rdx; syscall; 
0x000000000004b981: mov eax, eax; mov rsi, rdx; syscall; ret; 
0x000000000005795a: mov eax, eax; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000004b089: mov eax, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000056fde: mov eax, eax; movsxd rsi, esi; syscall; 
0x000000000005820a: mov eax, eax; neg eax; test r9d, r9d; cmove eax, r8d; ret; 
0x0000000000057949: mov eax, eax; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000005b88e: mov eax, eax; pop rbp; pop r12; pop r13; ret; 
0x000000000004cf2c: mov eax, eax; pop rbp; pop r12; ret; 
0x000000000004c225: mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000004ea54: mov eax, eax; pop rbx; ret; 
0x000000000004db98: mov eax, eax; pop rdx; ret; 
0x000000000003f24e: mov eax, eax; ret; 
0x000000000001ace4: mov eax, eax; syscall; 
0x00000000000559e4: mov eax, eax; syscall; pop rax; ret; 
0x0000000000055995: mov eax, eax; syscall; ret; 
0x00000000000552e2: mov eax, eax; syscall; xor eax, eax; ret; 
0x0000000000016d6f: mov eax, ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004b81b: mov eax, ebp; mov rdi, r14; syscall; 
0x000000000004b927: mov eax, ebp; mov rdi, r9; syscall; 
0x0000000000054f27: mov eax, ebp; mov rdx, r12; syscall; 
0x00000000000548a6: mov eax, ebp; mov rsi, r9; syscall; 
0x0000000000056c20: mov eax, ebp; mov rsi, rdx; syscall; 
0x000000000004b90e: mov eax, ebp; movsxd rdx, edx; mov rdi, r9; mov rsi, r12; syscall; 
0x0000000000056c12: mov eax, ebp; movsxd rsi, r12d; syscall; 
0x0000000000052e2a: mov eax, ebp; pop r12; pop r13; pop r14; ret; 
0x000000000003bbd7: mov eax, ebp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000018059: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000004c32f: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000179bb: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000005428d: mov eax, ebp; pop rbx; pop rbp; ret; 
0x0000000000038b0d: mov eax, ebp; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000043146: mov eax, ebp; syscall; 
0x0000000000026d76: mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret; 
0x000000000003808d: mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a506: mov eax, ebx; add rsp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x0000000000053120: mov eax, ebx; add rsp, 0x200; pop rbx; pop rbp; pop r12; ret; 
0x0000000000057254: mov eax, ebx; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018258: mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000181d0: mov eax, ebx; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000018910: mov eax, ebx; mov qword ptr [rip + 0x27f55f], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000049b65: mov eax, ebx; neg eax; pop rbx; ret; 
0x000000000005446f: mov eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017a1c: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017a52: mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000017912: mov eax, ebx; pop rbx; ret; 
0x000000000002200b: mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000018ed3: mov eax, ebx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x0000000000055751: mov eax, ebx; xor edx, edx; mov esi, 0x83; mov rax, rbp; syscall; 
0x000000000003a99b: mov eax, ecx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004badd: mov eax, ecx; je 0x4baee; mov rsi, rsp; mov edx, 2; mov eax, 0x13; syscall; 
0x000000000004bf78: mov eax, ecx; mov qword ptr [rsi], rdx; ret; 
0x0000000000054faa: mov eax, ecx; mov rdi, r8; syscall; 
0x000000000004c20e: mov eax, ecx; mov rdi, rbp; syscall; 
0x0000000000054eb9: mov eax, ecx; mov rdi, rbx; syscall; 
0x000000000002224f: mov eax, ecx; mov rdx, r8; syscall; 
0x0000000000022273: mov eax, ecx; mov rsi, r8; mov rdx, r10; syscall; 
0x000000000005a9f0: mov eax, ecx; mov rsi, r8; syscall; 
0x0000000000054656: mov eax, ecx; mov rsi, rbx; syscall; 
0x000000000004c21c: mov eax, ecx; mov rsi, rdx; syscall; 
0x000000000004ea4c: mov eax, ecx; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db90: mov eax, ecx; mov rsi, rdx; syscall; mov eax, r8d; pop rdx; ret; 
0x0000000000028a36: mov eax, ecx; neg eax; and eax, 4; ret; 
0x00000000000534f4: mov eax, ecx; or rax, rdx; ret; 
0x000000000004c800: mov eax, ecx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000453e9: mov eax, ecx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000211cb: mov eax, ecx; pop rbx; pop rbp; ret; 
0x000000000001acaf: mov eax, ecx; syscall; 
0x00000000000210d3: mov eax, edi; and eax, 0x5f; cmp edx, 0x19; cmova eax, edi; ret; 
0x00000000000210b6: mov eax, edi; and eax, 0x7f; ret; 
0x000000000003da0e: mov eax, edi; and eax, 0xffffff; ret; 
0x0000000000023e4f: mov eax, edi; bswap eax; ret; 
0x000000000005367e: mov eax, edi; cqo; idiv rsi; ret; 
0x000000000003da36: mov eax, edi; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000003f251: mov eax, edi; mov byte ptr [rsi + 1], dil; shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000005aa3a: mov eax, edi; mov eax, 0x6c; syscall; 
0x0000000000055b25: mov eax, edi; mov esi, 1; syscall; 
0x0000000000055c6b: mov eax, edi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000033c7f: mov eax, edi; neg eax; add eax, 2; ret; 
0x00000000000210bf: mov eax, edi; or eax, 0x20; cmp edx, 0x19; cmova eax, edi; ret; 
0x000000000003d9ff: mov eax, edi; or eax, esi; ret; 
0x0000000000027580: mov eax, edi; pop rbx; pop rbp; pop r14; pop r15; ret; 
0x00000000000169ca: mov eax, edi; ret; 
0x000000000005336c: mov eax, edi; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x0000000000053670: mov eax, edi; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x00000000000357bc: mov eax, edi; shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003f275: mov eax, edi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x0000000000018764: mov eax, edi; test dl, dl; jne 0x18770; ret; 
0x000000000003d558: mov eax, edi; xchg al, ah; ret; 
0x00000000000379dc: mov eax, edx; add rax, rbx; pop rbx; ret; 
0x0000000000028a2a: mov eax, edx; add rax, rdx; sete al; movzx eax, al; ret; 
0x000000000004aba7: mov eax, edx; add rsp, 0x138; ret; 
0x0000000000039d32: mov eax, edx; add rsp, 0x18; ret; 
0x00000000000264b5: mov eax, edx; add rsp, 0x28; ret; 
0x0000000000023b93: mov eax, edx; je 0x23ba8; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000003c5c1: mov eax, edx; je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x00000000000464a6: mov eax, edx; lea rdx, [rip + 0x4cb2d]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000056f55: mov eax, edx; lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a36: mov eax, edx; lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x000000000005aa07: mov eax, edx; mov rsi, r8; syscall; 
0x0000000000024a78: mov eax, edx; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000001b717: mov eax, edx; or rax, rcx; mov qword ptr [rsp + 0x10], rax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001cae7: mov eax, edx; or rax, rcx; mov qword ptr [rsp + 8], rax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000001cb93: mov eax, edx; or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x0000000000021db5: mov eax, edx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005aec8: mov eax, edx; pop rbp; pop r12; ret; 
0x000000000004f19c: mov eax, edx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000388c7: mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021424: mov eax, edx; pop rbx; pop rbp; ret; 
0x0000000000020f70: mov eax, edx; pop rbx; ret; 
0x0000000000038d06: mov eax, edx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022407: mov eax, edx; pop rdx; ret; 
0x00000000000263c5: mov eax, edx; ret; 
0x000000000004bf5e: mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000021ec7: mov eax, edx; syscall; 
0x0000000000059067: mov eax, esi; mov eax, 0xe5; lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x000000000004aff7: mov eax, esi; mov rdx, r13; syscall; 
0x000000000004b058: mov eax, esi; mov rsi, r12; mov rdx, r13; syscall; 
0x000000000004bba8: mov eax, esi; mov rsi, rbp; syscall; 
0x000000000003b4a0: mov eax, esi; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000004cb4d: mov eax, esi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022584: mov eax, esi; pop rbx; ret; 
0x000000000004f616: mov eax, esi; ret; 
0x000000000004317d: mov eax, esi; syscall; 
0x000000000004e2f3: mov eax, esp; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004314d: mov eax, esp; mov esi, 1; syscall; 
0x000000000004caf9: mov eax, esp; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000017d45: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000180e0: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043164: mov eax, esp; syscall; 
0x0000000000017d44: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005733c: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000003b49f: mov eax, r14d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000058209: mov eax, r8d; neg eax; test r9d, r9d; cmove eax, r8d; ret; 
0x000000000004cf2b: mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000004c224: mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000004ea53: mov eax, r8d; pop rbx; ret; 
0x000000000004db97: mov eax, r8d; pop rdx; ret; 
0x000000000004ae11: mov eax, r8d; ret; 
0x000000000008bd05: mov ebp, 0x1e09bc91; xlatb; pop rbx; ret 0xef12; 
0x0000000000092bf3: mov ebp, 0x3e4cca98; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x0000000000022604: mov ebp, 0x48000320; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000043230: mov ebp, 0x88; call rax; 
0x00000000000740b8: mov ebp, 0xb35abc5a; pop rdx; ret 0xb25a; 
0x0000000000088e56: mov ebp, 0xbf05be05; add eax, 0x5c105c0; ret 0xc305; 
0x00000000000795f8: mov ebp, 0xbf50be50; push rax; rcl byte ptr [rax - 0x3f], 0x50; ret 0xc350; 
0x0000000000079cf4: mov ebp, 0xbf56be56; push rsi; rcl byte ptr [rsi - 0x3f], 0x56; ret 0xc356; 
0x0000000000079fac: mov ebp, 0xbf58be58; pop rax; rcr byte ptr [rax - 0x3e], 0x58; ret; 
0x000000000007a682: mov ebp, 0xbf5dbe5d; pop rbp; rcr byte ptr [rbp - 0x3f], 0x5d; ret 0xc35d; 
0x00000000000657a9: mov ebp, 0xbf6dbe66; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x00000000000799ac: mov ebp, 0xc053be53; push rbx; ret; 
0x000000000007a0f4: mov ebp, 0xc059bf59; pop rcx; rcr dword ptr [rcx - 0x3e], 0x59; ret; 
0x000000000007a26e: mov ebp, 0xc05abf5a; pop rdx; ret; 
0x000000000007a7b8: mov ebp, 0xc05ebf5e; pop rsi; rcr dword ptr [rsi - 0x3e], 0x5e; ret; 
0x000000000007b1c0: mov ebp, 0xc066bf66; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x00000000000913e7: mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x0000000000079878: mov ebp, 0xc152c052; push rdx; ret 0xc452; 
0x000000000007bb04: mov ebp, 0xc16dbe6d; insd dword ptr [rdi], dx; ret 0xc36d; 
0x0000000000056c03: mov ebp, 0xca; mov edx, 1; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x000000000006ee42: mov ebp, 0xd5828b7f; test dword ptr [rsi - 0x7a], ebx; ret 0x478f; 
0x0000000000020522: mov ebp, 0xd9abfb41; sbb dword ptr [rdi], 0x48; mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000092aa4: mov ebp, 0xf2fff92c; sub eax, 0x30e2fff9; stc; call rcx; 
0x000000000004a5a3: mov ebp, dword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000003a681: mov ebp, eax; je 0x3a69c; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004a3fe: mov ebp, eax; lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x000000000004bfab: mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000004b80e: mov ebp, ecx; call 0x54178; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x000000000004cb88: mov ebp, esi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x0000000000057e99: mov ebp, esi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x0000000000059871: mov ebp, esi; mov rbx, rdi; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000005b046: mov ebp, esi; push rcx; mov rbx, rdi; mov eax, 0x125; syscall; 
0x0000000000062394: mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x0000000000092bfb: mov ebx, 0x3d1151b3; ret 0xe31c; 
0x00000000000921e6: mov ebx, 0x3f; cmp dl, 0xd4; ret; 
0x000000000008fb07: mov ebx, 0x3ff4; add byte ptr [rax], al; add byte ptr [rax], al; xchg eax, ebp; ret; 
0x000000000004a901: mov ebx, 0x48fffcc0; add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000000004ac01: mov ebx, 0x5afffcbd; ret; 
0x0000000000026809: mov ebx, 0x5bfffffe; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000004ae7a: mov ebx, 0x5d5bfffc; pop r12; ret; 
0x0000000000023501: mov ebx, 0x64ffff34; mov rax, qword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000007dc80: mov ebx, 0xad83e073; call 0xffffffffe29c91ed; insb byte ptr [rdi], dx; pop rdx; push rbx; ret; 
0x00000000000046cd: mov ebx, 0xb7bf2684; hlt; in al, dx; ret 0x33b1; 
0x0000000000079874: mov ebx, 0xbd52bc52; push rdx; rcl byte ptr [rdx - 0x3f], 0x52; ret 0xc452; 
0x000000000007a67e: mov ebx, 0xbd5dbc5d; pop rbp; mov esi, 0xc05dbf5d; pop rbp; rcr dword ptr [rbp - 0x3e], 0x5d; ret; 
0x000000000007a7b4: mov ebx, 0xbd5ebc5e; pop rsi; mov edi, 0xc15ec05e; pop rsi; ret 0xc35e; 
0x00000000000657a5: mov ebx, 0xbd65bc64; mov si, 0xbf6d; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000007b1bc: mov ebx, 0xbd66bc66; mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x000000000007bb00: mov ebx, 0xbd6dbc6d; insd dword ptr [rdi], dx; mov esi, 0xc26dc16d; insd dword ptr [rdi], dx; ret; 
0x000000000007bdc6: mov ebx, 0xbd6fbc6f; outsd dx, dword ptr [rsi]; mov esi, 0xc16fbf6f; outsd dx, dword ptr [rsi]; ret; 
0x0000000000079cf2: mov ebx, 0xbe56bd56; push rsi; mov edi, 0xc156c056; push rsi; ret 0xc356; 
0x0000000000079faa: mov ebx, 0xbe58bd58; pop rax; mov edi, 0xc258c058; pop rax; ret; 
0x00000000000887f0: mov ebx, 0xbe95b995; xchg eax, ebp; retf 0xf695; outsd dx, dword ptr [rsi]; ret; 
0x0000000000065776: mov ebx, 0xbea4bca3; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000007a8fa: mov ebx, 0xbf5fbe5f; pop rdi; rcr byte ptr [rdi - 0x3f], 0x5f; ret 0xc75f; 
0x000000000007fb6a: mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x000000000008309c: mov ebx, 0xc296bf96; xchg eax, esi; ret; 
0x000000000006264c: mov ebx, 0xe6766a0a; scasb al, byte ptr [rdi]; in eax, dx; leave; ret 0x3b81; 
0x000000000003331b: mov ebx, 0xff2ffff; sub al, al; pop rax; ret; 
0x0000000000037c50: mov ebx, 0xffba; add dh, dh; ret 0x7410; 
0x000000000002205a: mov ebx, dword ptr [rax]; call 0x5468b; mov rdi, rbp; call rbx; 
0x0000000000042978: mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x0000000000087857: mov ebx, dword ptr [rbx - 0x549a609b]; mov bh, 0x65; ret; 
0x000000000006edd3: mov ebx, dword ptr [rcx - 0x70]; ret; 
0x0000000000021fba: mov ebx, dword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000079137: mov ebx, dword ptr [rsi - 0x5f716072]; mov ds, word ptr [rbp - 0x426e4172]; xchg eax, ecx; ret 0x6b91; 
0x00000000000427e9: mov ebx, eax; jne 0x42843; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000004e65a: mov ebx, eax; jne 0x4e67c; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000057eb9: mov ebx, eax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x00000000000562dd: mov ebx, eax; neg ebx; jne 0x562f3; movsxd rdi, dword ptr [r12 + 0x30]; mov eax, 0x91; syscall; 
0x0000000000017bc2: mov ebx, edi; call 0x17780; mov rax, rbx; pop rbx; ret; 
0x0000000000018162: mov ebx, edi; call 0x17840; mov rax, rbx; pop rbx; ret; 
0x000000000005b04a: mov ebx, edi; mov eax, 0x125; syscall; 
0x0000000000023a77: mov ebx, edi; mov eax, 0x74; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000004a3fb: mov ebx, edi; mov rbp, rax; lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x0000000000059874: mov ebx, edi; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000017732: mov ebx, edx; call 0x54121; add rax, rbx; pop rbx; ret; 
0x000000000004af46: mov ebx, esi; movsxd rdi, edi; mov eax, 0x5b; mov rsi, rbx; sub rsp, 0x28; syscall; 
0x00000000000590f5: mov ebx, esi; test rax, rax; je 0x59112; call rax; 
0x000000000005ad97: mov ebx, esp; mov eax, 0x4f; mov rdi, rbx; mov rsi, rdx; syscall; 
0x00000000000230f3: mov ecx, 0x100; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000005a9e7: mov ecx, 0x124; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x000000000004836e: mov ecx, 0x18c48348; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004b387: mov ecx, 0x1e; xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3aa: mov ecx, 0x1e; xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x00000000000436ae: mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000022237: mov ecx, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x0000000000043111: mov ecx, 0x49000000; movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x000000000004366f: mov ecx, 0x54; rep stosd dword ptr [rdi], eax; ret; 
0x000000000004aa03: mov ecx, 0x5afffcbf; ret; 
0x0000000000058436: mov ecx, 0x85480003; ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x00000000000569a4: mov ecx, 0x88; mov esi, 0x18; mov eax, 0x111; syscall; 
0x000000000005c58f: mov ecx, 0x89480023; jo 0x5c5df; add esp, 0x110; pop rbx; ret; 
0x000000000005c588: mov ecx, 0x89480023; sbb eax, 0x23b9a6; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000026a48: mov ecx, 0xa8; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000005493c: mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000076886: mov ecx, 0xb886b386; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x00000000000778d2: mov ecx, 0xba99bb99; cdq; ret 0xbd99; 
0x0000000000079cee: mov ecx, 0xbb56ba56; push rsi; mov ebp, 0xbf56be56; push rsi; rcl byte ptr [rsi - 0x3f], 0x56; ret 0xc356; 
0x0000000000079fa6: mov ecx, 0xbb58ba58; pop rax; mov ebp, 0xbf58be58; pop rax; rcr byte ptr [rax - 0x3e], 0x58; ret; 
0x000000000007a4de: mov ecx, 0xbb5cba5c; pop rsp; mov esp, 0xc05cbe5c; pop rsp; ret 0xc35c; 
0x000000000007bafc: mov ecx, 0xbb6dba6d; insd dword ptr [rdi], dx; mov esp, 0xbe6dbd6d; insd dword ptr [rdi], dx; shr dword ptr [rbp - 0x3e], 0x6d; ret; 
0x00000000000799a6: mov ecx, 0xbc53ba53; push rbx; mov ebp, 0xc053be53; push rbx; ret; 
0x00000000000849ac: mov ecx, 0xbc9eba9e; sahf; mov edi, 0xc19ec09e; sahf; ret 0xc39e; 
0x00000000000795f4: mov ecx, 0xbd50bc50; push rax; mov esi, 0xc050bf50; push rax; rcl dword ptr [rax - 0x3e], 0x50; ret; 
0x000000000007974e: mov ecx, 0xbe51ba51; push rcx; mov edi, 0xc251c151; push rcx; ret; 
0x000000000008fb66: mov ecx, 0xbff6af; add byte ptr [rax], al; add byte ptr [rax], al; add cl, cl; ret; 
0x000000000006cf86: mov ecx, 0xc0c6bac6; mov cl, 0xc6; ret; 
0x00000000000548da: mov ecx, 0xc; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000054f9a: mov ecx, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x000000000004c1fe: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054ea9: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x00000000000560d8: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000088788: mov ecx, 0xd793d693; xchg eax, ebx; call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x000000000002c9ad: mov ecx, 0xf3fffffa; movups xmm1, xmmword ptr [rip + 0x66223]; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x00000000000233ac: mov ecx, 8; mov eax, 0x119; syscall; 
0x0000000000039832: mov ecx, dword ptr [rcx]; syscall; 
0x0000000000039832: mov ecx, dword ptr [rcx]; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000005483f: mov ecx, dword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000042538: mov ecx, dword ptr [rip + 0x252f62]; mov rax, qword ptr [rip + 0x252eeb]; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000001990e: mov ecx, dword ptr [rsi + rdx*4]; mov dword ptr [rax + rdx*4], ecx; pop rbx; pop rbp; ret; 
0x0000000000023836: mov ecx, dword ptr [rsi]; add eax, dword ptr [rax]; mov rdi, rax; call 0x169c0; add rsp, 0x28; ret; 
0x0000000000057e7e: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e7e: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000003982d: mov ecx, dword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x00000000000337c2: mov ecx, dword ptr [rsp - 0x18]; and rdx, rcx; cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x000000000003387b: mov ecx, eax; and ecx, 0x7fffffff; cmp ecx, 0x7f800000; jbe 0x33890; addss xmm0, xmm2; ret; 
0x0000000000080de1: mov ecx, eax; push rbx; jl 0x80e44; ret 0xe48f; 
0x00000000000534ed: mov ecx, eax; shl rdx, 0x20; mov rax, rcx; or rax, rdx; ret; 
0x0000000000057e3d: mov ecx, ebx; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000023bcd: mov ecx, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x000000000002332f: mov ecx, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x0000000000020e3a: mov ecx, edi; and ecx, 7; sar eax, cl; and eax, 1; ret; 
0x00000000000211c9: mov ecx, edi; mov eax, ecx; pop rbx; pop rbp; ret; 
0x0000000000054217: mov ecx, edx; jne 0x54226; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000003c5a6: mov ecx, edx; mov rdx, rsi; mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x0000000000070f29: mov ecx, gs; mov esp, ds; jge 0x70ec9; pop rcx; ret; 
0x000000000008fb69: mov edi, 0; add byte ptr [rax], al; leave; ret; 
0x0000000000090c79: mov edi, 0; add byte ptr [rax], al; ret; 
0x000000000008fba9: mov edi, 0; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x0000000000057e09: mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x0000000000057e09: mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x0000000000023707: mov edi, 0x10; mov eax, 0x144; syscall; 
0x0000000000023707: mov edi, 0x10; mov eax, 0x144; syscall; ret; 
0x000000000008c36f: mov edi, 0x3302d9ff; ret 0x1270; 
0x0000000000043959: mov edi, 0x3d; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000022423: mov edi, 0x3f; call 0x2248e; xor eax, eax; pop rdx; ret; 
0x0000000000056691: mov edi, 0x44721f0; xor eax, eax; ret; 
0x0000000000054502: mov edi, 0x48000001; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ad02: mov edi, 0x48ffff99; mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000053212: mov edi, 0x48fffff2; add esp, 0x1f8; ret; 
0x000000000005ad26: mov edi, 0x4a; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000001e0ed: mov edi, 0x54; call 0x1e115; pop rdx; ret; 
0x000000000008c717: mov edi, 0x54f01b4a; rol dword ptr [rsp + rax*8 + 0x2c383c3f], 1; cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x000000000008c8df: mov edi, 0x580b3930; movabs rbx, 0xf9e424e0a0003ff1; ret 0xbf; 
0x000000000008beb1: mov edi, 0x664522b3; mov al, byte ptr [rax + 0x14]; ret 0x9c5c; 
0x000000000003da32: mov edi, 0x89000000; clc; ja 0x3da3e; shr eax, 0x10; ret; 
0x000000000004accd: mov edi, 0x89fffffc; ret 0xc883; 
0x0000000000086152: mov edi, 0x9665276; cdqe; push rax; ret 0x7153; 
0x000000000008d0bf: mov edi, 0xa344de30; and al, 0x49; ret 0x653f; 
0x000000000005a570: mov edi, 0xa4; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x00000000000795fc: mov edi, 0xc150c050; push rax; ret 0xc350; 
0x0000000000079b98: mov edi, 0xc155c055; push rbp; ret 0xc355; 
0x0000000000079cf8: mov edi, 0xc156c056; push rsi; ret 0xc356; 
0x000000000007a0f6: mov edi, 0xc159c059; pop rcx; ret 0xc359; 
0x000000000007a686: mov edi, 0xc15dc05d; pop rbp; ret 0xc35d; 
0x000000000007a7ba: mov edi, 0xc15ec05e; pop rsi; ret 0xc35e; 
0x000000000007a8fe: mov edi, 0xc15fc05f; pop rdi; ret 0xc75f; 
0x0000000000082204: mov edi, 0xc191c091; xchg eax, ecx; ret 0xc391; 
0x0000000000082620: mov edi, 0xc192c092; xchg eax, edx; ret 0xc392; 
0x0000000000082990: mov edi, 0xc193c093; xchg eax, ebx; ret 0xc393; 
0x0000000000082e06: mov edi, 0xc195c095; xchg eax, ebp; ret 0xc395; 
0x0000000000083384: mov edi, 0xc197c097; xchg eax, edi; ret 0xc397; 
0x000000000008368e: mov edi, 0xc198c098; cwde; ret 0xc398; 
0x000000000008398a: mov edi, 0xc199c099; cdq; ret 0xc399; 
0x0000000000083fb6: mov edi, 0xc19bc09b; wait; ret 0xc39b; 
0x00000000000842d0: mov edi, 0xc19cc09c; pushfq; ret 0xc89c; 
0x00000000000846d4: mov edi, 0xc19dc09d; popfq; ret 0xc39d; 
0x00000000000849b2: mov edi, 0xc19ec09e; sahf; ret 0xc39e; 
0x0000000000079754: mov edi, 0xc251c151; push rcx; ret; 
0x0000000000079fb0: mov edi, 0xc258c058; pop rax; ret; 
0x000000000005aa34: mov edi, 0xc35afffb; mov r8, rdi; mov eax, 0x6c; syscall; 
0x000000000003da1c: mov edi, 0xf000000; mov bh, 0xff; cmovbe eax, edi; ret; 
0x000000000005069b: mov edi, 0xf37f883; xchg dword ptr [rax - 0x76fffffd], ebx; ret 0x8d48; 
0x000000000004392a: mov edi, 0xf7; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000074162: mov edi, 0xfd6bd36b; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x00000000000239e4: mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000000230f8: mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000004b051: mov edi, 0xffffff9c; mov rax, r14; mov rsi, r12; mov rdx, r13; syscall; 
0x0000000000049c74: mov edi, 0xffffffda; call 0x169c0; pop rdx; ret; 
0x000000000005910a: mov edi, 0xffffffea; je 0x5914f; movsxd rdi, ebp; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x000000000005912a: mov edi, 0xffffffea; jne 0x5914f; xor esi, esi; mov eax, 0x60; mov rdi, rbx; syscall; 
0x0000000000023277: mov edi, 0xfffffff4; call 0x169c0; pop rdx; ret; 
0x000000000004b0c7: mov edi, 0xfffffff7; call 0x169c0; pop rdx; ret; 
0x00000000000169e8: mov edi, 0xffffffff; add rsp, 0x18; mov rax, rdi; ret; 
0x000000000002baa3: mov edi, 1; call 0x29a04; add rsp, 0x18; ret; 
0x000000000005aa56: mov edi, 1; mov eax, 0x3c; syscall; 
0x0000000000023360: mov edi, 1; mov eax, 0xd5; syscall; 
0x0000000000055d6c: mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x000000000004a61f: mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000055c4f: mov edi, 2; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a61f: mov edi, 2; mov eax, 0xe; syscall; ret; 
0x000000000004ae0a: mov edi, 2; syscall; 
0x000000000004ae0a: mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000004a46a: mov edi, 7; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005a286: mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000055a1d: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000025d44: mov edi, dword ptr [rax]; call 0x23e54; test rax, rax; je 0x25d34; pop rbx; ret; 
0x000000000004322f: mov edi, dword ptr [rbp + 0x88]; call rax; 
0x0000000000055c5c: mov edi, dword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000055297: mov edi, dword ptr [rbx + 8]; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000049e6b: mov edi, dword ptr [rbx]; call 0x14680; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000001b2a5: mov edi, dword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000004ccf0: mov edi, dword ptr [rcx]; call rax; 
0x000000000004a5ab: mov edi, dword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005a56f: mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x0000000000055c6e: mov edi, dword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023a80: mov edi, dword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000004cc1f: mov edi, dword ptr [rdx]; jmp rax; 
0x000000000005a259: mov edi, dword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000005568a: mov edi, dword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003a3f8: mov edi, dword ptr [rsp + 8]; syscall; 
0x000000000003a3f8: mov edi, dword ptr [rsp + 8]; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000003a6e1: mov edi, dword ptr [rsp]; call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004cb8d: mov edi, dword ptr [rsp]; call rax; 
0x000000000003a27d: mov edi, dword ptr [rsp]; movsxd r10, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x000000000003582e: mov edi, eax; add edi, 0x7f; shl edi, 0x17; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000022609: mov edi, eax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ac55: mov edi, eax; call 0x169c0; add rsp, 0x20; pop rbx; ret; 
0x000000000004af94: mov edi, eax; call 0x169c0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002383b: mov edi, eax; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004a4dc: mov edi, eax; call 0x169c0; add rsp, 0x30; pop rbx; ret; 
0x000000000005acbe: mov edi, eax; call 0x169c0; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000000222a3: mov edi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000002239e: mov edi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000003a37f: mov edi, eax; call 0x169c0; add rsp, 0x70; pop rbx; ret; 
0x00000000000238ea: mov edi, eax; call 0x169c0; add rsp, 0x78; ret; 
0x00000000000225af: mov edi, eax; call 0x169c0; pop rdx; ret; 
0x00000000000363e7: mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x00000000000364d5: mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x000000000004bc84: mov edi, eax; call 0x4bb5c; add rsp, 0x18; ret; 
0x0000000000055c62: mov edi, eax; call 0x559ea; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023aa9: mov edi, eax; mov eax, 0x3e; syscall; 
0x0000000000043089: mov edi, eax; mov eax, 0x69; syscall; 
0x000000000004306c: mov edi, eax; mov eax, 0x6a; syscall; 
0x000000000005aa6c: mov edi, eax; mov eax, 0x71; syscall; 
0x000000000005aa48: mov edi, eax; mov eax, 0x72; syscall; 
0x000000000005827a: mov edi, eax; mov qword ptr [r8], rax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x0000000000021951: mov edi, eax; mov rdx, rcx; syscall; 
0x000000000004b18a: mov edi, eax; mov rsi, rbx; syscall; 
0x0000000000054c9c: mov edi, eax; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000003a2e8: mov edi, eax; sub rsi, r8; syscall; 
0x0000000000054fad: mov edi, eax; syscall; 
0x000000000005aa2b: mov edi, eax; syscall; movsxd rdi, r9d; call 0x169c0; pop rdx; ret; 
0x00000000000422ab: mov edi, eax; xor eax, eax; call 0x4ce08; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000057e56: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x0000000000057e56: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x000000000004364f: mov edi, eax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004af7f: mov edi, ebp; call 0x16820; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000022062: mov edi, ebp; call rbx; 
0x00000000000219f6: mov edi, ebp; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x000000000005acb1: mov edi, ebp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af8c: mov edi, ebp; mov rsi, rbx; syscall; 
0x000000000004c211: mov edi, ebp; syscall; 
0x000000000005ac43: mov edi, ebx; call 0x16820; mov eax, 0x50; mov rdi, rbx; syscall; 
0x00000000000578e6: mov edi, ebx; call 0x3a3dc; xor eax, eax; pop rbx; ret; 
0x000000000003f21d: mov edi, ebx; call 0x3f0d5; mov edx, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004e7ca: mov edi, ebx; call 0x4bf87; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x000000000004bfa4: mov edi, ebx; call 0x4c07e; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x0000000000053660: mov edi, ebx; call 0x4edcc; mov rax, rbx; pop rbx; ret; 
0x000000000004bfae: mov edi, ebx; call qword ptr [rbx + 0x18]; 
0x000000000004bd5e: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000004b9db: mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000004c163: mov edi, ebx; call qword ptr [rbx + 0x50]; 
0x0000000000049c3e: mov edi, ebx; call rax; 
0x0000000000043708: mov edi, ebx; mov qword ptr [rsp + 0x110], rax; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x000000000004ba4a: mov edi, ebx; mov rax, qword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x0000000000038f00: mov edi, ebx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000054d66: mov edi, ebx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000049c53: mov edi, ebx; mov rdx, rsi; syscall; 
0x000000000005ad9f: mov edi, ebx; mov rsi, rdx; syscall; 
0x000000000004c13e: mov edi, ebx; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x0000000000049c0f: mov edi, ebx; pop rbx; pop rbp; jmp rcx; 
0x00000000000590d9: mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000004d8ac: mov edi, ebx; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000003f7bb: mov edi, ebx; rep movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x0000000000027846: mov edi, ebx; syscall; 
0x0000000000017908: mov edi, ebx; xor esi, esi; call 0x54178; mov rax, rbx; pop rbx; ret; 
0x000000000004b914: mov edi, ecx; mov rsi, r12; syscall; 
0x000000000004b5df: mov edi, ecx; mov rsi, rdx; syscall; 
0x000000000001e205: mov edi, ecx; syscall; 
0x00000000000233ea: mov edi, edi; mov eax, 0x122; syscall; 
0x0000000000056327: mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x00000000000262a4: mov edi, edi; movsxd rax, dword ptr [r14 + r15*4]; add rax, r14; jmp rax; 
0x000000000004b4ed: mov edi, edi; push rax; mov eax, 0x5f; syscall; 
0x0000000000023a5a: mov edi, edi; push rax; mov eax, 0x7a; syscall; 
0x0000000000023a46: mov edi, edi; push rax; mov eax, 0x7b; syscall; 
0x000000000002346e: mov edi, edi; push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x000000000004b396: mov edi, edx; syscall; 
0x000000000004b396: mov edi, edx; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000017eea: mov edi, esi; call 0x17f50; add rax, rbx; pop rbx; ret; 
0x000000000002240f: mov edi, esi; call 0x2253d; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000003927e: mov edi, esi; inc dword ptr [rbx + 0x6751c38]; mov dword ptr [rax], 0xb; mov eax, ebx; pop rbx; ret; 
0x00000000000445a3: mov edi, esi; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000444e0: mov edi, esi; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000232c5: mov edi, esi; syscall; 
0x000000000004abdf: mov edi, esp; call 0x4ae15; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005db5f: mov edi, esp; call rax; 
0x00000000000407d0: mov edi, esp; mov rdx, r13; syscall; 
0x0000000000038887: mov edi, esp; syscall; 
0x000000000003353c: mov edx, 0; add byte ptr [rax], al; add byte ptr [rax + 0x48d02148], al; mov dword ptr [rdi], eax; ret; 
0x000000000002e84e: mov edx, 0; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000019182: mov edx, 0; cmove rax, rdx; ret; 
0x000000000003d16a: mov edx, 0; cmovne rax, rdx; add rsp, 0x18; ret; 
0x00000000000181ec: mov edx, 0; cmp byte ptr [rax], 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000017a6a: mov edx, 0; pop rbx; cmovne rax, rdx; ret; 
0x000000000004b136: mov edx, 0x1000; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x000000000004aff1: mov edx, 0x100; mov rax, r14; mov rdx, r13; syscall; 
0x0000000000056aa2: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000054953: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x00000000000566db: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x566d4; ret; 
0x00000000000573c3: mov edx, 0x10; xor eax, eax; lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000387f6: mov edx, 0x14; sub edx, eax; mov eax, edx; pop rdx; ret; 
0x0000000000054bdc: mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000000000004f13f: mov edx, 0x180; mov esi, 0x80c2; mov eax, 2; mov rdi, rbp; syscall; 
0x000000000004b01a: mov edx, 0x2a0100; mov eax, 0x101; syscall; 
0x0000000000021ec1: mov edx, 0x3c; mov rax, rdx; syscall; 
0x0000000000055be3: mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000023044: mov edx, 0x48000298; mov dword ptr [rip + 0x274d51], eax; pop rax; ret; 
0x000000000003a402: mov edx, 0x48fffdc5; add esp, 0x18; ret; 
0x0000000000036820: mov edx, 0x48ffff35; add esp, 0x30; add rsp, 0x38; ret; 
0x0000000000058e6d: mov edx, 0x5180d269; add dword ptr [rax], eax; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x0000000000059502: mov edx, 0x5afffbd4; ret; 
0x00000000000894d9: mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x0000000000056db9: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd9: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054f9f: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x000000000001aca4: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000054d2f: mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552d1: mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005abe2: mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x0000000000021479: mov edx, 0x800; mov eax, 0xd9; syscall; 
0x0000000000023bb1: mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004087a: mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000079872: mov edx, 0xbc52bb52; push rdx; mov ebp, 0xc152c052; push rdx; ret 0xc452; 
0x000000000007a268: mov edx, 0xbc5abb5a; pop rdx; mov ebp, 0xc05abf5a; pop rdx; ret; 
0x000000000007a3b8: mov edx, 0xbc5bbb5b; pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x000000000007a4e0: mov edx, 0xbc5cbb5c; pop rsp; mov esi, 0xc25cc05c; pop rsp; ret; 
0x000000000007a67c: mov edx, 0xbc5dbb5d; pop rbp; mov ebp, 0xbf5dbe5d; pop rbp; rcr byte ptr [rbp - 0x3f], 0x5d; ret 0xc35d; 
0x000000000007a7b2: mov edx, 0xbc5ebb5e; pop rsi; mov ebp, 0xc05ebf5e; pop rsi; rcr dword ptr [rsi - 0x3e], 0x5e; ret; 
0x00000000000657a3: mov edx, 0xbc64bb63; mov ebp, 0xbf6dbe66; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000007b1ba: mov edx, 0xbc66bb66; mov bp, 0xbf66; shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x000000000007b8de: mov edx, 0xbc6bbb6b; imul edi, dword ptr [rbp - 0x3f944195], 0x6b; ret; 
0x000000000007bafe: mov edx, 0xbc6dbb6d; insd dword ptr [rdi], dx; mov ebp, 0xc16dbe6d; insd dword ptr [rdi], dx; ret 0xc36d; 
0x0000000000079cf0: mov edx, 0xbd56bb56; push rsi; mov esi, 0xc056bf56; push rsi; rcl dword ptr [rsi - 0x3e], 0x56; ret; 
0x0000000000079fa8: mov edx, 0xbd58bb58; pop rax; mov esi, 0xc058bf58; pop rax; ret 0xc358; 
0x000000000007a0f0: mov edx, 0xbd59bc59; pop rcx; mov edi, 0xc159c059; pop rcx; ret 0xc359; 
0x0000000000079a7e: mov edx, 0xbe54bc54; push rsp; ret; 
0x000000000007a8f8: mov edx, 0xbe5fbb5f; pop rdi; mov edi, 0xc15fc05f; pop rdi; ret 0xc75f; 
0x0000000000079750: mov edx, 0xbf51be51; push rcx; rcl dword ptr [rcx - 0x3e], 0x51; ret; 
0x0000000000079b94: mov edx, 0xbf55bc55; push rbp; rcl byte ptr [rbp - 0x3f], 0x55; ret 0xc355; 
0x000000000008309a: mov edx, 0xbf96bb96; xchg eax, esi; ret 0xc396; 
0x000000000007b9f8: mov edx, 0xc16cc06c; insb byte ptr [rdi], dx; ret 0xc36c; 
0x000000000005af0d: mov edx, 0xc35afffb; mov eax, 0x66; syscall; 
0x000000000005af9e: mov edx, 0xc35afffb; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005af6e: mov edx, 0xc35afffb; push rax; mov eax, 0x56; syscall; 
0x000000000005aede: mov edx, 0xc35afffb; xor edi, edi; mov eax, 0x79; syscall; 
0x0000000000076880: mov edx, 0xc886b086; xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000088a80: mov edx, 0xcf9dc69d; popfq; ret 0xd99d; 
0x00000000000370dd: mov edx, 0xd0f70005; and eax, edx; mov dword ptr [rsp - 0x14], eax; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000008bcb0: mov edx, 0xd956dcae; ret; 
0x0000000000026a51: mov edx, 0xffffffff; cmove rax, rdx; ret; 
0x000000000004ba51: mov edx, 1; jmp rax; 
0x000000000004cb20: mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000004b839: mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000005b1c2: mov edx, 1; mov eax, 0x59; syscall; 
0x0000000000055bb4: mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b968: mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a7: mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c203: mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eae: mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000004db7a: mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005aa1b: mov edx, 1; mov esi, 2; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022320: mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000022284: mov edx, 1; mov esi, 2; mov rax, r9; syscall; 
0x0000000000057943: mov edx, 1; mov rax, r8; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000040851: mov edx, 1; mov rax, r8; syscall; 
0x000000000004bd58: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9d5: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004c15d: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000005b203: mov edx, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000056c08: mov edx, 1; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x000000000004bae4: mov edx, 2; mov eax, 0x13; syscall; 
0x0000000000057d5b: mov edx, 2; test eax, eax; cmovne eax, edx; pop rdx; ret; 
0x000000000004e65e: mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000004326a: mov edx, 4; mov rax, r8; syscall; 
0x000000000005abbc: mov edx, 4; xor eax, eax; syscall; 
0x0000000000058306: mov edx, 6; cmovg rax, rdx; mov byte ptr [rdi + rax], 0; ret; 
0x000000000004a5fe: mov edx, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e4: mov edx, 8; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023b67: mov edx, 8; mov eax, 0x121; syscall; 
0x0000000000057379: mov edx, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000004a8af: mov edx, 8; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000004a618: mov edx, 8; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x00000000000427ef: mov edx, dword ptr [0]; mov eax, 0xba; syscall; 
0x000000000004d670: mov edx, dword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000019a34: mov edx, dword ptr [r11 + 8]; mov dword ptr [r10 + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000043172: mov edx, dword ptr [r8 + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x00000000000197bf: mov edx, dword ptr [r8 + 8]; mov dword ptr [rdi + 8], edx; pop rbx; pop rbp; ret; 
0x000000000002397c: mov edx, dword ptr [rax + 0x10]; xor r8d, r8d; mov qword ptr [rsp + 0x18], rax; mov eax, 0x65; syscall; 
0x0000000000043173: mov edx, dword ptr [rax + 0x20]; or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x0000000000055c85: mov edx, dword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x00000000000197c0: mov edx, dword ptr [rax + 8]; mov dword ptr [rdi + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000054842: mov edx, dword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000026eb9: mov edx, dword ptr [rax]; mov qword ptr [rsi + 8], rax; mov qword ptr [rsi], rdx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x0000000000055a1a: mov edx, dword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000018f74: mov edx, dword ptr [rax]; test edx, edx; jne 0x18f70; sub rax, rdi; sar rax, 2; ret; 
0x000000000001917e: mov edx, dword ptr [rax]; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000004d5b6: mov edx, dword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x0000000000019a35: mov edx, dword ptr [rbx + 8]; mov dword ptr [r10 + 8], edx; pop rbx; pop rbp; ret; 
0x0000000000044b41: mov edx, dword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000044b53: mov edx, dword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000006faf6: mov edx, dword ptr [rdi + 0x62]; pop rdi; ret 0xce6c; 
0x000000000004cc0f: mov edx, dword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000049fc7: mov edx, dword ptr [rdi + 8]; test rdx, rdx; je 0x49fd2; mov qword ptr [rdx], rax; ret; 
0x0000000000059d81: mov edx, dword ptr [rdi - 0x49f0fffd]; ror byte ptr [rax + 0x63], cl; adc al, 0x91; add rcx, rdx; jmp rcx; 
0x0000000000025c71: mov edx, dword ptr [rsi + rdx*8]; lea rax, [rdx + 0x10]; test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000044b66: mov edx, dword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x00000000000238e3: mov edx, dword ptr [rsp + 0x28]; syscall; 
0x000000000003a9e9: mov edx, dword ptr [rsp + 0xc]; mov dword ptr [rbx], edx; add rsp, 0x10; pop rbx; ret; 
0x000000000003d8b9: mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000219f9: mov edx, dword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x00000000000264b0: mov edx, dword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x000000000005acb7: mov edx, dword ptr [rsp + 8]; syscall; 
0x000000000005b3ef: mov edx, dword ptr [rsp]; jne 0x5b3f6; xor edx, edx; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000039d2a: mov edx, dword ptr [rsp]; jns 0x39d31; xor edx, edx; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004ab9d: mov edx, dword ptr [rsp]; jns 0x4aba6; or rdx, 0xffffffffffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x000000000004a5d6: mov edx, dword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000003a7d6: mov edx, eax; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x00000000000233f6: mov edx, eax; jne 0x23407; test esi, esi; jne 0x23407; mov eax, 0x11c; syscall; 
0x000000000004b112: mov edx, eax; jne 0x4b1a6; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000004f181: mov edx, eax; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x00000000000506a5: mov edx, eax; lea rax, [rip + 0x42992]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000003d59e: mov edx, eax; mov eax, 3; syscall; 
0x0000000000038d04: mov edx, eax; mov eax, edx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000057e73: mov edx, eax; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000004f15e: mov edx, eax; mov r12d, eax; js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x0000000000057ef6: mov edx, eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x000000000003f224: mov edx, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000023405: mov edx, eax; movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x00000000000533c2: mov edx, eax; neg edx; test ecx, ecx; cmove eax, edx; ret; 
0x00000000000378ee: mov edx, eax; neg edx; xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x0000000000053417: mov edx, eax; neg rdx; test ecx, ecx; cmove rax, rdx; ret; 
0x0000000000042506: mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x00000000000423fb: mov edx, eax; shr rdx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000018e54: mov edx, eax; sub eax, edx; ret; 
0x0000000000022252: mov edx, eax; syscall; 
0x00000000000223cb: mov edx, eax; syscall; neg eax; ret; 
0x000000000005c673: mov edx, eax; xor eax, eax; call rdx; 
0x000000000002141a: mov edx, ebp; add rsp, 0x98; mov rax, rdx; pop rbx; pop rbp; ret; 
0x000000000003887a: mov edx, ebp; jne 0x388c3; mov rsi, rsp; mov eax, 0x61; mov rdi, r12; syscall; 
0x000000000004b07f: mov edx, ebp; mov eax, 0x10c; syscall; 
0x0000000000056781: mov edx, ebp; mov rax, r13; syscall; 
0x0000000000040825: mov edx, ebp; mov rdi, r12; syscall; 
0x0000000000038ef8: mov edx, ebp; mov rsi, qword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000004d904: mov edx, ebp; mov rsi, r13; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x00000000000407d3: mov edx, ebp; syscall; 
0x0000000000035507: mov edx, ebx; add eax, 0xde0d7700; ret 0xc9d9; 
0x00000000000229e7: mov edx, ebx; add rsp, 0x840; mov rax, rdx; pop rbx; ret; 
0x000000000003f73f: mov edx, ebx; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x00000000000233c6: mov edx, ebx; mov eax, 0xe8; syscall; 
0x00000000000233a9: mov edx, ebx; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000004b144: mov edx, ebx; syscall; 
0x0000000000023d45: mov edx, ecx; mov eax, 0xbf; syscall; 
0x0000000000023d57: mov edx, ecx; mov eax, 0xc0; syscall; 
0x0000000000057e76: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e76: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000023bca: mov edx, ecx; mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x000000000002332c: mov edx, ecx; mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x0000000000023d05: mov edx, ecx; movsxd rdi, edi; mov eax, 0x116; syscall; 
0x0000000000023927: mov edx, ecx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023912: mov edx, ecx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000023d69: mov edx, ecx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000023c6e: mov edx, ecx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023a2f: mov edx, ecx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x28; syscall; 
0x000000000002376c: mov edx, ecx; push rax; mov eax, 0xa5; syscall; 
0x0000000000023dae: mov edx, ecx; push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000023dc6: mov edx, ecx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000237aa: mov edx, ecx; push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023dde: mov edx, ecx; push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x00000000000239fb: mov edx, ecx; push rax; movsxd r8, r8d; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000023c2f: mov edx, ecx; push rax; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x00000000000226b7: mov edx, ecx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000004b355: mov edx, ecx; push rax; movsxd rdi, edi; mov edx, edx; mov eax, 0x103; syscall; 
0x000000000005b264: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x0000000000023d2a: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x00000000000239af: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x0000000000023454: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023c9e: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238f7: mov edx, ecx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x0000000000021954: mov edx, ecx; syscall; 
0x000000000005336a: mov edx, edi; mov eax, edi; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x000000000004a5fb: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e1: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005366d: mov edx, edi; mov rax, rdi; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x000000000003c5be: mov edx, edi; mov rax, rdx; je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x0000000000023350: mov edx, edi; syscall; 
0x000000000004b316: mov edx, edx; mov eax, 0x102; syscall; 
0x000000000004b35b: mov edx, edx; mov eax, 0x103; syscall; 
0x000000000005acd6: mov edx, edx; mov eax, 0x104; syscall; 
0x000000000004afbd: mov edx, edx; mov eax, 0x10c; syscall; 
0x000000000003b4b7: mov edx, edx; mov eax, 0x31; syscall; 
0x000000000005a923: mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005ac69: mov edx, edx; mov eax, 0x5d; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x000000000005af60: mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023548: mov edx, edx; mov eax, 0xfe; syscall; 
0x000000000004bc7e: mov edx, edx; mov rsi, r9; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x00000000000223be: mov edx, edx; movsxd rdi, edi; xor esi, esi; mov eax, 0x11d; mov rdx, r8; syscall; 
0x000000000001baeb: mov edx, edx; or rdx, rax; mov qword ptr [rsp], rdx; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000023731: mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x0000000000022209: mov edx, edx; syscall; 
0x000000000002229e: mov edx, edx; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000038832: mov edx, esi; mov eax, 0x12e; mov rsi, r12; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000003c5a9: mov edx, esi; mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x0000000000054573: mov edx, esi; push rax; movsxd rdi, edi; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000545c1: mov edx, esi; push rax; movsxd rdi, edi; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000016f71: mov edx, esi; sub rsp, 8; xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x0000000000049c56: mov edx, esi; syscall; 
0x00000000000221ef: mov edx, esp; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000004d4ca: mov edx, esp; mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000001b2da: mov edx, esp; movsxd rdi, dword ptr [rsp + 0x10]; movsxd rsi, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000004ac88: mov edx, esp; syscall; 
0x000000000004d4c9: mov edx, r12d; mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000007dccb: mov es, edi; xchg eax, ecx; imul ebx, dword ptr [rdi - 0x24], 0x10852183; cdq; ret 0x9553; 
0x000000000005a982: mov es, word ptr [r11]; add bl, al; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x0000000000057319: mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005a983: mov es, word ptr [rbx]; add bl, al; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000005a977: mov es, word ptr [rbx]; add cl, ch; sar r11b, cl; dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x000000000001968b: mov es, word ptr [rcx + rdi - 0x40]; jne 0x196a0; cmp rcx, rdx; jne 0x19680; xor eax, eax; ret; 
0x00000000000326fd: mov esi, 0; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0xff2; 
0x00000000000221f1: mov esi, 0x10; mov rax, r8; syscall; 
0x000000000002303e: mov esi, 0x11; call 0x4c902; mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x00000000000569a9: mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000055b88: mov esi, 0x18; xor edi, edi; mov eax, 0x111; syscall; 
0x000000000005a525: mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000550df: mov esi, 0x21; mov eax, 0xc8; syscall; 
0x00000000000550df: mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x0000000000057bc9: mov esi, 0x22; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000239df: mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000000462ff: mov esi, 0x30ea8310; cmp edx, 9; ja 0x46311; cmp ecx, 0xff; jle 0x462ef; ret; 
0x0000000000055912: mov esi, 0x39002427; ret; 
0x000000000009214b: mov esi, 0x3fe844cb; ret 0x49d6; 
0x000000000002223c: mov esi, 0x406; mov rax, r9; syscall; 
0x000000000001cdb3: mov esi, 0x4c110ff3; and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000005b462: mov esi, 0x5410; call 0x389c1; add rsp, 0x18; ret; 
0x000000000005af21: mov esi, 0x5413; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x000000000004b702: mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000545c7: mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000023cfe: mov esi, 0x5affff2c; ret; 
0x000000000008d8b5: mov esi, 0x60003fe7; adc byte ptr [r10 + 0x18], sil; sar dword ptr [rdi], cl; ret 0x9725; 
0x00000000000894de: mov esi, 0x705c06fd; ret 0x470d; 
0x000000000003cda9: mov esi, 0x74dfa802; adc byte ptr [rbx - 0x77cf618], al; add al, 0x76; or byte ptr [rax - 1], cl; ret 0xeceb; 
0x0000000000060532: mov esi, 0x7632d8c5; ret; 
0x000000000002196c: mov esi, 0x8002; test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x00000000000392cb: mov esi, 0x80045430; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000004f144: mov esi, 0x80c2; mov eax, 2; mov rdi, rbp; syscall; 
0x0000000000055bb9: mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b96d: mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x0000000000056dbe: mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acde: mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054fa4: mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x000000000004c208: mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb3: mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x000000000001aca9: mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000055755: mov esi, 0x83; mov rax, rbp; syscall; 
0x000000000004b815: mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000057e9b: mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x000000000005066b: mov esi, 0x8945ff40; ret; 
0x000000000008adfd: mov esi, 0x97a40031; ret; 
0x000000000004c0bc: mov esi, 0x9ffffff; ret; 
0x0000000000004eaf: mov esi, 0xb5fbf0cf; push rcx; jns 0x4ebe; ret; 
0x00000000000740b6: mov esi, 0xbc5abd5a; pop rdx; mov bl, 0x5a; ret 0xb25a; 
0x00000000000625fb: mov esi, 0xbf597fc7; ret 0xa88f; 
0x0000000000004270: mov esi, 0xc0000005; add eax, 0x5c10000; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000088e58: mov esi, 0xc005bf05; add eax, 0x5c205c1; ret; 
0x00000000000795fa: mov esi, 0xc050bf50; push rax; rcl dword ptr [rax - 0x3e], 0x50; ret; 
0x0000000000079cf6: mov esi, 0xc056bf56; push rsi; rcl dword ptr [rsi - 0x3e], 0x56; ret; 
0x0000000000079fae: mov esi, 0xc058bf58; pop rax; ret 0xc358; 
0x000000000007a684: mov esi, 0xc05dbf5d; pop rbp; rcr dword ptr [rbp - 0x3e], 0x5d; ret; 
0x00000000000657ab: mov esi, 0xc06ebf6d; outsd dx, dword ptr [rsi]; sal dword ptr [rax - 0x3e], 0x7e; ret; 
0x000000000007bc56: mov esi, 0xc06ebf6e; outsb dx, byte ptr [rsi]; ret; 
0x000000000004d6b1: mov esi, 0xc0; ret; 
0x0000000000079752: mov esi, 0xc151bf51; push rcx; ret 0xc351; 
0x000000000007bdcc: mov esi, 0xc16fbf6f; outsd dx, dword ptr [rsi]; ret; 
0x000000000007a4e6: mov esi, 0xc25cc05c; pop rsp; ret; 
0x000000000007bb06: mov esi, 0xc26dc16d; insd dword ptr [rdi], dx; ret; 
0x000000000003a844: mov esi, 0xdfff25c7; add byte ptr [rax], al; ret; 
0x00000000000887f4: mov esi, 0xf695ca95; outsd dx, dword ptr [rsi]; ret; 
0x00000000000559c9: mov esi, 1; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005597a: mov esi, 1; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004af66: mov esi, 1; mov eax, 0x48; syscall; 
0x00000000000595f4: mov esi, 1; mov eax, esi; ret; 
0x0000000000054d2a: mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552cc: mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a7: mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000001acee: mov esi, 1; mov rax, r8; syscall; 
0x0000000000056d40: mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000056feb: mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001acb9: mov esi, 1; mov rax, r9; syscall; 
0x0000000000054d60: mov esi, 1; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004314f: mov esi, 1; syscall; 
0x000000000003c5ab: mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x000000000004a446: mov esi, 2; jmp rax; 
0x000000000005aa20: mov esi, 2; mov eax, 0x48; mov rdi, r8; syscall; 
0x0000000000022325: mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004084c: mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000022289: mov esi, 2; mov rax, r9; syscall; 
0x000000000004b6b0: mov esi, 3; mov rax, r8; syscall; 
0x0000000000055765: mov esi, 3; mov rax, rbp; syscall; 
0x000000000004eb96: mov esi, 4; call 0x4d924; add rsp, 0x18; dec eax; ret; 
0x0000000000023bb6: mov esi, 4; mov eax, 0x48; syscall; 
0x0000000000040875: mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004b6c2: mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004d347: mov esi, 4; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x0000000000056c82: mov esi, 6; mov eax, 0xca; syscall; 
0x000000000004abf0: mov esi, 8; push rax; mov eax, 0x7f; syscall; 
0x0000000000022200: mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000023aa3: mov esi, 9; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000044757: mov esi, dword ptr [r15]; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000005aa7f: mov esi, dword ptr [rax + 8]; xor r10d, r10d; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x00000000000444d4: mov esi, dword ptr [rax]; cmp esi, 2; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000445a5: mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000043228: mov esi, dword ptr [rbp + 0xa0]; mov rdi, qword ptr [r13 + 0x88]; call rax; 
0x0000000000023a83: mov esi, dword ptr [rbx + 8]; syscall; 
0x00000000000817eb: mov esi, dword ptr [rbx + rcx*4 - 0x7448744b]; ret 0xc38b; 
0x000000000005f672: mov esi, dword ptr [rcx - 0x12]; adc rax, 0x54a41d82; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x00000000000715b7: mov esi, dword ptr [rdi + 0x15]; sbb dword ptr [rsi], edx; ret; 
0x000000000004a5a7: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000044758: mov esi, dword ptr [rdi]; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000238de: mov esi, dword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x28]; syscall; 
0x0000000000038efb: mov esi, dword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000003a3f4: mov esi, dword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000004cb3d: mov esi, eax; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005a60a: mov esi, eax; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x0000000000022276: mov esi, eax; mov rdx, r10; syscall; 
0x000000000004b141: mov esi, eax; mov rdx, rbx; syscall; 
0x0000000000021f27: mov esi, eax; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a9f3: mov esi, eax; syscall; 
0x00000000000590d7: mov esi, ebp; mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000004d907: mov esi, ebp; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004d4d5: mov esi, ebp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000049c0c: mov esi, ebp; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x000000000004f0da: mov esi, ebp; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000003a5f2: mov esi, ebp; syscall; 
0x00000000000389b1: mov esi, ebx; call 0x23ab9; add rsp, 0x90; pop rbx; ret; 
0x00000000000591f5: mov esi, ebx; call 0x58f51; add rsp, 0x40; pop rbx; ret; 
0x000000000005db5c: mov esi, ebx; mov rdi, r12; call rax; 
0x000000000005acb4: mov esi, ebx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x0000000000024a7b: mov esi, ebx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000004af51: mov esi, ebx; sub rsp, 0x28; syscall; 
0x000000000004af8f: mov esi, ebx; syscall; 
0x0000000000042970: mov esi, ecx; call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042ba3: mov esi, ecx; call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000052ecd: mov esi, ecx; call 0x50c60; add rsp, 0x108; ret; 
0x000000000004bc81: mov esi, ecx; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x000000000004b53d: mov esi, ecx; mov rdx, r8; syscall; 
0x0000000000054f17: mov esi, ecx; mov rdx, rbx; syscall; 
0x000000000004b5cb: mov esi, ecx; syscall; 
0x000000000003970f: mov esi, edi; jg 0x39723; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x00000000000230f1: mov esi, edi; mov ecx, 0x100; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x0000000000057e07: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x0000000000057e07: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x000000000005ac40: mov esi, edi; mov rdi, rbx; call 0x16820; mov eax, 0x50; mov rdi, rbx; syscall; 
0x00000000000419b8: mov esi, edi; xor edi, edi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005b7b2: mov esi, edx; add rsp, 0x190; jmp rax; 
0x000000000005bbb2: mov esi, edx; call 0x227b5; add rsp, 0xd8; ret; 
0x000000000004b5e2: mov esi, edx; syscall; 
0x000000000004ea4f: mov esi, edx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db93: mov esi, edx; syscall; mov eax, r8d; pop rdx; ret; 
0x000000000004b984: mov esi, edx; syscall; ret; 
0x000000000005795d: mov esi, edx; syscall; xor eax, eax; ret; 
0x0000000000045040: mov esi, esi; call 0x44ea2; pop rdx; ret; 
0x0000000000023471: mov esi, esi; mov eax, 0x12c; syscall; 
0x000000000002348b: mov esi, esi; mov eax, 0x12d; syscall; 
0x00000000000387df: mov esi, esi; mov eax, 0x8c; syscall; 
0x000000000004315e: mov esi, esi; movsxd rdx, eax; mov rax, r12; syscall; 
0x00000000000396f4: mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x0000000000023714: mov esi, esi; push rax; mov eax, 0x13f; syscall; 
0x000000000004b2fe: mov esi, esi; push rax; mov eax, 0x53; syscall; 
0x000000000004af30: mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000004b340: mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x0000000000023757: mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000005a920: mov esi, esi; push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005af5d: mov esi, esi; push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x00000000000562d9: mov esi, esi; syscall; 
0x0000000000056bb0: mov esi, esp; lea rdi, [rbp + 4]; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x000000000003887f: mov esi, esp; mov eax, 0x61; mov rdi, r12; syscall; 
0x0000000000057ebc: mov esi, esp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000004bae2: mov esi, esp; mov edx, 2; mov eax, 0x13; syscall; 
0x0000000000022e0e: mov esi, esp; mov qword ptr [rsp + 0x18], rax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004b05b: mov esi, esp; mov rdx, r13; syscall; 
0x000000000004f1ed: mov esi, esp; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x000000000003883a: mov esi, esp; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000004b917: mov esi, esp; syscall; 
0x0000000000056baf: mov esi, r12d; lea rdi, [rbp + 4]; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000037a5f: mov esp, 0x1478dff; ret; 
0x000000000003cdd4: mov esp, 0x1a824; add byte ptr [rax - 1], cl; ret 0x3fe8; 
0x000000000008db2f: mov esp, 0x1c593352; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x0000000000021eb3: mov esp, 0x48ffffff; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000008bd07: mov esp, 0x5bd71e09; ret 0xef12; 
0x000000000005adab: mov esp, 0x8948fffb; ret 0xc031; 
0x000000000008cd0f: mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x00000000000887ee: mov esp, 0xb995bb95; xchg eax, ebp; mov esi, 0xf695ca95; outsd dx, dword ptr [rsi]; ret; 
0x0000000000079498: mov esp, 0xbe4fbd4f; ror byte ptr [r15 - 0x3f], 0x4f; ret 0xc64f; 
0x00000000000795f6: mov esp, 0xbe50bd50; push rax; mov edi, 0xc150c050; push rax; ret 0xc350; 
0x000000000007a680: mov esp, 0xbe5dbd5d; pop rbp; mov edi, 0xc15dc05d; pop rbp; ret 0xc35d; 
0x000000000007b42c: mov esp, 0xbe68bd68; push 0x68c168bf; ret; 
0x000000000007b8e2: mov esp, 0xbe6bbd6b; imul eax, eax, 0x6b; ret; 
0x000000000007bb02: mov esp, 0xbe6dbd6d; insd dword ptr [rdi], dx; shr dword ptr [rbp - 0x3e], 0x6d; ret; 
0x00000000000821fe: mov esp, 0xbe91bd91; xchg eax, ecx; mov edi, 0xc191c091; xchg eax, ecx; ret 0xc391; 
0x000000000008261a: mov esp, 0xbe92bd92; xchg eax, edx; mov edi, 0xc192c092; xchg eax, edx; ret 0xc392; 
0x000000000008298a: mov esp, 0xbe93bd93; xchg eax, ebx; mov edi, 0xc193c093; xchg eax, ebx; ret 0xc393; 
0x0000000000082e00: mov esp, 0xbe95bd95; xchg eax, ebp; mov edi, 0xc195c095; xchg eax, ebp; ret 0xc395; 
0x000000000008337e: mov esp, 0xbe97bd97; xchg eax, edi; mov edi, 0xc197c097; xchg eax, edi; ret 0xc397; 
0x0000000000083688: mov esp, 0xbe98bd98; cwde; mov edi, 0xc198c098; cwde; ret 0xc398; 
0x0000000000083984: mov esp, 0xbe99bd99; cdq; mov edi, 0xc199c099; cdq; ret 0xc399; 
0x0000000000083fb0: mov esp, 0xbe9bbd9b; wait; mov edi, 0xc19bc09b; wait; ret 0xc39b; 
0x00000000000846ce: mov esp, 0xbe9dbd9d; popfq; mov edi, 0xc19dc09d; popfq; ret 0xc39d; 
0x000000000007a0f2: mov esp, 0xbf59bd59; pop rcx; rcr byte ptr [rcx - 0x3f], 0x59; ret 0xc359; 
0x000000000007a7b6: mov esp, 0xbf5ebd5e; pop rsi; rcr byte ptr [rsi - 0x3f], 0x5e; ret 0xc35e; 
0x000000000007b1be: mov esp, 0xbf66bd66; shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x0000000000079b96: mov esp, 0xc055bf55; push rbp; rcl dword ptr [rbp - 0x3e], 0x55; ret; 
0x000000000007a4e4: mov esp, 0xc05cbe5c; pop rsp; ret 0xc35c; 
0x000000000001f4de: mov esp, 0xc1000000; ret 0x410f; 
0x000000000007a3bc: mov esp, 0xc15bc05b; pop rbx; ret; 
0x0000000000087486: mov esp, 0xcb5abe5a; pop rdx; ret 0xbd5a; 
0x000000000003335c: mov esp, 0xff3ffff; sub al, al; pop rax; ret; 
0x0000000000070f2b: mov esp, ds; jge 0x70ec9; pop rcx; ret; 
0x000000000004a59f: mov esp, dword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004a5af: mov esp, dword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000008cd11: mov esp, dword ptr [rdx]; popfq; lcall [rdi - 0x5dc9c013]; sysenter; 
0x00000000000817e5: mov esp, dword ptr [rsi - 0x55745875]; mov esi, dword ptr [rbx + rcx*4 - 0x7448744b]; ret 0xc38b; 
0x000000000004f161: mov esp, eax; js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000004bfa1: mov esp, eax; mov rdi, rbx; call 0x4c07e; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000005e573: mov esp, ebx; jmp rax; 
0x00000000000913ec: mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x0000000000087bc6: mov gs, word ptr [rdi - 0x6f]; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x0000000000078a79: mov gs, word ptr [rdi - 0x72]; jnp 0x78a0c; ret 0x528e; 
0x0000000000052e24: mov qword ptr [r12 + 0x28], rax; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000003af50: mov qword ptr [r12], rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005c7c6: mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000005827c: mov qword ptr [r8], rax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x0000000000056997: mov qword ptr [r9 + 0x90], -0x1c; lea rdi, [r9 + 0x88]; mov esi, 0x18; mov eax, 0x111; syscall; 
0x0000000000021aa6: mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x000000000005be46: mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000055c8c: mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000055c9e: mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004d6a8: mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000049fb1: mov qword ptr [rax + 8], rdi; ret; 
0x0000000000021cfc: mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000004dfaa: mov qword ptr [rax], rbx; call 0x4df82; mov rax, rbx; pop rbx; ret; 
0x0000000000026ec6: mov qword ptr [rax], rsi; ret; 
0x000000000004e37a: mov qword ptr [rbp + 0x10], rax; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000004348a: mov qword ptr [rbp + 8], rbx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000057efd: mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x00000000000450aa: mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003c62b: mov qword ptr [rbp], rbx; pop r9; pop rbx; pop rbp; ret; 
0x0000000000026475: mov qword ptr [rbp], rdx; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000018253: mov qword ptr [rbp], rdx; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004bcec: mov qword ptr [rbx + 0x10], rdx; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x0000000000021797: mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x00000000000593ba: mov qword ptr [rbx + 0x28], 0; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x000000000004d4cc: mov qword ptr [rbx + 0x28], 0; mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x00000000000593c2: mov qword ptr [rbx + 0x30], rax; mov rax, rbx; pop rbx; ret; 
0x000000000004b44e: mov qword ptr [rbx + 0x50], rax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000005c592: mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000055a24: mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000044b31: mov qword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004d507: mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000059372: mov qword ptr [rbx + 8], rax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000054b7e: mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x0000000000023245: mov qword ptr [rbx + 8], rax; xor edx, edx; add rsp, 0xd0; mov eax, edx; pop rbx; ret; 
0x000000000004352b: mov qword ptr [rbx + 8], rcx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000057109: mov qword ptr [rbx + 8], rdx; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000004bcf0: mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x00000000000434d8: mov qword ptr [rbx + 8], rdx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000039da1: mov qword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x0000000000049e72: mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000005a13e: mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000004c349: mov qword ptr [rbx], rax; xor edx, edx; mov eax, edx; pop rbx; ret; 
0x0000000000057106: mov qword ptr [rbx], rsi; mov qword ptr [rbx + 8], rdx; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000004e0df: mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x0000000000026a46: mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000004c8fa: mov qword ptr [rcx], rax; add rsp, 0x28; ret; 
0x000000000004bf41: mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000054c2d: mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x0000000000055c88: mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000054c0d: mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000004bd36: mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000004bf39: mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004bd2e: mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000002051b: mov qword ptr [rdi + 0x30], rax; movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004a5d1: mov qword ptr [rdi + 0x30], rdx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004bd2a: mov qword ptr [rdi + 0x38], rax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000020529: mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004a5d9: mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000020537: mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004d750: mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000005ba4c: mov qword ptr [rdi + 0x88], rdx; pop rbp; ret; 
0x00000000000168e2: mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000004d69f: mov qword ptr [rdi + 0xd8], rax; je 0x4d6af; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000049f8c: mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004bf49: mov qword ptr [rdi + 8], 0; ret; 
0x0000000000043624: mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x0000000000053e71: mov qword ptr [rdi + 8], rax; mov al, byte ptr [rcx]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x0000000000053738: mov qword ptr [rdi + 8], rax; ret; 
0x00000000000536f3: mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000004c261: mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000054baf: mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x00000000000541ff: mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000541fa: mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000541f5: mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000541f0: mov qword ptr [rdi + rdx - 0x3f], rax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x0000000000049f94: mov qword ptr [rdi], 0; ret; 
0x000000000004aa47: mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000033548: mov qword ptr [rdi], rax; ret; 
0x000000000004aa0f: mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000053735: mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000050e00: mov qword ptr [rdi], rdx; ret; 
0x0000000000054c08: mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000026ed1: mov qword ptr [rdi], rsi; ret; 
0x0000000000054c35: mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x000000000004cf80: mov qword ptr [rdx + 0x28], rsi; mov byte ptr [rcx], dil; ret; 
0x000000000004dfa6: mov qword ptr [rdx + 0x68], rbx; mov qword ptr [rax], rbx; call 0x4df82; mov rax, rbx; pop rbx; ret; 
0x00000000000550d3: mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004d677: mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004d666: mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000004f5d4: mov qword ptr [rdx + 8], rcx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5ed: mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a8: mov qword ptr [rdx + 8], rcx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000026ec2: mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x0000000000055375: mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000043d26: mov qword ptr [rdx], 0; xor eax, eax; ret; 
0x0000000000043d68: mov qword ptr [rdx], 1; movsx eax, byte ptr [rdi]; ret; 
0x0000000000049fcf: mov qword ptr [rdx], rax; ret; 
0x0000000000054af0: mov qword ptr [rdx], rax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x000000000005735f: mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005da22: mov qword ptr [rip + 0x23a4bb], 0; pop rax; ret; 
0x000000000005c58b: mov qword ptr [rip + 0x23b9a6], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005be4a: mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x000000000005ba93: mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000004eae3: mov qword ptr [rip + 0x24685e], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000004eaaa: mov qword ptr [rip + 0x246897], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000004dc0b: mov qword ptr [rip + 0x247616], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbe0: mov qword ptr [rip + 0x247641], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000424cc: mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x00000000000424af: mov qword ptr [rip + 0x2559a2], rax; ret; 
0x000000000004192f: mov qword ptr [rip + 0x25650e], 0; ret; 
0x0000000000041922: mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000040f3c: mov qword ptr [rip + 0x256ee9], 0; ret; 
0x0000000000040f2f: mov qword ptr [rip + 0x256ef6], 0; pop rdx; ret; 
0x0000000000027839: mov qword ptr [rip + 0x26e638], rax; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000023048: mov qword ptr [rip + 0x274d51], rax; pop rax; ret; 
0x0000000000022ff5: mov qword ptr [rip + 0x274da0], 0; ret; 
0x0000000000022fe8: mov qword ptr [rip + 0x274dad], 0; pop rdx; ret; 
0x0000000000021d00: mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000021cf1: mov qword ptr [rip + 0x276080], rax; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x0000000000018912: mov qword ptr [rip + 0x27f55f], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000561fc: mov qword ptr [rsi + 0x10], rax; mov rax, qword ptr [rdx + 0x60]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000004d6af: mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000026ebb: mov qword ptr [rsi + 8], rax; mov qword ptr [rsi], rdx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x0000000000026eca: mov qword ptr [rsi + 8], rsi; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x000000000005b7ef: mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000054ab5: mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000054af5: mov qword ptr [rsi], rcx; ret; 
0x0000000000057e47: mov qword ptr [rsi], rcx; syscall; 
0x0000000000049fa6: mov qword ptr [rsi], rdi; mov rax, qword ptr [rdi]; test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x0000000000026ebf: mov qword ptr [rsi], rdx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x000000000004bf7a: mov qword ptr [rsi], rdx; ret; 
0x0000000000026ece: mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x00000000000389dd: mov qword ptr [rsp + 0x10], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x000000000001b71c: mov qword ptr [rsp + 0x10], rax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000004370a: mov qword ptr [rsp + 0x110], rax; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x0000000000022916: mov qword ptr [rsp + 0x18], rax; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c0d: mov qword ptr [rsp + 0x18], rax; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022ca1: mov qword ptr [rsp + 0x18], rax; call 0x22b0e; add rsp, 0xd8; ret; 
0x000000000002688c: mov qword ptr [rsp + 0x18], rax; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cdb: mov qword ptr [rsp + 0x18], rax; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000005b58a: mov qword ptr [rsp + 0x18], rax; call 0x4a796; imul eax, dword ptr [rsp + 0x30], 0xf4240; add eax, dword ptr [rsp + 0x38]; add rsp, 0x48; ret; 
0x0000000000022e10: mov qword ptr [rsp + 0x18], rax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004bdf0: mov qword ptr [rsp + 0x18], rax; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea6: mov qword ptr [rsp + 0x18], rax; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce85: mov qword ptr [rsp + 0x18], rax; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d47c: mov qword ptr [rsp + 0x18], rax; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d869: mov qword ptr [rsp + 0x18], rax; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1e: mov qword ptr [rsp + 0x18], rax; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca5: mov qword ptr [rsp + 0x18], rax; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edba: mov qword ptr [rsp + 0x18], rax; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee49: mov qword ptr [rsp + 0x18], rax; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed8: mov qword ptr [rsp + 0x18], rax; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef62: mov qword ptr [rsp + 0x18], rax; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004eff1: mov qword ptr [rsp + 0x18], rax; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c4: mov qword ptr [rsp + 0x18], rax; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053358: mov qword ptr [rsp + 0x18], rax; call 0x53230; add rsp, 0xd8; ret; 
0x000000000005a419: mov qword ptr [rsp + 0x18], rax; lea rsi, [rsp + 0x18]; mov eax, 0xe; mov rdx, rdi; syscall; 
0x00000000000389e7: mov qword ptr [rsp + 0x18], rax; mov eax, 0x10; syscall; 
0x0000000000023982: mov qword ptr [rsp + 0x18], rax; mov eax, 0x65; syscall; 
0x000000000001b2e5: mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000022653: mov qword ptr [rsp + 0x18], rax; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x42; syscall; 
0x000000000003a36f: mov qword ptr [rsp + 0x38], rax; movsxd r10, ebx; mov eax, 0x19; syscall; 
0x0000000000055d67: mov qword ptr [rsp + 0x40], rax; mov edi, 1; mov eax, 0xe; mov rdx, rbx; syscall; 
0x0000000000052f98: mov qword ptr [rsp + 0x48], rax; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000001adce: mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000005320c: mov qword ptr [rsp + 0x60], rax; call 0x524d5; add rsp, 0x1f8; ret; 
0x000000000003a6c7: mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x0000000000021f39: mov qword ptr [rsp + 8], 0x20; lea rsi, [rsp + 8]; mov eax, 0xe; syscall; 
0x0000000000057e82: mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e82: mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000023b51: mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000005b5f0: mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x000000000003780e: mov qword ptr [rsp + 8], rax; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001caec: mov qword ptr [rsp + 8], rax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000002ea2b: mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000042434: mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002d19c: mov qword ptr [rsp + 8], rax; movsd xmm1, qword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000004a827: mov qword ptr [rsp + 8], rax; xor edx, edx; mov eax, 0xe; syscall; 
0x000000000005ac86: mov qword ptr [rsp + 8], rdx; mov esi, 1; mov eax, 0x48; syscall; 
0x000000000003af5f: mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b36f: mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x0000000000050e79: mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000019c47: mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000001cb98: mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000002b9ba: mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002e87e: mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000033581: mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x00000000000357c2: mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000023bf9: mov qword ptr [rsp], rax; call 0x23b19; add rsp, 0x18; ret; 
0x000000000005b5e6: mov qword ptr [rsp], rax; imul eax, edx, 0x3e8; mov qword ptr [rsp + 8], rax; call 0x594ec; add rsp, 0x18; ret; 
0x000000000001bd9e: mov qword ptr [rsp], rbx; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b651: mov qword ptr [rsp], rbx; movq xmm0, qword ptr [rsp]; add rsp, 0x30; pop rbx; ret; 
0x0000000000023b4d: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x000000000001baf0: mov qword ptr [rsp], rdx; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000003a3e5: mov qword ptr [rsp], rsi; call 0x57d91; mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000026ed0: mov qword ptr ss:[rdi], rsi; ret; 
0x0000000000057e75: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e75: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000004b111: mov r10, rax; jne 0x4b1a6; mov esi, 1; mov eax, 0x48; syscall; 
0x0000000000056780: mov r10, rbp; mov rax, r13; syscall; 
0x00000000000233c5: mov r10, rbx; mov eax, 0xe8; syscall; 
0x00000000000233a8: mov r10, rbx; mov r9d, 8; mov eax, 0x119; syscall; 
0x0000000000023d44: mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000000023d56: mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000000023bc9: mov r10, rcx; mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x000000000002332b: mov r10, rcx; mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x0000000000023926: mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023911: mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000023d68: mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000023a2e: mov r10, rcx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x28; syscall; 
0x000000000002376b: mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x0000000000023dad: mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000023dc5: mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000237a9: mov r10, rcx; push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023ddd: mov r10, rcx; push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x00000000000239fa: mov r10, rcx; push rax; movsxd r8, r8d; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x00000000000226b6: mov r10, rcx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000004b354: mov r10, rcx; push rax; movsxd rdi, edi; mov edx, edx; mov eax, 0x103; syscall; 
0x000000000005b263: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x0000000000023d29: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x00000000000239ae: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x0000000000023453: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023c9d: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238f6: mov r10, rcx; push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x000000000003c5bd: mov r10, rdi; mov rax, rdx; je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x00000000000223bd: mov r10, rdx; movsxd rdi, edi; xor esi, esi; mov eax, 0x11d; mov rdx, r8; syscall; 
0x0000000000038831: mov r10, rsi; mov eax, 0x12e; mov rsi, r12; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000004b135: mov r10d, 0x1000; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x000000000004aff0: mov r10d, 0x100; mov rax, r14; mov rdx, r13; syscall; 
0x0000000000058e6c: mov r10d, 0x5180d269; add dword ptr [rax], eax; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x000000000005b202: mov r10d, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000004a5fd: mov r10d, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e3: mov r10d, 8; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000057378: mov r10d, 8; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000004a8ae: mov r10d, 8; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000004a617: mov r10d, 8; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000023d04: mov r10d, ecx; movsxd rdi, edi; mov eax, 0x116; syscall; 
0x0000000000023c6d: mov r10d, ecx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023c2e: mov r10d, ecx; push rax; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x000000000004ae79: mov r11d, 0x5d5bfffc; pop r12; ret; 
0x000000000004a59e: mov r12, qword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004f160: mov r12d, eax; js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000004bfa0: mov r12d, eax; mov rdi, rbx; call 0x4c07e; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000004a5a2: mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004cb87: mov r13, rsi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x0000000000005307: mov r13b, 0x1a; fimul word ptr [rbx]; jl 0x5375; jle 0x5308; jmp rdi; 
0x000000000004a5a6: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004a5aa: mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x00000000000920cd: mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x00000000000262a3: mov r15d, r15d; movsxd rax, dword ptr [r14 + r15*4]; add rax, r14; jmp rax; 
0x0000000000057e78: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e78: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000023b92: mov r8, r10; je 0x23ba8; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000055750: mov r8, rbx; xor edx, edx; mov esi, 0x83; mov rax, rbp; syscall; 
0x000000000005aa39: mov r8, rdi; mov eax, 0x6c; syscall; 
0x0000000000059066: mov r8, rsi; mov eax, 0xe5; lea edx, [rdi*8 + 2]; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000023b7c: mov r8d, 0x11a; syscall; 
0x000000000005a99c: mov r8d, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000024893: mov r8d, 0x2ebe; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx - 0x77]; ret 0x8948; 
0x00000000000221e8: mov r8d, 0x48; mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000040843: mov r8d, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000004086c: mov r8d, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004b6a7: mov r8d, 0x48; movsxd rdi, ebp; mov esi, 3; mov rax, r8; syscall; 
0x0000000000056db3: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd3: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000055bae: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b962: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a1: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000559c3: mov r8d, 0xca; mov esi, 1; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055974: mov r8d, 0xca; mov esi, 1; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d24: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552c6: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a1: mov r8d, 0xca; mov esi, 1; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5a: mov r8d, 0xca; mov esi, 1; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055683: mov r8d, 0xca; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000056fd1: mov r8d, 0xca; movsxd rdx, edx; or esi, 1; mov rax, r8; movsxd rsi, esi; syscall; 
0x0000000000043261: mov r8d, 1; movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x000000000005ab99: mov r8d, eax; mov eax, 3; syscall; 
0x000000000004b088: mov r8d, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000039831: mov r9, qword ptr [rcx]; syscall; 
0x0000000000039831: mov r9, qword ptr [rcx]; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000057e7d: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e7d: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000057e3c: mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000005a9e6: mov r9d, 0x124; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x0000000000022236: mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x0000000000054f99: mov r9d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x000000000004c1fd: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054ea8: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x00000000000560d7: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x00000000000233ab: mov r9d, 8; mov eax, 0x119; syscall; 
0x0000000000023bcc: mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x000000000002332e: mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x0000000000049c19: mov rax, -0x26; pop rbx; pop rbp; ret; 
0x0000000000055111: mov rax, -0x7d; pop rdx; ret; 
0x0000000000022711: mov rax, -1; cmovs rsi, rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000004aa36: mov rax, -2; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x000000000005519c: mov rax, -4; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004aeb2: mov rax, 0xf; syscall; 
0x0000000000021e66: mov rax, qword ptr [0]; add rax, 0x34; ret; 
0x0000000000023506: mov rax, qword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021a9e: mov rax, qword ptr [0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c96: mov rax, qword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005701c: mov rax, qword ptr [0]; ret; 
0x0000000000055a20: mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000056320: mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000022988: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000005db50: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x239de5]; mov rsi, rbx; mov rdi, r12; call rax; 
0x0000000000022971: mov rax, qword ptr [rax + 8]; ret; 
0x0000000000056329: mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000004f5ac: mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000050e7e: mov rax, qword ptr [rax]; ret; 
0x0000000000044b68: mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000054a03: mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x54a0e; call rax; 
0x000000000004ba4c: mov rax, qword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x000000000005529a: mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x00000000000549e2: mov rax, qword ptr [rbx]; test rax, rax; je 0x549ec; call rax; 
0x000000000004b5f5: mov rax, qword ptr [rdi + 0x18]; jmp rax; 
0x0000000000026fc6: mov rax, qword ptr [rdi + 0x20]; test rax, -0x1000; je 0x26fdd; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027455: mov rax, qword ptr [rdi + 0x20]; test rax, -0x1000; je 0x2746c; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000004bf1e: mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004bca5: mov rax, qword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x4bcb6; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004bf10: mov rax, qword ptr [rdi + 0x60]; ret; 
0x000000000001ae4d: mov rax, qword ptr [rdi + 0x78]; ret; 
0x0000000000054845: mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000005b7eb: mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000054ab1: mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000054af9: mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000044b62: mov rax, qword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000002171f: mov rax, qword ptr [rdi]; ret; 
0x000000000004ab49: mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000054aea: mov rax, qword ptr [rdi]; sub rcx, rax; mov qword ptr [rdx], rax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000049fa9: mov rax, qword ptr [rdi]; test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004cc15: mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000056200: mov rax, qword ptr [rdx + 0x60]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000004f5cc: mov rax, qword ptr [rdx + 8]; lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; fld qword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000004f5a0: mov rax, qword ptr [rdx + 8]; lea rcx, [rax + 8]; mov qword ptr [rdx + 8], rcx; mov rax, qword ptr [rax]; mov qword ptr [rdi], rax; ret; 
0x0000000000044b5d: mov rax, qword ptr [rdx + rax*8]; ret; 
0x00000000000590ed: mov rax, qword ptr [rip + 0x23c37c]; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000004253e: mov rax, qword ptr [rip + 0x252eeb]; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000003d4dd: mov rax, qword ptr [rip + 0x257ac4]; ret; 
0x000000000002309d: mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x0000000000021790: mov rax, qword ptr [rip + 0x276921]; mov qword ptr [rbx + 0x20], rax; mov eax, edx; pop rbx; ret; 
0x000000000004aa09: mov rax, qword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000004abb1: mov rax, qword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000032523: mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000038f02: mov rax, qword ptr [rsp + 0x10]; call rax; 
0x00000000000408da: mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000444e2: mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000040fbb: mov rax, qword ptr [rsp + 0x18]; pop rdx; pop rcx; add rsp, 0x28; ret; 
0x000000000005a25d: mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000057ef8: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x000000000004b449: mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rbx + 0x50], rax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000005e56d: mov rax, qword ptr [rsp + 0x78]; mov rsp, rbx; jmp rax; 
0x0000000000041bd3: mov rax, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000000426c8: mov rax, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000004d5f6: mov rax, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004090b: mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004a787: mov rax, qword ptr [rsp + 8]; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x0000000000057d16: mov rax, qword ptr [rsp + 8]; mov dword ptr [rbx], eax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000002316f: mov rax, qword ptr [rsp + 8]; shr rax, 9; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000050e70: mov rax, qword ptr [rsp - 0x10]; lea rdx, [rax + 8]; mov qword ptr [rsp - 0x10], rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000037849: mov rax, qword ptr [rsp - 0x10]; ret; 
0x0000000000019c42: mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000005c7bf: mov rax, qword ptr [rsp]; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x00000000000239a4: mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000005a138: mov rax, qword ptr [rsp]; je 0x5a141; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000005a282: mov rax, qword ptr [rsp]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000049fa8: mov rax, qword ptr ds:[rdi]; test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x0000000000021e65: mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x0000000000023505: mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000021a9d: mov rax, qword ptr fs:[0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x0000000000055c95: mov rax, qword ptr fs:[0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005701b: mov rax, qword ptr fs:[0]; ret; 
0x000000000004e2f2: mov rax, r12; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004314c: mov rax, r12; mov esi, 1; syscall; 
0x000000000004caf8: mov rax, r12; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000042662: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000180df: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043163: mov rax, r12; syscall; 
0x000000000004b81a: mov rax, r13; mov rdi, r14; syscall; 
0x0000000000052e29: mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000003bbd6: mov rax, r13; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000056783: mov rax, r13; syscall; 
0x000000000004aff6: mov rax, r14; mov rdx, r13; syscall; 
0x000000000004b057: mov rax, r14; mov rsi, r12; mov rdx, r13; syscall; 
0x000000000004bba7: mov rax, r14; mov rsi, rbp; syscall; 
0x000000000004317c: mov rax, r14; syscall; 
0x0000000000055b24: mov rax, r15; mov esi, 1; syscall; 
0x0000000000055bbe: mov rax, r8; mov rdi, r12; syscall; 
0x0000000000054d34: mov rax, r8; mov rdi, r13; syscall; 
0x000000000004b972: mov rax, r8; mov rdi, r9; syscall; 
0x0000000000056dc3: mov rax, r8; mov rdi, rbx; syscall; 
0x0000000000022205: mov rax, r8; mov rdx, r10; syscall; 
0x0000000000054d68: mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054f13: mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004b980: mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004b980: mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057959: mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x0000000000056fdd: mov rax, r8; movsxd rsi, esi; syscall; 
0x0000000000057948: mov rax, r8; or esi, 1; movsxd rsi, esi; syscall; 
0x000000000005b88d: mov rax, r8; pop rbp; pop r12; pop r13; ret; 
0x000000000005b947: mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000054222: mov rax, r8; ret; 
0x000000000001ace3: mov rax, r8; syscall; 
0x00000000000559e3: mov rax, r8; syscall; pop rax; ret; 
0x0000000000055994: mov rax, r8; syscall; ret; 
0x00000000000552e1: mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000054fa9: mov rax, r9; mov rdi, r8; syscall; 
0x000000000004c20d: mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eb8: mov rax, r9; mov rdi, rbx; syscall; 
0x000000000002224e: mov rax, r9; mov rdx, r8; syscall; 
0x0000000000022272: mov rax, r9; mov rsi, r8; mov rdx, r10; syscall; 
0x000000000005a9ef: mov rax, r9; mov rsi, r8; syscall; 
0x0000000000054655: mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004c21b: mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004ea4b: mov rax, r9; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db8f: mov rax, r9; mov rsi, rdx; syscall; mov eax, r8d; pop rdx; ret; 
0x000000000001acae: mov rax, r9; syscall; 
0x0000000000016d6e: mov rax, rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004b926: mov rax, rbp; mov rdi, r9; syscall; 
0x0000000000054f26: mov rax, rbp; mov rdx, r12; syscall; 
0x00000000000548a5: mov rax, rbp; mov rsi, r9; syscall; 
0x0000000000056c1f: mov rax, rbp; mov rsi, rdx; syscall; 
0x000000000004b90d: mov rax, rbp; movsxd rdx, edx; mov rdi, r9; mov rsi, r12; syscall; 
0x0000000000056c11: mov rax, rbp; movsxd rsi, r12d; syscall; 
0x0000000000052f51: mov rax, rbp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000004c32e: mov rax, rbp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000026a00: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000005428c: mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000043145: mov rax, rbp; syscall; 
0x0000000000026d75: mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret; 
0x000000000003bb78: mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018257: mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000181cf: mov rax, rbx; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001890f: mov rax, rbx; mov qword ptr [rip + 0x27f55f], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005446e: mov rax, rbx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017a1b: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017a51: mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000017911: mov rax, rbx; pop rbx; ret; 
0x0000000000024c42: mov rax, rbx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000018ed2: mov rax, rbx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a99a: mov rax, rcx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004badc: mov rax, rcx; je 0x4baee; mov rsi, rsp; mov edx, 2; mov eax, 0x13; syscall; 
0x000000000004bf77: mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x00000000000534f3: mov rax, rcx; or rax, rdx; ret; 
0x000000000004c7ff: mov rax, rcx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000453e8: mov rax, rcx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005367d: mov rax, rdi; cqo; idiv rsi; ret; 
0x0000000000055c6a: mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000002757f: mov rax, rdi; pop rbx; pop rbp; pop r14; pop r15; ret; 
0x00000000000169c9: mov rax, rdi; ret; 
0x000000000005366f: mov rax, rdi; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x00000000000357bb: mov rax, rdi; shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000003f274: mov rax, rdi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x0000000000018763: mov rax, rdi; test dl, dl; jne 0x18770; ret; 
0x00000000000379db: mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x0000000000028a29: mov rax, rdx; add rax, rdx; sete al; movzx eax, al; ret; 
0x000000000004aba6: mov rax, rdx; add rsp, 0x138; ret; 
0x0000000000039d31: mov rax, rdx; add rsp, 0x18; ret; 
0x00000000000264b4: mov rax, rdx; add rsp, 0x28; ret; 
0x000000000003c5c0: mov rax, rdx; je 0x3c5cb; cmp esi, 0xa; je 0x3c5d6; ret; 
0x000000000005aa06: mov rax, rdx; mov rsi, r8; syscall; 
0x0000000000024a77: mov rax, rdx; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000004f19b: mov rax, rdx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000021423: mov rax, rdx; pop rbx; pop rbp; ret; 
0x0000000000021253: mov rax, rdx; pop rbx; ret; 
0x00000000000263c4: mov rax, rdx; ret; 
0x000000000004bf5d: mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000021ec6: mov rax, rdx; syscall; 
0x000000000004cb4c: mov rax, rsi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004f615: mov rax, rsi; ret; 
0x000000000004a3fd: mov rbp, rax; lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x000000000004b80d: mov rbp, rcx; call 0x54178; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000057e98: mov rbp, rsi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x0000000000059870: mov rbp, rsi; mov rbx, rdi; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000005b045: mov rbp, rsi; push rcx; mov rbx, rdi; mov eax, 0x125; syscall; 
0x0000000000022059: mov rbx, qword ptr [rax]; call 0x5468b; mov rdi, rbp; call rbx; 
0x0000000000042977: mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000021fb9: mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x00000000000427e8: mov rbx, rax; jne 0x42843; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000004e659: mov rbx, rax; jne 0x4e67c; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000057eb8: mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x0000000000017bc1: mov rbx, rdi; call 0x17780; mov rax, rbx; pop rbx; ret; 
0x0000000000018161: mov rbx, rdi; call 0x17840; mov rax, rbx; pop rbx; ret; 
0x000000000005b049: mov rbx, rdi; mov eax, 0x125; syscall; 
0x0000000000023a76: mov rbx, rdi; mov eax, 0x74; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000004a3fa: mov rbx, rdi; mov rbp, rax; lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x0000000000059873: mov rbx, rdi; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000017731: mov rbx, rdx; call 0x54121; add rax, rbx; pop rbx; ret; 
0x00000000000590f4: mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000005ad96: mov rbx, rsp; mov eax, 0x4f; mov rdi, rbx; mov rsi, rdx; syscall; 
0x000000000005483e: mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000003982c: mov rcx, qword ptr [rsp + 0x10]; mov r9, qword ptr [rcx]; syscall; 
0x00000000000337c1: mov rcx, qword ptr [rsp - 0x18]; and rdx, rcx; cmp rdx, rdi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000054216: mov rcx, rdx; jne 0x54226; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000003c5a5: mov rcx, rdx; mov rdx, rsi; mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x0000000000059109: mov rdi, -0x16; je 0x5914f; movsxd rdi, ebp; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x0000000000059129: mov rdi, -0x16; jne 0x5914f; xor esi, esi; mov eax, 0x60; mov rdi, rbx; syscall; 
0x0000000000049c73: mov rdi, -0x26; call 0x169c0; pop rdx; ret; 
0x000000000004b050: mov rdi, -0x64; mov rax, r14; mov rsi, r12; mov rdx, r13; syscall; 
0x0000000000023276: mov rdi, -0xc; call 0x169c0; pop rdx; ret; 
0x00000000000169e7: mov rdi, -1; add rsp, 0x18; mov rax, rdi; ret; 
0x000000000004b0c6: mov rdi, -9; call 0x169c0; pop rdx; ret; 
0x000000000004cb8c: mov rdi, qword ptr [r12]; call rax; 
0x000000000004322e: mov rdi, qword ptr [r13 + 0x88]; call rax; 
0x0000000000055a1c: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000025d43: mov rdi, qword ptr [rax]; call 0x23e54; test rax, rax; je 0x25d34; pop rbx; ret; 
0x0000000000055c5b: mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000055296: mov rdi, qword ptr [rbx + 8]; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000049e6a: mov rdi, qword ptr [rbx]; call 0x14680; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000001b2a4: mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000004ccef: mov rdi, qword ptr [rcx]; call rax; 
0x0000000000055c6d: mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023a7f: mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000004cc1e: mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005a258: mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000055689: mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003a3f7: mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000003a3f7: mov rdi, qword ptr [rsp + 8]; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000003a6e0: mov rdi, qword ptr [rsp]; call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003a27c: mov rdi, qword ptr [rsp]; movsxd r10, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x0000000000043707: mov rdi, r11; mov qword ptr [rsp + 0x110], rax; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x000000000005db5e: mov rdi, r12; call rax; 
0x00000000000407cf: mov rdi, r12; mov rdx, r13; syscall; 
0x0000000000038886: mov rdi, r12; syscall; 
0x0000000000054d37: mov rdi, r13; syscall; 
0x00000000000445a2: mov rdi, r14; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000444df: mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000004b81d: mov rdi, r14; syscall; 
0x000000000004bc83: mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x0000000000058279: mov rdi, r8; mov qword ptr [r8], rax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x0000000000021950: mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004b189: mov rdi, r8; mov rsi, rbx; syscall; 
0x0000000000054c9b: mov rdi, r8; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000003a2e7: mov rdi, r8; sub rsi, r8; syscall; 
0x0000000000054fac: mov rdi, r8; syscall; 
0x000000000005aa2a: mov rdi, r8; syscall; movsxd rdi, r9d; call 0x169c0; pop rdx; ret; 
0x000000000004b913: mov rdi, r9; mov rsi, r12; syscall; 
0x000000000004b5de: mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000004b929: mov rdi, r9; syscall; 
0x0000000000022608: mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ac54: mov rdi, rax; call 0x169c0; add rsp, 0x20; pop rbx; ret; 
0x000000000004af93: mov rdi, rax; call 0x169c0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002383a: mov rdi, rax; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004a4db: mov rdi, rax; call 0x169c0; add rsp, 0x30; pop rbx; ret; 
0x000000000005acbd: mov rdi, rax; call 0x169c0; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000000222a2: mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000002239d: mov rdi, rax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000003a37e: mov rdi, rax; call 0x169c0; add rsp, 0x70; pop rbx; ret; 
0x00000000000238e9: mov rdi, rax; call 0x169c0; add rsp, 0x78; ret; 
0x00000000000225ae: mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000055c61: mov rdi, rax; call 0x559ea; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023aa8: mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000043088: mov rdi, rax; mov eax, 0x69; syscall; 
0x000000000004306b: mov rdi, rax; mov eax, 0x6a; syscall; 
0x000000000005aa6b: mov rdi, rax; mov eax, 0x71; syscall; 
0x000000000005aa47: mov rdi, rax; mov eax, 0x72; syscall; 
0x00000000000422aa: mov rdi, rax; xor eax, eax; call 0x4ce08; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004364e: mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004af7e: mov rdi, rbp; call 0x16820; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000022061: mov rdi, rbp; call rbx; 
0x00000000000219f5: mov rdi, rbp; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x000000000005acb0: mov rdi, rbp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af8b: mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004c210: mov rdi, rbp; syscall; 
0x000000000005ac42: mov rdi, rbx; call 0x16820; mov eax, 0x50; mov rdi, rbx; syscall; 
0x00000000000578e5: mov rdi, rbx; call 0x3a3dc; xor eax, eax; pop rbx; ret; 
0x000000000004e7c9: mov rdi, rbx; call 0x4bf87; movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x000000000004bfa3: mov rdi, rbx; call 0x4c07e; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000005365f: mov rdi, rbx; call 0x4edcc; mov rax, rbx; pop rbx; ret; 
0x000000000004bfad: mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000004bd5d: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004b9da: mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004c162: mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000049c3d: mov rdi, rbx; call rax; 
0x000000000004ba49: mov rdi, rbx; mov rax, qword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x0000000000038eff: mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000054d65: mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000049c52: mov rdi, rbx; mov rdx, rsi; syscall; 
0x000000000005ad9e: mov rdi, rbx; mov rsi, rdx; syscall; 
0x000000000004c13d: mov rdi, rbx; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x0000000000049c0e: mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x000000000004d8ab: mov rdi, rbx; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000003f7ba: mov rdi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x0000000000027845: mov rdi, rbx; syscall; 
0x0000000000017907: mov rdi, rbx; xor esi, esi; call 0x54178; mov rax, rbx; pop rbx; ret; 
0x000000000001e204: mov rdi, rcx; syscall; 
0x000000000004b395: mov rdi, rdx; syscall; 
0x000000000004b395: mov rdi, rdx; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000017ee9: mov rdi, rsi; call 0x17f50; add rax, rbx; pop rbx; ret; 
0x00000000000232c4: mov rdi, rsi; syscall; 
0x000000000004abde: mov rdi, rsp; call 0x4ae15; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000026a50: mov rdx, -1; cmove rax, rdx; ret; 
0x00000000000427ee: mov rdx, qword ptr [0]; mov eax, 0xba; syscall; 
0x000000000004d66f: mov rdx, qword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000002397b: mov rdx, qword ptr [rax + 0x10]; xor r8d, r8d; mov qword ptr [rsp + 0x18], rax; mov eax, 0x65; syscall; 
0x0000000000055c84: mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000054841: mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000026eb8: mov rdx, qword ptr [rax]; mov qword ptr [rsi + 8], rax; mov qword ptr [rsi], rdx; mov qword ptr [rdx + 8], rsi; mov qword ptr [rax], rsi; ret; 
0x0000000000055a19: mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004d5b5: mov rdx, qword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x0000000000044b40: mov rdx, qword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000044b52: mov rdx, qword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000004cc0e: mov rdx, qword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000049fc6: mov rdx, qword ptr [rdi + 8]; test rdx, rdx; je 0x49fd2; mov qword ptr [rdx], rax; ret; 
0x0000000000025c70: mov rdx, qword ptr [rsi + rdx*8]; lea rax, [rdx + 0x10]; test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000044b65: mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x00000000000238e2: mov rdx, qword ptr [rsp + 0x28]; syscall; 
0x00000000000219f8: mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x00000000000264af: mov rdx, qword ptr [rsp + 8]; mov rax, rdx; add rsp, 0x28; ret; 
0x000000000005acb6: mov rdx, qword ptr [rsp + 8]; syscall; 
0x0000000000039d29: mov rdx, qword ptr [rsp]; jns 0x39d31; xor edx, edx; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004ab9c: mov rdx, qword ptr [rsp]; jns 0x4aba6; or rdx, 0xffffffffffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x000000000004a5d5: mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x00000000000427ed: mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000004d66e: mov rdx, qword ptr fs:[0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004bc7d: mov rdx, r10; mov rsi, r9; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x0000000000022208: mov rdx, r10; syscall; 
0x000000000002229d: mov rdx, r10; syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000003f73e: mov rdx, r11; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004ac87: mov rdx, r12; syscall; 
0x0000000000040824: mov rdx, r13; mov rdi, r12; syscall; 
0x00000000000407d2: mov rdx, r13; syscall; 
0x0000000000057e72: mov rdx, r8; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000022251: mov rdx, r8; syscall; 
0x00000000000223ca: mov rdx, r8; syscall; neg eax; ret; 
0x000000000003a7d5: mov rdx, rax; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004f180: mov rdx, rax; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x000000000004f15d: mov rdx, rax; mov r12d, eax; js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x0000000000057ef5: mov rdx, rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; mov rdi, r12; syscall; 
0x0000000000053416: mov rdx, rax; neg rdx; test ecx, ecx; cmove rax, rdx; ret; 
0x00000000000423fa: mov rdx, rax; shr rdx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000005c672: mov rdx, rax; xor eax, eax; call rdx; 
0x0000000000021419: mov rdx, rbp; add rsp, 0x98; mov rax, rdx; pop rbx; pop rbp; ret; 
0x000000000004d903: mov rdx, rbp; mov rsi, r13; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000042da5: mov rdx, rbp; syscall; 
0x00000000000229e6: mov rdx, rbx; add rsp, 0x840; mov rax, rdx; pop rbx; ret; 
0x000000000004b143: mov rdx, rbx; syscall; 
0x0000000000021953: mov rdx, rcx; syscall; 
0x000000000004a5fa: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e0: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005366c: mov rdx, rdi; mov rax, rdi; sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x000000000002334f: mov rdx, rdi; syscall; 
0x000000000003c5a8: mov rdx, rsi; mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x0000000000054572: mov rdx, rsi; push rax; movsxd rdi, edi; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000545c0: mov rdx, rsi; push rax; movsxd rdi, edi; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000016f70: mov rdx, rsi; sub rsp, 8; xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x0000000000049c55: mov rdx, rsi; syscall; 
0x00000000000221ee: mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000001b2d9: mov rdx, rsp; movsxd rdi, dword ptr [rsp + 0x10]; movsxd rsi, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000043227: mov rsi, qword ptr [r13 + 0xa0]; mov rdi, qword ptr [r13 + 0x88]; call rax; 
0x000000000005aa7e: mov rsi, qword ptr [r8 + 8]; xor r10d, r10d; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x0000000000023a82: mov rsi, qword ptr [rbx + 8]; syscall; 
0x00000000000238dd: mov rsi, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x28]; syscall; 
0x0000000000038efa: mov rsi, qword ptr [rsp + 8]; mov rdi, rbx; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000003a3f3: mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000004b05a: mov rsi, r12; mov rdx, r13; syscall; 
0x000000000004f1ec: mov rsi, r12; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x0000000000038839: mov rsi, r12; sub rsp, 0x10; mov rdx, rdi; syscall; 
0x000000000004b916: mov rsi, r12; syscall; 
0x000000000004d906: mov rsi, r13; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004f0d9: mov rsi, r13; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000003a5f1: mov rsi, r13; syscall; 
0x000000000004315d: mov rsi, r14; movsxd rdx, eax; mov rax, r12; syscall; 
0x00000000000562d8: mov rsi, r14; syscall; 
0x000000000005a609: mov rsi, r8; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x0000000000022275: mov rsi, r8; mov rdx, r10; syscall; 
0x000000000004b140: mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000021f26: mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a9f2: mov rsi, r8; syscall; 
0x000000000004296f: mov rsi, r9; call 0x42bb0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000042ba2: mov rsi, r9; call 0x42d70; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000052ecc: mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x000000000004bc80: mov rsi, r9; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x000000000004b53c: mov rsi, r9; mov rdx, r8; syscall; 
0x0000000000054f16: mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004b5ca: mov rsi, r9; syscall; 
0x000000000004cb3c: mov rsi, rax; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000590d6: mov rsi, rbp; mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000004d4d4: mov rsi, rbp; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000049c0b: mov rsi, rbp; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x000000000004bbaa: mov rsi, rbp; syscall; 
0x00000000000389b0: mov rsi, rbx; call 0x23ab9; add rsp, 0x90; pop rbx; ret; 
0x00000000000591f4: mov rsi, rbx; call 0x58f51; add rsp, 0x40; pop rbx; ret; 
0x000000000005db5b: mov rsi, rbx; mov rdi, r12; call rax; 
0x000000000005acb3: mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x0000000000024a7a: mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000004af50: mov rsi, rbx; sub rsp, 0x28; syscall; 
0x000000000004af8e: mov rsi, rbx; syscall; 
0x000000000003970e: mov rsi, rdi; jg 0x39723; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x00000000000230f0: mov rsi, rdi; mov ecx, 0x100; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x0000000000057e06: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x0000000000057e06: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x000000000005b7b1: mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000005bbb1: mov rsi, rdx; call 0x227b5; add rsp, 0xd8; ret; 
0x000000000004b5e1: mov rsi, rdx; syscall; 
0x000000000004ea4e: mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db92: mov rsi, rdx; syscall; mov eax, r8d; pop rdx; ret; 
0x000000000004b983: mov rsi, rdx; syscall; ret; 
0x000000000005795c: mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000003887e: mov rsi, rsp; mov eax, 0x61; mov rdi, r12; syscall; 
0x0000000000057ebb: mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000004bae1: mov rsi, rsp; mov edx, 2; mov eax, 0x13; syscall; 
0x0000000000022e0d: mov rsi, rsp; mov qword ptr [rsp + 0x18], rax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004a5ae: mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005e572: mov rsp, rbx; jmp rax; 
0x00000000000657aa: mov si, 0xbf6d; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000007b1bd: mov sp, 0xbd66; mov di, 0xc066; shl word ptr [rsi - 0x3e], 0x66; ret; 
0x0000000000092ceb: mov spl, 0xf1; iretd; ret 0; 
0x000000000001fc7d: mov word ptr [rax + 5], gs; wait; mov dword ptr [rdi + 0x20], 0x1f83d9ab; mov dword ptr [rdi + 0x24], 0x5be0cd19; ret; 
0x000000000003dd9e: mov word ptr [rax - 1], cs; ret; 
0x00000000000558f6: mov word ptr [rax], es; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004b116: mov word ptr [rax], es; add byte ptr [rax], al; mov esi, 1; mov eax, 0x48; syscall; 
0x00000000000387e2: mov word ptr [rax], es; add byte ptr [rax], al; syscall; 
0x00000000000558ec: mov word ptr [rax], es; add byte ptr [rax], al; test eax, eax; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000006f6af: mov word ptr [rbp - 0x746e9d73], es; xchg eax, ecx; scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x000000000003a996: mov word ptr [rbp], ax; mov rax, rcx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002cbe0: mov word ptr [rbx + 6], es; add al, bl; ret; 
0x000000000005923f: mov word ptr [rbx + 8], ax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000022416: mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x0000000000080939: mov word ptr [rcx + 0x5c], ss; stosb byte ptr [rdi], al; test dword ptr [rdi + 0x23950c82], ebp; imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x0000000000071449: mov word ptr [rcx*4 + 0x585f4798], ds; ret; 
0x000000000005fc46: mov word ptr [rcx], es; out dx, eax; fnsave dword ptr [rdx]; ret; 
0x0000000000042401: mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000050df9: mov word ptr [rdi], dx; ret; 
0x00000000000605fc: mov word ptr [rdx + 0x6ae402fb], cs; ret; 
0x000000000005fa49: mov word ptr [rdx - 0x65e80014], gs; imul ebp, dword ptr [rdx + rdx*2 + 0x64], 0xb19ee156; ret 0x2a5; 
0x000000000003d2d5: mov word ptr [rip + 0xba00], fs; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x0000000000043634: mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000004279c: mov word ptr [rsp + 0xa], 0x330e; mov word ptr [rsp + 0xe], di; lea rdi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x00000000000427a3: mov word ptr [rsp + 0xe], di; lea rdi, [rsp + 0xa]; call 0x42756; add rsp, 0x18; ret; 
0x000000000002eb07: mov word ptr [rsp + 8], ax; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000358c2: mov word ptr [rsp - 0x10], di; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002ba09: mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x000000000004b015: movabs al, byte ptr [0x2a0100ba1b740000]; add byte ptr [rax + 0x101], bh; syscall; 
0x000000000008ee4d: movabs al, byte ptr [0x3feb]; add byte ptr [rax], al; add byte ptr [rax - 0x2e9ef37a], al; ret 0xa13f; 
0x000000000008e74d: movabs al, byte ptr [0x3ff2]; add byte ptr [rax], al; add byte ptr [rax + 0x71fc201e], dl; ret; 
0x000000000003caaa: movabs al, byte ptr [0x480c24448bffffff]; add esp, 0x228; pop rbx; pop rbp; ret; 
0x0000000000052f94: movabs al, byte ptr [0x4824448948000000]; call 0x50e82; add rsp, 0xf8; ret; 
0x000000000004df70: movabs al, byte ptr [0x6664e8500024]; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x000000000004322a: movabs al, byte ptr [0x88bd8b49000000]; add byte ptr [rax], al; call rax; 
0x000000000006060c: movabs al, byte ptr [0x9f3f09252da65cde]; out 8, al; ret 0x6132; 
0x000000000006576d: movabs al, byte ptr [0xa3baa2b3a17da17c]; mov ebx, 0xbea4bca3; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000060522: movabs al, byte ptr [0xa74418971f21ed3]; sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x00000000000714c0: movabs al, byte ptr [0xb24a3597404a2467]; xchg eax, edi; ret 0x5497; 
0x00000000000720ce: movabs al, byte ptr [0xb69e1346f685d6d]; push -0x21; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000005b01c: movabs al, byte ptr [0xc318c48348fffbb9]; push rax; mov eax, 0x16; syscall; 
0x00000000000920c3: movabs al, byte ptr [0xc54c206e3fb10d66]; int 0x45; mov bh, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x0000000000084ec0: movabs byte ptr [0x6ff03ff0500a300], al; dec dword ptr [rdx]; jmp qword ptr [rax]; 
0x000000000001d068: movabs byte ptr [0x832424100ff20001], al; iretd; jmp qword ptr [rsi + 0xf]; 
0x000000000008cd03: movabs byte ptr [0x9bd295f33fed5fff], al; sub byte ptr [rbx + rdi*2], al; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x0000000000065773: movabs byte ptr [0xa5bea4bca3bba3ba], al; ret; 
0x00000000000714b6: movabs byte ptr [0xe5963395f449a795], al; movabs al, byte ptr [0xb24a3597404a2467]; xchg eax, edi; ret 0x5497; 
0x0000000000009320: movabs dword ptr [0x5a0009001200001c], eax; ret; 
0x000000000006052e: movabs dword ptr [0x7632d8c5be71204b], eax; ret; 
0x0000000000084ec2: movabs dword ptr [0xaff06ff03ff0500], eax; jmp qword ptr [rax]; 
0x000000000003a3ea: movabs dword ptr [0xbb80001d9], eax; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000005ffd9: movabs dword ptr [0xfd27877d48fa5449], eax; popfq; ret; 
0x0000000000005306: movabs eax, dword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x000000000005de82: movabs eax, dword ptr [0x8348000000010023]; ret; 
0x00000000000232aa: movabs eax, dword ptr [0xc78948050f000000]; call 0x169c0; pop rdx; ret; 
0x000000000005af6d: movabs r10, 0x56b850c35afffb; add byte ptr [rax], al; syscall; 
0x0000000000079493: movabs r10, 0xbe4fbd4fbc4fbb4f; ror byte ptr [r15 - 0x3f], 0x4f; ret 0xc64f; 
0x000000000002051f: movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000002052d: movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000005305: movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x000000000008c8e4: movabs rbx, 0xf9e424e0a0003ff1; ret 0xbf; 
0x000000000002ddea: movabs rdx, 0x7fefffffffffffff; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000003353b: movabs rdx, 0x8000000000000000; and rax, rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005568d: movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000042405: movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000033b2f: movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000002eca8: movapd xmm0, xmm1; add rsp, 0x38; ret; 
0x000000000002c348: movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000029dd5: movapd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000355e2: movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x000000000001b94a: movapd xmm0, xmm1; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000002af74: movapd xmm0, xmm1; pop rbx; ret; 
0x000000000001c9ef: movapd xmm0, xmm1; ret; 
0x000000000001ba6a: movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000001cd3c: movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001c80d: movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x0000000000032d21: movapd xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x000000000002884d: movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000001b693: movapd xmm0, xmm2; movsd xmm2, qword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000002b615: movapd xmm0, xmm2; mulsd xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001bc7a: movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001b57a: movapd xmm0, xmm2; mulsd xmm1, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001d87b: movapd xmm0, xmm2; pop rbx; ret; 
0x000000000002e4cf: movapd xmm0, xmm2; ret; 
0x000000000001c31d: movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000001ca46: movapd xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002f367: movapd xmm0, xmm6; ret; 
0x000000000001d873: movapd xmm1, xmm0; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001bc76: movapd xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001c7fd: movapd xmm1, xmm0; movsd xmm2, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000001c319: movapd xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000001b766: movapd xmm1, xmm2; pop rbx; ret; 
0x000000000001ba71: movapd xmm1, xmm2; ret; 
0x000000000002af68: movapd xmm1, xmm3; subsd xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000001b946: movapd xmm2, xmm0; movapd xmm0, xmm1; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001ba66: movapd xmm2, xmm0; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x0000000000033b30: movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000002eca9: movaps xmm0, xmm1; add rsp, 0x38; ret; 
0x000000000002c349: movaps xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002c8cb: movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x0000000000029dd6: movaps xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000355e3: movaps xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035690: movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x000000000002e663: movaps xmm0, xmm1; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001b94b: movaps xmm0, xmm1; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000002af75: movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001c9f0: movaps xmm0, xmm1; ret; 
0x000000000001ba6b: movaps xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000001cd3d: movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001c80e: movaps xmm0, xmm2; add rsp, 0x28; ret; 
0x0000000000032d22: movaps xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x000000000002884e: movaps xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000032eb3: movaps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000001b694: movaps xmm0, xmm2; movsd xmm2, qword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000002b616: movaps xmm0, xmm2; mulsd xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001bc7b: movaps xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001b57b: movaps xmm0, xmm2; mulsd xmm1, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001d87c: movaps xmm0, xmm2; pop rbx; ret; 
0x000000000002e4d0: movaps xmm0, xmm2; ret; 
0x000000000001c31e: movaps xmm0, xmm4; add rsp, 0x28; ret; 
0x0000000000032b57: movaps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000001ca47: movaps xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002f368: movaps xmm0, xmm6; ret; 
0x000000000001d874: movaps xmm1, xmm0; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001bc77: movaps xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001c7fe: movaps xmm1, xmm0; movsd xmm2, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x0000000000032d99: movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b143: movaps xmm1, xmm2; add rsp, 0x10; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001c31a: movaps xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000001b767: movaps xmm1, xmm2; pop rbx; ret; 
0x000000000001ba72: movaps xmm1, xmm2; ret; 
0x0000000000030530: movaps xmm1, xmm3; mulss xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x000000000002af69: movaps xmm1, xmm3; subsd xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000001b947: movaps xmm2, xmm0; movapd xmm0, xmm1; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001ba67: movaps xmm2, xmm0; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000001cdc1: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; ret; 
0x000000000001b811: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001b722: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000001ba30: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x000000000001da5a: movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x000000000001c9a8: movd dword ptr [rsp + 0x20], mm0; add rsp, 0x40; pop rbx; ret; 
0x000000000001c68d: movd dword ptr [rsp + 0x28], mm0; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfe1: movd dword ptr [rsp + 0x30], mm0; add rsp, 0x40; pop rbx; ret; 
0x000000000001caf2: movd dword ptr [rsp + 8], mm0; add rsp, 0x38; ret; 
0x0000000000019c4d: movd dword ptr [rsp - 0x20], mm0; ret; 
0x000000000001cb9e: movd dword ptr [rsp - 0x28], mm0; ret; 
0x000000000001bda3: movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001b656: movd dword ptr [rsp], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001baf5: movd dword ptr [rsp], mm0; add rsp, 0x38; ret; 
0x000000000002ddff: movd eax, mm0; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x00000000000299e9: movd eax, mm0; shr eax, 0x1f; ret; 
0x00000000000299e0: movd eax, mm0; shr rax, 0x3f; ret; 
0x000000000003562f: movd eax, mm1; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x35643; mulss xmm0, xmm1; ret; 
0x000000000002ddfe: movd eax, xmm0; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x00000000000299e8: movd eax, xmm0; shr eax, 0x1f; ret; 
0x000000000003562e: movd eax, xmm1; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x35643; mulss xmm0, xmm1; ret; 
0x0000000000035584: movd esi, mm1; and rax, rsi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x00000000000299df: movd rax, mm0; shr rax, 0x3f; ret; 
0x0000000000035583: movd rsi, mm1; and rax, rsi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000001cd30: movq qword ptr [rsp + 8], xmm1; movsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000003709d: movq qword ptr [rsp - 0x18], xmm0; movsd xmm0, qword ptr [rsp - 0x18]; ret; 
0x000000000001c9f4: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001ce2a: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x00000000000299de: movq rax, xmm0; shr rax, 0x3f; ret; 
0x0000000000035582: movq rsi, xmm1; and rax, rsi; cmp rax, rdx; jbe 0x35594; mulsd xmm0, xmm1; ret; 
0x000000000001cdc0: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b810: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001b721: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001ba2f: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001da59: movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c9a7: movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001c68c: movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfe0: movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000001caf1: movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x0000000000019c4c: movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000001cb9d: movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000001bda2: movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b655: movq xmm0, qword ptr [rsp]; add rsp, 0x30; pop rbx; ret; 
0x000000000001baf4: movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000007c3ce: movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x000000000005a288: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000003b89b: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rbp - 0x76], al; adc dword ptr [rcx - 0xa], eax; ret 0x74c0; 
0x000000000005da26: movsb byte ptr [rdi], byte ptr [rsi]; and eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x000000000004a184: movsb byte ptr [rdi], byte ptr [rsi]; cld; dec dword ptr [rax + 0x63]; ret; 
0x0000000000054171: movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x000000000005414d: movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x5414d; ret; 
0x00000000000873c4: movsb byte ptr [rdi], byte ptr [rsi]; push rdi; stosb byte ptr [rdi], al; push rdi; mov al, 0x57; ret; 
0x000000000006dba6: movsb byte ptr [rdi], byte ptr [rsi]; push rdx; in al, 0x52; ret; 
0x000000000005f679: movsb byte ptr [rdi], byte ptr [rsi]; push rsp; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x00000000000924a0: movsb byte ptr [rdi], byte ptr [rsi]; ret 0x82c8; 
0x000000000006cda2: movsb byte ptr [rdi], byte ptr [rsi]; ret 0xc2a5; 
0x0000000000036c10: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000092a04: movsb byte ptr [rdi], byte ptr [rsi]; stc; jmp rdi; 
0x000000000008ae00: movsb byte ptr [rdi], byte ptr [rsi]; xchg eax, edi; ret; 
0x000000000008f783: movsb byte ptr [rdi], byte ptr [rsi]; xor edi, dword ptr [rbx]; add byte ptr [rax + 0x4001], ch; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x000000000002586d: movsd dword ptr [rdi], dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8141; 
0x000000000003f7be: movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x000000000006e5aa: movsd dword ptr [rdi], dword ptr [rsi]; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x0000000000087b8a: movsd dword ptr [rdi], dword ptr [rsi]; outsb dx, byte ptr [rsi]; ret 0x9f6e; 
0x0000000000024a7e: movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000075cee: movsd dword ptr [rdi], dword ptr [rsi]; push rsp; iretd; push rsp; ret; 
0x000000000006cda4: movsd dword ptr [rdi], dword ptr [rsi]; ret 0xc2a8; 
0x0000000000043654: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005fcf8: movsd dword ptr [rdi], dword ptr [rsi]; test ch, dh; push rdi; movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x0000000000028fcd: movsd qword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000028fc8: movsd qword ptr [rbp], xmm1; movsd qword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000029746: movsd qword ptr [rbx], xmm0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000035af8: movsd qword ptr [rbx], xmm2; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000002969a: movsd qword ptr [rdi], xmm0; ret; 
0x0000000000033590: movsd qword ptr [rdi], xmm1; ret; 
0x00000000000296a9: movsd qword ptr [rdi], xmm4; ret; 
0x00000000000296de: movsd qword ptr [rdi], xmm6; ret; 
0x000000000002eb5d: movsd qword ptr [rsi], xmm1; ret; 
0x0000000000033b29: movsd qword ptr [rsp + 0x28], xmm0; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x00000000000336f8: movsd qword ptr [rsp + 8], xmm0; call 0x2248e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001ca40: movsd qword ptr [rsp + 8], xmm0; movapd xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000028a52: movsd qword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000002b8e9: movsd qword ptr [rsp - 8], xmm1; movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8f8: movsd qword ptr [rsp - 8], xmm1; movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x0000000000028ae7: movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002de92: movsd qword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000002de9d: movsd qword ptr [rsp - 8], xmm2; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x00000000000353e4: movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000001c6c5: movsd qword ptr [rsp], xmm1; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x000000000003533a: movsd xmm0, qword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x00000000000342f4: movsd xmm0, qword ptr [rip + 0x5d934]; add rsp, 0x40; pop rbx; ret; 
0x00000000000336b4: movsd xmm0, qword ptr [rip + 0x5f1bc]; ret; 
0x0000000000032810: movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000002ffac: movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000002f4a0: movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x000000000002dea3: movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x000000000002d232: movsd xmm0, qword ptr [rip + 0x6511e]; call 0x33c87; add rsp, 0x20; pop rbx; ret; 
0x000000000002c44a: movsd xmm0, qword ptr [rip + 0x65eee]; je 0x2c465; movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002b8ef: movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8fe: movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x0000000000028a4a: movsd xmm0, qword ptr [rip + 0x691de]; movsd qword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000002ea30: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d3d: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000364cc: movsd xmm0, qword ptr [rsp + 8]; and eax, 1; mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x0000000000042439: movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002e4d4: movsd xmm0, qword ptr [rsp - 0x10]; ret; 
0x00000000000370a3: movsd xmm0, qword ptr [rsp - 0x18]; ret; 
0x0000000000028a5b: movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000034fa4: movsd xmm0, qword ptr [rsp - 8]; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002b9bf: movsd xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000363e2: movsd xmm0, qword ptr [rsp]; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x00000000000365c6: movsd xmm1, qword ptr [rip + 0x5a3f2]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000035432: movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x000000000003513d: movsd xmm1, qword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x000000000002fff3: movsd xmm1, qword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002f4c2: movsd xmm1, qword ptr [rip + 0x62766]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002da8a: movsd xmm1, qword ptr [rip + 0x6430e]; movapd xmm0, xmm1; ret; 
0x000000000002c30d: movsd xmm1, qword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002b39a: movsd xmm1, qword ptr [rip + 0x6561e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002c454: movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002ad72: movsd xmm1, qword ptr [rip + 0x65c46]; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c431: movsd xmm1, qword ptr [rip + 0x65c67]; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002bc92: movsd xmm1, qword ptr [rip + 0x65f96]; call 0x28914; add rsp, 0x28; ret; 
0x000000000002a987: movsd xmm1, qword ptr [rip + 0x66031]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000029cd9: movsd xmm1, qword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x0000000000028adc: movsd xmm1, qword ptr [rip + 0x67edc]; xorps xmm1, xmm0; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001b94e: movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001a01d: movsd xmm1, qword ptr [rip + 0x77c6b]; addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000028933: movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001ca4f: movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001cd36: movsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d1a1: movsd xmm1, qword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002e883: movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000028aed: movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000033586: movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000003559f: movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000001cb4f: movsd xmm2, qword ptr [rip + 0x73e69]; xorps xmm1, xmm2; ret; 
0x000000000001b697: movsd xmm2, qword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000001c801: movsd xmm2, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000002e4c5: movsd xmm2, qword ptr [rsp - 0x10]; maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000001bc71: movsd xmm2, qword ptr [rsp]; movapd xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x0000000000035db8: movss dword ptr [rbx], xmm1; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000000335d6: movss dword ptr [rdi], xmm0; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000335fc: movss dword ptr [rdi], xmm1; ret; 
0x000000000001cdb4: movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b804: movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba23: movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001cdba: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b80a: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba29: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001c99b: movss dword ptr [rsp + 0x20], xmm1; movss dword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da4d: movss dword ptr [rsp + 0x20], xmm3; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c9a1: movss dword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da53: movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c680: movss dword ptr [rsp + 0x28], xmm1; movss dword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x0000000000033c27: movss dword ptr [rsp + 0x2c], xmm0; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c686: movss dword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfd4: movss dword ptr [rsp + 0x30], xmm1; movss dword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfda: movss dword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000003373a: movss dword ptr [rsp + 0xc], xmm0; call 0x2248e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000019c3c: movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x0000000000019c35: movss dword ptr [rsp - 0x18], xmm8; movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000002f042: movss dword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002f00a: movss dword ptr [rsp - 0x20], xmm0; ret; 
0x00000000000370e8: movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002ef75: movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000028a7a: movss dword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000028b0a: movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000032bc4: movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000338ed: movss dword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x000000000003547d: movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000002ef3d: movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000003538a: movss xmm0, dword ptr [rip + 0x5d836]; jne 0x35397; movaps xmm0, xmm1; ret; 
0x00000000000345f1: movss xmm0, dword ptr [rip + 0x5e333]; add rsp, 0x28; ret; 
0x00000000000336bd: movss xmm0, dword ptr [rip + 0x5f2eb]; ret; 
0x000000000003054a: movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002fa1d: movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x000000000002c9c9: movss xmm0, dword ptr [rip + 0x661d7]; je 0x2c9e3; movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000028a72: movss xmm0, dword ptr [rip + 0x69eb2]; movss dword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000002ea96: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d20: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x00000000000370ee: movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x0000000000028a83: movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000035188: movss xmm0, dword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000001c9fa: movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001ce30: movss xmm0, dword ptr [rsp - 8]; ret; 
0x00000000000366a6: movss xmm1, dword ptr [rip + 0x5a322]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000036030: movss xmm1, dword ptr [rip + 0x5a998]; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x00000000000354c6: movss xmm1, dword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x00000000000352e4: movss xmm1, dword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x0000000000032a03: movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003058f: movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa3e: movss xmm1, dword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c893: movss xmm1, dword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002df27: movss xmm1, dword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000002dcff: movss xmm1, dword ptr [rip + 0x64e75]; movaps xmm0, xmm1; ret; 
0x000000000002b43a: movss xmm1, dword ptr [rip + 0x6558e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b2de: movss xmm1, dword ptr [rip + 0x656ea]; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002aa93: movss xmm1, dword ptr [rip + 0x65f35]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a861: movss xmm1, dword ptr [rip + 0x66167]; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002c9d3: movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b1: movss xmm1, dword ptr [rip + 0x66223]; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x000000000002bd31: movss xmm1, dword ptr [rip + 0x66bf3]; call 0x2894a; add rsp, 0x28; ret; 
0x000000000002b987: movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x0000000000028aff: movss xmm1, dword ptr [rip + 0x67ec9]; xorps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000001ba1d: movss xmm1, dword ptr [rsp + 0x1c]; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000028969: movss xmm1, dword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000002e9b4: movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x0000000000028b10: movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000335f2: movss xmm1, dword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000003564d: movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x000000000002e521: movss xmm2, dword ptr [rsp - 8]; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003a843: movsx eax, bh; and eax, 0xdfff; ret; 
0x0000000000043d6f: movsx eax, byte ptr [rdi]; ret; 
0x0000000000038a00: movsx eax, byte ptr [rip + 0x25f63b]; ret; 
0x000000000003a842: movsx eax, dil; and eax, 0xdfff; ret; 
0x000000000001e0da: movsx eax, word ptr [rax + rsi*2]; ret; 
0x000000000002335f: movsx eax, word ptr [rcx]; add byte ptr [rax], al; add byte ptr [rax + 0xd5], bh; syscall; 
0x000000000001e0d9: movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004b534: movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000003a374: movsxd r10, ebx; mov eax, 0x19; syscall; 
0x000000000003a280: movsxd r10, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x00000000000223aa: movsxd r10, ecx; movsxd rdi, edi; mov eax, 0xdd; syscall; 
0x00000000000223aa: movsxd r10, ecx; movsxd rdi, edi; mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000005aac6: movsxd r10, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000004b193: movsxd r10, ecx; movsxd rdi, r9d; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000023484: movsxd r10, ecx; push rax; movsxd rdi, edi; mov esi, esi; mov eax, 0x12d; syscall; 
0x0000000000023b60: movsxd r10, edx; push rcx; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x0000000000057eb5: movsxd r12, eax; mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x0000000000023db1: movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000023dc9: movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000237ad: movsxd r8, r8d; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023de1: movsxd r8, r8d; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x000000000005acd0: movsxd r8, r8d; movsxd rdi, edi; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000005af89: movsxd r8, r8d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x000000000003a283: movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x00000000000239fe: movsxd r8, r8d; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000043115: movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x00000000000262a6: movsxd rax, dword ptr [r14 + r15*4]; add rax, r14; jmp rax; 
0x0000000000023c5d: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005b352: movsxd rax, dword ptr [rdi + 0xc]; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000043116: movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x0000000000031463: movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000071c63: movsxd rax, dword ptr [rdx]; push 0x5d5735d2; ret 0xda8b; 
0x00000000000262a7: movsxd rax, dword ptr [rsi + rdi*4]; add rax, r14; jmp rax; 
0x000000000002c88c: movsxd rax, dword ptr [rsi]; add byte ptr [rbp - 0xcf48b25], al; movups xmm1, xmmword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x0000000000071c62: movsxd rax, dword ptr fs:[rdx]; push 0x5d5735d2; ret 0xda8b; 
0x0000000000023db2: movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000023dca: movsxd rax, eax; mov eax, 0xbd; syscall; 
0x00000000000237ae: movsxd rax, eax; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023de2: movsxd rax, eax; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x000000000005acd1: movsxd rax, eax; movsxd rdi, edi; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000005af8a: movsxd rax, eax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x000000000003a284: movsxd rax, eax; movsxd rdx, ebp; mov eax, 9; syscall; 
0x00000000000239ff: movsxd rax, eax; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000092c67: movsxd rbp, dword ptr [r8 + 0x35ce4309]; popfq; jne 0x92c34; int1; ret; 
0x0000000000092c68: movsxd rbp, dword ptr [rax + 0x35ce4309]; popfq; jne 0x92c34; int1; ret; 
0x0000000000074158: movsxd rbp, dword ptr [rcx + 0x5b]; imul eax, dword ptr [rdi + 0x6b], 0x6bc06b72; mov edi, 0xfd6bd36b; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x000000000008f781: movsxd rbp, dword ptr [rcx - 0x5c]; xor edi, dword ptr [rbx]; add byte ptr [rax + 0x4001], ch; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000078ce8: movsxd rbx, dword ptr [rax - 0x673e67a1]; ret 0x5098; 
0x0000000000085db3: movsxd rbx, dword ptr [rcx + 0x65]; push -0x3f; insb byte ptr [rdi], dx; ret 0xed72; 
0x000000000005ff96: movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000008f3e1: movsxd rbx, edx; lodsd eax, dword ptr [rsi]; push -3; ret; 
0x0000000000024d92: movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x000000000004f49c: movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000001fdec: movsxd rcx, dword ptr [rax - 0x77]; ret 0xc148; 
0x0000000000017474: movsxd rcx, dword ptr [rax - 0x7d]; ret 0xe901; 
0x000000000004b811: movsxd rcx, dword ptr [rcx + 0xbe0000]; or byte ptr [rax], 0; mov rax, r13; mov rdi, r14; syscall; 
0x00000000000562e3: movsxd rdi, dword ptr [r12 + 0x30]; mov eax, 0x91; syscall; 
0x00000000000562ca: movsxd rdi, dword ptr [r12 + 0x30]; test edi, edi; je 0x562f3; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000005aa98: movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa98: movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x00000000000431bb: movsxd rdi, dword ptr [r8 + 0x14]; mov eax, 0x51; syscall; 
0x000000000005aa85: movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x000000000005aa99: movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; 
0x000000000005aa99: movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp - 4]; mov eax, 1; syscall; xor eax, eax; ret; 
0x00000000000431bc: movsxd rdi, dword ptr [rax + 0x14]; mov eax, 0x51; syscall; 
0x0000000000021f2a: movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000550dc: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x00000000000550dc: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000005aa86: movsxd rdi, dword ptr [rax]; mov eax, 0x10d; syscall; 
0x00000000000560a3: movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x90; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x000000000004d328: movsxd rdi, dword ptr [rbx + 0x78]; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004d344: movsxd rdi, dword ptr [rbx + 0x78]; mov esi, 4; movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000004bba1: movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r13d; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000004085c: movsxd rdi, dword ptr [rbx + 4]; mov rax, r8; syscall; 
0x00000000000657a4: movsxd rdi, dword ptr [rbx - 0x429a439c]; mov si, 0xbf6d; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000004084a: movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000040873: movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000039714: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000039714: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000005a52b: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a52b: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; xor eax, eax; ret; 
0x0000000000049af7: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000049af7: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000049b3f: movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000004bc59: movsxd rdi, dword ptr [rdi + 0x78]; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000021476: movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x000000000005b35a: movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000057bd5: movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000023690: movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000005abcc: movsxd rdi, dword ptr [rsp + 0x10]; mov eax, 3; syscall; 
0x000000000001b2dd: movsxd rdi, dword ptr [rsp + 0x10]; movsxd rsi, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000005ab95: movsxd rdi, dword ptr [rsp + 0x14]; mov r8d, eax; mov eax, 3; syscall; 
0x0000000000023ae1: movsxd rdi, dword ptr [rsp + 0x18]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004e664: movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000005b3c1: movsxd rdi, dword ptr [rsp + 0x1c]; call 0x169c0; add rsp, 0x28; ret; 
0x000000000004e66e: movsxd rdi, dword ptr [rsp + 0x1c]; mov rax, rdx; syscall; 
0x00000000000562e4: movsxd rdi, dword ptr [rsp + 0x30]; mov eax, 0x91; syscall; 
0x00000000000562cb: movsxd rdi, dword ptr [rsp + 0x30]; test edi, edi; je 0x562f3; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000001adc5: movsxd rdi, dword ptr [rsp + 0x50]; movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000004e6d2: movsxd rdi, dword ptr [rsp + rbp*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000049c65: movsxd rdi, eax; call 0x169c0; add rsp, 0x10; pop rbx; ret; 
0x000000000004b5e7: movsxd rdi, eax; call 0x169c0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000022669: movsxd rdi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000002331f: movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x0000000000022597: movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023524: movsxd rdi, eax; jne 0x23536; test edx, edx; jne 0x23536; mov eax, 0xfd; syscall; 
0x0000000000022280: movsxd rdi, eax; js 0x222a5; mov edx, 1; mov esi, 2; mov rax, r9; syscall; 
0x000000000005abdb: movsxd rdi, eax; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000005a95c: movsxd rdi, eax; mov eax, 0; cmove rdi, rax; call 0x169c0; pop rdi; ret; 
0x0000000000022260: movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000003b48b: movsxd rdi, eax; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004cb1e: movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000003b46f: movsxd rdi, eax; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000043196: movsxd rdi, eax; mov rax, rbp; syscall; 
0x000000000005661d: movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000572a5: movsxd rdi, eax; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x000000000004079f: movsxd rdi, ebp; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x000000000005a358: movsxd rdi, ebp; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x000000000004b6fb: movsxd rdi, ebp; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004ac79: movsxd rdi, ebp; mov dword ptr [rsp + 0x20], eax; movsxd rsi, ebx; mov eax, 0x81; mov rdx, r12; syscall; 
0x0000000000059113: movsxd rdi, ebp; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x000000000004b68d: movsxd rdi, ebp; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004b6ae: movsxd rdi, ebp; mov esi, 3; mov rax, r8; syscall; 
0x000000000005aafc: movsxd rdi, ebp; movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x0000000000042865: movsxd rdi, ebx; call 0x169c0; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000049b2f: movsxd rdi, ebx; call 0x169c0; pop rbx; ret; 
0x0000000000021453: movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003d59c: movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x000000000004b532: movsxd rdi, ebx; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000004e4de: movsxd rdi, ebx; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000005b1e5: movsxd rdi, ecx; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005aa30: movsxd rdi, ecx; call 0x169c0; pop rdx; ret; 
0x000000000004b197: movsxd rdi, ecx; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000037a4d: movsxd rdi, edi; bsf rax, rdi; inc eax; ret; 
0x000000000005b209: movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000023c33: movsxd rdi, edi; mov eax, 0x115; syscall; 
0x0000000000023d08: movsxd rdi, edi; mov eax, 0x116; syscall; 
0x0000000000023347: movsxd rdi, edi; mov eax, 0x123; push rcx; mov rdx, rdi; syscall; 
0x0000000000023513: movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x00000000000237b1: movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x00000000000232cc: movsxd rdi, edi; mov eax, 0x131; syscall; 
0x000000000002392a: movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023915: movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000430e7: movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000003d492: movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d12c: movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000005ac10: movsxd rdi, edi; mov eax, 0x51; sub rsp, 0x20; syscall; 
0x000000000004af49: movsxd rdi, edi; mov eax, 0x5b; mov rsi, rbx; sub rsp, 0x28; syscall; 
0x00000000000239ca: movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000023de5: movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x0000000000023d6c: movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000023d9c: movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x0000000000049b06: movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x00000000000234c8: movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x00000000000226bb: movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x00000000000223ae: movsxd rdi, edi; mov eax, 0xdd; syscall; 
0x00000000000223ae: movsxd rdi, edi; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000021eb8: movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000005737f: movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000004b102: movsxd rdi, edi; mov eax, 5; mov rsi, rbx; syscall; 
0x000000000004b837: movsxd rdi, edi; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x00000000000431dc: movsxd rdi, edi; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000043268: movsxd rdi, edi; mov edx, 4; mov rax, r8; syscall; 
0x0000000000023b65: movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000004b359: movsxd rdi, edi; mov edx, edx; mov eax, 0x103; syscall; 
0x000000000005acd4: movsxd rdi, edi; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000004afbb: movsxd rdi, edi; mov edx, edx; mov eax, 0x10c; syscall; 
0x000000000003b4b5: movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x000000000005ac67: movsxd rdi, edi; mov edx, edx; mov eax, 0x5d; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x000000000005af1f: movsxd rdi, edi; mov esi, 0x5413; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x0000000000054577: movsxd rdi, edi; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000545c5: movsxd rdi, edi; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000023489: movsxd rdi, edi; mov esi, esi; mov eax, 0x12d; syscall; 
0x00000000000233a6: movsxd rdi, edi; mov r10, rbx; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000004afee: movsxd rdi, edi; mov r10d, 0x100; mov rax, r14; mov rdx, r13; syscall; 
0x000000000005b268: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x000000000005af8d: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x0000000000023bd0: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x0000000000023332: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x000000000005aaca: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000002271d: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x00000000000226cf: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x0000000000023d2e: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x00000000000239b3: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x000000000005afa4: movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x0000000000023c71: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023458: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023ca2: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238fb: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x0000000000023a32: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x28; syscall; 
0x000000000005a9a3: movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x00000000000406ac: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4ad: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x37; syscall; 
0x0000000000022688: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x0000000000022659: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x42; syscall; 
0x0000000000023382: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0xe9; syscall; 
0x00000000000406d0: movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df46: movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x0000000000023cce: movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x0000000000023cb9: movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x0000000000023c47: movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x000000000005a988: movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000004a62d: movsxd rdi, edi; push rax; mov eax, 0x24; syscall; 
0x000000000004a797: movsxd rdi, edi; push rax; mov eax, 0x26; syscall; 
0x00000000000226a2: movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x000000000005ad3e: movsxd rdi, edi; push rax; mov eax, 0x4d; syscall; 
0x00000000000388cf: movsxd rdi, edi; push rax; mov eax, 0x62; syscall; 
0x000000000005ae00: movsxd rdi, edi; push rax; mov eax, 0x73; syscall; 
0x000000000005aecf: movsxd rdi, edi; push rax; mov eax, 0x79; syscall; 
0x000000000005aefe: movsxd rdi, edi; push rax; mov eax, 0x7c; syscall; 
0x0000000000049b9d: movsxd rdi, edi; push rax; mov eax, 0x92; syscall; 
0x0000000000049bb2: movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x0000000000049c91: movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000003a1fd: movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x0000000000023261: movsxd rdi, edi; push rax; mov eax, 0x9e; syscall; 
0x0000000000023589: movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x0000000000023e1d: movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x0000000000049ae2: movsxd rdi, edi; push rax; mov eax, 0xcb; syscall; 
0x00000000000591ac: movsxd rdi, edi; push rax; mov eax, 0xe3; syscall; 
0x000000000005908d: movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x000000000003a779: movsxd rdi, edi; push rax; mov eax, 0xf5; syscall; 
0x000000000003a53e: movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x000000000004b313: movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023545: movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000396f1: movsxd rdi, edi; push rax; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x000000000005b5b8: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x00000000000237c5: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x000000000002359e: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000023c86: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023b02: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x00000000000226e4: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004a642: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x00000000000225a1: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000022589: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x000000000002349f: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005b2c3: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000002355c: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000387dc: movsxd rdi, edi; push rcx; mov esi, esi; mov eax, 0x8c; syscall; 
0x00000000000223c1: movsxd rdi, edi; xor esi, esi; mov eax, 0x11d; mov rdx, r8; syscall; 
0x000000000004071c: movsxd rdi, edi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000233d3: movsxd rdi, edx; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000023408: movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x000000000004b3b4: movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x000000000005907b: movsxd rdi, edx; syscall; 
0x000000000005907b: movsxd rdi, edx; syscall; test eax, eax; je 0x59086; neg eax; ret; 
0x000000000003a6c0: movsxd rdi, esp; lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x000000000004a8b5: movsxd rdi, esp; mov eax, 0xd; syscall; 
0x000000000003a5ea: movsxd rdi, esp; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000004f186: movsxd rdi, esp; mov eax, 3; syscall; 
0x00000000000233d2: movsxd rdi, r10d; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003a6bf: movsxd rdi, r12d; lea rsi, [rsp + 0x70]; mov qword ptr [rsp + 0x70], rax; mov eax, 0xf4; syscall; 
0x000000000004a8b4: movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000003a5e9: movsxd rdi, r12d; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000004f185: movsxd rdi, r12d; mov eax, 3; syscall; 
0x00000000000430e6: movsxd rdi, r15d; mov eax, 0x20; syscall; 
0x00000000000431db: movsxd rdi, r15d; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000043267: movsxd rdi, r15d; mov edx, 4; mov rax, r8; syscall; 
0x000000000005abda: movsxd rdi, r8d; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000003b48a: movsxd rdi, r8d; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000005aa2f: movsxd rdi, r9d; call 0x169c0; pop rdx; ret; 
0x000000000004b196: movsxd rdi, r9d; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x00000000000506c8: movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x00000000000528c7: movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x0000000000051f32: movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x0000000000051f33: movsxd rdx, dword ptr [rax + rdi*4]; add rax, rdx; jmp rax; 
0x000000000001e1b3: movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000020ea8: movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000528c8: movsxd rdx, dword ptr [rax]; add rax, rdx; jmp rax; 
0x000000000005b35d: movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000051146: movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x000000000005274c: movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000043161: movsxd rdx, eax; mov rax, r12; syscall; 
0x000000000004b6c8: movsxd rdx, eax; mov rax, r8; syscall; 
0x0000000000027648: movsxd rdx, eax; movzx edx, word ptr [rcx + rdx*2]; cmp rdx, rdi; adc eax, 0; ret; 
0x0000000000054650: movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004b535: movsxd rdx, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000003a287: movsxd rdx, ebp; mov eax, 9; syscall; 
0x000000000004bba5: movsxd rdx, ebp; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000005aaff: movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x000000000003a375: movsxd rdx, ebx; mov eax, 0x19; syscall; 
0x000000000003a281: movsxd rdx, ebx; movsxd r8, r8d; movsxd rdx, ebp; mov eax, 9; syscall; 
0x00000000000223ab: movsxd rdx, ecx; movsxd rdi, edi; mov eax, 0xdd; syscall; 
0x00000000000223ab: movsxd rdx, ecx; movsxd rdi, edi; mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000005aac7: movsxd rdx, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000004b194: movsxd rdx, ecx; movsxd rdi, r9d; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000023485: movsxd rdx, ecx; push rax; movsxd rdi, edi; mov esi, esi; mov eax, 0x12d; syscall; 
0x000000000008d013: movsxd rdx, ecx; ret 0x3fe9; 
0x00000000000239dc: movsxd rdx, edi; push rax; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000000930f8: movsxd rdx, edi; sti; jmp rax; 
0x0000000000028272: movsxd rdx, edx; cmp rax, rdx; setb al; movzx eax, al; pop rbx; ret; 
0x0000000000058f33: movsxd rdx, edx; imul rdx, rdx, 0x15180; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x000000000005b5bc: movsxd rdx, edx; mov eax, 0x107; syscall; 
0x000000000005b26b: movsxd rdx, edx; mov eax, 0x108; syscall; 
0x000000000005af90: movsxd rdx, edx; mov eax, 0x109; syscall; 
0x0000000000023bd3: movsxd rdx, edx; mov eax, 0x113; syscall; 
0x00000000000237c9: movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000023335: movsxd rdx, edx; mov eax, 0x146; syscall; 
0x000000000005aacd: movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000003a413: movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003a413: movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000022720: movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x00000000000226d2: movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x00000000000406b2: movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4b3: movsxd rdx, edx; mov eax, 0x37; syscall; 
0x0000000000023d31: movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x000000000002268e: movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000002265f: movsxd rdx, edx; mov eax, 0x42; syscall; 
0x00000000000235a2: movsxd rdx, edx; mov eax, 0x67; syscall; 
0x00000000000396f7: movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000239b6: movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x0000000000023a02: movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000023388: movsxd rdx, edx; mov eax, 0xe9; syscall; 
0x000000000005afa7: movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005a9ed: movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x000000000004b911: movsxd rdx, edx; mov rdi, r9; mov rsi, r12; syscall; 
0x0000000000056fd8: movsxd rdx, edx; or esi, 1; mov rax, r8; movsxd rsi, esi; syscall; 
0x000000000003a1c4: movsxd rdx, edx; push rax; mov eax, 0x1c; syscall; 
0x0000000000023574: movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x0000000000023b61: movsxd rdx, edx; push rcx; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005fb83: movsxd rdx, edx; ret; 
0x000000000004d34d: movsxd rdx, esp; mov eax, 0x48; syscall; 
0x000000000004d34c: movsxd rdx, r12d; mov eax, 0x48; syscall; 
0x000000000004bba4: movsxd rdx, r13d; mov rax, r14; mov rsi, rbp; syscall; 
0x000000000005464f: movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004318d: movsxd rsi, dword ptr [r8 + 0x14]; cmp eax, esi; je 0x431ce; movsxd rdi, eax; mov rax, rbp; syscall; 
0x000000000004313d: movsxd rsi, dword ptr [r8 + 0x14]; cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x000000000004318e: movsxd rsi, dword ptr [rax + 0x14]; cmp eax, esi; je 0x431ce; movsxd rdi, eax; mov rax, rbp; syscall; 
0x000000000004313e: movsxd rsi, dword ptr [rax + 0x14]; cmp edi, esi; je 0x4314c; mov rax, rbp; syscall; 
0x000000000005b356: movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000043047: movsxd rsi, dword ptr [rbx + 4]; xor edi, edi; mov eax, 0x6d; syscall; 
0x000000000005fcfc: movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x000000000001adca: movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x00000000000560ac: movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x000000000001b2e2: movsxd rsi, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000004317a: movsxd rsi, eax; mov rax, r14; syscall; 
0x00000000000567e0: movsxd rsi, eax; syscall; 
0x000000000004ac80: movsxd rsi, ebx; mov eax, 0x81; mov rdx, r12; syscall; 
0x0000000000056620: movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000004a765: movsxd rsi, ebx; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000003972f: movsxd rsi, edi; mov eax, 0x12e; sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000004cafc: movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000040822: movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x0000000000023c74: movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023c8a: movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x000000000002345b: movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023ca5: movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238fe: movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x0000000000023b06: movsxd rsi, esi; mov eax, 0x134; syscall; 
0x00000000000235cb: movsxd rsi, esi; mov eax, 0x144; sub rsp, 0x128; syscall; 
0x00000000000226e8: movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x0000000000023a35: movsxd rsi, esi; mov eax, 0x28; syscall; 
0x000000000004a646: movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x00000000000225a5: movsxd rsi, esi; mov eax, 0x44; syscall; 
0x000000000002258d: movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000022296: movsxd rsi, esi; mov eax, 0x48; mov rdx, r10; syscall; 
0x00000000000234a3: movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005b2c7: movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000005a5a6: movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000003a752: movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000023560: movsxd rsi, esi; mov eax, 0xff; syscall; 
0x000000000005677e: movsxd rsi, esi; mov r10, rbp; mov rax, r13; syscall; 
0x000000000005a9a6: movsxd rsi, esi; mov rax, r8; syscall; 
0x000000000001e0d7: movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x00000000000406af: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4b0: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x37; syscall; 
0x000000000002268b: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000002265c: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x42; syscall; 
0x0000000000023385: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0xe9; syscall; 
0x000000000005b410: movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x000000000005a8a2: movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x0000000000023795: movsxd rsi, esi; push rax; mov eax, 0xa6; syscall; 
0x0000000000023c08: movsxd rsi, esi; push rax; mov eax, 0xa7; syscall; 
0x00000000000233e7: movsxd rsi, esi; push rcx; mov edi, edi; mov eax, 0x122; syscall; 
0x0000000000040759: movsxd rsi, esi; syscall; 
0x00000000000406d3: movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df49: movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x000000000008680d: movsxd rsi, esp; jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x00000000000572a8: movsxd rsi, esp; mov eax, 0x90; syscall; 
0x0000000000056c15: movsxd rsi, esp; syscall; 
0x00000000000572a7: movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x0000000000056c14: movsxd rsi, r12d; syscall; 
0x00000000000567df: movsxd rsi, r8d; syscall; 
0x0000000000057eb6: movsxd rsp, eax; mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000003533b: movups xmm0, xmmword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x000000000003538b: movups xmm0, xmmword ptr [rip + 0x5d836]; jne 0x35397; movaps xmm0, xmm1; ret; 
0x00000000000342f5: movups xmm0, xmmword ptr [rip + 0x5d934]; add rsp, 0x40; pop rbx; ret; 
0x00000000000345f2: movups xmm0, xmmword ptr [rip + 0x5e333]; add rsp, 0x28; ret; 
0x00000000000336b5: movups xmm0, xmmword ptr [rip + 0x5f1bc]; ret; 
0x00000000000336be: movups xmm0, xmmword ptr [rip + 0x5f2eb]; ret; 
0x0000000000032811: movups xmm0, xmmword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000002ffad: movups xmm0, xmmword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000003054b: movups xmm0, xmmword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002f4a1: movups xmm0, xmmword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x000000000002fa1e: movups xmm0, xmmword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x000000000002dea4: movups xmm0, xmmword ptr [rip + 0x63ef5]; ret; 
0x000000000002d233: movups xmm0, xmmword ptr [rip + 0x6511e]; call 0x33c87; add rsp, 0x20; pop rbx; ret; 
0x000000000002c44b: movups xmm0, xmmword ptr [rip + 0x65eee]; je 0x2c465; movsd xmm1, qword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c9ca: movups xmm0, xmmword ptr [rip + 0x661d7]; je 0x2c9e3; movss xmm1, dword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002b8f0: movups xmm0, xmmword ptr [rip + 0x66339]; ret; 
0x000000000002b8ff: movups xmm0, xmmword ptr [rip + 0x6681a]; ret; 
0x0000000000028a4b: movups xmm0, xmmword ptr [rip + 0x691de]; movsd qword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000028a73: movups xmm0, xmmword ptr [rip + 0x69eb2]; movss dword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x000000000002ea97: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d21: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000002ea31: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d3e: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000364cd: movups xmm0, xmmword ptr [rsp + 8]; and eax, 1; mov edi, eax; call 0x29d51; add rsp, 0x18; ret; 
0x000000000004243a: movups xmm0, xmmword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002e4d5: movups xmm0, xmmword ptr [rsp - 0x10]; ret; 
0x00000000000370ef: movups xmm0, xmmword ptr [rsp - 0x14]; ret; 
0x00000000000370a4: movups xmm0, xmmword ptr [rsp - 0x18]; ret; 
0x0000000000028a84: movups xmm0, xmmword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000035189: movups xmm0, xmmword ptr [rsp - 4]; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000001c9fb: movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x0000000000028a5c: movups xmm0, xmmword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000034fa5: movups xmm0, xmmword ptr [rsp - 8]; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000001ce31: movups xmm0, xmmword ptr [rsp - 8]; ret; 
0x00000000000363e3: movups xmm0, xmmword ptr [rsp]; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x00000000000366a7: movups xmm1, xmmword ptr [rip + 0x5a322]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000365c7: movups xmm1, xmmword ptr [rip + 0x5a3f2]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000036031: movups xmm1, xmmword ptr [rip + 0x5a998]; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x00000000000354c7: movups xmm1, xmmword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x0000000000035433: movups xmm1, xmmword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x00000000000352e5: movups xmm1, xmmword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x000000000003513e: movups xmm1, xmmword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x0000000000032a04: movups xmm1, xmmword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fff4: movups xmm1, xmmword ptr [rip + 0x625c5]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002f4c3: movups xmm1, xmmword ptr [rip + 0x62766]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000030590: movups xmm1, xmmword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa3f: movups xmm1, xmmword ptr [rip + 0x62ee6]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c894: movups xmm1, xmmword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002da8b: movups xmm1, xmmword ptr [rip + 0x6430e]; movapd xmm0, xmm1; ret; 
0x000000000002c30e: movups xmm1, xmmword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002df28: movups xmm1, xmmword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000002dd00: movups xmm1, xmmword ptr [rip + 0x64e75]; movaps xmm0, xmm1; ret; 
0x000000000002b43b: movups xmm1, xmmword ptr [rip + 0x6558e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b39b: movups xmm1, xmmword ptr [rip + 0x6561e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b2df: movups xmm1, xmmword ptr [rip + 0x656ea]; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c455: movups xmm1, xmmword ptr [rip + 0x65c44]; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002ad73: movups xmm1, xmmword ptr [rip + 0x65c46]; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c432: movups xmm1, xmmword ptr [rip + 0x65c67]; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002aa94: movups xmm1, xmmword ptr [rip + 0x65f35]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002bc93: movups xmm1, xmmword ptr [rip + 0x65f96]; call 0x28914; add rsp, 0x28; ret; 
0x000000000002a988: movups xmm1, xmmword ptr [rip + 0x66031]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a862: movups xmm1, xmmword ptr [rip + 0x66167]; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002c9d4: movups xmm1, xmmword ptr [rip + 0x66201]; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b2: movups xmm1, xmmword ptr [rip + 0x66223]; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x000000000002bd32: movups xmm1, xmmword ptr [rip + 0x66bf3]; call 0x2894a; add rsp, 0x28; ret; 
0x0000000000029cda: movups xmm1, xmmword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x000000000002b988: movups xmm1, xmmword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x0000000000028b00: movups xmm1, xmmword ptr [rip + 0x67ec9]; xorps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000028add: movups xmm1, xmmword ptr [rip + 0x67edc]; xorps xmm1, xmm0; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001b94f: movups xmm1, xmmword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001a01e: movups xmm1, xmmword ptr [rip + 0x77c6b]; addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x000000000001ba1e: movups xmm1, xmmword ptr [rsp + 0x1c]; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000002896a: movups xmm1, xmmword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x0000000000028934: movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x18; mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001ca50: movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001cd37: movups xmm1, xmmword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d1a2: movups xmm1, xmmword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002e9b5: movups xmm1, xmmword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x0000000000028b11: movups xmm1, xmmword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000335f3: movups xmm1, xmmword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000002e884: movups xmm1, xmmword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000028aee: movups xmm1, xmmword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000033587: movups xmm1, xmmword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000003564e: movups xmm2, xmmword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x00000000000355a0: movups xmm2, xmmword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000001cb50: movups xmm2, xmmword ptr [rip + 0x73e69]; xorps xmm1, xmm2; ret; 
0x000000000001b698: movups xmm2, xmmword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000001c802: movups xmm2, xmmword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000002e4c6: movups xmm2, xmmword ptr [rsp - 0x10]; maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002e522: movups xmm2, xmmword ptr [rsp - 8]; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001bc72: movups xmm2, xmmword ptr [rsp]; movapd xmm1, xmm0; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x0000000000028fce: movups xmmword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000028fc9: movups xmmword ptr [rbp], xmm1; movsd qword ptr [rbp + 8], xmm0; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000029747: movups xmmword ptr [rbx], xmm0; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000035db9: movups xmmword ptr [rbx], xmm1; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000035af9: movups xmmword ptr [rbx], xmm2; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000000335d7: movups xmmword ptr [rdi], xmm0; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002969b: movups xmmword ptr [rdi], xmm0; ret; 
0x0000000000033591: movups xmmword ptr [rdi], xmm1; ret; 
0x00000000000296aa: movups xmmword ptr [rdi], xmm4; ret; 
0x00000000000296df: movups xmmword ptr [rdi], xmm6; ret; 
0x000000000002eb5e: movups xmmword ptr [rsi], xmm1; ret; 
0x000000000001cdb5: movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b805: movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba24: movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001cdbb: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001b80b: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001ba2a: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001c99c: movups xmmword ptr [rsp + 0x20], xmm1; movss dword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da4e: movups xmmword ptr [rsp + 0x20], xmm3; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c9a2: movups xmmword ptr [rsp + 0x24], xmm0; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x40; pop rbx; ret; 
0x000000000001da54: movups xmmword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000033b2a: movups xmmword ptr [rsp + 0x28], xmm0; movapd xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c681: movups xmmword ptr [rsp + 0x28], xmm1; movss dword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x0000000000033c28: movups xmmword ptr [rsp + 0x2c], xmm0; movaps xmm0, xmm1; add rsp, 0x30; pop rbx; ret; 
0x000000000001c687: movups xmmword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfd5: movups xmmword ptr [rsp + 0x30], xmm1; movss dword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000001dfdb: movups xmmword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x000000000003373b: movups xmmword ptr [rsp + 0xc], xmm0; call 0x2248e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x00000000000336f9: movups xmmword ptr [rsp + 8], xmm0; call 0x2248e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001ca41: movups xmmword ptr [rsp + 8], xmm0; movapd xmm0, xmm4; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000019c3d: movups xmmword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x0000000000019c37: movups xmmword ptr [rsp - 0x18], xmm0; movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x0000000000019c36: movups xmmword ptr [rsp - 0x18], xmm8; movss dword ptr [rsp - 0x14], xmm4; mov rax, qword ptr [rsp - 0x18]; mov qword ptr [rsp - 0x20], rax; movq xmm0, qword ptr [rsp - 0x20]; ret; 
0x000000000002f043: movups xmmword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002f00b: movups xmmword ptr [rsp - 0x20], xmm0; ret; 
0x00000000000370e9: movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x000000000002ef76: movups xmmword ptr [rsp - 4], xmm0; ret; 
0x0000000000028a7b: movups xmmword ptr [rsp - 4], xmm0; xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x0000000000028b0b: movups xmmword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000032bc5: movups xmmword ptr [rsp - 4], xmm1; ret; 
0x00000000000338ee: movups xmmword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x000000000003547e: movups xmmword ptr [rsp - 4], xmm2; ret; 
0x000000000002ef3e: movups xmmword ptr [rsp - 8], xmm0; ret; 
0x0000000000028a53: movups xmmword ptr [rsp - 8], xmm0; xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x000000000002b8ea: movups xmmword ptr [rsp - 8], xmm1; movsd xmm0, qword ptr [rip + 0x66339]; ret; 
0x000000000002b8f9: movups xmmword ptr [rsp - 8], xmm1; movsd xmm0, qword ptr [rip + 0x6681a]; ret; 
0x0000000000028ae8: movups xmmword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002de93: movups xmmword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000002de9e: movups xmmword ptr [rsp - 8], xmm2; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x00000000000353e5: movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000001c6c6: movups xmmword ptr [rsp], xmm1; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x000000000003e145: movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000018ac1: movzx eax, al; movzx edx, dl; sub eax, edx; ret; 
0x0000000000041d58: movzx eax, al; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023423: movzx eax, al; neg eax; pop rdx; ret; 
0x0000000000022e4f: movzx eax, al; neg eax; ret; 
0x000000000004cfb3: movzx eax, al; pop rbx; neg eax; pop rbp; pop r12; ret; 
0x0000000000020f86: movzx eax, al; pop rbx; ret; 
0x0000000000020db5: movzx eax, al; pop rdx; ret; 
0x0000000000020d3e: movzx eax, al; ret; 
0x0000000000029a00: movzx eax, ax; ret; 
0x000000000003da17: movzx eax, bh; cmp edx, 0xbf; movzx edi, di; cmovbe eax, edi; ret; 
0x000000000004f2a5: movzx eax, bpl; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c265: movzx eax, byte ptr [rax]; ret; 
0x0000000000020e36: movzx eax, byte ptr [rcx + rax]; mov ecx, edi; and ecx, 7; sar eax, cl; and eax, 1; ret; 
0x0000000000018d1f: movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000018d18: movzx eax, byte ptr [rdi + 0x1d]; mov byte ptr [rsi + 0x1c], al; movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x000000000005712e: movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000003b958: movzx eax, byte ptr [rdx]; test al, al; jne 0x3b966; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000004b9e5: movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000004f2a6: movzx eax, ch; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018a84: movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x00000000000171f0: movzx eax, cl; sub eax, r8d; ret; 
0x000000000003da16: movzx eax, dil; cmp edx, 0xbf; movzx edi, di; cmovbe eax, edi; ret; 
0x0000000000017bb0: movzx eax, dl; movzx edx, cl; sub eax, edx; ret; 
0x0000000000024ae8: movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000026fee: movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000024d87: movzx ecx, al; lea rax, [rip + 0x6dc2b]; movsxd rcx, dword ptr [rax + rcx*4]; add rax, rcx; jmp rax; 
0x000000000002b71c: movzx ecx, ax; jne 0x2b724; fadd st(0); ret; 
0x000000000003b3ab: movzx edi, bh; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x000000000003da20: movzx edi, di; cmovbe eax, edi; ret; 
0x000000000003b3aa: movzx edi, dil; cmp edx, 0x7f; cmovbe eax, edi; ret; 
0x0000000000025bbc: movzx edx, al; lea rax, [rip + 0x6cf32]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6a: movzx edx, al; lea rax, [rip + 0x6cf38]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255e6: movzx edx, al; lea rax, [rip + 0x6d470]; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000018a88: movzx edx, al; sub eax, edx; ret; 
0x00000000000146c2: movzx edx, byte ptr [rdi + rsi]; shl edx, 8; or eax, edx; ret; 
0x0000000000018760: movzx edx, byte ptr [rsi]; mov rax, rdi; test dl, dl; jne 0x18770; ret; 
0x0000000000017bb3: movzx edx, cl; sub eax, edx; ret; 
0x0000000000026047: movzx edx, dl; and eax, edx; ret; 
0x000000000001e1af: movzx edx, dl; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000051142: movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000018ac4: movzx edx, dl; sub eax, edx; ret; 
0x0000000000018a87: movzx edx, r8b; sub eax, edx; ret; 
0x000000000002764a: movzx edx, word ptr [rcx + rdx*2]; cmp rdx, rdi; adc eax, 0; ret; 
0x0000000000075e47: mul byte ptr [edi - 0x12]; jecxz 0x75eb5; ret 0xb967; 
0x0000000000075e48: mul byte ptr [rdi - 0x12]; jecxz 0x75eb5; ret 0xb967; 
0x0000000000075e45: mul dword ptr [edi - 0xa]; out dx, al; jecxz 0x75eb5; ret 0xb967; 
0x0000000000075e46: mul dword ptr [rdi - 0xa]; out dx, al; jecxz 0x75eb5; ret 0xb967; 
0x000000000008cb49: mul dword ptr [rdx - 0x16]; wait; jmp qword ptr [rcx + 0x3c]; 
0x0000000000032a00: mulps xmm0, xmm0; movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c466: mulps xmm0, xmm0; ret; 
0x000000000002d1a8: mulps xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002b61a: mulps xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034fab: mulps xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000003518f: mulps xmm0, xmm1; divss xmm0, xmm0; ret; 
0x00000000000353e1: mulps xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003547a: mulps xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000028942: mulps xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001a02a: mulps xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000028978: mulps xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000002ff8d: mulps xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x0000000000028af4: mulps xmm0, xmm1; ret; 
0x000000000002a5a3: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000029fe4: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000028946: mulps xmm0, xmm2; ret; 
0x00000000000300da: mulps xmm0, xmmword ptr [rip + 0x61d17]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000030671: mulps xmm0, xmmword ptr [rip + 0x62730]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002f5d3: mulps xmm0, xmmword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002fb48: mulps xmm0, xmmword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002a74c: mulps xmm0, xmmword ptr [rip + 0x674d5]; addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a1a7: mulps xmm0, xmmword ptr [rip + 0x689f2]; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c1bb: mulps xmm0, xmmword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002c747: mulps xmm0, xmmword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002d6cb: mulps xmm0, xmmword ptr [rsp - 0x10]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003583b: mulps xmm0, xmmword ptr [rsp - 4]; ret; 
0x00000000000357c8: mulps xmm0, xmmword ptr [rsp - 8]; ret; 
0x000000000002a7c6: mulps xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000003280d: mulps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x0000000000032d9d: mulps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002a59f: mulps xmm1, xmm0; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000029fe0: mulps xmm1, xmm0; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a1a3: mulps xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x689f2]; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001d242: mulps xmm1, xmm2; add rsp, 0x28; ret; 
0x000000000002893e: mulps xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x0000000000028974: mulps xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000001a02e: mulps xmm1, xmm2; ret; 
0x0000000000029aef: mulps xmm1, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a3: mulps xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029d49: mulps xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000002b6f1: mulps xmm1, xmm4; addsd xmm0, xmm2; divsd xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000001bc7f: mulps xmm1, xmmword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001b57f: mulps xmm1, xmmword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001b585: mulps xmm1, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c808: mulps xmm1, xmmword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000001c316: mulps xmm2, xmm0; movapd xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000002eb52: mulps xmm2, xmm2; addsd xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000029a71: mulps xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000029aeb: mulps xmm2, xmm4; mulsd xmm1, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a65: mulps xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000028897: mulps xmm3, xmm2; subsd xmm3, qword ptr [rip + 0x694b6]; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000001c312: mulps xmm4, xmm0; mulsd xmm2, xmm0; movapd xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x0000000000032b50: mulps xmm4, xmm3; addss xmm2, xmm0; movaps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000029a96: mulps xmm4, xmm5; subsd xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x00000000000300d9: mulsd xmm0, qword ptr [rip + 0x61d17]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002f5d2: mulsd xmm0, qword ptr [rip + 0x6281e]; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002a74b: mulsd xmm0, qword ptr [rip + 0x674d5]; addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002c1ba: mulsd xmm0, qword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d6ca: mulsd xmm0, qword ptr [rsp - 0x10]; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000357c7: mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002c465: mulsd xmm0, xmm0; ret; 
0x000000000002d1a7: mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002b619: mulsd xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034faa: mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x00000000000353e0: mulsd xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000028941: mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001a029: mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x000000000002ff8c: mulsd xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x0000000000028af3: mulsd xmm0, xmm1; ret; 
0x000000000002a5a2: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000029fe3: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000028945: mulsd xmm0, xmm2; ret; 
0x000000000001bc7e: mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001b57e: mulsd xmm1, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001b584: mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c807: mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000003280c: mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x5f588]; divsd xmm0, xmm1; ret; 
0x000000000002a59e: mulsd xmm1, xmm0; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67682]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000029fdf: mulsd xmm1, xmm0; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x67c41]; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001d241: mulsd xmm1, xmm2; add rsp, 0x28; ret; 
0x000000000002893d: mulsd xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x000000000001a02d: mulsd xmm1, xmm2; ret; 
0x0000000000029aee: mulsd xmm1, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a2: mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029d48: mulsd xmm1, xmm4; addsd xmm0, xmm1; ret; 
0x000000000002b6f0: mulsd xmm1, xmm4; addsd xmm0, xmm2; divsd xmm1, xmm0; cvtsd2ss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000001c315: mulsd xmm2, xmm0; movapd xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000002eb51: mulsd xmm2, xmm2; addsd xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000029a70: mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000029aea: mulsd xmm2, xmm4; mulsd xmm1, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a64: mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000028896: mulsd xmm3, xmm2; subsd xmm3, qword ptr [rip + 0x694b6]; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000001c311: mulsd xmm4, xmm0; mulsd xmm2, xmm0; movapd xmm1, xmm2; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x0000000000029a95: mulsd xmm4, xmm5; subsd xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000030670: mulss xmm0, dword ptr [rip + 0x62730]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002fb47: mulss xmm0, dword ptr [rip + 0x63259]; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002a1a6: mulss xmm0, dword ptr [rip + 0x689f2]; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c746: mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000003583a: mulss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000329ff: mulss xmm0, xmm0; movss xmm1, dword ptr [rip + 0x60171]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9e3: mulss xmm0, xmm0; ret; 
0x000000000003518e: mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000035479: mulss xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000028977: mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x0000000000030533: mulss xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x0000000000028b16: mulss xmm0, xmm1; ret; 
0x000000000002897b: mulss xmm0, xmm2; ret; 
0x000000000002a7c5: mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000032d9c: mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002a1a2: mulss xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x689f2]; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000028973: mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x0000000000032b4f: mulss xmm4, xmm3; addss xmm2, xmm0; movaps xmm0, xmm4; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000033c81: neg eax; add eax, 2; ret; 
0x0000000000041d5b: neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000028a38: neg eax; and eax, 4; ret; 
0x000000000003971e: neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000594fc: neg eax; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000004cfb7: neg eax; pop rbp; pop r12; ret; 
0x0000000000049b67: neg eax; pop rbx; ret; 
0x0000000000023426: neg eax; pop rdx; ret; 
0x000000000002129e: neg eax; ret; 
0x000000000005820c: neg eax; test r9d, r9d; cmove eax, r8d; ret; 
0x00000000000562df: neg ebx; jne 0x562f3; movsxd rdi, dword ptr [r12 + 0x30]; mov eax, 0x91; syscall; 
0x00000000000169e3: neg edi; mov dword ptr [rax], edi; mov rdi, -1; add rsp, 0x18; mov rax, rdi; ret; 
0x00000000000533c4: neg edx; test ecx, ecx; cmove eax, edx; ret; 
0x000000000005341a: neg edx; test ecx, ecx; cmove rax, rdx; ret; 
0x00000000000378f0: neg edx; xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x0000000000053419: neg rdx; test ecx, ecx; cmove rax, rdx; ret; 
0x0000000000017cf3: nop dword ptr [rax + rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000000170a8: nop dword ptr [rax + rax]; lea rax, [rdi + 1]; pop rbx; ret; 
0x0000000000018acb: nop dword ptr [rax + rax]; mov eax, 1; ret; 
0x0000000000018e13: nop dword ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x00000000000175e8: nop dword ptr [rax + rax]; mov rax, rdi; ret; 
0x00000000000171eb: nop dword ptr [rax + rax]; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000017bab: nop dword ptr [rax + rax]; movzx eax, dl; movzx edx, cl; sub eax, edx; ret; 
0x0000000000017a23: nop dword ptr [rax + rax]; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001901b: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000017b64: nop dword ptr [rax]; call 0x17f50; add rax, rbx; pop rbx; ret; 
0x0000000000018e1d: nop dword ptr [rax]; call 0x18f60; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000001a214: nop dword ptr [rax]; fstp st(2); fstp st(2); fxch st(1); ret; 
0x000000000001689d: nop dword ptr [rax]; lea eax, [r8 + 2]; mov byte ptr [r9], 0x30; mov byte ptr [rdi + rax], 0; ret; 
0x0000000000019651: nop dword ptr [rax]; mov rax, rdi; ret; 
0x00000000000190ec: nop dword ptr [rax]; sub eax, r8d; ret; 
0x0000000000016b64: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000000170a7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 1]; pop rbx; ret; 
0x00000000000175e7: nop dword ptr cs:[rax + rax]; mov rax, rdi; ret; 
0x0000000000018aca: nop word ptr [rax + rax]; mov eax, 1; ret; 
0x0000000000018e12: nop word ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x00000000000170a6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 1]; pop rbx; ret; 
0x00000000000175e6: nop word ptr cs:[rax + rax]; mov rax, rdi; ret; 
0x0000000000057f36: nop; adc byte ptr [rcx + 1], 0; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x00000000000560a7: nop; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; je 0x560d3; push 0x24c28348; syscall; 
0x0000000000057f19: nop; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000002e0e2: nop; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xeed9; 
0x000000000004ed34: nop; add byte ptr [rax], al; add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000038013: nop; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005805e: nop; add dword ptr [rax], eax; add byte ptr [rcx + 1], al; ret 0xc031; 
0x000000000001e1b5: nop; add rax, rdx; jmp rax; 
0x00000000000804bf: nop; clc; push rcx; ret; 
0x00000000000169bf: nop; cmp rdi, -0x1000; ja 0x169d0; mov rax, rdi; ret; 
0x0000000000016eaf: nop; cmp rsi, 7; mov eax, 0x16; ja 0x16ec0; ret; 
0x00000000000053b5: nop; jg 0x5396; ret 0x793b; 
0x000000000004aeb1: nop; mov rax, 0xf; syscall; 
0x000000000006060b: nop; movabs al, byte ptr [0x9f3f09252da65cde]; out 8, al; ret 0x6132; 
0x000000000001875f: nop; movzx edx, byte ptr [rsi]; mov rax, rdi; test dl, dl; jne 0x18770; ret; 
0x000000000001e0ae: nop; or al, 3; add bh, bh; ror byte ptr [rax - 0x68], 0x5a; ret; 
0x0000000000019913: nop; pop rbx; pop rbp; ret; 
0x000000000006d416: nop; rcl byte ptr [rcx - 0x632d6a2e], cl; shl byte ptr [rax - 0x532d5b2e], cl; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000006cd9a: nop; ret 0xc298; 
0x000000000006edd5: nop; ret; 
0x0000000000076e94: nop; xchg eax, ebp; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x0000000000018a8f: nop; xor eax, eax; ret; 
0x0000000000023758: not byte ptr [rax - 0x48]; mov al, 0; add byte ptr [rax], al; syscall; 
0x000000000005b411: not byte ptr [rax - 0x48]; or al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000004b341: not byte ptr [rax - 0x48]; test dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005a921: not byte ptr [rax - 0x77]; sar byte ptr [rax + 0x5c], cl; syscall; 
0x000000000005af5e: not byte ptr [rax - 0x77]; sar byte ptr [rax + 0x5e], cl; syscall; 
0x0000000000032da9: not byte ptr [rbp + 0x310f77be]; ror byte ptr [rdi], 0x57; shr bl, 0x6d; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x000000000003433c: not eax; add eax, 2; ret; 
0x0000000000056f7e: not eax; and eax, 0x10; ret; 
0x0000000000039307: not eax; and eax, 0x22; add rsp, 0x10; pop rbx; ret; 
0x000000000005506e: not eax; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005717b: not eax; and eax, 0xb; ret; 
0x0000000000057d46: not eax; and eax, 0xfffffffe; pop rdx; ret; 
0x00000000000370e0: not eax; and eax, edx; mov dword ptr [rsp - 0x14], eax; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x0000000000056282: not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005a5d0: not eax; shr eax, 0x1f; pop rdx; ret; 
0x000000000004bf0a: not eax; shr eax, 0x1f; ret; 
0x00000000000224ad: not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000056a20: not esi; and esi, 0x80; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000043176: or ah, 0x80; movsxd rsi, eax; mov rax, r14; syscall; 
0x000000000004b6bf: or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x0000000000062392: or ah, byte ptr [rbp - 0x45]; or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x0000000000091682: or ah, cl; ret 0x1291; 
0x000000000001bb22: or al, 0; add byte ptr [rax], al; add rsp, 0xa8; fchs; fxch st(1); ret; 
0x0000000000027841: or al, 0; add byte ptr [rax], al; mov rdi, rbx; syscall; 
0x00000000000548db: or al, 0; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000023a27: or al, 0; add byte ptr [rax], al; syscall; 
0x0000000000023a27: or al, 0; add byte ptr [rax], al; syscall; ret; 
0x0000000000016f33: or al, 0; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x000000000000328c: or al, 0; add dword ptr [rcx + rax*4], eax; add al, 1; ret; 
0x0000000000055238: or al, 0x24; add al, ch; fistp dword ptr [rip + 0x39480000]; ret; 
0x0000000000056c98: or al, 0x24; add byte ptr [rbp + 0x410475c0], al; or dword ptr [rax], 8; ret; 
0x0000000000056cf4: or al, 0x24; add byte ptr [rbp + 0x410a75c0], al; or dword ptr [rax], 4; ret; 
0x000000000005a522: or al, 0x24; add byte ptr [rsi + 0x20], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x000000000001c6c8: or al, 0x24; fld qword ptr [rsp]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000084e8a: or al, 0x30; or eax, 0xf300e30; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x0000000000039b33: or al, 0x31; imul al; fcmovnbe st(0), st(5); add dword ptr [rax], eax; add rsp, 0x18; ret; 
0x00000000000548f7: or al, 0x31; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x000000000002eccb: or al, 0x39; ret 0xff3; 
0x0000000000054c04: or al, 0x48; add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000004d0e5: or al, 0x48; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021385: or al, 0x48; add esp, 0x10; pop rbx; ret; 
0x000000000002896e: or al, 0x48; add esp, 0x18; mulss xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x000000000004c62d: or al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000053d25: or al, 0x48; add esp, 0x18; ret; 
0x000000000002c751: or al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000003cab1: or al, 0x48; add esp, 0x228; pop rbx; pop rbp; ret; 
0x00000000000190e3: or al, 0x48; cmp ecx, edx; jne 0x190c0; xor eax, eax; ret; 
0x0000000000044b48: or al, 0x48; cwde; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000044b5a: or al, 0x48; cwde; mov rax, qword ptr [rdx + rax*8]; ret; 
0x00000000000389af: or al, 0x48; mov esi, ebx; call 0x23ab9; add rsp, 0x90; pop rbx; ret; 
0x000000000003a411: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003a411: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x000000000005b354: or al, 0x48; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000075f99: or al, 0x80; ret 0xd080; 
0x000000000001b29a: or al, 0x85; sal byte ptr [rbp + rcx - 0x7d], 0xf8; add dh, byte ptr [rbp + 0x4d]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x0000000000024d93: or al, 0x88; add rax, rcx; jmp rax; 
0x000000000002d263: or al, 0x89; ret 0xeac1; 
0x0000000000014c6f: or al, 0x89; ret 0xead3; 
0x0000000000033729: or al, 0x89; ret; 
0x000000000005a488: or al, 0x8b; xor byte ptr [rcx - 0x47cfdbbc], cl; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000062216: or al, 0x8f; jge 0x6220e; out dx, eax; call rcx; 
0x0000000000019912: or al, 0x90; pop rbx; pop rbp; ret; 
0x000000000001990f: or al, 0x96; mov dword ptr [rax + rdx*4], ecx; pop rbx; pop rbp; ret; 
0x000000000004f49d: or al, 0xb0; add rax, rcx; jmp rax; 
0x00000000000392d8: or al, 0xb8; adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005a35e: or al, 0xb8; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000057317: or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005abbb: or al, 0xba; add al, 0; add byte ptr [rax], al; xor eax, eax; syscall; 
0x000000000005b461: or al, 0xbe; adc byte ptr [rax + rax], dl; call 0x389c1; add rsp, 0x18; ret; 
0x000000000001f2c0: or al, 0xc1; retf 0x10f; ret 0x141; 
0x000000000005a8b0: or al, 0xc1; sti; lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x0000000000056a87: or al, 0xc7; adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000003caa8: or al, 0xe8; movabs al, byte ptr [0x480c24448bffffff]; add esp, 0x228; pop rbx; pop rbp; ret; 
0x0000000000014928: or al, 0xe8; ret 0x1f; 
0x0000000000034f35: or al, 0xe8; sbb byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000021b98: or al, 0xe9; sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000002ea95: or al, 0xf3; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d1f: or al, 0xf3; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000032a16: or al, 0xf3; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000055333: or al, 0xf7; ret 0xffff; 
0x000000000002f66a: or al, 0xf; push rdi; in al, 0xf; push rdi; ret 0x2e0f; 
0x0000000000035daf: or al, 0xf; push rdi; ret 0xff3; 
0x000000000006ba6e: or al, 0xff; or eax, 0xfff0eff; call qword ptr [rax]; 
0x0000000000038274: or al, 0xff; ret 0xc741; 
0x000000000004afc0: or al, 1; add byte ptr [rax], al; syscall; 
0x000000000002df22: or al, 1; sal byte ptr [rbx + rbx*4 - 0xd], cl; movups xmm1, xmmword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000002b982: or al, 1; sal byte ptr [rsi + rdx*4 - 0xd], cl; movups xmm1, xmmword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000003a5e5: or al, 2; je 0x3a605; movsxd rdi, r12d; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000001e0af: or al, 3; add bh, bh; ror byte ptr [rax - 0x68], 0x5a; ret; 
0x000000000002af00: or al, 5; add byte ptr [rax], al; add byte ptr [rdi + rcx], al; push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x000000000004ed31: or al, bh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000558f3: or al, bh; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x000000000003a841: or al, byte ptr [rax + 0xf]; mov esi, 0xdfff25c7; add byte ptr [rax], al; ret; 
0x00000000000528c4: or al, byte ptr [rax + rax]; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x0000000000056494: or al, byte ptr [rax]; add byte ptr [rax + 0xb], bh; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003a2dc: or al, byte ptr [rax]; add byte ptr [rax], al; and rsi, 0xfffffffffffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x000000000004ed38: or al, byte ptr [rax]; add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000037161: or al, byte ptr [rax]; add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x000000000005493d: or al, byte ptr [rax]; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000000335e: or al, byte ptr [rax]; ret 0x20e2; 
0x000000000005a311: or al, byte ptr [rbp - 0x3277f040]; add dword ptr [rax], eax; add bl, ch; or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x0000000000057175: or al, byte ptr [rbx - 0x3fe6fe01]; not eax; and eax, 0xb; ret; 
0x0000000000057d40: or al, byte ptr [rbx - 0x3fe6fe06]; not eax; and eax, 0xfffffffe; pop rdx; ret; 
0x000000000005697c: or al, byte ptr [rcx - 0xa]; ret 0xf04; 
0x000000000005b414: or al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000021212: or al, byte ptr [rcx]; ret; 
0x0000000000051a6c: or al, byte ptr [rcx]; shr bl, 1; add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x00000000000225b2: or al, byte ptr [rdi + rdi*8 - 1]; pop rdx; ret; 
0x0000000000017db5: or al, ch; cmc; add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000023b55: or al, ch; push rax; push rsi; add eax, dword ptr [rax]; add rsp, 0x18; ret; 
0x0000000000041a98: or al, ch; ret 0xfd5f; 
0x0000000000017a3b: or al, ch; syscall; 
0x00000000000567d0: or al, dh; or dword ptr [rsp], 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x00000000000920c4: or ax, 0x3fb1; outsb dx, byte ptr [rsi]; and byte ptr [rbp + rax*8 - 0x33], cl; mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x0000000000075fad: or bh, 0x80; xlatb; and dh, 0x80; int 0x80; 
0x000000000006ba6a: or bh, bh; or edi, edi; or al, 0xff; or eax, 0xfff0eff; call qword ptr [rax]; 
0x00000000000271b1: or bh, bh; ret 0x1588; 
0x0000000000020f29: or bh, bh; ret; 
0x000000000002352b: or bh, byte ptr [rax + 0xfd]; syscall; 
0x000000000002352b: or bh, byte ptr [rax + 0xfd]; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000006e2be: or bh, byte ptr [rbp + 0xb]; jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000002baa2: or bh, byte ptr [rdi + 1]; call 0x29a04; add rsp, 0x18; ret; 
0x000000000001aced: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; 
0x0000000000056d3f: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; ret; 
0x0000000000056fea: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001acb8: or bh, byte ptr [rsi + 1]; mov rax, r9; syscall; 
0x0000000000037122: or bl, bl; insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x00000000000299f3: or bl, bl; jl 0x29a1b; call 0xfffffffff026de87; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000002eb0b: or bl, bl; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x00000000000590d4: or bl, byte ptr [rcx + 0x48]; mov esi, ebp; mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000007db6c: or bl, byte ptr [rdi - 0x3b]; pop rdi; lahf; pop rcx; pop rax; ret 0x7f81; 
0x000000000000a808: or bl, byte ptr [rdx]; add byte ptr [rax], al; and al, byte ptr [rax]; or dword ptr [rax], eax; ret; 
0x000000000007db6b: or bl, byte ptr gs:[rdi - 0x3b]; pop rdi; lahf; pop rcx; pop rax; ret 0x7f81; 
0x0000000000054a00: or bl, ch; add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x54a0e; call rax; 
0x00000000000310bf: or bl, ch; add ecx, dword ptr [rdi]; push rdi; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000021b3a: or bl, ch; rcr byte ptr [rbx + 0x5d], cl; pop r12; ret; 
0x000000000001caf0: or bl, dh; movd dword ptr [rsp + 8], mm0; add rsp, 0x38; ret; 
0x00000000000345f0: or bl, dh; movups xmm0, xmmword ptr [rip + 0x5e333]; add rsp, 0x28; ret; 
0x000000000002dcfe: or bl, dh; movups xmm1, xmmword ptr [rip + 0x64e75]; movaps xmm0, xmm1; ret; 
0x0000000000053e73: or byte ptr [r10 - 0x47f977ff], r9b; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000004352d: or byte ptr [r11 + 0x5d], bl; pop r12; ret; 
0x000000000004a141: or byte ptr [r8 + 0x63], r9b; ret; 
0x0000000000054847: or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000052f4f: or byte ptr [r8 - 0x77], r9b; call 0x416170b5; pop rbp; pop r14; ret; 
0x0000000000044b33: or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004d509: or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000000552c4: or byte ptr [r9 - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005539f: or byte ptr [r9 - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000005af2a: or byte ptr [rax + 0x10], bh; syscall; 
0x0000000000033544: or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rdi], rax; ret; 
0x000000000003356b: or byte ptr [rax + 0x21], 0xd0; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002b9b3: or byte ptr [rax + 0x21], 0xd0; or rax, rcx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005ba8f: or byte ptr [rax + 0x21], cl; ror byte ptr [rax - 0x77], 1; add eax, 0x23c5be; ret; 
0x0000000000041885: or byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004c7d4: or byte ptr [rax + 0x39], cl; ret 0xa73; 
0x000000000002eb84: or byte ptr [rax + 0x39], cl; ret 0xff2; 
0x0000000000057362: or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000043178: or byte ptr [rax + 0x63], 0xf0; mov rax, r14; syscall; 
0x0000000000049c63: or byte ptr [rax + 0x63], cl; clc; call 0x169c0; add rsp, 0x10; pop rbx; ret; 
0x00000000000428d5: or byte ptr [rax + 0x63], cl; ret 0x894c; 
0x000000000004a142: or byte ptr [rax + 0x63], cl; ret; 
0x0000000000021f46: or byte ptr [rax + 0xe], bh; syscall; 
0x00000000000392cf: or byte ptr [rax + 0xf], 0x44; fmul dword ptr [rax - 0x73]; push rsp; and al, 0xc; mov eax, 0x10; syscall; 
0x0000000000017dd8: or byte ptr [rax + 1], cl; call 0x5c42db3b; pop r13; ret; 
0x0000000000017df3: or byte ptr [rax + 1], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x000000000002298b: or byte ptr [rax + 3], cl; add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000054848: or byte ptr [rax + 3], cl; add al, 0xca; ret; 
0x0000000000053a9d: or byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000005db53: or byte ptr [rax + 3], cl; add eax, 0x239de5; mov rsi, rbx; mov rdi, r12; call rax; 
0x00000000000033dd: or byte ptr [rax - 0x60], cl; ret 0xf140; 
0x0000000000018d5c: or byte ptr [rax - 0x73], cl; test dword ptr [rax], r8d; pop rbx; pop rbp; ret; 
0x0000000000055299: or byte ptr [rax - 0x75], cl; add ebx, dword ptr [rdx + 0x5b]; pop rbp; jmp rax; 
0x0000000000054844: or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000004a36c: or byte ptr [rax - 0x75], cl; pop rsp; ret; 
0x0000000000049fc5: or byte ptr [rax - 0x75], cl; push rdi; or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x000000000001f630: or byte ptr [rax - 0x76b7aead], cl; ret 0xc148; 
0x000000000001ef7f: or byte ptr [rax - 0x76cddbac], cl; ret 0x4488; 
0x00000000000388a3: or byte ptr [rax - 0x77], cl; adc ecx, dword ptr [rax - 1]; ret 0x8948; 
0x000000000003780d: or byte ptr [rax - 0x77], cl; and al, 8; cvtsd2ss xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000004a826: or byte ptr [rax - 0x77], cl; and al, 8; xor edx, edx; mov eax, 0xe; syscall; 
0x0000000000052f50: or byte ptr [rax - 0x77], cl; call 0x416170b5; pop rbp; pop r14; ret; 
0x0000000000017a50: or byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000038efe: or byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x75]; and al, 0x10; call rax; 
0x0000000000023118: or byte ptr [rax - 0x77], cl; je 0x23141; cmp byte ptr [rax - 0x77], cl; fsubp st(0); call qword ptr [rsi + 1]; 
0x0000000000026ecd: or byte ptr [rax - 0x77], cl; mov qword ptr ss:[rdi], rsi; ret; 
0x0000000000050e78: or byte ptr [rax - 0x77], cl; push rsp; and al, 0xf0; mov rax, qword ptr [rax]; ret; 
0x00000000000517b3: or byte ptr [rax - 0x77], cl; ret 0x1de8; 
0x000000000002d1d3: or byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000004a163: or byte ptr [rax - 0x77], cl; ret 0xe4eb; 
0x000000000004c8df: or byte ptr [rax - 0x77], cl; ret 0xf748; 
0x00000000000219b0: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000049fc9: or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x0000000000036a51: or byte ptr [rax - 0x7d], cl; clc; push 0xff2d475; pop rsi; ret 0xff2; 
0x00000000000494e6: or byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000000178cf: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000005c10e: or byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x0000000000020ba4: or byte ptr [rax - 1], cl; ret 0x8349; 
0x000000000003cdb6: or byte ptr [rax - 1], cl; ret 0xeceb; 
0x000000000002672b: or byte ptr [rax - 1], cl; ret 0xff48; 
0x00000000000513bf: or byte ptr [rax - 1], cl; ret; 
0x000000000004b817: or byte ptr [rax], 0; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000021f3d: or byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; je 0x21f6a; or byte ptr [rax + 0xe], bh; syscall; 
0x000000000002147b: or byte ptr [rax], al; add byte ptr [rax + 0xd9], bh; syscall; 
0x00000000000565b8: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000044b34: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000024c34: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000004d50a: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004a5ff: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x482fe]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5e5: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x48320]; xor edi, edi; mov eax, 0xe; syscall; 
0x00000000000233ad: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000023b68: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000005737a: or byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, edi; mov eax, 0xe; syscall; 
0x000000000004a8b0: or byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, r12d; mov eax, 0xd; syscall; 
0x000000000004abf1: or byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x7f; syscall; 
0x0000000000065969: or byte ptr [rax], al; add byte ptr [rax], al; ret 0xffff; 
0x000000000005afaa: or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000004a619: or byte ptr [rax], al; add byte ptr [rax], al; xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000004087c: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000023bb3: or byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov eax, 0x48; syscall; 
0x000000000002231c: or byte ptr [rax], al; je 0x22331; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004b818: or byte ptr [rax], al; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000057e9e: or byte ptr [rax], al; sub rsp, 0x90; syscall; 
0x0000000000056ca1: or byte ptr [rax], cl; ret; 
0x000000000005aa81: or byte ptr [rbp + 0x31], al; ror byte ptr [rcx + 0x63], cl; cmp byte ptr [rax + 0x10d], bh; syscall; 
0x000000000002e518: or byte ptr [rbp + 0xf1879d2], al; sub cl, al; ret; 
0x0000000000020bb4: or byte ptr [rbp - 0x34], dh; lea rsi, [rip + 0x2749c2]; call 0x1e9ef; add rsp, 0x18; ret; 
0x0000000000033bd6: or byte ptr [rbp - 0xfb8625], al; ret; 
0x00000000000175de: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004352e: or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000016969: or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000056e2c: or byte ptr [rbx + 0x7e0c106], cl; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x00000000000363de: or byte ptr [rbx + 0xff201e0], al; adc byte ptr [rsp], al; mov edi, eax; call 0x29b7f; add rsp, 0x18; ret; 
0x0000000000057e7c: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e7c: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x00000000000364d1: or byte ptr [rbx - 0x3876fe20], al; call 0x29d51; add rsp, 0x18; ret; 
0x000000000003b896: or byte ptr [rbx - 0x5b160038], al; add byte ptr [rax], al; add byte ptr [rbp - 0x76], al; adc dword ptr [rcx - 0xa], eax; ret 0x74c0; 
0x00000000000436ad: or byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000197c2: or byte ptr [rcx + 0x5d5b0857], cl; ret; 
0x0000000000019837: or byte ptr [rcx + 0xf], al; xchg eax, ebx; ret 0x394c; 
0x0000000000046308: or byte ptr [rcx + 0xfff9], al; add byte ptr [rsi - 0x22], bh; ret; 
0x0000000000017d43: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004c21a: or byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; 
0x000000000004ea4a: or byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db8e: or byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; mov eax, r8d; pop rdx; ret; 
0x000000000004b97f: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000004b97f: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; ret; 
0x0000000000057958: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x00000000000355d7: or byte ptr [rcx + rdx - 0xe], dh; subps xmm1, xmm1; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000552c5: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a0: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000004b4e8: or byte ptr [rcx - 0x763ca430], 0xff; push rax; mov eax, 0x5f; syscall; 
0x0000000000019a37: or byte ptr [rcx - 0x77], al; push rdx; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000429e0: or byte ptr [rcx - 0x77], al; ret 0x8948; 
0x00000000000335de: or byte ptr [rcx - 0xc03dbbc], 0xf; adc byte ptr [rsp - 4], al; ret; 
0x000000000003da0d: or byte ptr [rcx - 0xda08], cl; inc dword ptr [rax]; ret; 
0x00000000000558bc: or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002b9d8: or byte ptr [rcx], 0xd0; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002ba06: or byte ptr [rcx], 0xd0; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x000000000002e9ad: or byte ptr [rcx], 0xf8; mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x000000000003e4aa: or byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000052ed7: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000005b26e: or byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000003bac2: or byte ptr [rcx], al; ret; 
0x000000000002866b: or byte ptr [rcx], cl; ret 0xc2ff; 
0x0000000000027600: or byte ptr [rcx], cl; ret 0xd189; 
0x0000000000024eae: or byte ptr [rcx], cl; ret 0xea81; 
0x000000000005724c: or byte ptr [rcx], dh; imul al; ret 0xfffe; 
0x000000000003ab3b: or byte ptr [rcx], dh; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x000000000004a82b: or byte ptr [rcx], dh; sar byte ptr [rax + 0xe], cl; syscall; 
0x0000000000020d2b: or byte ptr [rdi], 0x94; rol bl, 0x83; jmp qword ptr [rax]; 
0x0000000000020240: or byte ptr [rdi], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000092d31: or byte ptr [rdi], ch; mov cl, 0x2d; ret; 
0x000000000003a3fb: or byte ptr [rdi], cl; add eax, 0xe8c78948; mov edx, 0x48fffdc5; add esp, 0x18; ret; 
0x000000000004c264: or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000036a80: or byte ptr [rdi], cl; push rdi; ret 0x2e8; 
0x0000000000045a9d: or byte ptr [rdi], cl; test dh, ah; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x000000000001d69e: or byte ptr [rdi], cl; wait; ret 0x450f; 
0x000000000002341f: or byte ptr [rdi], cl; xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; pop rdx; ret; 
0x00000000000434db: or byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x0000000000021478: or byte ptr [rdx + 0x800], bh; mov eax, 0xd9; syscall; 
0x000000000006e2c3: or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x00000000000657a1: or byte ptr [rdx - 0x46], ah; movsxd rdi, dword ptr [rbx - 0x429a439c]; mov si, 0xbf6d; outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x0000000000053e74: or byte ptr [rdx - 0x47f977ff], cl; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000005abe1: or byte ptr [rdx - 0x80000000], bh; mov eax, 0x3d; syscall; 
0x000000000005447a: or byte ptr [rip + 0x100f], ah; ret; 
0x0000000000054479: or byte ptr [rip + 0x100f], r12b; ret; 
0x0000000000037866: or byte ptr [rip + 0x3ffd9400], bh; ja 0x37871; fyl2xp1; ret; 
0x00000000000544c9: or byte ptr [rip - 0x1010], ah; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000544c8: or byte ptr [rip - 0x1010], r12b; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000335c2: or byte ptr [rip - 0x80000000], ah; mov dword ptr [rdi], eax; ret; 
0x000000000004b701: or byte ptr [rsi + 0x5413], bh; mov eax, 0x10; syscall; 
0x000000000001ca45: or byte ptr [rsi + 0xf], ah; sub ah, al; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001cd3b: or byte ptr [rsi + 0xf], ah; sub dl, al; add rsp, 0x18; ret; 
0x000000000001c80c: or byte ptr [rsi + 0xf], ah; sub dl, al; add rsp, 0x28; ret; 
0x000000000005ac8a: or byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x0000000000032437: or byte ptr [rsi], al; add dh, bl; ret 0xc9d9; 
0x00000000000045b7: or byte ptr [rsi], dh; xchg eax, edi; ret 0x4f7a; 
0x00000000000224ef: or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000040787: or byte ptr [rsp + rdx + 0x49], dh; movsxd rdi, eax; mov edx, 0x800; mov esi, 4; mov eax, 0x48; syscall; 
0x000000000004ac14: or ch, al; jb 0x4ac16; dec dword ptr [rcx - 0x377ce8]; pop rbx; ret; 
0x0000000000026765: or ch, byte ptr [rbx - 0x40]; or cl, byte ptr [rax - 1]; ret 0xf001; 
0x0000000000062395: or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x000000000006264d: or ch, byte ptr [rdx + 0x76]; out 0xae, al; in eax, dx; leave; ret 0x3b81; 
0x0000000000023cb2: or ch, byte ptr [rip - 0x3ca50001]; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x0000000000075fab: or cl, 0x80; iretd; adc bh, 0x80; out 0x80, al; int 0x80; 
0x0000000000037304: or cl, bl; cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x00000000000378ff: or cl, bl; cld; ret; 
0x0000000000037910: or cl, bl; cli; ret; 
0x0000000000037854: or cl, bl; int1; ret; 
0x000000000002225e: or cl, byte ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x0000000000039998: or cl, byte ptr [rax + 0x63]; ret; 
0x000000000004cb40: or cl, byte ptr [rax + 0x63]; sti; mov eax, 3; syscall; 
0x0000000000021a8f: or cl, byte ptr [rax + 0x69]; ret; 
0x000000000005c66e: or cl, byte ptr [rax + 3]; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000037696: or cl, byte ptr [rax - 0x77]; ret 0xf748; 
0x00000000000513c7: or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000002678f: or cl, byte ptr [rax - 1]; ret 0x141; 
0x0000000000041ab9: or cl, byte ptr [rax - 1]; ret 0x448d; 
0x0000000000026768: or cl, byte ptr [rax - 1]; ret 0xf001; 
0x000000000003896a: or cl, byte ptr [rax - 1]; ret; 
0x000000000005b7ca: or cl, byte ptr [rax - 1]; rol dword ptr [rax + rax*8 - 0x49f0128b], 0xd0; sub eax, edx; ret; 
0x0000000000052652: or cl, ch; ret; 
0x0000000000028b2a: or dh, bl; leave; fld xword ptr [rax - 0x10]; faddp st(1); jne 0x28b21; ret; 
0x0000000000023097: or dh, byte ptr [rbp + 3]; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x274d0c]; pop rdx; ret; 
0x00000000000549a1: or dh, byte ptr [rcx]; rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x000000000004bee0: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000004becb: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x000000000004ba2e: or dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000006f1d2: or dl, byte ptr [rcx + 0x5a]; ret 0x585b; 
0x00000000000332be: or dl, dh; addps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000037812: or dl, dh; cvtps2pd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x00000000000342f3: or dl, dh; movups xmm0, xmmword ptr [rip + 0x5d934]; add rsp, 0x40; pop rbx; ret; 
0x000000000002ea2f: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000053d3c: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000042438: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002da89: or dl, dh; movups xmm1, xmmword ptr [rip + 0x6430e]; movapd xmm0, xmm1; ret; 
0x000000000001cd35: or dl, dh; movups xmm1, xmmword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d1a0: or dl, dh; movups xmm1, xmmword ptr [rsp + 8]; mulsd xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000002d1a6: or dl, dh; mulps xmm0, xmm1; addsd xmm0, xmm1; add rsp, 0x28; ret; 
0x000000000004243e: or dl, dh; subps xmm0, xmmword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x00000000000332bd: or dl, sil; addps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000005fb81: or dword ptr [r11 - 0x2e], esp; ret; 
0x0000000000056cfb: or dword ptr [r8], 4; ret; 
0x0000000000056c9f: or dword ptr [r8], 8; ret; 
0x00000000000233fd: or dword ptr [rax + 0x11c], edi; syscall; 
0x0000000000054b7b: or dword ptr [rax + rax], esp; mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x000000000005fd71: or dword ptr [rax - 0x38495c04], 0xffffffc1; ret; 
0x000000000004be1d: or dword ptr [rax - 0x77], ecx; fistp word ptr [rbx - 0x17]; and eax, 0x5bfffffb; ret; 
0x0000000000024a8d: or dword ptr [rax - 0x77], ecx; fistp word ptr [rbx - 0x17]; or dword ptr [rax], ebp; add byte ptr [rax], al; pop rbx; ret; 
0x000000000004a50e: or dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x0000000000017c59: or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000005264e: or dword ptr [rax - 1], ecx; or r9b, bpl; ret; 
0x000000000004def0: or dword ptr [rax - 1], ecx; ret; 
0x0000000000042599: or dword ptr [rax], 1; ret; 
0x0000000000056cfc: or dword ptr [rax], 4; ret; 
0x0000000000056ca0: or dword ptr [rax], 8; ret; 
0x000000000004cfaa: or dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret; 
0x000000000004641b: or dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; je 0x46446; cmp byte ptr [rcx + 0x39c0ffc1], cl; ret 0x4c7; 
0x0000000000022201: or dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000023aa4: or dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x000000000003a28a: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000007016: or dword ptr [rax], eax; call rbx; 
0x0000000000009326: or dword ptr [rax], eax; pop rdx; ret; 
0x0000000000006f3e: or dword ptr [rax], eax; push rdx; ret; 
0x0000000000009e4e: or dword ptr [rax], eax; ret 0x1bf; 
0x0000000000007346: or dword ptr [rax], eax; ret 0x20d; 
0x000000000000f5c6: or dword ptr [rax], eax; ret 0x4be; 
0x000000000000f3e6: or dword ptr [rax], eax; ret 0x5b2; 
0x000000000000a80e: or dword ptr [rax], eax; ret; 
0x00000000000087e6: or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x0000000000024a93: or dword ptr [rax], ebp; add byte ptr [rax], al; pop rbx; ret; 
0x00000000000221e5: or dword ptr [rbp + 0x46], esi; mov r8d, 0x48; mov rdx, rsp; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000002e4bb: or dword ptr [rbp + 0x661a74c0], eax; movaps xmm0, xmm1; ret; 
0x000000000004b17f: or dword ptr [rbp - 0x47f08a37], eax; add al, 0; add byte ptr [rax], al; mov rdi, r8; mov rsi, rbx; syscall; 
0x000000000002399e: or dword ptr [rbx + 0x47702fb], eax; mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x000000000004bd0c: or dword ptr [rbx + 0x78920c8], eax; or eax, 0xffffffff; ret; 
0x000000000002331a: or dword ptr [rbx + 3], ecx; add byte ptr [rax + 0x63], cl; clc; call 0x169c0; add rsp, 0x68; ret; 
0x000000000005fb82: or dword ptr [rbx - 0x2e], esp; ret; 
0x0000000000092c6a: or dword ptr [rbx - 0x32], eax; xor eax, 0xc275419d; int1; ret; 
0x0000000000071afa: or dword ptr [rbx - 0x63e50000], ebx; pop r10; lahf; jae 0x71b5b; ret; 
0x000000000005a31b: or dword ptr [rbx - 0x7af0fb08], eax; ret 1; 
0x0000000000005e5a: or dword ptr [rbx], esp; jp 0x5e3f; jmp rsp; 
0x00000000000431ba: or dword ptr [rcx + 0x63], ecx; js 0x431d3; mov eax, 0x51; syscall; 
0x0000000000070eb8: or dword ptr [rcx + 0x67b48142], eax; ret; 
0x0000000000070855: or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x000000000006f6ab: or dword ptr [rcx - 0x7b], 0xffffff82; mov word ptr [rbp - 0x746e9d73], es; xchg eax, ecx; scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x00000000000465d2: or dword ptr [rcx - 0x7cb7eefc], ecx; ret 0xeb04; 
0x000000000005af93: or dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000004b786: or dword ptr [rcx], esi; fild dword ptr [rax + 0xf72007d]; xchg eax, ebp; ret; 
0x000000000004b2c6: or dword ptr [rcx], esi; sal byte ptr [rcx], cl; leave; call 0x4b501; add rsp, 0x28; ret; 
0x000000000001e26d: or dword ptr [rcx], esi; shr bl, 5; mov eax, 0x31069; add rsp, 0x170; pop rbx; ret; 
0x0000000000046306: or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x462ef; ret; 
0x000000000004bf83: or dword ptr [rdi], 0x20; ret; 
0x000000000004ed3c: or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000005231: or dword ptr [rdi], eax; adc dh, bh; call qword ptr [rdi - 0x71]; 
0x000000000004a9ba: or dword ptr [rdi], eax; xor eax, eax; pop rdx; ret; 
0x000000000001aed0: or dword ptr [rdi], ecx; xchg eax, ebp; ret; 
0x0000000000022e4b: or dword ptr [rdi], ecx; xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000020d38: or dword ptr [rdi], ecx; xchg eax, esp; ror byte ptr [rcx], 0xd0; movzx eax, al; ret; 
0x0000000000060612: or dword ptr [rdi], edi; lahf; out 8, al; ret 0x6132; 
0x0000000000018a81: or dword ptr [rsi + 0x72], esi; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x0000000000004b88: or dword ptr [rsi + rbp*4], ebp; jmp qword ptr [rcx]; 
0x0000000000086156: or dword ptr [rsi - 0x68], ecx; push rax; ret 0x7153; 
0x000000000008bd08: or dword ptr [rsi], ebx; xlatb; pop rbx; ret 0xef12; 
0x00000000000224c3: or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000005a521: or dword ptr [rsp], 0; mov esi, 0x20; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000567d2: or dword ptr [rsp], 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x00000000000573d4: or dword ptr [rsp], 0; ret; 
0x0000000000056c97: or dword ptr [rsp], 0; test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf3: or dword ptr [rsp], 0; test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x0000000000054b7a: or dword ptr es:[rax + rax], esp; mov qword ptr [rbx + 8], rax; call 0x54927; xor eax, eax; pop rbx; ret; 
0x0000000000054c2c: or eax, 0x1047c748; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x000000000002eb02: or eax, 0x17893ffe; mov word ptr [rsp + 8], ax; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000210c1: or eax, 0x20; cmp edx, 0x19; cmova eax, edi; ret; 
0x000000000004bd0d: or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x00000000000337c0: or eax, 0x244c8b48; call 0x48cd5912; cmp edx, edi; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x000000000004eae5: or eax, 0x24685e; mov byte ptr [rdx], dil; ret; 
0x000000000004eaac: or eax, 0x246897; mov byte ptr [rdx], dil; ret; 
0x000000000003c667: or eax, 0x2503c083; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0xddeb; 
0x0000000000042539: or eax, 0x252f62; mov rax, qword ptr [rip + 0x252eeb]; test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000000553d: or eax, 0x2583b385; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x0000000000021d02: or eax, 0x276069; pop rbx; ret; 
0x00000000000544a7: or eax, 0x30; mov dword ptr [rdi + 8], eax; ret; 
0x0000000000038b1c: or eax, 0x3464e850; add dword ptr [rax], eax; mov eax, 1; pop rdx; ret; 
0x0000000000059d80: or eax, 0x3978b; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000052746: or eax, 0x40b65; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000005113d: or eax, 0x4201e; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000028997: or eax, 0x48d20148; cmp edx, 1; sbb eax, eax; add eax, 3; ret; 
0x000000000003a3af: or eax, 0x48fffdc6; add esp, 0x18; ret; 
0x0000000000021f11: or eax, 0x4c000000; mov edi, eax; mov rdx, rcx; syscall; 
0x000000000005ab02: or eax, 0x4c000001; mov esi, esp; syscall; 
0x00000000000366a9: or eax, 0x5a322; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000365c9: or eax, 0x5a3f2; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000036033: or eax, 0x5a998; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x00000000000235af: or eax, 0x5affff34; ret; 
0x00000000000354c9: or eax, 0x5b502; xorps xmm0, xmm1; ret; 
0x0000000000035435: or eax, 0x5b586; xorps xmm0, xmm1; ret; 
0x00000000000352e7: or eax, 0x5b6e4; xorps xmm0, xmm1; ret; 
0x0000000000035140: or eax, 0x5b87b; xorps xmm0, xmm1; ret; 
0x0000000000032a06: or eax, 0x60171; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fff6: or eax, 0x625c5; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002f4c5: or eax, 0x62766; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000030592: or eax, 0x62871; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002fa41: or eax, 0x62ee6; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000321f3: or eax, 0x63480006; add al, 0x82; add rdx, rax; jmp rdx; 
0x000000000002c896: or eax, 0x64135; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002da8d: or eax, 0x6430e; movapd xmm0, xmm1; ret; 
0x000000000002c310: or eax, 0x646ab; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002df2a: or eax, 0x64c4d; movaps xmm0, xmm1; ret; 
0x000000000002dd02: or eax, 0x64e75; movaps xmm0, xmm1; ret; 
0x000000000002b43d: or eax, 0x6558e; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b39d: or eax, 0x6561e; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002b2e1: or eax, 0x656ea; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c457: or eax, 0x65c44; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002ad75: or eax, 0x65c46; xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002c434: or eax, 0x65c67; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002aa96: or eax, 0x65f35; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002bc95: or eax, 0x65f96; call 0x28914; add rsp, 0x28; ret; 
0x000000000002a98a: or eax, 0x66031; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a864: or eax, 0x66167; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002c9d6: or eax, 0x66201; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b4: or eax, 0x66223; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x000000000002bd34: or eax, 0x66bf3; call 0x2894a; add rsp, 0x28; ret; 
0x0000000000029cdc: or eax, 0x66cdf; xorps xmm0, xmm1; ret; 
0x000000000002b98a: or eax, 0x66f9d; movaps xmm0, xmm1; ret; 
0x0000000000028b02: or eax, 0x67ec9; xorps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000028adf: or eax, 0x67edc; xorps xmm1, xmm0; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000006238d: or eax, 0x73545338; or ah, byte ptr [rbp - 0x45]; or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x000000000001b29e: or eax, 0x7502f883; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001b951: or eax, 0x7506a; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001bc81: or eax, 0x75fe2; add rsp, 0x18; ret; 
0x000000000001a020: or eax, 0x77c6b; addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000021acc: or eax, 0x8348f631; ret; 
0x0000000000033c78: or eax, 0x83efd348; out 1, eax; mov eax, edi; neg eax; add eax, 2; ret; 
0x00000000000233f9: or eax, 0x975f685; mov eax, 0x11c; syscall; 
0x000000000000492a: or eax, 0xae077218; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x000000000004bae0: or eax, 0xbae68948; add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x13; syscall; 
0x000000000003550c: or eax, 0xc9d9c2de; fstp xword ptr [rsp - 0x18]; fldz; fmulp st(1); ret; 
0x000000000005506b: or eax, 0xd0f7c019; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000002bd30: or eax, 0xd100ff3; imul eax, dword ptr [rsi], 0; call 0x2894a; add rsp, 0x28; ret; 
0x0000000000020f97: or eax, 0xe783c7ff; jg 0x20f21; jmp qword ptr [rax]; 
0x0000000000026d1c: or eax, 0xe8f7894c; ret 0xfffd; 
0x000000000004b5d8: or eax, 0xebb8; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000008fdcc: or eax, 0xed30000; add byte ptr [rax], al; ret; 
0x0000000000035bbf: or eax, 0xf0005ae; push rdi; ret 0xede9; 
0x0000000000084e8c: or eax, 0xf300e30; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x000000000006ba70: or eax, 0xfff0eff; call qword ptr [rax]; 
0x000000000002295e: or eax, 0xffffffff; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002418d: or eax, 0xffffffff; add rsp, 0x18; ret; 
0x000000000005ae71: or eax, 0xffffffff; add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000000038ab4: or eax, 0xffffffff; add rsp, 0x20; pop rbx; ret; 
0x000000000003b96e: or eax, 0xffffffff; cmp rsi, rcx; jbe 0x3b998; sub rdx, rdi; lea eax, [rdx + 2]; ret; 
0x0000000000024bb1: or eax, 0xffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a2bf: or eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000004ac1c: or eax, 0xffffffff; pop rbx; ret; 
0x000000000004c71f: or eax, 0xffffffff; pop rdx; pop rbx; pop rbp; ret; 
0x000000000001ae48: or eax, 0xffffffff; pop rdx; ret; 
0x0000000000022463: or eax, 0xffffffff; ret; 
0x000000000003a528: or eax, 0xffffffff; test rdi, rdi; je 0x3a535; call 0x5b5a5; add rsp, 0x118; ret; 
0x00000000000567d7: or eax, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x0000000000052748: or eax, dword ptr [rax + rax]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000039288: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, ebx; pop rbx; ret; 
0x000000000003a3ef: or eax, dword ptr [rax]; add byte ptr [rax], al; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x0000000000057a4b: or eax, dword ptr [rax]; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000056498: or eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000056f69: or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000057e17: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000548ef: or eax, dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310c74c0], cl; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x000000000008a95c: or eax, dword ptr [rbp - 0xd]; add byte ptr [rax - 0x54ff63ee], cl; and byte ptr [rbx], bh; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x0000000000020d01: or eax, dword ptr [rbx - 0x3fcecf11]; cmp edi, 9; setbe al; ret; 
0x000000000005b20c: or eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000289cd: or eax, dword ptr [rcx]; rol byte ptr [rbx - 0x3fe6fe06], cl; add eax, 3; ret; 
0x000000000004abb5: or eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000008d00c: or eax, dword ptr [rsi + rcx*8 - 0x5e55d2c1]; movsxd rdx, ecx; ret 0x3fe9; 
0x0000000000052747: or eax, dword ptr gs:[rax + rax]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000033318: or eax, ebp; mov ebx, 0xff2ffff; sub al, al; pop rax; ret; 
0x0000000000033359: or eax, ebp; sbb eax, 0xf3ffffbc; cvtpi2ps xmm0, mm0; pop rax; ret; 
0x000000000001b71a: or eax, ecx; mov qword ptr [rsp + 0x10], rax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001caea: or eax, ecx; mov qword ptr [rsp + 8], rax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000001cb96: or eax, ecx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000002b9b8: or eax, ecx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000027661: or eax, edi; add eax, 0x270a74; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000002e9ae: or eax, edi; mov dword ptr [rsp - 4], eax; movss xmm1, dword ptr [rsp - 4]; movaps xmm0, xmm1; ret; 
0x000000000002b9d9: or eax, edx; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002ea29: or eax, edx; mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000042432: or eax, edx; mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002e87c: or eax, edx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x000000000002ba07: or eax, edx; mov word ptr [rsp - 0x20], ax; fld xword ptr [rsp - 0x28]; ret; 
0x0000000000020d3c: or eax, edx; movzx eax, al; ret; 
0x00000000000146c0: or eax, edx; movzx edx, byte ptr [rdi + rsi]; shl edx, 8; or eax, edx; ret; 
0x00000000000146c9: or eax, edx; ret; 
0x0000000000037398: or eax, esi; add rax, rax; ret; 
0x0000000000022548: or eax, esi; and eax, edi; ret; 
0x000000000003da01: or eax, esi; ret; 
0x000000000004c140: or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x0000000000005542: or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x00000000000720d6: or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000003978d: or ebx, 0xffffffff; add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x0000000000024c3f: or ebx, 0xffffffff; mov rax, rbx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000026801: or ecx, dword ptr [rax + 1]; ret; 
0x000000000005c7be: or ecx, dword ptr [rax - 0x75]; add al, 0x24; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x000000000005be45: or ecx, dword ptr [rax - 0x77]; js 0x5beb2; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x0000000000044fc7: or ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x00000000000481d9: or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x0000000000056d0f: or ecx, dword ptr [rbx - 0x31f7cf9]; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000093847: or ecx, dword ptr [rbx]; ret; 
0x0000000000021978: or ecx, dword ptr [rcx + rcx*4 - 0x38]; syscall; 
0x0000000000057ceb: or ecx, dword ptr [rdi]; xchg eax, esp; ret 0xc283; 
0x000000000003730a: or ecx, ebx; insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000004fe3: or ecx, esi; sub dword ptr [rsi + 0x52], esp; xchg byte ptr [rcx], bh; ret 0x5241; 
0x0000000000020d13: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000021081: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x000000000004caf2: or edi, 0x8000; mov rax, r12; movsxd rsi, edi; mov rdi, rbx; syscall; 
0x0000000000055105: or edi, 0xffffffff; call 0x559ea; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x000000000006e2c0: or edi, dword ptr [rbp + 0x5e]; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x0000000000054e11: or edi, dword ptr [rcx]; ret 0xe375; 
0x000000000000530b: or edi, dword ptr [rdi + 0x7e]; clc; jmp rdi; 
0x000000000006ba6c: or edi, edi; or al, 0xff; or eax, 0xfff0eff; call qword ptr [rax]; 
0x000000000006ba68: or edi, edi; or bh, bh; or edi, edi; or al, 0xff; or eax, 0xfff0eff; call qword ptr [rax]; 
0x0000000000038203: or edi, edi; ret 0x1389; 
0x000000000003eaa9: or edi, edi; ret 0x8348; 
0x000000000003a814: or edx, 0xffffffff; mov dword ptr [rax], ebx; mov eax, edx; pop rbx; ret; 
0x0000000000022404: or edx, 0xffffffff; mov eax, edx; pop rdx; ret; 
0x000000000004aba3: or edx, 0xffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x000000000004252b: or edx, dword ptr [rip + 0x255a8f]; sub rax, 4; mov dword ptr [rax], edx; ret; 
0x000000000002f499: or edx, eax; jne 0x2f4ad; xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x000000000002ffa5: or edx, eax; jne 0x2ffb9; xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000001baee: or edx, eax; mov qword ptr [rsp], rdx; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x00000000000536ee: or edx, eax; shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x0000000000053730: or edx, eax; shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000001cb91: or edx, ecx; mov eax, edx; or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x0000000000042529: or edx, ecx; or edx, dword ptr [rip + 0x255a8f]; sub rax, 4; mov dword ptr [rax], edx; ret; 
0x0000000000022579: or edx, ecx; or esi, edx; add rsp, 0x90; mov eax, esi; pop rbx; ret; 
0x0000000000037395: or edx, ecx; or rax, rsi; add rax, rax; ret; 
0x0000000000054c9f: or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000054c9e: or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000005aa44: or esi, 0xffffffff; mov rdi, rax; mov eax, 0x72; syscall; 
0x0000000000056fda: or esi, 1; mov rax, r8; movsxd rsi, esi; syscall; 
0x0000000000055b16: or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000056778: or esi, 6; xor edx, edx; movsxd rsi, esi; mov r10, rbp; mov rax, r13; syscall; 
0x0000000000056a28: or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000057ce6: or esi, dword ptr [rcx]; rol byte ptr [rbx - 0x6bf0f408], cl; ret 0xc283; 
0x0000000000020e9d: or esi, dword ptr [rdi + 0x53]; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000544cf: or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000558bd: or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000366a5: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x5a322]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000354c5: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x00000000000352e3: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x000000000002c892: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002b439: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x6558e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002aa92: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x65f35]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a860: or esi, ebx; movups xmm1, xmmword ptr [rip + 0x66167]; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000028a0e: or esi, ecx; jne 0x28a1c; cmp rdx, 1; sbb eax, eax; add eax, 3; ret; 
0x00000000000224ac: or esi, edi; shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000002257b: or esi, edx; add rsp, 0x90; mov eax, esi; pop rbx; ret; 
0x00000000000365c5: or esi, edx; movups xmm1, xmmword ptr [rip + 0x5a3f2]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000035431: or esi, edx; movups xmm1, xmmword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x000000000003513c: or esi, edx; movups xmm1, xmmword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x000000000002c30c: or esi, edx; movups xmm1, xmmword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002b399: or esi, edx; movups xmm1, xmmword ptr [rip + 0x6561e]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a986: or esi, edx; movups xmm1, xmmword ptr [rip + 0x66031]; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000056c0e: or esp, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x000000000005a5b3: or esp, eax; sti; lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000006f6aa: or qword ptr [r9 - 0x7b], 0xffffffffffffff82; mov word ptr [rbp - 0x746e9d73], es; xchg eax, ecx; scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x000000000004a9b9: or qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x00000000000549ff: or r11b, bpl; add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x54a0e; call rax; 
0x0000000000056c0d: or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x00000000000567cf: or r8b, sil; or dword ptr [rsp], 0; or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x00000000000567d6: or r8d, 7; mov eax, 0xca; movsxd rsi, r8d; syscall; 
0x00000000000548ee: or r8d, dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbp + 0x310c74c0], cl; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x0000000000052651: or r9b, bpl; ret; 
0x000000000002418c: or rax, 0xffffffffffffffff; add rsp, 0x18; ret; 
0x0000000000024bb0: or rax, 0xffffffffffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a2be: or rax, 0xffffffffffffffff; pop rbx; pop rbp; ret; 
0x000000000001e0c9: or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000041c11: or rax, 0xffffffffffffffff; ret; 
0x000000000004abb4: or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000008d00b: or rax, qword ptr [rsi + r9*8 - 0x5e55d2c1]; movsxd rdx, ecx; ret 0x3fe9; 
0x000000000001b719: or rax, rcx; mov qword ptr [rsp + 0x10], rax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001cae9: or rax, rcx; mov qword ptr [rsp + 8], rax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000001cb95: or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x000000000002b9b7: or rax, rcx; mov qword ptr [rsp - 8], rax; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002ea28: or rax, rdx; mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000042431: or rax, rdx; mov qword ptr [rsp + 8], rax; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002e87b: or rax, rdx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x00000000000534f6: or rax, rdx; ret; 
0x0000000000037397: or rax, rsi; add rax, rax; ret; 
0x0000000000024c3e: or rbx, 0xffffffffffffffff; mov rax, rbx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000055104: or rdi, 0xffffffffffffffff; call 0x559ea; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; pop rdx; ret; 
0x000000000004aba2: or rdx, 0xffffffffffffffff; mov rax, rdx; add rsp, 0x138; ret; 
0x00000000000536ed: or rdx, r8; shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000005372f: or rdx, r8; shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000001baed: or rdx, rax; mov qword ptr [rsp], rdx; movq xmm0, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000001cb90: or rdx, rcx; mov eax, edx; or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x0000000000037394: or rdx, rcx; or rax, rsi; add rax, rax; ret; 
0x000000000005aa43: or rsi, 0xffffffffffffffff; mov rdi, rax; mov eax, 0x72; syscall; 
0x000000000005fb80: or word ptr [r11 - 0x2e], sp; ret; 
0x0000000000086155: or word ptr [rsi - 0x68], cx; push rax; ret 0x7153; 
0x0000000000021ebb: out 0, eax; add byte ptr [rax], al; syscall; 
0x0000000000091429: out 0, eax; shr dword ptr [rbx - 0x55], 0x37; ret; 
0x0000000000035834: out 0x17, eax; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000558d7: out 0x1f, al; and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002783d: out 0x26, al; add byte ptr [rax + 0xc], bh; mov rdi, rbx; syscall; 
0x0000000000092a18: out 0x2b, eax; stc; call qword ptr [rsi]; 
0x0000000000092a38: out 0x2b, eax; stc; inc dword ptr [rcx + 0x29]; stc; jmp rdi; 
0x00000000000929f0: out 0x2b, eax; stc; jmp rdi; 
0x00000000000720cc: out 0x33, al; movabs al, byte ptr [0xb69e1346f685d6d]; push -0x21; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000008cb46: out 0x3f, al; test eax, 0x9bea62f7; jmp qword ptr [rcx + 0x3c]; 
0x000000000008d8b6: out 0x3f, eax; add byte ptr [rax + 0x43], ah; adc byte ptr [rdx + 0x18], dh; sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000004ecab: out 0x40, al; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000039d5f: out 0x48, al; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000056bb1: out 0x48, al; lea edi, [rbp + 4]; mov eax, 0xca; or esi, 7; movsxd rsi, esi; syscall; 
0x0000000000022e0f: out 0x48, al; mov dword ptr [rsp + 0x18], eax; call 0x4b25f; add rsp, 0x28; ret; 
0x000000000004f614: out 0x48, al; mov eax, esi; ret; 
0x0000000000053415: out 0x48, al; mov edx, eax; neg rdx; test ecx, ecx; cmove rax, rdx; ret; 
0x000000000003883b: out 0x48, al; sub esp, 0x10; mov rdx, rdi; syscall; 
0x000000000004b05c: out 0x4c, al; mov edx, ebp; syscall; 
0x00000000000407d1: out 0x4c, eax; mov edx, ebp; syscall; 
0x0000000000055349: out 0x5a, eax; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006f570: out 0x64, al; sub eax, 0xed7d2e67; push rax; ret; 
0x000000000005ffd7: out 0x6f, eax; movabs dword ptr [0xfd27877d48fa5449], eax; popfq; ret; 
0x0000000000060624: out 0x72, al; ret; 
0x000000000003ad75: out 0x80, al; add byte ptr [rax + 0x48067580], 0x83; ret 0xeb04; 
0x0000000000055b0d: out 0x80, al; add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; or esi, 1; movsxd rsi, esi; syscall; 
0x0000000000075fb2: out 0x80, al; int 0x80; 
0x000000000008316a: out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x0000000000020d2a: out 0x80, eax; sete al; ret; 
0x0000000000053ae0: out 0x83, eax; ret; 
0x000000000005b5e3: out 0x89, al; ror byte ptr [rax - 0x77], 4; and al, 0x69; ret 0x3e8; 
0x000000000005a446: out 0x89, eax; ret; 
0x0000000000086d60: out 0x91, al; ret; 
0x0000000000062650: out 0xae, al; in eax, dx; leave; ret 0x3b81; 
0x0000000000057ebd: out 0xb8, al; add eax, 0x4c000000; mov edi, esp; syscall; 
0x000000000009296c: out 0xb8, eax; clc; jmp qword ptr [rdx]; 
0x0000000000092968: out 0xb8, eax; clc; jmp rdi; 
0x000000000004bae3: out 0xba, al; add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x13; syscall; 
0x0000000000004d0a: out 0xbd, eax; insb byte ptr [rdi], dx; ret 0x1bb7; 
0x0000000000005984: out 0xde, al; xchg eax, ebx; sbb al, 0xb3; adc eax, 0x12a07c9a; ret 0x9dba; 
0x00000000000548d3: out 0xe, eax; add byte ptr [rax], al; ret; 
0x000000000004accb: out 0xe8, eax; mov edi, 0x89fffffc; ret 0xc883; 
0x000000000004b157: out 0xe8, eax; ret; 
0x0000000000052f12: out 0xe8, eax; test al, 0x41; cld; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000004cb2c: out 0xf, al; add eax, 0x89ee8948; fucomip st(0); ret 0xffea; 
0x000000000004bd67: out 0xf, al; mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000000057e41: out 0xf0, al; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000004f1ee: out 0xf3, al; stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x0000000000093281: out 0xfb, eax; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x0000000000093279: out 0xfb, eax; call qword ptr [rbp - 0x6a000419]; out 0xfb, eax; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x0000000000093289: out 0xfb, eax; jmp rsi; 
0x000000000005493a: out 1, al; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000033c7d: out 1, eax; mov eax, edi; neg eax; add eax, 2; ret; 
0x0000000000056cb1: out 7, al; and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000060615: out 8, al; ret 0x6132; 
0x000000000003d9fd: out 8, eax; mov eax, edi; or eax, esi; ret; 
0x000000000005f674: out dx, al; adc rax, 0x54a41d82; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x0000000000004a65: out dx, al; call qword ptr [rdx - 0x67]; xchg eax, esp; jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x00000000000261ec: out dx, al; cmp cl, 0x20; je 0x261e8; ret; 
0x0000000000035516: out dx, al; fmulp st(1); ret; 
0x0000000000075e4a: out dx, al; jecxz 0x75eb5; ret 0xb967; 
0x000000000008fba8: out dx, al; mov edi, 0; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x00000000000590d8: out dx, al; mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000004d908: out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004d4d6: out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000049c0d: out dx, al; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x000000000002ddd5: out dx, al; pop rax; ret; 
0x000000000003ca60: out dx, al; pop rbx; ret; 
0x000000000004f0db: out dx, al; rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x00000000000051ce: out dx, al; sbb al, 0x46; ret; 
0x00000000000921e2: out dx, al; sbb byte ptr [rsi + 0x3e], ah; mov ebx, 0x3f; cmp dl, 0xd4; ret; 
0x0000000000042bf6: out dx, al; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000092a80: out dx, al; sub edi, ecx; jmp qword ptr [rcx]; 
0x000000000003a5f3: out dx, al; syscall; 
0x000000000004361f: out dx, al; xor eax, eax; pop rbx; ret; 
0x0000000000040907: out dx, eax; adc byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x18; ret; 
0x00000000000381aa: out dx, eax; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x0000000000020d92: out dx, eax; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000020d70: out dx, eax; and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x0000000000033c7b: out dx, eax; and edi, 1; mov eax, edi; neg eax; add eax, 2; ret; 
0x000000000004af80: out dx, eax; call 0x16820; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000022063: out dx, eax; call rbx; 
0x000000000006221a: out dx, eax; call rcx; 
0x000000000006e36c: out dx, eax; cwde; ret; 
0x000000000005fc48: out dx, eax; fnsave dword ptr [rdx]; ret; 
0x00000000000600f1: out dx, eax; je 0x600e8; ret 0x89bd; 
0x000000000002ddf2: out dx, eax; jg 0x2de3d; cmp eax, edx; setbe al; movzx eax, al; ret; 
0x00000000000625fa: out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x00000000000219f7: out dx, eax; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x000000000005acb2: out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004af8d: out dx, eax; mov rsi, rbx; syscall; 
0x00000000000919e0: out dx, eax; ret 0x705f; 
0x000000000006cdc4: out dx, eax; ret 0xc2f1; 
0x0000000000036639: out dx, eax; ret 5; 
0x0000000000037833: out dx, eax; ret; 
0x000000000005be4d: out dx, eax; shl byte ptr [rbx], 0; ret; 
0x0000000000020e7e: out dx, eax; stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000004c212: out dx, eax; syscall; 
0x000000000006edce: out dx, eax; xchg dword ptr [rcx + 0x598b2089], eax; nop; ret; 
0x0000000000077d36: out dx, eax; xchg eax, edx; ret 0xe892; 
0x000000000006e2c8: out dx, eax; xchg eax, esi; call qword ptr [rdx - 0x6b]; 
0x0000000000020d03: out dx, eax; xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x0000000000020ddd: out dx, eax; xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000021061: outsb dx, byte ptr [rsi]; add dword ptr [rax], eax; add byte ptr [rcx], bh; ret; 
0x00000000000920c8: outsb dx, byte ptr [rsi]; and byte ptr [rbp + rax*8 - 0x33], cl; mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x000000000008c134: outsb dx, byte ptr [rsi]; cmpsb byte ptr [rsi], byte ptr [rdi]; xchg eax, edx; jle 0x8c0d5; ret; 
0x000000000007416d: outsb dx, byte ptr [rsi]; mov dh, 0x6e; ret 0x906e; 
0x000000000007bc4f: outsb dx, byte ptr [rsi]; mov eax, 0xbc6eb96e; outsb dx, byte ptr [rsi]; mov esi, 0xc06ebf6e; outsb dx, byte ptr [rsi]; ret; 
0x00000000000894d8: outsb dx, byte ptr [rsi]; mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x000000000007bc55: outsb dx, byte ptr [rsi]; mov esi, 0xc06ebf6e; outsb dx, byte ptr [rsi]; ret; 
0x0000000000087b89: outsb dx, byte ptr [rsi]; movsd dword ptr [rdi], dword ptr [rsi]; outsb dx, byte ptr [rsi]; ret 0x9f6e; 
0x000000000007416f: outsb dx, byte ptr [rsi]; ret 0x906e; 
0x0000000000082741: outsb dx, byte ptr [rsi]; ret 0x9f6e; 
0x00000000000770c7: outsb dx, byte ptr [rsi]; ret; 
0x0000000000074169: outsb dx, byte ptr [rsi]; scasd eax, dword ptr [rdi]; outsb dx, byte ptr [rsi]; shr dword ptr [rsi - 0x4a], cl; outsb dx, byte ptr [rsi]; ret 0x906e; 
0x00000000000548fc: outsb dx, byte ptr [rsi]; sete dl; lea edx, [rdx + rdx + 2]; mov eax, edx; pop rdx; ret; 
0x00000000000657ae: outsb dx, byte ptr [rsi]; shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000007416b: outsb dx, byte ptr [rsi]; shr dword ptr [rsi - 0x4a], cl; outsb dx, byte ptr [rsi]; ret 0x906e; 
0x0000000000021208: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax - 1], cl; int 0x85; sar byte ptr [rax + 0xa], 1; ret; 
0x000000000004edc0: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000020eea: outsd dx, dword ptr [rsi]; add dword ptr [rax], eax; add cl, ch; add dword ptr [rcx], 0xc0310000; ret; 
0x0000000000001d0c: outsd dx, dword ptr [rsi]; add eax, dword ptr [rax]; add byte ptr [rdi + 3], dh; add byte ptr [rax], al; syscall; 
0x0000000000082835: outsd dx, dword ptr [rsi]; mov dh, 0x6f; ret 0xe16f; 
0x000000000007bdc5: outsd dx, dword ptr [rsi]; mov ebx, 0xbd6fbc6f; outsd dx, dword ptr [rsi]; mov esi, 0xc16fbf6f; outsd dx, dword ptr [rsi]; ret; 
0x00000000000894dd: outsd dx, dword ptr [rsi]; mov esi, 0x705c06fd; ret 0x470d; 
0x000000000007bdcb: outsd dx, dword ptr [rsi]; mov esi, 0xc16fbf6f; outsd dx, dword ptr [rsi]; ret; 
0x0000000000087bc5: outsd dx, dword ptr [rsi]; mov gs, word ptr [rdi - 0x6f]; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x000000000005ffd8: outsd dx, dword ptr [rsi]; movabs dword ptr [0xfd27877d48fa5449], eax; popfq; ret; 
0x0000000000087bc3: outsd dx, dword ptr [rsi]; pop rax; outsd dx, dword ptr [rsi]; mov gs, word ptr [rdi - 0x6f]; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x0000000000087bc9: outsd dx, dword ptr [rsi]; ret 0x666f; 
0x0000000000082837: outsd dx, dword ptr [rsi]; ret 0xe16f; 
0x0000000000074a8b: outsd dx, dword ptr [rsi]; ret; 
0x00000000000657b0: outsd dx, dword ptr [rsi]; sal dword ptr [rax - 0x3e], 0x7e; ret; 
0x0000000000087bc7: outsd dx, dword ptr [rsi]; xchg eax, ecx; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x00000000000372db: pcmpeqd mm1, mm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372ce: pcmpeqd mm1, mm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372da: pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372cd: pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037218: pcmpgtd mm0, qword ptr [rbp + 0x78e8d9c0]; add eax, 0xd9ddfdd9; ret; 
0x000000000002aaba: pcmpgtd mm0, qword ptr [rcx - 0x7680001e]; ret; 
0x000000000002a47d: pop qword ptr [rax]; add bl, dh; addps xmm0, xmmword ptr [rip + 0x6872c]; add rsp, 0x18; ret; 
0x00000000000562d4: pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x0000000000071b01: pop r10; lahf; jae 0x71b5b; ret; 
0x000000000005840b: pop r12; add rax, rsi; pop r13; pop r14; pop r15; ret; 
0x000000000003043d: pop r12; divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002fe96: pop r12; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000004d8b0: pop r12; pop r13; jmp rax; 
0x000000000004a442: pop r12; pop r13; mov esi, 2; jmp rax; 
0x0000000000024a12: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000014b7b: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001b275: pop r12; pop r13; pop r14; ret; 
0x00000000000148c2: pop r12; pop r13; ret; 
0x0000000000027299: pop r12; pop r14; pop r15; ret; 
0x0000000000042aa5: pop r12; pop rbp; ret; 
0x00000000000179bf: pop r12; ret; 
0x000000000004d8b2: pop r13; jmp rax; 
0x000000000004a444: pop r13; mov esi, 2; jmp rax; 
0x0000000000024a14: pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000014b7d: pop r13; pop r14; pop r15; ret; 
0x000000000001b277: pop r13; pop r14; ret; 
0x00000000000148c4: pop r13; ret; 
0x0000000000073d3c: pop r14; jle 0x73d9e; retf 0xc15e; pop rsi; ret 0xc45e; 
0x0000000000024a16: pop r14; pop r15; pop rbp; ret; 
0x0000000000014b7f: pop r14; pop r15; ret; 
0x000000000001b279: pop r14; ret; 
0x000000000007144d: pop r15; pop rax; ret; 
0x0000000000024a18: pop r15; pop rbp; ret; 
0x0000000000014b81: pop r15; ret; 
0x000000000004a586: pop r8; pop r9; add rsp, 0x10; pop rbx; ret; 
0x000000000004a588: pop r9; add rsp, 0x10; pop rbx; ret; 
0x000000000003c62f: pop r9; pop rbx; pop rbp; ret; 
0x000000000003f6c1: pop rax; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000002a7bb: pop rax; adc eax, 0x6816b; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000003d4d2: pop rax; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x000000000002b8e2: pop rax; add eax, 0x66348; ret; 
0x000000000002a5a8: pop rax; add eax, 0x67682; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a755: pop rax; add eax, 0x67925; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029fe9: pop rax; add eax, 0x67c41; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002a3d6: pop rax; add eax, 0x67cb4; add rsp, 0x18; ret; 
0x000000000002a482: pop rax; add eax, 0x6872c; add rsp, 0x18; ret; 
0x000000000002a1b0: pop rax; add eax, 0x68776; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005c7c9: pop rax; add rsp, 0x100; ret; 
0x000000000003067a: pop rax; and al, 4; add rsp, 0x18; ret; 
0x00000000000300e3: pop rax; and al, 8; add rsp, 0x28; ret; 
0x00000000000427d7: pop rax; and eax, 0x1dfee800; add dword ptr [rax], eax; mov eax, 0x39; syscall; 
0x0000000000042749: pop rax; and eax, 0x1f3ae800; add dword ptr [rax], eax; mov rax, rbx; pop rbx; ret; 
0x000000000007890b: pop rax; fistp dword ptr [rax + 0x12]; pop rcx; cmp eax, 0x3f5b3e5b; pop rbx; ret; 
0x0000000000037165: pop rax; fld1; fsubp st(1); ret; 
0x00000000000424c0: pop rax; imul rax, qword ptr [rip + 0x25598f]; inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x000000000009298c: pop rax; in eax, 0xf8; lcall [rbp - 0x1b]; clc; jmp qword ptr [rdx - 0x1b]; 
0x000000000001add2: pop rax; mov eax, 0x81; syscall; 
0x0000000000079fab: pop rax; mov ebp, 0xbf58be58; pop rax; rcr byte ptr [rax - 0x3e], 0x58; ret; 
0x0000000000079fa9: pop rax; mov ebx, 0xbe58bd58; pop rax; mov edi, 0xc258c058; pop rax; ret; 
0x0000000000079faf: pop rax; mov edi, 0xc258c058; pop rax; ret; 
0x0000000000079fa7: pop rax; mov edx, 0xbd58bb58; pop rax; mov esi, 0xc058bf58; pop rax; ret 0xc358; 
0x0000000000079fad: pop rax; mov esi, 0xc058bf58; pop rax; ret 0xc358; 
0x000000000008c8e3: pop rax; movabs rbx, 0xf9e424e0a0003ff1; ret 0xbf; 
0x000000000002c9bd: pop rax; movaps xmm0, xmm1; ret; 
0x00000000000332bc: pop rax; or dl, sil; addps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000087bc4: pop rax; outsd dx, dword ptr [rsi]; mov gs, word ptr [rdi - 0x6f]; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x000000000004a587: pop rax; pop r9; add rsp, 0x10; pop rbx; ret; 
0x00000000000324c7: pop rax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002208a: pop rax; pop rbx; pop rbp; ret; 
0x000000000002bdfa: pop rax; pop rdx; add rsp, 0x38; ret; 
0x0000000000079fb1: pop rax; rcr byte ptr [rax - 0x3e], 0x58; ret; 
0x000000000002a90d: pop rax; ret 0x19e8; 
0x000000000002b1fe: pop rax; ret 0x1b8; 
0x000000000002de85: pop rax; ret 0x2276; 
0x000000000003767c: pop rax; ret 0x29eb; 
0x000000000003388d: pop rax; ret 0x39c3; 
0x0000000000032bf2: pop rax; ret 0x4866; 
0x00000000000337d0: pop rax; ret 0x48c3; 
0x00000000000343a8: pop rax; ret 0x4ae9; 
0x0000000000035bf1: pop rax; ret 0x4eb; 
0x000000000002c790: pop rax; ret 0x7e9; 
0x000000000007db73: pop rax; ret 0x7f81; 
0x000000000002c34e: pop rax; ret 0x81c3; 
0x00000000000340b4: pop rax; ret 0x840f; 
0x000000000002d0af: pop rax; ret 0x850f; 
0x000000000006e88f: pop rax; ret 0x885a; 
0x0000000000035f90: pop rax; ret 0x8ae9; 
0x000000000002a368: pop rax; ret 0x94e8; 
0x000000000002c208: pop rax; ret 0x9e9; 
0x0000000000077e2b: pop rax; ret 0xbc58; 
0x000000000006cd80: pop rax; ret 0xc260; 
0x0000000000079fb3: pop rax; ret 0xc358; 
0x00000000000327dc: pop rax; ret 0xc3c3; 
0x000000000002a416: pop rax; ret 0xebe8; 
0x0000000000029a76: pop rax; ret 0xf2c3; 
0x00000000000328dd: pop rax; ret 0xf66; 
0x0000000000028bf0: pop rax; ret 0xff2; 
0x000000000001b98e: pop rax; ret 0xff3; 
0x000000000001b8fd: pop rax; ret; 
0x000000000002eb5b: pop rax; retf 0xff2; adc dword ptr [rsi], ecx; ret; 
0x000000000001b93b: pop rax; retf 0xff2; pop rsp; ret; 
0x000000000002eb57: pop rax; retf; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000032b55: pop rax; ror byte ptr [rdi], 1; sub ah, al; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x00000000000338eb: pop rax; sal bl, 1; movups xmmword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x0000000000033845: pop rax; sal dl, 1; movups xmmword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000002b8dc: pop rax; sal dword ptr [rsi + 0x26], 0xf2; addps xmm0, xmmword ptr [rip + 0x66348]; ret; 
0x000000000002aa18: pop rax; sal ebx, 0xf; pop rax; ret 0x94e8; 
0x000000000002a412: pop rax; sal ebx, 0xf; pop rax; ret 0xebe8; 
0x000000000002a909: pop rax; sal edx, 0xf; pop rax; ret 0x19e8; 
0x000000000002a364: pop rax; sal edx, 0xf; pop rax; ret 0x94e8; 
0x0000000000029af4: pop rax; sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000002d6c8: pop rax; sal edx, 0xf; pop rcx; and al, 0xf0; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000331ca: pop rax; sal edx, 1; addps xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000001a027: pop rax; sal edx, cl; mulps xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x00000000000224fe: pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x00000000000342f0: pop rax; shr ebx, 8; movsd xmm0, qword ptr [rip + 0x5d934]; add rsp, 0x40; pop rbx; ret; 
0x00000000000506c4: pop rax; sub al, byte ptr [rax + rax]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000002c439: pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000005590e: pop rax; xor byte ptr [rbx + 0x2427be05], cl; add byte ptr [rcx], bh; ret; 
0x000000000003c62d: pop rbp; add byte ptr [rcx + 0x59], al; pop rbx; pop rbp; ret; 
0x000000000002e617: pop rbp; and al, 0xf0; ret; 
0x000000000002e671: pop rbp; and al, 0xf8; ret; 
0x0000000000042979: pop rbp; clc; leave; ret; 
0x000000000004f497: pop rbp; cmp eax, dword ptr [rax + rax]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000002f362: pop rbp; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002f8f4: pop rbp; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x0000000000092990: pop rbp; in eax, 0xf8; jmp qword ptr [rdx - 0x1b]; 
0x0000000000021a02: pop rbp; jmp rax; 
0x000000000006bb10: pop rbp; jmp rbx; 
0x0000000000049c12: pop rbp; jmp rcx; 
0x00000000000590dc: pop rbp; jmp rdx; 
0x000000000007a681: pop rbp; mov ebp, 0xbf5dbe5d; pop rbp; rcr byte ptr [rbp - 0x3f], 0x5d; ret 0xc35d; 
0x000000000008fb06: pop rbp; mov ebx, 0x3ff4; add byte ptr [rax], al; add byte ptr [rax], al; xchg eax, ebp; ret; 
0x000000000007a685: pop rbp; mov edi, 0xc15dc05d; pop rbp; ret 0xc35d; 
0x000000000007a683: pop rbp; mov esi, 0xc05dbf5d; pop rbp; rcr dword ptr [rbp - 0x3e], 0x5d; ret; 
0x000000000004a445: pop rbp; mov esi, 2; jmp rax; 
0x000000000007a67f: pop rbp; mov esp, 0xbe5dbd5d; pop rbp; mov edi, 0xc15dc05d; pop rbp; ret 0xc35d; 
0x000000000003043c: pop rbp; pop r12; divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002fe95: pop rbp; pop r12; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000004d8af: pop rbp; pop r12; pop r13; jmp rax; 
0x000000000004a441: pop rbp; pop r12; pop r13; mov esi, 2; jmp rax; 
0x0000000000014b7a: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001b274: pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000148c1: pop rbp; pop r12; pop r13; ret; 
0x0000000000027298: pop rbp; pop r12; pop r14; pop r15; ret; 
0x00000000000179be: pop rbp; pop r12; ret; 
0x0000000000024a15: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x0000000000014b7e: pop rbp; pop r14; pop r15; ret; 
0x000000000001b278: pop rbp; pop r14; ret; 
0x000000000007524d: pop rbp; pop rdi; jmp qword ptr [rcx + 0x24]; 
0x00000000000720d0: pop rbp; push 0x69e1346f; or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000007524b: pop rbp; rcr byte ptr [rbp + 0x4e], cl; pop rdi; jmp qword ptr [rcx + 0x24]; 
0x000000000007a687: pop rbp; rcr byte ptr [rbp - 0x3f], 0x5d; ret 0xc35d; 
0x000000000007a689: pop rbp; rcr dword ptr [rbp - 0x3e], 0x5d; ret; 
0x000000000007a68b: pop rbp; ret 0xc35d; 
0x0000000000071c69: pop rbp; ret 0xda8b; 
0x000000000008c37a: pop rbp; ret 0xec71; 
0x000000000003a75f: pop rbp; ret 0xfffd; 
0x00000000000148c5: pop rbp; ret; 
0x000000000004227b: pop rbp; sar eax, 0x1f; pop r12; pop r13; ret; 
0x0000000000020d76: pop rbp; setbe al; ret; 
0x000000000004a314: pop rbp; sub eax, r8d; pop r12; ret; 
0x0000000000050de9: pop rbx; and eax, dword ptr [rax + rax]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000913e4: pop rbx; call rcx; 
0x00000000000913e4: pop rbx; call rcx; mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x00000000000181f4: pop rbx; cmove rax, rdx; ret; 
0x0000000000017a6f: pop rbx; cmovne rax, rdx; ret; 
0x000000000007415a: pop rbx; imul eax, dword ptr [rdi + 0x6b], 0x6bc06b72; mov edi, 0xfd6bd36b; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x000000000007e491: pop rbx; jbe 0x7e4f6; ret 0x9062; 
0x0000000000005301: pop rbx; jp 0x52a3; push rsp; movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x000000000006bb0c: pop rbx; lcall [rdi + rdi*8 + 0x5d]; jmp rbx; 
0x0000000000018d8d: pop rbx; lea rax, [r12 + rax*4]; pop rbp; pop r12; ret; 
0x000000000007a3b5: pop rbx; mov bh, 0x5b; mov edx, 0xbc5bbb5b; pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x0000000000018058: pop rbx; mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000005aec7: pop rbx; mov eax, edx; pop rbp; pop r12; ret; 
0x000000000004cf2a: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000000046cc: pop rbx; mov ebx, 0xb7bf2684; hlt; in al, dx; ret 0x33b1; 
0x000000000007a3b7: pop rbx; mov edx, 0xbc5bbb5b; pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x000000000004ba50: pop rbx; mov edx, 1; jmp rax; 
0x000000000001917d: pop rbx; mov edx, dword ptr [rax]; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000007a3bb: pop rbx; mov esp, 0xc15bc05b; pop rbx; ret; 
0x0000000000020536: pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000005b88c: pop rbx; mov rax, r8; pop rbp; pop r12; pop r13; ret; 
0x000000000005b946: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000004cfb6: pop rbx; neg eax; pop rbp; pop r12; ret; 
0x000000000006f56f: pop rbx; out 0x64, al; sub eax, 0xed7d2e67; push rax; ret; 
0x00000000000894d7: pop rbx; outsb dx, byte ptr [rsi]; mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x00000000000894dc: pop rbx; outsd dx, dword ptr [rsi]; mov esi, 0x705c06fd; ret 0x470d; 
0x0000000000042aa4: pop rbx; pop r12; pop rbp; ret; 
0x0000000000026d7c: pop rbx; pop r14; pop r15; ret; 
0x000000000002f361: pop rbx; pop rbp; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002f8f3: pop rbx; pop rbp; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x0000000000021a01: pop rbx; pop rbp; jmp rax; 
0x0000000000049c11: pop rbx; pop rbp; jmp rcx; 
0x00000000000590db: pop rbx; pop rbp; jmp rdx; 
0x000000000003043b: pop rbx; pop rbp; pop r12; divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002fe94: pop rbx; pop rbp; pop r12; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000004d8ae: pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000004a440: pop rbx; pop rbp; pop r12; pop r13; mov esi, 2; jmp rax; 
0x000000000001b273: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000148c0: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000027297: pop rbx; pop rbp; pop r12; pop r14; pop r15; ret; 
0x00000000000179bd: pop rbx; pop rbp; pop r12; ret; 
0x0000000000027582: pop rbx; pop rbp; pop r14; pop r15; ret; 
0x000000000001696a: pop rbx; pop rbp; ret; 
0x000000000004227a: pop rbx; pop rbp; sar eax, 0x1f; pop r12; pop r13; ret; 
0x000000000004a313: pop rbx; pop rbp; sub eax, r8d; pop r12; ret; 
0x000000000007a3bd: pop rbx; rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x0000000000062310: pop rbx; ret 0x3956; 
0x000000000007eb9b: pop rbx; ret 0xa15b; 
0x0000000000073971: pop rbx; ret 0xbf5b; 
0x000000000008bd0b: pop rbx; ret 0xef12; 
0x0000000000014725: pop rbx; ret; 
0x0000000000035be9: pop rbx; rol byte ptr [rip - 0xdf98c00], 0xf; pop rax; ret 0x4eb; 
0x0000000000016e19: pop rbx; rol dword ptr [rbx], cl; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000018eef: pop rbx; sar rax, 2; pop rbp; pop r12; ret; 
0x000000000007244e: pop rbx; sub al, 0xb6; shl byte ptr [rax], 0xe2; ret; 
0x0000000000017a28: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000020f7d: pop rcx; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret; 
0x000000000002a3d0: pop rcx; add dword ptr [rax], 0x580ff200; add eax, 0x67cb4; add rsp, 0x18; ret; 
0x00000000000300db: pop rcx; add eax, 0x61d17; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000030672: pop rcx; add eax, 0x62730; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002f5d4: pop rcx; add eax, 0x6281e; subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002fb49: pop rcx; add eax, 0x63259; subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002a74d: pop rcx; add eax, 0x674d5; addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a1a8: pop rcx; add eax, 0x689f2; addss xmm0, dword ptr [rip + 0x68776]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004a589: pop rcx; add rsp, 0x10; pop rbx; ret; 
0x00000000000333b1: pop rcx; add rsp, 0x18; ret; 
0x0000000000040fc1: pop rcx; add rsp, 0x28; ret; 
0x000000000004065e: pop rcx; add rsp, 0x450; pop rbx; pop rbp; pop r12; ret; 
0x000000000002c1bc: pop rcx; and al, 0x10; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002c748: pop rcx; and al, 0x10; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b580: pop rcx; and al, 0x10; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d6cc: pop rcx; and al, 0xf0; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000357c9: pop rcx; and al, 0xf8; ret; 
0x000000000003583c: pop rcx; and al, 0xfc; ret; 
0x000000000001b586: pop rcx; and al, 8; add rsp, 0x30; pop rbx; ret; 
0x000000000001c809: pop rcx; and al, 8; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x00000000000424c6: pop rcx; and eax, 0xc0ff4800; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x000000000001e335: pop rcx; cld; ja 0x1e2a4; pop rbx; pop rbp; ret; 
0x000000000007890f: pop rcx; cmp eax, 0x3f5b3e5b; pop rbx; ret; 
0x00000000000832a2: pop rcx; imul edx, ecx, -0x68; rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x0000000000074a80: pop rcx; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x0000000000029a97: pop rcx; in eax, 0xf2; subps xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x000000000006ebf4: pop rcx; jno 0x6eb8a; stc; ret; 
0x000000000006bb08: pop rcx; lcall [rdx - 1]; pop rbx; lcall [rdi + rdi*8 + 0x5d]; jmp rbx; 
0x000000000007a0f3: pop rcx; mov ebp, 0xc059bf59; pop rcx; rcr dword ptr [rcx - 0x3e], 0x59; ret; 
0x000000000007a0f5: pop rcx; mov edi, 0xc159c059; pop rcx; ret 0xc359; 
0x000000000007a0ef: pop rcx; mov edx, 0xbd59bc59; pop rcx; mov edi, 0xc159c059; pop rcx; ret 0xc359; 
0x000000000007a0f1: pop rcx; mov esp, 0xbf59bd59; pop rcx; rcr byte ptr [rcx - 0x3f], 0x59; ret 0xc359; 
0x00000000000590d5: pop rcx; mov rsi, rbp; mov edi, ebx; pop rbx; pop rbp; jmp rdx; 
0x000000000006edd4: pop rcx; nop; ret; 
0x000000000001bc80: pop rcx; or eax, 0x75fe2; add rsp, 0x18; ret; 
0x000000000007db71: pop rcx; pop rax; ret 0x7f81; 
0x000000000003c630: pop rcx; pop rbx; pop rbp; ret; 
0x000000000005f67d: pop rcx; pop rdx; ret 0xd539; 
0x00000000000591a6: pop rcx; pop rsi; neg eax; ret; 
0x0000000000085db4: pop rcx; push -0x3f; insb byte ptr [rdi], dx; ret 0xed72; 
0x000000000007a0f7: pop rcx; rcr byte ptr [rcx - 0x3f], 0x59; ret 0xc359; 
0x000000000002ff8e: pop rcx; rcr dword ptr [rax + 0x5b], 0x5d; ret; 
0x000000000007a0f9: pop rcx; rcr dword ptr [rcx - 0x3e], 0x59; ret; 
0x0000000000036bc3: pop rcx; ret 0x16eb; 
0x000000000002b227: pop rcx; ret 0x2b8; 
0x0000000000028947: pop rcx; ret 0x48c3; 
0x0000000000028f4d: pop rcx; ret 0x570f; 
0x000000000002897d: pop rcx; ret 0x66c3; 
0x000000000001d1d5: pop rcx; ret 0x68eb; 
0x000000000007a0fb: pop rcx; ret 0xc359; 
0x00000000000343e4: pop rcx; ret 0xee9; 
0x0000000000019e96: pop rcx; ret 0xf66; 
0x000000000001a00b: pop rcx; ret 0xff2; 
0x000000000001d5ca: pop rcx; ret 0xff3; 
0x0000000000019ea8: pop rcx; ret; 
0x000000000002da86: pop rcx; retf 0x8eb; movsd xmm1, qword ptr [rip + 0x6430e]; movapd xmm0, xmm1; ret; 
0x000000000002dcfb: pop rcx; retf 0x8eb; movss xmm1, dword ptr [rip + 0x64e75]; movaps xmm0, xmm1; ret; 
0x0000000000028888: pop rcx; retf 0xff2; pop rax; ret; 
0x000000000002bffa: pop rcx; retf 0xff2; pop rcx; ret 0xff2; 
0x000000000002893f: pop rcx; retf 0xff2; pop rcx; sal edx, 0xf; pop rcx; ret 0x48c3; 
0x000000000002ac7c: pop rcx; retf 0xff2; pop rsp; ret 0xff2; 
0x0000000000029690: pop rcx; retf 0xff2; pop rsp; ret; 
0x000000000002fa90: pop rcx; retf 0xff3; pop rcx; ret 0xff3; 
0x0000000000028975: pop rcx; retf 0xff3; pop rcx; sal ebx, 0xf; pop rcx; ret 0x66c3; 
0x0000000000029af0: pop rcx; retf; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a4: pop rcx; retf; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000032a01: pop rcx; sal bl, 0xf; adc byte ptr [rip + 0x60171], cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000037674: pop rcx; sal dl, 0xf; pop rcx; sal edx, 0xf; pop rax; ret 0x29eb; 
0x000000000002eb53: pop rcx; sal dl, cl; addps xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x000000000003547b: pop rcx; sal ebx, 0xf; adc dword ptr [rsp - 4], edx; ret; 
0x0000000000028979: pop rcx; sal ebx, 0xf; pop rcx; ret 0x66c3; 
0x000000000001df05: pop rcx; sal ebx, 0xf; pop rcx; ret; 
0x00000000000353e2: pop rcx; sal edx, 0xf; adc dword ptr [rsp - 8], edx; ret; 
0x0000000000037678: pop rcx; sal edx, 0xf; pop rax; ret 0x29eb; 
0x0000000000028943: pop rcx; sal edx, 0xf; pop rcx; ret 0x48c3; 
0x0000000000029a72: pop rcx; sal edx, cl; addps xmm0, xmm2; ret; 
0x00000000000804bd: pop rcx; seto al; push rcx; ret; 
0x000000000001c317: pop rcx; shl byte ptr [rsi + 0xf], 1; sub dl, cl; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x0000000000092df6: pop rcx; sub eax, 0x31ad6446; ret 0x9dff; 
0x0000000000022990: pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000009132d: pop rcx; xchg edx, eax; wait; popfq; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000002fb4b: pop rcx; xor al, byte ptr [rsi]; add bl, dh; subps xmm0, xmmword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x0000000000057e52: pop rdi; call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x00000000000942a5: pop rdi; clc; jmp qword ptr [rax]; 
0x00000000000210d7: pop rdi; cmp edx, 0x19; cmova eax, edi; ret; 
0x000000000007dccf: pop rdi; fadd qword ptr [rbx - 0x66ef7adf]; ret 0x9553; 
0x000000000006e55d: pop rdi; jg 0x6e5bf; ret 0x2962; 
0x000000000007524f: pop rdi; jmp qword ptr [rcx + 0x24]; 
0x000000000007db6f: pop rdi; lahf; pop rcx; pop rax; ret 0x7f81; 
0x000000000005a440: pop rdi; mov eax, 0x894cffff; out 0x89, eax; ret; 
0x000000000007a8f9: pop rdi; mov ebx, 0xbf5fbe5f; pop rdi; rcr byte ptr [rdi - 0x3f], 0x5f; ret 0xc75f; 
0x000000000007a8fd: pop rdi; mov edi, 0xc15fc05f; pop rdi; ret 0xc75f; 
0x000000000007a8f7: pop rdi; mov edx, 0xbe5fbb5f; pop rdi; mov edi, 0xc15fc05f; pop rdi; ret 0xc75f; 
0x0000000000022235: pop rdi; mov r9d, 0x48; mov esi, 0x406; mov rax, r9; syscall; 
0x000000000007144e: pop rdi; pop rax; ret; 
0x0000000000024a19: pop rdi; pop rbp; ret; 
0x0000000000074a7c: pop rdi; push 0x48; push 0x59; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x000000000007a8ff: pop rdi; rcr byte ptr [rdi - 0x3f], 0x5f; ret 0xc75f; 
0x000000000006e55f: pop rdi; ret 0x2962; 
0x000000000007a903: pop rdi; ret 0xc75f; 
0x000000000006faf9: pop rdi; ret 0xce6c; 
0x00000000000832b3: pop rdi; ret 0xf36b; 
0x0000000000014b82: pop rdi; ret; 
0x000000000002e529: pop rdi; ror byte ptr [rdi], 1; sub dl, al; ret; 
0x000000000002e4cd: pop rdi; shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x000000000006009c: pop rdi; test al, 0x86; fimul dword ptr [rax - 0x1414017]; ret; 
0x000000000007fdcd: pop rdi; xchg eax, edx; adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000002325c: pop rdx; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000004af87: pop rdx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000001ca4c: pop rdx; add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002bdfb: pop rdx; add rsp, 0x38; ret; 
0x0000000000037815: pop rdx; and al, 8; add rsp, 0x30; pop rbx; ret; 
0x00000000000324e1: pop rdx; cvttsd2si rax, xmm0; ret; 
0x00000000000324ee: pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000086449: pop rdx; fstp qword ptr [rbx - 0x17]; pop rbx; ret; 
0x0000000000071b02: pop rdx; lahf; jae 0x71b5b; ret; 
0x000000000002b6fe: pop rdx; leave; movaps xmm0, xmm1; ret; 
0x00000000000740bb: pop rdx; mov bl, 0x5a; ret 0xb25a; 
0x0000000000043970: pop rdx; mov eax, 0x3a; syscall; 
0x00000000000590df: pop rdx; mov eax, 0xffffffda; pop rbx; pop rbp; ret; 
0x000000000004c223: pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000740b7: pop rdx; mov ebp, 0xb35abc5a; pop rdx; ret 0xb25a; 
0x000000000007a26d: pop rdx; mov ebp, 0xc05abf5a; pop rdx; ret; 
0x000000000007a267: pop rdx; mov edx, 0xbc5abb5a; pop rdx; mov ebp, 0xc05abf5a; pop rdx; ret; 
0x00000000000740b5: pop rdx; mov esi, 0xbc5abd5a; pop rdx; mov bl, 0x5a; ret 0xb25a; 
0x0000000000087485: pop rdx; mov esp, 0xcb5abe5a; pop rdx; ret 0xbd5a; 
0x00000000000296dc: pop rdx; movsd qword ptr [rdi], xmm6; ret; 
0x000000000005529d: pop rdx; pop rbx; pop rbp; jmp rax; 
0x000000000002180f: pop rdx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002200d: pop rdx; pop rbx; pop rbp; ret; 
0x00000000000333b0: pop rdx; pop rcx; add rsp, 0x18; ret; 
0x0000000000040fc0: pop rdx; pop rcx; add rsp, 0x28; ret; 
0x00000000000591a5: pop rdx; pop rcx; pop rsi; neg eax; ret; 
0x000000000007dc8c: pop rdx; push rbx; ret; 
0x000000000006f1d5: pop rdx; ret 0x585b; 
0x00000000000740bd: pop rdx; ret 0xb25a; 
0x000000000008748b: pop rdx; ret 0xbd5a; 
0x000000000005f67e: pop rdx; ret 0xd539; 
0x0000000000031900: pop rdx; ret 0xff2; 
0x000000000002a7f2: pop rdx; ret 0xff3; 
0x0000000000009328: pop rdx; ret; 
0x0000000000087489: pop rdx; retf; pop rdx; ret 0xbd5a; 
0x00000000000230b3: pop rdx; sar eax, 0x1f; ret; 
0x00000000000345ed: pop rdx; shr bl, 8; movss xmm0, dword ptr [rip + 0x5e333]; add rsp, 0x28; ret; 
0x0000000000042479: pop rdx; shr rax, 0x11; ret; 
0x0000000000022450: pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000001b69f: pop rdx; xorps xmm1, xmm2; ret; 
0x0000000000005e54: pop rsi; adc bl, byte ptr [rax + 0x230975c2]; jp 0x5e3f; jmp rsp; 
0x0000000000051f2e: pop rsi; adc eax, dword ptr [rax + rax]; movsxd rdx, dword ptr [rax + r15*4]; add rax, rdx; jmp rax; 
0x000000000002a3cb: pop rsi; add dword ptr [rax], 0x8159e800; add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x67cb4]; add rsp, 0x18; ret; 
0x000000000002c74e: pop rsi; and al, 0xc; add rsp, 0x20; pop rbx; ret; 
0x000000000002c1c2: pop rsi; and al, 8; add rsp, 0x30; pop rbx; ret; 
0x0000000000030441: pop rsi; call 0xffffffffc55d1439; ret; 
0x000000000007c354: pop rsi; call qword ptr [rsi]; 
0x00000000000703d7: pop rsi; cdq; pop rsi; ret 0x125f; 
0x0000000000022545: pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x0000000000073d3d: pop rsi; jle 0x73d9e; retf 0xc15e; pop rsi; ret 0xc45e; 
0x000000000006e6b7: pop rsi; mov bl, byte ptr [rsi - 0x60]; pop rsi; ret 0xf35e; 
0x000000000007a7b7: pop rsi; mov ebp, 0xc05ebf5e; pop rsi; rcr dword ptr [rsi - 0x3e], 0x5e; ret; 
0x000000000007a7b3: pop rsi; mov ebx, 0xbd5ebc5e; pop rsi; mov edi, 0xc15ec05e; pop rsi; ret 0xc35e; 
0x000000000007a7b9: pop rsi; mov edi, 0xc15ec05e; pop rsi; ret 0xc35e; 
0x000000000007a7b5: pop rsi; mov esp, 0xbf5ebd5e; pop rsi; rcr byte ptr [rsi - 0x3f], 0x5e; ret 0xc35e; 
0x00000000000591a7: pop rsi; neg eax; ret; 
0x000000000006e2c2: pop rsi; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x0000000000073d3b: pop rsi; pop r14; jle 0x73d9e; retf 0xc15e; pop rsi; ret 0xc45e; 
0x0000000000024a17: pop rsi; pop r15; pop rbp; ret; 
0x0000000000014b80: pop rsi; pop r15; ret; 
0x000000000007a7bb: pop rsi; rcr byte ptr [rsi - 0x3f], 0x5e; ret 0xc35e; 
0x000000000007a7bd: pop rsi; rcr dword ptr [rsi - 0x3e], 0x5e; ret; 
0x00000000000703d9: pop rsi; ret 0x125f; 
0x00000000000355ac: pop rsi; ret 0x48c3; 
0x0000000000030c09: pop rsi; ret 0x6deb; 
0x000000000003126f: pop rsi; ret 0x75e9; 
0x000000000007a7bf: pop rsi; ret 0xc35e; 
0x0000000000073d43: pop rsi; ret 0xc45e; 
0x00000000000875bf: pop rsi; ret 0xc85e; 
0x00000000000656f7: pop rsi; ret 0xcc5f; 
0x0000000000080de5: pop rsi; ret 0xe48f; 
0x0000000000032b9a: pop rsi; ret 0xf2c3; 
0x000000000006e6bb: pop rsi; ret 0xf35e; 
0x0000000000032d74: pop rsi; ret 0xf3c3; 
0x000000000002b603: pop rsi; ret 0xf66; 
0x0000000000036a5a: pop rsi; ret 0xff2; 
0x000000000001b27a: pop rsi; ret; 
0x0000000000073d3f: pop rsi; retf 0xc15e; pop rsi; ret 0xc45e; 
0x0000000000032ba3: pop rsi; retf 0xf66; sub cl, al; ret; 
0x000000000002f03b: pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6e: pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 4], xmm0; ret; 
0x000000000002f008: pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x20], eax; ret; 
0x000000000002ef3b: pop rsi; sal bl, 0xf; adc dword ptr [rsp - 8], eax; ret; 
0x00000000000656f3: pop rsi; scasb al, byte ptr [rdi]; pop rsi; scasd eax, dword ptr [rdi]; pop rsi; ret 0xcc5f; 
0x00000000000656f5: pop rsi; scasd eax, dword ptr [rdi]; pop rsi; ret 0xcc5f; 
0x0000000000020d98: pop rsi; setbe al; ret; 
0x000000000002af15: pop rsi; shr eax, 0xb1; ret; 
0x0000000000005865: pop rsi; test al, 0x20; ret 0x9504; 
0x00000000000803c9: pop rsi; test dword ptr [rbx + 0x2c], edx; push rsp; ret; 
0x000000000008ab18: pop rsp; adc al, byte ptr es:[rax]; insd dword ptr [rdi], dx; ret 0x4d; 
0x0000000000029a6a: pop rsp; adc eax, 0x68448; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000042441: pop rsp; add eax, 0x4f7e9; add rsp, 0x18; ret; 
0x000000000002f5dc: pop rsp; add eax, 0x62ef6; add rsp, 0x28; ret; 
0x000000000002fb51: pop rsp; add eax, 0x6323d; add rsp, 0x18; ret; 
0x000000000002de8b: pop rsp; add eax, 0x63d9f; ret; 
0x000000000005840c: pop rsp; add rax, rsi; pop r13; pop r14; pop r15; ret; 
0x0000000000051840: pop rsp; and al, 0x20; dec dword ptr [rax - 1]; ret; 
0x000000000001da50: pop rsp; and al, 0x20; movss dword ptr [rsp + 0x24], xmm2; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001bf9c: pop rsp; and al, 0x4c; fld dword ptr [rsp + 0x4c]; add rsp, 0x78; fxch st(1); ret; 
0x0000000000053d1d: pop rsp; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x00000000000224c0: pop rsp; and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000053d3a: pop rsp; and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000057e84: pop rsp; and al, 8; syscall; 
0x0000000000057e84: pop rsp; and al, 8; syscall; ret; 
0x00000000000725ea: pop rsp; call qword ptr [rbx]; 
0x000000000009429d: pop rsp; clc; dec dword ptr [rax + 0x20000000]; pop rdi; clc; jmp qword ptr [rax]; 
0x000000000006060e: pop rsp; cmpsb byte ptr [rsi], byte ptr [rdi]; sub eax, 0x9f3f0925; out 8, al; ret 0x6132; 
0x000000000003043e: pop rsp; divsd xmm5, xmm0; cvtsd2ss xmm0, xmm5; ret; 
0x000000000002fe97: pop rsp; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000002a202: pop rsp; fmul dword ptr [rdi]; push rdi; sal bl, 0xf; pop rsi; ret; 
0x000000000008a1af: pop rsp; jae 0x8a189; pop rsp; wait; ret 0xd6cc; 
0x0000000000084e64: pop rsp; jmp qword ptr [rsi]; 
0x00000000000355dc: pop rsp; leave; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x000000000003568a: pop rsp; leave; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x0000000000032b9f: pop rsp; leave; divsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000032d79: pop rsp; leave; divss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000008062f: pop rsp; lodsb al, byte ptr [rsi]; jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x0000000000029a9b: pop rsp; loope 0x29a90; subps xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x000000000008987d: pop rsp; mov al, 0xc4; ret 0x4e90; 
0x000000000007a4dd: pop rsp; mov ecx, 0xbb5cba5c; pop rsp; mov esp, 0xc05cbe5c; pop rsp; ret 0xc35c; 
0x000000000007a4df: pop rsp; mov edx, 0xbc5cbb5c; pop rsp; mov esi, 0xc25cc05c; pop rsp; ret; 
0x000000000007a4e5: pop rsp; mov esi, 0xc25cc05c; pop rsp; ret; 
0x000000000007a4e3: pop rsp; mov esp, 0xc05cbe5c; pop rsp; ret 0xc35c; 
0x000000000004d8b1: pop rsp; pop r13; jmp rax; 
0x000000000004a443: pop rsp; pop r13; mov esi, 2; jmp rax; 
0x0000000000024a13: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000014b7c: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000001b276: pop rsp; pop r13; pop r14; ret; 
0x00000000000148c3: pop rsp; pop r13; ret; 
0x000000000002729a: pop rsp; pop r14; pop r15; ret; 
0x0000000000042aa6: pop rsp; pop rbp; ret; 
0x000000000000585f: pop rsp; push 0x39b74082; pop rsi; test al, 0x20; ret 0x9504; 
0x000000000006f282: pop rsp; push rax; jne 0x6f2d6; push rsp; ret; 
0x0000000000085c00: pop rsp; push rcx; ret; 
0x00000000000605f8: pop rsp; ret 0x1948; 
0x000000000002ac54: pop rsp; ret 0x1b8; 
0x000000000001d90a: pop rsp; ret 0x3979; 
0x000000000002a2b4: pop rsp; ret 0x6aeb; 
0x0000000000035f99: pop rsp; ret 0x81e9; 
0x0000000000005931: pop rsp; ret 0x9ec0; 
0x000000000007a4e9: pop rsp; ret 0xc35c; 
0x00000000000921f0: pop rsp; ret 0xc69a; 
0x000000000003130f: pop rsp; ret 0xf66; 
0x000000000001bc4d: pop rsp; ret 0xff2; 
0x000000000001b9ed: pop rsp; ret 0xff3; 
0x000000000000463c: pop rsp; ret; 
0x0000000000032a19: pop rsp; ror byte ptr [rdi], 0x57; leave; divss xmm0, xmm1; ret; 
0x000000000002a762: pop rsp; ror byte ptr [rdi], 0x57; leave; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000296d6: pop rsp; sal byte ptr [rcx], 0xc0; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000029cd5: pop rsp; sal dword ptr [rdi + rsi*2 - 0xe], 0xf; adc byte ptr [rip + 0x66cdf], cl; xorps xmm0, xmm1; ret; 
0x00000000000335fa: pop rsp; sal ebx, 0xf; adc dword ptr [rdi], ecx; ret; 
0x0000000000029698: pop rsp; sal edx, 0xf; adc dword ptr [rdi], eax; ret; 
0x000000000003358e: pop rsp; sal edx, 0xf; adc dword ptr [rdi], ecx; ret; 
0x0000000000028847: pop rsp; sal edx, 1; addps xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x00000000000518e8: pop rsp; sbb dword ptr [rax + rax], eax; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000002889c: pop rsp; sbb eax, 0x694b6; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000929fc: pop rsp; stc; inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x000000000008093b: pop rsp; stosb byte ptr [rdi], al; test dword ptr [rdi + 0x23950c82], ebp; imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x000000000008a1b2: pop rsp; wait; ret 0xd6cc; 
0x000000000005db58: popfq; and eax, dword ptr [rax]; mov rsi, rbx; mov rdi, r12; call rax; 
0x000000000005dbe5: popfq; and eax, dword ptr [rax]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x00000000000778cc: popfq; cdq; pushfq; cdq; ret; 
0x00000000000790db: popfq; in eax, dx; popfq; ret 0xd09e; 
0x0000000000088a83: popfq; iretd; popfq; ret 0xd99d; 
0x0000000000092c6e: popfq; jne 0x92c34; int1; ret; 
0x000000000008cd13: popfq; lcall [rdi - 0x5dc9c013]; sysenter; 
0x000000000007522b: popfq; mov ah, 0x9d; ret 0xb89d; 
0x0000000000088a7d: popfq; mov eax, 0xc69dba9d; popfq; iretd; popfq; ret 0xd99d; 
0x00000000000846d3: popfq; mov edi, 0xc19dc09d; popfq; ret 0xc39d; 
0x0000000000088a7f: popfq; mov edx, 0xcf9dc69d; popfq; ret 0xd99d; 
0x00000000000846cd: popfq; mov esp, 0xbe9dbd9d; popfq; mov edi, 0xc19dc09d; popfq; ret 0xc39d; 
0x0000000000091331: popfq; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000081fa6: popfq; push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x000000000007522d: popfq; ret 0xb89d; 
0x000000000006cda0: popfq; ret 0xc2a4; 
0x00000000000846d9: popfq; ret 0xc39d; 
0x00000000000790dd: popfq; ret 0xd09e; 
0x0000000000088a85: popfq; ret 0xd99d; 
0x000000000005ffe2: popfq; ret; 
0x000000000004f64c: por mm1, mm4; ret; 
0x0000000000034fa3: pslld mm1, qword ptr [rdi]; adc byte ptr [rsp - 8], al; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000028bed: pslld mm1, qword ptr [rdi]; pop rax; ret 0xff2; 
0x0000000000028bc8: pslld mm1, qword ptr [rdi]; pop rsp; ret 0xff2; 
0x0000000000035187: psllq mm1, qword ptr [rdi]; adc byte ptr [rsp - 4], al; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x00000000000296d3: psllq mm1, qword ptr [rdi]; pop rsp; sal byte ptr [rcx], 0xc0; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000004547: psllq mm6, mm0; in al, 0xd8; ret 0x7358; 
0x00000000000372df: psrld mm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372de: psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372d2: psrlq mm1, 1; andps xmm0, xmm1; ret; 
0x00000000000372d1: psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000005afc8: psubusb mm7, mm5; inc dword ptr [rcx]; ret; 
0x000000000005be49: push -0x10c276b8; shl byte ptr [rbx], 0; ret; 
0x000000000008fba4: push -0x111598ee; mov edi, 0; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x0000000000030750: push -0x18; ret; 
0x00000000000726fe: push -0x1a00fb02; call qword ptr [rdx]; 
0x00000000000726fe: push -0x1a00fb02; call qword ptr [rdx]; xor al, ah; jmp rcx; 
0x00000000000720d7: push -0x21; mov dh, byte ptr [rbx + 0x69]; ret; 
0x0000000000090f24: push -0x21; ret 0x188; 
0x00000000000354be: push -0x2c; add eax, 0x79d28500; or esi, ebx; movups xmm1, xmmword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x00000000000223a8: push -0x2e9cb33d; movsxd rdi, edi; mov eax, 0xdd; syscall; 
0x000000000001cccd: push -0x31f17; jmp qword ptr [rsi + 0x48]; 
0x0000000000023329: push -0x3576b63d; mov r9d, r9d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x000000000001b897: push -0x36261e22; fchs; fxch st(1); ret; 
0x0000000000085db7: push -0x3f; insb byte ptr [rdi], dx; ret 0xed72; 
0x000000000003d2d4: push -0x45ffda74; add byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x0000000000071890: push -0x67; ret; 
0x0000000000039249: push -0x77000000; ret; 
0x0000000000085bfb: push -0x7c; xchg eax, edi; sub ch, byte ptr [rax + 0x5c]; push rcx; ret; 
0x000000000008f3e4: push -3; ret; 
0x00000000000935d9: push -4; inc dword ptr [rdx + rbp*2 - 4]; jmp qword ptr [rax + 0x6a]; 
0x00000000000935dd: push -4; jmp qword ptr [rax + 0x6a]; 
0x000000000004198c: push 0; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004306f: push 0; add byte ptr [rax], al; syscall; 
0x000000000002252f: push 0x1f80; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000023113: push 0x245c8d48; or byte ptr [rax - 0x77], cl; je 0x23141; cmp byte ptr [rax - 0x77], cl; fsubp st(0); call qword ptr [rsi + 1]; 
0x00000000000560af: push 0x24c28348; syscall; 
0x0000000000005860: push 0x39b74082; pop rsi; test al, 0x20; ret 0x9504; 
0x000000000001f41a: push 0x428b456e; jl 0x1f3e2; ret 0x4110; 
0x000000000001fc7e: push 0x47c79b05; and byte ptr [rbx - 0x38e07c27], ch; and al, 0x19; int 0xe0; pop rbx; ret; 
0x0000000000074a7d: push 0x48; push 0x59; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x000000000000554c: push 0x4e; ret 0xf3ba; 
0x0000000000074a7f: push 0x59; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x0000000000023a54: push 0x5affff2f; ret; 
0x0000000000071c65: push 0x5d5735d2; ret 0xda8b; 
0x0000000000074a7b: push 0x5f; push 0x48; push 0x59; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x0000000000082d4f: push 0x686b6893; ret 0x6e68; 
0x0000000000093605: push 0x68b3fffc; cld; call rdi; 
0x000000000007b427: push 0x68bb68ba; mov esp, 0xbe68bd68; push 0x68c168bf; ret; 
0x0000000000093585: push 0x68bdfffc; cld; jmp rdx; 
0x000000000007b431: push 0x68c168bf; ret; 
0x00000000000934d1: push 0x68c2fffc; cld; call qword ptr [rdi + 0x66]; 
0x0000000000093465: push 0x68c2fffc; cld; call qword ptr [rdx - 0x4d00039a]; cld; call rdx; 
0x0000000000093499: push 0x68c2fffc; cld; inc edx; push 0x68c2fffc; cld; jmp rcx; 
0x00000000000934a1: push 0x68c2fffc; cld; jmp rcx; 
0x00000000000720d1: push 0x69e1346f; or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x000000000009361d: push 0x6c02fffc; cld; call qword ptr [rdx]; 
0x0000000000093635: push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x00000000000720cb: push 0x6da033e6; pop rbp; push 0x69e1346f; or ebp, dword ptr [rdx - 0x21]; mov dh, byte ptr [rbx + 0x69]; ret; 
0x0000000000004631: push 0x72f1dc7f; cmp eax, 0x1a44a900; ret; 
0x000000000005d991: push 0x74c08548; or cl, byte ptr [rax + 3]; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000028b2e: push 0x75c1def0; in eax, dx; ret; 
0x0000000000028b4c: push 0x75c1def0; int1; fstp st(1); ret; 
0x0000000000062396: push 0x76; leave; ret 0x8581; 
0x000000000006264e: push 0x76; out 0xae, al; in eax, dx; leave; ret 0x3b81; 
0x0000000000036a55: push 0xff2d475; pop rsi; ret 0xff2; 
0x0000000000019132: push 9; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000004fe6: push dx; xchg byte ptr [rcx], bh; ret 0x5241; 
0x00000000000568dc: push qword ptr [rax + rbx*4 - 0x77]; ret 0x8348; 
0x00000000000591f1: push qword ptr [rax + rcx + 0x48]; mov esi, ebx; call 0x58f51; add rsp, 0x40; pop rbx; ret; 
0x00000000000562d0: push qword ptr [rax - 0x48]; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x000000000002effb: push qword ptr [rbp + 0x13]; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef2e: push qword ptr [rbp + 0x13]; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000005912f: push qword ptr [rbp + 0x1d]; xor esi, esi; mov eax, 0x60; mov rdi, rbx; syscall; 
0x000000000004369c: push qword ptr [rbp + 4]; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000003e0e3: push qword ptr [rbp + 7]; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003a52d: push qword ptr [rbp + rax - 0x18]; jo 0x3a543; add al, byte ptr [rax]; add rsp, 0x118; ret; 
0x0000000000038b1a: push qword ptr [rbp + rcx + 0x50]; call 0x4bf87; mov eax, 1; pop rdx; ret; 
0x000000000005910f: push qword ptr [rbp + rdi + 0x48]; movsxd rdi, ebp; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x0000000000020cac: push qword ptr [rbp - 0x14]; add rsp, 0x90; pop rbx; ret; 
0x0000000000026fcf: push qword ptr [rbx + rcx + 0x48]; and eax, 0xfffff000; sub rax, 0x10; ret; 
0x000000000002765f: push qword ptr [rbx + rcx - 0x39]; add eax, 0x270a74; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000041919: push qword ptr [rbx + rdx + 0x50]; call 0x4bf87; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x0000000000056f34: push qword ptr [rcx + rax*8 + 0x5a]; pop rbx; pop rbp; ret; 
0x0000000000037a49: push qword ptr [rcx + rcx + 0x48]; movsxd rdi, edi; bsf rax, rdi; inc eax; ret; 
0x0000000000056ebe: push qword ptr [rcx + rsi*4 + 0x5a]; pop rbx; pop rbp; ret; 
0x00000000000223c2: push qword ptr [rcx]; idiv byte ptr [rax + 0x11d]; mov rdx, r8; syscall; 
0x00000000000223c2: push qword ptr [rcx]; idiv byte ptr [rax + 0x11d]; mov rdx, r8; syscall; neg eax; ret; 
0x0000000000044f02: push qword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000005aec4: push qword ptr [rcx]; rcr byte ptr [rbx - 0x77], cl; rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x0000000000057ce0: push qword ptr [rcx]; rol byte ptr [rbp + 0x310b74c0], cl; rol byte ptr [rbx - 0x6bf0f408], cl; ret 0xc283; 
0x0000000000020d26: push qword ptr [rcx]; rol byte ptr [rbx - 0x6bf07f19], 0xc0; ret; 
0x000000000002646a: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], cl; jge 0x26471; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000024061: push qword ptr [rcx]; sar byte ptr [rcx], cl; sar dword ptr [rax - 1], 0xf; xchg eax, edi; ret 0x430f; 
0x00000000000929cf: push qword ptr [rdi + 0x24]; stc; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x00000000000169c6: push qword ptr [rdi + 7]; mov rax, rdi; ret; 
0x0000000000037a5a: push qword ptr [rdi + rax + 0x48]; bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x00000000000930f3: push qword ptr [rdi - 0x2a]; sti; jmp qword ptr [rbx - 0x29]; 
0x000000000003a83f: push qword ptr [rdx + rcx + 0x40]; movsx eax, bh; and eax, 0xdfff; ret; 
0x000000000003b3b7: push qword ptr [rdx + rcx + 0x51]; xor edx, edx; call 0x3b082; pop rdx; ret; 
0x0000000000057310: push qword ptr [rdx + rdx + 0x48]; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000003058b: push qword ptr [rdx]; ja 0x3059f; movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000929d3: push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x000000000003681b: push qword ptr [rsp + 0x38]; call 0x29dde; add rsp, 0x30; add rsp, 0x38; ret; 
0x000000000004c519: push qword ptr [rsp + rdx + 0x31]; ror byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x148; 
0x00000000000558e7: push qword ptr [rsp + rdx - 0x75]; xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000006f670: push r10; jmp qword ptr [rsi - 0x6b]; 
0x00000000000911cf: push r15; sbb eax, 0x153f5945; ret; 
0x000000000004ba4e: push r8; pop rbx; mov edx, 1; jmp rax; 
0x000000000004b450: push r8; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x00000000000233a3: push r9; movsxd rdi, edi; mov r10, rbx; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000002397d: push rax; adc byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], 0x44; and al, 0x18; mov eax, 0x65; syscall; 
0x0000000000040662: push rax; add al, 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004dc09: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x247616; movzx eax, byte ptr [rax]; ret; 
0x000000000004dbde: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x247641; movzx eax, byte ptr [rax]; ret; 
0x000000000004c25f: push rax; add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000025c32: push rax; call 0x14680; xor eax, eax; pop rdx; ret; 
0x000000000001ae3c: push rax; call 0x21e65; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000002318e: push rax; call 0x21e65; mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005a89b: push rax; call 0x21eb7; movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x000000000002d3af: push rax; call 0x345fe; add rsp, 0x20; add rsp, 0x30; pop rbx; ret; 
0x00000000000324db: push rax; call 0x35398; pop rdx; cvttsd2si rax, xmm0; ret; 
0x00000000000324e8: push rax; call 0x3543e; pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000036be8: push rax; call 0x3682d; cvtsd2ss xmm0, xmm0; pop rdx; ret; 
0x000000000003715f: push rax; call 0x3716f; pop rax; fld1; fsubp st(1); ret; 
0x0000000000042473: push rax; call 0x423c4; pop rdx; shr rax, 0x11; ret; 
0x0000000000042492: push rax; call 0x423c4; shr rax, 0x10; cdqe; pop rdx; ret; 
0x0000000000044f0a: push rax; call 0x44ea2; pop rdx; ret; 
0x0000000000038b1d: push rax; call 0x4bf87; mov eax, 1; pop rdx; ret; 
0x000000000004191c: push rax; call 0x4bf87; mov qword ptr [rip + 0x25651b], 0; pop rdx; ret; 
0x000000000004df73: push rax; call 0x545dd; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x00000000000566a2: push rax; call 0x57d91; xor eax, eax; pop rdx; ret; 
0x0000000000079665: push rax; call qword ptr [rax]; 
0x000000000006baf6: push rax; call qword ptr [rcx - 1]; 
0x000000000001ce1d: push rax; fld xword ptr [rsp + 0x60]; fxch st(1); add rsp, 0x48; ret; 
0x000000000006f283: push rax; jne 0x6f2d6; push rsp; ret; 
0x0000000000055c86: push rax; js 0x55cd1; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000041001: push rax; lea r8, [rsp + 0x20]; call 0x40984; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x00000000000408cf: push rax; lea r9, [rsp + 0x28]; call 0x41063; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x000000000008715f: push rax; leave; push rax; retf 0xb350; push rax; ret 0xd650; 
0x0000000000087163: push rax; mov bl, 0x50; ret 0xd650; 
0x000000000005b412: push rax; mov eax, 0x10a; syscall; 
0x0000000000023cd0: push rax; mov eax, 0x110; syscall; 
0x0000000000023cbb: push rax; mov eax, 0x11f; syscall; 
0x0000000000023c49: push rax; mov eax, 0x132; syscall; 
0x0000000000023716: push rax; mov eax, 0x13f; syscall; 
0x0000000000023733: push rax; mov eax, 0x145; syscall; 
0x000000000005a8a4: push rax; mov eax, 0x15; syscall; 
0x000000000005b025: push rax; mov eax, 0x16; syscall; 
0x0000000000049cc3: push rax; mov eax, 0x18; syscall; 
0x000000000003a1d8: push rax; mov eax, 0x1b; syscall; 
0x000000000003a1c6: push rax; mov eax, 0x1c; syscall; 
0x000000000005a98a: push rax; mov eax, 0x20; syscall; 
0x000000000004a62f: push rax; mov eax, 0x24; syscall; 
0x000000000004a799: push rax; mov eax, 0x26; syscall; 
0x0000000000042bbf: push rax; mov eax, 0x3b; syscall; 
0x0000000000039ced: push rax; mov eax, 0x3f; syscall; 
0x00000000000226a4: push rax; mov eax, 0x41; syscall; 
0x00000000000226fb: push rax; mov eax, 0x43; syscall; 
0x000000000005b471: push rax; mov eax, 0x4c; syscall; 
0x000000000005ad40: push rax; mov eax, 0x4d; syscall; 
0x000000000005a90e: push rax; mov eax, 0x50; syscall; 
0x000000000004ebd6: push rax; mov eax, 0x52; syscall; 
0x000000000004b300: push rax; mov eax, 0x53; syscall; 
0x000000000005b27e: push rax; mov eax, 0x54; syscall; 
0x000000000005af73: push rax; mov eax, 0x56; syscall; 
0x000000000005b5a5: push rax; mov eax, 0x57; syscall; 
0x000000000005b3fd: push rax; mov eax, 0x58; syscall; 
0x000000000004af32: push rax; mov eax, 0x5a; syscall; 
0x000000000004b4ef: push rax; mov eax, 0x5f; syscall; 
0x00000000000388d1: push rax; mov eax, 0x62; syscall; 
0x0000000000023c5b: push rax; mov eax, 0x63; syscall; 
0x000000000005b323: push rax; mov eax, 0x70; syscall; 
0x000000000005ae02: push rax; mov eax, 0x73; syscall; 
0x0000000000038813: push rax; mov eax, 0x76; syscall; 
0x0000000000038801: push rax; mov eax, 0x78; syscall; 
0x000000000005aed1: push rax; mov eax, 0x79; syscall; 
0x0000000000023a5c: push rax; mov eax, 0x7a; syscall; 
0x0000000000023a48: push rax; mov eax, 0x7b; syscall; 
0x000000000005af00: push rax; mov eax, 0x7c; syscall; 
0x0000000000023296: push rax; mov eax, 0x7d; syscall; 
0x0000000000023284: push rax; mov eax, 0x7e; syscall; 
0x000000000004abf5: push rax; mov eax, 0x7f; syscall; 
0x00000000000234bd: push rax; mov eax, 0x7fffffff; cmova rdx, rax; movsxd rdi, edi; mov eax, 0xd9; syscall; 
0x000000000004b342: push rax; mov eax, 0x85; syscall; 
0x00000000000237dc: push rax; mov eax, 0x87; syscall; 
0x0000000000049b9f: push rax; mov eax, 0x92; syscall; 
0x0000000000049bb4: push rax; mov eax, 0x93; syscall; 
0x0000000000049c93: push rax; mov eax, 0x94; syscall; 
0x000000000003a1ea: push rax; mov eax, 0x95; syscall; 
0x000000000003a3b8: push rax; mov eax, 0x96; syscall; 
0x000000000003a1ff: push rax; mov eax, 0x97; syscall; 
0x000000000003a3ca: push rax; mov eax, 0x98; syscall; 
0x0000000000023cf2: push rax; mov eax, 0x99; syscall; 
0x00000000000237ee: push rax; mov eax, 0x9b; syscall; 
0x0000000000023263: push rax; mov eax, 0x9e; syscall; 
0x00000000000232a8: push rax; mov eax, 0xa1; syscall; 
0x000000000005a8b6: push rax; mov eax, 0xa3; syscall; 
0x000000000002376e: push rax; mov eax, 0xa5; syscall; 
0x0000000000023782: push rax; mov eax, 0xa6; syscall; 
0x0000000000023c0a: push rax; mov eax, 0xa7; syscall; 
0x0000000000023c1c: push rax; mov eax, 0xa8; syscall; 
0x000000000003a2da: push rax; mov eax, 0xa; and rsi, 0xfffffffffffff000; mov rdi, r8; sub rsi, r8; syscall; 
0x0000000000023aef: push rax; mov eax, 0xaa; syscall; 
0x00000000000396de: push rax; mov eax, 0xab; syscall; 
0x000000000002358b: push rax; mov eax, 0xac; syscall; 
0x0000000000023576: push rax; mov eax, 0xad; syscall; 
0x0000000000023745: push rax; mov eax, 0xaf; syscall; 
0x0000000000023759: push rax; mov eax, 0xb0; syscall; 
0x0000000000023df8: push rax; mov eax, 0xc5; syscall; 
0x0000000000023e0a: push rax; mov eax, 0xc6; syscall; 
0x0000000000023e1f: push rax; mov eax, 0xc7; syscall; 
0x0000000000049ae4: push rax; mov eax, 0xcb; syscall; 
0x00000000000591ae: push rax; mov eax, 0xe3; syscall; 
0x000000000005908f: push rax; mov eax, 0xe5; syscall; 
0x000000000003a77b: push rax; mov eax, 0xf5; syscall; 
0x000000000003a540: push rax; mov eax, 3; syscall; 
0x00000000000795f7: push rax; mov ebp, 0xbf50be50; push rax; rcl byte ptr [rax - 0x3f], 0x50; ret 0xc350; 
0x000000000001e0ec: push rax; mov edi, 0x54; call 0x1e115; pop rdx; ret; 
0x00000000000795fb: push rax; mov edi, 0xc150c050; push rax; ret 0xc350; 
0x000000000004b315: push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x000000000005a922: push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005af5f: push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023547: push rax; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000239de: push rax; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000000795f9: push rax; mov esi, 0xc050bf50; push rax; rcl dword ptr [rax - 0x3e], 0x50; ret; 
0x000000000004503f: push rax; mov esi, esi; call 0x44ea2; pop rdx; ret; 
0x0000000000023470: push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x00000000000396f3: push rax; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000795f5: push rax; mov esp, 0xbe50bd50; push rax; mov edi, 0xc150c050; push rax; ret 0xc350; 
0x0000000000055c69: push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000049c72: push rax; mov rdi, -0x26; call 0x169c0; pop rdx; ret; 
0x0000000000023275: push rax; mov rdi, -0xc; call 0x169c0; pop rdx; ret; 
0x000000000004b0c5: push rax; mov rdi, -9; call 0x169c0; pop rdx; ret; 
0x000000000006dba5: push rax; movsb byte ptr [rdi], byte ptr [rsi]; push rdx; in al, 0x52; ret; 
0x0000000000023db0: push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000023dc8: push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000237ac: push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023de0: push rax; movsxd r8, r8d; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x000000000005accf: push rax; movsxd r8, r8d; movsxd rdi, edi; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000005af88: push rax; movsxd r8, r8d; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x00000000000239fd: push rax; movsxd r8, r8d; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000023c31: push rax; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x00000000000226b9: push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000004b357: push rax; movsxd rdi, edi; mov edx, edx; mov eax, 0x103; syscall; 
0x0000000000054575: push rax; movsxd rdi, edi; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x00000000000545c3: push rax; movsxd rdi, edi; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000023487: push rax; movsxd rdi, edi; mov esi, esi; mov eax, 0x12d; syscall; 
0x000000000005b266: push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x0000000000023d2c: push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x00000000000239b1: push rax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x0000000000023456: push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023ca0: push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238f9: push rax; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x0000000000023380: push rax; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0xe9; syscall; 
0x000000000005a9b4: push rax; movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x000000000005b5ba: push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x00000000000237c7: push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000235a0: push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x000000000001adc8: push rax; movsxd rsi, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x0000000000023c88: push rax; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023b04: push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x00000000000226e6: push rax; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004a644: push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x00000000000225a3: push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x000000000002258b: push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x00000000000234a1: push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005b2c5: push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000002355e: push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000054843: push rax; or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000050e77: push rax; or byte ptr [rax - 0x77], cl; push rsp; and al, 0xf0; mov rax, qword ptr [rax]; ret; 
0x00000000000197c1: push rax; or byte ptr [rcx + 0x5d5b0857], cl; ret; 
0x000000000004ba4f: push rax; pop rbx; mov edx, 1; jmp rax; 
0x000000000004a908: push rax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022339: push rax; pop rbx; ret; 
0x0000000000082000: push rax; push rbp; cmp al, 0x55; ret 0xc390; 
0x0000000000023b57: push rax; push rsi; add eax, dword ptr [rax]; add rsp, 0x18; ret; 
0x000000000006f285: push rax; push rsp; ret; 
0x00000000000795fd: push rax; rcl byte ptr [rax - 0x3f], 0x50; ret 0xc350; 
0x00000000000795ff: push rax; rcl dword ptr [rax - 0x3e], 0x50; ret; 
0x0000000000086159: push rax; ret 0x7153; 
0x0000000000076ed1: push rax; ret 0xb050; 
0x000000000006cd7a: push rax; ret 0xc251; 
0x0000000000079601: push rax; ret 0xc350; 
0x0000000000087165: push rax; ret 0xd650; 
0x0000000000024aeb: push rax; ret; 
0x0000000000087161: push rax; retf 0xb350; push rax; ret 0xd650; 
0x0000000000018abf: push rax; ror byte ptr [rdi], 1; mov dh, 0xc0; movzx edx, dl; sub eax, edx; ret; 
0x00000000000224f9: push rax; stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000004b451: push rax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x0000000000005539: push rax; test dword ptr [rbx], ebx; cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x00000000000709cb: push rax; xor al, 0x9b; test al, 0x69; ret; 
0x000000000003d48a: push rax; xor r8d, r8d; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d124: push rax; xor r8d, r8d; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000007024f: push rbp; add byte ptr [rax], al; ret; 
0x00000000000328d7: push rbp; add eax, 0x580ff200; ret 0xf66; 
0x00000000000735bb: push rbp; add edx, dword ptr [rdi + 4]; push rdi; ret 0xd457; 
0x0000000000028564: push rbp; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000079bdd: push rbp; call qword ptr [rbp + 2]; 
0x000000000006bb00: push rbp; call qword ptr [rsi - 1]; 
0x0000000000079bdb: push rbp; cld; push rbp; call qword ptr [rbp + 2]; 
0x0000000000082001: push rbp; cmp al, 0x55; ret 0xc390; 
0x000000000006e889: push rbp; ficom dword ptr [rsi - 0x7e]; push rdi; std; pop rax; ret 0x885a; 
0x0000000000042bf2: push rbp; mov al, 0xe8; in eax, 0xee; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000079b91: push rbp; mov eax, 0xbc55ba55; push rbp; mov edi, 0xc155c055; push rbp; ret 0xc355; 
0x0000000000079b97: push rbp; mov edi, 0xc155c055; push rbp; ret 0xc355; 
0x0000000000079b93: push rbp; mov edx, 0xbf55bc55; push rbp; rcl byte ptr [rbp - 0x3f], 0x55; ret 0xc355; 
0x0000000000079b95: push rbp; mov esp, 0xc055bf55; push rbp; rcl dword ptr [rbp - 0x3e], 0x55; ret; 
0x000000000004df6f: push rbp; movabs al, byte ptr [0x6664e8500024]; lea rax, [rip + 0x249ee8]; pop rdx; ret; 
0x0000000000081fff: push rbp; push rax; push rbp; cmp al, 0x55; ret 0xc390; 
0x00000000000235c8: push rbp; push rbx; movsxd rsi, esi; mov eax, 0x144; sub rsp, 0x128; syscall; 
0x0000000000079b99: push rbp; rcl byte ptr [rbp - 0x3f], 0x55; ret 0xc355; 
0x0000000000079b9b: push rbp; rcl dword ptr [rbp - 0x3e], 0x55; ret; 
0x0000000000076f19: push rbp; ret 0x1455; 
0x0000000000079b9d: push rbp; ret 0xc355; 
0x0000000000082003: push rbp; ret 0xc390; 
0x0000000000071b05: push rbp; ret; 
0x0000000000079bd9: push rbp; sti; push rbp; cld; push rbp; call qword ptr [rbp + 2]; 
0x0000000000057b7d: push rbp; xor byte ptr [rax + 0x39], cl; ret 0xe975; 
0x00000000000418b2: push rbx; and byte ptr [rax - 0x75], cl; jl 0x418dc; adc al, ch; ret 0xfd2d; 
0x000000000005305c: push rbx; and byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000000799db: push rbx; call qword ptr [rbx]; 
0x00000000000933a0: push rbx; cmc; sti; jmp qword ptr [rax - 0xb]; 
0x0000000000071c5f: push rbx; cmc; xor esp, dword ptr [rbx + 2]; push 0x5d5735d2; ret 0xda8b; 
0x000000000003335e: push rbx; cvtpi2ps xmm0, mm0; pop rax; ret; 
0x0000000000080de3: push rbx; jl 0x80e44; ret 0xe48f; 
0x0000000000020e9f: push rbx; lea rax, [rip + 0x71ad1]; movsxd rdx, dword ptr [rax + rsi*4]; add rax, rdx; jmp rax; 
0x000000000008727d: push rbx; mov al, 0x53; mov dh, 0x53; ret; 
0x000000000008727f: push rbx; mov dh, 0x53; ret; 
0x0000000000049b38: push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x00000000000799ab: push rbx; mov ebp, 0xc053be53; push rbx; ret; 
0x00000000000799a5: push rbx; mov ecx, 0xbc53ba53; push rbx; mov ebp, 0xc053be53; push rbx; ret; 
0x0000000000054fb6: push rbx; mov esi, 1; mov rax, r9; syscall; 
0x0000000000057e97: push rbx; mov rbp, rsi; mov esi, 0x88800; sub rsp, 0x90; syscall; 
0x000000000005b044: push rbx; mov rbp, rsi; push rcx; mov rbx, rdi; mov eax, 0x125; syscall; 
0x0000000000017bc0: push rbx; mov rbx, rdi; call 0x17780; mov rax, rbx; pop rbx; ret; 
0x0000000000018160: push rbx; mov rbx, rdi; call 0x17840; mov rax, rbx; pop rbx; ret; 
0x0000000000017730: push rbx; mov rbx, rdx; call 0x54121; add rax, rbx; pop rbx; ret; 
0x000000000001fdeb: push rbx; movsxd rcx, dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000005ac0e: push rbx; movsxd rdi, edi; mov eax, 0x51; sub rsp, 0x20; syscall; 
0x0000000000049b04: push rbx; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x00000000000235c9: push rbx; movsxd rsi, esi; mov eax, 0x144; sub rsp, 0x128; syscall; 
0x0000000000033744: push rbx; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000003602f: push rbx; movups xmm1, xmmword ptr [rip + 0x5a998]; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000002c9b0: push rbx; movups xmm1, xmmword ptr [rip + 0x66223]; subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x0000000000055332: push rbx; or al, 0xf7; ret 0xffff; 
0x0000000000041884: push rbx; or byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004c7d3: push rbx; or byte ptr [rax + 0x39], cl; ret 0xa73; 
0x0000000000019a36: push rbx; or byte ptr [rcx - 0x77], al; push rdx; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000434da: push rbx; or byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x00000000000738ff: push rbx; push rbx; push rbx; ret; 
0x0000000000073901: push rbx; push rbx; ret; 
0x00000000000700bf: push rbx; push rcx; xor eax, 0x355353b0; ret 0x2353; 
0x000000000006238f: push rbx; push rsp; jae 0x6239d; mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x0000000000073903: push rbx; ret; 
0x0000000000041892: push rbx; sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x00000000000738fb: push rbx; sbb dword ptr [rbx + 0x3f], edx; push rbx; push rbx; push rbx; ret; 
0x000000000008727b: push rbx; scasb al, byte ptr [rdi]; push rbx; mov al, 0x53; mov dh, 0x53; ret; 
0x00000000000803cb: push rbx; sub al, 0x54; ret; 
0x0000000000086683: push rbx; xchg eax, esi; mov byte ptr [rsi + 0x51], dh; ret; 
0x00000000000601b3: push rbx; xor al, 0x16; ret 0x56c2; 
0x000000000004c8ed: push rcx; adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x000000000005492f: push rcx; add byte ptr es:[rax], al; ret; 
0x0000000000058e71: push rcx; add dword ptr [rax], eax; imul eax, eax, 0x1e13380; add eax, edx; cdqe; ret; 
0x0000000000058f39: push rcx; add dword ptr [rax], eax; lea rax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000057f38: push rcx; add dword ptr [rax], eax; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000003c5e4: push rcx; add dword ptr [rbx - 0x57f3f1e], eax; xor byte ptr [rbp + 0x1e], 0xeb; sbb byte ptr [rcx - 2], al; ret; 
0x00000000000544b6: push rcx; call 0x21e65; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e0bd: push rcx; call 0x21e65; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000057a43: push rcx; call 0x21e65; mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005ee88: push rcx; call 0x5baf5; mov eax, 1; pop rdx; ret; 
0x000000000006baf8: push rcx; call qword ptr [rdx - 1]; 
0x000000000004a407: push rcx; call rax; 
0x0000000000078d85: push rcx; cmp dword ptr [rcx - 0x68], edx; push rdx; xchg eax, edi; push rdx; ret; 
0x000000000002764d: push rcx; cmp rdx, rdi; adc eax, 0; ret; 
0x0000000000078d87: push rcx; cwde; push rdx; xchg eax, edi; push rdx; ret; 
0x000000000003a810: push rcx; jbe 0x3a811; inc dword ptr [rbx + 0x1889ffca]; mov eax, edx; pop rbx; ret; 
0x00000000000232bc: push rcx; jne 0x232cb; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000004eb4: push rcx; jns 0x4ebe; ret; 
0x0000000000076ee5: push rcx; jp 0x76f3a; js 0x76f3c; jnp 0x76f3e; jl 0x76f40; ret; 
0x0000000000022756: push rcx; lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000008fc73: push rcx; mov cl, 0x68; ret; 
0x000000000007974b: push rcx; mov eax, 0xba51b951; push rcx; mov esi, 0xc151bf51; push rcx; ret 0xc351; 
0x000000000007974d: push rcx; mov ecx, 0xbe51ba51; push rcx; mov edi, 0xc251c151; push rcx; ret; 
0x0000000000079753: push rcx; mov edi, 0xc251c151; push rcx; ret; 
0x00000000000233e9: push rcx; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000007974f: push rcx; mov edx, 0xbf51be51; push rcx; rcl dword ptr [rcx - 0x3e], 0x51; ret; 
0x0000000000079751: push rcx; mov esi, 0xc151bf51; push rcx; ret 0xc351; 
0x00000000000387de: push rcx; mov esi, esi; mov eax, 0x8c; syscall; 
0x00000000000590ec: push rcx; mov rax, qword ptr [rip + 0x23c37c]; mov rbx, rsi; test rax, rax; je 0x59112; call rax; 
0x000000000005b048: push rcx; mov rbx, rdi; mov eax, 0x125; syscall; 
0x000000000002334e: push rcx; mov rdx, rdi; syscall; 
0x0000000000023b63: push rcx; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x00000000000233a4: push rcx; movsxd rdi, edi; mov r10, rbx; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000008093a: push rcx; pop rsp; stosb byte ptr [rdi], al; test dword ptr [rdi + 0x23950c82], ebp; imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x0000000000079755: push rcx; rcl dword ptr [rcx - 0x3e], 0x51; ret; 
0x000000000007519b: push rcx; rcl dword ptr [rsi - 0x40], 0x56; ret 0x1456; 
0x000000000007e753: push rcx; ret 0xa189; 
0x000000000006cd7c: push rcx; ret 0xc254; 
0x0000000000079757: push rcx; ret 0xc351; 
0x0000000000070b6f: push rcx; ret; 
0x000000000004ebbd: push rcx; syscall; 
0x0000000000075224: push rcx; wait; sub eax, 0xaf9c259c; popfq; mov ah, 0x9d; ret 0xb89d; 
0x000000000007f1bb: push rcx; xchg eax, edx; push rdi; ret 0x8b64; 
0x00000000000700c0: push rcx; xor eax, 0x355353b0; ret 0x2353; 
0x000000000003b3ba: push rcx; xor edx, edx; call 0x3b082; pop rdx; ret; 
0x000000000002749d: push rdi; adc byte ptr [rax + 0x63], cl; dec byte ptr [rax - 0x77]; ret 0xf48; 
0x0000000000055c8a: push rdi; adc byte ptr [rax - 0x77], cl; js 0x55d08; ret; 
0x00000000000735bd: push rdi; add al, 0x57; ret 0xd457; 
0x000000000005498d: push rdi; add al, 0xc1; call 0x1e5cc99; ret; 
0x000000000004f166: push rdi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x00000000000423f8: push rdi; add cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x00000000000359b8: push rdi; add eax, 0x5b002; add rsp, 0x18; ret; 
0x0000000000028226: push rdi; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000079e81: push rdi; call qword ptr [rdi + 1]; 
0x000000000008738d: push rdi; call qword ptr [rsi + 4]; 
0x0000000000053601: push rdi; fdivr dword ptr [rcx]; ret; 
0x00000000000594fb: push rdi; fmul dword ptr [rax + 0x63]; clc; call 0x169c0; pop rdx; ret; 
0x000000000002af07: push rdi; fstp xword ptr [rcx]; ret 0x1877; 
0x000000000004074c: push rdi; idiv edi; xor r9d, r9d; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000002f66c: push rdi; in al, 0xf; push rdi; ret 0x2e0f; 
0x000000000007154f: push rdi; jae 0x715c3; ret 0xcd0a; 
0x0000000000085b97: push rdi; jmp qword ptr [rdi - 0x32]; 
0x0000000000032a1c: push rdi; leave; divss xmm0, xmm1; ret; 
0x000000000002a765: push rdi; leave; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002dd50: push rdi; leave; movapd xmm0, xmm1; ret; 
0x000000000002dd8c: push rdi; leave; movaps xmm0, xmm1; ret; 
0x000000000002ffaa: push rdi; leave; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000002f49e: push rdi; leave; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x0000000000028a59: push rdi; leave; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000030548: push rdi; leave; movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002fa1b: push rdi; leave; movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x0000000000028a81: push rdi; leave; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x00000000000353de: push rdi; leave; mulsd xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000035477: push rdi; leave; mulss xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x00000000000873c7: push rdi; mov al, 0x57; ret; 
0x000000000005fcfb: push rdi; movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x000000000008680c: push rdi; movsxd rsi, esp; jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x0000000000049fc8: push rdi; or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x00000000000197c4: push rdi; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000004c263: push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000060623: push rdi; out 0x72, al; ret; 
0x0000000000071c68: push rdi; pop rbp; ret 0xda8b; 
0x000000000007154e: push rdi; push rdi; jae 0x715c3; ret 0xcd0a; 
0x00000000000401e5: push rdi; ret 0x2004; 
0x000000000002f66f: push rdi; ret 0x2e0f; 
0x0000000000036a82: push rdi; ret 0x2e8; 
0x000000000003bce6: push rdi; ret 0x405; 
0x0000000000031866: push rdi; ret 0x40e9; 
0x0000000000031925: push rdi; ret 0x7ae8; 
0x000000000007f1bd: push rdi; ret 0x8b64; 
0x00000000000735bf: push rdi; ret 0xd457; 
0x0000000000035bc4: push rdi; ret 0xede9; 
0x000000000001b7c3: push rdi; ret 0xf66; 
0x0000000000028fba: push rdi; ret 0xff2; 
0x000000000002bb89: push rdi; ret 0xff3; 
0x000000000001deaa: push rdi; ret; 
0x000000000003529c: push rdi; retf 0x3941; sal byte ptr [rax - 1], 1; ret 0x3941; 
0x00000000000350f2: push rdi; retf 0x3941; sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x0000000000028fb7: push rdi; retf 0x570f; ret 0xff2; 
0x0000000000035d85: push rdi; retf 0x570f; ret 0xff3; 
0x000000000001e9e3: push rdi; retf; cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x00000000000735c3: push rdi; retf; push rdi; ret; 
0x0000000000030c93: push rdi; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000001b760: push rdi; ror dword ptr [rax - 0x7d], 0xc4; adc byte ptr [rsi + 0xf], ah; sub dl, cl; pop rbx; ret; 
0x0000000000030fa3: push rdi; ror dword ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000030a8a: push rdi; ror dword ptr [rax - 0x7d], 0xc4; cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000002ad7b: push rdi; ror dword ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000002a205: push rdi; sal bl, 0xf; pop rsi; ret; 
0x0000000000035656: push rdi; sal ebx, 1; divps xmm0, xmm2; ret; 
0x00000000000355a8: push rdi; sal edx, 1; divps xmm0, xmm2; ret; 
0x000000000002efff: push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef32: push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x0000000000046c56: push rdi; sbb al, 1; sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x00000000000911d0: push rdi; sbb eax, 0x153f5945; ret; 
0x000000000001ba6f: push rdi; shl dword ptr [rsi + 0xf], cl; sub dl, cl; ret; 
0x0000000000032db1: push rdi; shr bl, 0x6d; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x0000000000032bd5: push rdi; shr cl, 0x89; add byte ptr [rax], al; add byte ptr [rip + 0x7fefffff], bh; jbe 0x32be4; ret; 
0x000000000002ba9f: push rdi; shr ebx, 0xa; mov edi, 1; call 0x29a04; add rsp, 0x18; ret; 
0x000000000002bbe5: push rdi; shr ebx, 5; call 0x29aa6; add rsp, 0x18; ret; 
0x000000000006e88d: push rdi; std; pop rax; ret 0x885a; 
0x00000000000873c5: push rdi; stosb byte ptr [rdi], al; push rdi; mov al, 0x57; ret; 
0x000000000004a5d3: push rdi; xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000002fa21: push rdi; xor dword ptr [rsi], eax; add bl, dh; divps xmm0, xmm1; ret; 
0x0000000000040ff4: push rdx; and eax, 0x31fe8900; call qword ptr [rax + 0x48]; 
0x0000000000022135: push rdx; and eax, 0xc0310003; pop rdx; pop rbx; pop rbp; ret; 
0x000000000006bafa: push rdx; call qword ptr [rbx - 1]; 
0x0000000000072a33: push rdx; call qword ptr [rdx + 0x16]; 
0x000000000003331d: push rdx; cvtpi2ps xmm0, mm0; pop rax; ret; 
0x0000000000036bed: push rdx; cvtps2pd xmm0, xmm0; pop rdx; ret; 
0x0000000000092821: push rdx; fist word ptr ds:[rdx]; int1; ret 0xde3f; 
0x000000000006f56d: push rdx; fistp word ptr [rbx - 0x1a]; sub eax, 0xed7d2e67; push rax; ret; 
0x000000000006dba7: push rdx; in al, 0x52; ret; 
0x0000000000076eeb: push rdx; jl 0x76f40; ret; 
0x000000000006f671: push rdx; jmp qword ptr [rsi - 0x6b]; 
0x0000000000076ee9: push rdx; jnp 0x76f3e; jl 0x76f40; ret; 
0x0000000000076ee7: push rdx; js 0x76f3c; jnp 0x76f3e; jl 0x76f40; ret; 
0x0000000000073257: push rdx; leave; push rdx; ret; 
0x000000000008d0ed: push rdx; mov ch, 0xbf; lahf; fsubrp st(0); ret; 
0x000000000007eb95: push rdx; mov eax, 0xc46d4e60; pop rbx; ret 0xa15b; 
0x0000000000079877: push rdx; mov ebp, 0xc152c052; push rdx; ret 0xc452; 
0x0000000000079873: push rdx; mov ebx, 0xbd52bc52; push rdx; rcl byte ptr [rdx - 0x3f], 0x52; ret 0xc452; 
0x0000000000079871: push rdx; mov edx, 0xbc52bb52; push rdx; mov ebp, 0xc152c052; push rdx; ret 0xc452; 
0x000000000006faf5: push rdx; mov edx, dword ptr [rdi + 0x62]; pop rdi; ret 0xce6c; 
0x0000000000023a7e: push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000005b350: push rdx; movsxd rax, dword ptr [rdi + 0xc]; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000033702: push rdx; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000002c430: push rdx; movups xmm1, xmmword ptr [rip + 0x65c67]; pop rax; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000019a3a: push rdx; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000006f1d1: push rdx; or dl, byte ptr [rcx + 0x5a]; ret 0x585b; 
0x0000000000086154: push rdx; or word ptr [rsi - 0x68], cx; push rax; ret 0x7153; 
0x0000000000086682: push rdx; push rbx; xchg eax, esi; mov byte ptr [rsi + 0x51], dh; ret; 
0x000000000008680b: push rdx; push rdi; movsxd rsi, esp; jbe 0x86826; mov byte ptr [ebp + ecx*8 + 0x73], ch; ret; 
0x0000000000079879: push rdx; rcl byte ptr [rdx - 0x3f], 0x52; ret 0xc452; 
0x0000000000075cd9: push rdx; ret 0x3d52; 
0x000000000008f19c: push rdx; ret 0x3fd3; 
0x000000000007987d: push rdx; ret 0xc452; 
0x000000000007f31f: push rdx; ret 0xc888; 
0x0000000000006f40: push rdx; ret; 
0x0000000000092aa7: push rdx; sub eax, 0x30e2fff9; stc; call rcx; 
0x0000000000004fe7: push rdx; xchg byte ptr [rcx], bh; ret 0x5241; 
0x000000000008e77c: push rdx; xchg eax, ebp; ret 0x8bf; 
0x0000000000078d89: push rdx; xchg eax, edi; push rdx; ret; 
0x000000000008db30: push rdx; xor ebx, dword ptr [rcx + 0x1c]; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x0000000000005537: push rsi; add al, 0x50; test dword ptr [rbx], ebx; cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x0000000000077465: push rsi; add al, 0x56; call qword ptr [rbp - 7]; 
0x00000000000580e5: push rsi; add al, 0x5b; pop rbp; ret; 
0x000000000005af75: push rsi; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5afffbba; ret; 
0x0000000000023b58: push rsi; add eax, dword ptr [rax]; add rsp, 0x18; ret; 
0x0000000000077467: push rsi; call qword ptr [rbp - 7]; 
0x000000000006bb02: push rsi; call qword ptr [rdi - 1]; 
0x0000000000082167: push rsi; call qword ptr [rsi + 4]; 
0x000000000000592c: push rsi; jbe 0x590d; mov al, 0xd5; pop rsp; ret 0x9ec0; 
0x0000000000087371: push rsi; mov ah, 0x56; ret 0xbc56; 
0x000000000008736f: push rsi; mov dh, 0x56; mov ah, 0x56; ret 0xbc56; 
0x0000000000079cf3: push rsi; mov ebp, 0xbf56be56; push rsi; rcl byte ptr [rsi - 0x3f], 0x56; ret 0xc356; 
0x0000000000079cf1: push rsi; mov ebx, 0xbe56bd56; push rsi; mov edi, 0xc156c056; push rsi; ret 0xc356; 
0x0000000000079cf7: push rsi; mov edi, 0xc156c056; push rsi; ret 0xc356; 
0x0000000000079cf5: push rsi; mov esi, 0xc056bf56; push rsi; rcl dword ptr [rsi - 0x3e], 0x56; ret; 
0x00000000000427ec: push rsi; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000008cd02: push rsi; movabs byte ptr [0x9bd295f33fed5fff], al; sub byte ptr [rbx + rdi*2], al; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x000000000004b835: push rsi; movsxd rdi, edi; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x0000000000092df5: push rsi; pop rcx; sub eax, 0x31ad6446; ret 0x9dff; 
0x0000000000079cf9: push rsi; rcl byte ptr [rsi - 0x3f], 0x56; ret 0xc356; 
0x0000000000079cfb: push rsi; rcl dword ptr [rsi - 0x3e], 0x56; ret; 
0x000000000007519f: push rsi; ret 0x1456; 
0x0000000000087373: push rsi; ret 0xbc56; 
0x0000000000079cfd: push rsi; ret 0xc356; 
0x0000000000079cff: push rsi; ret; 
0x000000000008736d: push rsi; scasb al, byte ptr [rdi]; push rsi; mov dh, 0x56; mov ah, 0x56; ret 0xbc56; 
0x0000000000082165: push rsi; stc; push rsi; call qword ptr [rsi + 4]; 
0x0000000000054901: push rsp; adc al, byte ptr [rdx]; mov eax, edx; pop rdx; ret; 
0x00000000000392cd: push rsp; add al, 0x80; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000043670: push rsp; add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x000000000005b464: push rsp; add byte ptr [rax], al; call 0x389c1; add rsp, 0x18; ret; 
0x000000000005af23: push rsp; add byte ptr [rax], al; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x000000000004b704: push rsp; add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x000000000001c804: push rsp; and al, 0x10; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x000000000001da56: push rsp; and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000238e4: push rsp; and al, 0x28; syscall; 
0x000000000003a9ea: push rsp; and al, 0xc; mov dword ptr [rbx], edx; add rsp, 0x10; pop rbx; ret; 
0x00000000000392d6: push rsp; and al, 0xc; mov eax, 0x10; syscall; 
0x000000000005a35c: push rsp; and al, 0xc; mov eax, 0xde; syscall; 
0x000000000005a486: push rsp; and al, 0xc; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x30], eax; mov eax, 0xde; syscall; 
0x000000000003d8ba: push rsp; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000002ea93: push rsp; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000002e4c8: push rsp; and al, 0xf0; maxsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000050e7b: push rsp; and al, 0xf0; mov rax, qword ptr [rax]; ret; 
0x000000000002e524: push rsp; and al, 0xf8; maxss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002de95: push rsp; and al, 0xf8; movapd xmm0, xmm1; ret; 
0x000000000002dea0: push rsp; and al, 0xf8; movsd xmm0, qword ptr [rip + 0x63ef5]; ret; 
0x00000000000353e7: push rsp; and al, 0xf8; ret; 
0x00000000000224b5: push rsp; and al, 0xf8; xor eax, eax; ret; 
0x0000000000056cde: push rsp; and al, 0xf8; xor edi, edi; mov eax, 0x112; syscall; 
0x000000000005b1ff: push rsp; and al, 0xf; mov r10d, 1; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x00000000000338f0: push rsp; and al, 0xfc; movaps xmm0, xmm1; ret; 
0x0000000000035480: push rsp; and al, 0xfc; ret; 
0x00000000000219fa: push rsp; and al, 8; add rsp, 0x18; pop rbx; pop rbp; jmp rax; 
0x000000000005af28: push rsp; and al, 8; mov eax, 0x10; syscall; 
0x000000000004b6ff: push rsp; and al, 8; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000005ac88: push rsp; and al, 8; mov esi, 1; mov eax, 0x48; syscall; 
0x00000000000264b1: push rsp; and al, 8; mov rax, rdx; add rsp, 0x28; ret; 
0x000000000005acb8: push rsp; and al, 8; syscall; 
0x00000000000735b9: push rsp; andnps xmm0, xmmword ptr [rbx]; push rdi; add al, 0x57; ret 0xd457; 
0x000000000006bafe: push rsp; call qword ptr [rbp - 1]; 
0x0000000000073293: push rsp; call qword ptr [rsi - 0x7e]; 
0x0000000000075cef: push rsp; iretd; push rsp; ret; 
0x0000000000062390: push rsp; jae 0x6239d; mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x000000000005f67a: push rsp; jnp 0x5f632; pop rcx; pop rdx; ret 0xd539; 
0x0000000000081fa9: push rsp; lodsd eax, dword ptr [rsi]; push rsp; ret 0xb454; 
0x000000000006f1d3: push rsp; loope 0x6f230; ret 0x585b; 
0x0000000000079a7d: push rsp; mov edx, 0xbe54bc54; push rsp; ret; 
0x0000000000005304: push rsp; movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x0000000000075ced: push rsp; movsd dword ptr [rdi], dword ptr [rsi]; push rsp; iretd; push rsp; ret; 
0x0000000000081fa5: push rsp; popfq; push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x0000000000081fa3: push rsp; push sp; popfq; push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x0000000000081fa7: push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x00000000000872d9: push rsp; ret 0xa454; 
0x0000000000081fab: push rsp; ret 0xb454; 
0x0000000000073279: push rsp; ret 0xbd54; 
0x000000000006cd7e: push rsp; ret 0xc258; 
0x000000000004a36a: push rsp; ret; 
0x000000000008c71b: push rsp; rol dword ptr [rsp + rax*8 + 0x2c383c3f], 1; cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x000000000005ba8d: push rsp; ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000005a968: push rsp; sar bl, 0xff; pop rdi; ret; 
0x00000000000422b0: push rsp; stosd dword ptr [rdi], eax; add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x00000000000872d7: push rsp; stosd dword ptr [rdi], eax; push rsp; ret 0xa454; 
0x00000000000872d5: push rsp; test al, 0x54; stosd dword ptr [rdi], eax; push rsp; ret 0xa454; 
0x000000000007328d: push rsp; test eax, 0xbf54a754; push rsp; call qword ptr [rsi - 0x7e]; 
0x0000000000081fa4: push sp; popfq; push rsp; rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x000000000008a962: pushfq; add byte ptr [rbx + 0x2e007b20], ch; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x0000000000075227: pushfq; and eax, 0xb49daf9c; popfq; ret 0xb89d; 
0x00000000000053b2: pushfq; call 0xffffffffde7fe464; ret 0x793b; 
0x00000000000778ce: pushfq; cdq; ret; 
0x00000000000778f1: pushfq; cmc; pushfq; cmpsd dword ptr [rsi], dword ptr [rdi]; sahf; call qword ptr [rax + 3]; 
0x00000000000778f3: pushfq; cmpsd dword ptr [rsi], dword ptr [rdi]; sahf; call qword ptr [rax + 3]; 
0x000000000004b5d6: pushfq; jne 0x4b5e6; mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x00000000000842cf: pushfq; mov edi, 0xc19cc09c; pushfq; ret 0xc89c; 
0x0000000000071aff: pushfq; pop r10; lahf; jae 0x71b5b; ret; 
0x00000000000842d5: pushfq; ret 0xc89c; 
0x0000000000075229: pushfq; scasd eax, dword ptr [rdi]; popfq; mov ah, 0x9d; ret 0xb89d; 
0x000000000006d41c: pushfq; shl byte ptr [rax - 0x532d5b2e], cl; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000005ff8d: pushfq; sub ah, byte ptr [rax - 0x5d]; call 0x6c21df8e; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000003d489: rcl byte ptr [rax + 0x45], cl; xor eax, eax; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d123: rcl byte ptr [rax + 0x45], cl; xor eax, eax; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x00000000000795fe: rcl byte ptr [rax - 0x3f], 0x50; ret 0xc350; 
0x000000000003a1c5: rcl byte ptr [rax - 0x48], cl; sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000006d415: rcl byte ptr [rax - 0x6a2d6e2e], cl; rcr byte ptr [rdx + rdx*8 - 0x2d5b2d60], cl; lodsb al, byte ptr [rsi]; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000005b968: rcl byte ptr [rbp + 0x48], 0x83; leave; call qword ptr [rbx - 0x45]; 
0x0000000000081fa8: rcl byte ptr [rbp + rbp*4 + 0x54], 1; ret 0xb454; 
0x0000000000079b9a: rcl byte ptr [rbp - 0x3f], 0x55; ret 0xc355; 
0x0000000000023b62: rcl byte ptr [rcx + 0x48], cl; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000006d417: rcl byte ptr [rcx - 0x632d6a2e], cl; shl byte ptr [rax - 0x532d5b2e], cl; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000007987a: rcl byte ptr [rdx - 0x3f], 0x52; ret 0xc452; 
0x000000000002886a: rcl byte ptr [rsi + rax + 0x280f6600], cl; retf 0xff2; pop rcx; ret 0xff2; 
0x0000000000079cfa: rcl byte ptr [rsi - 0x3f], 0x56; ret 0xc356; 
0x0000000000023486: rcl dword ptr [rax + 0x48], 1; movsxd rdi, edi; mov esi, esi; mov eax, 0x12d; syscall; 
0x000000000009136b: rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x0000000000079600: rcl dword ptr [rax - 0x3e], 0x50; ret; 
0x0000000000079b9c: rcl dword ptr [rbp - 0x3e], 0x55; ret; 
0x0000000000079756: rcl dword ptr [rcx - 0x3e], 0x51; ret; 
0x00000000000803c6: rcl dword ptr [rsi + rdx + 0x2c53855e], 0x54; ret; 
0x0000000000079cfc: rcl dword ptr [rsi - 0x3e], 0x56; ret; 
0x000000000007519c: rcl dword ptr [rsi - 0x40], 0x56; ret 0x1456; 
0x0000000000090f22: rcl ebp, cl; push -0x21; ret 0x188; 
0x000000000002b4b7: rcr bl, 0x3c; and al, 0xe8; cwde; ret; 
0x000000000003bc1d: rcr byte ptr [rax + 0x48], 0x29; ret; 
0x0000000000079fb2: rcr byte ptr [rax - 0x3e], 0x58; ret; 
0x00000000000832a6: rcr byte ptr [rax - 0x672a672d], cl; fstp dword ptr [rax + 0x6bb398da]; pop rdi; ret 0xf36b; 
0x000000000005b7a6: rcr byte ptr [rax], 0xeb; xlatb; lea rax, [rip + 0x227f]; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x0000000000028153: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000005b88f: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; ret; 
0x0000000000017a2a: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000021db6: rcr byte ptr [rbp + 0x41], 1; pop rsp; pop r13; pop r14; ret; 
0x000000000005aec9: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x000000000007524c: rcr byte ptr [rbp + 0x4e], cl; pop rdi; jmp qword ptr [rcx + 0x24]; 
0x000000000007a688: rcr byte ptr [rbp - 0x3f], 0x5d; ret 0xc35d; 
0x000000000005b88b: rcr byte ptr [rbx + 0x4c], 0x89; rcr byte ptr [rbp + 0x41], 0x5c; pop r13; ret; 
0x000000000005b945: rcr byte ptr [rbx + 0x4c], 0x89; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000021e5b: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000003a5ae: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000000189d1: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000003f231: rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; pop r14; ret; 
0x000000000004f19d: rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; ret; 
0x00000000000388c8: rcr byte ptr [rbx + 0x5d], 1; pop r12; ret; 
0x0000000000021425: rcr byte ptr [rbx + 0x5d], 1; ret; 
0x0000000000021b3c: rcr byte ptr [rbx + 0x5d], cl; pop r12; ret; 
0x0000000000054c51: rcr byte ptr [rbx - 0x3d], 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x000000000004b4ea: rcr byte ptr [rbx - 0x3d], 1; mov edi, edi; push rax; mov eax, 0x5f; syscall; 
0x000000000007a3be: rcr byte ptr [rbx - 0x3f], 0x5b; ret; 
0x000000000005aec6: rcr byte ptr [rbx - 0x77], cl; rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x000000000004cfb5: rcr byte ptr [rbx - 9], 0xd8; pop rbp; pop r12; ret; 
0x000000000007a0f8: rcr byte ptr [rcx - 0x3f], 0x59; ret 0xc359; 
0x000000000007a900: rcr byte ptr [rdi - 0x3f], 0x5f; ret 0xc75f; 
0x000000000002e6de: rcr byte ptr [rdx + 0x59], 0x75; ret; 
0x0000000000044e83: rcr byte ptr [rdx + 0x5b], 0x5d; pop r12; pop r13; ret; 
0x000000000002213a: rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x00000000000263b4: rcr byte ptr [rdx + 0x5b], 1; pop rbp; pop r12; pop r13; ret; 
0x0000000000038d07: rcr byte ptr [rdx + 0x5b], 1; pop rbp; ret; 
0x000000000006d41b: rcr byte ptr [rdx + rdx*8 - 0x2d5b2d60], cl; lodsb al, byte ptr [rsi]; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x00000000000387fe: rcr byte ptr [rdx - 0x3d], 1; push rax; mov eax, 0x78; syscall; 
0x000000000007a7bc: rcr byte ptr [rsi - 0x3f], 0x5e; ret 0xc35e; 
0x0000000000022509: rcr cl, 0x37; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000002ab81: rcr cl, 0xe0; fcmove st(0), st(1); fstp st(1); add rsp, 0x50; pop rbx; ret; 
0x000000000003721b: rcr cl, 0xe8; js 0x37225; fscale; fstp st(1); ret; 
0x000000000008c377: rcr dl, 0x16; pop rbp; ret 0xec71; 
0x000000000002ff8f: rcr dword ptr [rax + 0x5b], 0x5d; ret; 
0x000000000007188c: rcr dword ptr [rax - 0x669566b7], 1; ret; 
0x00000000000832a8: rcr dword ptr [rax - 0x6726672b], cl; ficomp dword ptr [rax + 0x5f406bb3]; ret 0xf36b; 
0x000000000007a68a: rcr dword ptr [rbp - 0x3e], 0x5d; ret; 
0x000000000007a0fa: rcr dword ptr [rcx - 0x3e], 0x59; ret; 
0x0000000000021fb3: rcr dword ptr [rdi + 0x27], 0; cdqe; mov rbx, qword ptr [rdx + rax*8]; call 0x5468b; call rbx; 
0x0000000000056f36: rcr dword ptr [rdx + 0x5b], 0x5d; ret; 
0x000000000002c159: rcr dword ptr [rdx + 6], cl; add byte ptr [rdi], cl; push rdi; ret; 
0x000000000007a7be: rcr dword ptr [rsi - 0x3e], 0x5e; ret; 
0x0000000000060523: rcr dword ptr [rsi], cl; bnd jno 0x604b1; je 0x60535; sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x00000000000371f7: rcr ebx, 0x2c; and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000002ceea: rcr ebx, 0x2d; cmovb eax, dword ptr [rsi]; add al, bl; ret 0xcad8; 
0x0000000000034d36: rcr ebx, 0x2d; ret; 
0x000000000002cdc7: rcr ebx, 0x2d; xor al, byte ptr [rbx + 6]; add al, bl; ret 0xcad8; 
0x000000000002b862: rcr ebx, 0x6c; and al, 0xe8; fmulp st(1); ret; 
0x00000000000336a7: rcr ecx, 0xc9; fstp xword ptr [rdi]; fchs; add rsp, 0x20; pop rbx; ret; 
0x0000000000037153: rcr ecx, 0xe1; fucomip st(1); fstp st(0); ja 0x3715f; f2xm1; ret; 
0x00000000000372c1: rcr ecx, 0xf0; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x0000000000037874: rcr ecx, 0xf1; ret; 
0x00000000000371c9: rcr ecx, 0xfd; fstp st(1); add rsp, 0x10; ret; 
0x0000000000032dad: rdtsc; ror byte ptr [rdi], 0x57; shr bl, 0x6d; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x0000000000054170: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x000000000003f7bd: rep movsd dword ptr [rdi], dword ptr [rsi]; add rsp, 0x40; pop rbx; ret; 
0x0000000000024a7d: rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000043653: rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000566c2: rep stosd dword ptr [rdi], eax; je 0x566ca; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000021f09: rep stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x10]; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000001e1f9: rep stosd dword ptr [rdi], eax; mov byte ptr [rsp], 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000054ca1: rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000054941: rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000004b38e: rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004f1ef: rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x000000000004f0dc: rep stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x000000000004b3b1: rep stosd dword ptr [rdi], eax; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x0000000000043674: rep stosd dword ptr [rdi], eax; ret; 
0x000000000005421f: rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000049982: repne cmpsd dword ptr [rsi], dword ptr [rdi]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000001554: ret 0; 
0x000000000001b1c9: ret 0x1074; 
0x000000000002587f: ret 0x1075; 
0x000000000008d5db: ret 0x1203; 
0x00000000000703da: ret 0x125f; 
0x000000000008c374: ret 0x1270; 
0x00000000000233bd: ret 0x1275; 
0x00000000000488d6: ret 0x127e; 
0x0000000000091684: ret 0x1291; 
0x000000000005ff98: ret 0x12b4; 
0x0000000000045e51: ret 0x12e8; 
0x00000000000547c1: ret 0x12eb; 
0x0000000000038b8c: ret 0x137; 
0x0000000000058d06: ret 0x137d; 
0x00000000000381d8: ret 0x1389; 
0x000000000000f980: ret 0x13; 
0x000000000001f2c5: ret 0x141; 
0x000000000001f414: ret 0x144; 
0x0000000000076f1a: ret 0x1455; 
0x00000000000751a0: ret 0x1456; 
0x0000000000040cc1: ret 0x1474; 
0x000000000001d425: ret 0x1489; 
0x00000000000214b3: ret 0x148; 
0x0000000000007a78: ret 0x14; 
0x000000000003dc85: ret 0x14c; 
0x00000000000271b3: ret 0x1588; 
0x0000000000058049: ret 0x16d; 
0x000000000003a7a9: ret 0x16e8; 
0x0000000000015381: ret 0x16e9; 
0x0000000000036bc4: ret 0x16eb; 
0x000000000002750d: ret 0x173; 
0x000000000005592f: ret 0x1774; 
0x0000000000038589: ret 0x178b; 
0x00000000000252b9: ret 0x17c; 
0x0000000000039eee: ret 0x17e9; 
0x000000000001df2d: ret 0x184; 
0x0000000000017b87: ret 0x1874; 
0x000000000002af0a: ret 0x1877; 
0x0000000000090f26: ret 0x188; 
0x00000000000605f9: ret 0x1948; 
0x000000000001da14: ret 0x198; 
0x000000000002bd13: ret 0x19; 
0x000000000002a90e: ret 0x19e8; 
0x0000000000040026: ret 0x1a75; 
0x0000000000031943: ret 0x1a7a; 
0x0000000000071c86: ret 0x1a7c; 
0x000000000003a7ff: ret 0x1b79; 
0x000000000002ac55: ret 0x1b8; 
0x0000000000060232: ret 0x1bab; 
0x0000000000004d0d: ret 0x1bb7; 
0x000000000004cfa2: ret 0x1be; 
0x0000000000009e50: ret 0x1bf; 
0x00000000000370d5: ret 0x1c74; 
0x000000000003f207: ret 0x1c75; 
0x000000000001d37c: ret 0x1c8b; 
0x000000000001762e: ret 0x1d74; 
0x000000000003c613: ret 0x1d77; 
0x00000000000049d1: ret 0x1dd4; 
0x00000000000517b6: ret 0x1de8; 
0x000000000006f648: ret 0x1e8a; 
0x0000000000034261: ret 0x1f0; 
0x000000000009275e: ret 0x1f3f; 
0x0000000000042720: ret 0x1f8b; 
0x000000000001492a: ret 0x1f; 
0x00000000000401e7: ret 0x2004; 
0x0000000000051b4f: ret 0x2041; 
0x000000000005b4ed: ret 0x2078; 
0x0000000000007348: ret 0x20d; 
0x0000000000003360: ret 0x20e2; 
0x000000000001fbcd: ret 0x2144; 
0x000000000001d6ec: ret 0x2148; 
0x0000000000020437: ret 0x214c; 
0x00000000000909e1: ret 0x2168; 
0x0000000000048620: ret 0x217e; 
0x0000000000062729: ret 0x21c0; 
0x0000000000091901: ret 0x2246; 
0x000000000002de86: ret 0x2276; 
0x0000000000035216: ret 0x227d; 
0x000000000000a6a0: ret 0x22; 
0x00000000000031fb: ret 0x230; 
0x00000000000700c6: ret 0x2353; 
0x0000000000056595: ret 0x2374; 
0x000000000003505a: ret 0x237d; 
0x0000000000058cf4: ret 0x23; 
0x000000000004275a: ret 0x252c; 
0x00000000000344a9: ret 0x25; 
0x0000000000038702: ret 0x25c8; 
0x00000000000322cc: ret 0x25d8; 
0x000000000008b086: ret 0x2600; 
0x0000000000059981: ret 0x26eb; 
0x0000000000026c1a: ret 0x26ee; 
0x0000000000020bba: ret 0x2749; 
0x0000000000008b10: ret 0x27; 
0x000000000001a889: ret 0x27d4; 
0x0000000000014672: ret 0x2809; 
0x000000000003385f: ret 0x280f; 
0x000000000008d72e: ret 0x283f; 
0x000000000008db3a: ret 0x284; 
0x000000000002e41f: ret 0x2874; 
0x0000000000005f03: ret 0x2884; 
0x0000000000091ab1: ret 0x28f5; 
0x000000000003114d: ret 0x290f; 
0x00000000000046ac: ret 0x2912; 
0x0000000000035245: ret 0x2941; 
0x00000000000375b1: ret 0x2944; 
0x0000000000016d2f: ret 0x2948; 
0x000000000003508a: ret 0x2949; 
0x000000000006e560: ret 0x2962; 
0x0000000000021ca4: ret 0x2974; 
0x000000000003767d: ret 0x29eb; 
0x000000000005fa57: ret 0x2a5; 
0x000000000000f308: ret 0x2a; 
0x000000000003b4e0: ret 0x2abf; 
0x000000000002b228: ret 0x2b8; 
0x000000000003b3de: ret 0x2bbf; 
0x000000000001b5c2: ret 0x2be; 
0x000000000008a7d6: ret 0x2c00; 
0x000000000005ce95: ret 0x2c75; 
0x0000000000091ff8: ret 0x2cc1; 
0x00000000000550c3: ret 0x2d; 
0x000000000001dde8: ret 0x2e0f; 
0x0000000000071f7a: ret 0x2e3b; 
0x0000000000036a83: ret 0x2e8; 
0x00000000000896fc: ret 0x2ed4; 
0x000000000008a173: ret 0x2f4a; 
0x000000000002435b: ret 0x2fd; 
0x0000000000029f2f: ret 0x3074; 
0x0000000000042db8: ret 0x30eb; 
0x000000000001fbc8: ret 0x310a; 
0x000000000002677d: ret 0x3145; 
0x000000000008627a: ret 0x315b; 
0x000000000000f6b0: ret 0x32; 
0x00000000000046d4: ret 0x33b1; 
0x0000000000019a78: ret 0x33e9; 
0x000000000001f36a: ret 0x342; 
0x000000000005fafe: ret 0x3437; 
0x00000000000601b2: ret 0x3453; 
0x000000000001f428: ret 0x346; 
0x000000000003ea25: ret 0x348; 
0x000000000000fbc0: ret 0x34; 
0x00000000000274d9: ret 0x3573; 
0x0000000000052b80: ret 0x3576; 
0x000000000004068a: ret 0x35e8; 
0x000000000005defd: ret 0x361; 
0x00000000000720b4: ret 0x37; 
0x0000000000029375: ret 0x3872; 
0x000000000000e588: ret 0x38; 
0x0000000000049093: ret 0x3910; 
0x00000000000350fa: ret 0x3941; 
0x000000000001d6de: ret 0x3948; 
0x0000000000023fbd: ret 0x3949; 
0x000000000001983b: ret 0x394c; 
0x0000000000062311: ret 0x3956; 
0x000000000001d90b: ret 0x3979; 
0x000000000003388e: ret 0x39c3; 
0x0000000000058581: ret 0x39e8; 
0x000000000001eeb4: ret 0x3a41; 
0x000000000001eefd: ret 0x3a44; 
0x0000000000062656: ret 0x3b81; 
0x000000000003d59f: ret 0x3b8; 
0x000000000008b194: ret 0x3c25; 
0x000000000006d71e: ret 0x3c75; 
0x000000000008f026: ret 0x3c; 
0x000000000002a475: ret 0x3ce9; 
0x00000000000574bc: ret 0x3d18; 
0x0000000000075cda: ret 0x3d52; 
0x00000000000173a0: ret 0x3d73; 
0x000000000004b566: ret 0x3d77; 
0x0000000000043958: ret 0x3dbf; 
0x000000000006dfee: ret 0x3e6f; 
0x000000000005b5eb: ret 0x3e8; 
0x00000000000913ef: ret 0x3e9a; 
0x0000000000092712: ret 0x3ee8; 
0x000000000007e6e0: ret 0x3f57; 
0x0000000000026370: ret 0x3f75; 
0x000000000008e1dd: ret 0x3fcb; 
0x000000000008f19d: ret 0x3fd3; 
0x000000000003cddc: ret 0x3fe8; 
0x000000000008caa5: ret 0x3fe9; 
0x0000000000090eb7: ret 0x400c; 
0x000000000005daf4: ret 0x4010; 
0x0000000000092295: ret 0x4031; 
0x000000000003bce8: ret 0x405; 
0x0000000000031867: ret 0x40e9; 
0x0000000000018647: ret 0x4101; 
0x0000000000039eca: ret 0x4102; 
0x000000000001f363: ret 0x410e; 
0x000000000001f4e3: ret 0x410f; 
0x0000000000019b73: ret 0x4110; 
0x00000000000507c5: ret 0x4130; 
0x000000000003aed2: ret 0x4180; 
0x000000000005211d: ret 0x41b; 
0x0000000000024070: ret 0x41c3; 
0x0000000000005c2f: ret 0x41de; 
0x0000000000029423: ret 0x42f2; 
0x000000000002406d: ret 0x430f; 
0x000000000005fb96: ret 0x4324; 
0x0000000000002e5e: ret 0x432; 
0x000000000002dfd7: ret 0x440f; 
0x0000000000055e0c: ret 0x4473; 
0x000000000001ef62: ret 0x4488; 
0x000000000001cd5f: ret 0x4489; 
0x0000000000014fcf: ret 0x448b; 
0x0000000000041abc: ret 0x448d; 
0x0000000000037142: ret 0x44d9; 
0x000000000004452f: ret 0x44e9; 
0x000000000001762a: ret 0x4501; 
0x000000000003873e: ret 0x4502; 
0x000000000005b8f9: ret 0x4504; 
0x000000000001d6a1: ret 0x450f; 
0x00000000000402dc: ret 0x4589; 
0x00000000000225fd: ret 0x45bf; 
0x000000000007f068: ret 0x4672; 
0x00000000000894e3: ret 0x470d; 
0x000000000006ee4a: ret 0x478f; 
0x000000000002183f: ret 0x4800; 
0x000000000001740a: ret 0x4801; 
0x000000000002624a: ret 0x4802; 
0x000000000001e7c1: ret 0x4804; 
0x000000000001afd7: ret 0x4808; 
0x0000000000020430: ret 0x4819; 
0x000000000004f60c: ret 0x4830; 
0x0000000000022341: ret 0x4840; 
0x000000000002e9c2: ret 0x4853; 
0x000000000001c014: ret 0x4866; 
0x00000000000052b4: ret 0x489d; 
0x000000000002698d: ret 0x48c3; 
0x0000000000014da2: ret 0x48d; 
0x000000000001d364: ret 0x48e8; 
0x000000000003764c: ret 0x48f2; 
0x00000000000201e2: ret 0x4903; 
0x0000000000025635: ret 0x4904; 
0x0000000000042a51: ret 0x4908; 
0x00000000000267ba: ret 0x4910; 
0x000000000001f37d: ret 0x4914; 
0x0000000000071506: ret 0x491b; 
0x000000000008aa89: ret 0x49; 
0x0000000000092150: ret 0x49d6; 
0x0000000000076180: ret 0x4a65; 
0x00000000000343a9: ret 0x4ae9; 
0x00000000000429d1: ret 0x4b08; 
0x000000000000f5c8: ret 0x4be; 
0x000000000003a095: ret 0x4c08; 
0x0000000000048295: ret 0x4c10; 
0x000000000005830e: ret 0x4c6; 
0x0000000000046428: ret 0x4c7; 
0x0000000000014edc: ret 0x4c89; 
0x0000000000054be8: ret 0x4cc3; 
0x000000000001f2df: ret 0x4d10; 
0x0000000000020423: ret 0x4d1e; 
0x0000000000045f2b: ret 0x4d3a; 
0x000000000008ab1d: ret 0x4d; 
0x000000000003195a: ret 0x4de9; 
0x0000000000089880: ret 0x4e90; 
0x0000000000035bf2: ret 0x4eb; 
0x0000000000026d07: ret 0x4f10; 
0x00000000000045ba: ret 0x4f7a; 
0x0000000000071172: ret 0x5016; 
0x000000000006ee38: ret 0x5076; 
0x0000000000078cee: ret 0x5098; 
0x0000000000022253: ret 0x50f; 
0x000000000006039f: ret 0x5167; 
0x00000000000623ab: ret 0x51a3; 
0x0000000000004fea: ret 0x5241; 
0x0000000000078a7e: ret 0x528e; 
0x000000000006d91c: ret 0x534f; 
0x00000000000296e4: ret 0x5355; 
0x00000000000280dc: ret 0x5389; 
0x0000000000022766: ret 0x53c3; 
0x0000000000046378: ret 0x5488; 
0x000000000002b94e: ret 0x5489; 
0x000000000004d7c1: ret 0x548d; 
0x00000000000714ca: ret 0x5497; 
0x000000000005374c: ret 0x5541; 
0x000000000003d3c2: ret 0x566; 
0x00000000000601b6: ret 0x56c2; 
0x0000000000028f4e: ret 0x570f; 
0x0000000000043a97: ret 0x574; 
0x00000000000240f0: ret 0x57e8; 
0x0000000000054785: ret 0x5841; 
0x000000000006f1d6: ret 0x585b; 
0x000000000009265e: ret 0x593f; 
0x0000000000005585: ret 0x5a51; 
0x000000000003ffe6: ret 0x5a78; 
0x000000000000f3e8: ret 0x5b2; 
0x0000000000035f62: ret 0x5bc; 
0x0000000000038dff: ret 0x5bd; 
0x000000000002fc5a: ret 0x5c8; 
0x000000000005f800: ret 0x5c9e; 
0x0000000000031039: ret 0x5d5b; 
0x000000000003220c: ret 0x5d8; 
0x000000000005c2ad: ret 0x5e9; 
0x000000000005b54f: ret 0x5eb; 
0x000000000002a3c9: ret 0x5ee9; 
0x000000000007feb0: ret 0x5f5a; 
0x000000000003287e: ret 0x5f62; 
0x0000000000031a16: ret 0x611; 
0x0000000000060617: ret 0x6132; 
0x0000000000004d7d: ret 0x617e; 
0x000000000008e31b: ret 0x618b; 
0x0000000000054625: ret 0x6274; 
0x00000000000212ef: ret 0x6348; 
0x00000000000233d1: ret 0x6349; 
0x000000000003c441: ret 0x634c; 
0x000000000008c1be: ret 0x6440; 
0x0000000000059c5a: ret 0x64be; 
0x000000000008d0c6: ret 0x653f; 
0x0000000000060275: ret 0x6549; 
0x000000000003f140: ret 0x6578; 
0x000000000001db68: ret 0x6653; 
0x0000000000087bca: ret 0x666f; 
0x000000000008c726: ret 0x66bf; 
0x0000000000017a73: ret 0x66c3; 
0x00000000000274ff: ret 0x673; 
0x000000000004dd06: ret 0x677; 
0x00000000000573ee: ret 0x689; 
0x000000000001d1d6: ret 0x68eb; 
0x000000000003686e: ret 0x69e9; 
0x000000000002a2b5: ret 0x6aeb; 
0x0000000000079144: ret 0x6b91; 
0x00000000000185a1: ret 0x6c73; 
0x000000000002a505: ret 0x6cdb; 
0x00000000000314bb: ret 0x6ce8; 
0x0000000000030c0a: ret 0x6deb; 
0x0000000000082d54: ret 0x6e68; 
0x000000000005b251: ret 0x6ee8; 
0x000000000008d10b: ret 0x6fee; 
0x00000000000919e1: ret 0x705f; 
0x0000000000023016: ret 0x707; 
0x0000000000060432: ret 0x70ae; 
0x000000000008615a: ret 0x7153; 
0x000000000008f1db: ret 0x718d; 
0x000000000000454c: ret 0x7358; 
0x0000000000022747: ret 0x7402; 
0x0000000000037ca6: ret 0x7404; 
0x0000000000056917: ret 0x7408; 
0x0000000000037c57: ret 0x7410; 
0x00000000000890f0: ret 0x7475; 
0x0000000000056989: ret 0x7480; 
0x000000000003b8a4: ret 0x74c0; 
0x000000000003efd9: ret 0x74df; 
0x0000000000031270: ret 0x75e9; 
0x0000000000004c17: ret 0x75f0; 
0x000000000005b649: ret 0x76e8; 
0x000000000005a6b9: ret 0x772; 
0x000000000002d637: ret 0x776; 
0x00000000000387f3: ret 0x778; 
0x000000000008dbba: ret 0x7796; 
0x00000000000545fa: ret 0x779; 
0x0000000000043c93: ret 0x77e9; 
0x0000000000091fe3: ret 0x77ef; 
0x0000000000017050: ret 0x788; 
0x00000000000378f8: ret 0x789; 
0x000000000001d47a: ret 0x78e8; 
0x00000000000053b8: ret 0x793b; 
0x00000000000603b8: ret 0x7a90; 
0x0000000000031926: ret 0x7ae8; 
0x000000000008a96e: ret 0x7b00; 
0x000000000008d38a: ret 0x7b8f; 
0x000000000004657d: ret 0x7c83; 
0x000000000001bb4f: ret 0x7cdb; 
0x000000000002c791: ret 0x7e9; 
0x0000000000046930: ret 0x7eb; 
0x00000000000500cc: ret 0x7ee8; 
0x000000000007db74: ret 0x7f81; 
0x0000000000039e81: ret 0x8041; 
0x000000000004f145: ret 0x80; 
0x000000000008cdf8: ret 0x80ba; 
0x0000000000025873: ret 0x8141; 
0x0000000000037d95: ret 0x8148; 
0x000000000005fc26: ret 0x819; 
0x000000000002c34f: ret 0x81c3; 
0x0000000000035f9a: ret 0x81e9; 
0x000000000003b791: ret 0x820f; 
0x00000000000924a1: ret 0x82c8; 
0x0000000000014c2e: ret 0x8341; 
0x0000000000015952: ret 0x8348; 
0x0000000000020ba7: ret 0x8349; 
0x00000000000050ba: ret 0x8376; 
0x000000000003addc: ret 0x8380; 
0x000000000008a8d9: ret 0x83; 
0x0000000000025c85: ret 0x83c3; 
0x0000000000044a02: ret 0x83e8; 
0x0000000000014c37: ret 0x840f; 
0x0000000000043ea0: ret 0x8440; 
0x0000000000003212: ret 0x8488; 
0x0000000000018a2a: ret 0x8501; 
0x0000000000018e79: ret 0x8504; 
0x0000000000017647: ret 0x850f; 
0x000000000003cf1a: ret 0x8530; 
0x0000000000016bb2: ret 0x8545; 
0x00000000000168c1: ret 0x8548; 
0x000000000005658d: ret 0x854d; 
0x000000000006239a: ret 0x8581; 
0x0000000000036536: ret 0x85e9; 
0x0000000000080dec: ret 0x8676; 
0x000000000004fccd: ret 0x872; 
0x000000000002b0b7: ret 0x877; 
0x0000000000005764: ret 0x878e; 
0x000000000004f9e4: ret 0x87e; 
0x000000000004f93c: ret 0x882b; 
0x000000000006e890: ret 0x885a; 
0x0000000000025839: ret 0x8880; 
0x0000000000056b6f: ret 0x88; 
0x0000000000005004: ret 0x88ad; 
0x0000000000017262: ret 0x8901; 
0x00000000000386b4: ret 0x8902; 
0x000000000004fc4b: ret 0x8904; 
0x0000000000059ee6: ret 0x890c; 
0x0000000000042633: ret 0x893f; 
0x000000000001e2e6: ret 0x8941; 
0x000000000001fb75: ret 0x8944; 
0x0000000000017564: ret 0x8948; 
0x000000000002045c: ret 0x8949; 
0x0000000000017b30: ret 0x894c; 
0x0000000000055139: ret 0x894d; 
0x000000000005a10b: ret 0x8964; 
0x00000000000423ee: ret 0x8966; 
0x00000000000659fd: ret 0x89; 
0x00000000000600f4: ret 0x89bd; 
0x00000000000582a9: ret 0x8a44; 
0x0000000000035f91: ret 0x8ae9; 
0x0000000000052a9e: ret 0x8b04; 
0x0000000000021153: ret 0x8b41; 
0x00000000000185c8: ret 0x8b48; 
0x00000000000381b0: ret 0x8b49; 
0x00000000000481c3: ret 0x8b4c; 
0x000000000007f1be: ret 0x8b64; 
0x0000000000044b4d: ret 0x8bc3; 
0x00000000000921c4: ret 0x8bed; 
0x000000000008e77e: ret 0x8bf; 
0x00000000000507f1: ret 0x8c0f; 
0x000000000003ac05: ret 0x8ceb; 
0x000000000005b845: ret 0x8d02; 
0x00000000000375c9: ret 0x8d0f; 
0x000000000001f35d: ret 0x8d45; 
0x000000000001849c: ret 0x8d48; 
0x0000000000058760: ret 0x8d49; 
0x00000000000146f7: ret 0x8d4c; 
0x0000000000017e8b: ret 0x8d4e; 
0x000000000008a908: ret 0x8d61; 
0x0000000000085afc: ret 0x8d73; 
0x000000000001c464: ret 0x8ee8; 
0x000000000007e494: ret 0x9062; 
0x0000000000074170: ret 0x906e; 
0x000000000003e68a: ret 0x91e8; 
0x00000000000701c8: ret 0x9239; 
0x000000000003f888: ret 0x93e8; 
0x000000000008df0c: ret 0x93ff; 
0x0000000000015086: ret 0x940f; 
0x000000000001fbd0: ret 0x944; 
0x0000000000047956: ret 0x9489; 
0x000000000001ddbb: ret 0x948; 
0x000000000007dc92: ret 0x9494; 
0x000000000002043a: ret 0x94c; 
0x000000000002a369: ret 0x94e8; 
0x0000000000005868: ret 0x9504; 
0x000000000007dcd6: ret 0x9553; 
0x00000000000912f3: ret 0x9565; 
0x0000000000072ea4: ret 0x9672; 
0x000000000008d8c0: ret 0x9725; 
0x0000000000005e58: ret 0x975; 
0x0000000000043ffa: ret 0x97e8; 
0x000000000003b02a: ret 0x980; 
0x0000000000037614: ret 0x98e9; 
0x000000000001d6ac: ret 0x9b0f; 
0x000000000008beb9: ret 0x9c5c; 
0x000000000009132f: ret 0x9d9b; 
0x000000000000598e: ret 0x9dba; 
0x0000000000092dfc: ret 0x9dff; 
0x000000000002c209: ret 0x9e9; 
0x0000000000005932: ret 0x9ec0; 
0x0000000000082742: ret 0x9f6e; 
0x000000000006e216: ret 0x9f84; 
0x00000000000575ed: ret 0xa08; 
0x0000000000032c4a: ret 0xa09e; 
0x000000000008d603: ret 0xa11c; 
0x000000000008ee5e: ret 0xa13f; 
0x000000000007eb9c: ret 0xa15b; 
0x000000000007e754: ret 0xa189; 
0x000000000001c76a: ret 0xa1e9; 
0x000000000008fbb3: ret 0xa2dd; 
0x0000000000089cd1: ret 0xa318; 
0x00000000000776fc: ret 0xa37d; 
0x000000000008d61a: ret 0xa3c4; 
0x00000000000872da: ret 0xa454; 
0x0000000000075c78: ret 0xa482; 
0x000000000005b61b: ret 0xa4e8; 
0x00000000000927bb: ret 0xa5d7; 
0x000000000004c7d7: ret 0xa73; 
0x0000000000031962: ret 0xa76; 
0x000000000004fa03: ret 0xa7d; 
0x000000000007e286: ret 0xa861; 
0x0000000000062600: ret 0xa88f; 
0x00000000000604f3: ret 0xa8d1; 
0x000000000005b117: ret 0xa8e8; 
0x0000000000025066: ret 0xa; 
0x0000000000077754: ret 0xac84; 
0x000000000002e129: ret 0xacdb; 
0x0000000000074e88: ret 0xae6a; 
0x000000000003102b: ret 0xae8; 
0x000000000008ab12: ret 0xaf00; 
0x0000000000076ed2: ret 0xb050; 
0x0000000000050e3c: ret 0xb108; 
0x0000000000074a86: ret 0xb16f; 
0x0000000000073f6e: ret 0xb188; 
0x000000000008e02a: ret 0xb19b; 
0x0000000000070140: ret 0xb22c; 
0x00000000000740be: ret 0xb25a; 
0x000000000002ebf4: ret 0xb2e9; 
0x0000000000087d7e: ret 0xb375; 
0x00000000000045b4: ret 0xb383; 
0x0000000000078732: ret 0xb385; 
0x0000000000081fac: ret 0xb454; 
0x00000000000775b8: ret 0xb569; 
0x0000000000017bb2: ret 0xb60f; 
0x000000000001d189: ret 0xb6e9; 
0x00000000000183a0: ret 0xb73; 
0x000000000004b8ee: ret 0xb75; 
0x000000000008c910: ret 0xb7e4; 
0x000000000001dbca: ret 0xb848; 
0x0000000000087a38: ret 0xb86a; 
0x0000000000073746: ret 0xb875; 
0x000000000007522e: ret 0xb89d; 
0x000000000005b21f: ret 0xb8; 
0x000000000002e5ba: ret 0xb948; 
0x000000000007307c: ret 0xb962; 
0x0000000000075e4e: ret 0xb967; 
0x00000000000768e6: ret 0xb98d; 
0x0000000000078b12: ret 0xb9a; 
0x0000000000075bac: ret 0xba6c; 
0x000000000009229a: ret 0xba70; 
0x00000000000786ce: ret 0xba77; 
0x00000000000881c2: ret 0xba81; 
0x0000000000027e0a: ret 0xba; 
0x000000000008cfae: ret 0xbabf; 
0x0000000000087374: ret 0xbc56; 
0x0000000000077e2c: ret 0xbc58; 
0x0000000000025574: ret 0xbc; 
0x00000000000049f0: ret 0xbd07; 
0x000000000007327a: ret 0xbd54; 
0x000000000008748c: ret 0xbd5a; 
0x00000000000778d8: ret 0xbd99; 
0x0000000000062677: ret 0xbe30; 
0x0000000000085e76: ret 0xbe4f; 
0x00000000000885bc: ret 0xbe8d; 
0x000000000001d2ee: ret 0xbee8; 
0x0000000000073972: ret 0xbf5b; 
0x0000000000077f5a: ret 0xbf71; 
0x00000000000748fc: ret 0xbf8a; 
0x000000000008c8ee: ret 0xbf; 
0x000000000008d3ce: ret 0xbfbf; 
0x000000000008e59d: ret 0xbfcb; 
0x000000000001ef9b: ret 0xc031; 
0x0000000000057feb: ret 0xc069; 
0x000000000005fddc: ret 0xc06; 
0x000000000007635c: ret 0xc07f; 
0x0000000000074d6a: ret 0xc081; 
0x0000000000025831: ret 0xc083; 
0x000000000002dfc7: ret 0xc084; 
0x00000000000190d3: ret 0xc085; 
0x00000000000602a9: ret 0xc089; 
0x000000000002e3f4: ret 0xc0d9; 
0x000000000003b7db: ret 0xc102; 
0x000000000002548c: ret 0xc141; 
0x000000000001f636: ret 0xc148; 
0x0000000000028202: ret 0xc166; 
0x000000000007687a: ret 0xc186; 
0x0000000000018430: ret 0xc189; 
0x00000000000032a2: ret 0xc1a0; 
0x000000000001614e: ret 0xc1de; 
0x000000000006cd53: ret 0xc204; 
0x000000000006cd55: ret 0xc20c; 
0x000000000006cd57: ret 0xc20d; 
0x000000000006cd59: ret 0xc20f; 
0x000000000006cd5b: ret 0xc211; 
0x000000000006cd5d: ret 0xc218; 
0x000000000006cd5f: ret 0xc219; 
0x000000000006cd61: ret 0xc21c; 
0x000000000006cd63: ret 0xc21f; 
0x000000000006cd65: ret 0xc220; 
0x000000000006cd67: ret 0xc228; 
0x000000000006cd69: ret 0xc229; 
0x000000000006cd6b: ret 0xc22b; 
0x000000000006cd6d: ret 0xc22d; 
0x000000000006cd6f: ret 0xc22f; 
0x000000000006cd71: ret 0xc231; 
0x000000000006cd73: ret 0xc232; 
0x000000000006cd75: ret 0xc234; 
0x000000000006cd77: ret 0xc248; 
0x000000000006cd79: ret 0xc250; 
0x000000000006cd7b: ret 0xc251; 
0x000000000006cd7d: ret 0xc254; 
0x000000000006cd7f: ret 0xc258; 
0x000000000006cd81: ret 0xc260; 
0x000000000006cd83: ret 0xc265; 
0x000000000006cd85: ret 0xc26c; 
0x000000000006cd87: ret 0xc26d; 
0x000000000006cd89: ret 0xc270; 
0x000000000006d71c: ret 0xc273; 
0x000000000006cd8b: ret 0xc274; 
0x000000000006cd8d: ret 0xc27c; 
0x000000000006cd8f: ret 0xc27d; 
0x000000000006cd91: ret 0xc27f; 
0x0000000000032dcf: ret 0xc281; 
0x0000000000057cee: ret 0xc283; 
0x000000000006cd95: ret 0xc288; 
0x000000000006cd97: ret 0xc289; 
0x000000000006cd99: ret 0xc290; 
0x000000000006cd9b: ret 0xc298; 
0x000000000006cd9d: ret 0xc29b; 
0x000000000006cd9f: ret 0xc29d; 
0x000000000006cda1: ret 0xc2a4; 
0x000000000006cda3: ret 0xc2a5; 
0x000000000006cda5: ret 0xc2a8; 
0x000000000006cda7: ret 0xc2ac; 
0x000000000006cda9: ret 0xc2ad; 
0x000000000006cdab: ret 0xc2b4; 
0x000000000006cdad: ret 0xc2b5; 
0x000000000006cdaf: ret 0xc2b7; 
0x000000000006cdb1: ret 0xc2b9; 
0x000000000001fbc6: ret 0xc2c1; 
0x000000000001bb43: ret 0xc2d8; 
0x0000000000036243: ret 0xc2d9; 
0x000000000006cdb3: ret 0xc2dc; 
0x000000000006cdb5: ret 0xc2dd; 
0x000000000006cdb7: ret 0xc2e0; 
0x000000000006cdb9: ret 0xc2e3; 
0x000000000006cdbb: ret 0xc2e4; 
0x000000000001deea: ret 0xc2e8; 
0x000000000006cdbd: ret 0xc2eb; 
0x000000000006cdbf: ret 0xc2ec; 
0x000000000006cdc1: ret 0xc2ed; 
0x000000000006cdc3: ret 0xc2ef; 
0x000000000006cdc5: ret 0xc2f1; 
0x000000000006cdc7: ret 0xc2f6; 
0x000000000006cdc9: ret 0xc2f8; 
0x000000000006cdcb: ret 0xc2f9; 
0x000000000006cdcd: ret 0xc2fb; 
0x000000000006cdcf: ret 0xc2fc; 
0x000000000002866d: ret 0xc2ff; 
0x000000000006cdd1: ret 0xc300; 
0x0000000000088d68: ret 0xc303; 
0x0000000000088e60: ret 0xc305; 
0x000000000006c07a: ret 0xc330; 
0x000000000006fe7e: ret 0xc331; 
0x0000000000079602: ret 0xc350; 
0x0000000000079758: ret 0xc351; 
0x0000000000079b9e: ret 0xc355; 
0x0000000000079cfe: ret 0xc356; 
0x0000000000079fb4: ret 0xc358; 
0x000000000007a0fc: ret 0xc359; 
0x0000000000057d64: ret 0xc35a; 
0x000000000001d87e: ret 0xc35b; 
0x000000000007a4ea: ret 0xc35c; 
0x000000000007a68c: ret 0xc35d; 
0x000000000007a7c0: ret 0xc35e; 
0x000000000007aa10: ret 0xc360; 
0x000000000007adba: ret 0xc363; 
0x000000000007b1c8: ret 0xc366; 
0x000000000007b5a8: ret 0xc369; 
0x000000000007b74e: ret 0xc36a; 
0x000000000007b9fe: ret 0xc36c; 
0x000000000007bb0a: ret 0xc36d; 
0x000000000007d4c2: ret 0xc374; 
0x000000000007dc42: ret 0xc377; 
0x000000000007defe: ret 0xc378; 
0x00000000000705f8: ret 0xc37a; 
0x000000000007e6da: ret 0xc37b; 
0x000000000007ea98: ret 0xc37c; 
0x000000000007edda: ret 0xc37d; 
0x00000000000657b3: ret 0xc37e; 
0x000000000007f290: ret 0xc37f; 
0x000000000007f9ba: ret 0xc382; 
0x000000000007fb70: ret 0xc383; 
0x000000000007fe42: ret 0xc384; 
0x000000000008013a: ret 0xc385; 
0x0000000000080434: ret 0xc386; 
0x00000000000806ee: ret 0xc387; 
0x000000000001ded5: ret 0xc389; 
0x000000000008102c: ret 0xc38a; 
0x00000000000817f2: ret 0xc38b; 
0x00000000000815c8: ret 0xc38c; 
0x0000000000081a90: ret 0xc38e; 
0x0000000000082004: ret 0xc390; 
0x000000000008220a: ret 0xc391; 
0x0000000000082626: ret 0xc392; 
0x0000000000082996: ret 0xc393; 
0x0000000000082e0c: ret 0xc395; 
0x00000000000830a0: ret 0xc396; 
0x000000000008338a: ret 0xc397; 
0x0000000000083694: ret 0xc398; 
0x0000000000083990: ret 0xc399; 
0x0000000000083fbc: ret 0xc39b; 
0x00000000000846da: ret 0xc39d; 
0x00000000000849b8: ret 0xc39e; 
0x000000000002621e: ret 0xc3a; 
0x00000000000327dd: ret 0xc3c3; 
0x000000000002b85a: ret 0xc3de; 
0x000000000007d3a0: ret 0xc3e0; 
0x000000000007d720: ret 0xc3e1; 
0x0000000000084640: ret 0xc3e2; 
0x0000000000084a80: ret 0xc3e3; 
0x0000000000084e00: ret 0xc3e4; 
0x000000000007c5f0: ret 0xc3e5; 
0x000000000007ca24: ret 0xc3e6; 
0x000000000007cd9a: ret 0xc3e7; 
0x0000000000092c71: ret 0xc3f1; 
0x000000000007987e: ret 0xc452; 
0x0000000000073d44: ret 0xc45e; 
0x000000000007c0e4: ret 0xc471; 
0x000000000007e1f6: ret 0xc479; 
0x0000000000083174: ret 0xc480; 
0x000000000002e21c: ret 0xc4d8; 
0x000000000007b2fe: ret 0xc567; 
0x000000000006e3a0: ret 0xc56e; 
0x0000000000074310: ret 0xc58c; 
0x00000000000817c6: ret 0xc58d; 
0x000000000001ed9e: ret 0xc5e9; 
0x00000000000794a2: ret 0xc64f; 
0x0000000000072ef4: ret 0xc68f; 
0x00000000000921f1: ret 0xc69a; 
0x0000000000038276: ret 0xc741; 
0x00000000000482cd: ret 0xc748; 
0x000000000007a904: ret 0xc75f; 
0x0000000000074c6a: ret 0xc761; 
0x0000000000087786: ret 0xc762; 
0x0000000000076ac4: ret 0xc763; 
0x000000000007b080: ret 0xc765; 
0x000000000002a259: ret 0xc7e9; 
0x00000000000875c0: ret 0xc85e; 
0x0000000000075ef8: ret 0xc873; 
0x00000000000273c2: ret 0xc875; 
0x00000000000389a3: ret 0xc883; 
0x000000000007f320: ret 0xc888; 
0x000000000001c8cb: ret 0xc889; 
0x0000000000076ea2: ret 0xc896; 
0x00000000000842d6: ret 0xc89c; 
0x000000000006d430: ret 0xc8d2; 
0x00000000000756f4: ret 0xc94e; 
0x0000000000082b32: ret 0xc97e; 
0x000000000006dfe6: ret 0xc988; 
0x0000000000029b0e: ret 0xc9d8; 
0x0000000000015d94: ret 0xc9d9; 
0x0000000000029ed3: ret 0xc9dc; 
0x000000000001bb45: ret 0xc9de; 
0x0000000000021fbc: ret 0xc9e8; 
0x000000000001561a: ret 0xca08; 
0x000000000001f352: ret 0xca21; 
0x000000000001f2b3: ret 0xca31; 
0x0000000000056488: ret 0xca75; 
0x00000000000556f2: ret 0xca81; 
0x0000000000016635: ret 0xca83; 
0x000000000002ca60: ret 0xcad8; 
0x0000000000015271: ret 0xcad9; 
0x0000000000057926: ret 0xcb75; 
0x00000000000434a9: ret 0xcb8; 
0x000000000008432e: ret 0xcb9a; 
0x0000000000036245: ret 0xcbd8; 
0x00000000000309f1: ret 0xcbeb; 
0x00000000000656f8: ret 0xcc5f; 
0x000000000007847a: ret 0xcc87; 
0x000000000002e20e: ret 0xccd8; 
0x000000000002eed2: ret 0xccd9; 
0x0000000000071552: ret 0xcd0a; 
0x0000000000074a48: ret 0xcd64; 
0x0000000000087e00: ret 0xcd76; 
0x000000000001fbb9: ret 0xcdc1; 
0x000000000007126a: ret 0xce5c; 
0x000000000006fafa: ret 0xce6c; 
0x00000000000766bc: ret 0xcf6d; 
0x0000000000026731: ret 0xcfeb; 
0x0000000000026028: ret 0xd021; 
0x0000000000018e55: ret 0xd029; 
0x0000000000075f9c: ret 0xd080; 
0x00000000000286af: ret 0xd083; 
0x0000000000020f6f: ret 0xd089; 
0x00000000000790de: ret 0xd09e; 
0x00000000000420f5: ret 0xd108; 
0x000000000004fcf8: ret 0xd121; 
0x0000000000082bb2: ret 0xd173; 
0x00000000000235e7: ret 0xd184; 
0x0000000000027602: ret 0xd189; 
0x000000000003f6ee: ret 0xd1e8; 
0x00000000000331fa: ret 0xd201; 
0x000000000003d292: ret 0xd231; 
0x000000000001baea: ret 0xd289; 
0x000000000001c620: ret 0xd2e8; 
0x000000000001b8ac: ret 0xd2e9; 
0x00000000000294e5: ret 0xd339; 
0x0000000000015070: ret 0xd341; 
0x00000000000536ef: ret 0xd348; 
0x000000000003749b: ret 0xd349; 
0x00000000000920d6: ret 0xd3f; 
0x00000000000735c0: ret 0xd457; 
0x0000000000049b98: ret 0xd4eb; 
0x000000000005f67f: ret 0xd539; 
0x0000000000087166: ret 0xd650; 
0x000000000006da3e: ret 0xd672; 
0x0000000000083912: ret 0xd675; 
0x000000000008a1b4: ret 0xd6cc; 
0x000000000001c3d6: ret 0xd6e8; 
0x00000000000870de: ret 0xd74e; 
0x00000000000233f7: ret 0xd75; 
0x000000000004e6c1: ret 0xd79; 
0x000000000003a97a: ret 0xd7c0; 
0x00000000000440ba: ret 0xd7e8; 
0x000000000008f790: ret 0xd7fe; 
0x000000000006ba20: ret 0xd833; 
0x000000000006de56: ret 0xd86a; 
0x0000000000087ff8: ret 0xd87c; 
0x000000000003105d: ret 0xd8e8; 
0x000000000005ae6e: ret 0xd8eb; 
0x0000000000092146: ret 0xd93f; 
0x0000000000057a3d: ret 0xd975; 
0x0000000000088a86: ret 0xd99d; 
0x00000000000428db: ret 0xd9eb; 
0x0000000000058034: ret 0xda09; 
0x0000000000073236: ret 0xda4f; 
0x00000000000884ec: ret 0xda8a; 
0x0000000000071c6a: ret 0xda8b; 
0x000000000006e06c: ret 0xda8c; 
0x0000000000078a9a: ret 0xda93; 
0x000000000005b0e5: ret 0xdae8; 
0x0000000000026af2: ret 0xdaf7; 
0x000000000003ac11: ret 0xdb31; 
0x00000000000508b9: ret 0xdb85; 
0x000000000001deec: ret 0xdb; 
0x0000000000056f5c: ret 0xdc75; 
0x00000000000582c5: ret 0xdceb; 
0x000000000002988d: ret 0xddc; 
0x000000000003c672: ret 0xddeb; 
0x0000000000092826: ret 0xde3f; 
0x00000000000368ca: ret 0xde9; 
0x0000000000078844: ret 0xdf5d; 
0x000000000001e192: ret 0xdfe9; 
0x000000000001e9ea: ret 0xe083; 
0x0000000000082838: ret 0xe16f; 
0x0000000000051ebb: ret 0xe183; 
0x000000000005c7fb: ret 0xe1c1; 
0x00000000000297df: ret 0xe1d8; 
0x000000000002cf3c: ret 0xe1de; 
0x0000000000014f11: ret 0xe281; 
0x000000000001588d: ret 0xe283; 
0x00000000000424ed: ret 0xe2c1; 
0x000000000003affc: ret 0xe2d3; 
0x0000000000031468: ret 0xe2ff; 
0x0000000000092c00: ret 0xe31c; 
0x0000000000054e13: ret 0xe375; 
0x000000000005a841: ret 0xe472; 
0x0000000000080de6: ret 0xe48f; 
0x000000000004a166: ret 0xe4eb; 
0x000000000007f188: ret 0xe570; 
0x0000000000042596: ret 0xe5eb; 
0x000000000005919a: ret 0xe6bf; 
0x0000000000017620: ret 0xe75; 
0x0000000000035082: ret 0xe775; 
0x000000000003b580: ret 0xe7e; 
0x000000000008a794: ret 0xe832; 
0x000000000008157a: ret 0xe84e; 
0x00000000000171e5: ret 0xe875; 
0x000000000001e884: ret 0xe883; 
0x000000000004fbaf: ret 0xe889; 
0x00000000000859f2: ret 0xe88f; 
0x0000000000077d38: ret 0xe892; 
0x000000000002d60a: ret 0xe8c1; 
0x000000000003a7d7: ret 0xe8e8; 
0x0000000000017477: ret 0xe901; 
0x0000000000057b81: ret 0xe975; 
0x000000000002d3f4: ret 0xe9; 
0x00000000000289c3: ret 0xe9c1; 
0x0000000000026a5a: ret 0xe9c3; 
0x000000000003f8b3: ret 0xe9eb; 
0x0000000000008eb8: ret 0xe; 
0x0000000000024eb0: ret 0xea81; 
0x0000000000017391: ret 0xeac0; 
0x000000000001ef6f: ret 0xeac1; 
0x0000000000014c71: ret 0xead3; 
0x000000000004f8cd: ret 0xeade; 
0x000000000003d24e: ret 0xeb02; 
0x000000000003ad7e: ret 0xeb04; 
0x000000000001b183: ret 0xeb08; 
0x00000000000494e9: ret 0xeb10; 
0x000000000005ef8b: ret 0xeb18; 
0x000000000005fd06: ret 0xeb1a; 
0x000000000003fd85: ret 0xeb1c; 
0x00000000000225d4: ret 0xebe8; 
0x000000000003e90a: ret 0xebeb; 
0x000000000008c37b: ret 0xec71; 
0x000000000002b92e: ret 0xec74; 
0x0000000000005314: ret 0xec90; 
0x000000000003cdb9: ret 0xeceb; 
0x000000000008b952: ret 0xed60; 
0x0000000000085dba: ret 0xed72; 
0x000000000002714c: ret 0xed75; 
0x0000000000035bc5: ret 0xede9; 
0x000000000001b116: ret 0xedeb; 
0x00000000000601b7: ret 0xee56; 
0x000000000002e81b: ret 0xee7f; 
0x00000000000343e5: ret 0xee9; 
0x000000000002e0e8: ret 0xeed9; 
0x00000000000458d6: ret 0xeeeb; 
0x000000000008bd0c: ret 0xef12; 
0x00000000000379d6: ret 0xef75; 
0x0000000000086ff6: ret 0xef8c; 
0x000000000005978f: ret 0xefeb; 
0x000000000008be8c: ret 0xeff3; 
0x000000000006edcc: ret 0xeff9; 
0x000000000002822a: ret 0xf000; 
0x000000000002676b: ret 0xf001; 
0x0000000000018a6a: ret 0xf01; 
0x000000000005697f: ret 0xf04; 
0x00000000000536e4: ret 0xf129; 
0x00000000000033e0: ret 0xf140; 
0x0000000000087808: ret 0xf164; 
0x0000000000052343: ret 0xf175; 
0x000000000002ca9c: ret 0xf1de; 
0x000000000001d163: ret 0xf209; 
0x000000000001f4ce: ret 0xf231; 
0x00000000000560b2: ret 0xf24; 
0x000000000007317c: ret 0xf276; 
0x0000000000092d98: ret 0xf280; 
0x000000000006e5ae: ret 0xf281; 
0x0000000000015449: ret 0xf283; 
0x0000000000029a77: ret 0xf2c3; 
0x000000000006e6bc: ret 0xf35e; 
0x00000000000832b4: ret 0xf36b; 
0x0000000000076d5e: ret 0xf383; 
0x000000000000554e: ret 0xf3ba; 
0x000000000002e52d: ret 0xf3c3; 
0x0000000000020e2c: ret 0xf40; 
0x0000000000025180: ret 0xf44; 
0x0000000000058075: ret 0xf45; 
0x000000000005a9b1: ret 0xf474; 
0x00000000000274a4: ret 0xf48; 
0x00000000000248bf: ret 0xf4c; 
0x000000000004d590: ret 0xf631; 
0x0000000000018b6a: ret 0xf66; 
0x0000000000017ae6: ret 0xf748; 
0x0000000000054cf3: ret 0xf74; 
0x0000000000043929: ret 0xf7bf; 
0x000000000002dc9d: ret 0xf80; 
0x0000000000051ec7: ret 0xf883; 
0x00000000000719ec: ret 0xf94f; 
0x000000000002bd73: ret 0xf981; 
0x0000000000014af2: ret 0xf989; 
0x00000000000913b3: ret 0xf9b2; 
0x000000000001aa37: ret 0xf9c1; 
0x000000000003bce1: ret 0xfab8; 
0x0000000000036255: ret 0xfad8; 
0x0000000000032dd1: ret 0xfb0d; 
0x0000000000031335: ret 0xfbb4; 
0x000000000009335c: ret 0xfbf4; 
0x000000000001918a: ret 0xfc3; 
0x00000000000933bc: ret 0xfc68; 
0x0000000000091244: ret 0xfd12; 
0x00000000000418ba: ret 0xfd2d; 
0x0000000000041a9a: ret 0xfd5f; 
0x0000000000049227: ret 0xfd7b; 
0x0000000000045c97: ret 0xfdb3; 
0x000000000003a5fa: ret 0xfdc3; 
0x000000000008d9c1: ret 0xfe20; 
0x00000000000327f9: ret 0xfe81; 
0x00000000000580ab: ret 0xff02; 
0x000000000004a15b: ret 0xff10; 
0x000000000002a1c9: ret 0xff25; 
0x0000000000019ece: ret 0xff2; 
0x00000000000237fa: ret 0xff31; 
0x000000000001b98f: ret 0xff3; 
0x0000000000070f80: ret 0xff3e; 
0x000000000002672e: ret 0xff48; 
0x00000000000507b9: ret 0xff49; 
0x000000000003f63c: ret 0xff51; 
0x0000000000020d35: ret 0xff83; 
0x000000000003fae4: ret 0xffb9; 
0x0000000000057cdd: ret 0xffdf; 
0x000000000004cb35: ret 0xffea; 
0x00000000000230af: ret 0xfff0; 
0x000000000005c111: ret 0xfff; 
0x0000000000055d1f: ret 0xfffb; 
0x00000000000483c6: ret 0xfffc; 
0x000000000001bdcd: ret 0xfffd; 
0x000000000001a078: ret 0xfffe; 
0x00000000000166e6: ret 0xffff; 
0x0000000000001960: ret 1; 
0x00000000000019c0: ret 2; 
0x0000000000001d34: ret 3; 
0x00000000000007b4: ret 4; 
0x0000000000001d54: ret 5; 
0x000000000000f380: ret 6; 
0x00000000000411cb: ret 8; 
0x0000000000025166: ret 9; 
0x0000000000000598: ret; 
0x0000000000056fd3: retf 0; add byte ptr [rax + 0x63], cl; rol byte ptr [rbx - 0x76b3fe32], cl; ror byte ptr [rax + 0x63], 0xf6; syscall; 
0x0000000000055685: retf 0; add byte ptr [rax - 0x75], cl; jl 0x556b1; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000056db5: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; mov rdi, rbx; syscall; 
0x000000000001acd5: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000054f9b: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; mov rdi, r8; syscall; 
0x0000000000055bb0: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r12; syscall; 
0x000000000004b964: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; mov rdi, r9; syscall; 
0x00000000000546a3: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c1ff: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbp; syscall; 
0x0000000000054eaa: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; mov rdi, rbx; syscall; 
0x00000000000560d9: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000056c04: retf 0; add byte ptr [rdx + 1], bh; or r12d, 1; mov rax, rbp; movsxd rsi, r12d; syscall; 
0x00000000000559c5: retf 0; add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x2426ff]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000055976: retf 0; add byte ptr [rsi + 1], bh; lea rdi, [rip + 0x24274e]; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d26: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; mov rdi, r13; syscall; 
0x00000000000552c8: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000553a3: retf 0; add byte ptr [rsi + 1], bh; mov rax, r8; mov rdx, rsi; syscall; 
0x0000000000054d5c: retf 0; add byte ptr [rsi + 1], bh; mov rdi, rbx; mov rax, r8; mov rdx, rsi; syscall; 
0x000000000001f2c2: retf 0x10f; ret 0x141; 
0x0000000000026fbb: retf 0x176; hlt; ret; 
0x000000000001d933: retf 0x280f; ret; 
0x00000000000322c4: retf 0x2ddb; and eax, 0xde0005f4; ret 0x25d8; 
0x000000000002ca94: retf 0x2ddb; and eax, 0xde000643; ret 0xf1de; 
0x000000000002cf1c: retf 0x2ddb; sub eax, 0xde000642; ret 0xf1de; 
0x000000000007f1b6: retf 0x2f78; jge 0x7f1dc; push rcx; xchg eax, edx; push rdi; ret 0x8b64; 
0x000000000003529d: retf 0x3941; sal byte ptr [rax - 1], 1; ret 0x3941; 
0x00000000000350f3: retf 0x3941; sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x000000000003507f: retf 0x3944; ret 0xe775; 
0x000000000003523a: retf 0x3944; ret 0xe875; 
0x00000000000337c8: retf 0x3948; cli; jbe 0x337d3; addsd xmm0, xmm2; ret; 
0x0000000000092bf5: retf 0x3e4c; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x0000000000023c30: retf 0x4850; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x00000000000226b8: retf 0x4850; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000004b356: retf 0x4850; movsxd rdi, edi; mov edx, edx; mov eax, 0x103; syscall; 
0x000000000005b265: retf 0x4850; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x108; syscall; 
0x0000000000023d2b: retf 0x4850; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x3d; syscall; 
0x00000000000239b0: retf 0x4850; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0xb3; syscall; 
0x0000000000023455: retf 0x4850; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11d; syscall; 
0x0000000000023c9f: retf 0x4850; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11e; syscall; 
0x00000000000238f8: retf 0x4850; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x12e; syscall; 
0x000000000002337f: retf 0x4850; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0xe9; syscall; 
0x000000000004aba4: retf 0x48ff; mov eax, edx; add rsp, 0x138; ret; 
0x0000000000023daf: retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000023dc7: retf 0x4d50; movsxd rax, eax; mov eax, 0xbd; syscall; 
0x00000000000237ab: retf 0x4d50; movsxd rax, eax; movsxd rdi, edi; mov eax, 0x12f; syscall; 
0x0000000000023ddf: retf 0x4d50; movsxd rax, eax; movsxd rdi, edi; mov eax, 0xbe; syscall; 
0x000000000005acce: retf 0x4d50; movsxd rax, eax; movsxd rdi, edi; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000005af87: retf 0x4d50; movsxd rax, eax; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x00000000000239fc: retf 0x4d50; movsxd rax, eax; movsxd rdx, edx; mov eax, 0xd8; syscall; 
0x0000000000028fb8: retf 0x570f; ret 0xff2; 
0x0000000000035d86: retf 0x570f; ret 0xff3; 
0x0000000000023c6f: retf 0x6348; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x114]; syscall; 
0x0000000000023a30: retf 0x6348; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x28]; syscall; 
0x000000000005b108: retf 0x6348; test dword ptr [rcx - 0x3f], 0x27bf20f9; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xa8e8; 
0x000000000005b168: retf 0x6348; test dword ptr [rcx - 0x3f], 0x28bf20f9; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x48e8; 
0x000000000002298f: retf 0x6459; sub rax, qword ptr [0]; pop rdx; ret; 
0x000000000002238c: retf 0x6a52; add byte ptr [rax - 0x77], cl; ret 0x1bf; 
0x000000000003d8b3: retf 0x85ff; sal byte ptr [rsp + rax - 0x75], 0x54; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000023bcb: retf 0x8945; leave; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x113; syscall; 
0x000000000002332d: retf 0x8945; leave; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x146; syscall; 
0x0000000000057e77: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000057e77: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000002da87: retf 0x8eb; movsd xmm1, qword ptr [rip + 0x6430e]; movapd xmm0, xmm1; ret; 
0x000000000002dcfc: retf 0x8eb; movss xmm1, dword ptr [rip + 0x64e75]; movaps xmm0, xmm1; ret; 
0x00000000000211c6: retf 0xaaeb; mov ecx, edi; mov eax, ecx; pop rbx; pop rbp; ret; 
0x0000000000054ca0: retf 0xabf3; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000087162: retf 0xb350; push rax; ret 0xd650; 
0x0000000000073d40: retf 0xc15e; pop rsi; ret 0xc45e; 
0x00000000000372bf: retf 0xc1de; f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x0000000000029b4e: retf 0xcade; fld xword ptr [rip + 0x670f9]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000001b716: retf 0xd089; or rax, rcx; mov qword ptr [rsp + 0x10], rax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001cae6: retf 0xd089; or rax, rcx; mov qword ptr [rsp + 8], rax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x38; ret; 
0x000000000001cb92: retf 0xd089; or rax, rcx; mov qword ptr [rsp - 0x28], rax; movq xmm0, qword ptr [rsp - 0x28]; ret; 
0x0000000000075fa8: retf 0xd580; or cl, 0x80; iretd; adc bh, 0x80; out 0x80, al; int 0x80; 
0x000000000002257a: retf 0xd609; add rsp, 0x90; mov eax, esi; pop rbx; ret; 
0x0000000000029b79: retf 0xe1de; fsubp st(1); ret; 
0x0000000000017b9f: retf 0xe75; test dl, dl; jne 0x17b90; xor eax, eax; sub eax, edx; ret; 
0x0000000000029b6f: retf 0xe9de; fld xword ptr [rip + 0x670e8]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x000000000003559c: retf 0xf077; movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000003564a: retf 0xf177; movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x000000000001c31c: retf 0xf66; sub ah, al; add rsp, 0x28; ret; 
0x0000000000032ba4: retf 0xf66; sub cl, al; ret; 
0x00000000000887f6: retf 0xf695; outsd dx, dword ptr [rsi]; ret; 
0x000000000005414f: retf 0xfb75; ret; 
0x000000000002eb5c: retf 0xff2; adc dword ptr [rsi], ecx; ret; 
0x0000000000028889: retf 0xff2; pop rax; ret; 
0x0000000000028871: retf 0xff2; pop rcx; ret 0xff2; 
0x0000000000028940: retf 0xff2; pop rcx; sal edx, 0xf; pop rcx; ret 0x48c3; 
0x000000000002ac7d: retf 0xff2; pop rsp; ret 0xff2; 
0x000000000001b93c: retf 0xff2; pop rsp; ret; 
0x0000000000023df2: retf 0xff2b; lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x000000000002fa91: retf 0xff3; pop rcx; ret 0xff3; 
0x0000000000028976: retf 0xff3; pop rcx; sal ebx, 0xf; pop rcx; ret 0x66c3; 
0x0000000000043c90: retf 0xff48; ret 0x77e9; 
0x00000000000464ac: retf; add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000029af1: retf; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000288a5: retf; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002eb58: retf; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x0000000000005229: retf; cld; mov dh, 0xea; js 0x51b0; sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x000000000001e9e4: retf; cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x0000000000024c40: retf; dec dword ptr [rax - 0x77]; fcomp dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x0000000000031454: retf; ja 0x31590; lea rdx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000006e5a6: retf; jge 0x6e58a; jg 0x6e550; cmp byte ptr [rsi], 0x81; ret 0xf281; 
0x0000000000030532: retf; mulss xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x000000000008748a: retf; pop rdx; ret 0xbd5a; 
0x00000000000735c4: retf; push rdi; ret; 
0x0000000000054385: retf; ret 0x894c; 
0x000000000002af6b: retf; subsd xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000005908a: rol bl, 0x48; movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x0000000000020d2e: rol bl, 0x83; jmp qword ptr [rax]; 
0x0000000000058e75: rol byte ptr [rax + 0x101e133], 0xd0; cdqe; ret; 
0x000000000003c5e8: rol byte ptr [rax + 0x1e7580fa], 0xeb; sbb byte ptr [rcx - 2], al; ret; 
0x0000000000058f37: rol byte ptr [rax + 0x48000151], cl; lea eax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000058e6f: rol byte ptr [rax + 0x69000151], cl; rol byte ptr [rax + 0x101e133], 0xd0; cdqe; ret; 
0x0000000000004040: rol byte ptr [rax + rax], 0; rol dword ptr [rax + rax], 0; ret; 
0x000000000003a7eb: rol byte ptr [rax - 0x6bf0d0c1], 0xc0; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000003e3c5: rol byte ptr [rax - 0x6bf0ffc5], 0xc0; pop rbx; ret; 
0x00000000000168bb: rol byte ptr [rax], 0; add byte ptr [rax + 0x29], cl; ret 0x8548; 
0x00000000000507e5: rol byte ptr [rax], 0; add byte ptr [rax + 0x63], cl; ret; 
0x000000000002067d: rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000000250c3: rol byte ptr [rax], 0; add byte ptr [rbp + rsi + 0x3d], dh; ret 0; 
0x000000000002324e: rol byte ptr [rax], 1; add byte ptr [rax], al; mov eax, edx; pop rbx; ret; 
0x000000000004d6ab: rol byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004d65d: rol byte ptr [rax], 1; add byte ptr [rax], al; test rdx, rdx; je 0x4d66e; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000027652: rol byte ptr [rax], 1; ret; 
0x000000000008a906: rol byte ptr [rax], cl; ret 0x8d61; 
0x000000000005499d: rol byte ptr [rbp + 0x310a74c0], cl; rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x0000000000057ce2: rol byte ptr [rbp + 0x310b74c0], cl; rol byte ptr [rbx - 0x6bf0f408], cl; ret 0xc283; 
0x00000000000548f3: rol byte ptr [rbp + 0x310c74c0], cl; rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x0000000000040723: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; syscall; 
0x00000000000407c6: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000003d48d: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d127: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4b0: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x00000000000406a7: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x00000000000406cb: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df41: rol byte ptr [rbp + 0x31], 0xc9; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x0000000000054651: rol byte ptr [rbp + 0x31], 1; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000040720: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; syscall; 
0x0000000000020f6a: rol byte ptr [rbp - 0x3d6af040], cl; mov eax, edx; pop rbx; ret; 
0x000000000005794a: rol byte ptr [rbx + 0x634801ce], 0xf6; syscall; 
0x000000000005af4a: rol byte ptr [rbx + 0x6740938], cl; mov dword ptr [rax], 0x19; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003b017: rol byte ptr [rbx + 0x94410ea], 1; ret 0xe283; 
0x000000000004ab43: rol byte ptr [rbx + 0x9773ff9], 0x48; mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000054938: rol byte ptr [rbx + 0xab901e6], 0; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000003a40c: rol byte ptr [rbx + 0xc7404fa], 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000046c5b: rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x0000000000052339: rol byte ptr [rbx + 0xfc817c], 0x75; adc cl, byte ptr [rax + 0x39]; ret 0xf175; 
0x000000000004633d: rol byte ptr [rbx + rbp*8], 0xd4; mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000000018f72: rol byte ptr [rbx + rcx*4], 0x10; test edx, edx; jne 0x18f70; sub rax, rdi; sar rax, 2; ret; 
0x0000000000057d47: rol byte ptr [rbx - 0x3ca50120], 1; mov eax, 0x18; syscall; 
0x00000000000289cf: rol byte ptr [rbx - 0x3fe6fe06], cl; add eax, 3; ret; 
0x0000000000020d95: rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000020d73: rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x0000000000020d84: rol byte ptr [rbx - 0x69f0e601], 0xc0; ret; 
0x0000000000020d06: rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x0000000000020e84: rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x00000000000549a3: rol byte ptr [rbx - 0x6af0ef08], cl; ret 0xc2ff; 
0x0000000000054b03: rol byte ptr [rbx - 0x6af0ffc1], 0xc0; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000020d28: rol byte ptr [rbx - 0x6bf07f19], 0xc0; ret; 
0x00000000000548f9: rol byte ptr [rbx - 0x6bf09108], cl; ret 0x548d; 
0x0000000000057ce8: rol byte ptr [rbx - 0x6bf0f408], cl; ret 0xc283; 
0x000000000003ab3d: rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x0000000000056fd9: rol byte ptr [rbx - 0x76b3fe32], cl; ror byte ptr [rax + 0x63], 0xf6; syscall; 
0x0000000000020d17: rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x0000000000021085: rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x0000000000015440: rol byte ptr [rbx - 0x7cbefe0e], 0xc6; add dword ptr [rcx], ecx; ret 0xf283; 
0x000000000003c669: rol byte ptr [rbx], 0x25; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0xddeb; 
0x000000000005a904: rol byte ptr [rbx], 0x44; and al, 0x30; add rsp, 0x48; ret; 
0x0000000000020e46: rol byte ptr [rcx + 0x2fffdff], 0; setbe al; ret; 
0x00000000000233a2: rol byte ptr [rcx + 0x51], cl; movsxd rdi, edi; mov r10, rbx; mov r9d, 8; mov eax, 0x119; syscall; 
0x0000000000021345: rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x00000000000190cf: rol byte ptr [rcx + 0xf], 0x94; ret 0xc085; 
0x000000000003b014: rol byte ptr [rcx + 1], cl; rol byte ptr [rbx + 0x94410ea], 1; ret 0xe283; 
0x0000000000058208: rol byte ptr [rcx + rcx*4 - 0x40], 0xf7; fadd dword ptr [rbp - 0x7b]; leave; cmove eax, r8d; ret; 
0x00000000000597d6: rol byte ptr [rcx - 0x3a], 1; add al, 0x1f; sub ebp, ebx; ret; 
0x0000000000017066: rol byte ptr [rcx], 0x39; ret 0x788; 
0x0000000000017fb2: rol byte ptr [rcx], 0x80; cmp byte ptr [rax], al; jne 0x17fb0; sub rax, rdi; ret; 
0x0000000000017829: rol byte ptr [rcx], 0x84; ror byte ptr [rax - 0xc108af0], cl; ret; 
0x0000000000050668: rol byte ptr [rdi + rcx - 0x42], cl; inc dword ptr [rbp - 0x77]; ret; 
0x000000000003f66c: rol byte ptr [rdx], 1; add eax, 0x258944; lea rax, [rip + 0x2585f5]; pop rdx; ret; 
0x000000000002f03c: rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6f: rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 4], xmm0; ret; 
0x0000000000035bea: rol byte ptr [rip - 0xdf98c00], 0xf; pop rax; ret 0x4eb; 
0x0000000000021974: rol byte ptr [rsi], 1; and byte ptr [rbx + rcx + 0x4c], dh; mov eax, ecx; syscall; 
0x0000000000004b85: rol dword ptr [rax + 0xf], cl; or dword ptr [rsi + rbp*4], ebp; jmp qword ptr [rcx]; 
0x000000000005b7cd: rol dword ptr [rax + rax*8 - 0x49f0128b], 0xd0; sub eax, edx; ret; 
0x0000000000004044: rol dword ptr [rax + rax], 0; ret; 
0x0000000000051a76: rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x000000000002068a: rol dword ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000004bfa7: rol dword ptr [rax], cl; add byte ptr [rax], al; mov ebp, eax; mov rdi, rbx; call qword ptr [rbx + 0x18]; 
0x000000000002a522: rol dword ptr [rax], cl; add cl, bl; in eax, dx; add rsp, 0x48; faddp st(1); ret; 
0x000000000006f666: rol dword ptr [rbx - 0x68ae7535], 0xd6; wait; add dl, bh; push r10; jmp qword ptr [rsi - 0x6b]; 
0x0000000000076d68: rol dword ptr [rbx - 0x7bec7c16], 1; ret; 
0x0000000000016e5b: rol dword ptr [rbx], cl; add byte ptr [rax - 0x77], cl; call 0x8c5f1ad; pop rbx; pop rbp; ret; 
0x0000000000016e1a: rol dword ptr [rbx], cl; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000003387c: rol dword ptr [rcx - 0x1f], 0x7f; cmp ecx, 0x7f800000; jbe 0x33890; addss xmm0, xmm2; ret; 
0x00000000000372d4: rol dword ptr [rcx], 1; andps xmm0, xmm1; ret; 
0x000000000007687c: rol dword ptr [rsi - 0x7945793b], 0xb0; xchg al, cl; xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x000000000008c71c: rol dword ptr [rsp + rax*8 + 0x2c383c3f], 1; cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x000000000004aa3e: rol eax, cl; and qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x000000000004aa3d: rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x000000000007949d: ror byte ptr [r15 - 0x3f], 0x4f; ret 0xc64f; 
0x0000000000017b2a: ror byte ptr [rax + 0x21], 1; ror dword ptr [rax - 0x77], 1; ret 0x894c; 
0x000000000004aa3f: ror byte ptr [rax + 0x21], 7; xor eax, eax; pop rdx; ret; 
0x000000000003708c: ror byte ptr [rax + 0x21], cl; ret 0x8948; 
0x0000000000017ae0: ror byte ptr [rax + 0x21], cl; ror dword ptr [rax - 0x77], 1; ret 0xf748; 
0x00000000000275c9: ror byte ptr [rax + 0x26e8a005], 0; ret; 
0x000000000005a83b: ror byte ptr [rax + 0x29], 1; fmul dword ptr [rax + 0x39]; ret 0xe472; 
0x000000000004bf6e: ror byte ptr [rax + 0x39], 0xd1; je 0x4bf7d; sub rdx, rcx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x00000000000561c5: ror byte ptr [rax + 0x39], 0xf7; sete al; ret; 
0x0000000000023a00: ror byte ptr [rax + 0x63], 0xd2; mov eax, 0xd8; syscall; 
0x000000000003a285: ror byte ptr [rax + 0x63], 0xd5; mov eax, 9; syscall; 
0x0000000000056fdf: ror byte ptr [rax + 0x63], 0xf6; syscall; 
0x000000000002227e: ror byte ptr [rax + 0x63], 0xf8; js 0x222a5; mov edx, 1; mov esi, 2; mov rax, r9; syscall; 
0x000000000004b08a: ror byte ptr [rax + 0x63], 0xfb; mov eax, 3; syscall; 
0x000000000004b530: ror byte ptr [rax + 0x63], 0xfb; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x00000000000237af: ror byte ptr [rax + 0x63], 0xff; mov eax, 0x12f; syscall; 
0x0000000000023de3: ror byte ptr [rax + 0x63], 0xff; mov eax, 0xbe; syscall; 
0x000000000005acd2: ror byte ptr [rax + 0x63], 0xff; mov edx, edx; mov eax, 0x104; syscall; 
0x000000000005af8b: ror byte ptr [rax + 0x63], 0xff; movsxd rdx, edx; mov eax, 0x109; syscall; 
0x000000000001e1b1: ror byte ptr [rax + 0x63], cl; adc al, 0x90; add rax, rdx; jmp rax; 
0x0000000000051144: ror byte ptr [rax + 0x63], cl; adc al, 0x91; add rcx, rdx; jmp rcx; 
0x000000000004afb9: ror byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0x10cb8d2]; add byte ptr [rax], al; syscall; 
0x000000000003a750: ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000003972d: ror byte ptr [rax + 0x63], cl; idiv dword ptr [rax + 0x12e]; sub rsp, 0x20; xor edi, edi; syscall; 
0x00000000000223bf: ror byte ptr [rax + 0x63], cl; push qword ptr [rcx]; idiv byte ptr [rax + 0x11d]; mov rdx, r8; syscall; 
0x000000000003b7b2: ror byte ptr [rax + 0x63], cl; ret 0x3949; 
0x000000000005677c: ror byte ptr [rax + 0x63], cl; test byte ptr [rcx - 0x77], 0xea; mov rax, r13; syscall; 
0x0000000000058f34: ror byte ptr [rax + 0x69], cl; rol byte ptr [rax + 0x48000151], cl; lea eax, [rdx + rdi + 0x386e9500]; ret; 
0x0000000000026989: ror byte ptr [rax + 0xf], 0x44; ret 0x48c3; 
0x000000000005843b: ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x0000000000037648: ror byte ptr [rax + 0xf], 0x45; ret 0x48f2; 
0x000000000003a7f1: ror byte ptr [rax + 1], 0xc7; mov eax, 0xf1; syscall; 
0x00000000000341ea: ror byte ptr [rax + 1], 1; ret; 
0x000000000001baec: ror byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000004d506: ror byte ptr [rax - 0x39], 0x43; or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000026a4f: ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x00000000000326fb: ror byte ptr [rax - 0x42], 0; add byte ptr [rax], al; add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0xff2; 
0x000000000001e0b3: ror byte ptr [rax - 0x68], 0x5a; ret; 
0x0000000000058e7b: ror byte ptr [rax - 0x68], 1; ret; 
0x000000000004a367: ror byte ptr [rax - 0x73], 0x54; ret; 
0x00000000000464a7: ror byte ptr [rax - 0x73], 1; adc eax, 0x4cb2d; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000025bbe: ror byte ptr [rax - 0x73], 1; add eax, 0x6cf32; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025b6c: ror byte ptr [rax - 0x73], 1; add eax, 0x6cf38; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x00000000000255e8: ror byte ptr [rax - 0x73], 1; add eax, 0x6d470; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000025c7a: ror byte ptr [rax - 0x73], cl; adc eax, 0x6dbe3; cmove rax, rdx; ret; 
0x000000000004a220: ror byte ptr [rax - 0x75], 0x5c; ret; 
0x0000000000023981: ror byte ptr [rax - 0x77], 0x44; and al, 0x18; mov eax, 0x65; syscall; 
0x000000000004352a: ror byte ptr [rax - 0x77], 0x4b; or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000000434d7: ror byte ptr [rax - 0x77], 0x53; or byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x000000000004f17f: ror byte ptr [rax - 0x77], 0xc2; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x000000000004f15c: ror byte ptr [rax - 0x77], 0xc2; mov r12d, eax; js 0x4f191; mov eax, 0x57; mov rdi, rbp; syscall; 
0x00000000000427e7: ror byte ptr [rax - 0x77], 0xc3; jne 0x42843; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000004e658: ror byte ptr [rax - 0x77], 0xc3; jne 0x4e67c; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000004cb3b: ror byte ptr [rax - 0x77], 0xc6; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004b982: ror byte ptr [rax - 0x77], 0xd6; syscall; 
0x000000000004b982: ror byte ptr [rax - 0x77], 0xd6; syscall; ret; 
0x000000000005795b: ror byte ptr [rax - 0x77], 0xd6; syscall; xor eax, eax; ret; 
0x00000000000181ce: ror byte ptr [rax - 0x77], 0xd8; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000056dc5: ror byte ptr [rax - 0x77], 0xdf; syscall; 
0x0000000000054af4: ror byte ptr [rax - 0x77], 0xe; ret; 
0x0000000000054d6a: ror byte ptr [rax - 0x77], 0xf2; syscall; 
0x000000000005ba92: ror byte ptr [rax - 0x77], 1; add eax, 0x23c5be; ret; 
0x000000000003356e: ror byte ptr [rax - 0x77], 1; and al, 0xf8; movsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002e87d: ror byte ptr [rax - 0x77], 1; and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x0000000000033580: ror byte ptr [rax - 0x77], 1; and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x000000000002ea2a: ror byte ptr [rax - 0x77], 1; and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000042433: ror byte ptr [rax - 0x77], 1; and al, 8; movsd xmm0, qword ptr [rsp + 8]; subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x0000000000024a79: ror byte ptr [rax - 0x77], 1; fdivrp st(3); movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000021cff: ror byte ptr [rax - 0x77], 1; or eax, 0x276069; pop rbx; ret; 
0x00000000000423eb: ror byte ptr [rax - 0x77], 1; ret 0x8966; 
0x000000000001d4bc: ror byte ptr [rax - 0x77], 1; ret 0xc889; 
0x000000000003763f: ror byte ptr [rax - 0x77], 1; ret 0xf748; 
0x000000000005b5e5: ror byte ptr [rax - 0x77], 4; and al, 0x69; ret 0x3e8; 
0x000000000004b90c: ror byte ptr [rax - 0x77], cl; call 0x4cd71c5c; mov edi, ecx; mov rsi, r12; syscall; 
0x000000000004bf57: ror byte ptr [rax - 0x7b], 0xd2; je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000037a57: ror byte ptr [rax - 0x7b], 0xff; je 0x37a64; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000037a66: ror byte ptr [rax - 0x7b], 0xff; je 0x37a73; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x00000000000262bb: ror byte ptr [rax - 0x7b], cl; dec dword ptr [rdi]; xchg eax, ebp; ret 0x2148; 
0x000000000004c51d: ror byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x148; 
0x000000000002183b: ror byte ptr [rax - 0x7d], 0x3c; ret 0x4800; 
0x000000000004bee2: ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000004bf16: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004becd: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x00000000000191be: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000005f25e: ror byte ptr [rax - 0x7d], 0xc4; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000030c94: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000023448: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000020cd6: ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x0000000000022fcc: ror byte ptr [rax - 0x7d], 0xec; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000275b9: ror byte ptr [rax - 0x7d], 0xf8; and byte ptr [rbp - 0x14], dh; mov byte ptr [rip + 0x26e8a9], 1; ret; 
0x000000000002646c: ror byte ptr [rax - 0x7d], cl; jge 0x26471; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000049090: ror byte ptr [rax - 0x7d], cl; ret 0x3910; 
0x000000000004f21d: ror byte ptr [rax - 0x7f], 0xc4; mov eax, 0x5b000000; pop rbp; pop r12; pop r13; ret; 
0x0000000000057f15: ror byte ptr [rax - 0x7f], 0xc4; nop; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000003800f: ror byte ptr [rax - 0x7f], 0xc4; nop; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000003e4a6: ror byte ptr [rax - 0x7f], 0xc4; or byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000005526e: ror byte ptr [rax - 0x7f], 0xc4; test al, 0; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000001782c: ror byte ptr [rax - 0xc108af0], cl; ret; 
0x0000000000022512: ror byte ptr [rax - 1], 0xc7; je 0x22520; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000020c9c: ror byte ptr [rax - 1], 1; ret; 
0x00000000000201ef: ror byte ptr [rax - 1], cl; ret 0x8348; 
0x0000000000017add: ror byte ptr [rax - 9], 1; ror byte ptr [rax + 0x21], cl; ror dword ptr [rax - 0x77], 1; ret 0xf748; 
0x0000000000056283: ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000017b23: ror byte ptr [rbp + rcx*4 + 4], cl; cmp byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], 1; ror dword ptr [rax - 0x77], 1; ret 0x894c; 
0x0000000000042505: ror byte ptr [rcx + 0x12eac1c2], 1; xor eax, edx; shr eax, 1; ret; 
0x00000000000280d2: ror byte ptr [rcx + 0x21d8f7d0], cl; sal byte ptr [rdx + 0x29], 1; ret 0x5389; 
0x000000000003a680: ror byte ptr [rcx + 0x481774c5], 0x63; sti; mov eax, 3; syscall; 
0x0000000000058ab4: ror byte ptr [rcx + 0x63], 1; ret 0x8948; 
0x000000000005abd9: ror byte ptr [rcx + 0x63], cl; clc; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000005aa84: ror byte ptr [rcx + 0x63], cl; cmp byte ptr [rax + 0x10d], bh; syscall; 
0x000000000005536f: ror byte ptr [rcx + 0x779104a], 0x48; mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x0000000000043076: ror byte ptr [rcx + 0xf142444], 0x85; ret; 
0x00000000000430f1: ror byte ptr [rcx + 0xf142444], 0x88; add qword ptr [rax], rax; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000004319e: ror byte ptr [rcx + 0xf142444], 0x88; wait; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x00000000000569db: ror byte ptr [rcx + 0xf44f0d8], 0xb1; add al, 0x39; ret; 
0x000000000005f042: ror byte ptr [rcx + 0xf], 0x44; ret; 
0x0000000000043162: ror byte ptr [rcx + rcx*4 - 0x20], 1; syscall; 
0x000000000004b912: ror byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, r12; syscall; 
0x0000000000054f15: ror byte ptr [rcx + rcx*4 - 0x32], 0x48; mov edx, ebx; syscall; 
0x000000000004bc7f: ror byte ptr [rcx + rcx*4 - 0x32], cl; mov rdi, r8; call 0x4bb5c; add rsp, 0x18; ret; 
0x000000000002224d: ror byte ptr [rcx + rcx*4 - 0x38], 0x4c; mov edx, eax; syscall; 
0x000000000005a9ee: ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x0000000000054654: ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000054c9a: ror byte ptr [rcx + rcx*4 - 0x39], 0x44; or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000058278: ror byte ptr [rcx + rcx*4 - 0x39], 0x49; mov dword ptr [rax], eax; call 0x5819c; mov dword ptr [r10 + 0x10], eax; ret; 
0x000000000005aa08: ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000004b6c9: ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x0000000000054f12: ror byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004e4e4: ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005b3f5: ror byte ptr [rcx - 0x3b7cb730], cl; sbb bl, al; push rax; mov eax, 0x58; syscall; 
0x00000000000274e4: ror byte ptr [rcx - 0x77], 1; ret; 
0x000000000004cb86: ror byte ptr [rcx - 0x77], cl; cmc; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x0000000000040761: ror byte ptr [rcx - 0x79cb73b], 0x78; cmp bh, dh; ret; 
0x000000000002b9da: ror byte ptr [rcx - 0xc03dbbc], 1; movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x00000000000335ed: ror byte ptr [rcx - 0xc03dbbc], 1; movups xmm1, xmmword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x00000000000370e3: ror byte ptr [rcx - 0xc13dbbc], 1; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000352df: ror byte ptr [rcx - 0xcf48bc9], cl; movups xmm1, xmmword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x0000000000035138: ror byte ptr [rcx - 0xdf48bc9], cl; movups xmm1, xmmword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x00000000000046a9: ror byte ptr [rcx], 0x91; ret 0x2912; 
0x0000000000020d3b: ror byte ptr [rcx], 0xd0; movzx eax, al; ret; 
0x000000000001f4cc: ror byte ptr [rcx], cl; ret 0xf231; 
0x000000000007949e: ror byte ptr [rdi - 0x3f], 0x4f; ret 0xc64f; 
0x000000000004aeb4: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x000000000001ded2: ror byte ptr [rdi], 0x28; ret 0xc389; 
0x00000000000547d2: ror byte ptr [rdi], 0x45; ret 0x8348; 
0x000000000002dfc4: ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000057d61: ror byte ptr [rdi], 0x45; ret 0xc35a; 
0x00000000000573eb: ror byte ptr [rdi], 0x48; ret 0x689; 
0x0000000000032a1a: ror byte ptr [rdi], 0x57; leave; divss xmm0, xmm1; ret; 
0x000000000002a763: ror byte ptr [rdi], 0x57; leave; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032daf: ror byte ptr [rdi], 0x57; shr bl, 0x6d; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x0000000000032bd3: ror byte ptr [rdi], 0x57; shr cl, 0x89; add byte ptr [rax], al; add byte ptr [rip + 0x7fefffff], bh; jbe 0x32be4; ret; 
0x0000000000049245: ror byte ptr [rdi], 0x84; cmpsd dword ptr [rsi], dword ptr [rdi]; add dword ptr [rax], eax; add bl, ch; ret; 
0x000000000005141e: ror byte ptr [rdi], 0x84; sub al, byte ptr [rax + rax]; add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x000000000002460c: ror byte ptr [rdi], 0x84; xchg eax, esi; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; fmul dword ptr [rcx - 0x77]; ret 0x8d48; 
0x0000000000046a3a: ror byte ptr [rdi], 0x85; ret 0; 
0x000000000004c520: ror byte ptr [rdi], 0x94; ret 0x148; 
0x000000000001e99f: ror byte ptr [rdi], 0x94; ret 0x8548; 
0x000000000004452c: ror byte ptr [rdi], 0x95; ret 0x44e9; 
0x0000000000020f6c: ror byte ptr [rdi], 0x95; ret 0xd089; 
0x0000000000054540: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; pop rdx; ret; 
0x000000000004a361: ror byte ptr [rdi], 0x9f; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x73], 0x54; ret; 
0x000000000004cfb2: ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx - 9], 0xd8; pop rbp; pop r12; ret; 
0x000000000004a364: ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x73], 0x54; ret; 
0x000000000004a21d: ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x75], 0x5c; ret; 
0x0000000000041d57: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000023422: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; pop rdx; ret; 
0x0000000000022e4e: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000027649: ror byte ptr [rdi], 1; mov bh, 0x14; push rcx; cmp rdx, rdi; adc eax, 0; ret; 
0x0000000000018ac0: ror byte ptr [rdi], 1; mov dh, 0xc0; movzx edx, dl; sub eax, edx; ret; 
0x0000000000020d3d: ror byte ptr [rdi], 1; mov dh, 0xc0; ret; 
0x0000000000020e35: ror byte ptr [rdi], 1; mov dh, 4; add dword ptr [rcx + 0x7e183f9], ecx; sar eax, cl; and eax, 1; ret; 
0x0000000000032b56: ror byte ptr [rdi], 1; sub ah, al; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000002c8ca: ror byte ptr [rdi], 1; sub cl, al; addss xmm0, xmm2; ret; 
0x000000000002e52a: ror byte ptr [rdi], 1; sub dl, al; ret; 
0x00000000000559e5: ror byte ptr [rdi], 5; pop rax; ret; 
0x0000000000055996: ror byte ptr [rdi], 5; ret; 
0x000000000005b0bb: ror byte ptr [rdi], 5; xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000552e3: ror byte ptr [rdi], 5; xor eax, eax; ret; 
0x0000000000035647: ror byte ptr [rdi], cl; retf 0xf177; movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x000000000002e662: ror byte ptr [rdi], cl; sub cl, al; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000037498: ror byte ptr [rdi], cl; xchg eax, ebp; ret 0xd349; 
0x0000000000058031: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xda09; 
0x0000000000051a6b: ror byte ptr [rdx], 1; shr bl, 1; add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x00000000000168d4: ror dword ptr [rax + 0x29], 1; ror dword ptr [rax + 1], 0xf0; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005aac8: ror dword ptr [rax + 0x63], 1; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1b7], cl; syscall; 
0x0000000000045f33: ror dword ptr [rax + 0x63], 1; ret 0xc148; 
0x00000000000168d7: ror dword ptr [rax + 1], 0xf0; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000003c5a7: ror dword ptr [rax - 0x77], 1; mov esi, 2; call 0x3c35a; add rsp, 0x18; ret; 
0x000000000003a7a6: ror dword ptr [rax - 0x77], 1; ret 0x16e8; 
0x0000000000040687: ror dword ptr [rax - 0x77], 1; ret 0x35e8; 
0x0000000000037d92: ror dword ptr [rax - 0x77], 1; ret 0x8148; 
0x0000000000017b2d: ror dword ptr [rax - 0x77], 1; ret 0x894c; 
0x000000000003f6eb: ror dword ptr [rax - 0x77], 1; ret 0xd1e8; 
0x0000000000059197: ror dword ptr [rax - 0x77], 1; ret 0xe6bf; 
0x000000000003a7d4: ror dword ptr [rax - 0x77], 1; ret 0xe8e8; 
0x00000000000225d1: ror dword ptr [rax - 0x77], 1; ret 0xebe8; 
0x0000000000017ae3: ror dword ptr [rax - 0x77], 1; ret 0xf748; 
0x0000000000054aef: ror dword ptr [rax - 0x77], 2; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000020419: ror dword ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000037495: ror dword ptr [rax - 0x7b], 1; ror byte ptr [rdi], cl; xchg eax, ebp; ret 0xd349; 
0x000000000001b761: ror dword ptr [rax - 0x7d], 0xc4; adc byte ptr [rsi + 0xf], ah; sub dl, cl; pop rbx; ret; 
0x0000000000030fa4: ror dword ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000030a8b: ror dword ptr [rax - 0x7d], 0xc4; cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000002ad7c: ror dword ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000003873b: ror dword ptr [rax - 0x7d], cl; ret 0x4502; 
0x000000000005ba8e: ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x23c5be], rax; ret; 
0x000000000003a282: ror dword ptr [rbp + 0x63], cl; ror byte ptr [rax + 0x63], 0xd5; mov eax, 9; syscall; 
0x000000000001facd: ror dword ptr [rcx + 0x48a0144c], 0x83; ret 0x4804; 
0x000000000004b195: ror dword ptr [rcx + 0x63], 1; stc; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x0000000000043706: ror dword ptr [rcx + rcx*4 - 0x21], 1; mov qword ptr [rsp + 0x110], rax; call 0x4327b; add rsp, 0x150; pop rbx; ret; 
0x000000000003f73d: ror dword ptr [rcx + rcx*4 - 0x26], 1; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000001c834: ror dword ptr [rcx - 0x1c3eb730], cl; and byte ptr [rax + 9], cl; ret; 
0x0000000000057a35: ror dword ptr [rcx - 0x4ef00f30], 0xf; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x000000000001ba6d: ror dword ptr [rdi], 0x57; shl dword ptr [rsi + 0xf], cl; sub dl, cl; ret; 
0x000000000003ad31: ror dword ptr [rdi], 0x85; cld; add byte ptr [rax], al; add bl, ch; sbb esi, esi; ret; 
0x000000000003ae5a: ror dword ptr [rdi], 0xb6; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000004a26c: ror dword ptr [rdi], 1; mov byte ptr [r9 - 0x77], 0x41; sbb byte ptr [rcx + rbp - 0x40], al; ret; 
0x000000000002b142: ror dword ptr [rdi], 1; sub dl, cl; add rsp, 0x10; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000353dc: ror dword ptr [rdi], cl; push rdi; leave; mulsd xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000035475: ror dword ptr [rdi], cl; push rdi; leave; mulss xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x00000000000528c3: ror dword ptr [rdx], 1; add al, 0; movsxd rdx, dword ptr [rax + r12*4]; add rax, rdx; jmp rax; 
0x0000000000072a08: ror dword ptr [rsi - 0x40], 0x4e; ret; 
0x000000000008fdcf: ror dword ptr [rsi], cl; add byte ptr [rax], al; ret; 
0x0000000000072a07: ror qword ptr [rsi - 0x40], 0x4e; ret; 
0x0000000000021b9a: sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000003a7da: sahf; add dword ptr [rax], eax; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004df7d: sahf; and al, 0; pop rdx; ret; 
0x00000000000778f5: sahf; call qword ptr [rax + 3]; 
0x0000000000004ffb: sahf; hlt; sal esi, 0xfe; mov al, 0xb0; test al, 0x94; ret 0x88ad; 
0x000000000005b41e: sahf; mov ch, 0xfb; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x00000000000849ab: sahf; mov ecx, 0xbc9eba9e; sahf; mov edi, 0xc19ec09e; sahf; ret 0xc39e; 
0x00000000000849b1: sahf; mov edi, 0xc19ec09e; sahf; ret 0xc39e; 
0x0000000000093604: sahf; push 0x68b3fffc; cld; call rdi; 
0x0000000000093584: sahf; push 0x68bdfffc; cld; jmp rdx; 
0x000000000009361c: sahf; push 0x6c02fffc; cld; call qword ptr [rdx]; 
0x0000000000014c2d: sahf; ret 0x8341; 
0x00000000000849b7: sahf; ret 0xc39e; 
0x000000000001b037: sahf; ret; 
0x00000000000573c9: sal al, 0xf; mov cl, 0x17; ret; 
0x0000000000054989: sal al, 0xf; mov cl, 0x57; add al, 0xc1; call 0x1e5cc99; ret; 
0x0000000000056f56: sal al, 1; cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x56f3b; xor eax, eax; ret; 
0x0000000000057a37: sal al, 1; cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x57a19; xor eax, eax; ret; 
0x000000000003433b: sal bh, 0xd0; add eax, 2; ret; 
0x0000000000056f7d: sal bh, 0xd0; and eax, 0x10; ret; 
0x0000000000039306: sal bh, 0xd0; and eax, 0x22; add rsp, 0x10; pop rbx; ret; 
0x000000000005506d: sal bh, 0xd0; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005717a: sal bh, 0xd0; and eax, 0xb; ret; 
0x0000000000057d45: sal bh, 0xd0; and eax, 0xfffffffe; pop rdx; ret; 
0x0000000000041d5a: sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000023425: sal bh, 0xd8; pop rdx; ret; 
0x000000000002129d: sal bh, 0xd8; ret; 
0x000000000005820b: sal bh, 0xd8; test r9d, r9d; cmove eax, r8d; ret; 
0x0000000000027614: sal bh, 1; fsub dword ptr [rcx]; ret 0x8d48; 
0x00000000000280d4: sal bh, 1; fsub dword ptr [rcx]; sal byte ptr [rdx + 0x29], 1; ret 0x5389; 
0x0000000000043652: sal bl, 0xa5; ret; 
0x000000000004b38d: sal bl, 0xab; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3b0: sal bl, 0xab; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x0000000000035389: sal bl, 0xf; adc byte ptr [rip + 0x5d836], al; jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000032a02: sal bl, 0xf; adc byte ptr [rip + 0x60171], cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f009: sal bl, 0xf; adc dword ptr [rsp - 0x20], eax; ret; 
0x000000000002ef3c: sal bl, 0xf; adc dword ptr [rsp - 8], eax; ret; 
0x00000000000296d9: sal bl, 0xf; pop rdx; movsd qword ptr [rdi], xmm6; ret; 
0x000000000002a206: sal bl, 0xf; pop rsi; ret; 
0x000000000002f038: sal bl, 0xf; pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6b: sal bl, 0xf; pop rsi; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 4], xmm0; ret; 
0x000000000001d907: sal bl, 0xf; pop rsp; ret 0x3979; 
0x00000000000338ec: sal bl, 1; movups xmmword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x0000000000055c28: sal byte ptr [rax + rbx - 0x48], 0xda; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000004d663: sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x00000000000352a0: sal byte ptr [rax - 1], 1; ret 0x3941; 
0x00000000000335d3: sal byte ptr [rbp + 0x14], 1; movss dword ptr [rdi], xmm0; and eax, 0x80000000; mov dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000005aaf8: sal byte ptr [rbp + 0x18], 0x48; movsxd rdi, ebp; movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x0000000000053e4d: sal byte ptr [rbp + 0x1d], cl; xor eax, eax; ret; 
0x0000000000057ddd: sal byte ptr [rbp + 0x41], 0xb8; retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005571d: sal byte ptr [rbp + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000448ab: sal byte ptr [rbp + 0x56], 0xeb; ret 0x8948; 
0x0000000000056cf8: sal byte ptr [rbp + 0xa], 0x41; or dword ptr [rax], 4; ret; 
0x000000000005b1ba: sal byte ptr [rbp + 0xa], cl; lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x0000000000023529: sal byte ptr [rbp + 0xa], cl; mov eax, 0xfd; syscall; 
0x00000000000233c2: sal byte ptr [rbp + 0xd], 0x49; mov edx, ebx; mov eax, 0xe8; syscall; 
0x000000000002144f: sal byte ptr [rbp + 0xe], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000001968e: sal byte ptr [rbp + 0xf], 0x48; cmp ecx, edx; jne 0x19680; xor eax, eax; ret; 
0x000000000002335d: sal byte ptr [rbp + 0xf], cl; mov edi, 1; mov eax, 0xd5; syscall; 
0x0000000000056c9c: sal byte ptr [rbp + 4], 0x41; or dword ptr [rax], 8; ret; 
0x000000000004d6e8: sal byte ptr [rbp + 4], 1; or eax, 0xffffffff; ret; 
0x0000000000018e4d: sal byte ptr [rbp + 6], 1; test eax, eax; jne 0x18e40; mov edx, eax; sub eax, edx; ret; 
0x0000000000018767: sal byte ptr [rbp + 6], cl; ret; 
0x000000000003b95c: sal byte ptr [rbp + 7], 0x48; sub edx, edi; lea eax, [rdx + 1]; ret; 
0x000000000004b784: sal byte ptr [rbp + 9], 0x31; fild dword ptr [rax + 0xf72007d]; xchg eax, ebp; ret; 
0x000000000003f6bd: sal byte ptr [rbp + rax + 0x39], 0x58; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x0000000000054681: sal byte ptr [rbp + rax + 0x41], 0x89; shr bl, 0xc1; pop rbx; ret; 
0x000000000001b29c: sal byte ptr [rbp + rcx - 0x7d], 0xf8; add dh, byte ptr [rbp + 0x4d]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000003e3c1: sal byte ptr [rbp - 0x13], 0x31; rol byte ptr [rax - 0x6bf0ffc5], 0xc0; pop rbx; ret; 
0x000000000005b7cf: sal byte ptr [rbp - 0x13], 0xf; mov dh, 0xd0; sub eax, edx; ret; 
0x0000000000018e51: sal byte ptr [rbp - 0x14], 0x89; ret 0xd029; 
0x000000000006230a: sal byte ptr [rbp - 0x164a245b], 0x5b; ret 0x3956; 
0x0000000000017ba3: sal byte ptr [rbp - 0x16], cl; xor eax, eax; sub eax, edx; ret; 
0x0000000000017a18: sal byte ptr [rbp - 0x1b], 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000003f6a4: sal byte ptr [rbp - 0x1c], 0x48; mov eax, ebx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000017ca2: sal byte ptr [rbp - 0x1d], cl; add rsp, 0x28; sub rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000055404: sal byte ptr [rbp - 0x23], 0x58; pop rbx; pop rbp; ret; 
0x0000000000046286: sal byte ptr [rbp - 0x70], 0xeb; adc byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000018f77: sal byte ptr [rbp - 0xa], cl; sub rax, rdi; sar rax, 2; ret; 
0x0000000000038e70: sal byte ptr [rbp - 0xe], 0xeb; sbb dword ptr [rax - 0x77], ecx; ret 0xff48; 
0x0000000000049fcc: sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x0000000000059080: sal byte ptr [rbx + rax - 9], 0xd8; ret; 
0x000000000002df24: sal byte ptr [rbx + rbx*4 - 0xd], cl; movups xmm1, xmmword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x000000000005c7bc: sal byte ptr [rbx + rcx + 0x48], 0x8b; add al, 0x24; add rax, qword ptr [r8]; mov qword ptr [r8 + 0x58], rax; add rsp, 0x100; ret; 
0x0000000000056619: sal byte ptr [rbx + rdx + 0x48], 0x63; clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000055a16: sal byte ptr [rbx + rdx + 0x48], 0x8b; adc byte ptr [rax - 0x75], cl; js 0x55a28; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000350f6: sal byte ptr [rbx - 1], 1; ret 0x3941; 
0x000000000006bdda: sal byte ptr [rbx], 1; sal dword ptr [rbx], cl; ret; 
0x000000000004614b: sal byte ptr [rcx + rbx + 0x48], 0x8b; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000004be1b: sal byte ptr [rcx + rcx + 0x48], 0x89; fistp word ptr [rbx - 0x17]; and eax, 0x5bfffffb; ret; 
0x0000000000024a8b: sal byte ptr [rcx + rcx + 0x48], 0x89; fistp word ptr [rbx - 0x17]; or dword ptr [rax], ebp; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000055954: sal byte ptr [rcx + rcx - 1], 0xc8; mov dword ptr [rip + 0x242679], eax; ret; 
0x00000000000572a1: sal byte ptr [rcx + rdx + 0x48], 0x63; clc; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x0000000000023b94: sal byte ptr [rcx + rdx - 0x46], 1; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000007c0e0: sal byte ptr [rcx - 0x3f], 0x71; ret 0xc471; 
0x000000000006d423: sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x00000000000296d7: sal byte ptr [rcx], 0xc0; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000046c59: sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x000000000004b2c8: sal byte ptr [rcx], cl; leave; call 0x4b501; add rsp, 0x28; ret; 
0x000000000003a74e: sal byte ptr [rcx], cl; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000004e4e2: sal byte ptr [rcx], cl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000004ba30: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000049c3a: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call rax; 
0x000000000004c13a: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000004b923: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xe8; mov rdi, r9; syscall; 
0x0000000000050d67: sal byte ptr [rcx], cl; test byte ptr [rcx + rcx*4 - 0x11], 0x41; call qword ptr [rbp + 0x48]; 
0x000000000001af77: sal byte ptr [rdi + rax + 0x31], 0xf6; call 0x1ae5b; mov eax, ebx; pop rbx; ret; 
0x000000000004bf5a: sal byte ptr [rdi + rax + 0x48], cl; mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000024c2c: sal byte ptr [rdi + rcx + 0x48], 0x89; sbb bh, al; or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000004a013: sal byte ptr [rdi + rsi + 0x48], 0xff; ret; 
0x000000000007dc3e: sal byte ptr [rdi - 0x3f], 0x77; ret 0xc377; 
0x0000000000092b70: sal byte ptr [rdi], cl; stc; jmp rdi; 
0x00000000000280d8: sal byte ptr [rdx + 0x29], 1; ret 0x5389; 
0x000000000002e4bd: sal byte ptr [rdx + rbx + 0x66], 0xf; sub cl, al; ret; 
0x0000000000038968: sal byte ptr [rdx + rcx + 0x48], 0xff; ret; 
0x000000000005c66c: sal byte ptr [rdx + rcx + 0x48], 3; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000049c36: sal byte ptr [rdx + rdx + 0x31], 0xd2; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000003558c: sal byte ptr [rsi + 5], 1; mulsd xmm0, xmm1; ret; 
0x000000000003c5c2: sal byte ptr [rsi + rax - 0x7d], 1; dec byte ptr [rdx]; je 0x3c5d6; ret; 
0x000000000005aa53: sal byte ptr [rsi + rcx - 0x41], 1; add byte ptr [rax], al; add byte ptr [rax + 0x3c], bh; syscall; 
0x0000000000037f12: sal byte ptr [rsi + rdx*2 - 0x80], 0x38; add byte ptr [rax - 0x77], cl; ret; 
0x000000000002b984: sal byte ptr [rsi + rdx*4 - 0xd], cl; movups xmm1, xmmword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000007d97e: sal byte ptr [rsi - 0x3f], 0x76; ret; 
0x0000000000017b58: sal byte ptr [rsp + rax + 0x39], 0xc6; jne 0x17b50; mov rax, rbx; pop rbx; ret; 
0x0000000000049fae: sal byte ptr [rsp + rax + 0x48], 0x89; js 0x49fbd; ret; 
0x00000000000548be: sal byte ptr [rsp + rax - 0x10], 0x41; dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x000000000003d8b6: sal byte ptr [rsp + rax - 0x75], 0x54; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000026aee: sal byte ptr [rsp + rbx - 0x77], 1; ret 0xdaf7; 
0x00000000000190e1: sal byte ptr [rsp + rcx + 0x48], 0x39; sal dword ptr [rbp - 0x29], 1; xor eax, eax; ret; 
0x000000000004b689: sal byte ptr [rsp + rdx + 0x48], 0x63; std; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x0000000000035339: sal dl, 0xf; adc byte ptr [rip + 0x5cdde], al; jne 0x35348; movapd xmm0, xmm1; ret; 
0x00000000000340b1: sal dl, 0xf; pop rax; ret 0x840f; 
0x000000000002a74a: sal dl, 0xf; pop rcx; add eax, 0x674d5; addsd xmm0, qword ptr [rip + 0x67925]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003088e: sal dl, 0xf; pop rcx; ret; 
0x0000000000037675: sal dl, 0xf; pop rcx; sal edx, 0xf; pop rax; ret 0x29eb; 
0x000000000002c33f: sal dl, 0xf; sub dl, al; divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002c343: sal dl, 1; divps xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000033846: sal dl, 1; movups xmmword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000002eb54: sal dl, cl; addps xmm1, xmm3; addsd xmm1, xmm2; movsd qword ptr [rsi], xmm1; ret; 
0x000000000008d0e9: sal dword ptr [r13 + 0x13], 1; push rdx; mov ch, 0xbf; lahf; fsubrp st(0); ret; 
0x000000000002e516: sal dword ptr [rax + rcx - 0x7b], 0xd2; jns 0x2e535; movaps xmm0, xmm1; ret; 
0x00000000000657b1: sal dword ptr [rax - 0x3e], 0x7e; ret; 
0x0000000000092ab0: sal dword ptr [rax], 1; stc; call rcx; 
0x0000000000092abc: sal dword ptr [rax], 1; stc; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab0: sal dword ptr [rax], 1; stc; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092ac0: sal dword ptr [rax], 1; stc; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab4: sal dword ptr [rax], 1; stc; jmp rdx; 
0x000000000008d0ea: sal dword ptr [rbp + 0x13], 1; push rdx; mov ch, 0xbf; lahf; fsubrp st(0); ret; 
0x0000000000054218: sal dword ptr [rbp + 0xb], 1; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x00000000000171e0: sal dword ptr [rbp + 0xd], 0x48; cmp edx, eax; jne 0x171d0; xor eax, eax; ret; 
0x0000000000019693: sal dword ptr [rbp - 0x16], 1; xor eax, eax; ret; 
0x00000000000190e6: sal dword ptr [rbp - 0x29], 1; xor eax, eax; ret; 
0x000000000002aa90: sal dword ptr [rbx + rcx - 0xd], 0xf; adc byte ptr [rip + 0x65f35], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002a984: sal dword ptr [rbx + rcx - 0xe], 0xf; adc byte ptr [rip + 0x66031], cl; xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000006bddc: sal dword ptr [rbx], cl; ret; 
0x000000000004bf71: sal dword ptr [rcx + rcx + 0x48], 1; sub edx, ecx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x0000000000054c2a: sal dword ptr [rdi + 0xd], 1; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi], rsi; xor eax, eax; ret; 
0x0000000000029cd6: sal dword ptr [rdi + rsi*2 - 0xe], 0xf; adc byte ptr [rip + 0x66cdf], cl; xorps xmm0, xmm1; ret; 
0x000000000007dc40: sal dword ptr [rdi - 0x3e], 0x77; ret; 
0x000000000002b8dd: sal dword ptr [rsi + 0x26], 0xf2; addps xmm0, xmmword ptr [rip + 0x66348]; ret; 
0x000000000002e65e: sal dword ptr [rsi + rcx - 0x7b], 0xd2; movaps xmm0, xmm1; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x00000000000335fb: sal ebx, 0xf; adc dword ptr [rdi], ecx; ret; 
0x000000000003547c: sal ebx, 0xf; adc dword ptr [rsp - 4], edx; ret; 
0x000000000002c78d: sal ebx, 0xf; pop rax; ret 0x7e9; 
0x000000000002c8cd: sal ebx, 0xf; pop rax; ret 0x81c3; 
0x000000000002aa19: sal ebx, 0xf; pop rax; ret 0x94e8; 
0x000000000002a413: sal ebx, 0xf; pop rax; ret 0xebe8; 
0x000000000002c73c: sal ebx, 0xf; pop rax; ret; 
0x00000000000338e8: sal ebx, 0xf; pop rax; sal bl, 1; movups xmmword ptr [rsp - 4], xmm2; movaps xmm0, xmm1; ret; 
0x000000000002aa15: sal ebx, 0xf; pop rax; sal ebx, 0xf; pop rax; ret 0x94e8; 
0x000000000003066f: sal ebx, 0xf; pop rcx; add eax, 0x62730; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002897a: sal ebx, 0xf; pop rcx; ret 0x66c3; 
0x000000000001df06: sal ebx, 0xf; pop rcx; ret; 
0x000000000002db68: sal ebx, 0xf; pop rsp; ret 0xff3; 
0x0000000000035657: sal ebx, 1; divps xmm0, xmm2; ret; 
0x000000000001b94d: sal edx, 0xf; adc byte ptr [rip + 0x7506a], cl; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001a01c: sal edx, 0xf; adc byte ptr [rip + 0x77c6b], cl; addsd xmm2, xmm3; mulsd xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000029699: sal edx, 0xf; adc dword ptr [rdi], eax; ret; 
0x000000000003358f: sal edx, 0xf; adc dword ptr [rdi], ecx; ret; 
0x00000000000353e3: sal edx, 0xf; adc dword ptr [rsp - 8], edx; ret; 
0x000000000002a90a: sal edx, 0xf; pop rax; ret 0x19e8; 
0x0000000000037679: sal edx, 0xf; pop rax; ret 0x29eb; 
0x0000000000032bef: sal edx, 0xf; pop rax; ret 0x4866; 
0x000000000002c34b: sal edx, 0xf; pop rax; ret 0x81c3; 
0x000000000002a365: sal edx, 0xf; pop rax; ret 0x94e8; 
0x000000000002c205: sal edx, 0xf; pop rax; ret 0x9e9; 
0x0000000000029af5: sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000002c1b0: sal edx, 0xf; pop rax; ret; 
0x0000000000033842: sal edx, 0xf; pop rax; sal dl, 1; movups xmmword ptr [rsp - 8], xmm2; movapd xmm0, xmm1; ret; 
0x000000000002a906: sal edx, 0xf; pop rax; sal edx, 0xf; pop rax; ret 0x19e8; 
0x00000000000300d8: sal edx, 0xf; pop rcx; add eax, 0x61d17; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002d6c9: sal edx, 0xf; pop rcx; and al, 0xf0; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000028944: sal edx, 0xf; pop rcx; ret 0x48c3; 
0x0000000000019ea5: sal edx, 0xf; pop rcx; ret; 
0x0000000000030c06: sal edx, 0xf; pop rsi; ret 0x6deb; 
0x00000000000331cb: sal edx, 1; addps xmm2, xmm5; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000028848: sal edx, 1; addps xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x00000000000355a9: sal edx, 1; divps xmm0, xmm2; ret; 
0x0000000000029a73: sal edx, cl; addps xmm0, xmm2; ret; 
0x000000000001a028: sal edx, cl; mulps xmm0, xmm1; mulsd xmm1, xmm2; ret; 
0x0000000000028844: sal edx, cl; subps xmm2, xmm1; addsd xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000004ffd: sal esi, 0xfe; mov al, 0xb0; test al, 0x94; ret 0x88ad; 
0x000000000004a902: sar ah, 0xff; add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a969: sar bl, 0xff; pop rdi; ret; 
0x000000000005a8c3: sar bl, 0xff; pop rdx; ret; 
0x0000000000024ba1: sar bl, 5; add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret; 
0x000000000005a97c: sar bl, cl; dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x000000000004b317: sar byte ptr [rax + 0x102], cl; syscall; 
0x000000000004b35c: sar byte ptr [rax + 0x103], cl; syscall; 
0x000000000005acd7: sar byte ptr [rax + 0x104], cl; syscall; 
0x000000000004b5c4: sar byte ptr [rax + 0x105], cl; mov rsi, r9; syscall; 
0x000000000005b5bd: sar byte ptr [rax + 0x107], cl; syscall; 
0x000000000005b5bd: sar byte ptr [rax + 0x107], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005b26c: sar byte ptr [rax + 0x108], cl; syscall; 
0x000000000005af91: sar byte ptr [rax + 0x109], cl; syscall; 
0x000000000004afbe: sar byte ptr [rax + 0x10c], cl; syscall; 
0x0000000000023bd4: sar byte ptr [rax + 0x113], cl; syscall; 
0x00000000000237ca: sar byte ptr [rax + 0x130], cl; syscall; 
0x0000000000023336: sar byte ptr [rax + 0x146], cl; syscall; 
0x000000000005aace: sar byte ptr [rax + 0x1b7], cl; syscall; 
0x000000000003a414: sar byte ptr [rax + 0x1c], cl; syscall; 
0x000000000003a414: sar byte ptr [rax + 0x1c], cl; syscall; neg eax; ret; 
0x0000000000022721: sar byte ptr [rax + 0x1d], cl; syscall; 
0x0000000000022721: sar byte ptr [rax + 0x1d], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000226d3: sar byte ptr [rax + 0x1e], cl; syscall; 
0x00000000000406d6: sar byte ptr [rax + 0x30], cl; syscall; 
0x000000000003b4b8: sar byte ptr [rax + 0x31], cl; syscall; 
0x000000000003df4c: sar byte ptr [rax + 0x32], cl; syscall; 
0x00000000000406b3: sar byte ptr [rax + 0x36], cl; syscall; 
0x00000000000406b3: sar byte ptr [rax + 0x36], cl; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000003d581: sar byte ptr [rax + 0x37], 0x89; ret; 
0x000000000003d4b4: sar byte ptr [rax + 0x37], cl; syscall; 
0x000000000003d4b4: sar byte ptr [rax + 0x37], cl; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x0000000000023d32: sar byte ptr [rax + 0x3d], cl; syscall; 
0x0000000000023d32: sar byte ptr [rax + 0x3d], cl; syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000002268f: sar byte ptr [rax + 0x40], cl; syscall; 
0x000000000002268f: sar byte ptr [rax + 0x40], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000022660: sar byte ptr [rax + 0x42], cl; syscall; 
0x0000000000022660: sar byte ptr [rax + 0x42], cl; syscall; movsxd rdi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000005a924: sar byte ptr [rax + 0x5c], cl; syscall; 
0x000000000005a924: sar byte ptr [rax + 0x5c], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000005ac6a: sar byte ptr [rax + 0x5d], cl; sub rsp, 0x38; mov rsi, rbx; syscall; 
0x000000000005af61: sar byte ptr [rax + 0x5e], cl; syscall; 
0x000000000005af61: sar byte ptr [rax + 0x5e], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000235a3: sar byte ptr [rax + 0x67], cl; syscall; 
0x00000000000235a3: sar byte ptr [rax + 0x67], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x00000000000396f8: sar byte ptr [rax + 0x8d], cl; syscall; 
0x000000000002225c: sar byte ptr [rax + 0xa], 0x48; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000021210: sar byte ptr [rax + 0xa], 1; ret; 
0x00000000000239b7: sar byte ptr [rax + 0xb3], cl; syscall; 
0x0000000000023a03: sar byte ptr [rax + 0xd8], cl; syscall; 
0x0000000000023389: sar byte ptr [rax + 0xe9], cl; syscall; 
0x0000000000023389: sar byte ptr [rax + 0xe9], cl; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004a82d: sar byte ptr [rax + 0xe], cl; syscall; 
0x0000000000023549: sar byte ptr [rax + 0xfe], cl; syscall; 
0x0000000000040701: sar byte ptr [rax + 4], 0x8b; push rsp; and al, 0xc; mov eax, edx; add rsp, 0x18; ret; 
0x000000000004c346: sar byte ptr [rax + 5], 0x48; mov dword ptr [rbx], eax; xor edx, edx; mov eax, edx; pop rbx; ret; 
0x000000000005afa8: sar byte ptr [rax + 8], cl; syscall; 
0x000000000007defc: sar byte ptr [rax - 0x3e], 0x78; ret; 
0x000000000002f000: sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef33: sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000007edd6: sar byte ptr [rbp - 0x3f], 0x7d; ret 0xc37d; 
0x000000000005abfc: sar byte ptr [rbp - 0x7eb70005], 0xc4; mov eax, 0x5b000004; pop rbp; pop r12; pop r13; ret; 
0x000000000009132b: sar byte ptr [rbx + 0x59], 0x87; ret 0x9d9b; 
0x000000000008b186: sar byte ptr [rbx + rbx*4], cl; sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x000000000007e6d8: sar byte ptr [rbx - 0x3e], 0x7b; ret; 
0x000000000003281e: sar byte ptr [rcx + 0x10], 0xf2; subps xmm1, xmm0; xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003a6dd: sar byte ptr [rcx + 0x16], 0x48; mov edi, dword ptr [rsp]; call 0x551c4; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004d4df: sar byte ptr [rcx + 0x18], 0xeb; adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000002e51a: sar byte ptr [rcx + 0x18], cl; movaps xmm0, xmm1; ret; 
0x0000000000056cd4: sar byte ptr [rcx + 0x20], 0x48; lea esi, [rsp - 0x10]; lea rdx, [rsp - 8]; xor edi, edi; mov eax, 0x112; syscall; 
0x000000000005464c: sar byte ptr [rcx + 0x22], 0x49; movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004366e: sar byte ptr [rcx + 0x54], 0xf3; stosd dword ptr [rdi], eax; ret; 
0x00000000000558f1: sar byte ptr [rcx + 0xa], 0xc7; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x000000000002a85e: sar byte ptr [rcx + 0xb], 0xf3; movups xmm1, xmmword ptr [rip + 0x66167]; xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000003542f: sar byte ptr [rcx + 0xb], cl; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x00000000000354c3: sar byte ptr [rcx + 0xb], cl; movss xmm1, dword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x00000000000548d9: sar byte ptr [rcx + 0xc], 0xf3; stosd dword ptr [rdi], eax; ret; 
0x0000000000032a14: sar byte ptr [rcx + 0xc], 0xf3; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000005939a: sar byte ptr [rcx + 0xf], 0xe8; ret; 
0x00000000000482c9: sar byte ptr [rcx - 0x27], 0xeb; ret 0xc748; 
0x000000000005a27f: sar byte ptr [rcx - 0x72], 0x48; mov eax, dword ptr [rsp]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000050a7d: sar byte ptr [rcx], 1; ret; 
0x0000000000024063: sar byte ptr [rcx], cl; sar dword ptr [rax - 1], 0xf; xchg eax, edi; ret 0x430f; 
0x000000000005ad25: sar byte ptr [rdi + 0x4a], cl; call 0x546c5; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000004a61e: sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; 
0x0000000000055c4e: sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a61e: sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; ret; 
0x000000000003cade: sar byte ptr [rdi + 3], 0xc6; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x000000000007f28e: sar byte ptr [rdi - 0x3e], 0x7f; ret; 
0x000000000006d429: sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x000000000007e4d0: sar byte ptr [rdx - 0x3f], 0x7a; ret 0xc37a; 
0x0000000000019181: sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x00000000000223fc: sar byte ptr [rip + 0xc00], cl; je 0x22407; or edx, 0xffffffff; mov eax, edx; pop rdx; ret; 
0x000000000002de7c: sar byte ptr [rsi + 0x13], 1; ucomisd xmm2, xmm4; addsd xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x0000000000055754: sar byte ptr [rsi + 0x83], cl; mov rax, rbp; syscall; 
0x00000000000556ee: sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000056c81: sar byte ptr [rsi + 6], cl; mov eax, 0xca; syscall; 
0x0000000000082b2e: sar byte ptr [rsi - 0x3f], 0x7e; ret 0xc97e; 
0x00000000000448a6: sar ch, cl; dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0x56], 0xeb; ret 0x8948; 
0x0000000000092bf8: sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x000000000005ab00: sar dword ptr [rax + 0x10d], cl; mov rsi, r12; syscall; 
0x000000000003a376: sar dword ptr [rax + 0x19], cl; syscall; 
0x0000000000024065: sar dword ptr [rax - 1], 0xf; xchg eax, edi; ret 0x430f; 
0x000000000007edd8: sar dword ptr [rbp - 0x3e], 0x7d; ret; 
0x00000000000913e6: sar dword ptr [rbp - 0x3f6c79ee], 1; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x00000000000470e4: sar dword ptr [rbx + rbp], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000002e665: sar dword ptr [rcx + 0x14], 0xf3; movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x00000000000481d5: sar dword ptr [rdi + 7], 0x7c; or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x00000000000470bb: sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000008d8be: sar dword ptr [rdi], cl; ret 0x9725; 
0x000000000007e4d2: sar dword ptr [rdx - 0x3e], 0x7a; ret; 
0x000000000004bce9: sar eax, 0x1f; mov qword ptr [rbx + 0x10], rdx; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000004227c: sar eax, 0x1f; pop r12; pop r13; ret; 
0x00000000000230b4: sar eax, 0x1f; ret; 
0x0000000000018ef1: sar eax, 2; pop rbp; pop r12; ret; 
0x0000000000018ed6: sar eax, 2; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018f7e: sar eax, 2; ret; 
0x00000000000212f7: sar eax, cl; and eax, 1; cmp eax, 1; sbb eax, eax; add eax, 2; ret; 
0x0000000000020e3f: sar eax, cl; and eax, 1; ret; 
0x000000000003a7e2: sar ebp, 0xff; add rsp, 0x18; ret; 
0x0000000000090f47: sar ebx, 0x3f; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp eax, 0x4a121583; ret; 
0x000000000005a8b1: sar ebx, 0xff; pop rdx; ret; 
0x000000000004e5e7: sar edi, cl; lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000005336e: sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x0000000000053673: sar edx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x000000000005a97b: sar r11b, cl; dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x0000000000018ef0: sar rax, 2; pop rbp; pop r12; ret; 
0x0000000000018ed5: sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018f7d: sar rax, 2; ret; 
0x0000000000053672: sar rdx, 0x3f; xor rax, rdx; sub rax, rdx; ret; 
0x00000000000407a2: sbb ah, byte ptr [rdx - 3]; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000002e4bf: sbb ah, byte ptr [rsi + 0xf]; sub cl, al; ret; 
0x000000000003a1c8: sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000003a416: sbb al, 0; add byte ptr [rax], al; syscall; neg eax; ret; 
0x0000000000002e5a: sbb al, 0; sbb al, 0x7d; ret 0x432; 
0x000000000001cd5d: sbb al, 0x21; ret 0x4489; 
0x000000000001bda0: sbb al, 0x24; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001b653: sbb al, 0x24; movq xmm0, qword ptr [rsp]; add rsp, 0x30; pop rbx; ret; 
0x00000000000224fc: sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000003af52: sbb al, 0x24; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022543: sbb al, 0x24; pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x00000000000273c0: sbb al, 0x39; ret 0xc875; 
0x000000000002714a: sbb al, 0x39; ret 0xed75; 
0x00000000000051cf: sbb al, 0x46; ret; 
0x000000000004e671: sbb al, 0x48; mov eax, edx; syscall; 
0x000000000003a5e8: sbb al, 0x49; movsxd rdi, esp; mov eax, 0xf4; mov rsi, r13; syscall; 
0x000000000005aac5: sbb al, 0x4c; movsxd rdx, ecx; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1b7; syscall; 
0x000000000000592b: sbb al, 0x56; jbe 0x590d; mov al, 0xd5; pop rsp; ret 0x9ec0; 
0x000000000008cd01: sbb al, 0x56; movabs byte ptr [0x9bd295f33fed5fff], al; sub byte ptr [rbx + rdi*2], al; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x00000000000911c4: sbb al, 0x6c; xor dword ptr [rdi + rbx*2 - 0x7e], eax; jecxz 0x91198; push r15; sbb eax, 0x153f5945; ret; 
0x000000000001b7bf: sbb al, 0x74; sbb byte ptr [rdi], cl; push rdi; ret 0xf66; 
0x0000000000002e5c: sbb al, 0x7d; ret 0x432; 
0x0000000000026af0: sbb al, 0x89; ret 0xdaf7; 
0x000000000007144a: sbb al, 0x8d; cwde; pop r15; pop rax; ret; 
0x0000000000078b0e: sbb al, 0x9a; adc al, 0x9a; ret 0xb9a; 
0x0000000000005987: sbb al, 0xb3; adc eax, 0x12a07c9a; ret 0x9dba; 
0x0000000000021fbb: sbb al, 0xc2; call 0x5468b; call rbx; 
0x0000000000021cfe: sbb al, 0xd0; mov qword ptr [rip + 0x276069], rcx; pop rbx; ret; 
0x000000000001da12: sbb al, 0xe8; ret 0x198; 
0x000000000001ba22: sbb al, 0xf3; movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000006ba8e: sbb al, 0xff; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x00000000000233ff: sbb al, 1; add byte ptr [rax], al; syscall; 
0x0000000000046c57: sbb al, 1; sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x0000000000080633: sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x00000000000033d7: sbb al, byte ptr [rax]; sbb byte ptr [rax], ah; and dword ptr [rax], esi; or byte ptr [rax - 0x60], cl; ret 0xf140; 
0x0000000000080634: sbb al, byte ptr [rbp + 0x754f5473]; ret; 
0x0000000000023b7e: sbb al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000020ea4: sbb al, byte ptr [rdi]; add byte ptr [rax + 0x63], cl; adc al, 0xb0; add rax, rdx; jmp rax; 
0x0000000000038a7a: sbb al, ch; insd dword ptr [rdi], dx; and al, 2; add byte ptr [rcx], bh; ret; 
0x000000000004beaa: sbb al, ch; jg 0x4bee3; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004eedc: sbb al, ch; jp 0x4ef20; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004da22: sbb al, ch; lodsd eax, dword ptr [rsi]; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004eca9: sbb al, ch; out 0x40, al; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004edbe: sbb al, ch; outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000004ef66: sbb al, ch; sti; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000002205b: sbb al, ch; sub ah, byte ptr [rsi]; add eax, dword ptr [rax]; mov rdi, rbp; call rbx; 
0x0000000000024c31: sbb bh, al; or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000006ba8a: sbb bh, bh; sbb edi, edi; sbb al, 0xff; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x0000000000083171: sbb bl, 0x80; ret 0xc480; 
0x000000000005af5b: sbb bl, al; mov esi, esi; push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x000000000005ad3b: sbb bl, al; movsxd rdi, edi; push rax; mov eax, 0x4d; syscall; 
0x0000000000023c05: sbb bl, al; movsxd rsi, esi; push rax; mov eax, 0xa7; syscall; 
0x000000000004396e: sbb bl, al; pop rdx; mov eax, 0x3a; syscall; 
0x000000000005b023: sbb bl, al; push rax; mov eax, 0x16; syscall; 
0x000000000005b46f: sbb bl, al; push rax; mov eax, 0x4c; syscall; 
0x000000000005b3fb: sbb bl, al; push rax; mov eax, 0x58; syscall; 
0x000000000003a3b6: sbb bl, al; push rax; mov eax, 0x96; syscall; 
0x000000000007244d: sbb bl, byte ptr [rbx + 0x2c]; mov dh, 0xc0; and dl, ah; ret; 
0x000000000004d4e1: sbb bl, ch; adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000003a749: sbb bl, ch; add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000005b7a7: sbb bl, ch; xlatb; lea rax, [rip + 0x227f]; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x0000000000028972: sbb bl, dh; mulps xmm1, xmm2; mulss xmm0, xmm1; mulss xmm0, xmm2; ret; 
0x0000000000005309: sbb bl, dh; or edi, dword ptr [rdi + 0x7e]; clc; jmp rdi; 
0x000000000002453c: sbb byte ptr [r11 + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000004e296: sbb byte ptr [r8 + 0x29], cl; ret 0x8d48; 
0x000000000004a272: sbb byte ptr [r9 + rbp - 0x40], al; ret; 
0x00000000000389eb: sbb byte ptr [rax + 0x10], bh; syscall; 
0x000000000002dd30: sbb byte ptr [rax + 0x21], cl; ret 0xf66; 
0x0000000000041893: sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004e297: sbb byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000022657: sbb byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x42; syscall; 
0x00000000000560a1: sbb byte ptr [rax + 0x63], cl; jnp 0x560d6; mov eax, 0x90; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x000000000005aafa: sbb byte ptr [rax + 0x63], cl; std; movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x0000000000023986: sbb byte ptr [rax + 0x65], bh; syscall; 
0x000000000001b2e9: sbb byte ptr [rax + 0x81], bh; syscall; 
0x00000000000206ae: sbb byte ptr [rax + 0xc493], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000055c2a: sbb byte ptr [rax + 0xda], bh; mov rdi, rbp; syscall; 
0x000000000005a422: sbb byte ptr [rax + 0xe], bh; mov rdx, rdi; syscall; 
0x000000000004e6d5: sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000021472: sbb byte ptr [rax + rdi + 0x48], bh; movsxd rdi, dword ptr [rdi + 8]; mov edx, 0x800; mov eax, 0xd9; syscall; 
0x000000000003f96a: sbb byte ptr [rax - 0x67], cl; idiv rcx; add rax, rsi; ret; 
0x000000000005a41d: sbb byte ptr [rax - 0x73], cl; je 0x5a446; sbb byte ptr [rax + 0xe], bh; mov rdx, rdi; syscall; 
0x0000000000056b68: sbb byte ptr [rax - 0x75], cl; and byte ptr [r8 - 0x7f], r9b; ret 0x88; 
0x000000000001fdf3: sbb byte ptr [rax - 0x76b79bad], cl; ret 0xc148; 
0x000000000001f644: sbb byte ptr [rax - 0x76b7acad], cl; ret 0xc148; 
0x000000000001ef8c: sbb byte ptr [rax - 0x76cbdbac], cl; ret 0xeac1; 
0x000000000001ef69: sbb byte ptr [rax - 0x76cfdbac], cl; ret 0xeac1; 
0x000000000004c32d: sbb byte ptr [rax - 0x77], cl; call 0x5c462090; pop r13; ret; 
0x00000000000169f1: sbb byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000049c0a: sbb byte ptr [rax - 0x77], cl; out dx, al; mov rdi, rbx; pop rbx; pop rbp; jmp rcx; 
0x000000000005d8b4: sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; test dword ptr [rsi + 0x5bfffffe], ebx; pop rbp; pop r12; ret; 
0x000000000005b1b7: sbb byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xa], cl; lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000005eb6c: sbb byte ptr [rax - 0x7d], cl; ret; 
0x00000000000033d9: sbb byte ptr [rax], ah; and dword ptr [rax], esi; or byte ptr [rax - 0x60], cl; ret 0xf140; 
0x0000000000034f37: sbb byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x00000000000569aa: sbb byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x111; syscall; 
0x0000000000049cc5: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000057d4e: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; ret; 
0x0000000000055b89: sbb byte ptr [rax], al; add byte ptr [rax], al; xor edi, edi; mov eax, 0x111; syscall; 
0x00000000000050b8: sbb byte ptr [rax], cl; ret 0x8376; 
0x00000000000148f3: sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000022fd0: sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000002f8f2: sbb byte ptr [rbx + 0x5d], bl; divss xmm6, xmm0; movaps xmm0, xmm6; ret; 
0x0000000000021a00: sbb byte ptr [rbx + 0x5d], bl; jmp rax; 
0x000000000002453d: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000000148bf: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000022964: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000042279: sbb byte ptr [rbx + 0x5d], bl; sar eax, 0x1f; pop r12; pop r13; ret; 
0x000000000004a312: sbb byte ptr [rbx + 0x5d], bl; sub eax, r8d; pop r12; ret; 
0x000000000003da08: sbb byte ptr [rbx + 0x8777ffa], al; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000000047949: sbb byte ptr [rbx], al; xchg eax, esp; and al, 0xb4; add byte ptr [rax], al; add byte ptr [rbx + 0x39742444], cl; ret 0x9489; 
0x0000000000086e21: sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x000000000004a273: sbb byte ptr [rcx + rbp - 0x40], al; ret; 
0x0000000000052ec7: sbb byte ptr [rcx - 0x3a], al; add byte ptr [rax], al; mov rsi, r9; call 0x50c60; add rsp, 0x108; ret; 
0x000000000002388c: sbb byte ptr [rcx - 0x77], cl; ret 0x8d48; 
0x000000000003c5ef: sbb byte ptr [rcx - 2], al; ret; 
0x000000000004b538: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000003a538: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000021cc4: sbb byte ptr [rcx], dh; fisttp dword ptr [rax - 1]; ret 0x8348; 
0x000000000005588a: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000055c4c: sbb byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; 
0x0000000000055c4c: sbb byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000022530: sbb byte ptr [rdi], 0; add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x000000000002344c: sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000001b7c1: sbb byte ptr [rdi], cl; push rdi; ret 0xf66; 
0x000000000003568f: sbb byte ptr [rdi], cl; sub cl, al; divss xmm0, xmm1; ret; 
0x000000000002e51c: sbb byte ptr [rdi], cl; sub cl, al; ret; 
0x0000000000040fbf: sbb byte ptr [rdx + 0x59], bl; add rsp, 0x28; ret; 
0x0000000000059879: sbb byte ptr [rdx + 0x63], cl; adc al, 0x90; add rax, rdx; jmp rax; 
0x000000000000492b: sbb byte ptr [rdx + 7], dh; scasb al, byte ptr [rdi]; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x0000000000021946: sbb byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax + 7], bh; mov rdi, r8; mov rdx, rcx; syscall; 
0x0000000000017a69: sbb byte ptr [rdx], bh; pop rbx; cmovne rax, rdx; ret; 
0x00000000000059df: sbb byte ptr [rdx], ch; ret; 
0x00000000000921e3: sbb byte ptr [rsi + 0x3e], ah; mov ebx, 0x3f; cmp dl, 0xd4; ret; 
0x000000000001ba65: sbb byte ptr [rsi + 0xf], ah; sub al, dl; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x00000000000355e1: sbb byte ptr [rsi + 0xf], ah; sub cl, al; divsd xmm0, xmm1; ret; 
0x0000000000083177: sbb cl, 0x80; int 0x80; 
0x000000000001c6d0: sbb cl, bl; leave; ret; 
0x0000000000073483: sbb dl, 0x80; ret; 
0x000000000002893c: sbb dl, dh; mulps xmm1, xmm2; mulsd xmm0, xmm1; mulsd xmm0, xmm2; ret; 
0x0000000000042789: sbb dword ptr [rax + 0x25], 0; pop rbx; ret; 
0x000000000005fc23: sbb dword ptr [rax + 0x79], esp; ret 0x819; 
0x00000000000518e9: sbb dword ptr [rax + rax], eax; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000002e84c: sbb dword ptr [rax - 0x46], ecx; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000004614d: sbb dword ptr [rax - 0x75], ecx; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000038e74: sbb dword ptr [rax - 0x77], ecx; ret 0xff48; 
0x000000000005af52: sbb dword ptr [rax], eax; add byte ptr [rax], al; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003a378: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x00000000000355a3: sbb dword ptr [rbp + rax - 0x2ea8f100], esi; divsd xmm0, xmm2; ret; 
0x00000000000738fc: sbb dword ptr [rbx + 0x3f], edx; push rbx; push rbx; push rbx; ret; 
0x000000000002c88b: sbb dword ptr [rbx + 6], esp; add byte ptr [rbp - 0xcf48b25], al; movups xmm1, xmmword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000001917c: sbb dword ptr [rbx - 0x75], 0x10; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000008b905: sbb dword ptr [rcx + 0x13a8e5bc], ebx; ret; 
0x0000000000019788: sbb dword ptr [rcx - 0x7d], ecx; ret; 
0x0000000000042783: sbb dword ptr [rcx], eax; add byte ptr [rax - 0x73], cl; add eax, 0x255883; pop rbx; ret; 
0x00000000000233b2: sbb dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000049c4a: sbb dword ptr [rcx], esi; idiv byte ptr [rax + 0x135]; mov rdi, rbx; mov rdx, rsi; syscall; 
0x0000000000058002: sbb dword ptr [rdi + rcx + 0x45], eax; fadd dword ptr [rcx + 0x69]; ret; 
0x000000000001fc86: sbb dword ptr [rdi], -0x39; and al, 0x19; int 0xe0; pop rbx; ret; 
0x0000000000020527: sbb dword ptr [rdi], 0x48; mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x00000000000605fb: sbb dword ptr [rdx + rcx*4 + 0x6ae402fb], ecx; ret; 
0x00000000000239e1: sbb dword ptr [rdx], edx; sub byte ptr [rdi - 0x11e2153], bh; mov eax, 0xa9; syscall; 
0x0000000000020cff: sbb dword ptr [rsi + 0xb], esi; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000003145f: sbb dword ptr [rsi], eax; add byte ptr [rax + 0x63], cl; add al, 0x82; add rdx, rax; jmp rdx; 
0x00000000000715ba: sbb dword ptr [rsi], edx; ret; 
0x00000000000911d2: sbb eax, 0x153f5945; ret; 
0x000000000006ba90: sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x000000000005c58d: sbb eax, 0x23b9a6; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005fc1e: sbb eax, 0x39260f36; sbb dword ptr [rax + 0x79], esp; ret 0x819; 
0x000000000005523d: sbb eax, 0x39480000; ret; 
0x00000000000427dc: sbb eax, 0x39b80001; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8948c085; ret; 
0x000000000005fb7d: sbb eax, 0x4366db85; or dword ptr [rbx - 0x2e], esp; ret; 
0x0000000000023a94: sbb eax, 0x44e8ff31; imul eax, dword ptr [rdx], 0; mov eax, 0x27; syscall; 
0x0000000000049f6f: sbb eax, 0x480024dd; lea ecx, [rsp + 8]; call 0x49e87; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000223c6: sbb eax, 0x4c000001; mov edx, eax; syscall; 
0x00000000000223c6: sbb eax, 0x4c000001; mov edx, eax; syscall; neg eax; ret; 
0x0000000000049c9f: sbb eax, 0x5afffccd; ret; 
0x000000000003d49f: sbb eax, 0x5afffd95; ret; 
0x0000000000050de5: sbb eax, 0x5b058d48; and eax, dword ptr [rax + rax]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000703d5: sbb eax, 0x5e995e92; ret 0x125f; 
0x000000000002889d: sbb eax, 0x694b6; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000020b68: sbb eax, 0x7318f; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000020272: sbb eax, 0x73a85; add rsp, 0x88; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000001fa2b: sbb eax, 0x742cc; add rsp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000093630: sbb eax, 0x81fffc69; push 0x6c02fffc; cld; jmp qword ptr [rbp + 0x69]; 
0x0000000000027c87: sbb eax, 0x83f8b60f; jmp qword ptr [rdx + 0x7f]; 
0x000000000001dde3: sbb eax, 0x89c0570f; ret 0x2e0f; 
0x000000000005f678: sbb eax, 0xb57b54a4; pop rcx; pop rdx; ret 0xd539; 
0x000000000003335b: sbb eax, 0xf3ffffbc; cvtpi2ps xmm0, mm0; pop rax; ret; 
0x00000000000300de: sbb eax, 0xff20006; pop rax; and al, 8; add rsp, 0x28; ret; 
0x000000000003a1da: sbb eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000091329: sbb eax, dword ptr [rbp - 0x78a68440]; ret 0x9d9b; 
0x0000000000023c8d: sbb eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000212ff: sbb eax, eax; add eax, 2; ret; 
0x000000000002899f: sbb eax, eax; add eax, 3; ret; 
0x0000000000057415: sbb eax, eax; and eax, 0x80; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000020cd5: sbb eax, eax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000002f037: sbb eax, eax; divss xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 0x1c], xmm0; ret; 
0x000000000002ef6a: sbb eax, eax; divss xmm0, xmm0; add eax, 0x80000000; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000003433a: sbb eax, eax; not eax; add eax, 2; ret; 
0x0000000000056f7c: sbb eax, eax; not eax; and eax, 0x10; ret; 
0x0000000000039305: sbb eax, eax; not eax; and eax, 0x22; add rsp, 0x10; pop rbx; ret; 
0x000000000005506c: sbb eax, eax; not eax; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000057179: sbb eax, eax; not eax; and eax, 0xb; ret; 
0x0000000000057d44: sbb eax, eax; not eax; and eax, 0xfffffffe; pop rdx; ret; 
0x000000000005ff94: sbb ebp, dword ptr [rbx + 0x1f]; ret 0x12b4; 
0x0000000000085bf8: sbb ebp, dword ptr [rcx + 0x3a]; push -0x7c; xchg eax, edi; sub ch, byte ptr [rax + 0x5c]; push rcx; ret; 
0x0000000000071afe: sbb ebx, dword ptr [rsi + rdi + 0x739f5a49]; push rbp; ret; 
0x0000000000014e71: sbb ecx, dword ptr [rdi]; test dword ptr [rax], esi; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000006052b: sbb ecx, dword ptr [rsp + rsi + 0x71204ba3]; mov esi, 0x7632d8c5; ret; 
0x000000000008b901: sbb ecx, esi; mov bl, 0x19; sbb dword ptr [rcx + 0x13a8e5bc], ebx; ret; 
0x000000000004b019: sbb edi, dword ptr [rdx + 0x2a0100]; mov eax, 0x101; syscall; 
0x000000000000553b: sbb edi, dword ptr [rdx]; or eax, 0x2583b385; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x0000000000018d15: sbb edi, dword ptr [rsi + 0x18]; movzx eax, byte ptr [rdi + 0x1d]; mov byte ptr [rsi + 0x1c], al; movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000022b73: sbb edi, edi; call qword ptr [rbx - 0x77]; 
0x0000000000025f19: sbb edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x000000000004a10d: sbb edi, edi; ret; 
0x000000000006ba8c: sbb edi, edi; sbb al, 0xff; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x000000000006ba88: sbb edi, edi; sbb bh, bh; sbb edi, edi; sbb al, 0xff; sbb eax, 0x1fff1eff; jmp qword ptr [rax]; 
0x000000000000522f: sbb edx, dword ptr [rcx - 0x1eff8f7]; call qword ptr [rdi - 0x71]; 
0x000000000002124e: sbb edx, edx; and edx, 2; mov rax, rdx; pop rbx; ret; 
0x0000000000086e1a: sbb esi, dword ptr [rbx - 0xe]; jbe 0x86dd1; jge 0x86e38; sbb byte ptr [rcx + 0x28513284], 0x67; fstp dword ptr [rsi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x000000000000478f: sbb esi, dword ptr [rdi]; ret; 
0x000000000008c719: sbb esi, eax; push rsp; rol dword ptr [rsp + rax*8 + 0x2c383c3f], 1; cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x0000000000004a64: sbb esi, ebp; call qword ptr [rdx - 0x67]; xchg eax, esp; jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x000000000003ad39: sbb esi, esi; ret; 
0x00000000000087e8: sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x00000000000605fa: sbb qword ptr [rdx + rcx*4 + 0x6ae402fb], rcx; ret; 
0x0000000000018d14: sbb r15d, dword ptr [rsi + 0x18]; movzx eax, byte ptr [rdi + 0x1d]; mov byte ptr [rsi + 0x1c], al; movzx eax, byte ptr [rdi + 0x1c]; mov byte ptr [rsi + 0x1d], al; ret; 
0x0000000000020cd4: sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000002124d: sbb rdx, rdx; and edx, 2; mov rax, rdx; pop rbx; ret; 
0x000000000008c718: sbb rsi, rax; push rsp; rol dword ptr [rsp + rax*8 + 0x2c383c3f], 1; cmpsd dword ptr [rsi], dword ptr [rdi]; in al, 0x89; ret 0x66bf; 
0x0000000000022535: scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x00000000000224f4: scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x0000000000005545: scasb al, byte ptr [rdi]; and al, 0xc3; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x000000000007403a: scasb al, byte ptr [rdi]; cdq; lodsd eax, dword ptr [rsi]; cdq; ret; 
0x000000000000492e: scasb al, byte ptr [rdi]; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x000000000008bcb1: scasb al, byte ptr [rdi]; fcom qword ptr [rsi - 0x27]; ret; 
0x0000000000062651: scasb al, byte ptr [rdi]; in eax, dx; leave; ret 0x3b81; 
0x0000000000004b8a: scasb al, byte ptr [rdi]; jmp qword ptr [rcx]; 
0x000000000008842c: scasb al, byte ptr [rdi]; mov byte ptr [rcx - 0x72775d78], bl; mov byte ptr [rax + rcx*4 - 0x77407750], ah; mov cl, 0x88; ret; 
0x00000000000913e2: scasb al, byte ptr [rdi]; mov cl, 0x5b; call rcx; 
0x00000000000913e2: scasb al, byte ptr [rdi]; mov cl, 0x5b; call rcx; mov ebp, 0xc0938612; mov fs, word ptr [rbx + 0x67]; ret 0x3e9a; 
0x000000000005be2d: scasb al, byte ptr [rdi]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000656f4: scasb al, byte ptr [rdi]; pop rsi; scasd eax, dword ptr [rdi]; pop rsi; ret 0xcc5f; 
0x000000000008727c: scasb al, byte ptr [rdi]; push rbx; mov al, 0x53; mov dh, 0x53; ret; 
0x000000000008736e: scasb al, byte ptr [rdi]; push rsi; mov dh, 0x56; mov ah, 0x56; ret 0xbc56; 
0x00000000000224b4: scasb al, byte ptr [rdi]; push rsp; and al, 0xf8; xor eax, eax; ret; 
0x00000000000224fb: scasb al, byte ptr [rdi]; sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000006f6b6: scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x0000000000060099: scasd eax, dword ptr [edi]; pop rdi; test al, 0x86; fimul dword ptr [rax - 0x1414017]; ret; 
0x0000000000005543: scasd eax, dword ptr [rdi]; adc ebp, dword ptr [rsi + 0x4fc3242e]; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x000000000002d622: scasd eax, dword ptr [rdi]; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2d632; addss xmm0, xmm0; ret; 
0x0000000000016f2e: scasd eax, dword ptr [rdi]; add byte ptr [rax], al; mov dword ptr [rax], 0xc; xor eax, eax; add rsp, 8; ret; 
0x00000000000424c3: scasd eax, dword ptr [rdi]; add eax, 0x25598f; inc rax; mov qword ptr [rip + 0x255985], rax; shr rax, 0x21; ret; 
0x000000000008b184: scasd eax, dword ptr [rdi]; add edx, edx; cmp al, 0x9b; sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x000000000004e0db: scasd eax, dword ptr [rdi]; add rax, rsi; mov qword ptr [rcx + 0x10], rax; add rsp, 0x28; ret; 
0x000000000003741d: scasd eax, dword ptr [rdi]; fisttp word ptr [rax - 0x77]; ret; 
0x000000000008fb67: scasd eax, dword ptr [rdi]; idiv byte ptr [rdi]; add byte ptr [rax], al; leave; ret; 
0x000000000003880d: scasd eax, dword ptr [rdi]; loope 0x3880d; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x000000000007416a: scasd eax, dword ptr [rdi]; outsb dx, byte ptr [rsi]; shr dword ptr [rsi - 0x4a], cl; outsb dx, byte ptr [rsi]; ret 0x906e; 
0x000000000006009a: scasd eax, dword ptr [rdi]; pop rdi; test al, 0x86; fimul dword ptr [rax - 0x1414017]; ret; 
0x00000000000656f6: scasd eax, dword ptr [rdi]; pop rsi; ret 0xcc5f; 
0x000000000007522a: scasd eax, dword ptr [rdi]; popfq; mov ah, 0x9d; ret 0xb89d; 
0x000000000001506f: scasd eax, dword ptr [rdi]; ret 0xd341; 
0x0000000000034a05: scasd eax, dword ptr [rdi]; ret; 
0x000000000006bdcc: scasd eax, dword ptr [rdi]; xor ebx, ebx; xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000002134c: seta al; ret; 
0x000000000002406b: seta dl; cmovae eax, edx; ret; 
0x0000000000028277: setb al; movzx eax, al; pop rbx; ret; 
0x000000000002ddf7: setbe al; movzx eax, al; ret; 
0x0000000000020d0a: setbe al; ret; 
0x0000000000020dc8: setbe dl; cmp edi, 0x20; sete al; or eax, edx; movzx eax, al; ret; 
0x0000000000020d4a: setbe dl; cmp edi, 0x7f; sete al; or eax, edx; movzx eax, al; ret; 
0x000000000003a7ef: sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x0000000000020db2: sete al; movzx eax, al; pop rdx; ret; 
0x0000000000028a2f: sete al; movzx eax, al; ret; 
0x0000000000020d39: sete al; or eax, edx; movzx eax, al; ret; 
0x000000000003e3c9: sete al; pop rbx; ret; 
0x0000000000020d2c: sete al; ret; 
0x0000000000057cec: sete dl; add edx, 2; mov eax, edx; pop rdx; ret; 
0x0000000000020d33: sete dl; cmp edi, 9; sete al; or eax, edx; movzx eax, al; ret; 
0x00000000000548fd: sete dl; lea edx, [rdx + rdx + 2]; mov eax, edx; pop rdx; ret; 
0x0000000000026472: sete dl; mov qword ptr [rbp], rdx; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000057f3b: setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000005a902: setne al; add eax, dword ptr [rsp + 0x30]; add rsp, 0x48; ret; 
0x0000000000023446: setne al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x0000000000054b07: setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003e142: setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000041d55: setne al; movzx eax, al; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023420: setne al; movzx eax, al; neg eax; pop rdx; ret; 
0x0000000000022e4c: setne al; movzx eax, al; neg eax; ret; 
0x0000000000020f83: setne al; movzx eax, al; pop rbx; ret; 
0x0000000000020dfd: setne al; movzx eax, al; pop rdx; ret; 
0x0000000000020fe9: setne al; movzx eax, al; ret; 
0x000000000002129b: setne al; neg eax; ret; 
0x000000000004bed3: setne al; ret; 
0x00000000000549a7: setne dl; inc edx; mov eax, edx; pop rdx; ret; 
0x000000000004d58c: setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000020f6d: setne dl; mov eax, edx; pop rbx; ret; 
0x0000000000026044: setne dl; movzx edx, dl; and eax, edx; ret; 
0x00000000000804be: seto al; push rcx; ret; 
0x00000000000920c2: shl byte ptr [rax + 0x3fb10d66], 1; outsb dx, byte ptr [rsi]; and byte ptr [rbp + rax*8 - 0x33], cl; mov r15b, 0x3f; inc dword ptr [rbx + 0x49249200]; ret 0xd3f; 
0x000000000007aa0c: shl byte ptr [rax - 0x3f], 0x60; ret 0xc360; 
0x000000000006d41d: shl byte ptr [rax - 0x532d5b2e], cl; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x0000000000072451: shl byte ptr [rax], 0xe2; ret; 
0x000000000007adb6: shl byte ptr [rbx - 0x3f], 0x63; ret 0xc363; 
0x000000000005be3e: shl byte ptr [rbx], 0; cmp rdi, rax; je 0x5be51; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x23c0ef], rdi; ret; 
0x000000000005be4e: shl byte ptr [rbx], 0; ret; 
0x000000000007ab84: shl byte ptr [rcx - 0x3f], 0x61; ret; 
0x00000000000370e1: shl byte ptr [rcx], 1; ror byte ptr [rcx - 0xc13dbbc], 1; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 0x14]; ret; 
0x00000000000335eb: shl byte ptr [rcx], cl; ror byte ptr [rcx - 0xc03dbbc], 1; movups xmm1, xmmword ptr [rsp - 4]; subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x000000000007acb6: shl byte ptr [rdx - 0x3f], 0x62; ret; 
0x000000000005506f: shl byte ptr [rip - 0x80000000], 1; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000001b5be: shl byte ptr [rsi + 0xf], 0x7e; ret 0x2be; 
0x0000000000035441: shl byte ptr [rsi + 0xf], 0x7e; ret 0xe8c1; 
0x000000000002da9a: shl byte ptr [rsi + 0xf], 0x7e; ret 0xff25; 
0x000000000002b3af: shl byte ptr [rsi + 0xf], 0x7e; ret; 
0x000000000001b949: shl byte ptr [rsi + 0xf], 1; sub cl, al; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001ba69: shl byte ptr [rsi + 0xf], 1; sub cl, al; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000001b692: shl byte ptr [rsi + 0xf], 1; sub dl, al; movsd xmm2, qword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000002b614: shl byte ptr [rsi + 0xf], 1; sub dl, al; mulsd xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002e4ce: shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x000000000001c318: shl byte ptr [rsi + 0xf], 1; sub dl, cl; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x0000000000035598: shl byte ptr [rsi + 0xf], cl; retf 0xf077; movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000007b1c4: shl byte ptr [rsi - 0x3f], 0x66; ret 0xc366; 
0x000000000002ba08: shl byte ptr [rsi - 0x77], 1; and al, 0xe0; fld xword ptr [rsp - 0x28]; ret; 
0x00000000000224e7: shl ch, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000007aa0e: shl dword ptr [rax - 0x3e], 0x60; ret; 
0x0000000000004d00: shl dword ptr [rax - 0x6c], 0x7f; fldenv [rsi + 0x7d49ae9]; out 0xbd, eax; insb byte ptr [rdi], dx; ret 0x1bb7; 
0x000000000007adb8: shl dword ptr [rbx - 0x3e], 0x63; ret; 
0x00000000000224ae: shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000001ad0e: shl dword ptr [rdi], cl; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000170a5: shl dword ptr [rsi + 0x2e], 1; nop dword ptr [rax + rax]; lea rax, [rdi + 1]; pop rbx; ret; 
0x000000000002de37: shl dword ptr [rsi + 0xf], 0x28; loope 0x2de4c; wait; ret 0x450f; 
0x00000000000289bf: shl dword ptr [rsi + 0xf], 0x7e; ret 0xe9c1; 
0x000000000001d4b8: shl dword ptr [rsi + 0xf], 0x7e; ror byte ptr [rax - 0x77], 1; ret 0xc889; 
0x000000000001ba70: shl dword ptr [rsi + 0xf], cl; sub dl, cl; ret; 
0x000000000007b1c6: shl dword ptr [rsi - 0x3e], 0x66; ret; 
0x000000000002de36: shl dword ptr cs:[rsi + 0xf], 0x28; loope 0x2de4c; wait; ret 0x450f; 
0x000000000004bce6: shl eax, 0x1b; sar eax, 0x1f; mov qword ptr [rbx + 0x10], rdx; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x00000000000357bf: shl eax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000026ff2: shl eax, 4; cdqe; ret; 
0x0000000000026b10: shl eax, 5; and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x0000000000056e2f: shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x00000000000536f1: shl eax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000004a9b7: shl eax, cl; or qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x0000000000035833: shl edi, 0x17; mov dword ptr [rsp - 4], edi; mulss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000003d9fc: shl edi, 8; mov eax, edi; or eax, esi; ret; 
0x00000000000146bd: shl edx, 0x10; or eax, edx; movzx edx, byte ptr [rdi + rsi]; shl edx, 8; or eax, edx; ret; 
0x00000000000534f0: shl edx, 0x20; mov rax, rcx; or rax, rdx; ret; 
0x000000000002e878: shl edx, 0x3f; or rax, rdx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x00000000000289b5: shl edx, 0xc; sete al; ret; 
0x00000000000146c6: shl edx, 8; or eax, edx; ret; 
0x0000000000042526: shl edx, 8; or edx, ecx; or edx, dword ptr [rip + 0x255a8f]; sub rax, 4; mov dword ptr [rax], edx; ret; 
0x00000000000289e8: shl edx, 9; sete al; ret; 
0x00000000000558d6: shl esi, 0x1f; and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000056cb0: shl esi, 7; and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000357be: shl rax, 0x34; mov qword ptr [rsp - 8], rax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000536f0: shl rax, cl; mov qword ptr [rdi + 8], rdx; mov qword ptr [rdi], rax; ret; 
0x000000000004a9b6: shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; pop rdx; ret; 
0x00000000000534ef: shl rdx, 0x20; mov rax, rcx; or rax, rdx; ret; 
0x000000000002e877: shl rdx, 0x3f; or rax, rdx; mov qword ptr [rsp - 8], rax; movsd xmm1, qword ptr [rsp - 8]; movapd xmm0, xmm1; ret; 
0x00000000000289b4: shl rdx, 0xc; sete al; ret; 
0x000000000007b1c5: shl word ptr [rsi - 0x3e], 0x66; ret; 
0x00000000000422ae: shr al, 0x54; stosd dword ptr [rdi], eax; add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000001e0ac: shr al, 0x90; or al, 3; add bh, bh; ror byte ptr [rax - 0x68], 0x5a; ret; 
0x000000000003da76: shr al, 0xc6; adc al, byte ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x25a1dd; add rsp, 0x18; ret; 
0x0000000000023318: shr al, 9; add rax, qword ptr [r8]; movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x0000000000053d16: shr al, cl; cmp edi, 0x5cd9ffff; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x00000000000299fc: shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000026fe7: shr ax, 6; and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000032db2: shr bl, 0x6d; cmp eax, 0x7f7fffff; jbe 0x32dbd; ret; 
0x0000000000054686: shr bl, 0xc1; pop rbx; ret; 
0x00000000000481dc: shr bl, 0xd9; mov eax, 1; ret; 
0x00000000000261ea: shr bl, 0xee; cmp cl, 0x20; je 0x261e8; ret; 
0x0000000000051a6e: shr bl, 1; add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm4; ret; 
0x000000000002145d: shr bl, 3; mov dword ptr [rax + 8], ebx; pop rbx; ret; 
0x000000000004a229: shr bl, 3; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005914c: shr bl, 5; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x000000000001e26f: shr bl, 5; mov eax, 0x31069; add rsp, 0x170; pop rbx; ret; 
0x00000000000345ee: shr bl, 8; movss xmm0, dword ptr [rip + 0x5e333]; add rsp, 0x28; ret; 
0x000000000002ef4d: shr bl, cl; hlt; ret; 
0x0000000000027814: shr bl, cl; sub dword ptr [rax + 0xc], edi; syscall; 
0x0000000000074160: shr byte ptr [rbx - 0x41], 0x6b; shr dword ptr [rbx - 3], cl; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x000000000007b9fa: shr byte ptr [rcx + rax*8 + 0x6c], 0xc2; insb byte ptr [rdi], dx; ret; 
0x000000000007b5a6: shr byte ptr [rcx - 0x3e], 0x69; ret; 
0x0000000000017ba7: shr byte ptr [rcx], 0xd0; ret; 
0x00000000000657af: shr byte ptr [rdi - 0x3f], 0x70; ret 0xc37e; 
0x000000000007b74a: shr byte ptr [rdx - 0x3f], 0x6a; ret 0xc36a; 
0x000000000003a772: shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x0000000000032bd6: shr cl, 0x89; add byte ptr [rax], al; add byte ptr [rip + 0x7fefffff], bh; jbe 0x32be4; ret; 
0x000000000007bb08: shr dword ptr [rbp - 0x3e], 0x6d; ret; 
0x000000000009142b: shr dword ptr [rbx - 0x55], 0x37; ret; 
0x0000000000074164: shr dword ptr [rbx - 3], cl; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x000000000007b74c: shr dword ptr [rdx - 0x3e], 0x6a; ret; 
0x000000000007416c: shr dword ptr [rsi - 0x4a], cl; outsb dx, byte ptr [rsi]; ret 0x906e; 
0x0000000000042499: shr eax, 0x10; cdqe; pop rdx; ret; 
0x000000000003f26e: shr eax, 0x10; mov byte ptr [rsi + 1], al; mov rax, rdi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000003da3a: shr eax, 0x10; ret; 
0x000000000004247b: shr eax, 0x11; ret; 
0x0000000000054b1d: shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005a5d2: shr eax, 0x1f; pop rdx; ret; 
0x00000000000299ec: shr eax, 0x1f; ret; 
0x00000000000424d4: shr eax, 0x21; ret; 
0x00000000000299e4: shr eax, 0x3f; ret; 
0x000000000002af16: shr eax, 0xb1; ret; 
0x00000000000299fd: shr eax, 0xf; movzx eax, ax; ret; 
0x000000000004250d: shr eax, 1; ret; 
0x0000000000054b41: shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004beee: shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x00000000000224ff: shr eax, 3; and eax, 0xc00; ret; 
0x0000000000054b27: shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004befa: shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x000000000005498f: shr eax, 4; and eax, 1; ret; 
0x0000000000026fe8: shr eax, 6; and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000054b34: shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003f278: shr eax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000003f257: shr eax, 8; mov byte ptr [rsi], al; ret; 
0x000000000003da3e: shr eax, 8; ret; 
0x0000000000023175: shr eax, 9; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000004ab4d: shr eax, cl; and eax, 1; ret; 
0x0000000000017733: shr eax, cl; call 0x48017b03; add eax, ebx; pop rbx; ret; 
0x0000000000053733: shr eax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000002baa0: shr ebx, 0xa; mov edi, 1; call 0x29a04; add rsp, 0x18; ret; 
0x000000000002bbe6: shr ebx, 5; call 0x29aa6; add rsp, 0x18; ret; 
0x00000000000342f1: shr ebx, 8; movsd xmm0, qword ptr [rip + 0x5d934]; add rsp, 0x40; pop rbx; ret; 
0x0000000000033316: shr ebx, 9; call 0x2ef10; cvtsi2sd xmm0, eax; pop rax; ret; 
0x0000000000033357: shr ebx, 9; call 0x2ef7c; cvtsi2ss xmm0, eax; pop rax; ret; 
0x000000000005421c: shr ecx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000026fb3: shr ecx, 4; dec rcx; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x0000000000033c7a: shr edi, cl; and edi, 1; mov eax, edi; neg eax; add eax, 2; ret; 
0x0000000000042508: shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000003da06: shr edx, 0x18; cmp edx, 0x7f; ja 0x3da16; mov eax, edi; and eax, 0xffffff; ret; 
0x00000000000423fe: shr edx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000042498: shr rax, 0x10; cdqe; pop rdx; ret; 
0x000000000003f26d: shr rax, 0x10; mov byte ptr [rsi + 1], al; mov rax, rdi; shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x000000000004247a: shr rax, 0x11; ret; 
0x00000000000424d3: shr rax, 0x21; ret; 
0x00000000000299e3: shr rax, 0x3f; ret; 
0x000000000003f277: shr rax, 8; mov byte ptr [rsi + 2], al; ret; 
0x0000000000023174: shr rax, 9; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000004ab4c: shr rax, cl; and eax, 1; ret; 
0x0000000000053732: shr rax, cl; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000005421b: shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000026fb2: shr rcx, 4; dec rcx; cmp rdx, rcx; jbe 0x26fbf; hlt; ret; 
0x0000000000033c79: shr rdi, cl; and edi, 1; mov eax, edi; neg eax; add eax, 2; ret; 
0x00000000000423fd: shr rdx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000004b0c1: sldt word ptr [rax]; add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x169c0; pop rdx; ret; 
0x000000000005494f: sldt word ptr [rax]; add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x5494c; ret; 
0x000000000001bb87: sldt word ptr [rax]; add rsp, 0x48; fchs; fxch st(1); ret; 
0x000000000002c743: sldt word ptr [rax]; mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000004c74a: sldt word ptr [rax]; pop rbx; ret; 
0x000000000008fdd4: sldt word ptr [rax]; ret; 
0x000000000005b59a: sldt word ptr [rbx]; and al, 0x38; add rsp, 0x48; ret; 
0x0000000000037904: sqrtps xmm0, xmm0; ret; 
0x00000000000052af: sqrtps xmm6, xmm6; sub dword ptr [rax], edx; ret 0x489d; 
0x0000000000037903: sqrtsd xmm0, xmm0; ret; 
0x0000000000037908: sqrtss xmm0, xmm0; ret; 
0x0000000000033884: stc; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm2; ret; 
0x000000000003f96f: stc; add rax, rsi; ret; 
0x000000000002cd0b: stc; add rsp, 0x60; pop rbx; ret; 
0x0000000000020e3b: stc; and ecx, 7; sar eax, cl; and eax, 1; ret; 
0x000000000005b1e6: stc; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005aa31: stc; call 0x169c0; pop rdx; ret; 
0x0000000000092aca: stc; call qword ptr [rsi - 0x520006d5]; xor cl, bh; call rcx; 
0x0000000000092a1a: stc; call qword ptr [rsi]; 
0x0000000000092aae: stc; call rcx; 
0x0000000000092aba: stc; call rcx; xor cl, bh; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092aae: stc; call rcx; xor cl, bh; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092abe: stc; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab2: stc; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092af6: stc; call rdi; 
0x0000000000092b6e: stc; call rdx; 
0x000000000008dbb3: stc; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x000000000006ebef: stc; fbstp tbyte ptr [rax + 0x36]; jno 0x6ec4e; jno 0x6eb8a; stc; ret; 
0x000000000004630a: stc; inc dword ptr [rax]; add byte ptr [rax], al; jle 0x462ef; ret; 
0x0000000000020e7f: stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000092a3a: stc; inc dword ptr [rcx + 0x29]; stc; jmp rdi; 
0x0000000000092afe: stc; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092afa: stc; inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092b06: stc; inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x0000000000092b0a: stc; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x00000000000929fe: stc; inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x0000000000092ac2: stc; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092a82: stc; jmp qword ptr [rcx]; 
0x00000000000929d6: stc; jmp qword ptr [rdi]; 
0x00000000000929de: stc; jmp rdi; 
0x0000000000092aaa: stc; jmp rdx; 
0x00000000000929fa: stc; lcall [rsi - 7]; inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x000000000004b198: stc; mov eax, 0x106; mov rsi, r8; mov rdx, rbx; syscall; 
0x00000000000211ca: stc; mov eax, ecx; pop rbx; pop rbp; ret; 
0x000000000005923e: stc; mov word ptr [rbx + 8], ax; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000004a183: stc; movsb byte ptr [rdi], byte ptr [rsi]; cld; dec dword ptr [rax + 0x63]; ret; 
0x000000000006edcd: stc; out dx, eax; xchg dword ptr [rcx + 0x598b2089], eax; nop; ret; 
0x00000000000605f6: stc; pop rsp; ret 0x1948; 
0x0000000000020cab: stc; push qword ptr [rbp - 0x14]; add rsp, 0x90; pop rbx; ret; 
0x00000000000929ce: stc; push qword ptr [rdi + 0x24]; stc; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x00000000000929d2: stc; push qword ptr [rsi]; and al, 0xf9; jmp qword ptr [rdi]; 
0x0000000000092aa6: stc; push rdx; sub eax, 0x30e2fff9; stc; call rcx; 
0x0000000000082166: stc; push rsi; call qword ptr [rsi + 4]; 
0x000000000008cfad: stc; ret 0xbabf; 
0x000000000008c8ed: stc; ret 0xbf; 
0x000000000006cdcc: stc; ret 0xc2fb; 
0x000000000003786f: stc; ret; 
0x0000000000014e70: stc; sbb ecx, dword ptr [rdi]; test dword ptr [rax], esi; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000006dd47: stc; stc; ret; 
0x000000000006dd45: stc; stc; stc; ret; 
0x000000000006dd43: stc; stc; stc; stc; ret; 
0x000000000006dd41: stc; stc; stc; stc; stc; ret; 
0x000000000005863f: stc; sti; dec dword ptr [rax + 0x29]; ret; 
0x00000000000933a9: stc; sti; jmp qword ptr [rax - 0xb]; 
0x0000000000059541: stc; xor eax, eax; test edx, edx; sete al; ret; 
0x0000000000059070: std; add al, byte ptr [rax]; add byte ptr [rax], al; lea rsi, [rsp - 0x10]; movsxd rdi, edx; syscall; 
0x0000000000020cda: std; add rax, 4; ret; 
0x00000000000407a0: std; call 0x169c0; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004397f: std; call qword ptr [rbx - 0x77]; 
0x000000000004e794: std; dec dword ptr [rax + 0x63]; jl 0x4e746; sbb byte ptr [rax + 3], bh; syscall; 
0x00000000000427d1: std; dec dword ptr [rax - 0x73]; cmp eax, 0x2558fe; call 0x545dd; mov eax, 0x39; syscall; 
0x000000000003ca5a: std; dec dword ptr [rax - 0x77]; fucomip st(3); out dx, al; pop rbx; ret; 
0x00000000000434a5: std; dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x000000000003c6b9: std; dec dword ptr [rax - 0x77]; ret; 
0x00000000000448a7: std; dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0x56], 0xeb; ret 0x8948; 
0x00000000000444d2: std; dec dword ptr [rbx + 0x2fe8330]; je 0x44753; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000000445a0: std; dec dword ptr [rcx + rcx*4 - 9]; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000004ac18: std; dec dword ptr [rcx - 0x377ce8]; pop rbx; ret; 
0x00000000000930ec: std; fsincos; jmp rcx; 
0x00000000000371cb: std; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037221: std; fstp st(1); ret; 
0x0000000000074166: std; imul esp, dword ptr [rdx - 0x2c915092], 0x6e; mov dh, 0x6e; ret 0x906e; 
0x0000000000046283: std; inc dword ptr [rbp - 0x146f8a40]; adc byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x77]; ret 0x894c; 
0x00000000000495d5: std; inc dword ptr [rbp - 0x327bf040]; add al, byte ptr [rax]; add bl, ch; ret; 
0x0000000000049242: std; inc dword ptr [rbp - 0x587bf040]; add dword ptr [rax], eax; add bl, ch; ret; 
0x000000000005afca: std; inc dword ptr [rcx]; ret; 
0x0000000000092df0: std; insb byte ptr [rdi], dx; mov eax, 0x59567e3a; sub eax, 0x31ad6446; ret 0x9dff; 
0x0000000000063a05: std; insd dword ptr [rdi], dx; ret; 
0x000000000002734a: std; jmp qword ptr [rsi + 0x41]; 
0x0000000000063a45: std; jmp rbx; 
0x00000000000407a4: std; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000003a1f8: std; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x000000000003a1d4: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x1b; syscall; 
0x000000000003880f: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x000000000003a1e6: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x95; syscall; 
0x000000000003a3c6: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x98; syscall; 
0x000000000005a359: std; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x000000000004b6fc: std; lea rdx, [rsp + 8]; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000022754: std; mov byte ptr [rcx + 0x42], dl; lea rdx, [rip + 0x71004]; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000004ac7a: std; mov dword ptr [rsp + 0x20], eax; movsxd rsi, ebx; mov eax, 0x81; mov rdx, r12; syscall; 
0x0000000000059114: std; mov eax, 0xe4; mov rsi, rbx; syscall; 
0x000000000004b68e: std; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000004b6af: std; mov esi, 3; mov rax, r8; syscall; 
0x000000000005aafd: std; movsxd rdx, ebx; mov eax, 0x10d; mov rsi, r12; syscall; 
0x000000000006e88e: std; pop rax; ret 0x885a; 
0x000000000005ffe1: std; popfq; ret; 
0x00000000000735b8: std; push rsp; andnps xmm0, xmmword ptr [rbx]; push rdi; add al, 0x57; ret 0xd457; 
0x000000000005416f: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x00000000000049ef: std; ret 0xbd07; 
0x0000000000026b1a: std; ret; 
0x0000000000026b0f: std; shl eax, 5; and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x000000000004ef68: sti; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x00000000000239a0: sti; add dh, byte ptr [rdi + 4]; mov rax, qword ptr [rsp]; add rsp, 0x50; pop rbx; ret; 
0x0000000000032dc5: sti; add eax, 0x580ff300; ret 0xf66; 
0x00000000000087e0: sti; and eax, 0x120000; or dword ptr [rax], eax; sbb esp, dword ptr [rbx + 4]; add byte ptr [rax], al; ret; 
0x0000000000042866: sti; call 0x169c0; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000049b30: sti; call 0x169c0; pop rbx; ret; 
0x0000000000017bc3: sti; call 0x17780; mov rax, rbx; pop rbx; ret; 
0x0000000000018163: sti; call 0x17840; mov rax, rbx; pop rbx; ret; 
0x0000000000092ff6: sti; call qword ptr [rbp + rax*8 - 0x3b530005]; sti; call rsp; 
0x0000000000093282: sti; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x000000000009327a: sti; call qword ptr [rbp - 0x6a000419]; out 0xfb, eax; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x000000000009339e: sti; call qword ptr [rbx - 0xb]; 
0x000000000009339e: sti; call qword ptr [rbx - 0xb]; sti; jmp qword ptr [rax - 0xb]; 
0x0000000000092ffe: sti; call rsp; 
0x0000000000058640: sti; dec dword ptr [rax + 0x29]; ret; 
0x000000000005a97d: sti; dec dword ptr [rax - 0x73]; add eax, 0x38e49; ret; 
0x000000000005a098: sti; dec dword ptr [rax - 0x75]; je 0x5a0c2; adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000590bb: sti; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x000000000005adac: sti; dec dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000054a49: sti; dec dword ptr [rax - 0x77]; ret; 
0x00000000000933a6: sti; dec dword ptr [rsi - 7]; sti; jmp qword ptr [rax - 0xb]; 
0x00000000000585d5: sti; inc dword ptr [rbp - 0x16318b40]; ret; 
0x000000000009339a: sti; inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; 
0x000000000009339a: sti; inc dword ptr [rbp - 0xb]; sti; call qword ptr [rbx - 0xb]; sti; jmp qword ptr [rax - 0xb]; 
0x0000000000091591: sti; int1; mov ch, 0x1a; ret; 
0x00000000000933a2: sti; jmp qword ptr [rax - 0xb]; 
0x00000000000930f6: sti; jmp qword ptr [rbx - 0x29]; 
0x0000000000092fde: sti; jmp qword ptr [rcx + 0x3b]; 
0x00000000000930fa: sti; jmp rax; 
0x00000000000930ee: sti; jmp rcx; 
0x0000000000093132: sti; jmp rdx; 
0x000000000009328a: sti; jmp rsi; 
0x0000000000093352: sti; jmp rsp; 
0x0000000000059152: sti; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005a5b5: sti; lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000005af0e: sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005b420: sti; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x000000000005aa35: sti; lcall [rdx - 0x3d]; mov r8, rdi; mov eax, 0x6c; syscall; 
0x000000000005af9f: sti; lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005b40b: sti; lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x000000000005b27a: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x000000000005af6f: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x56; syscall; 
0x000000000005a8b2: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x000000000005aedf: sti; lcall [rdx - 0x3d]; xor edi, edi; mov eax, 0x79; syscall; 
0x000000000009334a: sti; ljmp [rsp + rsi*8 - 0xb230005]; sti; jmp rsp; 
0x0000000000004eb2: sti; mov ch, 0x51; jns 0x4ebe; ret; 
0x000000000005b04b: sti; mov eax, 0x125; syscall; 
0x0000000000023a78: sti; mov eax, 0x74; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000021454: sti; mov eax, 3; syscall; 
0x000000000008bd04: sti; mov ebp, 0x1e09bc91; xlatb; pop rbx; ret 0xef12; 
0x000000000003d59d: sti; mov edx, eax; mov eax, 3; syscall; 
0x000000000004a3fc: sti; mov rbp, rax; lea r13d, [r12 + 1]; xor esi, esi; push rcx; call rax; 
0x000000000004b533: sti; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x0000000000080948: sti; pop rdi; ret; 
0x000000000005aec3: sti; push qword ptr [rcx]; rcr byte ptr [rbx - 0x77], cl; rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x00000000000930f2: sti; push qword ptr [rdi - 0x2a]; sti; jmp qword ptr [rbx - 0x29]; 
0x0000000000079bda: sti; push rbp; cld; push rbp; call qword ptr [rbp + 2]; 
0x000000000006cdce: sti; ret 0xc2fc; 
0x0000000000031334: sti; ret 0xfbb4; 
0x000000000001a9a1: sti; ret; 
0x0000000000062309: sti; sal byte ptr [rbp - 0x164a245b], 0x5b; ret 0x3956; 
0x0000000000054a48: sti; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000059875: sti; sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000056d02: sti; xor eax, eax; ret; 
0x000000000004e4df: sti; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000002250c: stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x00000000000224fa: stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000001e0d2: stosb byte ptr [rdi], al; adc dword ptr [rax + rax], eax; movsxd rsi, esi; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000092bee: stosb byte ptr [rdi], al; adc r11b, r10b; mov ebp, 0x3e4cca98; sar cl, 0xd; mov ebx, 0x3d1151b3; ret 0xe31c; 
0x000000000003a6e6: stosb byte ptr [rdi], al; add dword ptr [rax], eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000325da: stosb byte ptr [rdi], al; add eax, 0x280f6600; ret; 
0x000000000005fa4a: stosb byte ptr [rdi], al; in al, dx; call qword ptr [rdi]; 
0x0000000000021732: stosb byte ptr [rdi], al; jb 0x21734; call qword ptr [rbx + 0x48]; 
0x00000000000605f2: stosb byte ptr [rdi], al; jp 0x60673; stosb byte ptr [rdi], al; stc; pop rsp; ret 0x1948; 
0x00000000000211c8: stosb byte ptr [rdi], al; mov ecx, edi; mov eax, ecx; pop rbx; pop rbp; ret; 
0x00000000000817ea: stosb byte ptr [rdi], al; mov esi, dword ptr [rbx + rcx*4 - 0x7448744b]; ret 0xc38b; 
0x0000000000071c5e: stosb byte ptr [rdi], al; push rbx; cmc; xor esp, dword ptr [rbx + 2]; push 0x5d5735d2; ret 0xda8b; 
0x00000000000873c6: stosb byte ptr [rdi], al; push rdi; mov al, 0x57; ret; 
0x0000000000090f21: stosb byte ptr [rdi], al; rcl ebp, cl; push -0x21; ret 0x188; 
0x00000000000605f5: stosb byte ptr [rdi], al; stc; pop rsp; ret 0x1948; 
0x000000000008093c: stosb byte ptr [rdi], al; test dword ptr [rdi + 0x23950c82], ebp; imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x00000000000422b1: stosd dword ptr [rdi], eax; add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000052740: stosd dword ptr [rdi], eax; add eax, 0x8d480000; or eax, 0x40b65; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000008a964: stosd dword ptr [rdi], eax; and byte ptr [rbx], bh; mov ch, 0x9f; add byte ptr [rdi - 0x6e], al; ret 0x7b00; 
0x000000000008db29: stosd dword ptr [rdi], eax; fdivr dword ptr [rip - 0x4370be8a]; push rdx; xor ebx, dword ptr [rcx + 0x1c]; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x0000000000034c31: stosd dword ptr [rdi], eax; int 5; add cl, bl; ret 0xc9d8; 
0x000000000008f703: stosd dword ptr [rdi], eax; jae 0x8f6d9; ret; 
0x00000000000566c3: stosd dword ptr [rdi], eax; je 0x566ca; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000021f0a: stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x10]; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000008785c: stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x000000000001e1fa: stosd dword ptr [rdi], eax; mov byte ptr [rsp], 1; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000004cbb: stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x0000000000054ca2: stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000054942: stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000004b38f: stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004f1f0: stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbp; syscall; 
0x000000000004f0dd: stosd dword ptr [rdi], eax; mov eax, 6; mov rdi, rbx; syscall; 
0x0000000000054221: stosd dword ptr [rdi], eax; mov rax, r8; ret; 
0x000000000004b3b2: stosd dword ptr [rdi], eax; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x000000000002e6fa: stosd dword ptr [rdi], eax; pop rbx; ret; 
0x00000000000872d8: stosd dword ptr [rdi], eax; push rsp; ret 0xa454; 
0x000000000004b7b1: stosd dword ptr [rdi], eax; ret 0xfffc; 
0x0000000000043675: stosd dword ptr [rdi], eax; ret; 
0x0000000000083162: stosd dword ptr [rdi], eax; sub byte ptr [rbp - 0x487f4b80], 0x80; out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x0000000000086150: stosd dword ptr [rdi], eax; wait; mov edi, 0x9665276; cdqe; push rax; ret 0x7153; 
0x0000000000017fc1: stosd dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000006bdd4: stosd dword ptr [rdi], eax; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x0000000000054220: stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000059056: str word ptr [rax - 0x73]; adc al, 0xe; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000001c31f: sub ah, al; add rsp, 0x28; ret; 
0x0000000000032b58: sub ah, al; addss xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000001ca48: sub ah, al; call 0x3252d; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000005ff8e: sub ah, byte ptr [rax - 0x5d]; call 0x6c21df8e; movsxd rbx, dword ptr [rdi]; ret 0x12b4; 
0x000000000002205d: sub ah, byte ptr [rsi]; add eax, dword ptr [rax]; mov rdi, rbp; call rbx; 
0x000000000002eb0d: sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x0000000000036d0b: sub al, 0x24; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000371f9: sub al, 0x24; fmulp st(1); add rsp, 0x10; ret; 
0x000000000005aa05: sub al, 0x48; mov eax, edx; mov rsi, r8; syscall; 
0x000000000006238a: sub al, 0x4d; adc ecx, dword ptr [rip + 0x73545338]; or ah, byte ptr [rbp - 0x45]; or ch, byte ptr [rdx + 0x76]; leave; ret 0x8581; 
0x00000000000803cc: sub al, 0x54; ret; 
0x000000000008c722: sub al, 0xa7; in al, 0x89; ret 0x66bf; 
0x0000000000004b89: sub al, 0xae; jmp qword ptr [rcx]; 
0x000000000007244f: sub al, 0xb6; shl byte ptr [rax], 0xe2; ret; 
0x000000000004f164: sub al, 0xb8; push rdi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x00000000000324e5: sub al, 0xc0; ret; 
0x0000000000029889: sub al, 0xdd; fstpnce st(1), st(0); ret 0xddc; 
0x000000000001c68b: sub al, 0xf3; movd dword ptr [rsp + 0x28], mm0; add rsp, 0x40; pop rbx; ret; 
0x0000000000092a95: sub al, 0xf9; jmp qword ptr [rcx]; 
0x0000000000092aa5: sub al, 0xf9; push rdx; sub eax, 0x30e2fff9; stc; call rcx; 
0x0000000000035d83: sub al, 0xf; push rdi; retf 0x570f; ret 0xff3; 
0x0000000000033c2c: sub al, 0xf; sub cl, al; add rsp, 0x30; pop rbx; ret; 
0x0000000000023daa: sub al, 0xff; dec dword ptr [rcx - 0x77]; retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000023d3f: sub al, 0xff; lcall [rdx - 0x3d]; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000000023cff: sub al, 0xff; lcall [rdx - 0x3d]; mov r10d, ecx; movsxd rdi, edi; mov eax, 0x116; syscall; 
0x0000000000023cc8: sub al, 0xff; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x0000000000051de8: sub al, 1; add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x0000000000023474: sub al, 1; add byte ptr [rax], al; syscall; 
0x0000000000033320: sub al, al; pop rax; ret; 
0x0000000000059208: sub al, bh; ret; 
0x0000000000051421: sub al, byte ptr [rax + rax]; add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x00000000000506c5: sub al, byte ptr [rax + rax]; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x000000000004b01d: sub al, byte ptr [rax]; mov eax, 0x101; syscall; 
0x000000000002cdc2: sub al, byte ptr [rbx + 6]; add dh, bl; rcr ebx, 0x2d; xor al, byte ptr [rbx + 6]; add al, bl; ret 0xcad8; 
0x0000000000062206: sub al, byte ptr [rbx - 0x59]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x00000000000408d4: sub al, ch; mov dword ptr [rdi], eax; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; add rsp, 0x38; ret; 
0x0000000000024359: sub al, ch; ret 0x2fd; 
0x000000000005a1df: sub al, ch; ret; 
0x000000000001d875: sub al, cl; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000001bc78: sub al, cl; movapd xmm0, xmm2; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001c7ff: sub al, cl; movsd xmm2, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; movapd xmm0, xmm2; add rsp, 0x28; ret; 
0x0000000000032d9a: sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000332b8: sub al, dl; addsd xmm0, qword ptr [rax + 8]; addsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000001b948: sub al, dl; movapd xmm0, xmm1; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000001ba68: sub al, dl; movapd xmm0, xmm1; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x000000000008d46a: sub bh, ah; ret; 
0x00000000000248ba: sub bh, bh; dec dword ptr [rax - 0x77]; ret 0xf4c; 
0x000000000005fc44: sub bh, bh; mov word ptr [rcx], es; out dx, eax; fnsave dword ptr [rdx]; ret; 
0x000000000003602d: sub bh, bh; push rbx; movups xmm1, xmmword ptr [rip + 0x5a998]; xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000023aed: sub bl, al; push rax; mov eax, 0xaa; syscall; 
0x0000000000030531: sub bl, cl; mulss xmm0, xmm1; pop rax; pop rbx; pop rbp; ret; 
0x000000000002af6a: sub bl, cl; subsd xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000001c685: sub bl, dh; movups xmmword ptr [rsp + 0x2c], xmm0; movq xmm0, qword ptr [rsp + 0x28]; add rsp, 0x40; pop rbx; ret; 
0x000000000004ba2b: sub byte ptr [r10 + r9 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000004c135: sub byte ptr [r12 + r10 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000004d4ce: sub byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004b9cb: sub byte ptr [rax + 0x481aeb02], cl; lea esi, [rsp + 0xf]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003f84e: sub byte ptr [rax + 0x63], cl; ret; 
0x000000000005a25c: sub byte ptr [rax - 0x75], cl; and al, 0x20; call rax; 
0x000000000001fddf: sub byte ptr [rax - 0x76b79dad], cl; ret 0xc148; 
0x000000000001f658: sub byte ptr [rax - 0x76b7aaad], cl; ret 0xc148; 
0x000000000001f77d: sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x00000000000418af: sub byte ptr [rax - 0x77], cl; push rbx; and byte ptr [rax - 0x75], cl; jl 0x418dc; adc al, ch; ret 0xfd2d; 
0x000000000004f19a: sub byte ptr [rax - 0x77], cl; rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; ret; 
0x0000000000003355: sub byte ptr [rax - 0x80], al; add al, byte ptr [rax]; add byte ptr [rax], 0x20; or al, byte ptr [rax]; ret 0x20e2; 
0x000000000008d469: sub byte ptr [rax], 0xe7; ret; 
0x000000000004d4cf: sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x0000000000023a38: sub byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000083163: sub byte ptr [rbp - 0x487f4b80], 0x80; out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x000000000002f360: sub byte ptr [rbx + 0x5d], bl; divsd xmm6, xmm0; movapd xmm0, xmm6; ret; 
0x000000000001f1f7: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000017bf8: sub byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000005300: sub byte ptr [rbx + 0x7a], bl; lahf; push rsp; movabs rax, qword ptr [0x7e677c0bde1ab54b]; clc; jmp rdi; 
0x000000000008cd0c: sub byte ptr [rbx + rdi*2], al; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x0000000000083161: sub byte ptr [rbx - 0x4b7f5280], 0x80; mov bh, 0x80; out 0x80, eax; call 0xffffffffea891af1; sbb bl, 0x80; ret 0xc480; 
0x0000000000022399: sub byte ptr [rbx], ah; add eax, dword ptr [rax]; mov rdi, rax; call 0x169c0; add rsp, 0x68; ret; 
0x0000000000052e28: sub byte ptr [rcx + rcx*4 - 0x18], cl; pop r12; pop r13; pop r14; ret; 
0x000000000002b45b: sub byte ptr [rcx - 0x173e993e], cl; pcmpgtd mm0, qword ptr [rcx - 0x7680001e]; ret; 
0x00000000000235d5: sub byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000003a5ac: sub byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000000239e3: sub byte ptr [rdi - 0x11e2153], bh; mov eax, 0xa9; syscall; 
0x0000000000074d5f: sub byte ptr [rdi - 0x80], 0x73; add dh, 0x81; ret; 
0x000000000004d58b: sub byte ptr [rdi], cl; xchg eax, ebp; ret 0xc2ff; 
0x000000000001aca3: sub byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004ba2c: sub byte ptr [rdx + rcx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000003cab5: sub byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000033b2e: sub byte ptr [rsi + 0xf], ah; sub cl, al; add rsp, 0x30; pop rbx; ret; 
0x00000000000049eb: sub byte ptr [rsi], ah; jl 0x49b5; std; ret 0xbd07; 
0x0000000000030594: sub byte ptr [rsi], al; add bl, dh; divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f4a5: sub byte ptr [rsi], al; add dl, dh; divps xmm0, xmm1; ret; 
0x000000000002f5d7: sub byte ptr [rsi], al; add dl, dh; subps xmm0, xmmword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000004c136: sub byte ptr [rsp + rdx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x0000000000085bfe: sub ch, byte ptr [rax + 0x5c]; push rcx; ret; 
0x000000000001794a: sub cl, al; add eax, dword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000033b31: sub cl, al; add rsp, 0x30; pop rbx; ret; 
0x000000000002ecaa: sub cl, al; add rsp, 0x38; ret; 
0x000000000002c34a: sub cl, al; addsd xmm0, xmm2; ret; 
0x000000000002c8cc: sub cl, al; addss xmm0, xmm2; ret; 
0x0000000000029dd7: sub cl, al; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000355e4: sub cl, al; divsd xmm0, xmm1; ret; 
0x0000000000035691: sub cl, al; divss xmm0, xmm1; ret; 
0x000000000002e664: sub cl, al; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001b94c: sub cl, al; movsd xmm1, qword ptr [rip + 0x7506a]; add rsp, 0x18; xorps xmm1, xmm2; ret; 
0x000000000002af76: sub cl, al; pop rbx; ret; 
0x000000000001c9f1: sub cl, al; ret; 
0x000000000001ba6c: sub cl, al; xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 
0x0000000000092a1d: sub cl, bh; call qword ptr [rsi]; 
0x00000000000053b0: sub cl, bl; pushfq; call 0xffffffffde7fe464; ret 0x793b; 
0x000000000008062c: sub cl, byte ptr [rdi + 0x3e]; pop rsp; lodsb al, byte ptr [rsi]; jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x0000000000023e49: sub cl, ch; fcomp qword ptr [rsi]; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000002f369: sub dh, al; ret; 
0x000000000001cd3e: sub dl, al; add rsp, 0x18; ret; 
0x000000000001c80f: sub dl, al; add rsp, 0x28; ret; 
0x0000000000032d23: sub dl, al; addsd xmm0, xmm1; ret; 
0x000000000002884f: sub dl, al; addsd xmm0, xmm6; ret; 
0x0000000000032eb4: sub dl, al; addss xmm0, xmm1; ret; 
0x000000000002c342: sub dl, al; divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002c8c9: sub dl, al; movaps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000001b695: sub dl, al; movsd xmm2, qword ptr [rip + 0x75321]; pop rdx; xorps xmm1, xmm2; ret; 
0x000000000002b617: sub dl, al; mulsd xmm0, xmm1; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001bc7c: sub dl, al; mulsd xmm1, qword ptr [rip + 0x75fe2]; add rsp, 0x18; ret; 
0x000000000001b57c: sub dl, al; mulsd xmm1, qword ptr [rsp + 0x10]; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000001d87d: sub dl, al; pop rbx; ret; 
0x000000000002e4d1: sub dl, al; ret; 
0x0000000000077d04: sub dl, byte ptr [rcx - 0x6ed96ece]; xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x000000000002b144: sub dl, cl; add rsp, 0x10; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001c31b: sub dl, cl; movapd xmm0, xmm4; add rsp, 0x28; ret; 
0x000000000001b768: sub dl, cl; pop rbx; ret; 
0x000000000001ba73: sub dl, cl; ret; 
0x0000000000027816: sub dword ptr [rax + 0xc], edi; syscall; 
0x00000000000506ab: sub dword ptr [rax + rax], eax; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x000000000003767f: sub dword ptr [rax - 0x77], ecx; ret; 
0x0000000000093634: sub dword ptr [rax - 4], 0xfc6c02ff; jmp qword ptr [rbp + 0x69]; 
0x0000000000040754: sub dword ptr [rax], eax; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x0000000000040728: sub dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000009fe1: sub dword ptr [rax], eax; add byte ptr [rdx], ah; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x000000000000f8a9: sub dword ptr [rax], eax; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rax], bh; ret; 
0x0000000000006d11: sub dword ptr [rax], eax; add byte ptr [rdx], dl; add byte ptr [rcx], cl; add byte ptr [rdx], ch; ret 4; 
0x00000000000052b2: sub dword ptr [rax], edx; ret 0x489d; 
0x000000000007fb61: sub dword ptr [rbp - 0x507c517d], -0x7d; mov ch, 0x83; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x0000000000077d02: sub dword ptr [rcx - 0x6ecd6ed6], edx; xchg eax, ecx; xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x00000000000049e8: sub dword ptr [rdi], 0x1e; sub byte ptr [rsi], ah; jl 0x49b5; std; ret 0xbd07; 
0x0000000000004fe5: sub dword ptr [rsi + 0x52], esp; xchg byte ptr [rcx], bh; ret 0x5241; 
0x000000000007dcca: sub dword ptr [rsi + 0x5f6991c7], ecx; fadd qword ptr [rbx - 0x66ef7adf]; ret 0x9553; 
0x000000000007fb63: sub dword ptr [rsi - 0x4a7c507d], -0x7d; mov ebx, 0xbf83be83; add edx, -0x7d; ret; 
0x0000000000005e53: sub dword ptr [rsi - 0xe], ebx; adc bl, byte ptr [rax + 0x230975c2]; jp 0x5e3f; jmp rsp; 
0x0000000000026fd9: sub eax, 0x10; ret; 
0x000000000005ac29: sub eax, 0x1be; add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000092aa1: sub eax, 0x2cbdfff9; stc; push rdx; sub eax, 0x30e2fff9; stc; call rcx; 
0x0000000000092aa9: sub eax, 0x30e2fff9; stc; call rcx; 
0x0000000000092df7: sub eax, 0x31ad6446; ret 0x9dff; 
0x00000000000709c6: sub eax, 0x3486009b; push rax; xor al, 0x9b; test al, 0x69; ret; 
0x00000000000550c4: sub eax, 0x39480000; int1; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x00000000000464ab: sub eax, 0x480004cb; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x000000000004ec1b: sub eax, 0x58ffffcd; pop rbx; pop rbp; ret; 
0x0000000000023c82: sub eax, 0x6348ffff; call qword ptr [rax + 0x48]; 
0x0000000000023c82: sub eax, 0x6348ffff; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000029b73: sub eax, 0x670e8; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x0000000000029b52: sub eax, 0x670f9; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000060610: sub eax, 0x9f3f0925; out 8, al; ret 0x6132; 
0x0000000000075226: sub eax, 0xaf9c259c; popfq; mov ah, 0x9d; ret 0xb89d; 
0x0000000000051426: sub eax, 0xb60f1574; add ecx, dword ptr [rax - 1]; ret; 
0x0000000000023c68: sub eax, 0xc35affff; mov r10d, ecx; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x114; syscall; 
0x0000000000023c29: sub eax, 0xc35affff; mov r10d, ecx; push rax; movsxd rdi, edi; mov eax, 0x115; syscall; 
0x0000000000023cb3: sub eax, 0xc35affff; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x0000000000023c41: sub eax, 0xc35affff; movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x0000000000023c56: sub eax, 0xc35affff; push rax; mov eax, 0x63; syscall; 
0x0000000000023c17: sub eax, 0xc35affff; push rax; mov eax, 0xa8; syscall; 
0x000000000008d010: sub eax, 0xd163a1aa; ret 0x3fe9; 
0x000000000002cf1f: sub eax, 0xde000642; ret 0xf1de; 
0x000000000008fba3: sub eax, 0xea671268; out dx, al; mov edi, 0; add byte ptr [rax], al; xor rsi, r8; ret 0xa2dd; 
0x000000000006f572: sub eax, 0xed7d2e67; push rax; ret; 
0x000000000005a01f: sub eax, 0xff480875; ret; 
0x0000000000042532: sub eax, 4; mov dword ptr [rax], edx; ret; 
0x0000000000022993: sub eax, dword ptr [0]; pop rdx; ret; 
0x0000000000006390: sub eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001e0e6: sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x00000000000181a0: sub eax, dword ptr [rax]; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000003e150: sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000004bf23: sub eax, dword ptr [rdi + 0x38]; ret; 
0x000000000004bf61: sub eax, dword ptr [rdi + 8]; ret; 
0x000000000001dea6: sub eax, dword ptr [rdi]; add byte ptr [rdi], cl; push rdi; ret; 
0x0000000000044b6b: sub eax, dword ptr [rdx]; ret; 
0x000000000004a316: sub eax, eax; pop r12; ret; 
0x00000000000171f4: sub eax, eax; ret; 
0x00000000000435a7: sub eax, ebp; adc dword ptr [rax], -3; dec dword ptr [rax - 0x77]; ret; 
0x0000000000017bf3: sub eax, ebp; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000017caa: sub eax, ebp; pop rbx; pop rbp; ret; 
0x0000000000017fba: sub eax, edi; ret; 
0x0000000000018f7b: sub eax, edi; sar rax, 2; ret; 
0x0000000000017ba8: sub eax, edx; ret; 
0x0000000000018eed: sub eax, esp; pop rbx; sar rax, 2; pop rbp; pop r12; ret; 
0x000000000004a315: sub eax, r8d; pop r12; ret; 
0x00000000000171f3: sub eax, r8d; ret; 
0x00000000000179b9: sub ebp, eax; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000004459c: sub ebp, eax; ret; 
0x00000000000597db: sub ebp, ebx; ret; 
0x0000000000057acc: sub ebx, dword ptr [rdx + 0x5b]; pop rbp; ret; 
0x000000000005fc1d: sub ebx, dword ptr [rip + 0x39260f36]; sbb dword ptr [rax + 0x79], esp; ret 0x819; 
0x00000000000470e6: sub ecx, dword ptr [rdi]; xchg eax, ebp; ret 0xd184; 
0x00000000000470b8: sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x00000000000168d6: sub ecx, eax; add rax, rsi; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000054aee: sub ecx, eax; mov qword ptr [rdx], rax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000092a3d: sub ecx, edi; jmp rdi; 
0x0000000000020d91: sub edi, 0x20; xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x0000000000020d6f: sub edi, 0x21; xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x0000000000020d02: sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x0000000000020ddc: sub edi, 0x41; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000020d18: sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000021086: sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000020d80: sub edi, 0x61; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000002133e: sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x0000000000020e7d: sub edi, 0xfff9; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000092ac9: sub edi, ecx; call qword ptr [rsi - 0x520006d5]; xor cl, bh; call rcx; 
0x0000000000092a19: sub edi, ecx; call qword ptr [rsi]; 
0x0000000000092b01: sub edi, ecx; call rdi; 
0x0000000000092a39: sub edi, ecx; inc dword ptr [rcx + 0x29]; stc; jmp rdi; 
0x0000000000092afd: sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092b09: sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x0000000000092a81: sub edi, ecx; jmp qword ptr [rcx]; 
0x00000000000929f1: sub edi, ecx; jmp rdi; 
0x0000000000092b0d: sub edi, ecx; jmp rdx; 
0x00000000000929f9: sub edi, ecx; lcall [rsi - 7]; inc edi; and eax, 0x26a4fff9; stc; jmp rdi; 
0x000000000004bb49: sub edi, edi; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023e17: sub edi, edi; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x0000000000023df3: sub edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x0000000000023e05: sub edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0xc6; syscall; 
0x0000000000059203: sub edi, esi; cvtsi2sd xmm0, rdi; ret; 
0x0000000000046301: sub edx, 0x30; cmp edx, 9; ja 0x46311; cmp ecx, 0xff; jle 0x462ef; ret; 
0x0000000000019649: sub edx, 1; jne 0x19640; xor eax, eax; ret; 
0x00000000000387fb: sub edx, eax; mov eax, edx; pop rdx; ret; 
0x000000000004d5ba: sub edx, ecx; add rax, rdx; pop rbx; ret; 
0x000000000004bf75: sub edx, ecx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x000000000003b960: sub edx, edi; lea eax, [rdx + 1]; ret; 
0x000000000003b977: sub edx, edi; lea eax, [rdx + 2]; ret; 
0x0000000000057e44: sub esi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000004c15b: sub esi, eax; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004ba47: sub esi, eax; mov rdi, rbx; mov rax, qword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x000000000003a2eb: sub esi, eax; syscall; 
0x000000000003a2eb: sub esi, eax; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004aea3: sub esp, -0x80; mov eax, edx; pop rbx; ret; 
0x0000000000022fce: sub esp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000005651b: sub esp, -0x80; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003883d: sub esp, 0x10; mov rdx, rdi; syscall; 
0x00000000000235d3: sub esp, 0x128; syscall; 
0x0000000000034f41: sub esp, 0x18; lea rdi, [rsp + 0xc]; call 0x35149; add rsp, 0x18; ret; 
0x000000000005af1b: sub esp, 0x18; movsxd rdi, edi; mov esi, 0x5413; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x0000000000059877: sub esp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000042d9d: sub esp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x000000000005ac18: sub esp, 0x20; syscall; 
0x0000000000039737: sub esp, 0x20; xor edi, edi; syscall; 
0x000000000004af54: sub esp, 0x28; syscall; 
0x000000000005ac71: sub esp, 0x38; mov rsi, rbx; syscall; 
0x0000000000057ea1: sub esp, 0x90; syscall; 
0x0000000000016f74: sub esp, 8; xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x000000000008b189: sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x0000000000062202: sub esp, esi; xchg eax, edi; ljmp [rdx]; cmpsd dword ptr [rsi], dword ptr [rdi]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x000000000008062b: sub r9b, byte ptr [r15 + 0x3e]; pop rsp; lodsb al, byte ptr [rsi]; jle 0x8065d; sbb al, byte ptr [ebp + 0x754f5473]; ret; 
0x0000000000092a3c: sub r9d, edi; jmp rdi; 
0x0000000000026fd8: sub rax, 0x10; ret; 
0x0000000000042531: sub rax, 4; mov dword ptr [rax], edx; ret; 
0x0000000000022992: sub rax, qword ptr [0]; pop rdx; ret; 
0x000000000004bf22: sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004bf60: sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000022991: sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000018eec: sub rax, r12; pop rbx; sar rax, 2; pop rbp; pop r12; ret; 
0x0000000000017bf2: sub rax, rbp; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000017ca9: sub rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000017fb9: sub rax, rdi; ret; 
0x0000000000018f7a: sub rax, rdi; sar rax, 2; ret; 
0x0000000000053679: sub rax, rdx; ret; 
0x00000000000168d5: sub rcx, rax; add rax, rsi; cmp rsi, rcx; cmovl rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000054aed: sub rcx, rax; mov qword ptr [rdx], rax; xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000059202: sub rdi, rsi; cvtsi2sd xmm0, rdi; ret; 
0x0000000000019648: sub rdx, 1; jne 0x19640; xor eax, eax; ret; 
0x000000000004d5b9: sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000004bf74: sub rdx, rcx; mov rax, rcx; mov qword ptr [rsi], rdx; ret; 
0x000000000003b95f: sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000003b976: sub rdx, rdi; lea eax, [rdx + 2]; ret; 
0x0000000000057e43: sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000003a2ea: sub rsi, r8; syscall; 
0x000000000003a2ea: sub rsi, r8; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000004c15a: sub rsi, rax; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x50]; 
0x000000000004ba46: sub rsi, rax; mov rdi, rbx; mov rax, qword ptr [rbx + 0x50]; pop rbx; mov edx, 1; jmp rax; 
0x000000000004aea2: sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x0000000000022fcd: sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000005651a: sub rsp, -0x80; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003883c: sub rsp, 0x10; mov rdx, rdi; syscall; 
0x00000000000235d2: sub rsp, 0x128; syscall; 
0x0000000000034f40: sub rsp, 0x18; lea rdi, [rsp + 0xc]; call 0x35149; add rsp, 0x18; ret; 
0x000000000005af1a: sub rsp, 0x18; movsxd rdi, edi; mov esi, 0x5413; lea rdx, [rsp + 8]; mov eax, 0x10; syscall; 
0x0000000000059876: sub rsp, 0x18; movsxd rdx, dword ptr [rax + r10*4]; add rax, rdx; jmp rax; 
0x0000000000042d9c: sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x000000000005ac17: sub rsp, 0x20; syscall; 
0x0000000000039736: sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000004af53: sub rsp, 0x28; syscall; 
0x000000000005ac70: sub rsp, 0x38; mov rsi, rbx; syscall; 
0x0000000000057ea0: sub rsp, 0x90; syscall; 
0x0000000000016f73: sub rsp, 8; xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x0000000000028a8f: subps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000028a98: subps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x00000000000296d5: subps xmm0, xmm0; xor eax, eax; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000032a18: subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002a761: subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000029cd4: subps xmm0, xmm1; je 0x29d50; movsd xmm1, qword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x0000000000029697: subps xmm0, xmm1; movsd qword ptr [rdi], xmm0; ret; 
0x000000000003358d: subps xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x00000000000335f9: subps xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000029aa2: subps xmm0, xmm4; ret; 
0x0000000000032d1a: subps xmm0, xmm5; addsd xmm1, xmm0; movapd xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x0000000000032eac: subps xmm0, xmm7; addss xmm1, xmm0; movaps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x0000000000042440: subps xmm0, xmmword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002f5db: subps xmm0, xmmword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002fb50: subps xmm0, xmmword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x000000000002de8a: subps xmm0, xmmword ptr [rip + 0x63d9f]; ret; 
0x000000000002c43b: subps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002c9dc: subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9ba: subps xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x0000000000032822: subps xmm1, xmm0; xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000355db: subps xmm1, xmm1; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035689: subps xmm1, xmm1; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x0000000000032b9e: subps xmm1, xmm1; divsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000032d78: subps xmm1, xmm1; divss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000002af6d: subps xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000028846: subps xmm2, xmm1; addsd xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000029a69: subps xmm2, xmmword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x000000000002889b: subps xmm3, xmmword ptr [rip + 0x694b6]; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a9a: subps xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000029a9e: subps xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000029a92: subps xmm5, xmm2; mulsd xmm4, xmm5; subsd xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x000000000004243f: subsd xmm0, qword ptr [rip + 0x4f7e9]; add rsp, 0x18; ret; 
0x000000000002f5da: subsd xmm0, qword ptr [rip + 0x62ef6]; add rsp, 0x28; ret; 
0x000000000002de89: subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x0000000000028a8e: subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000029cd3: subsd xmm0, xmm1; je 0x29d50; movsd xmm1, qword ptr [rip + 0x66cdf]; xorps xmm0, xmm1; ret; 
0x0000000000029696: subsd xmm0, xmm1; movsd qword ptr [rdi], xmm0; ret; 
0x000000000003358c: subsd xmm0, xmm1; movsd qword ptr [rdi], xmm1; ret; 
0x0000000000029aa1: subsd xmm0, xmm4; ret; 
0x0000000000032d19: subsd xmm0, xmm5; addsd xmm1, xmm0; movapd xmm0, xmm2; addsd xmm0, xmm1; ret; 
0x000000000002c43a: subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000032821: subsd xmm1, xmm0; xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000355da: subsd xmm1, xmm1; add rsp, 0x18; movapd xmm0, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000032b9d: subsd xmm1, xmm1; divsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000002af6c: subsd xmm1, xmm2; add rsp, 0x10; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000029a68: subsd xmm2, qword ptr [rip + 0x68448]; mulsd xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x0000000000028845: subsd xmm2, xmm1; addsd xmm2, xmm5; movapd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000002889a: subsd xmm3, qword ptr [rip + 0x694b6]; mulsd xmm1, xmm3; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a99: subsd xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000029a9d: subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x0000000000029a91: subsd xmm5, xmm2; mulsd xmm4, xmm5; subsd xmm4, xmm1; subsd xmm4, xmm3; subsd xmm0, xmm4; ret; 
0x000000000002fb4f: subss xmm0, dword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x0000000000028a97: subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x00000000000296d4: subss xmm0, xmm0; xor eax, eax; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000032a17: subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002a760: subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000335f8: subss xmm0, xmm1; movss dword ptr [rdi], xmm1; ret; 
0x0000000000032eab: subss xmm0, xmm7; addss xmm1, xmm0; movaps xmm0, xmm2; addss xmm0, xmm1; ret; 
0x000000000002c9db: subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002c9b9: subss xmm1, xmm0; pop rax; movaps xmm0, xmm1; ret; 
0x0000000000035688: subss xmm1, xmm1; add rsp, 0x18; movaps xmm0, xmm1; divss xmm0, xmm1; ret; 
0x0000000000032d77: subss xmm1, xmm1; divss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000001d14: syscall; 
0x000000000001b2ef: syscall; add rsp, 0x88; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002232f: syscall; call 0x169c0; add rsp, 0x50; pop rbx; ret; 
0x0000000000023bc0: syscall; call 0x169c0; pop rdx; ret; 
0x000000000005598c: syscall; cmp rax, -0x26; jne 0x55999; mov rax, r8; syscall; ret; 
0x0000000000057e5c: syscall; hlt; ret; 
0x0000000000023ab0: syscall; mov dword ptr [rbx + 0x10], ebp; pop rax; pop rbx; pop rbp; ret; 
0x000000000004ea51: syscall; mov eax, r8d; pop rbx; ret; 
0x000000000004db95: syscall; mov eax, r8d; pop rdx; ret; 
0x000000000004ae0f: syscall; mov eax, r8d; ret; 
0x0000000000023403: syscall; mov edx, eax; movsxd rdi, edx; call 0x169c0; pop rdx; ret; 
0x0000000000055c59: syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000003a3fc: syscall; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x000000000005ac52: syscall; mov rdi, rax; call 0x169c0; add rsp, 0x20; pop rbx; ret; 
0x00000000000222a0: syscall; mov rdi, rax; call 0x169c0; add rsp, 0x58; ret; 
0x000000000003a37c: syscall; mov rdi, rax; call 0x169c0; add rsp, 0x70; pop rbx; ret; 
0x00000000000238e7: syscall; mov rdi, rax; call 0x169c0; add rsp, 0x78; ret; 
0x00000000000225ac: syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x0000000000022666: syscall; movsxd rdi, eax; call 0x169c0; add rsp, 0x58; ret; 
0x0000000000022594: syscall; movsxd rdi, eax; call 0x169c0; pop rdx; ret; 
0x000000000005aa2d: syscall; movsxd rdi, r9d; call 0x169c0; pop rdx; ret; 
0x000000000003971c: syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000223b5: syscall; neg eax; ret; 
0x00000000000559e6: syscall; pop rax; ret; 
0x000000000004cf28: syscall; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000004c221: syscall; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000023711: syscall; ret; 
0x000000000005907d: syscall; test eax, eax; je 0x59086; neg eax; ret; 
0x000000000005a297: syscall; xor eax, eax; add rsp, 0x1b8; ret; 
0x000000000005b0bc: syscall; xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000552e4: syscall; xor eax, eax; ret; 
0x0000000000005e87: sysenter; 
0x000000000003782f: test ah, 4; jne 0x37823; ret; 
0x00000000000378b4: test ah, 4; jne 0x378a8; ret; 
0x0000000000026a49: test al, 0; add byte ptr [rax], al; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000001bb29: test al, 0; add byte ptr [rax], al; fchs; fxch st(1); ret; 
0x000000000004aada: test al, 0; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x00000000000550d6: test al, 0; add byte ptr [rax], al; ret; 
0x0000000000023c1e: test al, 0; add byte ptr [rax], al; syscall; 
0x000000000007c34c: test al, 0; add esi, dword ptr [rax]; add eax, 0x5e201430; call qword ptr [rsi]; 
0x000000000008b909: test al, 0x13; ret; 
0x0000000000005866: test al, 0x20; ret 0x9504; 
0x000000000008aeb9: test al, 0x27; add cl, dh; outsb dx, byte ptr [rsi]; ret; 
0x0000000000052f14: test al, 0x41; cld; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000070b6e: test al, 0x51; ret; 
0x00000000000872d6: test al, 0x54; stosd dword ptr [rdi], eax; push rsp; ret 0xa454; 
0x00000000000169bd: test al, 0x66; nop; cmp rdi, -0x1000; ja 0x169d0; mov rax, rdi; ret; 
0x00000000000709ce: test al, 0x69; ret; 
0x000000000006009d: test al, 0x86; fimul dword ptr [rax - 0x1414017]; ret; 
0x0000000000005002: test al, 0x94; ret 0x88ad; 
0x000000000008f787: test al, 1; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x0000000000001d2c: test al, 2; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 3; 
0x000000000004bd09: test al, 8; je 0x4bd16; or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x000000000003b95b: test al, al; jne 0x3b966; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000005b7ce: test al, al; jne 0x5b7bf; movzx edx, al; sub eax, edx; ret; 
0x0000000000037219: test ax, ax; fld1; js 0x37225; fscale; fstp st(1); ret; 
0x0000000000021971: test byte ptr [r8 + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x0000000000018f79: test byte ptr [rax + 0x29], 0xf8; sar rax, 2; ret; 
0x000000000002d6fb: test byte ptr [rax + 0x3d000000], bh; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000059053: test byte ptr [rax + 0x42], 0xf; add byte ptr [rax - 0x73], cl; adc al, 0xe; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004315f: test byte ptr [rax + 0x63], 0xd0; mov rax, r12; syscall; 
0x00000000000406b0: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x36; syscall; 
0x000000000003d4b1: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x37; syscall; 
0x000000000002268c: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x000000000002265d: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x42; syscall; 
0x00000000000396f5: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x8d; syscall; 
0x0000000000023386: test byte ptr [rax + 0x63], 0xd2; mov eax, 0xe9; syscall; 
0x000000000005a356: test byte ptr [rax + 0x63], 0xfd; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x000000000001e0d8: test byte ptr [rax + 0xf], 0xbf; add al, 0x70; ret; 
0x0000000000017aa6: test byte ptr [rax + rax - 0x7cb80000], dh; ret; 
0x0000000000021972: test byte ptr [rax + rdx*8 + 6], 0x20; je 0x21984; mov rax, r9; syscall; 
0x000000000004ba32: test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000049c3c: test byte ptr [rax - 0x77], 0xdf; call rax; 
0x000000000004c13c: test byte ptr [rax - 0x77], 0xdf; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000004b925: test byte ptr [rax - 0x77], 0xe8; mov rdi, r9; syscall; 
0x0000000000054f25: test byte ptr [rax - 0x77], 0xe8; mov rdx, r12; syscall; 
0x000000000005a01b: test byte ptr [rax - 0x80], 0xff; sub eax, 0xff480875; ret; 
0x0000000000021b91: test byte ptr [rax], 0; add byte ptr [rbx - 0x16f3dbbc], cl; sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000170aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 1]; pop rbx; ret; 
0x00000000000175ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000070b6a: test byte ptr [rax], bl; mov dword ptr [rsi], edi; test al, 0x51; ret; 
0x0000000000018d91: test byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000007fe29: test byte ptr [rbp - 0x4f7b517c], ch; test byte ptr [rcx - 0x4a7b4c7c], dh; test byte ptr [rsi - 0x447b487c], dh; test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x0000000000045093: test byte ptr [rbp - 0x72b7feb8], 0x2c; ret 0xd231; 
0x000000000004305f: test byte ptr [rbx], 1; je 0x4309e; mov eax, 0x68; syscall; 
0x00000000000442a8: test byte ptr [rbx], al; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000001a63e: test byte ptr [rcx + 0x95de8ef], 4; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x0000000000050d69: test byte ptr [rcx + rcx*4 - 0x11], 0x41; call qword ptr [rbp + 0x48]; 
0x000000000005a9a7: test byte ptr [rcx + rcx*4 - 0x40], 0xf; add eax, 0x89f0f883; ret 0xf474; 
0x000000000007fe2f: test byte ptr [rcx - 0x4a7b4c7c], dh; test byte ptr [rsi - 0x447b487c], dh; test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x0000000000077d16: test byte ptr [rcx - 0x6d2f6e80], dl; ret; 
0x000000000005677f: test byte ptr [rcx - 0x77], 0xea; mov rax, r13; syscall; 
0x000000000002d621: test byte ptr [rdi + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000085bfc: test byte ptr [rdi + 0x515c682a], dl; ret; 
0x0000000000049247: test byte ptr [rdi - 0x14ffffff], ah; ret; 
0x00000000000556e5: test byte ptr [rdi - 0x75000000], al; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x00000000000235e4: test byte ptr [rdi], 0x94; ret 0xd184; 
0x000000000004403b: test byte ptr [rdi], 0x95; ret 0xd184; 
0x00000000000185e4: test byte ptr [rdi], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000000470b2: test byte ptr [rdx + 0x3c000001], bl; sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x00000000000444da: test byte ptr [rdx + rax], dh; add byte ptr [rcx + rcx*4 - 9], cl; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000007fe23: test byte ptr [rdx - 0x537b547c], ch; test byte ptr [rbp - 0x4f7b517c], ch; test byte ptr [rcx - 0x4a7b4c7c], dh; test byte ptr [rsi - 0x447b487c], dh; test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x0000000000051420: test byte ptr [rdx], ch; add al, 0; add byte ptr [rbp - 0x49f0ea8c], bh; add ecx, dword ptr [rax - 1]; ret; 
0x000000000000cd40: test byte ptr [rip + 0x120000], ah; or dword ptr [rax], eax; ret; 
0x000000000007fe35: test byte ptr [rsi - 0x447b487c], dh; test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x000000000007fdd3: test byte ptr [rsi - 0x7f], ch; ret; 
0x0000000000029a6d: test byte ptr [rsi], al; add dl, dh; mulps xmm2, xmm3; addsd xmm0, xmm2; ret; 
0x000000000008b18d: test byte ptr [rsi], al; cmp eax, 0x68497682; ret 0x3c25; 
0x000000000007fe3b: test byte ptr [rsp + rax*4 - 0x7b3f7b42], bh; ret 0xc384; 
0x00000000000495da: test ch, cl; add al, byte ptr [rax]; add bl, ch; ret; 
0x0000000000019471: test ch, cl; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000005fcf9: test ch, dh; push rdi; movsxd rsi, dword ptr [rdx + 0x22]; sbb edi, edi; ret; 
0x0000000000091680: test cl, bl; or ah, cl; ret 0x1291; 
0x0000000000057f3e: test cl, cl; cmovne eax, edx; ret; 
0x0000000000045a9f: test dh, ah; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x0000000000018426: test dh, cl; add dword ptr [rax], eax; add byte ptr [rcx - 0x7d], cl; mov byte ptr [rcx], 0x89; ret 0xc189; 
0x0000000000017ba2: test dl, dl; jne 0x17b90; xor eax, eax; sub eax, edx; ret; 
0x0000000000018766: test dl, dl; jne 0x18770; ret; 
0x0000000000004a6d: test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x0000000000043ff3: test dword ptr [rax + 0x2b], 0x8940247c; ret 0x97e8; 
0x000000000004b115: test dword ptr [rax + rax + 0x1be0000], ecx; add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000042444: test dword ptr [rax + rax], 0x18c48348; ret; 
0x000000000004b344: test dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000018d60: test dword ptr [rax], eax; pop rbx; pop rbp; ret; 
0x000000000008665f: test dword ptr [rax], ecx; lea esp, [rax]; nop; ret; 
0x000000000007dcd3: test dword ptr [rax], edx; cdq; ret 0x9553; 
0x0000000000014e73: test dword ptr [rax], esi; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000018d5f: test dword ptr [rax], r8d; pop rbx; pop rbp; ret; 
0x000000000006f6b0: test dword ptr [rbp - 0x6e746e9e], ecx; scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x00000000000803ca: test dword ptr [rbx + 0x2c], edx; push rsp; ret; 
0x000000000000553e: test dword ptr [rbx - 0x50f4da7d], esi; adc ebp, dword ptr [rsi + 0x4fc3242e]; and al, 0x73; push 0x4e; ret 0xf3ba; 
0x0000000000032bbb: test dword ptr [rbx - 0xdffffff], eax; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000000553a: test dword ptr [rbx], ebx; cmp cl, byte ptr [rip + 0x2583b385]; or ebp, dword ptr [rdi + 0x242eae13]; ret; 
0x000000000005b10b: test dword ptr [rcx - 0x3f], 0x27bf20f9; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xa8e8; 
0x000000000005b16b: test dword ptr [rcx - 0x3f], 0x28bf20f9; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x48e8; 
0x0000000000077d0c: test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x000000000004b110: test dword ptr [rcx - 0x77], 0x8c850fc2; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x000000000008093d: test dword ptr [rdi + 0x23950c82], ebp; imul ebx, dword ptr [rbx - 0x49a4f71], 0x5f; ret; 
0x000000000003c6b7: test dword ptr [rdi - 3], edi; dec dword ptr [rax - 0x77]; ret; 
0x000000000002d627: test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000001a294: test dword ptr [rdx - 0x27000000], esp; ret; 
0x00000000000431d6: test dword ptr [rip + 0x49ffffff], eax; movsxd rdi, edi; mov edx, 1; mov esi, 2; mov eax, 0x48; syscall; 
0x000000000005d8b9: test dword ptr [rsi + 0x5bfffffe], ebx; pop rbp; pop r12; ret; 
0x000000000006ee47: test dword ptr [rsi - 0x7a], ebx; ret 0x478f; 
0x0000000000004a6e: test dword ptr [rsi - 0x9eb5c1], ebp; call rsi; 
0x00000000000275c2: test eax, 0x10026e8; ret; 
0x000000000007084a: test eax, 0x1480028d; adc byte ptr [rdx - 0x43c483b7], cl; or dword ptr [rcx + rsi*2], 0x8ead7ae7; mov dh, 0x8e; ret; 
0x0000000000023b13: test eax, 0x5affff2e; ret; 
0x0000000000032bb5: test eax, 0x7ff00000; jne 0x32d43; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000041596: test eax, 0x83490000; add byte ptr ds:[rdi], cl; test edx, esi; add dword ptr [rax], eax; add bh, dh; ret; 
0x0000000000049240: test eax, 0x85fffd7b; ror byte ptr [rdi], 0x84; cmpsd dword ptr [rsi], dword ptr [rdi]; add dword ptr [rax], eax; add bl, ch; ret; 
0x000000000008cb48: test eax, 0x9bea62f7; jmp qword ptr [rcx + 0x3c]; 
0x000000000006bdd0: test eax, 0xab33aa33; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000007328e: test eax, 0xbf54a754; push rsp; call qword ptr [rsi - 0x7e]; 
0x0000000000026fcb: test eax, 0xfffff000; je 0x26fdd; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000002745a: test eax, 0xfffff000; je 0x2746c; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000056eba: test eax, 0xfffffffb; je 0x56e72; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000056f30: test eax, 0xfffffffb; je 0x56ef8; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000026988: test eax, eax; cmove rax, rdx; ret; 
0x0000000000057d60: test eax, eax; cmovne eax, edx; pop rdx; ret; 
0x00000000000573ea: test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003721a: test eax, eax; fld1; js 0x37225; fscale; fstp st(1); ret; 
0x00000000000190e0: test eax, eax; je 0x190f0; cmp rcx, rdx; jne 0x190c0; xor eax, eax; ret; 
0x000000000001b29b: test eax, eax; je 0x1b2ac; cmp eax, 2; jne 0x1b2f1; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x0000000000025d4c: test eax, eax; je 0x25d34; pop rbx; ret; 
0x000000000002e4bc: test eax, eax; je 0x2e4da; movapd xmm0, xmm1; ret; 
0x000000000003d8b5: test eax, eax; je 0x3d8bd; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000003f6bc: test eax, eax; je 0x3f6c5; cmp dword ptr [rax + 0x10], ebx; jne 0x3f6b6; pop rbx; ret; 
0x0000000000049c35: test eax, eax; je 0x49c4b; xor edx, edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000049fad: test eax, eax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004cc1a: test eax, eax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004df4c: test eax, eax; je 0x4df54; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000549e6: test eax, eax; je 0x549ec; call rax; 
0x0000000000054a08: test eax, eax; je 0x54a0e; call rax; 
0x0000000000055953: test eax, eax; je 0x55960; dec eax; mov dword ptr [rip + 0x242679], eax; ret; 
0x0000000000055c27: test eax, eax; je 0x55c43; mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000056618: test eax, eax; je 0x5662f; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000572a0: test eax, eax; je 0x572b5; movsxd rdi, eax; movsxd rsi, r12d; mov eax, 0x90; syscall; 
0x000000000005907f: test eax, eax; je 0x59086; neg eax; ret; 
0x00000000000590f8: test eax, eax; je 0x59112; call rax; 
0x000000000005aa52: test eax, eax; je 0x5aa64; mov edi, 1; mov eax, 0x3c; syscall; 
0x000000000005c66b: test eax, eax; je 0x5c679; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005d993: test eax, eax; je 0x5d9a1; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000003cadd: test eax, eax; jg 0x3cae4; mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x0000000000018e0a: test eax, eax; jne 0x18e00; xor eax, eax; pop rbx; ret; 
0x0000000000018e50: test eax, eax; jne 0x18e40; mov edx, eax; sub eax, edx; ret; 
0x000000000002144e: test eax, eax; jne 0x21460; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000233c1: test eax, eax; jne 0x233d2; mov r10, rbx; mov eax, 0xe8; syscall; 
0x000000000004d717: test eax, eax; jne 0x4d6eb; call 0x4d67f; xor eax, eax; ret; 
0x000000000005495d: test eax, eax; jne 0x5494c; ret; 
0x0000000000054c47: test eax, eax; jne 0x54c54; call 0x57d91; xor eax, eax; pop rbx; ret; 
0x0000000000055403: test eax, eax; jne 0x553e4; pop rax; pop rbx; pop rbp; ret; 
0x00000000000566e5: test eax, eax; jne 0x566d4; ret; 
0x0000000000056c9b: test eax, eax; jne 0x56ca3; or dword ptr [r8], 8; ret; 
0x0000000000056cf7: test eax, eax; jne 0x56d05; or dword ptr [r8], 4; ret; 
0x00000000000573be: test eax, eax; jne 0x573b6; ret; 
0x0000000000032a13: test eax, eax; jns 0x32a23; subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000558f0: test eax, eax; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000002225b: test eax, eax; js 0x22269; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000040700: test eax, eax; js 0x40708; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x0000000000054563: test eax, eax; js 0x5456b; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005b444: test eax, eax; js 0x5b44c; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x000000000005536e: test eax, eax; mov dword ptr [rdx + 0x10], ecx; jns 0x5537c; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000043075: test eax, eax; mov dword ptr [rsp + 0x14], eax; jne 0x43244; mov eax, 0x66; syscall; 
0x00000000000430f0: test eax, eax; mov dword ptr [rsp + 0x14], eax; js 0x43244; mov rax, r9; syscall; 
0x000000000003a67f: test eax, eax; mov ebp, eax; je 0x3a69c; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000427e6: test eax, eax; mov rbx, rax; jne 0x42843; mov rdx, qword ptr fs:[0]; mov eax, 0xba; syscall; 
0x000000000004f17e: test eax, eax; mov rdx, rax; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x000000000004cb3a: test eax, eax; mov rsi, rax; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000035338: test eax, eax; movsd xmm0, qword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x0000000000035388: test eax, eax; movss xmm0, dword ptr [rip + 0x5d836]; jne 0x35397; movaps xmm0, xmm1; ret; 
0x0000000000020db0: test eax, eax; sete al; movzx eax, al; pop rdx; ret; 
0x000000000005453f: test eax, eax; setne al; movzx eax, al; neg eax; pop rdx; ret; 
0x0000000000020dfb: test eax, eax; setne al; movzx eax, al; pop rdx; ret; 
0x0000000000020f6b: test eax, eax; setne dl; mov eax, edx; pop rbx; ret; 
0x000000000004307c: test ebx, eax; add dword ptr [rax], eax; add byte ptr [rax + 0x66], bh; syscall; 
0x000000000002c309: test ebx, ebx; je 0x2c318; movsd xmm1, qword ptr [rip + 0x646ab]; xorps xmm0, xmm1; pop rbx; ret; 
0x000000000002c88f: test ebx, ebx; je 0x2c89e; movss xmm1, dword ptr [rip + 0x64135]; xorps xmm0, xmm1; pop rbx; ret; 
0x00000000000549de: test ebx, ebx; je 0x54a2d; mov rax, qword ptr [rbx]; test rax, rax; je 0x549ec; call rax; 
0x000000000005d8b6: test ebx, ebx; jne 0x5d75c; pop rbx; pop rbp; pop r12; ret; 
0x000000000005fb7e: test ebx, ebx; or word ptr [r11 - 0x2e], sp; ret; 
0x0000000000040a4f: test ebx, esi; add al, byte ptr [rax]; add bh, dh; ret; 
0x00000000000533c6: test ecx, ecx; cmove eax, edx; ret; 
0x000000000005820f: test ecx, ecx; cmove eax, r8d; ret; 
0x000000000005341c: test ecx, ecx; cmove rax, rdx; ret; 
0x0000000000042545: test ecx, ecx; jne 0x4254c; mov dword ptr [rax], edi; ret; 
0x000000000004b180: test ecx, ecx; jne 0x4b193; mov eax, 4; mov rdi, r8; mov rsi, rbx; syscall; 
0x00000000000335bf: test ecx, ecx; jns 0x335cb; and eax, 0x80000000; mov dword ptr [rdi], eax; ret; 
0x0000000000037a48: test edi, edi; je 0x37a55; movsxd rdi, edi; bsf rax, rdi; inc eax; ret; 
0x0000000000037a59: test edi, edi; je 0x37a64; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000037a68: test edi, edi; je 0x37a73; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003a52c: test edi, edi; je 0x3a535; call 0x5b5a5; add rsp, 0x118; ret; 
0x00000000000562cf: test edi, edi; je 0x562f3; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000005730f: test edi, edi; je 0x57325; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000002f4ad: test edi, edi; jns 0x2f4b9; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002fa2a: test edi, edi; jns 0x2fa36; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002ffb9: test edi, edi; jns 0x2ffc5; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000030557: test edi, edi; jns 0x30563; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x00000000000232ba: test edi, edi; push rcx; jne 0x232cb; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000021299: test edi, edi; setne al; neg eax; ret; 
0x0000000000040141: test edx, edx; cmove edx, eax; mov eax, edx; add rsp, 0x28; ret; 
0x0000000000049fcb: test edx, edx; je 0x49fd2; mov qword ptr [rdx], rax; ret; 
0x000000000004bf59: test edx, edx; je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004d662: test edx, edx; je 0x4d66e; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000018f76: test edx, edx; jne 0x18f70; sub rax, rdi; sar rax, 2; ret; 
0x000000000002335c: test edx, edx; jne 0x2336f; mov edi, 1; mov eax, 0xd5; syscall; 
0x0000000000023528: test edx, edx; jne 0x23536; mov eax, 0xfd; syscall; 
0x0000000000053e4c: test edx, edx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd6: test edx, edx; jne 0x53ff7; xor eax, eax; ret; 
0x000000000005b1b9: test edx, edx; jne 0x5b1c7; lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000002e519: test edx, edx; jns 0x2e535; movaps xmm0, xmm1; ret; 
0x000000000003542e: test edx, edx; jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x00000000000354c2: test edx, edx; jns 0x354d1; movss xmm1, dword ptr [rip + 0x5b502]; xorps xmm0, xmm1; ret; 
0x0000000000025c79: test edx, edx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x0000000000035137: test edx, edx; mov dword ptr [rdi], esi; je 0x35148; movsd xmm1, qword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x00000000000352de: test edx, edx; mov dword ptr [rdi], esi; je 0x352ef; movss xmm1, dword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x0000000000019180: test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000004cb85: test edx, edx; mov r13, rsi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x000000000002e661: test edx, edx; movaps xmm0, xmm1; jns 0x2e67c; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000059544: test edx, edx; sete al; ret; 
0x000000000004159e: test edx, esi; add dword ptr [rax], eax; add bh, dh; ret; 
0x0000000000043697: test esi, 0xffffff00; jne 0x436a3; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000056c56: test esi, esi; je 0x56c60; mov eax, 0x16; ret; 
0x00000000000233fa: test esi, esi; jne 0x23407; mov eax, 0x11c; syscall; 
0x0000000000043d22: test esi, esi; jne 0x43d30; mov qword ptr [rdx], 0; xor eax, eax; ret; 
0x0000000000049f88: test esi, esi; jne 0x49f9c; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x00000000000392c9: test esi, esi; mov esi, 0x80045430; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000003ad33: test esp, edi; add byte ptr [rax], al; add bl, ch; sbb esi, esi; ret; 
0x0000000000035136: test r10, r10; mov dword ptr [rdi], esi; je 0x35148; movsd xmm1, qword ptr [rip + 0x5b87b]; xorps xmm0, xmm1; ret; 
0x00000000000352dd: test r10d, r10d; mov dword ptr [rdi], esi; je 0x352ef; movss xmm1, dword ptr [rip + 0x5b6e4]; xorps xmm0, xmm1; ret; 
0x0000000000056c55: test r14, r14; je 0x56c60; mov eax, 0x16; ret; 
0x00000000000233c0: test r8, r8; jne 0x233d2; mov r10, rbx; mov eax, 0xe8; syscall; 
0x00000000000190df: test r8d, r8d; je 0x190f0; cmp rcx, rdx; jne 0x190c0; xor eax, eax; ret; 
0x000000000005820e: test r9d, r9d; cmove eax, r8d; ret; 
0x0000000000026fca: test rax, -0x1000; je 0x26fdd; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027459: test rax, -0x1000; je 0x2746c; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000026987: test rax, rax; cmove rax, rdx; ret; 
0x0000000000025d4b: test rax, rax; je 0x25d34; pop rbx; ret; 
0x000000000003f6bb: test rax, rax; je 0x3f6c5; cmp dword ptr [rax + 0x10], ebx; jne 0x3f6b6; pop rbx; ret; 
0x0000000000049c34: test rax, rax; je 0x49c4b; xor edx, edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000049fac: test rax, rax; je 0x49fb5; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004cc19: test rax, rax; je 0x4cc23; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004df4b: test rax, rax; je 0x4df54; mov edx, dword ptr [rsp + 0xc]; mov eax, edx; add rsp, 0x18; ret; 
0x00000000000549e5: test rax, rax; je 0x549ec; call rax; 
0x0000000000054a07: test rax, rax; je 0x54a0e; call rax; 
0x00000000000590f7: test rax, rax; je 0x59112; call rax; 
0x000000000005aa51: test rax, rax; je 0x5aa64; mov edi, 1; mov eax, 0x3c; syscall; 
0x000000000005c66a: test rax, rax; je 0x5c679; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005d992: test rax, rax; je 0x5d9a1; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000002144d: test rax, rax; jne 0x21460; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004f17d: test rax, rax; mov rdx, rax; jne 0x4f197; movsxd rdi, r12d; mov eax, 3; syscall; 
0x000000000004cb39: test rax, rax; mov rsi, rax; jne 0x4cb4b; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000035337: test rax, rax; movsd xmm0, qword ptr [rip + 0x5cdde]; jne 0x35348; movapd xmm0, xmm1; ret; 
0x000000000002104a: test rax, rax; setne al; movzx eax, al; pop rdx; ret; 
0x00000000000549dd: test rbx, rbx; je 0x54a2d; mov rax, qword ptr [rbx]; test rax, rax; je 0x549ec; call rax; 
0x000000000005d8b5: test rbx, rbx; jne 0x5d75c; pop rbx; pop rbp; pop r12; ret; 
0x0000000000037a58: test rdi, rdi; je 0x37a64; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000037a67: test rdi, rdi; je 0x37a73; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003a52b: test rdi, rdi; je 0x3a535; call 0x5b5a5; add rsp, 0x118; ret; 
0x0000000000049fca: test rdx, rdx; je 0x49fd2; mov qword ptr [rdx], rax; ret; 
0x000000000004bf58: test rdx, rdx; je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004d661: test rdx, rdx; je 0x4d66e; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000053e4b: test rdx, rdx; jne 0x53e6d; xor eax, eax; ret; 
0x0000000000053fd5: test rdx, rdx; jne 0x53ff7; xor eax, eax; ret; 
0x000000000005b1b8: test rdx, rdx; jne 0x5b1c7; lea rsi, [rsp + 0xf]; mov edx, 1; mov eax, 0x59; syscall; 
0x000000000003542d: test rdx, rdx; jns 0x3543d; movsd xmm1, qword ptr [rip + 0x5b586]; xorps xmm0, xmm1; ret; 
0x0000000000025c78: test rdx, rdx; lea rdx, [rip + 0x6dbe3]; cmove rax, rdx; ret; 
0x000000000004cb84: test rdx, rdx; mov r13, rsi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x0000000000043d21: test rsi, rsi; jne 0x43d30; mov qword ptr [rdx], 0; xor eax, eax; ret; 
0x0000000000049f87: test rsi, rsi; jne 0x49f9c; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x00000000000392c8: test rsi, rsi; mov esi, 0x80045430; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x0000000000032b90: ucomisd xmm1, xmm0; jp 0x32b9d; jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000035599: ucomisd xmm1, xmm2; ja 0x3558f; movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x000000000002de7f: ucomisd xmm2, xmm4; addsd xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x000000000002b8d6: ucomisd xmm3, xmm1; addsd xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x000000000002969f: ucomisd xmm4, qword ptr [rip + 0x687c9]; ja 0x296ae; movsd qword ptr [rdi], xmm4; ret; 
0x0000000000032b91: ucomiss xmm1, xmm0; jp 0x32b9d; jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000032d6b: ucomiss xmm1, xmm0; jp 0x32d77; jne 0x32d77; divss xmm0, xmm2; ret; 
0x000000000003559a: ucomiss xmm1, xmm2; ja 0x3558f; movsd xmm2, qword ptr [rip + 0x5b419]; xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x0000000000035648: ucomiss xmm1, xmm2; ja 0x3563e; movss xmm2, dword ptr [rip + 0x5b37b]; xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x000000000002de80: ucomiss xmm2, xmm4; addsd xmm0, xmm2; jbe 0x2deab; subsd xmm0, qword ptr [rip + 0x63d9f]; ret; 
0x000000000002b8d7: ucomiss xmm3, xmm1; addsd xmm0, xmm1; jbe 0x2b906; addsd xmm0, qword ptr [rip + 0x66348]; ret; 
0x00000000000296a0: ucomiss xmm4, dword ptr [rip + 0x687c9]; ja 0x296ae; movsd qword ptr [rdi], xmm4; ret; 
0x000000000004f2a8: vminsd xmm8, xmm4, qword ptr [rcx + 0x5c]; ret; 
0x00000000000179ba: vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000001e9e1: vxorpd ymm1, ymm14, ymm3; cmp edi, 0x60; cmovle eax, edx; and eax, 0x3f; ret; 
0x00000000000431a5: wait; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x00000000000237f0: wait; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; ret 0xff31; 
0x0000000000071afb: wait; add byte ptr [rax], al; sbb ebx, dword ptr [rsi + rdi + 0x739f5a49]; push rbp; ret; 
0x00000000000709c7: wait; add byte ptr [rsi - 0x64cbafcc], al; test al, 0x69; ret; 
0x000000000006f66d: wait; add dl, bh; push r10; jmp qword ptr [rsi - 0x6b]; 
0x0000000000040977: wait; add dword ptr [eax], eax; add rsp, 0x10; mov rax, rbx; pop rbx; ret; 
0x000000000008adf8: wait; fadd dword ptr fs:[rax]; fnstcw word ptr [rsi - 0x685bffcf]; ret; 
0x000000000008cb4c: wait; jmp qword ptr [rcx + 0x3c]; 
0x0000000000087858: wait; lahf; stosd dword ptr [rdi], eax; mov bh, 0x65; ret; 
0x000000000001fc80: wait; mov dword ptr [rdi + 0x20], 0x1f83d9ab; mov dword ptr [rdi + 0x24], 0x5be0cd19; ret; 
0x0000000000086151: wait; mov edi, 0x9665276; cdqe; push rax; ret 0x7153; 
0x0000000000083fb5: wait; mov edi, 0xc19bc09b; wait; ret 0xc39b; 
0x0000000000083faf: wait; mov esp, 0xbe9bbd9b; wait; mov edi, 0xc19bc09b; wait; ret 0xc39b; 
0x000000000002df26: wait; movss xmm1, dword ptr [rip + 0x64c4d]; movaps xmm0, xmm1; ret; 
0x0000000000091330: wait; popfq; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000002dfd6: wait; ret 0x440f; 
0x000000000001d6a0: wait; ret 0x450f; 
0x000000000006d91b: wait; ret 0x534f; 
0x000000000006cd9e: wait; ret 0xc29d; 
0x0000000000083fbb: wait; ret 0xc39b; 
0x000000000008a1b3: wait; ret 0xd6cc; 
0x00000000000788a5: wait; ret; 
0x000000000002dfc3: wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000042782: wait; sbb dword ptr [rcx], eax; add byte ptr [rax - 0x73], cl; add eax, 0x255883; pop rbx; ret; 
0x000000000008cd0b: wait; sub byte ptr [rbx + rdi*2], al; mov esp, 0x9d228b0c; lcall [rdi - 0x5dc9c013]; sysenter; 
0x00000000000709c5: wait; sub eax, 0x3486009b; push rax; xor al, 0x9b; test al, 0x69; ret; 
0x0000000000075225: wait; sub eax, 0xaf9c259c; popfq; mov ah, 0x9d; ret 0xb89d; 
0x000000000008b188: wait; sub esp, dword ptr [rcx + 0x6849b86]; cmp eax, 0x68497682; ret 0x3c25; 
0x00000000000709cd: wait; test al, 0x69; ret; 
0x000000000008b18c: wait; test byte ptr [rsi], al; cmp eax, 0x68497682; ret 0x3c25; 
0x0000000000004b87: wbinvd; sub al, 0xae; jmp qword ptr [rcx]; 
0x000000000004c010: xchg ah, bh; dec dword ptr [rcx + 0x415d5be8]; pop rsp; ret; 
0x000000000007688b: xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x000000000003f244: xchg al, ah; movzx eax, ax; ret; 
0x000000000003d55a: xchg al, ah; ret; 
0x0000000000076883: xchg al, cl; xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x000000000008dbaa: xchg al, dl; dec dword ptr [r10 - 0x78e9bfc4]; stc; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x00000000000709c9: xchg byte ptr [rax + rdx*2], dh; xor al, 0x9b; test al, 0x69; ret; 
0x0000000000076881: xchg byte ptr [rax - 0x4679377a], dh; xchg byte ptr [rbx - 0x3379477a], dh; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x00000000000913e9: xchg byte ptr [rbx + 0x67638ec0], dl; ret 0x3e9a; 
0x00000000000894d6: xchg byte ptr [rbx + 0x6e], bl; mov edx, 0x6f5bc6ed; mov esi, 0x705c06fd; ret 0x470d; 
0x0000000000076887: xchg byte ptr [rbx - 0x3379477a], dh; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000076885: xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000004fe8: xchg byte ptr [rcx], bh; ret 0x5241; 
0x0000000000092dee: xchg byte ptr [rdi], dh; std; insb byte ptr [rdi], dx; mov eax, 0x59567e3a; sub eax, 0x31ad6446; ret 0x9dff; 
0x000000000007687f: xchg byte ptr [rdx - 0x37794f7a], bh; xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000091368: xchg byte ptr [rsi + 1], cl; rcl dword ptr [rax + rcx*4], 0x80; ret; 
0x000000000003ae96: xchg byte ptr [rsi + 5], cl; add byte ptr [rax - 1], cl; ret; 
0x000000000007688d: xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000092ded: xchg byte ptr cs:[rdi], dh; std; insb byte ptr [rdi], dx; mov eax, 0x59567e3a; sub eax, 0x31ad6446; ret 0x9dff; 
0x000000000007687d: xchg ch, al; xchg byte ptr [rdx - 0x37794f7a], bh; xchg byte ptr [rcx - 0x47794c7a], bh; xchg ah, cl; xchg byte ptr [rsi + rax*4 - 0x79437945], dh; ret; 
0x0000000000039788: xchg dh, bh; dec dword ptr [rcx - 0x347ce8]; add rsp, 0x20; mov eax, ebx; pop rbx; ret; 
0x000000000004ed33: xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000558eb: xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x558fe; mov dword ptr [rdi + 0x8c], 0; ret; 
0x00000000000558f5: xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x00000000000506a0: xchg dword ptr [rax - 0x76fffffd], ebx; ret 0x8d48; 
0x00000000000237de: xchg dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005d654: xchg dword ptr [rax], ecx; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000006e2ba: xchg dword ptr [rbp + 0x76], esp; insb byte ptr [rdi], dx; or bh, byte ptr [rbp + 0xb]; jge 0x6e321; or byte ptr [rdx - 0x106a7f7a], 0x96; call qword ptr [rdx - 0x6b]; 
0x000000000005273f: xchg dword ptr [rbx + 0x48000005], ebp; lea ecx, [rip + 0x40b65]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000043110: xchg dword ptr [rcx + 0x49000000], edi; movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x000000000006edcf: xchg dword ptr [rcx + 0x598b2089], eax; nop; ret; 
0x00000000000518e0: xchg dword ptr [rcx + 1], esp; add byte ptr [rax], al; lea rax, [rip + 0x4195c]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004f48f: xchg dword ptr [rcx + 1], esp; add byte ptr [rax], al; lea rax, [rip + 0x43b5d]; movsxd rcx, dword ptr [rax + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000078471: xchg dword ptr [rdi + rax*4 - 0x78367852], edi; ret; 
0x0000000000066d99: xchg dword ptr [rdi], ecx; add bh, bh; call qword ptr [rcx]; 
0x000000000005ffdf: xchg dword ptr [rdi], esp; std; popfq; ret; 
0x0000000000031456: xchg dword ptr [rip + 0x48000001], esi; lea edx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000076e96: xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x000000000002a1b3: xchg dword ptr [rsi], eax; add bl, dh; divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000296a4: xchg dword ptr [rsi], eax; add byte ptr [rdi + 5], dh; movsd qword ptr [rdi], xmm4; ret; 
0x0000000000076e8f: xchg eax, ebp; lea edx, [rbp - 0x6a6f6a74]; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x000000000007854d: xchg eax, ebp; leave; xchg eax, ebp; ret; 
0x0000000000071887: xchg eax, ebp; mov eax, 0xd1973295; cwde; cqo; push -0x67; ret; 
0x00000000000887ef: xchg eax, ebp; mov ebx, 0xbe95b995; xchg eax, ebp; retf 0xf695; outsd dx, dword ptr [rsi]; ret; 
0x0000000000079136: xchg eax, ebp; mov ebx, dword ptr [rsi - 0x5f716072]; mov ds, word ptr [rbp - 0x426e4172]; xchg eax, ecx; ret 0x6b91; 
0x0000000000082e05: xchg eax, ebp; mov edi, 0xc195c095; xchg eax, ebp; ret 0xc395; 
0x00000000000887f3: xchg eax, ebp; mov esi, 0xf695ca95; outsd dx, dword ptr [rsi]; ret; 
0x00000000000887ed: xchg eax, ebp; mov esp, 0xb995bb95; xchg eax, ebp; mov esi, 0xf695ca95; outsd dx, dword ptr [rsi]; ret; 
0x0000000000082dff: xchg eax, ebp; mov esp, 0xbe95bd95; xchg eax, ebp; mov edi, 0xc195c095; xchg eax, ebp; ret 0xc395; 
0x00000000000714b5: xchg eax, ebp; movabs byte ptr [0xe5963395f449a795], al; movabs al, byte ptr [0xb24a3597404a2467]; xchg eax, edi; ret 0x5497; 
0x0000000000076e93: xchg eax, ebp; nop; xchg eax, ebp; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x0000000000093280: xchg eax, ebp; out 0xfb, eax; call qword ptr [rbp - 0x43000419]; out 0xfb, eax; jmp rsi; 
0x000000000006e2c7: xchg eax, ebp; out dx, eax; xchg eax, esi; call qword ptr [rdx - 0x6b]; 
0x000000000006d41a: xchg eax, ebp; rcr byte ptr [rdx + rdx*8 - 0x2d5b2d60], cl; lodsb al, byte ptr [rsi]; sal byte ptr [rcx - 0x462d472e], cl; sar byte ptr [rdx + rdx*8 - 0x2d3f2d41], cl; ret 0xc8d2; 
0x0000000000051b4e: xchg eax, ebp; ret 0x2041; 
0x00000000000262c0: xchg eax, ebp; ret 0x2148; 
0x000000000004452e: xchg eax, ebp; ret 0x44e9; 
0x0000000000043e9f: xchg eax, ebp; ret 0x8440; 
0x0000000000026012: xchg eax, ebp; ret 0x8548; 
0x000000000005658c: xchg eax, ebp; ret 0x854d; 
0x000000000008e77d: xchg eax, ebp; ret 0x8bf; 
0x0000000000026045: xchg eax, ebp; ret 0xb60f; 
0x000000000003768a: xchg eax, ebp; ret 0xc148; 
0x000000000004d58d: xchg eax, ebp; ret 0xc2ff; 
0x0000000000082e0b: xchg eax, ebp; ret 0xc395; 
0x0000000000026027: xchg eax, ebp; ret 0xd021; 
0x0000000000020f6e: xchg eax, ebp; ret 0xd089; 
0x000000000004fcf7: xchg eax, ebp; ret 0xd121; 
0x000000000004403d: xchg eax, ebp; ret 0xd184; 
0x000000000003749a: xchg eax, ebp; ret 0xd349; 
0x000000000002e419: xchg eax, ebp; ret 0xe083; 
0x0000000000004936: xchg eax, ebp; ret; 
0x00000000000887f5: xchg eax, ebp; retf 0xf695; outsd dx, dword ptr [rsi]; ret; 
0x000000000005a903: xchg eax, ebp; rol byte ptr [rbx], 0x44; and al, 0x30; add rsp, 0x48; ret; 
0x0000000000023447: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000004cfb1: xchg eax, ebp; ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx - 9], 0xd8; pop rbp; pop r12; ret; 
0x0000000000041d56: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000023421: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; pop rdx; ret; 
0x0000000000022e4d: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x000000000002129c: xchg eax, ebp; sal bh, 0xd8; ret; 
0x00000000000470e3: xchg eax, ebp; sar dword ptr [rbx + rbp], 0xf; xchg eax, ebp; ret 0xd184; 
0x00000000000470ba: xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x0000000000076e95: xchg eax, ebp; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x0000000000071889: xchg eax, ebp; xor dl, byte ptr [rdi - 0x66b6672f]; push -0x67; ret; 
0x000000000004d6a1: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rdi + rax + 0x48], dh; mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000008878d: xchg eax, ebx; call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x000000000006220e: xchg eax, ebx; cld; ret; 
0x000000000008282d: xchg eax, ebx; imul edx, dword ptr [rbx + 0x6fa76fc9], -0x47; outsd dx, dword ptr [rsi]; mov dh, 0x6f; ret 0xe16f; 
0x000000000008282b: xchg eax, ebx; imul edx, dword ptr [rbx + 0x6fc9936b], 0x6fb96fa7; mov dh, 0x6f; ret 0xe16f; 
0x0000000000086277: xchg eax, ebx; in eax, 0x82; ret 0x315b; 
0x0000000000078a97: xchg eax, ebx; iretd; xchg eax, ebx; ret 0xda93; 
0x0000000000088787: xchg eax, ebx; mov ecx, 0xd793d693; xchg eax, ebx; call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x000000000008298f: xchg eax, ebx; mov edi, 0xc193c093; xchg eax, ebx; ret 0xc393; 
0x0000000000082989: xchg eax, ebx; mov esp, 0xbe93bd93; xchg eax, ebx; mov edi, 0xc193c093; xchg eax, ebx; ret 0xc393; 
0x0000000000020696: xchg eax, ebx; ret 0; 
0x000000000001983a: xchg eax, ebx; ret 0x394c; 
0x00000000000603b7: xchg eax, ebx; ret 0x7a90; 
0x0000000000082995: xchg eax, ebx; ret 0xc393; 
0x0000000000078a99: xchg eax, ebx; ret 0xda93; 
0x00000000000206a3: xchg eax, ebx; ret; 
0x000000000002067c: xchg eax, ebx; rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000020689: xchg eax, ebx; rol dword ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000000592a: xchg eax, ebx; sbb al, 0x56; jbe 0x590d; mov al, 0xd5; pop rsp; ret 0x9ec0; 
0x0000000000005986: xchg eax, ebx; sbb al, 0xb3; adc eax, 0x12a07c9a; ret 0x9dba; 
0x000000000006ebf6: xchg eax, ebx; stc; ret; 
0x000000000008878b: xchg eax, ebx; xlatb; xchg eax, ebx; call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x0000000000077d11: xchg eax, ecx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x000000000003b4e8: xchg eax, ecx; add dword ptr [rax], eax; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x0000000000051148: xchg eax, ecx; add rcx, rdx; jmp rcx; 
0x000000000005274e: xchg eax, ecx; add rdx, rcx; jmp rdx; 
0x0000000000078a93: xchg eax, ecx; ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x000000000007dccd: xchg eax, ecx; imul ebx, dword ptr [rdi - 0x24], 0x10852183; cdq; ret 0x9553; 
0x0000000000080ddf: xchg eax, ecx; int1; mov ecx, eax; push rbx; jl 0x80e44; ret 0xe48f; 
0x0000000000078a91: xchg eax, ecx; lodsd eax, dword ptr [rsi]; xchg eax, ecx; ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x0000000000078a8f: xchg eax, ecx; mov al, 0x91; lodsd eax, dword ptr [rsi]; xchg eax, ecx; ficom word ptr [rbx - 0x6c306c39]; ret 0xda93; 
0x0000000000077d0f: xchg eax, ecx; mov dl, byte ptr [rcx - 0x6e7d6e7f]; test byte ptr [rcx - 0x6d2f6e80], dl; ret; 
0x0000000000082203: xchg eax, ecx; mov edi, 0xc191c091; xchg eax, ecx; ret 0xc391; 
0x000000000008bd06: xchg eax, ecx; mov esp, 0x5bd71e09; ret 0xef12; 
0x00000000000821fd: xchg eax, ecx; mov esp, 0xbe91bd91; xchg eax, ecx; mov edi, 0xc191c091; xchg eax, ecx; ret 0xc391; 
0x0000000000005230: xchg eax, ecx; or dword ptr [rdi], eax; adc dh, bh; call qword ptr [rdi - 0x71]; 
0x0000000000087bc8: xchg eax, ecx; outsd dx, dword ptr [rsi]; ret 0x666f; 
0x00000000000046cb: xchg eax, ecx; pop rbx; mov ebx, 0xb7bf2684; hlt; in al, dx; ret 0x33b1; 
0x00000000000046ab: xchg eax, ecx; ret 0x2912; 
0x0000000000079143: xchg eax, ecx; ret 0x6b91; 
0x0000000000082209: xchg eax, ecx; ret 0xc391; 
0x000000000006f6b7: xchg eax, ecx; ret; 
0x000000000006f6b5: xchg eax, ecx; scasb al, byte ptr [rdi]; xchg eax, ecx; ret; 
0x0000000000077d03: xchg eax, ecx; sub dl, byte ptr [rcx - 0x6ed96ece]; xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x00000000000049e7: xchg eax, ecx; sub dword ptr [rdi], 0x1e; sub byte ptr [rsi], ah; jl 0x49b5; std; ret 0xbd07; 
0x0000000000077d15: xchg eax, ecx; test byte ptr [rcx - 0x6d2f6e80], dl; ret; 
0x0000000000077d0b: xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x0000000000077d09: xchg eax, ecx; xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x0000000000077d07: xchg eax, ecx; xchg eax, ecx; xchg eax, ecx; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x0000000000077d05: xchg eax, ecx; xor dl, byte ptr [rcx - 0x6ed16eda]; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x0000000000059d82: xchg eax, edi; add eax, dword ptr [rax]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rcx, rdx; jmp rcx; 
0x0000000000062204: xchg eax, edi; ljmp [rdx]; cmpsd dword ptr [rsi], dword ptr [rdi]; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7]; ret; 
0x00000000000888ad: xchg eax, edi; mov ah, 0x97; ret; 
0x00000000000888ab: xchg eax, edi; mov bl, 0x97; mov ah, 0x97; ret; 
0x000000000005ba4e: xchg eax, edi; mov byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000092960: xchg eax, edi; mov eax, 0xb897fff8; clc; jmp rdi; 
0x0000000000083383: xchg eax, edi; mov edi, 0xc197c097; xchg eax, edi; ret 0xc397; 
0x000000000008337d: xchg eax, edi; mov esp, 0xbe97bd97; xchg eax, edi; mov edi, 0xc197c097; xchg eax, edi; ret 0xc397; 
0x0000000000004929: xchg eax, edi; or eax, 0xae077218; dec dword ptr [rbx + 0x3d]; mov al, 0x22; xchg eax, ebp; ret; 
0x0000000000078d8a: xchg eax, edi; push rdx; ret; 
0x000000000007188b: xchg eax, edi; rcr dword ptr [rax - 0x669566b7], 1; ret; 
0x000000000002406c: xchg eax, edi; ret 0x430f; 
0x00000000000045b9: xchg eax, edi; ret 0x4f7a; 
0x00000000000714c9: xchg eax, edi; ret 0x5497; 
0x000000000002e128: xchg eax, edi; ret 0xacdb; 
0x0000000000083389: xchg eax, edi; ret 0xc397; 
0x000000000002e0e7: xchg eax, edi; ret 0xeed9; 
0x000000000007528f: xchg eax, edi; ret; 
0x0000000000085bfd: xchg eax, edi; sub ch, byte ptr [rax + 0x5c]; push rcx; ret; 
0x000000000007528d: xchg eax, edi; xchg eax, edi; ret; 
0x000000000007fdce: xchg eax, edx; adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000003b3e6: xchg eax, edx; add dword ptr [rax], eax; mov rdi, rax; call 0x169c0; add rsp, 0x18; ret; 
0x00000000000920d3: xchg eax, edx; and al, 0x49; ret 0xd3f; 
0x0000000000077d2b: xchg eax, edx; fcom dword ptr [rdx - 0x6d286d17]; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000077d29: xchg eax, edx; fist word ptr [rdx - 0x6d166d28]; xlatb; xchg eax, edx; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000077d31: xchg eax, edx; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x000000000008c136: xchg eax, edx; jle 0x8c0d5; ret; 
0x0000000000076e8d: xchg eax, edx; jnp 0x76e25; lea edx, [rbp - 0x6a6f6a74]; xchg dword ptr [rsi - 0x69776982], edx; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x000000000008261f: xchg eax, edx; mov edi, 0xc192c092; xchg eax, edx; ret 0xc392; 
0x0000000000082619: xchg eax, edx; mov esp, 0xbe92bd92; xchg eax, edx; mov edi, 0xc192c092; xchg eax, edx; ret 0xc392; 
0x0000000000077d35: xchg eax, edx; out dx, eax; xchg eax, edx; ret 0xe892; 
0x00000000000703d6: xchg eax, edx; pop rsi; cdq; pop rsi; ret 0x125f; 
0x000000000007f1bc: xchg eax, edx; push rdi; ret 0x8b64; 
0x000000000008a96d: xchg eax, edx; ret 0x7b00; 
0x0000000000082625: xchg eax, edx; ret 0xc392; 
0x0000000000077d37: xchg eax, edx; ret 0xe892; 
0x0000000000077d1b: xchg eax, edx; ret; 
0x00000000000506aa: xchg eax, edx; sub dword ptr [rax + rax], eax; movsxd rdx, dword ptr [rax + rdx*4]; add rax, rdx; jmp rax; 
0x0000000000077d2f: xchg eax, edx; xlatb; xchg eax, edx; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000076e9d: xchg eax, esi; adc dword ptr [rsi - 0x693d6980], -0x38; xchg eax, esi; ret; 
0x000000000002460f: xchg eax, esi; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; fmul dword ptr [rcx - 0x77]; ret 0x8d48; 
0x000000000006e2c9: xchg eax, esi; call qword ptr [rdx - 0x6b]; 
0x00000000000714bd: xchg eax, esi; in eax, 0x49; movabs al, byte ptr [0xb24a3597404a2467]; xchg eax, edi; ret 0x5497; 
0x0000000000004cb6: xchg eax, esi; jl 0x4caa; adc dh, ch; stosd dword ptr [rdi], eax; mov dl, 0x1e; ret; 
0x000000000003d166: xchg eax, esi; lea esp, [rip + 0xba00]; add byte ptr [rax], al; cmovne rax, rdx; add rsp, 0x18; ret; 
0x0000000000086684: xchg eax, esi; mov byte ptr [rsi + 0x51], dh; ret; 
0x0000000000019910: xchg eax, esi; mov dword ptr [rax + rdx*4], ecx; pop rbx; pop rbp; ret; 
0x0000000000076e9b: xchg eax, esi; mov dword ptr [rsi - 0x697f697d], edx; ret 0xc896; 
0x000000000008309b: xchg eax, esi; mov ebx, 0xc296bf96; xchg eax, esi; ret; 
0x0000000000083099: xchg eax, esi; mov edx, 0xbf96bb96; xchg eax, esi; ret 0xc396; 
0x0000000000055b23: xchg eax, esi; mov rax, r15; mov esi, 1; syscall; 
0x000000000002b986: xchg eax, esi; movss xmm1, dword ptr [rip + 0x66f9d]; movaps xmm0, xmm1; ret; 
0x000000000008fc72: xchg eax, esi; push rcx; mov cl, 0x68; ret; 
0x0000000000033e4f: xchg eax, esi; ret 0x8141; 
0x000000000008309f: xchg eax, esi; ret 0xc396; 
0x0000000000076ea1: xchg eax, esi; ret 0xc896; 
0x0000000000078843: xchg eax, esi; ret 0xdf5d; 
0x000000000002bd72: xchg eax, esi; ret 0xf981; 
0x0000000000020d4b: xchg eax, esi; ret 0xff83; 
0x000000000006fc29: xchg eax, esi; ret; 
0x0000000000049c95: xchg eax, esp; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffccd; ret; 
0x000000000004794b: xchg eax, esp; and al, 0xb4; add byte ptr [rax], al; add byte ptr [rbx + 0x39742444], cl; ret 0x9489; 
0x00000000000507e3: xchg eax, esp; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000027198: xchg eax, esp; in al, dx; add dh, al; add al, 0x11; add byte ptr [rax - 1], cl; ret 0x8348; 
0x0000000000092d2c: xchg eax, esp; insb byte ptr [rdi], dx; cmovb ebx, dword ptr [rbx]; or byte ptr [rdi], ch; mov cl, 0x2d; ret; 
0x0000000000004a6a: xchg eax, esp; jl 0x4a98; test dword ptr [r14 - 0x9eb5c1], r13d; call rsi; 
0x0000000000071440: xchg eax, esp; mov dh, byte ptr [rdx + rcx*4 - 0x732b73af]; mov word ptr [rcx*4 + 0x585f4798], ds; ret; 
0x000000000004c522: xchg eax, esp; ret 0x148; 
0x00000000000548fe: xchg eax, esp; ret 0x548d; 
0x0000000000025872: xchg eax, esp; ret 0x8141; 
0x000000000002ee04: xchg eax, esp; ret 0x840f; 
0x000000000001e9a1: xchg eax, esp; ret 0x8548; 
0x0000000000005003: xchg eax, esp; ret 0x88ad; 
0x0000000000026473: xchg eax, esp; ret 0x8948; 
0x0000000000025484: xchg eax, esp; ret 0x944; 
0x000000000005ca25: xchg eax, esp; ret 0xb60f; 
0x00000000000190d2: xchg eax, esp; ret 0xc085; 
0x0000000000057ced: xchg eax, esp; ret 0xc283; 
0x0000000000015619: xchg eax, esp; ret 0xca08; 
0x00000000000420f4: xchg eax, esp; ret 0xd108; 
0x00000000000235e6: xchg eax, esp; ret 0xd184; 
0x0000000000058033: xchg eax, esp; ret 0xda09; 
0x00000000000508b8: xchg eax, esp; ret 0xdb85; 
0x0000000000020d34: xchg eax, esp; ret 0xff83; 
0x0000000000015080: xchg eax, esp; ret; 
0x0000000000020d2d: xchg eax, esp; rol bl, 0x83; jmp qword ptr [rax]; 
0x000000000001543f: xchg eax, esp; rol byte ptr [rbx - 0x7cbefe0e], 0xc6; add dword ptr [rcx], ecx; ret 0xf283; 
0x000000000003a7f0: xchg eax, esp; ror byte ptr [rax + 1], 0xc7; mov eax, 0xf1; syscall; 
0x0000000000020d3a: xchg eax, esp; ror byte ptr [rcx], 0xd0; movzx eax, al; ret; 
0x000000000008a96c: xchg eax, r10d; ret 0x7b00; 
0x00000000000427d0: xchg ebp, edi; dec dword ptr [rax - 0x73]; cmp eax, 0x2558fe; call 0x545dd; mov eax, 0x39; syscall; 
0x000000000008dbb2: xchg ecx, edi; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x000000000009132e: xchg edx, eax; wait; popfq; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000003ae04: xchg esp, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000008dba9: xchg r8b, r10b; dec dword ptr [r10 - 0x78e9bfc4]; stc; dec dword ptr [rdi - 0x3c06c015]; ret 0x7796; 
0x0000000000075fb0: xlatb; and dh, 0x80; int 0x80; 
0x000000000004ae77: xlatb; call 0x169c0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000046e91: xlatb; cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000004ae00: xlatb; cmovne rsi, rdi; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000034336: xlatb; cmp edi, 1; sbb eax, eax; not eax; add eax, 2; ret; 
0x0000000000020b35: xlatb; inc dword ptr [rsi]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005b7a9: xlatb; lea rax, [rip + 0x227f]; mov rsi, rdx; add rsp, 0x190; jmp rax; 
0x000000000008bd0a: xlatb; pop rbx; ret 0xef12; 
0x000000000008a1b1: xlatb; pop rsp; wait; ret 0xd6cc; 
0x00000000000239dd: xlatb; push rax; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x0000000000026043: xlatb; setne dl; movzx edx, dl; and eax, edx; ret; 
0x00000000000930f9: xlatb; sti; jmp rax; 
0x000000000004b397: xlatb; syscall; 
0x000000000004b397: xlatb; syscall; mov rdi, rax; call 0x169c0; pop rdx; ret; 
0x000000000008878c: xlatb; xchg eax, ebx; call 0xffffffffd89c6d26; xchg eax, ebx; ret; 
0x0000000000077d30: xlatb; xchg eax, edx; fst qword ptr [rdx - 0x6d106d34]; ret 0xe892; 
0x0000000000020f31: xlatb; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000000190e8: xlatb; xor eax, eax; ret; 
0x000000000000154c: xor al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret 0; 
0x000000000003d12f: xor al, 0; add byte ptr [rax], al; syscall; 
0x00000000000601b4: xor al, 0x16; ret 0x56c2; 
0x000000000003a3e7: xor al, 0x24; call 0x57d91; mov eax, 0xb; mov rsi, qword ptr [rsp]; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000001b2e3: xor al, 0x24; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000003a3f5: xor al, 0x24; mov rdi, qword ptr [rsp + 8]; syscall; 
0x000000000005fded: xor al, 0x45; ret; 
0x00000000000357c1: xor al, 0x48; mov dword ptr [rsp - 8], eax; mulsd xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005ad95: xor al, 0x48; mov ebx, esp; mov eax, 0x4f; mov rdi, rbx; mov rsi, rdx; syscall; 
0x00000000000709ca: xor al, 0x50; xor al, 0x9b; test al, 0x69; ret; 
0x00000000000804bc: xor al, 0x59; seto al; push rcx; ret; 
0x00000000000866c8: xor al, 0x62; jmp qword ptr [rsi - 0x10]; 
0x0000000000086d58: xor al, 0x67; jb 0x86dc3; ja 0x86da5; jp 0x86d47; xchg eax, ecx; ret; 
0x000000000008910f: xor al, 0x6c; add byte ptr gs:[rbp + 0x74], dh; xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000001ef90: xor al, 0x89; ret 0xeac1; 
0x00000000000803c4: xor al, 0x8d; rcl dword ptr [rsi + rdx + 0x2c53855e], 0x54; ret; 
0x00000000000709cc: xor al, 0x9b; test al, 0x69; ret; 
0x0000000000016f2d: xor al, 0xaf; add byte ptr [rax], al; mov dword ptr [rax], 0xc; xor eax, eax; add rsp, 8; ret; 
0x000000000008fb65: xor al, 0xb9; scasd eax, dword ptr [rdi]; idiv byte ptr [rdi]; add byte ptr [rax], al; leave; ret; 
0x00000000000342f8: xor al, 0xd9; add eax, 0xc4834800; pop rbx; ret; 
0x000000000001dfdf: xor al, 0xf3; movd dword ptr [rsp + 0x30], mm0; add rsp, 0x40; pop rbx; ret; 
0x0000000000092ff5: xor al, 0xfb; call qword ptr [rbp + rax*8 - 0x3b530005]; sti; call rsp; 
0x0000000000023583: xor al, 0xff; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x000000000002356e: xor al, 0xff; lcall [rdx - 0x3d]; movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x0000000000038b20: xor al, 1; add byte ptr [rax + 1], bh; pop rdx; ret; 
0x0000000000023b09: xor al, 1; add byte ptr [rax], al; syscall; 
0x0000000000072705: xor al, ah; jmp rcx; 
0x000000000003df4e: xor al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000002224a: xor al, byte ptr [rbp + 0x31]; ror byte ptr [rcx + rcx*4 - 0x38], 0x4c; mov edx, eax; syscall; 
0x000000000002cdca: xor al, byte ptr [rbx + 6]; add al, bl; ret 0xcad8; 
0x000000000001e40b: xor al, byte ptr [rcx + 0x5c]; pop r13; pop r14; ret; 
0x0000000000023c4b: xor al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000002fb4c: xor al, byte ptr [rsi]; add bl, dh; subps xmm0, xmmword ptr [rip + 0x6323d]; add rsp, 0x18; ret; 
0x0000000000023938: xor bh, bh; call qword ptr [rbx - 0x73]; 
0x000000000002137f: xor bh, bh; dec dword ptr [rbx + 0x480c2444]; add esp, 0x10; pop rbx; ret; 
0x0000000000023752: xor bh, bh; lcall [rdx - 0x3d]; mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000002390c: xor bh, bh; lcall [rdx - 0x3d]; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000023766: xor bh, bh; lcall [rdx - 0x3d]; mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x000000000002378f: xor bh, bh; lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0xa6; syscall; 
0x0000000000023740: xor bh, bh; lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x000000000002377b: xor bh, bh; lcall [rdx - 0x3d]; xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x0000000000056281: xor bh, dh; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002f041: xor bl, 0xf; adc dword ptr [rsp - 0x1c], eax; ret; 
0x000000000002ef74: xor bl, 0xf; adc dword ptr [rsp - 4], eax; ret; 
0x000000000002f005: xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x20], eax; ret; 
0x000000000002ef38: xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 8], eax; ret; 
0x0000000000023510: xor bl, al; movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x00000000000361cf: xor bl, bl; jl 0x361f7; adc byte ptr [rbx - 0x76e7dbbc], cl; ret; 
0x000000000001dfd9: xor bl, dh; movups xmmword ptr [rsp + 0x34], xmm0; movq xmm0, qword ptr [rsp + 0x30]; add rsp, 0x40; pop rbx; ret; 
0x0000000000056616: xor byte ptr [r13 + 0x481374c0], r8b; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000057b7e: xor byte ptr [rax + 0x39], cl; ret 0xe975; 
0x000000000005b597: xor byte ptr [rax + 0x42], al; sldt word ptr [rbx]; and al, 0x38; add rsp, 0x48; ret; 
0x00000000000560a5: xor byte ptr [rax + 0x90], bh; movsxd rsi, dword ptr [rsp + 0x68]; add rdx, 0x24; syscall; 
0x00000000000562e7: xor byte ptr [rax + 0x91], bh; syscall; 
0x0000000000020687: xor byte ptr [rax + 0xc193], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000021f2c: xor byte ptr [rax + 0xc8], bh; syscall; 
0x000000000005a52d: xor byte ptr [rax + 0xc8], bh; syscall; xor eax, eax; ret; 
0x0000000000049af9: xor byte ptr [rax + 0xcb], bh; syscall; 
0x0000000000049af9: xor byte ptr [rax + 0xcb], bh; syscall; neg eax; ret; 
0x000000000005a48f: xor byte ptr [rax + 0xde], bh; syscall; 
0x0000000000084e89: xor byte ptr [rax + rsi], cl; or eax, 0xf300e30; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x000000000004a5d4: xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x00000000000445a6: xor byte ptr [rax - 0x75], cl; and al, 0x18; call rax; 
0x000000000001fdd5: xor byte ptr [rax - 0x76b79ead], cl; ret 0xc148; 
0x0000000000057efc: xor byte ptr [rax - 0x77], cl; add byte ptr [r8 + 3], r15b; mov rdi, r12; syscall; 
0x0000000000055704: xor byte ptr [rax - 0x7d], cl; ret; 
0x000000000006edc9: xor byte ptr [rax - 0x7f], 0xc2; stc; out dx, eax; xchg dword ptr [rcx + 0x598b2089], eax; nop; ret; 
0x0000000000022912: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x227b5; add rsp, 0xd8; ret; 
0x0000000000022c09: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x22ab2; add rsp, 0xd8; ret; 
0x0000000000022c9d: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x22b0e; add rsp, 0xd8; ret; 
0x0000000000026888: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x266b1; add rsp, 0xd8; ret; 
0x0000000000039cd7: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x39bee; add rsp, 0xd8; ret; 
0x000000000004bdec: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x4f3c1; add rsp, 0xd8; ret; 
0x000000000004bea2: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x4f42f; add rsp, 0xd8; ret; 
0x000000000004ce81: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x50c60; add rsp, 0xd8; ret; 
0x000000000004d478: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x50e82; add rsp, 0xd8; ret; 
0x000000000004d865: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x5237c; add rsp, 0xd8; ret; 
0x000000000004da1a: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x524d5; add rsp, 0xd8; ret; 
0x000000000004eca1: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52d95; add rsp, 0xd8; ret; 
0x000000000004edb6: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52e33; add rsp, 0xd8; ret; 
0x000000000004ee45: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52edc; add rsp, 0xd8; ret; 
0x000000000004eed4: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x52f5c; add rsp, 0xd8; ret; 
0x000000000004ef5e: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x53067; add rsp, 0xd8; ret; 
0x000000000004efed: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x531bf; add rsp, 0xd8; ret; 
0x00000000000532c0: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x5321e; add rsp, 0xd8; ret; 
0x0000000000053354: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x53230; add rsp, 0xd8; ret; 
0x00000000000406d8: xor byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000007c351: xor byte ptr [rax], dl; pop rsi; call qword ptr [rsi]; 
0x0000000000084e91: xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x000000000003c5eb: xor byte ptr [rbp + 0x1e], 0xeb; sbb byte ptr [rcx - 2], al; ret; 
0x0000000000056617: xor byte ptr [rbp + 0x481374c0], al; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000562ce: xor byte ptr [rbp - 0x47df8b01], al; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x000000000005590f: xor byte ptr [rbx + 0x2427be05], cl; add byte ptr [rcx], bh; ret; 
0x000000000005469e: xor byte ptr [rbx + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000035dbf: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000018a7e: xor byte ptr [rbx + 0x727609f8], al; movzx eax, cl; movzx edx, r8b; sub eax, edx; ret; 
0x0000000000046303: xor byte ptr [rbx + 0x87709fa], al; cmp ecx, 0xff; jle 0x462ef; ret; 
0x000000000002aab0: xor byte ptr [rbx - 0x76c7dbbc], cl; ret 0xc166; 
0x00000000000444d5: xor byte ptr [rbx - 0x7bf0fd02], al; je 0x444df; add byte ptr [rax], al; mov rdi, r14; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000058f2c: xor byte ptr [rbx], 0xe1; add dword ptr [rcx], eax; ret 0x6348; 
0x0000000000058e76: xor byte ptr [rbx], 0xe1; add dword ptr [rcx], eax; ror byte ptr [rax - 0x68], 1; ret; 
0x0000000000084e95: xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x000000000008f199: xor byte ptr [rbx], dh; ja 0x8f1ef; ret 0x3fd3; 
0x0000000000023692: xor byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005a48b: xor byte ptr [rcx - 0x47cfdbbc], cl; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005651d: xor byte ptr [rcx], 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x00000000000237cc: xor byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000020d04: xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x0000000000084e93: xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x0000000000049b41: xor byte ptr [rdi], cl; add eax, 0x89c08548; ret; 
0x0000000000084e8f: xor byte ptr [rdi], cl; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x0000000000074d5b: xor byte ptr [rdx - 0x80], 0x70; sub byte ptr [rdi - 0x80], 0x73; add dh, 0x81; ret; 
0x00000000000725c5: xor byte ptr [rdx], al; xor byte ptr [rsi], cl; jmp qword ptr [rdi]; 
0x000000000007c34f: xor byte ptr [rip + 0x5e201430], al; call qword ptr [rsi]; 
0x0000000000084e8b: xor byte ptr [rip + 0xf300e30], cl; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x00000000000550de: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; 
0x00000000000550de: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; ret; 
0x0000000000057bc8: xor byte ptr [rsi + 0x22], bh; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000057bc7: xor byte ptr [rsi + 0x22], dil; mov dword ptr [rip + 0x240410], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004af65: xor byte ptr [rsi + 1], bh; mov eax, 0x48; syscall; 
0x00000000000725c7: xor byte ptr [rsi], cl; jmp qword ptr [rdi]; 
0x0000000000084e8d: xor byte ptr [rsi], cl; xor byte ptr [rdi], cl; xor byte ptr [rax], dl; xor byte ptr [rcx], dl; xor byte ptr [rbx], cl; call qword ptr [rdx]; 
0x00000000000392cc: xor byte ptr [rsp + rax - 0x80], dl; cmove rbx, rax; lea rdx, [rsp + 0xc]; mov eax, 0x10; syscall; 
0x000000000004397e: xor ch, bh; call qword ptr [rbx - 0x77]; 
0x0000000000092aad: xor cl, bh; call rcx; 
0x0000000000092ab9: xor cl, bh; call rcx; xor cl, bh; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092aad: xor cl, bh; call rcx; xor cl, bh; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092abd: xor cl, bh; call rcx; xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab1: xor cl, bh; call rcx; xor cl, bh; jmp rdx; 
0x0000000000092af9: xor cl, bh; inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; call rdi; 
0x0000000000092b05: xor cl, bh; inc dword ptr [rcx]; sub edi, ecx; inc dword ptr [rcx]; sub edi, ecx; jmp rdx; 
0x0000000000092ac1: xor cl, bh; jmp qword ptr [rbp + 0x2b]; 
0x0000000000092ab5: xor cl, bh; jmp rdx; 
0x000000000004c749: xor cl, byte ptr [rdi]; add byte ptr [rax], al; pop rbx; ret; 
0x00000000000378f2: xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x0000000000034d34: xor dh, bl; rcr ebx, 0x2d; ret; 
0x000000000001bb79: xor dh, bl; ret 0xc9d9; 
0x000000000003058c: xor dh, byte ptr [rdi + 0x10]; movss xmm1, dword ptr [rip + 0x62871]; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004db76: xor dh, byte ptr [rdi + 0x24]; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005735c: xor dh, byte ptr [rdi + rax + 0x48]; mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000003efd7: xor dh, dh; ret 0x74df; 
0x000000000002377a: xor dil, dil; lcall [rdx - 0x3d]; xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x0000000000086e24: xor dl, byte ptr [rcx + 0x28]; fstp dword ptr [esi + 0x676276ee]; call qword ptr [rdx + 5]; 
0x0000000000077d06: xor dl, byte ptr [rcx - 0x6ed16eda]; test dword ptr [rcx - 0x6e756e7a], edx; adc dword ptr [rcx - 0x6e7b6e7e], 0x92d09180; ret; 
0x000000000007188a: xor dl, byte ptr [rdi - 0x66b6672f]; push -0x67; ret; 
0x000000000008aeb8: xor dword ptr [rax + 0x6ef10027], ebp; ret; 
0x000000000004c7cc: xor dword ptr [rax - 0x75], ecx; adc byte ptr [r8 - 0x77], cl; push rbx; or byte ptr [rax + 0x39], cl; ret 0xa73; 
0x0000000000052a9b: xor dword ptr [rax - 0x7d], ecx; ret 0x8b04; 
0x000000000000c960: xor dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000003b4ba: xor dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000003d57d: xor dword ptr [rax], eax; add byte ptr [rbp - 0x76c88740], al; ret; 
0x000000000008adfe: xor dword ptr [rax], eax; movsb byte ptr [rdi], byte ptr [rsi]; xchg eax, edi; ret; 
0x00000000000232cf: xor dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x00000000000911c6: xor dword ptr [rdi + rbx*2 - 0x7e], eax; jecxz 0x91198; push r15; sbb eax, 0x153f5945; ret; 
0x000000000007fdcc: xor dword ptr [rdi - 0x6e], ebx; adc ch, byte ptr fs:[rbp + 0x28]; test byte ptr [rsi - 0x7f], ch; ret; 
0x000000000007244b: xor dword ptr [rdx + 0x1a], esi; pop rbx; sub al, 0xb6; shl byte ptr [rax], 0xe2; ret; 
0x000000000004b2cc: xor dword ptr [rdx], eax; add byte ptr [rax], al; add rsp, 0x28; ret; 
0x000000000001e40a: xor dword ptr [rdx], esi; pop r12; pop r13; pop r14; ret; 
0x000000000002fa22: xor dword ptr [rsi], eax; add bl, dh; divps xmm0, xmm1; ret; 
0x000000000005a938: xor dword ptr [rsi], eax; cld; call qword ptr [rdx + 0x6a]; 
0x000000000008665e: xor eax, 0x208d0885; nop; ret; 
0x000000000004246e: xor eax, 0x252fb3; push rax; call 0x423c4; pop rdx; shr rax, 0x11; ret; 
0x0000000000041986: xor eax, 0x2548f5; call 0x419fa; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000020bb9: xor eax, 0x2749c2; call 0x1e9ef; add rsp, 0x18; ret; 
0x00000000000550c2: xor eax, 0x2dc2; cmp rcx, rsi; jae 0x550db; lea rax, [rip + 0x2db7]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x00000000000700c1: xor eax, 0x355353b0; ret 0x2353; 
0x0000000000070b63: xor eax, 0x3ebf3e39; jb 0x70bd7; test byte ptr [rax], bl; mov dword ptr [rsi], edi; test al, 0x51; ret; 
0x000000000004081d: xor eax, 0x48000000; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x0000000000031457: xor eax, 0x48000001; lea edx, [rip + 0x619da]; movsxd rax, dword ptr [rdx + rax*4]; add rdx, rax; jmp rdx; 
0x0000000000049c4e: xor eax, 0x48000001; mov edi, ebx; mov rdx, rsi; syscall; 
0x000000000004a605: xor eax, 0x482fe; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a605: xor eax, 0x482fe; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004a5eb: xor eax, 0x48320; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5eb: xor eax, 0x48320; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000074a7a: xor eax, 0x486a5f6a; push 0x59; imul esi, dword ptr [rdi + 0x6b], 5; insb byte ptr [rdi], dx; ret 0xb16f; 
0x00000000000407cb: xor eax, 0x4c000000; mov edi, esp; mov rdx, r13; syscall; 
0x0000000000042d97: xor eax, 0x50e6f; sub rsp, 0x20; mov eax, 0x142; mov rdx, rbp; syscall; 
0x000000000003a787: xor eax, 0x5afffdc2; ret; 
0x00000000000233d7: xor eax, 0x5b5affff; pop rbp; ret; 
0x0000000000071ed3: xor eax, 0x68a6591f; ret; 
0x0000000000026fe4: xor eax, 0xc1660006; call 0x3fe2f2f4; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000092c6d: xor eax, 0xc275419d; int1; ret; 
0x0000000000023469: xor eax, 0xc35affff; mov edi, edi; push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023499: xor eax, 0xc35affff; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000035297: xor eax, 0xf0005b7; push rdi; retf 0x3941; sal byte ptr [rax - 1], 1; ret 0x3941; 
0x000000000004bef1: xor eax, 1; and eax, 1; ret; 
0x000000000003d495: xor eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000913d5: xor eax, dword ptr [rdi]; ret; 
0x000000000003e4a5: xor eax, eax; add rsp, 0x108; pop rbx; pop rbp; ret; 
0x000000000003800e: xor eax, eax; add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a299: xor eax, eax; add rsp, 0x1b8; ret; 
0x0000000000057f14: xor eax, eax; add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000005526d: xor eax, eax; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x00000000000191bd: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000016f37: xor eax, eax; add rsp, 8; ret; 
0x0000000000020d27: xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x0000000000054937: xor eax, eax; and esi, 1; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x00000000000230ac: xor eax, eax; call 0x22175; pop rdx; sar eax, 0x1f; ret; 
0x00000000000422ad: xor eax, eax; call 0x4ce08; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000001e0ab: xor eax, eax; call 0x4ed42; inc eax; cdqe; pop rdx; ret; 
0x000000000003da75: xor eax, eax; call 0x4ed42; lea rax, [rip + 0x25a1dd]; add rsp, 0x18; ret; 
0x0000000000023317: xor eax, eax; call 0x57e27; movsxd rdi, eax; call 0x169c0; add rsp, 0x68; ret; 
0x000000000005c675: xor eax, eax; call rdx; 
0x000000000003e3c4: xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x000000000003a7ea: xor eax, eax; cmp byte ptr [rdi], 0x2f; sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000003ab3c: xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x0000000000054b02: xor eax, eax; cmp dword ptr [rdi], 0; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000020d83: xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000020e45: xor eax, eax; cmp edi, 0x2fffd; setbe al; ret; 
0x0000000000020d72: xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x0000000000020d94: xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x0000000000021344: xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x0000000000020e83: xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000020d05: xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000003a40b: xor eax, eax; cmp edx, 4; je 0x3a41e; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000004bee1: xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004bf15: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; je 0x4bf26; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004becc: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004ab35: xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x00000000000561c4: xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x00000000000296d8: xor eax, eax; cvtss2sd xmm6, xmm0; movsd qword ptr [rdi], xmm6; ret; 
0x0000000000022508: xor eax, eax; fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x0000000000022511: xor eax, eax; inc rdi; je 0x22520; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000054988: xor eax, eax; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x00000000000573c8: xor eax, eax; lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000057e58: xor eax, eax; mov al, 0x3c; syscall; 
0x0000000000057e58: xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x00000000000544d1: xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000573cf: xor eax, eax; mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x00000000000558bf: xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000580e2: xor eax, eax; mov dword ptr [rsi + 4], edx; pop rbx; pop rbp; ret; 
0x000000000004366d: xor eax, eax; mov ecx, 0x54; rep stosd dword ptr [rdi], eax; ret; 
0x00000000000548d8: xor eax, eax; mov ecx, 0xc; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000043488: xor eax, eax; mov qword ptr [rbp + 8], rbx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004d505: xor eax, eax; mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043529: xor eax, eax; mov qword ptr [rbx + 8], rcx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000434d6: xor eax, eax; mov qword ptr [rbx + 8], rdx; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000054c0b: xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000004bf37: xor eax, eax; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000054af3: xor eax, eax; mov qword ptr [rsi], rcx; ret; 
0x0000000000023980: xor eax, eax; mov qword ptr [rsp + 0x18], rax; mov eax, 0x65; syscall; 
0x000000000002224c: xor eax, eax; mov rax, r9; mov rdx, r8; syscall; 
0x0000000000054c99: xor eax, eax; mov rdi, r8; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000028152: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000017a29: xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005b944: xor eax, eax; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000003a5ad: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000189d0: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017cfc: xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000014723: xor eax, eax; pop rbx; ret; 
0x0000000000022139: xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000002242d: xor eax, eax; pop rdx; ret; 
0x0000000000043651: xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004b38c: xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, rdx; syscall; 
0x000000000004b3af: xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, edx; mov eax, 0x8a; syscall; 
0x0000000000016b68: xor eax, eax; ret; 
0x00000000000289e6: xor eax, eax; shl edx, 9; sete al; ret; 
0x00000000000289b2: xor eax, eax; shl rdx, 0xc; sete al; ret; 
0x0000000000017ba6: xor eax, eax; sub eax, edx; ret; 
0x0000000000020d16: xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000021084: xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000022fcb: xor eax, eax; sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000005abc1: xor eax, eax; syscall; 
0x0000000000021297: xor eax, eax; test edi, edi; setne al; neg eax; ret; 
0x0000000000059542: xor eax, eax; test edx, edx; sete al; ret; 
0x0000000000037a56: xor eax, eax; test rdi, rdi; je 0x37a64; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000037a65: xor eax, eax; test rdi, rdi; je 0x37a73; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000004bf56: xor eax, eax; test rdx, rdx; je 0x4bf64; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000040722: xor eax, eax; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000407c5: xor eax, eax; xor r9d, r9d; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000003d48c: xor eax, eax; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d126: xor eax, eax; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4af: xor eax, eax; xor r9d, r9d; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x0000000000042504: xor eax, edx; mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000004250b: xor eax, edx; shr eax, 1; ret; 
0x0000000000053371: xor eax, edx; sub eax, edx; ret; 
0x0000000000053677: xor eax, edx; sub rax, rdx; ret; 
0x000000000006bdc7: xor ebp, dword ptr [rbp - 0x50cc51cd]; xor ebx, ebx; xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000006bdd5: xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000006bdcf: xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000006bdc9: xor ebp, dword ptr [rsi - 0x24cc50cd]; xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000004cb82: xor ebp, ebp; test rdx, rdx; mov r13, rsi; je 0x4cb9d; mov rdi, qword ptr [r12]; call rax; 
0x000000000008db31: xor ebx, dword ptr [rcx + 0x1c]; add byte ptr [rax + 0x76123fea], dl; ret 0x284; 
0x000000000006bdcd: xor ebx, ebx; xor ebp, dword ptr [rcx - 0x54cc55cd]; xor ebp, dword ptr [rbx + rsi + 0x33d033dd]; sal dword ptr [rbx], cl; ret; 
0x000000000001e7be: xor ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x0000000000022271: xor ecx, dword ptr [rcx + rcx*4 - 0x38]; mov rsi, r8; mov rdx, r10; syscall; 
0x000000000004b2c9: xor ecx, ecx; call 0x4b501; add rsp, 0x28; ret; 
0x0000000000040751: xor ecx, ecx; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000040725: xor ecx, ecx; mov eax, 0x29; syscall; 
0x00000000000407c8: xor ecx, ecx; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000004081a: xor ecx, ecx; mov eax, 0x35; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x000000000003af5d: xor ecx, ecx; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3aca6; add rsp, 0x18; ret; 
0x000000000003b36d: xor ecx, ecx; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3b23f; add rsp, 0x18; ret; 
0x000000000005a607: xor ecx, ecx; mov rsi, r8; mov edi, 0xffffff9c; call 0x4b501; add rsp, 0x28; ret; 
0x000000000003d48f: xor ecx, ecx; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d129: xor ecx, ecx; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4b2: xor ecx, ecx; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x00000000000406a9: xor ecx, ecx; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4aa: xor ecx, ecx; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x37; syscall; 
0x00000000000406cd: xor ecx, ecx; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df43: xor ecx, ecx; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x000000000008f784: xor edi, dword ptr [rbx]; add byte ptr [rax + 0x4001], ch; add byte ptr [rax], al; add byte ptr [rax], al; ret 0xd7fe; 
0x00000000000053ac: xor edi, dword ptr [rcx]; mov bpl, byte ptr [r8]; fstp dword ptr [rax + rbp*8 - 0x21806f54]; ret 0x793b; 
0x00000000000419ba: xor edi, edi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000023a95: xor edi, edi; call 0x4a5e0; mov eax, 0x27; syscall; 
0x000000000004aa8c: xor edi, edi; call 0x4ac07; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005a5c9: xor edi, edi; call 0x590e8; not eax; shr eax, 0x1f; pop rdx; ret; 
0x0000000000037f6d: xor edi, edi; call 0x5ad52; add rsp, 0x120; pop rbx; ret; 
0x000000000002144a: xor edi, edi; dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + 0xe], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000237d7: xor edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0x87; syscall; 
0x00000000000237e9: xor edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0x9b; syscall; 
0x0000000000055b8d: xor edi, edi; mov eax, 0x111; syscall; 
0x0000000000056ce1: xor edi, edi; mov eax, 0x112; syscall; 
0x0000000000057e1e: xor edi, edi; mov eax, 0x3c; syscall; 
0x000000000004304a: xor edi, edi; mov eax, 0x6d; syscall; 
0x000000000005aee3: xor edi, edi; mov eax, 0x79; syscall; 
0x000000000005aee3: xor edi, edi; mov eax, 0x79; syscall; ret; 
0x000000000004a5f0: xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004a5f0: xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000023b4b: xor edi, edi; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rax; call 0x591ab; add rsp, 0x18; ret; 
0x0000000000055be8: xor edi, edi; mov rax, rdx; syscall; 
0x000000000003973a: xor edi, edi; syscall; 
0x0000000000023249: xor edx, edx; add rsp, 0xd0; mov eax, edx; pop rbx; ret; 
0x000000000003b3bb: xor edx, edx; call 0x3b082; pop rdx; ret; 
0x0000000000053d15: xor edx, edx; call 0x53c9d; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000053f57: xor edx, edx; call 0x53e7f; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000024062: xor edx, edx; cmp ecx, eax; mov eax, 0xffffffff; seta dl; cmovae eax, edx; ret; 
0x000000000004ae9e: xor edx, edx; mov dword ptr [rbx], eax; sub rsp, -0x80; mov eax, edx; pop rbx; ret; 
0x000000000004b5c3: xor edx, edx; mov eax, 0x105; mov rsi, r9; syscall; 
0x00000000000406d5: xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df4b: xor edx, edx; mov eax, 0x32; syscall; 
0x000000000004a82c: xor edx, edx; mov eax, 0xe; syscall; 
0x000000000005b3f4: xor edx, edx; mov eax, edx; add rsp, 0x18; ret; 
0x000000000004c34c: xor edx, edx; mov eax, edx; pop rbx; ret; 
0x000000000004a61d: xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000055c4d: xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004a61d: xor edx, edx; mov edi, 2; mov eax, 0xe; syscall; ret; 
0x0000000000055753: xor edx, edx; mov esi, 0x83; mov rax, rbp; syscall; 
0x0000000000056c80: xor edx, edx; mov esi, 6; mov eax, 0xca; syscall; 
0x0000000000054f11: xor edx, edx; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004e4e3: xor edx, edx; mov rax, r8; syscall; 
0x0000000000054653: xor edx, edx; mov rax, r9; mov rsi, rbx; syscall; 
0x00000000000548a3: xor edx, edx; mov rax, rbp; mov rsi, r9; syscall; 
0x000000000004b90b: xor edx, edx; mov rax, rbp; movsxd rdx, edx; mov rdi, r9; mov rsi, r12; syscall; 
0x0000000000039d2f: xor edx, edx; mov rax, rdx; add rsp, 0x18; ret; 
0x000000000004b04e: xor edx, edx; mov rdi, -0x64; mov rax, r14; mov rsi, r12; mov rdx, r13; syscall; 
0x000000000005aa83: xor edx, edx; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x000000000004afb8: xor edx, edx; movsxd rdi, edi; mov edx, edx; mov eax, 0x10c; syscall; 
0x000000000005abd8: xor edx, edx; movsxd rdi, r8d; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000003972c: xor edx, edx; movsxd rsi, edi; mov eax, 0x12e; sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000003a74f: xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000005677b: xor edx, edx; movsxd rsi, esi; mov r10, rbp; mov rax, r13; syscall; 
0x000000000005aec5: xor edx, edx; pop rbx; mov eax, edx; pop rbp; pop r12; ret; 
0x0000000000020f69: xor edx, edx; test eax, eax; setne dl; mov eax, edx; pop rbx; ret; 
0x000000000004b2c7: xor edx, edx; xor ecx, ecx; call 0x4b501; add rsp, 0x28; ret; 
0x000000000004e4e1: xor edx, edx; xor edx, edx; mov rax, r8; syscall; 
0x000000000003a74d: xor edx, edx; xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004bcaf: xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004b922: xor edx, edx; xor esi, esi; mov rax, rbp; mov rdi, r9; syscall; 
0x000000000004ba2f: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000049c39: xor edx, edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000004c139: xor edx, edx; xor esi, esi; mov rdi, rbx; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000004071f: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x000000000008f19a: xor esi, dword ptr [rdi + 0x52]; ret 0x3fd3; 
0x0000000000089116: xor esi, dword ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x000000000008fbb1: xor esi, eax; ret 0xa2dd; 
0x000000000001912f: xor esi, esi; call 0x19aa0; mov rax, rbx; pop rbx; ret; 
0x000000000001af7a: xor esi, esi; call 0x1ae5b; mov eax, ebx; pop rbx; ret; 
0x00000000000419e9: xor esi, esi; call 0x414fb; mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000016f77: xor esi, esi; call 0x54178; add rsp, 8; ret; 
0x000000000001790a: xor esi, esi; call 0x54178; mov rax, rbx; pop rbx; ret; 
0x0000000000039b34: xor esi, esi; call 0x57116; add rsp, 0x18; ret; 
0x000000000004bcb1: xor esi, esi; call qword ptr [rdi + 0x48]; 
0x00000000000223c3: xor esi, esi; mov eax, 0x11d; mov rdx, r8; syscall; 
0x00000000000223c3: xor esi, esi; mov eax, 0x11d; mov rdx, r8; syscall; neg eax; ret; 
0x0000000000049c4b: xor esi, esi; mov eax, 0x135; mov rdi, rbx; mov rdx, rsi; syscall; 
0x0000000000059132: xor esi, esi; mov eax, 0x60; mov rdi, rbx; syscall; 
0x0000000000023705: xor esi, esi; mov edi, 0x10; mov eax, 0x144; syscall; 
0x0000000000023705: xor esi, esi; mov edi, 0x10; mov eax, 0x144; syscall; ret; 
0x00000000000548b3: xor esi, esi; mov rax, r12; syscall; 
0x0000000000054663: xor esi, esi; mov rax, r9; syscall; 
0x000000000004b924: xor esi, esi; mov rax, rbp; mov rdi, r9; syscall; 
0x0000000000054f24: xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000004ba31: xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000049c3b: xor esi, esi; mov rdi, rbx; call rax; 
0x000000000004c13b: xor esi, esi; mov rdi, rbx; or ebp, 0xffffffff; call qword ptr [rbx + 0x48]; 
0x000000000005a355: xor esi, esi; movsxd rdi, ebp; lea rdx, [rsp + 0xc]; mov eax, 0xde; syscall; 
0x0000000000023780: xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000004a405: xor esi, esi; push rcx; call rax; 
0x0000000000037f6b: xor esi, esi; xor edi, edi; call 0x5ad52; add rsp, 0x120; pop rbx; ret; 
0x000000000007c3c8: xor esp, dword ptr [rax]; add esp, dword ptr [rcx]; add al, 0xff; movsb byte ptr [rdi], byte ptr [rsi]; add al, ah; jmp rcx; 
0x0000000000071c61: xor esp, dword ptr [rbx + 2]; push 0x5d5735d2; ret 0xda8b; 
0x0000000000058f2d: xor esp, ecx; add dword ptr [rcx], eax; ret 0x6348; 
0x0000000000058e77: xor esp, ecx; add dword ptr [rcx], eax; ror byte ptr [rax - 0x68], 1; ret; 
0x0000000000054f10: xor r10d, r10d; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x0000000000054652: xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x00000000000548a2: xor r10d, r10d; mov rax, rbp; mov rsi, r9; syscall; 
0x000000000004b90a: xor r10d, r10d; mov rax, rbp; movsxd rdx, edx; mov rdi, r9; mov rsi, r12; syscall; 
0x000000000004b04d: xor r10d, r10d; mov rdi, -0x64; mov rax, r14; mov rsi, r12; mov rdx, r13; syscall; 
0x000000000005aa82: xor r10d, r10d; movsxd rdi, dword ptr [r8]; mov eax, 0x10d; syscall; 
0x000000000004afb7: xor r10d, r10d; movsxd rdi, edi; mov edx, edx; mov eax, 0x10c; syscall; 
0x000000000005abd7: xor r10d, r10d; movsxd rdi, r8d; lea rsi, [rsp + 8]; mov edx, 0x80000000; mov eax, 0x3d; syscall; 
0x000000000003972b: xor r10d, r10d; movsxd rsi, edi; mov eax, 0x12e; sub rsp, 0x20; xor edi, edi; syscall; 
0x000000000004e4e0: xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000003a74c: xor r10d, r10d; xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004b921: xor r10d, r10d; xor esi, esi; mov rax, rbp; mov rdi, r9; syscall; 
0x000000000004071e: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x0000000000056280: xor r15b, r14b; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000020dde: xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000002397f: xor r8d, r8d; mov qword ptr [rsp + 0x18], rax; mov eax, 0x65; syscall; 
0x000000000002224b: xor r8d, r8d; mov rax, r9; mov rdx, r8; syscall; 
0x000000000005b943: xor r8d, r8d; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000040721: xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000407c4: xor r8d, r8d; xor r9d, r9d; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x000000000003d48b: xor r8d, r8d; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d125: xor r8d, r8d; xor r9d, r9d; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4ae: xor r8d, r8d; xor r9d, r9d; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x0000000000040750: xor r9d, r9d; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000040724: xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000407c7: xor r9d, r9d; mov eax, 0x35; mov rdi, r12; mov rdx, r13; syscall; 
0x0000000000040819: xor r9d, r9d; mov eax, 0x35; movsxd rsi, edi; mov rdx, r13; mov rdi, r12; syscall; 
0x000000000003d48e: xor r9d, r9d; movsxd rdi, edi; mov eax, 0x33; syscall; 
0x000000000003d128: xor r9d, r9d; movsxd rdi, edi; mov eax, 0x34; syscall; 
0x000000000003b4b1: xor r9d, r9d; movsxd rdi, edi; mov edx, edx; mov eax, 0x31; syscall; 
0x00000000000406a8: xor r9d, r9d; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x36; syscall; 
0x000000000003d4a9: xor r9d, r9d; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x37; syscall; 
0x00000000000406cc: xor r9d, r9d; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x30; syscall; 
0x000000000003df42: xor r9d, r9d; movsxd rdi, edi; movsxd rsi, esi; xor edx, edx; mov eax, 0x32; syscall; 
0x0000000000053676: xor rax, rdx; sub rax, rdx; ret; 
0x0000000000057e1d: xor rdi, rdi; mov eax, 0x3c; syscall; 
0x000000000008fbb0: xor rsi, r8; ret 0xa2dd; 
0x0000000000089115: xor si, word ptr [rdx]; insb byte ptr [rdi], dx; add byte ptr gs:[rax], al; ret; 
0x0000000000030c92: xorps xmm0, xmm0; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002f4b1: xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000032825: xorps xmm0, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002fa2e: xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002effe: xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x20], xmm0; ret; 
0x000000000002ef31: xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 8], xmm0; ret; 
0x000000000002d6d5: xorps xmm0, xmm0; ret; 
0x000000000001b75f: xorps xmm0, xmm1; add rsp, 0x10; movapd xmm1, xmm2; pop rbx; ret; 
0x000000000002a869: xorps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002ad7a: xorps xmm0, xmm1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000036038: xorps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000030fa2: xorps xmm0, xmm1; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000002a98f: xorps xmm0, xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002c315: xorps xmm0, xmm1; pop rbx; ret; 
0x0000000000029ce1: xorps xmm0, xmm1; ret; 
0x00000000000359b7: xorps xmm0, xmmword ptr [rip + 0x5b002]; add rsp, 0x18; ret; 
0x0000000000028ae4: xorps xmm1, xmm0; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000028b07: xorps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000032a1b: xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002a764: xorps xmm1, xmm1; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002dd4f: xorps xmm1, xmm1; movapd xmm0, xmm1; ret; 
0x000000000002dd8b: xorps xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x000000000002ffa9: xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x61dec]; divsd xmm0, xmm1; ret; 
0x000000000002f49d: xorps xmm1, xmm1; movsd xmm0, qword ptr [rip + 0x628f8]; divsd xmm0, xmm1; ret; 
0x0000000000028a58: xorps xmm1, xmm1; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, xmm1; ret; 
0x0000000000030547: xorps xmm1, xmm1; movss xmm0, dword ptr [rip + 0x6262a]; divss xmm0, xmm1; ret; 
0x000000000002fa1a: xorps xmm1, xmm1; movss xmm0, dword ptr [rip + 0x63157]; divss xmm0, xmm1; ret; 
0x0000000000028a80: xorps xmm1, xmm1; movss xmm0, dword ptr [rsp - 4]; divss xmm0, xmm1; ret; 
0x00000000000353dd: xorps xmm1, xmm1; mulsd xmm0, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000035476: xorps xmm1, xmm1; mulss xmm0, xmm1; movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000001b6a0: xorps xmm1, xmm2; ret; 
0x00000000000355a7: xorps xmm2, xmm1; divsd xmm0, xmm2; ret; 
0x0000000000035655: xorps xmm2, xmm1; divss xmm0, xmm2; ret; 
0x0000000000032b8d: xorps xmm2, xmm2; ucomisd xmm1, xmm0; jp 0x32b9d; jne 0x32b9d; divsd xmm0, xmm2; ret; 
0x0000000000032d68: xorps xmm2, xmm2; ucomiss xmm1, xmm0; jp 0x32d77; jne 0x32d77; divss xmm0, xmm2; ret; 
0x000000000001ba6e: xorps xmm2, xmm3; movapd xmm1, xmm2; ret; 

18555 gadgets found

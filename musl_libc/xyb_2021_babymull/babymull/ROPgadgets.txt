


Gadgets
=======


0x000000000001dbad: adc ah, byte ptr [rsi + 0xf]; fmul dword ptr cs:[rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000049ba2: adc al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000058fc7: adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000004cd4b: adc al, 0; add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x00000000000390d0: adc al, 0; add byte ptr [rax], al; sub eax, edx; pop rdx; ret; 
0x000000000003a199: adc al, 0; mov rsi, rdi; jg 0x3a1b0; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000022d43: adc al, 0x24; add rsp, 0x28; ret; 
0x000000000001bde1: adc al, 0x24; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd40: adc al, 0x24; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000004bd1c: adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000022d02: adc al, 0x24; pop rcx; ret; 
0x000000000004f336: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000043da0: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000018abd: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x18af1; add rsp, 0x38; ret; 
0x0000000000051dc5: adc al, 0x29; ret; 
0x000000000005d452: adc al, 0x48; lea esi, [rsp + 4]; mov eax, 1; syscall; 
0x00000000000447b0: adc al, 0x48; movsxd rdi, eax; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x000000000003c294: adc al, 0x48; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000004d117: adc al, 0x48; movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x00000000000419c6: adc al, 0x49; movsxd rdi, eax; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000003c2ae: adc al, 0x49; movsxd rdi, esp; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000057ab7: adc al, 0x4c; mov eax, eax; mov rsi, rdx; syscall; 
0x000000000005690d: adc al, 0x54; add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x000000000002811e: adc al, 0x56; cmp rdx, rcx; adc eax, 0; ret; 
0x0000000000044753: adc al, 0x75; and byte ptr [rcx + 0x63], cl; std; mov eax, 0x20; syscall; 
0x000000000003d516: adc al, 0x89; ret 0xe283; 
0x0000000000052724: adc al, 0x89; ret 0xff49; 
0x0000000000057d2e: adc al, 0x8b; xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000034c28: adc al, 0x96; add eax, 0x580ff200; ret 0x4866; 
0x000000000005c5f0: adc al, 0x96; add rdx, r14; jmp rdx; 
0x0000000000019f75: adc al, 0xb0; ret; 
0x000000000001a034: adc al, 0xb0; sub rsi, 1; jae 0x1a030; ret; 
0x0000000000019f72: adc al, 0xb1; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001a031: adc al, 0xb1; mov dword ptr [rax + rsi*4], edx; sub rsi, 1; jae 0x1a030; ret; 
0x0000000000051449: adc al, 0xb7; add rdx, rdi; jmp rdx; 
0x000000000005d3bf: adc al, 0xb8; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x000000000003b018: adc al, 0xc2; std; lcall [rdx + 0x5b]; pop rbp; ret; 
0x00000000000266f2: adc al, 0xd6; test rdx, rdx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x0000000000024b31: adc al, 0xe8; ret 0x164; 
0x000000000002e5d9: adc al, 0xf3; addps xmm5, xmm0; subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000001c3a9: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc8d: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d356: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; ret; 
0x000000000001cf0a: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001d053: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000001c04b: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x000000000001c0d2: adc al, 0xf; push rdi; shl dword ptr [rsi + 0xf], 0x7e; ret 0xc148; 
0x0000000000023be4: adc al, 0xff; call qword ptr [rbx + 0x48]; 
0x000000000002479e: adc al, 1; add byte ptr [rax], al; syscall; 
0x0000000000023825: adc al, 7; add byte ptr [rcx], bh; ret; 
0x000000000004ea24: adc al, byte ptr [rax]; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000004973d: adc al, byte ptr [rbp - 0x5677f02e]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x000000000001f2b7: adc al, byte ptr [rbx - 0x7cb6c01d]; ret; 
0x0000000000021a53: adc al, byte ptr [rcx + 0xe0100ef]; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x000000000005925a: adc al, byte ptr [rcx]; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000003ffca: adc al, ch; ret 0x160; 
0x000000000001c9f4: adc al, ch; ret 0x1b0; 
0x0000000000046397: adc al, ch; ret; 
0x0000000000027021: adc bh, bh; dec dword ptr [rax - 0x77]; ret 0x8949; 
0x0000000000054adf: adc bh, bh; ret 0xf4eb; 
0x0000000000022983: adc bh, byte ptr [rsi + 9]; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000059dbe: adc bh, dh; inc dword ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x0000000000033e0e: adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; pop rbx; ret; 
0x000000000003ea70: adc bl, ch; add eax, ecx; out 8, eax; or eax, edi; ret; 
0x000000000004637d: adc bl, ch; add ecx, dword ptr [rcx - 0x7cb6fbb0]; rol byte ptr [rbx + rbp*8], 0xd9; mov dword ptr [rdi], 0xffffffff; ret; 
0x000000000005e419: adc bl, ch; in eax, dx; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x000000000002d17d: adc bl, dh; divps xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000001d350: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf04: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c045: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000058088: adc byte ptr [r13 - 0x47e78b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x0000000000056fd4: adc byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x0000000000039302: adc byte ptr [rax + 0x10], bh; syscall; 
0x0000000000059258: adc byte ptr [rax + 0x112], bh; xor edi, edi; syscall; 
0x000000000004e506: adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x000000000004db2e: adc byte ptr [rax + 0x39], cl; sal byte ptr [rdi + rax + 0x48], 1; sub edx, eax; mov qword ptr [rsi], rdx; ret; 
0x000000000004d14a: adc byte ptr [rax + 0x4be04cc], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x0000000000024570: adc byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000003a19f: adc byte ptr [rax + 0x63], cl; jg 0x3a1b4; mov eax, 0xa0; syscall; 
0x0000000000029b95: adc byte ptr [rax + 0x63], cl; ret; 
0x0000000000022ea0: adc byte ptr [rax + 0x63], cl; ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x000000000003a1a3: adc byte ptr [rax + 0xa0], bh; syscall; 
0x000000000003a1a3: adc byte ptr [rax + 0xa0], bh; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x00000000000406d1: adc byte ptr [rax + rax], al; add byte ptr [rax + 1], cl; ret 0x8948; 
0x00000000000580f7: adc byte ptr [rax + rcx*2 - 0x75], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x0000000000059731: adc byte ptr [rax - 0x18], dl; inc byte ptr [rdx]; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000003273c: adc byte ptr [rax - 0x3f], cl; call 0xe6a874; add bh, bh; jg 0x32751; ret; 
0x0000000000043a05: adc byte ptr [rax - 0x68], cl; ret; 
0x000000000003a112: adc byte ptr [rax - 0x75], cl; jl 0x3a13b; sub byte ptr [rcx - 0x73], cl; push rbp; add eax, ebp; ret; 
0x0000000000057e75: adc byte ptr [rax - 0x75], cl; js 0x57e82; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004b5a0: adc byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000051598: adc byte ptr [rax - 0x77], cl; jo 0x515a5; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000053959: adc byte ptr [rax - 0x77], cl; jo 0x53966; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000580ee: adc byte ptr [rax - 0x77], cl; js 0x5816b; ret; 
0x00000000000469bc: adc byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000001ab55: adc byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000003981a: adc byte ptr [rax - 0x77], cl; ret 0xff48; 
0x0000000000021c37: adc byte ptr [rax - 0x77], cl; ret; 
0x0000000000019fdc: adc byte ptr [rax - 0x7d], cl; ret 0x4d10; 
0x00000000000195ed: adc byte ptr [rax - 0x7d], cl; ret 0x8504; 
0x00000000000617a7: adc byte ptr [rax - 0x7d], cl; ret 0xe808; 
0x0000000000046ac2: adc byte ptr [rax - 0x7d], cl; ret 0xeb04; 
0x00000000000186a7: adc byte ptr [rax - 0xc8affc8], al; sub rax, rdi; ret; 
0x000000000001f51e: adc byte ptr [rax - 1], cl; ret 0xff48; 
0x0000000000039f22: adc byte ptr [rax - 1], cl; ret; 
0x000000000004cb06: adc byte ptr [rax], al; add byte ptr [rax + 0x106], bh; mov rsi, rbp; syscall; 
0x000000000005a4d4: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; 
0x000000000005a4d4: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x000000000005867a: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000001ed71: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000056fd5: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x0000000000058fe0: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d22: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cef: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf4: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059a23: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000004d198: adc byte ptr [rax], al; add byte ptr [rax], al; mov esi, 0x5413; syscall; 
0x0000000000022976: adc byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; 
0x00000000000588b0: adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000039304: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000241ac: adc byte ptr [rax], al; add byte ptr [rax], al; xor esi, esi; syscall; 
0x00000000000241ac: adc byte ptr [rax], al; add byte ptr [rax], al; xor esi, esi; syscall; ret; 
0x000000000001ec46: adc byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000023bdf: adc byte ptr [rax], al; add cl, ch; pop rcx; adc al, 0xff; call qword ptr [rbx + 0x48]; 
0x000000000002454d: adc byte ptr [rax], al; jne 0x2456e; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000005de77: adc byte ptr [rax], al; jne 0x5de98; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000004daa8: adc byte ptr [rax], al; setne al; ret; 
0x0000000000057773: adc byte ptr [rbp + 0x480779c0], al; mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x000000000001fbeb: adc byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000058089: adc byte ptr [rbp - 0x47e78b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000004081d: adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000003a750: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000046661: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r14; pop r15; ret; 
0x00000000000430fa: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000031541: adc byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x000000000005cb9f: adc byte ptr [rbx + 0xa4b8], cl; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000001c0ce: adc byte ptr [rbx + 0xf142444], cl; push rdi; shl dword ptr [rsi + 0xf], 0x7e; ret 0xc148; 
0x000000000003b427: adc byte ptr [rbx + rcx*4 + 0x50], cl; sbb bl, ch; add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000003af6d: adc byte ptr [rbx - 0x2b], cl; mov eax, 0x19; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x0000000000047bee: adc byte ptr [rbx - 0x57ccf16], al; or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x000000000004cb6d: adc byte ptr [rcx + 0x63], cl; stc; movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000005a635: adc byte ptr [rcx + 1], 0; ret; 
0x000000000005a54a: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; 
0x000000000005a54a: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; ret; 
0x0000000000045f52: adc byte ptr [rcx + rcx*4 - 0x11], cl; call rax; 
0x0000000000045cd3: adc byte ptr [rcx + rcx*4 - 0x11], cl; mov r14d, 2; call rax; 
0x000000000004dc13: adc byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000038952: adc byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000000274ca: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; pop r13; ret; 
0x0000000000027629: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d434: adc byte ptr [rcx - 0x75], cl; jo 0x5d441; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004cfe5: adc byte ptr [rcx - 0x75], cl; sbb byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000003e55b: adc byte ptr [rcx - 0x77], cl; in al, 0x89; ret; 
0x000000000001c3a5: adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc89: adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d04f: adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000005f171: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000000247f9: adc byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x00000000000280e2: adc byte ptr [rcx], cl; ret 0x428d; 
0x000000000005bf59: adc byte ptr [rcx], dh; fisttp dword ptr [rcx + 0x39]; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x000000000004db17: adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7b], 0xd2; je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000036884: adc byte ptr [rdi], cl; sub dl, al; pop rbx; ret; 
0x0000000000018661: adc byte ptr [rdx + rdx*8 - 0x76b7158b], al; ret; 
0x000000000001e7e0: adc byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000035a02: adc byte ptr [rip + 0x5f6a0], al; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x00000000000349a9: adc byte ptr [rip + 0x60181], al; add rsp, 0x40; pop rbx; ret; 
0x0000000000035a52: adc byte ptr [rip + 0x60400], al; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000034c8f: adc byte ptr [rip + 0x60be3], al; add rsp, 0x28; ret; 
0x0000000000033e17: adc byte ptr [rip + 0x619a3], al; ret; 
0x0000000000033e20: adc byte ptr [rip + 0x61ad6], al; ret; 
0x00000000000308c9: adc byte ptr [rip + 0x64c39], al; divsd xmm0, xmm1; ret; 
0x000000000002fdab: adc byte ptr [rip + 0x64d7f], al; divsd xmm0, xmm1; ret; 
0x0000000000030e5a: adc byte ptr [rip + 0x64e5c], al; divss xmm0, xmm1; ret; 
0x000000000003032b: adc byte ptr [rip + 0x65547], al; divss xmm0, xmm1; ret; 
0x000000000002e391: adc byte ptr [rip + 0x667a1], al; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002e660: adc byte ptr [rip + 0x673c6], al; ret; 
0x000000000002ce8d: adc byte ptr [rip + 0x68155], al; subsd xmm0, xmm1; ret; 
0x000000000002ce6e: adc byte ptr [rip + 0x68174], al; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002ce83: adc byte ptr [rip + 0x683ff], cl; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d3fb: adc byte ptr [rip + 0x68657], cl; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002d405: adc byte ptr [rip + 0x6867d], al; subss xmm0, xmm1; ret; 
0x000000000002d3e6: adc byte ptr [rip + 0x6869c], al; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002c25f: adc byte ptr [rip + 0x688cb], al; ret; 
0x000000000002b98c: adc byte ptr [rip + 0x691b6], al; pop rbx; ret; 
0x000000000002bb12: adc byte ptr [rip + 0x69d6c], al; pop rbx; ret; 
0x000000000002a908: adc byte ptr [rip + 0x6a3da], cl; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ab50: adc byte ptr [rip + 0x6a472], al; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002ace9: adc byte ptr [rip + 0x6ad69], al; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x00000000000293f7: adc byte ptr [rip + 0x6b8e3], al; add rsp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000029430: adc byte ptr [rip + 0x6c5f2], al; add rsp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000001bccf: adc byte ptr [rip + 0x78e53], al; pop rdx; subsd xmm0, xmm2; ret; 
0x000000000001a59e: adc byte ptr [rip + 0x7a5ec], cl; addsd xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000003eaa2: adc byte ptr [rip + 0xbf], bh; mov eax, edi; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000002a559: adc byte ptr [rsi - 0x3f], ah; call 0xffffffffc0b9b470; ret; 
0x0000000000033ea8: adc byte ptr [rsp + 0xc], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fa2: adc byte ptr [rsp + 0xc], al; add rsp, 0x18; ret; 
0x000000000002f630: adc byte ptr [rsp + 0xc], dl; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000033e66: adc byte ptr [rsp + 8], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fbf: adc byte ptr [rsp + 8], al; add rsp, 0x18; ret; 
0x000000000001cfb2: adc byte ptr [rsp + 8], cl; add rsp, 0x28; ret; 
0x000000000002db84: adc byte ptr [rsp - 0x18], cl; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000001cf63: adc byte ptr [rsp - 4], al; ret; 
0x000000000002955f: adc byte ptr [rsp - 4], al; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295e6: adc byte ptr [rsp - 4], cl; mulss xmm0, xmm1; ret; 
0x000000000001d3f5: adc byte ptr [rsp - 8], al; ret; 
0x0000000000029537: adc byte ptr [rsp - 8], al; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295c7: adc byte ptr [rsp - 8], cl; mulsd xmm0, xmm1; ret; 
0x00000000000244a3: adc ch, byte ptr [rax]; mov eax, 0xa9; syscall; 
0x000000000001c589: adc cl, bl; and al, 0x10; add rsp, 0x48; fxch st(1); ret; 
0x0000000000032d6c: adc cl, bl; insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000004e740: adc cl, byte ptr [rax + 0x63]; clc; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x0000000000049931: adc cl, byte ptr [rbp + 0x39]; sar dword ptr [rdi + 7], 0x7c; or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x000000000002cfce: adc cl, byte ptr [rbx + 0xff30006]; pop rcx; ret 0xff3; 
0x000000000003c96b: adc cl, byte ptr [rdx - 0x47cb7f9]; add eax, 0xff480c74; ret; 
0x00000000000441ac: adc cl, ch; add byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x00000000000599e8: adc dh, bl; movd dword ptr [rdx], mm0; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x00000000000359fd: adc dh, byte ptr [rbp + 0x10]; movsd xmm0, qword ptr [rip + 0x5f6a0]; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x000000000004b2bd: adc dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call rax; 
0x0000000000055802: adc dh, byte ptr [rdi + rdi*8 - 0x1f76b301]; pop r12; ret; 
0x000000000003c6ab: adc dh, dh; ret 0x74c0; 
0x000000000002cbff: adc dl, dh; divps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x00000000000359ff: adc dl, dh; movups xmm0, xmmword ptr [rip + 0x5f6a0]; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x0000000000019a77: adc dword ptr [rax + 0x39], ecx; ret; 
0x0000000000022ae7: adc dword ptr [rax + 0x48], edi; mov esi, 2; mov edx, 1; syscall; 
0x00000000000246b1: adc dword ptr [rax + 0x48], edi; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000058b18: adc dword ptr [rax + 0x63], ecx; clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000038ace: adc dword ptr [rax + 0x7500027e], eax; or edi, edi; ret 0x8941; 
0x000000000002730f: adc dword ptr [rax + 1], ecx; ret; 
0x000000000005a9df: adc dword ptr [rax - 1], ecx; ret 0x8b48; 
0x000000000005a9c3: adc dword ptr [rax - 1], ecx; ret 0xdceb; 
0x0000000000049f14: adc dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005aa13: adc dword ptr [rax], eax; ret; 
0x0000000000035a4d: adc dword ptr [rbp + 0xf], esi; movss xmm0, dword ptr [rip + 0x60400]; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x00000000000358e2: adc dword ptr [rbp - 0x77], eax; ret; 
0x0000000000025694: adc dword ptr [rbp - 0xff70], ecx; dec dword ptr [rax - 0x73]; add eax, 0x662be; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000003b539: adc dword ptr [rbx + 0xc74ffff], eax; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x00000000000455c4: adc dword ptr [rcx + 0x247489f7], ecx; or al, ch; movabs al, byte ptr [0x890824748bfffffa]; ret 0x8341; 
0x0000000000058ee6: adc dword ptr [rcx], eax; add byte ptr [rax], al; mov esi, 0x18; lea rdi, [r8 + 0x88]; syscall; 
0x0000000000057fe6: adc dword ptr [rcx], eax; add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000004f1a8: adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000033d4d: adc dword ptr [rdi], eax; movaps xmm0, xmm2; ret; 
0x00000000000387f2: adc dword ptr [rsi], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rdi]; 
0x000000000002f42c: adc dword ptr [rsi], eax; ret; 
0x0000000000033cdf: adc dword ptr [rsi], ecx; ret; 
0x000000000001c042: adc dword ptr [rsp + 0x10], ecx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001d34d: adc dword ptr [rsp + 0x10], edx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001d353: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf07: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c048: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000034271: adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000003436b: adc dword ptr [rsp + 0x1c], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000001df88: adc dword ptr [rsp + 0x20], edx; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001df8e: adc dword ptr [rsp + 0x24], ebx; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000033e9d: adc dword ptr [rsp + 0xc], eax; call 0x22c9b; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000033e5b: adc dword ptr [rsp + 8], eax; call 0x22c9b; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001cc6e: adc dword ptr [rsp + 8], ecx; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x000000000002f8fa: adc dword ptr [rsp - 0x10], eax; ret; 
0x000000000002db8e: adc dword ptr [rsp - 0x10], ecx; mulsd xmm0, xmm4; ret; 
0x000000000002db7e: adc dword ptr [rsp - 0x18], esp; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002f932: adc dword ptr [rsp - 0xc], eax; ret; 
0x000000000002f85e: adc dword ptr [rsp - 4], eax; mov eax, r8d; ret; 
0x000000000003402c: adc dword ptr [rsp - 4], eax; movaps xmm0, xmm1; ret; 
0x00000000000378ce: adc dword ptr [rsp - 4], eax; movd xmm0, eax; ret; 
0x0000000000029559: adc dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000001a2cd: adc dword ptr [rsp - 4], ebp; movq xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000295e0: adc dword ptr [rsp - 4], ecx; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002e2b3: adc dword ptr [rsp - 4], ecx; ret; 
0x0000000000035b2c: adc dword ptr [rsp - 4], ecx; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x0000000000033f97: adc dword ptr [rsp - 8], eax; movaps xmm0, xmm1; ret; 
0x000000000003788d: adc dword ptr [rsp - 8], eax; movq xmm0, rax; ret; 
0x0000000000029531: adc dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295c1: adc dword ptr [rsp - 8], ecx; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002c254: adc dword ptr [rsp - 8], ecx; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7da: adc dword ptr [rsp - 8], ecx; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000035aa1: adc dword ptr [rsp - 8], ecx; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000001a2c7: adc dword ptr [rsp - 8], esp; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000049f13: adc dword ptr es:[rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000028123: adc eax, 0; ret; 
0x000000000005d4ab: adc eax, 0x10db8; add byte ptr [rcx + rcx*4 - 9], cl; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000003b9de: adc eax, 0x24440148; and byte ptr [rax + 0x29], cl; ret; 
0x000000000002feaa: adc eax, 0x2ecbe8; add dl, dh; mulps xmm0, xmmword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x0000000000030427: adc eax, 0x36dfe8; add bl, dh; mulps xmm0, xmmword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x0000000000053e09: adc eax, 0x422ee; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000052629: adc eax, 0x438e2; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000052643: adc eax, 0x439a8; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x000000000004f930: adc eax, 0x498f3; movzx eax, byte ptr [rax]; ret; 
0x000000000004f905: adc eax, 0x4991e; movzx eax, byte ptr [rax]; ret; 
0x00000000000214f8: adc eax, 0x5a000000; test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000032a4e: adc eax, 0x633b9; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000003238b: adc eax, 0x63974; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031cab: adc eax, 0x64040; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000002b28d: adc eax, 0x6a5e6; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002b285: adc eax, 0x6a7c6; addss xmm2, dword ptr [rip + 0x6a5e6]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002a5c5: adc eax, 0x6a836; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002935e: adc eax, 0x6b93d; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000026e38: adc eax, 0x6ebb7; mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x00000000000266c8: adc eax, 0x6ff30; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x000000000003bfc3: adc eax, 0x72c53948; xor ecx, dword ptr [rax - 0x75]; je 0x3bff1; or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000215a2: adc eax, 0x7431d; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000003138f: adc eax, 0x7e0f4866; ret 0xca09; 
0x000000000001906c: adc eax, 0x82e87; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000002a5bd: adc eax, 0xd4590ff2; subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002e38a: adc eax, 0xe0580ff2; movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000001dde2: adc eax, 0xfd82e0f; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000004d5d0: adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x0000000000057833: adc eax, dword ptr [rbp + 0x58dd75c0]; pop rbx; pop rbp; ret; 
0x00000000000195bc: adc eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp - 0x1a], 0xf7; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x00000000000246d7: adc eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000004bd31: adc ebx, dword ptr [rbx - 0xcefffc]; mov eax, 0xe; syscall; 
0x000000000004bd31: adc ebx, dword ptr [rbx - 0xcefffc]; mov eax, 0xe; syscall; ret; 
0x0000000000020b96: adc ebx, dword ptr [rcx]; int 0xe0; pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000021d42: adc ebx, ebp; cmp al, 0x48; mov eax, dword ptr [rsp]; mov rdi, r15; call rax; 
0x0000000000042cc8: adc ecx, dword ptr [rax + 0x29]; ret 0x148; 
0x0000000000019ad7: adc ecx, dword ptr [rax + 0x39]; ret; 
0x0000000000022ee4: adc ecx, dword ptr [rax + 0x63]; dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x0000000000051085: adc ecx, dword ptr [rax + 0x63]; sti; mov eax, 3; syscall; 
0x000000000001c361: adc ecx, dword ptr [rax + 0xff20007]; pop rcx; ret; 
0x0000000000057e72: adc ecx, dword ptr [rax - 0x75]; adc byte ptr [rax - 0x75], cl; js 0x57e82; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000042cd1: adc ecx, dword ptr [rax - 0x75]; push rbx; or byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000004ce1a: adc ecx, dword ptr [rax - 0x7b]; ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x0000000000042864: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000024694: adc ecx, dword ptr [rbp - 0x77]; sal byte ptr [rbx + 0x11], 1; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000056102: adc ecx, dword ptr [rcx - 0x73]; add dword ptr [rax - 0x77], ecx; or byte ptr [r9 - 0x76], r8b; add byte ptr [rax + 0x1b806], cl; add byte ptr [rax], al; ret; 
0x0000000000049fba: adc ecx, dword ptr [rcx - 0x75]; and byte ptr [r8 - 0x75], r9b; je 0x49fe7; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004e7ad: adc ecx, dword ptr [rcx - 0x75]; mov rdx, r12; call rax; 
0x0000000000025543: adc ecx, dword ptr [rdi]; mov esi, 0xff480143; ret; 
0x000000000002f8eb: adc ecx, dword ptr [rdi]; push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000052f89: adc edi, dword ptr [rcx]; ret 0x1b74; 
0x0000000000027511: adc edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x00000000000568bf: adc edx, dword ptr [rax + rax]; mov eax, 0x10; syscall; 
0x000000000004d19d: adc edx, dword ptr [rax + rax]; syscall; 
0x0000000000042d8a: adc edx, dword ptr [rax - 0x18]; mov dh, 0xad; add byte ptr [rax], al; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x00000000000239d6: adc edx, dword ptr [rax - 0x18]; push -0x5f; add al, byte ptr [rax]; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x000000000002a905: adc edx, esi; movups xmm1, xmmword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000022ae5: adc esi, dword ptr [rbx + 0x11]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004e73e: adc esi, dword ptr [rbx + 0x12]; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000003c292: adc esi, dword ptr [rbx + 0x14]; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000004efb6: adc esi, dword ptr [rbx + 0x16]; movsxd rdi, dword ptr [r12 + 0x78]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000056d1e: adc esi, dword ptr [rcx]; sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000057002: adc esi, edi; ret 0xffff; 
0x000000000002aaa2: add ah, byte ptr [rbp + 0xff20006]; pop rcx; ret 0xff2; 
0x00000000000406d2: add al, 0; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000053297: add al, 0; add byte ptr [rax - 0x73], cl; or eax, 0x42d8f; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000591bd: add al, 0; add byte ptr [rax], al; add byte ptr [rsi + 6], bh; syscall; 
0x0000000000041aa9: add al, 0; add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005db6b: add al, 0; add byte ptr [rax], al; mov edx, 0x800; mov rax, r9; syscall; 
0x00000000000246b8: add al, 0; add byte ptr [rax], al; mov edx, 0x800; syscall; 
0x00000000000448da: add al, 0; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000004cb60: add al, 0; add byte ptr [rax], al; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004d14f: add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004efe0: add al, 0; add byte ptr [rax], al; movsxd rdx, ebx; syscall; 
0x000000000005d5bc: add al, 0; add byte ptr [rax], al; syscall; 
0x000000000004187c: add al, 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000034577: add al, 0; add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi], 0x96; ret 0x8141; 
0x000000000004d29b: add al, 0; add byte ptr [rcx + rcx*4 - 0x20], al; pop rdx; pop rbx; pop r12; ret; 
0x00000000000229c7: add al, 0; add byte ptr [rcx + rcx*4 - 0x2e], cl; mov rax, r8; syscall; 
0x0000000000050ae7: add al, 0; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x000000000004fcb7: add al, 0; call 0x56922; lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x00000000000508ae: add al, 0; mov byte ptr [rdx], dil; ret; 
0x0000000000046982: add al, 0; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000056f21: add al, 0; mov qword ptr [rbx + 8], rax; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x0000000000057dca: add al, 0; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004f8a5: add al, 0; mov rax, r9; syscall; 
0x000000000001e5e0: add al, 0; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000005329f: add al, 0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005485b: add al, 0; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000052d46: add al, 0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000052646: add al, 0; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000053e0c: add al, 0; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x000000000005262c: add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000005a278: add al, 0; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000051445: add al, 0; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000004f908: add al, 0; movzx eax, byte ptr [rax]; ret; 
0x000000000004fcc3: add al, 0; pop rdx; ret; 
0x0000000000057da3: add al, 0; ret; 
0x0000000000057d97: add al, 0; test eax, eax; je 0x57da6; dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x000000000004bd33: add al, 0; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd33: add al, 0; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x00000000000191e2: add al, 0x16; sub eax, 0x30; cmp eax, 9; jbe 0x191d0; mov eax, 1; ret; 
0x00000000000188f0: add al, 0x1c; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f21d: add al, 0x24; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001bdea: add al, 0x24; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd49: add al, 0x24; add rsp, 0x28; ret; 
0x000000000005a5e9: add al, 0x24; mov eax, 3; syscall; 
0x0000000000021d47: add al, 0x24; mov rdi, r15; call rax; 
0x0000000000018303: add al, 0x24; test al, al; jne 0x182f8; mov rax, r12; pop r12; ret; 
0x00000000000225c2: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x0000000000023f80: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000221eb: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580fb: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004bec8: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000002323e: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x00000000000595d8: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000024051: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000005d618: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000005a56e: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3e8: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000001e846: add al, 0x31; ret; 
0x00000000000590e0: add al, 0x39; ret 0xe275; 
0x00000000000556b5: add al, 0x3c; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000003c1d5: add al, 0x40; movzx eax, bh; ret; 
0x0000000000027b24: add al, 0x42; shl eax, 4; cdqe; ret; 
0x000000000005a7e0: add al, 0x44; mov eax, edx; pop rbx; pop rbp; ret; 
0x0000000000030f45: add al, 0x48; add esp, 0x18; ret; 
0x000000000001a014: add al, 0x48; cmp esi, 1; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x0000000000028d12: add al, 0x48; cwde; cmp r8, rax; setb al; movzx eax, al; ret; 
0x0000000000027b28: add al, 0x48; cwde; ret; 
0x0000000000027ae9: add al, 0x48; dec ecx; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x000000000004b66a: add al, 0x48; mov dword ptr [rax + 8], edi; ret; 
0x0000000000056da1: add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x56dad; call rax; 
0x000000000005de64: add al, 0x48; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x00000000000275b7: add al, 0x48; or eax, 0xffffffff; ret; 
0x00000000000439a2: add al, 0x48; or eax, edx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000001efbc: add al, 0x48; shr eax, cl; and eax, 1; ret; 
0x000000000001a0a8: add al, 0x49; cmp ecx, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000005d44e: add al, 0x49; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000041a93: add al, 0x4c; mov eax, eax; syscall; 
0x000000000005db54: add al, 0x4c; mov eax, ecx; syscall; 
0x00000000000256a4: add al, 0x50; ret; 
0x000000000004f3ef: add al, 0x5a; ret; 
0x000000000001e5e5: add al, 0x70; ret; 
0x000000000003b024: add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000005d5c5: add al, 0x75; fisttp qword ptr [rax + 0x63]; jl 0x5d5f0; and byte ptr [rax + 3], bh; syscall; 
0x000000000004da8b: add al, 0x75; or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x0000000000037fe1: add al, 0x75; out dx, eax; ret; 
0x000000000001e933: add al, 0x75; ret 0x489; 
0x0000000000026c5a: add al, 0x77; add eax, 0xebc0ff48; out dx, al; cmp cl, 0x20; je 0x26c5d; ret; 
0x000000000003aa52: add al, 0x80; add rax, r8; jmp rax; 
0x0000000000039d03: add al, 0x80; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000025993: add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000044787: add al, 0x82; add rax, r10; jmp rax; 
0x0000000000031cb2: add al, 0x82; add rax, rdx; jmp rax; 
0x000000000005c0f6: add al, 0x82; mov r13, rcx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x00000000000198ed: add al, 0x83; pop rbx; mov ecx, dword ptr [rax]; test ecx, ecx; cmove rax, rdx; ret; 
0x00000000000194ef: add al, 0x83; pop rbx; pop rbp; pop r12; ret; 
0x00000000000194bf: add al, 0x83; pop rbx; pop rbp; ret; 
0x0000000000019587: add al, 0x83; pop rbx; ret; 
0x00000000000195f1: add al, 0x85; leave; jne 0x195e8; ret; 
0x0000000000058c4f: add al, 0x85; sal byte ptr [rbp - 0x25], 0xe9; ret; 
0x00000000000196f6: add al, 0x85; sal byte ptr [rbp - 0xb], cl; sub rax, rdi; sar rax, 2; ret; 
0x0000000000038473: add al, 0x85; sal byte ptr [rdi + rax - 0xa], cl; ret 0x7410; 
0x0000000000057b06: add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000026206: add al, 0x87; add rax, rdi; jmp rax; 
0x000000000004637b: add al, 0x89; adc bl, ch; add ecx, dword ptr [rcx - 0x7cb6fbb0]; rol byte ptr [rbx + rbp*8], 0xd9; mov dword ptr [rdi], 0xffffffff; ret; 
0x000000000003bbfb: add al, 0x89; or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000058dbb: add al, 0x89; ret 0xe281; 
0x0000000000019e1e: add al, 0x8e; cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x0000000000019e1a: add al, 0x8f; mov r8d, dword ptr [rsi + rcx*4]; cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x000000000001e6d3: add al, 0x91; add rax, rcx; jmp rax; 
0x000000000005485f: add al, 0x99; add rax, rcx; jmp rax; 
0x000000000005264a: add al, 0x9a; add rax, rdx; jmp rax; 
0x0000000000052d4a: add al, 0xb1; add rax, rcx; jmp rax; 
0x00000000000215a9: add al, 0xb2; add rax, rdx; jmp rax; 
0x000000000005d457: add al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005cca7: add al, 0xb8; fiadd word ptr [rax]; add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x000000000004d14d: add al, 0xbe; add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x0000000000039cff: add al, 0xbe; xor byte ptr [rsp + rax - 0x80], dl; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000056d2a: add al, 0xc1; call 0x1e5f035; ret; 
0x000000000004633d: add al, 0xc2; ret; 
0x0000000000023238: add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000056be0: add al, 0xca; ret; 
0x0000000000056c58: add al, 0xf0; dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000002ee3a: add al, 0xf2; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef4a: add al, 0xf2; minps xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002e3e0: add al, 0xf2; mulps xmm0, xmm2; subsd xmm0, xmm5; ret; 
0x000000000002ee80: add al, 0xf3; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef93: add al, 0xf3; minps xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001bde6: add al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd45: add al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x28; ret; 
0x000000000002e626: add al, 0xf3; mulps xmm0, xmm2; subss xmm0, xmm4; ret; 
0x00000000000587af: add al, 0xf8; ret; 
0x0000000000032382: add al, 0xf; xchg dword ptr [rip + 0x48000001], esi; lea edx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000214c8: add al, 0xf; xchg eax, esi; rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000005d720: add al, 1; add byte ptr [rax], al; syscall; 
0x0000000000038aa6: add al, 6; add bh, bh; ret 0x8941; 
0x0000000000035a55: add al, 6; add byte ptr [rbp + 0xf0375c0], al; sub cl, al; ret; 
0x0000000000017a20: add al, 6; cmp cl, r8b; je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000021a11: add al, 6; sar eax, cl; and eax, 1; inc eax; ret; 
0x000000000002153d: add al, 6; sar eax, cl; and eax, 1; ret; 
0x00000000000280d4: add al, 9; ret 0xd089; 
0x000000000002d48e: add al, bl; ret 0xcad8; 
0x0000000000032bb3: add al, bl; ret; 
0x00000000000410e8: add al, byte ptr [r8]; add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x00000000000220b7: add al, byte ptr [rax - 0x9bf0000]; fadd dword ptr [rsi]; and byte ptr [rbx + rcx + 0x48], dh; mov eax, edx; syscall; 
0x00000000000154f5: add al, byte ptr [rax]; add al, ch; ret 0xd0; 
0x00000000000446ac: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; jne 0x446b7; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000003aaef: add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000003d439: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x3d1e5; add rsp, 0x18; ret; 
0x0000000000045cd9: add al, byte ptr [rax]; add byte ptr [rax], al; call rax; 
0x000000000005b7e6: add al, byte ptr [rax]; add byte ptr [rax], al; lea rsi, [rsp + 8]; mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x000000000003c299: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x48; mov edx, 1; syscall; 
0x0000000000021e9f: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x0000000000022a11: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x000000000005db43: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r9; syscall; 
0x000000000005d3c6: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022aee: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; syscall; 
0x0000000000051045: add al, byte ptr [rax]; add byte ptr [rax], al; mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x0000000000038823: add al, byte ptr [rax]; add byte ptr [rax], al; mov rax, r12; pop r12; ret; 
0x000000000002209c: add al, byte ptr [rax]; add byte ptr [rax], al; mov rdx, rcx; syscall; 
0x0000000000056c9c: add al, byte ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x000000000004bd6a: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004c748: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x000000000004bd6a: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; ret; 
0x00000000000580b0: add al, byte ptr [rax]; add byte ptr [rax], al; xor edx, edx; mov r10d, 8; syscall; 
0x000000000004c71f: add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000003d977: add al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x00000000000551f5: add al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000000410e9: add al, byte ptr [rax]; add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x0000000000024556: add al, byte ptr [rax]; mov eax, 0x27; syscall; 
0x000000000003945e: add al, byte ptr [rax]; mov eax, r12d; pop rdx; pop rbp; pop r12; ret; 
0x0000000000023a36: add al, byte ptr [rax]; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x00000000000239db: add al, byte ptr [rax]; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x0000000000024817: add al, byte ptr [rax]; push rax; mov eax, 0x99; syscall; 
0x000000000002813b: add al, byte ptr [rax]; ret; 
0x000000000002154b: add al, byte ptr [rax]; setbe al; ret; 
0x0000000000052d3b: add al, byte ptr [rbx + 0x1d7705fe]; lea rcx, [rip + 0x432d0]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000056ee8: add al, byte ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x0000000000019682: add al, byte ptr [rcx + 0x5c]; ret; 
0x0000000000045dcd: add al, byte ptr [rcx + 0x80e1]; add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x00000000000349f4: add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000003c6d3: add al, byte ptr [rcx - 0x77]; ret 0x2945; 
0x000000000004cd28: add al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000407c6: add al, byte ptr [rcx]; add eax, 0x5b88b; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x000000000002c2b2: add al, byte ptr [rcx]; ret 0xd0f7; 
0x000000000003945d: add al, byte ptr ds:[rax]; mov eax, r12d; pop rdx; pop rbp; pop r12; ret; 
0x000000000003a01b: add al, ch; cmc; ret; 
0x0000000000023a32: add al, ch; imul dword ptr [rdx - 0x76b7fffe]; add eax, 0x783d9; pop rax; ret; 
0x000000000004fcb8: add al, ch; insb byte ptr [rdi], dx; add byte ptr [rax], al; lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x000000000005ad15: add al, ch; jne 0x5acf2; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000004504c: add al, ch; mov esp, 0x48000119; mov edi, eax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000022c32: add al, ch; movsxd rax, dword ptr [rax]; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000055783: add al, ch; out 0x2b, eax; cld; push rdi; fdivr dword ptr [rcx]; ret; 
0x000000000005d747: add al, ch; rcl dword ptr [rdx - 0x76b70001], 0xc7; call 0x17230; add rsp, 0x18; ret; 
0x0000000000042e08: add al, ch; ret 0; 
0x00000000000154f7: add al, ch; ret 0xd0; 
0x000000000003dede: add al, ch; ret 0xf3; 
0x000000000003d398: add al, ch; ret 0xfdaf; 
0x0000000000060e1f: add al, ch; ret 0xffe5; 
0x000000000002aeb2: add al, ch; ret; 
0x000000000005b937: add al, ch; sal dword ptr [rax + 0x595affff], 1; neg eax; pop rsi; ret; 
0x000000000001866e: add al, ch; sbb al, 0; add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x000000000001e5ed: add al, ch; sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000058fe3: add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d25: add al, dh; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cf2: add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf7: add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059a26: add al, dh; cmpxchg dword ptr [rdi], edx; ret; 
0x000000000005ce7b: add al, dh; or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000035f4b: add ax, 0x3fff; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x00000000000177be: add bh, al; add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000032744: add bh, bh; jg 0x32751; ret; 
0x0000000000035cb9: add bh, bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000038aa8: add bh, bh; ret 0x8941; 
0x0000000000029e8f: add bh, bh; ret; 
0x000000000001e5ba: add bh, bh; ror byte ptr [rax - 0x68], 0x5a; ret; 
0x0000000000048251: add bh, byte ptr [rbx + 0x74]; or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000029a51: add bh, dh; fmul dword ptr [rdi]; push rdi; retf 0x570f; ret 0xff2; 
0x000000000002b6a4: add bh, dh; ret 0; 
0x0000000000028289: add bh, dh; ret; 
0x00000000000378c7: add bh, dh; shl byte ptr [rcx], 1; sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000057498: add bl, al; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000003b1b3: add bl, al; movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x000000000003a8a1: add bl, al; push rax; mov eax, 0x3f; syscall; 
0x000000000003536c: add bl, bl; lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000019651: add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000003b9dc: add bl, ch; adc eax, 0x24440148; and byte ptr [rax + 0x29], cl; ret; 
0x0000000000038471: add bl, ch; add al, 0x85; sal byte ptr [rdi + rax - 0xa], cl; ret 0x7410; 
0x000000000002e3de: add bl, ch; add al, 0xf2; mulps xmm0, xmm2; subsd xmm0, xmm5; ret; 
0x000000000002e624: add bl, ch; add al, 0xf3; mulps xmm0, xmm2; subss xmm0, xmm4; ret; 
0x0000000000023967: add bl, ch; add ecx, dword ptr [rax - 0x77]; ret; 
0x000000000002722b: add bl, ch; add ecx, dword ptr [rax - 1]; ret 0xff48; 
0x000000000005ee1e: add bl, ch; add ecx, dword ptr [rax - 1]; ret; 
0x0000000000034151: add bl, ch; fcomp st(3); insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x28; ret; 
0x000000000004824c: add bl, ch; fld dword ptr [rax + 0x747b027b]; or ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000005d7ef: add bl, ch; mov r12, rsp; mov eax, 0x4f; mov rdi, r12; syscall; 
0x00000000000221d8: add bl, ch; or cl, byte ptr [rax + 0x69]; ret; 
0x000000000004825d: add bl, ch; or dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000044830: add bl, ch; or dword ptr [rcx + 0x63], ecx; js 0x4484b; mov eax, 0x51; syscall; 
0x0000000000033203: add bl, ch; or eax, dword ptr [rbp - 0xcf38640]; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000033037: add bl, ch; or eax, dword ptr [rbp - 0xdf38637]; subps xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000022732: add bl, ch; rcr byte ptr [rbx + 0x5d], cl; pop r12; ret; 
0x0000000000029f4b: add bl, ch; ret 0x7c83; 
0x00000000000156db: add bl, ch; ret 0x9066; 
0x0000000000019273: add bl, ch; sar dword ptr [rax - 1], 1; ret; 
0x000000000002af68: add bl, dh; addps xmm0, xmmword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000002acee: add bl, dh; addps xmm0, xmmword ptr [rip + 0x6ad5d]; ret; 
0x0000000000030f3f: add bl, dh; addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002acb0: add bl, dh; addps xmm1, xmmword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000002b289: add bl, dh; addps xmm2, xmmword ptr [rip + 0x6a5e6]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002acb8: add bl, dh; divps xmm0, xmm1; ret; 
0x000000000002b291: add bl, dh; divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002ace6: add bl, dh; movups xmm0, xmmword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000002f62d: add bl, dh; movups xmm2, xmmword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001c03f: add bl, dh; movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000029556: add bl, dh; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295dd: add bl, dh; movups xmmword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000003042c: add bl, dh; mulps xmm0, xmmword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002d177: add bl, dh; mulps xmm0, xmmword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x0000000000050fb6: add bl, dh; stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x0000000000056cda: add bl, dh; stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000001e739: add bl, dh; stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000022673: add bl, dh; stosd dword ptr [rdi], eax; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x0000000000051119: add bl, dh; stosd dword ptr [rdi], eax; mov rsi, rsp; mov eax, 6; mov rdi, r12; syscall; 
0x0000000000044d0f: add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x000000000002d40a: add bl, dh; subps xmm0, xmm1; ret; 
0x0000000000030434: add bl, dh; subps xmm0, xmmword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000003c793: add bpl, bl; sbb edi, edi; ret 0x8948; 
0x000000000002401d: add byte ptr [eax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; add eax, 0x5affff32; ret; 
0x00000000000465ac: add byte ptr [r10 + 0x5b], r11b; pop rbp; ret; 
0x0000000000036450: add byte ptr [r15], r9b; push rdi; ret 0xff3; 
0x000000000003ba8c: add byte ptr [r8 + rax*8 - 0x7cb7e38c], r8b; ret; 
0x000000000005d744: add byte ptr [r8], al; add al, ch; rcl dword ptr [rdx - 0x76b70001], 0xc7; call 0x17230; add rsp, 0x18; ret; 
0x000000000003b46b: add byte ptr [r8], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000005bc69: add byte ptr [r8], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rdx; pop rbx; pop r12; ret; 
0x000000000001913e: add byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x000000000005d7f6: add byte ptr [r8], r8b; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x00000000000571b5: add byte ptr [r9], r15b; ret 0x1574; 
0x00000000000446c9: add byte ptr [r9], r8b; je 0x44708; mov eax, 0x68; syscall; 
0x000000000004cb08: add byte ptr [rax + 0x106], bh; mov rsi, rbp; syscall; 
0x00000000000568c2: add byte ptr [rax + 0x10], bh; syscall; 
0x0000000000023e33: add byte ptr [rax + 0x119], bh; syscall; 
0x0000000000024670: add byte ptr [rax + 0x121], bh; syscall; 
0x000000000002405e: add byte ptr [rax + 0x144], bh; syscall; 
0x000000000005610d: add byte ptr [rax + 0x1b806], cl; add byte ptr [rax], al; ret; 
0x000000000004c9bf: add byte ptr [rax + 0x1d740000], ah; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x0000000000024557: add byte ptr [rax + 0x27], bh; syscall; 
0x00000000000557aa: add byte ptr [rax + 0x29], cl; fsubr st(3); adc al, 0x29; ret; 
0x000000000004a734: add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004b124: add byte ptr [rax + 0x29], cl; ror byte ptr [rax - 0x77], 1; ret 0x14c; 
0x0000000000019a70: add byte ptr [rax + 0x29], cl; test dword ptr [rax - 0x73], 0x39481104; ret; 
0x000000000001710f: add byte ptr [rax + 0x30], bh; mov word ptr [r8 + 0xe], ax; ret; 
0x00000000000426f8: add byte ptr [rax + 0x31], dh; ror byte ptr [rax + 0x63], 0x94; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x0000000000032840: add byte ptr [rax + 0x31], dl; call qword ptr [rax - 0x25]; 
0x0000000000043d89: add byte ptr [rax + 0x39], bh; syscall; 
0x0000000000057485: add byte ptr [rax + 0x39], cl; int1; jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000042704: add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x00000000000427d2: add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x000000000005964f: add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000001853a: add byte ptr [rax + 0x39], cl; ret; 
0x00000000000275b2: add byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 4], 1; or rax, 0xffffffffffffffff; ret; 
0x000000000002f92e: add byte ptr [rax + 0x44110ff3], al; and al, 0xf4; ret; 
0x000000000002f85a: add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; mov eax, r8d; ret; 
0x000000000003c29c: add byte ptr [rax + 0x48], bh; mov edx, 1; syscall; 
0x000000000004caed: add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x000000000004d2f4: add byte ptr [rax + 0x48], bh; mov rsi, r13; syscall; 
0x000000000004e748: add byte ptr [rax + 0x48], bh; mov rsi, r14; syscall; 
0x00000000000439d4: add byte ptr [rax + 0x48], dl; lea esi, [rip + 0x55a49]; call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000004ca8a: add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x17230; pop rdx; ret; 
0x0000000000027f2a: add byte ptr [rax + 0x5b], bl; pop rbp; pop r12; pop r13; ret; 
0x0000000000023011: add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000051446: add byte ptr [rax + 0x63], cl; adc al, 0xb7; add rdx, rdi; jmp rdx; 
0x00000000000532a0: add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000031caf: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000005eb4f: add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rdi; jmp rax; 
0x000000000005485c: add byte ptr [rax + 0x63], cl; add al, 0x99; add rax, rcx; jmp rax; 
0x0000000000052d47: add byte ptr [rax + 0x63], cl; add al, 0xb1; add rax, rcx; jmp rax; 
0x00000000000215a6: add byte ptr [rax + 0x63], cl; add al, 0xb2; add rax, rdx; jmp rax; 
0x000000000005ddcd: add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; 
0x000000000005ddcd: add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023cca: add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x0000000000041a7d: add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa4: add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004b1b3: add byte ptr [rax + 0x63], cl; jg 0x4b1e8; syscall; 
0x000000000005ce85: add byte ptr [rax + 0x63], cl; jg 0x5ceba; mov esi, 0x20; syscall; 
0x000000000005ce85: add byte ptr [rax + 0x63], cl; jg 0x5ceba; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000005db3d: add byte ptr [rax + 0x63], cl; jge 0x5db42; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000005db65: add byte ptr [rax + 0x63], cl; jge 0x5db6a; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x00000000000446ae: add byte ptr [rax + 0x63], cl; jne 0x446b7; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005a279: add byte ptr [rax + 0x63], cl; jp 0x5a2ae; mov eax, 0xc8; syscall; 
0x000000000004becd: add byte ptr [rax + 0x63], cl; js 0x4bf02; mov eax, 0xc8; syscall; 
0x0000000000049745: add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x0000000000038a7f: add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x0000000000028930: add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x0000000000029e7e: add byte ptr [rax + 0x63], cl; ret; 
0x000000000005d38b: add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x000000000004d152: add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000004b1a3: add byte ptr [rax + 0x63], cl; sti; call 0x17230; pop rbx; ret; 
0x000000000003b3a4: add byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x000000000004d137: add byte ptr [rax + 0x63], cl; sti; mov esi, 3; mov rax, r8; syscall; 
0x00000000000446ea: add byte ptr [rax + 0x66], bh; syscall; 
0x00000000000532fb: add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x000000000002c33a: add byte ptr [rax + 0x7cdbd009], al; and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000058fcb: add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x0000000000024368: add byte ptr [rax + 0x9d], bh; syscall; 
0x000000000005a4d6: add byte ptr [rax + 0x9e], bh; syscall; 
0x000000000005a4d6: add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x000000000003aeda: add byte ptr [rax + 0xa], bh; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000003b006: add byte ptr [rax + 0xb], bh; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000005893a: add byte ptr [rax + 0xb], bh; pop rdx; pop rbx; pop rbp; ret; 
0x000000000005a211: add byte ptr [rax + 0xba], bh; syscall; 
0x000000000005ce80: add byte ptr [rax + 0xc8], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x00000000000574a2: add byte ptr [rax + 0xc8], bh; syscall; 
0x00000000000574a2: add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x000000000002836a: add byte ptr [rax + 0xc], bh; mov rdi, rbx; syscall; 
0x000000000004c03d: add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000021ea2: add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005cba5: add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000004ca25: add byte ptr [rax + 0xe740000], ah; mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x000000000004c741: add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; 
0x000000000004c741: add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000005cd6e: add byte ptr [rax + 0xe], bh; mov rdi, rdx; syscall; 
0x00000000000599d8: add byte ptr [rax + 0xe], bh; syscall; 
0x000000000004bd61: add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd61: add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000005d30f: add byte ptr [rax + 0xf], cl; clc; call 0x17230; pop rdi; ret; 
0x000000000001e7b1: add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x000000000006032b: add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret; 
0x0000000000039477: add byte ptr [rax + 1], bh; pop rdx; ret; 
0x00000000000406d4: add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000028359: add byte ptr [rax + 1], cl; ret; 
0x0000000000051043: add byte ptr [rax + 2], bh; mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x000000000005a57b: add byte ptr [rax + 2], bh; syscall; 
0x000000000002208f: add byte ptr [rax + 7], bh; mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000003ba8d: add byte ptr [rax + rax*8 - 0x7cb7e38c], al; ret; 
0x0000000000050ae6: add byte ptr [rax + rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x00000000000177c0: add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000022c0b: add byte ptr [rax + rax], cl; add byte ptr [rdi], cl; xchg eax, ebp; sal bh, 0xd8; pop rdx; ret; 
0x000000000003bf33: add byte ptr [rax + rax], dl; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rdx; ret; 
0x000000000004dadd: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000043d9c: add byte ptr [rax + rcx*2 - 0x75], ah; adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000001efbb: add byte ptr [rax + rcx*2], al; shr eax, cl; and eax, 1; ret; 
0x0000000000025cdc: add byte ptr [rax + rsi + 0x3d], dh; ret 0; 
0x000000000001773e: add byte ptr [rax - 0x26f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x0000000000042d90: add byte ptr [rax - 0x39], cl; add eax, 0x5912c; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000042245: add byte ptr [rax - 0x39], cl; add eax, 0x59c5f; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x00000000000239dc: add byte ptr [rax - 0x39], cl; add eax, 0x78430; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003a9a4: add byte ptr [rax - 0x39], cl; add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000046321: add byte ptr [rax - 0x39], cl; or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004f1cb: add byte ptr [rax - 0x39], cl; or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000016d8d: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000002f8f2: add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000057d00: add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x00000000000569e6: add byte ptr [rax - 0x47bedc8c], al; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000441b1: add byte ptr [rax - 0x48], dl; cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004c4a4: add byte ptr [rax - 0x48], dl; jg 0x4c4a9; add byte ptr [rax], al; syscall; 
0x000000000005de2e: add byte ptr [rax - 0x48], dl; jo 0x5de33; add byte ptr [rax], al; syscall; 
0x000000000002e0e4: add byte ptr [rax - 0x547bf001], al; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000002e017: add byte ptr [rax - 0x5d7bf001], al; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x0000000000052626: add byte ptr [rax - 0x73], cl; adc eax, 0x438e2; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032a4b: add byte ptr [rax - 0x73], cl; adc eax, 0x633b9; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032388: add byte ptr [rax - 0x73], cl; adc eax, 0x63974; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031ca8: add byte ptr [rax - 0x73], cl; adc eax, 0x64040; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000026e35: add byte ptr [rax - 0x73], cl; adc eax, 0x6ebb7; mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x00000000000266c5: add byte ptr [rax - 0x73], cl; adc eax, 0x6ff30; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x00000000000194ec: add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019584: add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x000000000004fcbd: add byte ptr [rax - 0x73], cl; add eax, 0x4c223; pop rdx; ret; 
0x00000000000266cc: add byte ptr [rax - 0x73], cl; add eax, 0x6ff36; cmove rax, rdx; ret; 
0x0000000000022450: add byte ptr [rax - 0x73], cl; add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000005eb48: add byte ptr [rax - 0x73], cl; cmp eax, 0x37898; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000053800: add byte ptr [rax - 0x73], cl; cmp eax, 0x428ac; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000057e13: add byte ptr [rax - 0x73], cl; cmp eax, 0x441d5; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc4: add byte ptr [rax - 0x73], cl; cmp eax, 0x44224; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005143f: add byte ptr [rax - 0x73], cl; cmp eax, 0x44a81; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000050835: add byte ptr [rax - 0x73], cl; cmp eax, 0x48b6f; mov rax, r9; syscall; 
0x000000000004f89f: add byte ptr [rax - 0x73], cl; cmp eax, 0x49a05; mov rax, r9; syscall; 
0x00000000000261f9: add byte ptr [rax - 0x73], cl; cmp eax, 0x6f7a7; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023a2b: add byte ptr [rax - 0x73], cl; cmp eax, 0x6febd; call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x0000000000021ea7: add byte ptr [rax - 0x73], cl; cmp eax, 0x7a141; syscall; 
0x000000000001b291: add byte ptr [rax - 0x73], cl; cmp eax, 0x80d4f; mov rax, r8; syscall; 
0x0000000000044ce5: add byte ptr [rax - 0x73], cl; ja 0x44cf2; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005b7e9: add byte ptr [rax - 0x73], cl; je 0x5b812; or byte ptr [rax + 0xe5], bh; movsxd rdi, r9d; syscall; 
0x000000000001b21d: add byte ptr [rax - 0x73], cl; jnp 0x1b24a; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000054855: add byte ptr [rax - 0x73], cl; or eax, 0x418bf; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000053299: add byte ptr [rax - 0x73], cl; or eax, 0x42d8f; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000004697c: add byte ptr [rax - 0x73], cl; or eax, 0x4f528; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000025986: add byte ptr [rax - 0x73], cl; or eax, 0x6ff76; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001e6c6: add byte ptr [rax - 0x73], cl; or eax, 0x771ca; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000002296f: add byte ptr [rax - 0x73], cl; push rsp; and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000005e7a5: add byte ptr [rax - 0x73], cl; push rsp; ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x00000000000527e0: add byte ptr [rax - 0x73], cl; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x000000000004bd47: add byte ptr [rax - 0x73], cl; xor eax, 0x49af1; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd47: add byte ptr [rax - 0x73], cl; xor eax, 0x49af1; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004bd2d: add byte ptr [rax - 0x73], cl; xor eax, 0x49b13; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2d: add byte ptr [rax - 0x73], cl; xor eax, 0x49b13; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000056ffc: add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x00000000000266ef: add byte ptr [rax - 0x75], cl; adc al, 0xd6; test rdx, rdx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x00000000000587a3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x00000000000493b5: add byte ptr [rax - 0x75], cl; add dword ptr [rcx + rcx + 0x31], esi; rol byte ptr [rbx + 0xf001078], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000023a8d: add byte ptr [rax - 0x75], cl; add eax, 0x78393; pop rdx; ret; 
0x0000000000056bd2: add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x00000000000227cc: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; ret 0xe808; 
0x0000000000057a9d: add byte ptr [rax - 0x75], cl; jl 0x57ac6; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005800f: add byte ptr [rax - 0x75], cl; jl 0x58038; or byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004489d: add byte ptr [rax - 0x75], cl; mov bl, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ebx, 0x88; call rax; 
0x00000000000448a4: add byte ptr [rax - 0x75], cl; mov ebx, 0x88; call rax; 
0x00000000000614dd: add byte ptr [rax - 0x75], cl; mov esp, 0x8824; add al, ch; ret; 
0x00000000000580e6: add byte ptr [rax - 0x75], cl; push rax; js 0x58134; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000003ca38: add byte ptr [rax - 0x75], cl; sub byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0xff; ret; 
0x00000000000587a6: add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x00000000000465a9: add byte ptr [rax - 0x77], cl; add byte ptr [r10 + 0x5b], r11b; pop rbp; ret; 
0x0000000000023a37: add byte ptr [rax - 0x77], cl; add eax, 0x783d9; pop rax; ret; 
0x000000000003911d: add byte ptr [rax - 0x77], cl; and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d61d: add byte ptr [rax - 0x77], cl; and al, 0x28; mov eax, 0x51; syscall; 
0x00000000000443b4: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8cd: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d69c: add byte ptr [rax - 0x77], cl; and al, 0x38; xor eax, eax; mov eax, 0x5d; syscall; 
0x00000000000392f3: add byte ptr [rax - 0x77], cl; and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x000000000005d3ed: add byte ptr [rax - 0x77], cl; and al, 8; mov eax, 0x6c; syscall; 
0x000000000005d9bc: add byte ptr [rax - 0x77], cl; and al, 8; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000001760d: add byte ptr [rax - 0x77], cl; call 0x5c42d370; ret; 
0x000000000001770d: add byte ptr [rax - 0x77], cl; call 0x5c42d470; ret; 
0x00000000000384ae: add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; fdiv st(6); ret 0x7404; 
0x000000000003b00b: add byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000003fd18: add byte ptr [rax - 0x77], cl; fsubp st(0); ret; 
0x00000000000221d0: add byte ptr [rax - 0x77], cl; fucomip st(0); or eax, dword ptr [rdx + 3]; add bl, ch; or cl, byte ptr [rax + 0x69]; ret; 
0x000000000001e740: add byte ptr [rax - 0x77], cl; iretd; syscall; 
0x000000000005f169: add byte ptr [rax - 0x77], cl; jo 0x5f1b7; add esp, 0x110; pop rbx; ret; 
0x000000000004f373: add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x00000000000226a6: add byte ptr [rax - 0x77], cl; out 0xbf, al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000004cb0d: add byte ptr [rax - 0x77], cl; out dx, al; syscall; 
0x0000000000059f35: add byte ptr [rax - 0x77], cl; out dx, eax; call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x000000000005cb5b: add byte ptr [rax - 0x77], cl; out dx, eax; call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004dd49: add byte ptr [rax - 0x77], cl; out dx, eax; call qword ptr [rbp + 0x50]; 
0x000000000004db68: add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005711b: add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005726b: add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; syscall; 
0x000000000004ddfb: add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r9; syscall; 
0x000000000005d6e1: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c90d: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004b2d6: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x000000000003914e: add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000003d4ae: add byte ptr [rax - 0x77], cl; pop rbp; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000019ef5: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000019bfd: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000052076: add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000039f45: add byte ptr [rax - 0x77], cl; ret 0x3949; 
0x0000000000016267: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x00000000000430c3: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000478e8: add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x00000000000490c4: add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000001dbdc: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000029edc: add byte ptr [rax - 0x77], cl; ret 0xd285; 
0x000000000005867c: add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x0000000000018be5: add byte ptr [rax - 0x77], cl; ret; 
0x000000000005d3aa: add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000005f162: add byte ptr [rax - 0x77], cl; sbb eax, 0x3ce46; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005a573: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000024056: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x000000000005cd73: add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x000000000003b88a: add byte ptr [rax - 0x7b], cl; push qword ptr [rax + rcx + 0x31]; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x000000000004f325: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x0000000000035a07: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], 0xf; sub cl, al; ret; 
0x00000000000274ef: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 7], 0x48; lea eax, [rip + 0x6f13a]; ret; 
0x0000000000027564: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x32], 0x5a; pop rbx; pop rbp; ret; 
0x000000000004f367: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000035ae5: add byte ptr [rax - 0x7b], cl; sar byte ptr [rcx + 7], cl; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000043aa5: add byte ptr [rax - 0x7d], cl; call 0xffffffffc15a49b1; movd dword ptr [rax], xmm0; ret; 
0x00000000000387f4: add byte ptr [rax - 0x7d], cl; call qword ptr [rdi]; 
0x00000000000213d0: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000003e487: add byte ptr [rax - 0x7d], cl; js 0x3e4e4; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000039015: add byte ptr [rax - 0x7d], cl; ret 0x4502; 
0x0000000000017b16: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000001ed73: add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000017fef: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000019af3: add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x00000000000191cf: add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x00000000000181af: add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000186ff: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x80; cmp byte ptr [rax], al; jne 0x18700; sub rax, rdi; ret; 
0x000000000003aae3: add byte ptr [rax - 0x7d], cl; rol dword ptr [rdx], 0xeb; or byte ptr [rbp - 0x7b7bf00a], al; add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000006103a: add byte ptr [rax - 0x7f], cl; call qword ptr [rax + 1]; 
0x00000000000582b6: add byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x0000000000028363: add byte ptr [rax - 0x7f], cl; ret; 
0x000000000002875b: add byte ptr [rax - 0x80], al; jmp qword ptr [rbx + 0x40]; 
0x000000000002b9b5: add byte ptr [rax - 0xcfa8981], al; addps xmm0, xmm1; ret; 
0x000000000003f7da: add byte ptr [rax - 1], cl; ret 0x1e8; 
0x000000000003aaf1: add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000004623b: add byte ptr [rax - 1], cl; ret 0xeeeb; 
0x0000000000026ba6: add byte ptr [rax - 1], cl; ret; 
0x000000000002815c: add byte ptr [rax - 1], cl; ror byte ptr [rax + 0x39], 0xd0; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x0000000000028350: add byte ptr [rax - 9], cl; fild dword ptr [rcx + 0xfffe3]; add byte ptr [rax + 1], cl; ret; 
0x0000000000037884: add byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], 1; sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000001e7ae: add byte ptr [rax], 0; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x00000000000187ab: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000000587a7: add byte ptr [rax], 0; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x000000000002ea5e: add byte ptr [rax], 0; add byte ptr [rdi], cl; xchg eax, edi; ret 0xc1d9; 
0x0000000000045dd0: add byte ptr [rax], 0; add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x0000000000035370: add byte ptr [rax], 0; add dh, bl; ret; 
0x000000000005104b: add byte ptr [rax], 0; mov rdi, r12; mov edx, 0x180; syscall; 
0x00000000000447f1: add byte ptr [rax], 0; movsxd rsi, esi; syscall; 
0x00000000000220b8: add byte ptr [rax], 0; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000028367: add byte ptr [rax], ah; add byte ptr [rax], al; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000001efba: add byte ptr [rax], al; add al, 0x48; shr eax, cl; and eax, 1; ret; 
0x000000000005ad13: add byte ptr [rax], al; add al, ch; jne 0x5acf2; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000005d745: add byte ptr [rax], al; add al, ch; rcl dword ptr [rdx - 0x76b70001], 0xc7; call 0x17230; add rsp, 0x18; ret; 
0x00000000000614e3: add byte ptr [rax], al; add al, ch; ret; 
0x000000000001e5eb: add byte ptr [rax], al; add al, ch; sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000058fe1: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d23: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cf0: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf5: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059a24: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi], edx; ret; 
0x000000000003fb7f: add byte ptr [rax], al; add bh, bh; ret; 
0x000000000002b6a2: add byte ptr [rax], al; add bh, dh; ret 0; 
0x0000000000057496: add byte ptr [rax], al; add bl, al; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000003a89f: add byte ptr [rax], al; add bl, al; push rax; mov eax, 0x3f; syscall; 
0x000000000003b9da: add byte ptr [rax], al; add bl, ch; adc eax, 0x24440148; and byte ptr [rax + 0x29], cl; ret; 
0x000000000003846f: add byte ptr [rax], al; add bl, ch; add al, 0x85; sal byte ptr [rdi + rax - 0xa], cl; ret 0x7410; 
0x0000000000023965: add byte ptr [rax], al; add bl, ch; add ecx, dword ptr [rax - 0x77]; ret; 
0x0000000000027229: add byte ptr [rax], al; add bl, ch; add ecx, dword ptr [rax - 1]; ret 0xff48; 
0x000000000004824a: add byte ptr [rax], al; add bl, ch; fld dword ptr [rax + 0x747b027b]; or ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000005d7ed: add byte ptr [rax], al; add bl, ch; mov r12, rsp; mov eax, 0x4f; mov rdi, r12; syscall; 
0x000000000004825b: add byte ptr [rax], al; add bl, ch; or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000004482e: add byte ptr [rax], al; add bl, ch; or dword ptr [rcx + 0x63], ecx; js 0x4484b; mov eax, 0x51; syscall; 
0x0000000000019271: add byte ptr [rax], al; add bl, ch; sar dword ptr [rax - 1], 1; ret; 
0x0000000000056cd8: add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000001e737: add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000044d0d: add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x0000000000023e31: add byte ptr [rax], al; add byte ptr [rax + 0x119], bh; syscall; 
0x000000000002466e: add byte ptr [rax], al; add byte ptr [rax + 0x121], bh; syscall; 
0x000000000004a732: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000004b122: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ror byte ptr [rax - 0x77], 1; ret 0x14c; 
0x0000000000019a6e: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; test dword ptr [rax - 0x73], 0x39481104; ret; 
0x0000000000042702: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x00000000000427d0: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x00000000000275b0: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 4], 1; or rax, 0xffffffffffffffff; ret; 
0x000000000002f92c: add byte ptr [rax], al; add byte ptr [rax + 0x44110ff3], al; and al, 0xf4; ret; 
0x000000000002f858: add byte ptr [rax], al; add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; mov eax, r8d; ret; 
0x000000000003c29a: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov edx, 1; syscall; 
0x000000000004caeb: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x000000000004d2f2: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r13; syscall; 
0x000000000004e746: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r14; syscall; 
0x000000000004ca88: add byte ptr [rax], al; add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x17230; pop rdx; ret; 
0x000000000003a9a9: add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000005ddcb: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; 
0x000000000005ddcb: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023cc8: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x0000000000041a7b: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa2: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004b1b1: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x4b1e8; syscall; 
0x000000000005ce83: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x5ceba; mov esi, 0x20; syscall; 
0x000000000004becb: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; js 0x4bf02; mov eax, 0xc8; syscall; 
0x0000000000049743: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x000000000002892e: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x0000000000048b16: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000004d150: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000004d135: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; sti; mov esi, 3; mov rax, r8; syscall; 
0x00000000000532f9: add byte ptr [rax], al; add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x0000000000058fc9: add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000005a20f: add byte ptr [rax], al; add byte ptr [rax + 0xba], bh; syscall; 
0x00000000000574a0: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; 
0x00000000000574a0: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x000000000004c03b: add byte ptr [rax], al; add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000021ea0: add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005cba3: add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000004c73f: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; 
0x000000000004c73f: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000005cd6c: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov rdi, rdx; syscall; 
0x00000000000599d6: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; 
0x000000000004bd5f: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd5f: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000005d30d: add byte ptr [rax], al; add byte ptr [rax + 0xf], cl; clc; call 0x17230; pop rdi; ret; 
0x000000000001e7af: add byte ptr [rax], al; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x0000000000055f5f: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000005a579: add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x000000000002208d: add byte ptr [rax], al; add byte ptr [rax + 7], bh; mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x0000000000043d9a: add byte ptr [rax], al; add byte ptr [rax + rcx*2 - 0x75], ah; adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000001efb9: add byte ptr [rax], al; add byte ptr [rax + rcx*2], al; shr eax, cl; and eax, 1; ret; 
0x0000000000025cda: add byte ptr [rax], al; add byte ptr [rax + rsi + 0x3d], dh; ret 0; 
0x000000000001773c: add byte ptr [rax], al; add byte ptr [rax - 0x26f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x0000000000016d8b: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000002f8f0: add byte ptr [rax], al; add byte ptr [rax - 0x3fa1f00d], al; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000057cfe: add byte ptr [rax], al; add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x00000000000441af: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004c4a2: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; jg 0x4c4a9; add byte ptr [rax], al; syscall; 
0x000000000005de2c: add byte ptr [rax], al; add byte ptr [rax - 0x48], dl; jo 0x5de33; add byte ptr [rax], al; syscall; 
0x0000000000057e11: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x441d5; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x44224; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000050833: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x48b6f; mov rax, r9; syscall; 
0x000000000004f89d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x49a05; mov rax, r9; syscall; 
0x0000000000021ea5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7a141; syscall; 
0x000000000001b28f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x80d4f; mov rax, r8; syscall; 
0x000000000005b7e7: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; je 0x5b812; or byte ptr [rax + 0xe5], bh; movsxd rdi, r9d; syscall; 
0x000000000004bd45: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x49af1; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x49b13; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000056ffa: add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x00000000000587a1: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000056bd0: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x00000000000448a2: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ebx, 0x88; call rax; 
0x000000000003ca36: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sub byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0xff; ret; 
0x000000000003911b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d61b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; mov eax, 0x51; syscall; 
0x00000000000443b2: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8cb: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d69a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x38; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000005d3eb: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; mov eax, 0x6c; syscall; 
0x000000000001760b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c42d370; ret; 
0x000000000001770b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c42d470; ret; 
0x000000000003b009: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000003fd16: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fsubp st(0); ret; 
0x000000000001e73e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; iretd; syscall; 
0x000000000004f371: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x00000000000226a4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out 0xbf, al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005b8af: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, al; syscall; 
0x000000000004dd47: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; call qword ptr [rbp + 0x50]; 
0x000000000004db66: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x0000000000057119: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057269: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; syscall; 
0x000000000004ddf9: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r9; syscall; 
0x000000000005d6df: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c90b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004cb61: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x000000000003914c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x0000000000019ef3: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000019bfb: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000046626: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000478e6: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000005cc9a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005d3a8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000005a571: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000024054: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x000000000005cd71: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x000000000004f323: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x000000000004f365: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000003e485: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; js 0x3e4e4; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000017fed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x00000000000191cd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x0000000000060ad3: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000582b4: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x000000000003f7d8: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1e8; 
0x0000000000046239: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0xeeeb; 
0x0000000000047cc5: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x000000000002834e: add byte ptr [rax], al; add byte ptr [rax - 9], cl; fild dword ptr [rcx + 0xfffe3]; add byte ptr [rax + 1], cl; ret; 
0x000000000001efb8: add byte ptr [rax], al; add byte ptr [rax], al; add al, 0x48; shr eax, cl; and eax, 1; ret; 
0x000000000003b9d8: add byte ptr [rax], al; add byte ptr [rax], al; add bl, ch; adc eax, 0x24440148; and byte ptr [rax + 0x29], cl; ret; 
0x000000000001efb7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + rcx*2], al; shr eax, cl; and eax, 1; ret; 
0x000000000001773a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x26f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000194fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000017feb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x00000000000191cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x0000000000057d3d: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001962b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7fb8d], cl; ret; 
0x000000000001913f: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x00000000000225c4: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x000000000001777c: add byte ptr [rax], al; add byte ptr [rax], al; call 0x225bf; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000004f19b: add byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rbx + 0x50]; 
0x00000000000343c7: add byte ptr [rax], al; add byte ptr [rax], al; cmove eax, edx; ret; 
0x000000000005d30c: add byte ptr [rax], al; add byte ptr [rax], al; cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x000000000003e484: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x3e496; add rax, 0xa0; ret; 
0x0000000000058fc8: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x82; pop rbx; ret; 
0x0000000000023f82: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000591be: add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000005bbf2: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [r12 + 0x30], rax; mov rax, r12; pop r12; ret; 
0x00000000000221ed: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580fd: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004f193: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000004daff: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004daf7: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004db07: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004b64a: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x000000000004f338: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000000587a0: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x00000000000611b8: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x0000000000019140: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000022688: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004beca: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000003a9a8: add byte ptr [rax], al; add byte ptr [rax], al; pop rax; pop rbx; pop rbp; ret; 
0x00000000000606b9: add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x000000000004f1d0: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004b510: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000023240: add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x00000000000441ae: add byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x000000000001e736: add byte ptr [rax], al; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x00000000000239f1: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000059a6f: add byte ptr [rax], al; add byte ptr [rax], al; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000043da2: add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000056fd6: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x00000000000187ac: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000018ac0: add byte ptr [rax], al; add byte ptr [rbp + 0x2c], dh; add rsp, 0x38; ret; 
0x0000000000050279: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; sal byte ptr [rcx], cl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000003b464: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000004474d: add byte ptr [rax], al; add byte ptr [rbp + 0x39], al; push 0x49207514; movsxd rdi, ebp; mov eax, 0x20; syscall; 
0x000000000004c28e: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000005994b: add byte ptr [rax], al; add byte ptr [rbp + 0x480e74ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000002f1a9: add byte ptr [rax], al; add byte ptr [rbp + 9], dh; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000005b813: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; fisubr dword ptr [rcx - 4]; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x0000000000036081: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; insb byte ptr [rdi], dx; sar esi, 0xff; add rsp, 0x28; ret; 
0x000000000005dd30: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; mov ebp, 0x48fffc44; add esp, 0x18; ret; 
0x0000000000035630: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; mov ebp, 0x48fffecb; add esp, 0x18; ret; 
0x000000000004b632: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; mov ebx, 0x48fffd6b; add esp, 0x18; ret; 
0x0000000000041b2f: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; mov esi, 0x48fffe06; add esp, 0x28; ret; 
0x000000000005df4b: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; movabs byte ptr [0xc328c48348fffc42], al; push rax; mov eax, 0x58; syscall; 
0x000000000005d46a: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; or dword ptr [rbp - 4], 0xffffffff; xor eax, eax; add rsp, 0x18; ret; 
0x000000000005b67f: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; outsb dx, byte ptr [rsi]; imul edi, esp, -1; add rsp, 0x18; ret; 
0x000000000005b7b7: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; push -4; dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x0000000000021283: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; push 0xf; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000045a2b: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; ret 0xfdc7; 
0x000000000004d4c0: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; sub eax, 0x48fffd4d; add esp, 0x10; pop rbx; ret; 
0x000000000004f568: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; test dword ptr [rdi*8 - 0x3b7eb701], ebp; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000050d68: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; test dword ptr [rdi*8 - 0x3b7eb701], edx; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000004f744: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; test eax, 0x48fffd2a; add esp, 0xd8; ret; 
0x000000000004f294: add byte ptr [rax], al; add byte ptr [rbp - 0x17f88740], al; mov edx, 0x89ffffe0; ret; 
0x0000000000048c1f: add byte ptr [rax], al; add byte ptr [rbp - 0x17feff84], cl; cmc; ret; 
0x0000000000057d32: add byte ptr [rax], al; add byte ptr [rbp - 0x38f58640], al; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x0000000000021671: add byte ptr [rax], al; add byte ptr [rbp - 0x3f6af040], al; movzx eax, al; add rsp, 0x18; ret; 
0x00000000000358d6: add byte ptr [rax], al; add byte ptr [rbp - 0x77], al; ret; 
0x0000000000048b0c: add byte ptr [rax], al; add byte ptr [rbp - 0x7b7600a8], cl; and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000004cfb8: add byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x49], 0x8b; or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000001a02d: add byte ptr [rax], al; add byte ptr [rbx + 0x1489b114], cl; mov al, 0x48; sub esi, 1; jae 0x1a030; ret; 
0x000000000004c37d: add byte ptr [rax], al; add byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x00000000000595c8: add byte ptr [rax], al; add byte ptr [rbx + 0x47701fe], al; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000056f32: add byte ptr [rax], al; add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f5d: add byte ptr [rax], al; add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x00000000000239c1: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000043e2f: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004cc45: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000004c1b3: add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x000000000003f33f: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x14], cl; and al, 0xff; ret; 
0x0000000000050b63: add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000057afd: add byte ptr [rax], al; add byte ptr [rbx - 0x72b3fbbd], cl; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000001962d: add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7fb8d], cl; ret; 
0x0000000000044d58: add byte ptr [rax], al; add byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000019e83: add byte ptr [rax], al; add byte ptr [rcx + 0x29], cl; ror dword ptr [rcx - 0x73], 0xc; cmp byte ptr [rax + 1], cl; dec byte ptr [rax + 0x39]; ret 0x1b74; 
0x00000000000453d7: add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x7174; 
0x000000000005a271: add byte ptr [rax], al; add byte ptr [rcx + 0x41e0e05], cl; add byte ptr [rax + 0x63], cl; jp 0x5a2ae; mov eax, 0xc8; syscall; 
0x00000000000587a8: add byte ptr [rax], al; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x000000000005d448: add byte ptr [rax], al; add byte ptr [rcx + 0x49042444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000044782: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x000000000005b7f1: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; stc; syscall; 
0x000000000003b382: add byte ptr [rax], al; add byte ptr [rcx + 0x80249c], cl; add byte ptr [rax], al; syscall; 
0x0000000000050fc0: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; syscall; 
0x000000000004d2f7: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x0000000000050588: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000004eb57: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rax, r9; syscall; 
0x0000000000041a55: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000003af73: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae6f: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, r13; syscall; 
0x0000000000028341: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x00000000000598ba: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1e], cl; syscall; 
0x0000000000039c87: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000004b4da: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019141: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x0000000000038824: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000019100: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000000020899: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x0000000000021b62: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x00000000000197fb: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000005bc6a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rdx; pop rbx; pop r12; ret; 
0x0000000000022a3d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000004d045: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, r8; syscall; 
0x000000000001b229: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x0000000000022092: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000005735c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; mov rax, r9; syscall; 
0x0000000000022678: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; mov rdx, rcx; syscall; 
0x000000000004cda1: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x000000000005dc9e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0x59; syscall; 
0x0000000000022689: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005dcff: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000004d401: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; ret; 
0x0000000000022986: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x00000000000577ad: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000005a614: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000003bf35: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rdx; ret; 
0x000000000003bf43: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000001b25e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x00000000000592d9: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x00000000000595a7: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x000000000003b29e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x0000000000057f80: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 8], cl; mov rdx, rsi; syscall; 
0x000000000005cea8: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x5ce6a; loope 0x5ceb4; add byte ptr [rax], al; syscall; 
0x000000000005cef8: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x5cf4a; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000004bf08: add byte ptr [rax], al; add byte ptr [rcx - 0x3ca2a428], cl; movsxd rdi, edi; push rax; mov eax, 0x26; syscall; 
0x00000000000453d1: add byte ptr [rax], al; add byte ptr [rcx - 0x47], al; pop rbx; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x7174; 
0x0000000000058eec: add byte ptr [rax], al; add byte ptr [rcx - 0x73], cl; mov eax, 0x88; syscall; 
0x000000000005bbf3: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; and al, 0x30; mov rax, r12; pop r12; ret; 
0x000000000001f9d3: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf710; 
0x0000000000019c45: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000005e75a: add byte ptr [rax], al; add byte ptr [rcx], al; sub rdx, rsi; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000002aa2d: add byte ptr [rax], al; add byte ptr [rcx], ch; fmul dword ptr [rcx + 0x4db2404]; and al, 0xd9; ret; 
0x00000000000390d1: add byte ptr [rax], al; add byte ptr [rcx], ch; rcr byte ptr [rdx - 0x3d], 1; push rax; mov eax, 0x78; syscall; 
0x000000000002e632: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0xe2c1; 
0x0000000000057672: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000058c9a: add byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x76b6f932], cl; fimul dword ptr [rcx + rcx*4 - 0x18]; syscall; 
0x00000000000580b1: add byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000056fd7: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x0000000000044d4c: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xa5; ret; 
0x000000000004cd98: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xab; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdbc: add byte ptr [rax], al; add byte ptr [rcx], dh; sal bl, 0xab; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000018215: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rax], cl; sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x000000000004bd64: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; 
0x000000000004bd64: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; ret; 
0x0000000000057b62: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x00000000000410e2: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x4b; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x000000000005b8cc: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; syscall; 
0x00000000000241ad: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rdi], 5; ret; 
0x00000000000581cb: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000023dea: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; syscall; 
0x000000000004c744: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; 
0x000000000004c744: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x00000000000580ac: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; xor edx, edx; mov r10d, 8; syscall; 
0x000000000003ea91: add byte ptr [rax], al; add byte ptr [rdi + 3], dh; movzx eax, di; ret; 
0x000000000005be64: add byte ptr [rax], al; add byte ptr [rdi + rcx + 0x44], al; shr bl, 6; mov r8d, 1; mov eax, r8d; ret; 
0x000000000002f351: add byte ptr [rax], al; add byte ptr [rdi], bh; movd xmm0, edx; pop rbx; ret; 
0x0000000000021b9e: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x588903eb; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x00000000000580b9: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x000000000002401e: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; add eax, 0x5affff32; ret; 
0x000000000002423b: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b024178; ret; 
0x000000000005dae6: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5afffb97; ret; 
0x0000000000022de6: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5affff44; ret; 
0x000000000004bf16: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcb3; ret; 
0x000000000004b216: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcc0; ret; 
0x0000000000023d16: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5affff35; ret; 
0x000000000003b1bb: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5afffdc0; ret; 
0x000000000004b360: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; ret; 
0x000000000005cf06: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffba3; ret; 
0x0000000000024006: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5affff32; ret; 
0x0000000000023e14: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sysenter; 
0x000000000002886d: add byte ptr [rax], al; add byte ptr [rdi], cl; fsubr st(3); or byte ptr [rcx - 0x77], cl; ret 0x1bb; 
0x000000000003aa4a: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x000000000002f1c1: add byte ptr [rax], al; add byte ptr [rdi], cl; push rdi; leave; mulss xmm0, xmm1; ret; 
0x0000000000035d87: add byte ptr [rax], al; add byte ptr [rdi], cl; sub dl, al; add rsp, 0x18; ret; 
0x0000000000034d08: add byte ptr [rax], al; add byte ptr [rdi], cl; wait; ret 0x450f; 
0x000000000002ea5f: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xc1d9; 
0x0000000000045dd1: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x00000000000527e6: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x0000000000058bf0: add byte ptr [rax], al; add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000022c91: add byte ptr [rax], al; add byte ptr [rdx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000005893d: add byte ptr [rax], al; add byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x000000000005048e: add byte ptr [rax], al; add byte ptr [rdx + 0x63], cl; jl 0x50441; and byte ptr [rax + 3], bh; syscall; 
0x00000000000450d4: add byte ptr [rax], al; add byte ptr [rdx + 0x755d3c03], cl; or dword ptr [rax - 1], ecx; ret; 
0x000000000001b285: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b254: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057352: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000059368: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000576d1: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x00000000000570e1: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000041aaa: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x000000000005db6c: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rax, r9; syscall; 
0x0000000000021bc3: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; syscall; 
0x00000000000246b9: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; syscall; call 0x17230; pop rdx; ret; 
0x0000000000057e0c: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dbd: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000050829: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f893: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d423: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005852a: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4d: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x000000000005725f: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddef: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000577a8: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022a12: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x000000000005db44: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000005d3c7: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, r8; syscall; 
0x0000000000057114: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022aef: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; syscall; 
0x000000000004d5d1: add byte ptr [rax], al; add byte ptr [rdx + 2], bh; syscall; 
0x0000000000057d53: add byte ptr [rax], al; add byte ptr [rdx - 0x75], dl; pop rax; xor byte ptr [rbx + 0x4429005], cl; add byte ptr [rcx], bh; ret; 
0x000000000005d5df: add byte ptr [rax], al; add byte ptr [rdx - 0x80000000], bh; syscall; 
0x0000000000050b5f: add byte ptr [rax], al; add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000002e01d: add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0ea: add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x0000000000025690: add byte ptr [rax], al; add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000229c2: add byte ptr [rax], al; add byte ptr [rsi + 0x406], bh; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000017112: add byte ptr [rax], al; add byte ptr [rsi + 0x41], ah; mov dword ptr [rax + 0xe], eax; ret; 
0x000000000004d199: add byte ptr [rax], al; add byte ptr [rsi + 0x5413], bh; syscall; 
0x0000000000051046: add byte ptr [rax], al; add byte ptr [rsi + 0x80c2], bh; mov rdi, r12; mov edx, 0x180; syscall; 
0x000000000005082e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f898: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d428: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x000000000005852f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r9; syscall; 
0x000000000004eb52: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057264: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000576cc: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570dc: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004c8eb: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; syscall; 
0x000000000005d3c2: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022aea: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x00000000000246b4: add byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000004efdc: add byte ptr [rax], al; add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x00000000000591bf: add byte ptr [rax], al; add byte ptr [rsi + 6], bh; syscall; 
0x0000000000047bfa: add byte ptr [rax], al; add byte ptr [rsi - 0x22], bh; ret; 
0x000000000001f515: add byte ptr [rax], al; add byte ptr [rsi - 0x76], bl; add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x0000000000016711: add byte ptr [rax], al; add cl, bl; ror dword ptr [rax - 0x7d], 0xeb; add eax, ebx; loope 0x166fb; ret 0x8341; 
0x0000000000048a6b: add byte ptr [rax], al; add cl, ch; cli; or eax, 0x83480000; ret; 
0x00000000000503dc: add byte ptr [rax], al; add cl, ch; ret 1; 
0x00000000000523e8: add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000035371: add byte ptr [rax], al; add dh, bl; ret; 
0x000000000003fb3d: add byte ptr [rax], al; add dh, dh; ret; 
0x000000000005e75b: add byte ptr [rax], al; add dword ptr [rax + 0x29], ecx; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000005a2f3: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax], al; call 0x4bf36; mov rdi, qword ptr [rsp + 8]; call rbx; 
0x0000000000018313: add byte ptr [rax], al; add r12, rax; mov rax, r12; pop r12; ret; 
0x00000000000225c6: add byte ptr [rax], al; add rax, 0x34; ret; 
0x00000000000186fe: add byte ptr [rax], al; add rax, 1; cmp byte ptr [rax], 0; jne 0x18700; sub rax, rdi; ret; 
0x0000000000018672: add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x000000000004e331: add byte ptr [rax], al; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000002128b: add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000001e7db: add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x000000000001c194: add byte ptr [rax], al; add rsp, 0x28; fchs; fxch st(1); ret; 
0x000000000002b00b: add byte ptr [rax], al; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000043825: add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000001be6e: add byte ptr [rax], al; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000183b7: add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000001d0d3: add byte ptr [rax], al; add rsp, 0x58; fxch st(1); ret; 
0x000000000001ffd7: add byte ptr [rax], al; add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000002edec: add byte ptr [rax], al; add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x00000000000213ae: add byte ptr [rax], al; add rsp, 0x90; pop rbx; ret; 
0x0000000000020893: add byte ptr [rax], al; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001b901: add byte ptr [rax], al; add rsp, 0xa0; xor eax, eax; pop rbx; ret; 
0x0000000000021b5c: add byte ptr [rax], al; add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000000194b7: add byte ptr [rax], al; add rsp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x00000000000181fc: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000196ce: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001993e: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002aeb6: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x6a118]; add rsp, 0x18; ret; 
0x000000000002af67: add byte ptr [rax], al; addss xmm0, dword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000005cecf: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005cea9: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x000000000005cef9: add byte ptr [rax], al; and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000005cba9: add byte ptr [rax], al; and edi, 0x7fffffff; syscall; 
0x0000000000043983: add byte ptr [rax], al; and rax, rdx; ret; 
0x000000000003aede: add byte ptr [rax], al; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000001866d: add byte ptr [rax], al; call 0x18690; add rax, rbx; pop rbx; ret; 
0x000000000001e5ec: add byte ptr [rax], al; call 0x1e61e; pop rdx; ret; 
0x000000000003b5b9: add byte ptr [rax], al; call 0x225bf; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000001777e: add byte ptr [rax], al; call 0x225bf; pop rbx; mov eax, dword ptr [rax]; ret; 
0x0000000000022c31: add byte ptr [rax], al; call 0x22c9b; xor eax, eax; pop rdx; ret; 
0x000000000002af62: add byte ptr [rax], al; call 0x33b0c; addss xmm0, dword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000005685e: add byte ptr [rax], al; call 0x392c9; pop rdx; neg eax; sbb eax, eax; ret; 
0x000000000003d43b: add byte ptr [rax], al; call 0x3d1e5; add rsp, 0x18; ret; 
0x000000000005a2f7: add byte ptr [rax], al; call 0x4bf36; mov rdi, qword ptr [rsp + 8]; call rbx; 
0x0000000000055fb2: add byte ptr [rax], al; call 0x55ef2; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005622c: add byte ptr [rax], al; call 0x56119; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000022e3e: add byte ptr [rax], al; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000004f19d: add byte ptr [rax], al; call qword ptr [rbx + 0x50]; 
0x00000000000448aa: add byte ptr [rax], al; call rax; 
0x00000000000343c9: add byte ptr [rax], al; cmove eax, edx; ret; 
0x000000000005d30e: add byte ptr [rax], al; cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x000000000005aa0b: add byte ptr [rax], al; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x000000000005974c: add byte ptr [rax], al; cmovne eax, edx; ret; 
0x0000000000035943: add byte ptr [rax], al; cmp bh, 0x89; ret 0xe2c1; 
0x000000000002e0e3: add byte ptr [rax], al; cmp bh, 0xf; test byte ptr [rbx + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002e016: add byte ptr [rax], al; cmp bh, 0xf; test byte ptr [rdx + 0x3d000000], ah; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002b9b4: add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm1; ret; 
0x000000000002e6d6: add byte ptr [rax], al; cmp byte ptr [rdi + 0x77], 0xa; comiss xmm0, xmm1; jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x000000000002c2d9: add byte ptr [rax], al; cmp byte ptr [rdi], 0x66; movd mm0, eax; ret; 
0x000000000004474e: add byte ptr [rax], al; cmp dword ptr [r8 + 0x14], r13d; jne 0x44776; movsxd rdi, r13d; mov eax, 0x20; syscall; 
0x000000000002e01e: add byte ptr [rax], al; cmp eax, 0x7f7; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0eb: add byte ptr [rax], al; cmp eax, 0x7f7; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000004c9bc: add byte ptr [rax], al; cmp eax, 0xa000; je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000002168c: add byte ptr [rax], al; cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x00000000000216ee: add byte ptr [rax], al; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x0000000000056f33: add byte ptr [rax], al; cmp esi, 1; ja 0x56f3f; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f5e: add byte ptr [rax], al; cmp esi, 1; ja 0x56f6a; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x00000000000595c9: add byte ptr [rax], al; cmp esi, 1; ja 0x595d4; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000003e486: add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x3e496; add rax, 0xa0; ret; 
0x00000000000213cf: add byte ptr [rax], al; cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x00000000000275b1: add byte ptr [rax], al; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000057484: add byte ptr [rax], al; cmp rcx, rsi; jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000024117: add byte ptr [rax], al; cmp rdx, rbp; je 0x2412d; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000056f4d: add byte ptr [rax], al; cmp rsi, rdx; ja 0x56f5a; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000002e1e1: add byte ptr [rax], al; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002e455: add byte ptr [rax], al; comiss xmm0, xmmword ptr [rip + 0x6774e]; jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e2ab: add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000001c141: add byte ptr [rax], al; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001d149: add byte ptr [rax], al; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000001616e: add byte ptr [rax], al; fldz; ret; 
0x000000000001bec4: add byte ptr [rax], al; fxch st(1); add rsp, 0x38; fchs; fxch st(1); ret; 
0x000000000003ea92: add byte ptr [rax], al; ja 0x3ea99; movzx eax, di; ret; 
0x000000000002e023: add byte ptr [rax], al; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0f0: add byte ptr [rax], al; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000001e7d4: add byte ptr [rax], al; je 0x1e7dd; call 0x221f7; add rsp, 0x210; pop rbx; ret; 
0x0000000000021284: add byte ptr [rax], al; je 0x2128d; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000213a7: add byte ptr [rax], al; je 0x213b0; call 0x221f7; add rsp, 0x90; pop rbx; ret; 
0x0000000000022a59: add byte ptr [rax], al; je 0x22a62; call 0x221f7; add rsp, 0x68; ret; 
0x0000000000022b0a: add byte ptr [rax], al; je 0x22b13; call 0x221f7; add rsp, 0x50; pop rbx; ret; 
0x0000000000022b9d: add byte ptr [rax], al; je 0x22ba6; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000022db3: add byte ptr [rax], al; je 0x22dbc; call 0x221f7; add rsp, 0xa0; pop rbx; ret; 
0x0000000000022ec5: add byte ptr [rax], al; je 0x22ece; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000231bf: add byte ptr [rax], al; je 0x231c8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000023502: add byte ptr [rax], al; je 0x2350b; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000235b8: add byte ptr [rax], al; je 0x235c1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000023781: add byte ptr [rax], al; je 0x2378a; call 0x221f7; add rsp, 0x38; ret; 
0x00000000000237cf: add byte ptr [rax], al; je 0x237d8; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000023b13: add byte ptr [rax], al; je 0x23b1c; call 0x221f7; add rsp, 0x38; ret; 
0x0000000000023caf: add byte ptr [rax], al; je 0x23cb8; call 0x221f7; add rsp, 0xe0; pop rbx; ret; 
0x0000000000023da5: add byte ptr [rax], al; je 0x23dae; call 0x221f7; add rsp, 0x58; ret; 
0x000000000002430a: add byte ptr [rax], al; je 0x24313; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024384: add byte ptr [rax], al; je 0x2438d; call 0x221f7; add rsp, 0x58; ret; 
0x000000000002445b: add byte ptr [rax], al; je 0x24464; call 0x221f7; add rsp, 0x60; pop rbx; ret; 
0x00000000000245c0: add byte ptr [rax], al; je 0x245c9; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024657: add byte ptr [rax], al; je 0x24660; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024720: add byte ptr [rax], al; je 0x24729; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024cb8: add byte ptr [rax], al; je 0x24cc1; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000026f8f: add byte ptr [rax], al; je 0x26f98; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000273c3: add byte ptr [rax], al; je 0x273cc; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000027485: add byte ptr [rax], al; je 0x2748e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000002c41a: add byte ptr [rax], al; je 0x2c423; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002c5f7: add byte ptr [rax], al; je 0x2c600; call 0x221f7; add rsp, 0x18; ret; 
0x000000000002c90a: add byte ptr [rax], al; je 0x2c915; fstp st(0); call 0x221f7; add rsp, 0x48; ret; 
0x000000000002dc4a: add byte ptr [rax], al; je 0x2dc53; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000002dcf6: add byte ptr [rax], al; je 0x2dcff; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000002f562: add byte ptr [rax], al; je 0x2f56b; call 0x221f7; add rsp, 0x48; ret; 
0x000000000002f7dd: add byte ptr [rax], al; je 0x2f7e8; fstp st(0); call 0x221f7; add rsp, 0x98; ret; 
0x0000000000035631: add byte ptr [rax], al; je 0x3563a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000035669: add byte ptr [rax], al; je 0x35672; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036082: add byte ptr [rax], al; je 0x3608b; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000367c3: add byte ptr [rax], al; je 0x367cc; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036b2f: add byte ptr [rax], al; je 0x36b38; call 0x221f7; fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x0000000000036bee: add byte ptr [rax], al; je 0x36bf7; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000036d43: add byte ptr [rax], al; je 0x36d4c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003707e: add byte ptr [rax], al; je 0x37087; call 0x221f7; fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x000000000003801c: add byte ptr [rax], al; je 0x38025; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003809c: add byte ptr [rax], al; je 0x380a5; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000387da: add byte ptr [rax], al; je 0x387e3; call 0x221f7; add rsp, 0x130; pop rbp; ret; 
0x00000000000392b7: add byte ptr [rax], al; je 0x392c0; call 0x221f7; add rsp, 0x90; pop rbp; ret; 
0x000000000003931e: add byte ptr [rax], al; je 0x39327; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000393fe: add byte ptr [rax], al; je 0x39407; call 0x221f7; add rsp, 0x30; pop rbx; ret; 
0x0000000000039cca: add byte ptr [rax], al; je 0x39cd3; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003a30d: add byte ptr [rax], al; je 0x3a316; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003a679: add byte ptr [rax], al; je 0x3a682; call 0x221f7; add rsp, 0x10; pop rbp; ret; 
0x000000000003a892: add byte ptr [rax], al; je 0x3a89b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000003a90a: add byte ptr [rax], al; je 0x3a913; call 0x221f7; add rsp, 0x28; ret; 
0x000000000003b1a4: add byte ptr [rax], al; je 0x3b1ad; call 0x221f7; add rsp, 0x128; ret; 
0x000000000003b451: add byte ptr [rax], al; je 0x3b45a; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003b726: add byte ptr [rax], al; je 0x3b72f; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003b878: add byte ptr [rax], al; je 0x3b881; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003be21: add byte ptr [rax], al; je 0x3be2a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003c19c: add byte ptr [rax], al; je 0x3c1a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003e0a6: add byte ptr [rax], al; je 0x3e0af; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003e258: add byte ptr [rax], al; je 0x3e261; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003e910: add byte ptr [rax], al; je 0x3e919; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000040b1d: add byte ptr [rax], al; je 0x40b26; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004193f: add byte ptr [rax], al; je 0x41948; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000041b30: add byte ptr [rax], al; je 0x41b39; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041b89: add byte ptr [rax], al; je 0x41b92; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000422f6: add byte ptr [rax], al; je 0x422ff; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004236a: add byte ptr [rax], al; je 0x42373; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000423dc: add byte ptr [rax], al; je 0x423e5; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042e1e: add byte ptr [rax], al; je 0x42e27; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042e71: add byte ptr [rax], al; je 0x42e7a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042ec2: add byte ptr [rax], al; je 0x42ecb; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043d3a: add byte ptr [rax], al; je 0x43d43; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043f43: add byte ptr [rax], al; je 0x43f4c; call 0x221f7; leave; ret; 
0x0000000000044198: add byte ptr [rax], al; je 0x441a1; call 0x221f7; leave; ret; 
0x0000000000044dd5: add byte ptr [rax], al; je 0x44dde; call 0x221f7; add rsp, 0x160; pop rbp; ret; 
0x00000000000454de: add byte ptr [rax], al; je 0x454e7; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000004b2fd: add byte ptr [rax], al; je 0x4b306; call 0x221f7; add rsp, 0x10; pop rbp; ret; 
0x000000000004b633: add byte ptr [rax], al; je 0x4b63c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004bc02: add byte ptr [rax], al; je 0x4bc0b; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004bcc6: add byte ptr [rax], al; je 0x4bccf; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000004c41c: add byte ptr [rax], al; je 0x4c425; call 0x221f7; add rsp, 0x148; ret; 
0x000000000004c80b: add byte ptr [rax], al; je 0x4c814; call 0x221f7; add rsp, 0x90; pop rbx; ret; 
0x000000000004c9c1: add byte ptr [rax], al; je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000004ca27: add byte ptr [rax], al; je 0x4ca39; mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x000000000004ccd6: add byte ptr [rax], al; je 0x4ccdf; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004ce80: add byte ptr [rax], al; je 0x4ce89; call 0x221f7; sub rsp, -0x80; pop rbx; ret; 
0x000000000004cf38: add byte ptr [rax], al; je 0x4cf41; call 0x221f7; sub rsp, -0x80; pop rbx; ret; 
0x000000000004d4c1: add byte ptr [rax], al; je 0x4d4ca; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000004d7c4: add byte ptr [rax], al; je 0x4d7cd; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004d8cb: add byte ptr [rax], al; je 0x4d8d4; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000004d97a: add byte ptr [rax], al; je 0x4d983; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004da69: add byte ptr [rax], al; je 0x4da72; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004e521: add byte ptr [rax], al; je 0x4e52a; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004eace: add byte ptr [rax], al; je 0x4ead7; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f142: add byte ptr [rax], al; je 0x4f14b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f569: add byte ptr [rax], al; je 0x4f572; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f745: add byte ptr [rax], al; je 0x4f74e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004fc92: add byte ptr [rax], al; je 0x4fc9b; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004fe44: add byte ptr [rax], al; je 0x4fe4d; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000502a9: add byte ptr [rax], al; je 0x502b2; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x0000000000050688: add byte ptr [rax], al; je 0x50691; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050acf: add byte ptr [rax], al; je 0x50ad8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050c07: add byte ptr [rax], al; je 0x50c10; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050cb8: add byte ptr [rax], al; je 0x50cc1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050d69: add byte ptr [rax], al; je 0x50d72; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050e15: add byte ptr [rax], al; je 0x50e1e; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050ec6: add byte ptr [rax], al; je 0x50ecf; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000005141d: add byte ptr [rax], al; je 0x51426; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000052df1: add byte ptr [rax], al; je 0x52dfa; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054405: add byte ptr [rax], al; je 0x5440e; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054f4f: add byte ptr [rax], al; je 0x54f58; call 0x221f7; add rsp, 0x118; ret; 
0x0000000000055043: add byte ptr [rax], al; je 0x5504c; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000055323: add byte ptr [rax], al; je 0x5532c; call 0x221f7; add rsp, 0x1f8; ret; 
0x00000000000553fd: add byte ptr [rax], al; je 0x55406; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000554b3: add byte ptr [rax], al; je 0x554bc; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000568a9: add byte ptr [rax], al; je 0x568b2; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000057fe1: add byte ptr [rax], al; je 0x57ff3; mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x00000000000591f8: add byte ptr [rax], al; je 0x59201; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000059288: add byte ptr [rax], al; je 0x59291; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005b680: add byte ptr [rax], al; je 0x5b689; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005b7b8: add byte ptr [rax], al; je 0x5b7c1; call 0x221f7; mov rax, r8; add rsp, 0x28; ret; 
0x000000000005b814: add byte ptr [rax], al; je 0x5b81d; call 0x221f7; mov eax, r8d; add rsp, 0x28; ret; 
0x000000000005b9ad: add byte ptr [rax], al; je 0x5b9b6; call 0x221f7; add rsp, 0x40; pop rbp; ret; 
0x000000000005ca21: add byte ptr [rax], al; je 0x5ca2a; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000005cf8f: add byte ptr [rax], al; je 0x5cf98; call 0x221f7; add rsp, 0x38; ret; 
0x000000000005d2ad: add byte ptr [rax], al; je 0x5d2b6; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005d46b: add byte ptr [rax], al; je 0x5d474; call 0x221f7; xor eax, eax; add rsp, 0x18; ret; 
0x000000000005d675: add byte ptr [rax], al; je 0x5d67e; call 0x221f7; add rsp, 0x30; pop rbp; ret; 
0x000000000005da00: add byte ptr [rax], al; je 0x5da09; call 0x221f7; mov eax, r8d; add rsp, 0x18; ret; 
0x000000000005dccd: add byte ptr [rax], al; je 0x5dcd6; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005dd31: add byte ptr [rax], al; je 0x5dd3a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005def3: add byte ptr [rax], al; je 0x5defc; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005df4c: add byte ptr [rax], al; je 0x5df55; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005dfc7: add byte ptr [rax], al; je 0x5dfd0; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e008: add byte ptr [rax], al; je 0x5e011; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e192: add byte ptr [rax], al; je 0x5e19b; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005e214: add byte ptr [rax], al; je 0x5e21d; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000035a9b: add byte ptr [rax], al; jg 0x35aad; movsd qword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x0000000000025691: add byte ptr [rax], al; jle 0x256a6; lea edx, [rax - 0x100]; lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000047bfb: add byte ptr [rax], al; jle 0x47bdd; ret; 
0x000000000005e3ed: add byte ptr [rax], al; jmp rax; 
0x00000000000183b1: add byte ptr [rax], al; jne 0x1843f; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000018ac1: add byte ptr [rax], al; jne 0x18af1; add rsp, 0x38; ret; 
0x000000000002f05e: add byte ptr [rax], al; jne 0x2f06b; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002f1aa: add byte ptr [rax], al; jne 0x2f1b7; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x00000000000356bd: add byte ptr [rax], al; jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000003586e: add byte ptr [rax], al; jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000022d3f: add byte ptr [rax], al; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x00000000000194eb: add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019583: add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x00000000000266fb: add byte ptr [rax], al; lea rax, [rdx + 0x10]; ret; 
0x000000000004fcbc: add byte ptr [rax], al; lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x0000000000054854: add byte ptr [rax], al; lea rcx, [rip + 0x418bf]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000053298: add byte ptr [rax], al; lea rcx, [rip + 0x42d8f]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000004697b: add byte ptr [rax], al; lea rcx, [rip + 0x4f528]; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000025985: add byte ptr [rax], al; lea rcx, [rip + 0x6ff76]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001e6c5: add byte ptr [rax], al; lea rcx, [rip + 0x771ca]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000058eed: add byte ptr [rax], al; lea rdi, [r8 + 0x88]; syscall; 
0x000000000001b21c: add byte ptr [rax], al; lea rdi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005eb47: add byte ptr [rax], al; lea rdi, [rip + 0x37898]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000537ff: add byte ptr [rax], al; lea rdi, [rip + 0x428ac]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000057e12: add byte ptr [rax], al; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc3: add byte ptr [rax], al; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005143e: add byte ptr [rax], al; lea rdi, [rip + 0x44a81]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000050834: add byte ptr [rax], al; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f89e: add byte ptr [rax], al; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x00000000000261f8: add byte ptr [rax], al; lea rdi, [rip + 0x6f7a7]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023a2a: add byte ptr [rax], al; lea rdi, [rip + 0x6febd]; call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x0000000000021ea6: add byte ptr [rax], al; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000001b290: add byte ptr [rax], al; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x0000000000052625: add byte ptr [rax], al; lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032a4a: add byte ptr [rax], al; lea rdx, [rip + 0x633b9]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032387: add byte ptr [rax], al; lea rdx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031ca7: add byte ptr [rax], al; lea rdx, [rip + 0x64040]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000026e34: add byte ptr [rax], al; lea rdx, [rip + 0x6ebb7]; mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x000000000002296e: add byte ptr [rax], al; lea rdx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000044cf8: add byte ptr [rax], al; lea rsi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000044ce4: add byte ptr [rax], al; lea rsi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004bd46: add byte ptr [rax], al; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd46: add byte ptr [rax], al; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004bd2c: add byte ptr [rax], al; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2c: add byte ptr [rax], al; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005b7e8: add byte ptr [rax], al; lea rsi, [rsp + 8]; mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x0000000000058fe2: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d24: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cf1: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf6: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059a25: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000005ce7a: add byte ptr [rax], al; lock or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x00000000000574ca: add byte ptr [rax], al; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000001b3dc: add byte ptr [rax], al; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e5ca: add byte ptr [rax], al; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x00000000000177bd: add byte ptr [rax], al; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000005a272: add byte ptr [rax], al; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000586df: add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003b383: add byte ptr [rax], al; mov dword ptr [rsp + 0x80], ebx; syscall; 
0x000000000005d449: add byte ptr [rax], al; mov dword ptr [rsp + 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000004cb07: add byte ptr [rax], al; mov eax, 0x106; mov rsi, rbp; syscall; 
0x00000000000568c1: add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x0000000000023e32: add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x000000000002466f: add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000002405d: add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x000000000001710e: add byte ptr [rax], al; mov eax, 0x30; mov word ptr [r8 + 0xe], ax; ret; 
0x000000000003c29b: add byte ptr [rax], al; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000004caec: add byte ptr [rax], al; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000004d2f3: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004e747: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r14; syscall; 
0x00000000000446e9: add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x0000000000058fca: add byte ptr [rax], al; mov eax, 0x82; pop rbx; ret; 
0x000000000005a4d5: add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x000000000005a4d5: add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x000000000003aed9: add byte ptr [rax], al; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x0000000000058939: add byte ptr [rax], al; mov eax, 0xb; pop rdx; pop rbx; pop rbp; ret; 
0x000000000005a210: add byte ptr [rax], al; mov eax, 0xba; syscall; 
0x00000000000574a1: add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x00000000000574a1: add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x0000000000028369: add byte ptr [rax], al; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000004c03c: add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x0000000000021ea1: add byte ptr [rax], al; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005cba4: add byte ptr [rax], al; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000004c740: add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004c740: add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000005cd6d: add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000599d7: add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000004bd60: add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd60: add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; ret; 
0x0000000000051042: add byte ptr [rax], al; mov eax, 2; mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x000000000005a57a: add byte ptr [rax], al; mov eax, 2; syscall; 
0x000000000002208e: add byte ptr [rax], al; mov eax, 7; mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x0000000000023f84: add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000004b1d7: add byte ptr [rax], al; mov eax, ebx; pop rbx; neg eax; ret; 
0x000000000004bf09: add byte ptr [rax], al; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000003eaa6: add byte ptr [rax], al; mov eax, edi; ja 0x3eab0; shr eax, 0x10; ret; 
0x0000000000024974: add byte ptr [rax], al; mov eax, edi; test esi, esi; je 0x2497e; bswap eax; ret; 
0x0000000000039c88: add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000003d978: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000038733: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004d29c: add byte ptr [rax], al; mov eax, r12d; pop rdx; pop rbx; pop r12; ret; 
0x000000000004d402: add byte ptr [rax], al; mov eax, r8d; ret; 
0x0000000000044d59: add byte ptr [rax], al; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000241a9: add byte ptr [rax], al; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000241a9: add byte ptr [rax], al; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x00000000000581cc: add byte ptr [rax], al; mov edi, 1; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000023deb: add byte ptr [rax], al; mov edi, 1; syscall; 
0x000000000004c745: add byte ptr [rax], al; mov edi, 2; syscall; 
0x000000000004c745: add byte ptr [rax], al; mov edi, 2; syscall; mov eax, r8d; ret; 
0x00000000000580ad: add byte ptr [rax], al; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x00000000000587a9: add byte ptr [rax], al; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000058bf1: add byte ptr [rax], al; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x000000000004c9c8: add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000001b286: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b255: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057353: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000059369: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000576d2: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570e2: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000005d5e0: add byte ptr [rax], al; mov edx, 0x80000000; syscall; 
0x0000000000041aab: add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005db6d: add byte ptr [rax], al; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000021bc4: add byte ptr [rax], al; mov edx, 0x800; syscall; 
0x00000000000246ba: add byte ptr [rax], al; mov edx, 0x800; syscall; call 0x17230; pop rdx; ret; 
0x0000000000057e0d: add byte ptr [rax], al; mov edx, 1; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dbe: add byte ptr [rax], al; mov edx, 1; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005082a: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f894: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d424: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005852b: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4e: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057260: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf0: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000577a9: add byte ptr [rax], al; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022a13: add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x000000000005db45: add byte ptr [rax], al; mov edx, 1; mov rax, r9; syscall; 
0x000000000005d3c8: add byte ptr [rax], al; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000057115: add byte ptr [rax], al; mov edx, 1; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022af0: add byte ptr [rax], al; mov edx, 1; syscall; 
0x000000000004d5d2: add byte ptr [rax], al; mov edx, 2; syscall; 
0x000000000001a02e: add byte ptr [rax], al; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; sub rsi, 1; jae 0x1a030; ret; 
0x0000000000058ee8: add byte ptr [rax], al; mov esi, 0x18; lea rdi, [r8 + 0x88]; syscall; 
0x00000000000229c3: add byte ptr [rax], al; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000004d19a: add byte ptr [rax], al; mov esi, 0x5413; syscall; 
0x0000000000051047: add byte ptr [rax], al; mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x000000000005082f: add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f899: add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d429: add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000058530: add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb53: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057265: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf5: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000004d2cd: add byte ptr [rax], al; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x00000000000576cd: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570dd: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004c8ec: add byte ptr [rax], al; mov esi, 1; syscall; 
0x000000000005d3c3: add byte ptr [rax], al; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022aeb: add byte ptr [rax], al; mov esi, 2; mov edx, 1; syscall; 
0x00000000000246b5: add byte ptr [rax], al; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004efdd: add byte ptr [rax], al; mov esi, 4; movsxd rdx, ebx; syscall; 
0x00000000000591c0: add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000004c8a1: add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000004cd4d: add byte ptr [rax], al; mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x000000000005bbf4: add byte ptr [rax], al; mov qword ptr [r12 + 0x30], rax; mov rax, r12; pop r12; ret; 
0x00000000000221ef: add byte ptr [rax], al; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580ff: add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005e766: add byte ptr [rax], al; mov qword ptr [rax + 0x90], rdx; ret; 
0x00000000000465a8: add byte ptr [rax], al; mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004f195: add byte ptr [rax], al; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000046320: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004f1ca: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a9a3: add byte ptr [rax], al; mov qword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004db01: add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004daf9: add byte ptr [rax], al; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004db09: add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004b64c: add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x0000000000057490: add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004f33a: add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000042d8f: add byte ptr [rax], al; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042244: add byte ptr [rax], al; mov qword ptr [rip + 0x59c5f], 0; pop rdx; ret; 
0x000000000004f372: add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000024055: add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000003911c: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d61c: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000443b3: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8cc: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d69b: add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000005a572: add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x00000000000392f2: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x000000000005d3ec: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000005d9bb: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000004cb01: add byte ptr [rax], al; mov r10d, 0x1000; mov eax, 0x106; mov rsi, rbp; syscall; 
0x00000000000579e1: add byte ptr [rax], al; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000587a2: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000004e8bc: add byte ptr [rax], al; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000023a8c: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x00000000000611ba: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000004c99f: add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x0000000000019142: add byte ptr [rax], al; mov rax, r12; pop r12; pop r13; ret; 
0x000000000001988c: add byte ptr [rax], al; mov rax, r12; pop r12; ret; 
0x0000000000019101: add byte ptr [rax], al; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000002089a: add byte ptr [rax], al; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000021b63: add byte ptr [rax], al; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000018818: add byte ptr [rax], al; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000005bc6b: add byte ptr [rax], al; mov rax, r12; pop rdx; pop rbx; pop r12; ret; 
0x0000000000057f81: add byte ptr [rax], al; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000022987: add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000577ae: add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005a615: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000003bf36: add byte ptr [rax], al; mov rax, r8; pop rdx; ret; 
0x000000000003819c: add byte ptr [rax], al; mov rax, r8; ret; 
0x000000000001b25f: add byte ptr [rax], al; mov rax, r8; syscall; 
0x00000000000592da: add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x00000000000595a8: add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001b22a: add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000001760c: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019576: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000057b6a: add byte ptr [rax], al; mov rax, rbx; syscall; 
0x000000000005d3a9: add byte ptr [rax], al; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000002261a: add byte ptr [rax], al; mov rax, rdx; syscall; 
0x0000000000056bd1: add byte ptr [rax], al; mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x00000000000448a3: add byte ptr [rax], al; mov rdi, qword ptr [rbx + 0x88]; call rax; 
0x0000000000057a9c: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 0x40]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005800e: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 8]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000050589: add byte ptr [rax], al; mov rdi, r12; call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000005104c: add byte ptr [rax], al; mov rdi, r12; mov edx, 0x180; syscall; 
0x000000000004eb58: add byte ptr [rax], al; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000041a56: add byte ptr [rax], al; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000003af74: add byte ptr [rax], al; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae70: add byte ptr [rax], al; mov rdi, r12; mov rsi, r13; syscall; 
0x0000000000028342: add byte ptr [rax], al; mov rdi, r12; syscall; 
0x0000000000050fc1: add byte ptr [rax], al; mov rdi, r13; syscall; 
0x000000000005d4ca: add byte ptr [rax], al; mov rdi, r14; mov rdx, r13; syscall; 
0x000000000005d4af: add byte ptr [rax], al; mov rdi, r14; mov rsi, rbx; mov rdx, r13; syscall; 
0x0000000000022093: add byte ptr [rax], al; mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000005735d: add byte ptr [rax], al; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000022679: add byte ptr [rax], al; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004cda2: add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000004d046: add byte ptr [rax], al; mov rdi, r9; mov rsi, r8; syscall; 
0x000000000004bb6d: add byte ptr [rax], al; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000024562: add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x00000000000255e5: add byte ptr [rax], al; mov rdi, rax; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000044cff: add byte ptr [rax], al; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000059f34: add byte ptr [rax], al; mov rdi, rbp; call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x000000000005cb5a: add byte ptr [rax], al; mov rdi, rbp; call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004dd48: add byte ptr [rax], al; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004db67: add byte ptr [rax], al; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005711a: add byte ptr [rax], al; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005726a: add byte ptr [rax], al; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddfa: add byte ptr [rax], al; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000005d6e0: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c90c: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004b2d5: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000003914d: add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000004d8ad: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d4a3: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003b00a: add byte ptr [rax], al; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000002836e: add byte ptr [rax], al; mov rdi, rbx; syscall; 
0x000000000001e73f: add byte ptr [rax], al; mov rdi, rcx; syscall; 
0x000000000005cd72: add byte ptr [rax], al; mov rdi, rdx; syscall; 
0x0000000000023d2d: add byte ptr [rax], al; mov rdi, rsi; syscall; 
0x00000000000580e5: add byte ptr [rax], al; mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000043d9b: add byte ptr [rax], al; mov rdx, qword ptr fs:[0]; syscall; 
0x00000000000229c8: add byte ptr [rax], al; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000022a3e: add byte ptr [rax], al; mov rdx, r10; syscall; 
0x00000000000598bb: add byte ptr [rax], al; mov rdx, r12; syscall; 
0x000000000005dd00: add byte ptr [rax], al; mov rdx, r8; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000002209e: add byte ptr [rax], al; mov rdx, rcx; syscall; 
0x000000000004489c: add byte ptr [rax], al; mov rsi, qword ptr [rbx + 0xa0]; mov rdi, qword ptr [rbx + 0x88]; call rax; 
0x000000000004d2f8: add byte ptr [rax], al; mov rsi, r13; syscall; 
0x000000000003b29f: add byte ptr [rax], al; mov rsi, r14; syscall; 
0x000000000005e3e3: add byte ptr [rax], al; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000005dc9f: add byte ptr [rax], al; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000002268a: add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004cfa0: add byte ptr [rax], al; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000004cb0c: add byte ptr [rax], al; mov rsi, rbp; syscall; 
0x000000000005ccab: add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x000000000004cadb: add byte ptr [rax], al; mov rsi, rdx; syscall; 
0x00000000000226a5: add byte ptr [rax], al; mov rsi, rsp; mov edi, 1; syscall; 
0x00000000000611c2: add byte ptr [rax], al; mov rsp, rbx; jmp rax; 
0x0000000000017113: add byte ptr [rax], al; mov word ptr [r8 + 0xe], ax; ret; 
0x0000000000022c1f: add byte ptr [rax], al; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x0000000000035cd0: add byte ptr [rax], al; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002e51c: add byte ptr [rax], al; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002ab4c: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002ace5: add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000002f62c: add byte ptr [rax], al; movss xmm2, dword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000044783: add byte ptr [rax], al; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x000000000005d43f: add byte ptr [rax], al; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004becc: add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005db3c: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000005db64: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000041a7c: add byte ptr [rax], al; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa3: add byte ptr [rax], al; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005ce84: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000005ce84: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000004b1b2: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000050420: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x000000000005048f: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000004b1a2: add byte ptr [rax], al; movsxd rdi, ebx; call 0x17230; pop rbx; ret; 
0x000000000004d136: add byte ptr [rax], al; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000005d34a: add byte ptr [rax], al; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000023cc9: add byte ptr [rax], al; movsxd rdi, edi; push rax; mov eax, 0x9e; syscall; 
0x000000000003b46d: add byte ptr [rax], al; movsxd rdi, edi; push rax; mov eax, 0xf5; syscall; 
0x000000000005ddcc: add byte ptr [rax], al; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x00000000000448cf: add byte ptr [rax], al; movsxd rdi, r13d; lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x000000000005b7f2: add byte ptr [rax], al; movsxd rdi, r9d; syscall; 
0x000000000004d151: add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004efe2: add byte ptr [rax], al; movsxd rdx, ebx; syscall; 
0x000000000005d38a: add byte ptr [rax], al; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x00000000000446ad: add byte ptr [rax], al; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x0000000000041993: add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x000000000003aa4b: add byte ptr [rax], al; movzx eax, al; movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x0000000000018356: add byte ptr [rax], al; movzx eax, dl; sub eax, ecx; ret; 
0x000000000005c5e9: add byte ptr [rax], al; movzx edx, dl; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x000000000002feae: add byte ptr [rax], al; mulsd xmm0, qword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002cbf8: add byte ptr [rax], al; mulsd xmm0, qword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000003042b: add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002d176: add byte ptr [rax], al; mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x00000000000219b6: add byte ptr [rax], al; neg edi; sbb eax, eax; ret; 
0x000000000004daca: add byte ptr [rax], al; not eax; shr eax, 0x1f; ret; 
0x0000000000058f65: add byte ptr [rax], al; not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000050b60: add byte ptr [rax], al; or al, byte ptr [rax]; add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000057cff: add byte ptr [rax], al; or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002f287: add byte ptr [rax], al; or byte ptr [rcx], 0xc7; movd xmm0, edi; ret; 
0x000000000002c31c: add byte ptr [rax], al; or byte ptr [rcx], 0xd0; movd xmm0, eax; ret; 
0x0000000000033d15: add byte ptr [rax], al; or byte ptr [rdi], 0x28; shl byte ptr [rsi + 0xf], 1; outsb dx, byte ptr [rsi]; ret 0x2aeb; 
0x0000000000050b64: add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000001b3e2: add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000022c6c: add byte ptr [rax], al; or eax, 0xffffffff; ret; 
0x0000000000057f71: add byte ptr [rax], al; or esi, 1; syscall; 
0x0000000000058d00: add byte ptr [rax], al; or esi, 7; syscall; 
0x000000000001e5d0: add byte ptr [rax], al; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000037945: add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x000000000003a9aa: add byte ptr [rax], al; pop rax; pop rbx; pop rbp; ret; 
0x000000000003a349: add byte ptr [rax], al; pop rax; ret; 
0x000000000004d533: add byte ptr [rax], al; pop rbp; jmp rax; 
0x000000000004c28f: add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x00000000000387e8: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000017783: add byte ptr [rax], al; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000004c37e: add byte ptr [rax], al; pop rbx; pop r12; ret; 
0x00000000000239c2: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000056072: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r14; ret; 
0x0000000000023883: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004cc46: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000001e7e2: add byte ptr [rax], al; pop rbx; ret; 
0x00000000000181d6: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000061a9a: add byte ptr [rax], al; pop rcx; ret; 
0x0000000000032d2d: add byte ptr [rax], al; pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000032d3a: add byte ptr [rax], al; pop rdx; cvttss2si rax, xmm0; ret; 
0x000000000005893e: add byte ptr [rax], al; pop rdx; pop rbx; pop rbp; ret; 
0x000000000001e5f1: add byte ptr [rax], al; pop rdx; ret; 
0x00000000000214fa: add byte ptr [rax], al; pop rdx; test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000022c92: add byte ptr [rax], al; pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000022c59: add byte ptr [rax], al; pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000000441b0: add byte ptr [rax], al; push rax; mov eax, 0x3b; syscall; 
0x000000000005de2d: add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x000000000004c4a3: add byte ptr [rax], al; push rax; mov eax, 0x7f; syscall; 
0x000000000004ca89: add byte ptr [rax], al; push rax; mov rdi, -9; call 0x17230; pop rdx; ret; 
0x0000000000023dd4: add byte ptr [rax], al; push rcx; mov rdx, rdi; syscall; 
0x00000000000509c1: add byte ptr [rax], al; push rcx; syscall; 
0x0000000000050fb5: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x0000000000056cd9: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000001e738: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000022672: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x0000000000051118: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov rsi, rsp; mov eax, 6; mov rdi, r12; syscall; 
0x0000000000044d0e: add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; ret; 
0x000000000001715e: add byte ptr [rax], al; ret; 
0x0000000000021a60: add byte ptr [rax], al; seta al; ret; 
0x00000000000216f4: add byte ptr [rax], al; setne al; movzx eax, al; ret; 
0x0000000000022c0d: add byte ptr [rax], al; setne al; neg eax; pop rdx; ret; 
0x0000000000059139: add byte ptr [rax], al; setne sil; mov rax, r8; shl esi, 7; or esi, 1; syscall; 
0x0000000000059a71: add byte ptr [rax], al; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x00000000000581d1: add byte ptr [rax], al; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000035e5f: add byte ptr [rax], al; shl rax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000002f2f0: add byte ptr [rax], al; shl rax, 0x35; or rdx, rax; movq xmm0, rdx; pop rbx; ret; 
0x000000000004c178: add byte ptr [rax], al; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000002f16a: add byte ptr [rax], al; shl rdx, 0x3f; and rdi, rdx; or rdi, rax; movq xmm0, rdi; ret; 
0x00000000000390d2: add byte ptr [rax], al; sub eax, edx; pop rdx; ret; 
0x00000000000195ce: add byte ptr [rax], al; sub r8d, edx; mov eax, r8d; ret; 
0x0000000000018ff6: add byte ptr [rax], al; sub rax, 2; pop rbp; ret; 
0x000000000001b339: add byte ptr [rax], al; syscall; 
0x00000000000246bf: add byte ptr [rax], al; syscall; call 0x17230; pop rdx; ret; 
0x000000000004c74a: add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x00000000000580ba: add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000022de7: add byte ptr [rax], al; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022dcf: add byte ptr [rax], al; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000419d7: add byte ptr [rax], al; syscall; movsxd rdi, r9d; call 0x17230; pop rbx; ret; 
0x000000000003a1a7: add byte ptr [rax], al; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000022bb4: add byte ptr [rax], al; syscall; neg eax; ret; 
0x00000000000244e5: add byte ptr [rax], al; syscall; ret; 
0x000000000005ce8d: add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x00000000000220b9: add byte ptr [rax], al; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x00000000000446c6: add byte ptr [rax], al; test byte ptr [rbp], 1; je 0x44708; mov eax, 0x68; syscall; 
0x0000000000057d33: add byte ptr [rax], al; test eax, eax; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000021672: add byte ptr [rax], al; test eax, eax; setne al; movzx eax, al; add rsp, 0x18; ret; 
0x000000000005994c: add byte ptr [rax], al; test edi, edi; je 0x59960; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000044d31: add byte ptr [rax], al; test esi, 0xffffff00; jne 0x44d3f; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000004f366: add byte ptr [rax], al; test rax, rax; je 0x4f374; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004f324: add byte ptr [rax], al; test rdx, rdx; je 0x4f333; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000002f92d: add byte ptr [rax], al; xor bl, 0xf; adc dword ptr [rsp - 0xc], eax; ret; 
0x000000000002f859: add byte ptr [rax], al; xor bl, 0xf; adc dword ptr [rsp - 4], eax; mov eax, r8d; ret; 
0x000000000002f8f1: add byte ptr [rax], al; xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x10], eax; ret; 
0x0000000000023a9b: add byte ptr [rax], al; xor eax, eax; call 0x228e3; pop rdx; sar eax, 0x1f; ret; 
0x0000000000021581: add byte ptr [rax], al; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000056fd8: add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000057673: add byte ptr [rax], al; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005cbd0: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b908: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x00000000000177c3: add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000044d4d: add byte ptr [rax], al; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004cd99: add byte ptr [rax], al; xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdbd: add byte ptr [rax], al; xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x00000000000187ae: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000003b587: add byte ptr [rax], al; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x0000000000057fe8: add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x0000000000058049: add byte ptr [rax], al; xor edi, edi; mov rax, rdx; syscall; 
0x00000000000446b6: add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000005d974: add byte ptr [rax], al; xor edi, edi; syscall; ret; 
0x0000000000018216: add byte ptr [rax], al; xor edx, edx; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000004bd65: add byte ptr [rax], al; xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd65: add byte ptr [rax], al; xor edx, edx; mov edi, 2; syscall; ret; 
0x0000000000057b63: add byte ptr [rax], al; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x00000000000580b2: add byte ptr [rax], al; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000058c9b: add byte ptr [rax], al; xor edx, edx; or esi, 6; mov r10, rbx; mov rax, r13; syscall; 
0x000000000004bfaa: add byte ptr [rax], al; xor edx, edx; shl rax, 0x20; mov qword ptr [rsp + 0x28], rax; mov eax, 0xe; syscall; 
0x000000000003f005: add byte ptr [rax], al; xor edx, edx; syscall; 
0x000000000005b8cd: add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; syscall; 
0x0000000000022bc7: add byte ptr [rax], al; xor esi, esi; mov rdx, r8; syscall; 
0x0000000000022bc7: add byte ptr [rax], al; xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x00000000000241ae: add byte ptr [rax], al; xor esi, esi; syscall; 
0x00000000000241ae: add byte ptr [rax], al; xor esi, esi; syscall; ret; 
0x000000000005027a: add byte ptr [rax], al; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000002f078: add byte ptr [rax], al; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000002f1c2: add byte ptr [rax], al; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x0000000000041aae: add byte ptr [rax], cl; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000005db70: add byte ptr [rax], cl; add byte ptr [rax], al; mov rax, r9; syscall; 
0x0000000000021bc7: add byte ptr [rax], cl; add byte ptr [rax], al; syscall; 
0x00000000000246bd: add byte ptr [rax], cl; add byte ptr [rax], al; syscall; call 0x17230; pop rdx; ret; 
0x0000000000059660: add byte ptr [rax], dl; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000004cb05: add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000002388b: add byte ptr [rax], dl; add byte ptr [rax], al; ret; 
0x0000000000022de5: add byte ptr [rax], r8b; add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5affff44; ret; 
0x00000000000196cd: add byte ptr [rax], r8b; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001db7f: add byte ptr [rax], r8b; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001616d: add byte ptr [rax], r8b; fldz; ret; 
0x000000000001710d: add byte ptr [rax], r8b; mov eax, 0x30; mov word ptr [r8 + 0xe], ax; ret; 
0x0000000000019575: add byte ptr [rax], r8b; mov rax, rbx; pop rbx; ret; 
0x0000000000018355: add byte ptr [rax], r8b; movzx eax, dl; sub eax, ecx; ret; 
0x00000000000181d5: add byte ptr [rax], r8b; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000000191f5: add byte ptr [rax], r8b; ret; 
0x00000000000195cd: add byte ptr [rax], r8b; sub r8d, edx; mov eax, r8d; ret; 
0x0000000000018ff5: add byte ptr [rax], r8b; sub rax, 2; pop rbp; ret; 
0x0000000000019705: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x000000000002454e: add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x0000000000018ac2: add byte ptr [rbp + 0x2c], dh; add rsp, 0x38; ret; 
0x000000000005027b: add byte ptr [rbp + 0x31], al; sal byte ptr [rcx], cl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000003b466: add byte ptr [rbp + 0x31], al; shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000004474f: add byte ptr [rbp + 0x39], al; push 0x49207514; movsxd rdi, ebp; mov eax, 0x20; syscall; 
0x000000000001f3cb: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000004c290: add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000005994d: add byte ptr [rbp + 0x480e74ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x00000000000598b0: add byte ptr [rbp + 0x480f74ff], al; movsxd rsi, ebx; mov eax, 0x90; mov rdx, r12; syscall; 
0x00000000000154ef: add byte ptr [rbp + 0x58890fc0], al; add al, byte ptr [rax]; add al, ch; ret 0xd0; 
0x00000000000229bc: add byte ptr [rbp + 0x62], dh; mov r8d, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000004cad2: add byte ptr [rbp + 0x73], dh; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x00000000000294b6: add byte ptr [rbp + 0xa], dh; xor r8d, r8d; shl eax, 9; sete r8b; mov eax, r8d; ret; 
0x0000000000029478: add byte ptr [rbp + 0xb], dh; xor r8d, r8d; shl rax, 0xc; sete r8b; mov eax, r8d; ret; 
0x0000000000035a57: add byte ptr [rbp + 0xf0375c0], al; sub cl, al; ret; 
0x000000000002d2c0: add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x664a4; pop rbx; ret; 
0x000000000002cd45: add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x66a0f; pop rbx; ret; 
0x000000000002bddf: add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x67985; add rsp, 0x10; pop rbx; ret; 
0x0000000000035b6e: add byte ptr [rbp + 0xf0779d2], al; push rdi; add eax, 0x5dbf6; ret; 
0x000000000003c1c8: add byte ptr [rbp + 0xf], dh; lea edx, [rdi - 0xdf80]; cmp edx, 0x7f; ja 0x3c1da; movzx eax, dil; ret; 
0x000000000002f05f: add byte ptr [rbp + 9], dh; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002f1ab: add byte ptr [rbp + 9], dh; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000005b815: add byte ptr [rbp + rax - 0x18], dh; fisubr dword ptr [rcx - 4]; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x0000000000036083: add byte ptr [rbp + rax - 0x18], dh; insb byte ptr [rdi], dx; sar esi, 0xff; add rsp, 0x28; ret; 
0x0000000000026d66: add byte ptr [rbp + rax - 0x18], dh; mov dword ptr [rdi + rdi*8 - 0x3b7cb701], esi; sub byte ptr [rbx + 0x5d], bl; ret; 
0x000000000005dd32: add byte ptr [rbp + rax - 0x18], dh; mov ebp, 0x48fffc44; add esp, 0x18; ret; 
0x0000000000035632: add byte ptr [rbp + rax - 0x18], dh; mov ebp, 0x48fffecb; add esp, 0x18; ret; 
0x000000000004b634: add byte ptr [rbp + rax - 0x18], dh; mov ebx, 0x48fffd6b; add esp, 0x18; ret; 
0x0000000000036b30: add byte ptr [rbp + rax - 0x18], dh; mov edi, 0xdbfffeb6; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x58; ret; 
0x000000000002a535: add byte ptr [rbp + rax - 0x18], dh; mov edx, 0x48ffff7c; add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000041b31: add byte ptr [rbp + rax - 0x18], dh; mov esi, 0x48fffe06; add esp, 0x28; ret; 
0x000000000005df4d: add byte ptr [rbp + rax - 0x18], dh; movabs byte ptr [0xc328c48348fffc42], al; push rax; mov eax, 0x58; syscall; 
0x000000000005d46c: add byte ptr [rbp + rax - 0x18], dh; or dword ptr [rbp - 4], 0xffffffff; xor eax, eax; add rsp, 0x18; ret; 
0x000000000005a3e2: add byte ptr [rbp + rax - 0x18], dh; or eax, 0x48fffc7e; add esp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005da01: add byte ptr [rbp + rax - 0x18], dh; out dx, al; cld; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x18; ret; 
0x000000000005b681: add byte ptr [rbp + rax - 0x18], dh; outsb dx, byte ptr [rsi]; imul edi, esp, -1; add rsp, 0x18; ret; 
0x000000000005b7b9: add byte ptr [rbp + rax - 0x18], dh; push -4; dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x0000000000021285: add byte ptr [rbp + rax - 0x18], dh; push 0xf; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000045a2d: add byte ptr [rbp + rax - 0x18], dh; ret 0xfdc7; 
0x000000000001e7d5: add byte ptr [rbp + rax - 0x18], dh; sbb bh, byte ptr [rdx]; add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x000000000004d4c2: add byte ptr [rbp + rax - 0x18], dh; sub eax, 0x48fffd4d; add esp, 0x10; pop rbx; ret; 
0x000000000004f56a: add byte ptr [rbp + rax - 0x18], dh; test dword ptr [rdi*8 - 0x3b7eb701], ebp; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000050d6a: add byte ptr [rbp + rax - 0x18], dh; test dword ptr [rdi*8 - 0x3b7eb701], edx; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000004f746: add byte ptr [rbp + rax - 0x18], dh; test eax, 0x48fffd2a; add esp, 0xd8; ret; 
0x000000000004c9c2: add byte ptr [rbp + rbx - 0x48], dh; add dword ptr [rcx], eax; add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000002d400: add byte ptr [rbp + rcx - 0xd], dh; movups xmm0, xmmword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002ce88: add byte ptr [rbp + rcx - 0xe], dh; movups xmm0, xmmword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x0000000000038043: add byte ptr [rbp + rdi*8 - 0x26fc88c1], dl; stc; ret; 
0x000000000004f296: add byte ptr [rbp - 0x17f88740], al; mov edx, 0x89ffffe0; ret; 
0x0000000000048c21: add byte ptr [rbp - 0x17feff84], cl; cmc; ret; 
0x0000000000058fc0: add byte ptr [rbp - 0x38f38b40], al; adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x0000000000057d34: add byte ptr [rbp - 0x38f58640], al; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x0000000000021673: add byte ptr [rbp - 0x3f6af040], al; movzx eax, al; add rsp, 0x18; ret; 
0x000000000004cfb2: add byte ptr [rbp - 0x6a7af013], al; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x49], 0x8b; or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000002615b: add byte ptr [rbp - 0x77], al; ret 0x8d48; 
0x00000000000358d8: add byte ptr [rbp - 0x77], al; ret; 
0x0000000000026e3c: add byte ptr [rbp - 0x77], al; test byte ptr [rdx + 0x63], 4; mov dl, 0x48; add eax, edx; jmp rax; 
0x0000000000048b0e: add byte ptr [rbp - 0x7b7600a8], cl; and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000004cfba: add byte ptr [rbp - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x49], 0x8b; or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x00000000000186aa: add byte ptr [rbp - 0xd], dh; sub rax, rdi; ret; 
0x0000000000018706: add byte ptr [rbp - 9], dh; sub rax, rdi; ret; 
0x000000000001a02f: add byte ptr [rbx + 0x1489b114], cl; mov al, 0x48; sub esi, 1; jae 0x1a030; ret; 
0x00000000000599ca: add byte ptr [rbx + 0x2b7702ff], al; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x00000000000181d7: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000019f87: add byte ptr [rbx + 0x34899134], cl; nop; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x000000000004c37f: add byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x00000000000595ca: add byte ptr [rbx + 0x47701fe], al; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000024535: add byte ptr [rbx + 0x48], dl; mov ebx, edi; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000017f1f: add byte ptr [rbx + 0x48], dl; mov ebx, edx; call 0x563e4; add rax, rbx; pop rbx; ret; 
0x0000000000023f85: add byte ptr [rbx + 0x48c33040], cl; movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x0000000000022faf: add byte ptr [rbx + 0x5188fde2], al; cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x0000000000056f34: add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f5f: add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000001b3a1: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000000239c3: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000056073: add byte ptr [rbx + 0x5d], bl; pop r12; pop r14; ret; 
0x0000000000023884: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004cc47: add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000056c67: add byte ptr [rbx + 0x6ee9ffce], al; sldt word ptr [rax]; ret; 
0x0000000000057433: add byte ptr [rbx + 0x77701fe], al; shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000195e7: add byte ptr [rbx + 0xc89160c], cl; adc byte ptr [rax - 0x7d], cl; ret 0x8504; 
0x000000000004c1b5: add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x000000000003f341: add byte ptr [rbx + rcx*4 + 0x14], cl; and al, 0xff; ret; 
0x000000000004991e: add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x8b4c; 
0x0000000000043d79: add byte ptr [rbx - 0x3b170031], al; ja 0x43d7e; dec dword ptr [rcx + rcx*4 - 0x19]; call 0x56922; mov eax, 0x39; syscall; 
0x0000000000022dc2: add byte ptr [rbx - 0x3d], bl; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000050b65: add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000057aff: add byte ptr [rbx - 0x72b3fbbd], cl; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000004e72c: add byte ptr [rbx - 0x76b70004], cl; ret; 
0x0000000000044a05: add byte ptr [rbx - 0x76d3db84], cl; ret; 
0x000000000001962f: add byte ptr [rbx - 0x7cb7fb8d], cl; ret; 
0x0000000000039c85: add byte ptr [rbx], cl; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000059f5a: add byte ptr [rbx], cl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000044d5a: add byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000195cf: add byte ptr [rcx + 0x29], al; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x0000000000019e85: add byte ptr [rcx + 0x29], cl; ror dword ptr [rcx - 0x73], 0xc; cmp byte ptr [rax + 1], cl; dec byte ptr [rax + 0x39]; ret 0x1b74; 
0x00000000000453d9: add byte ptr [rcx + 0x39], cl; ret 0x7174; 
0x000000000005b13d: add byte ptr [rcx + 0x39], cl; ret; 
0x0000000000034579: add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi], 0x96; ret 0x8141; 
0x000000000004c586: add byte ptr [rcx + 0x415d5bd8], cl; pop rsp; pop r13; ret; 
0x000000000005a273: add byte ptr [rcx + 0x41e0e05], cl; add byte ptr [rax + 0x63], cl; jp 0x5a2ae; mov eax, 0xc8; syscall; 
0x0000000000023dd5: add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x00000000000587aa: add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x000000000005d44a: add byte ptr [rcx + 0x49042444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000003eaee: add byte ptr [rcx + 0x4c], bl; mov eax, esp; pop rsi; pop r12; ret; 
0x00000000000188af: add byte ptr [rcx + 0x54], al; mov r12, rdi; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000001911e: add byte ptr [rcx + 0x5c], al; pop r13; ret; 
0x0000000000044784: add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x000000000005b7f3: add byte ptr [rcx + 0x63], cl; stc; syscall; 
0x00000000000448d0: add byte ptr [rcx + 0x63], cl; std; lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x000000000003b384: add byte ptr [rcx + 0x80249c], cl; add byte ptr [rax], al; syscall; 
0x000000000003a2e5: add byte ptr [rcx + rax - 0x37], cl; cmp r9d, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000028ebb: add byte ptr [rcx + rax - 0xc], dh; sub rax, rdx; ret; 
0x0000000000050fc2: add byte ptr [rcx + rcx*4 - 0x11], cl; syscall; 
0x000000000004d2f9: add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x000000000004d2d3: add byte ptr [rcx + rcx*4 - 0x18], cl; mov rdi, r14; syscall; 
0x000000000005058a: add byte ptr [rcx + rcx*4 - 0x19], cl; call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000005803d: add byte ptr [rcx + rcx*4 - 0x19], cl; call 0x569d4; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x00000000000557fb: add byte ptr [rcx + rcx*4 - 0x19], cl; mov al, 1; call 0x50c18; mov rax, r12; pop r12; ret; 
0x000000000005104d: add byte ptr [rcx + rcx*4 - 0x19], cl; mov edx, 0x180; syscall; 
0x000000000004eb59: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rax, r9; syscall; 
0x0000000000041a57: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000003af75: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae71: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, r13; syscall; 
0x0000000000028343: add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x000000000004f185: add byte ptr [rcx + rcx*4 - 0x1e], al; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x00000000000598bc: add byte ptr [rcx + rcx*4 - 0x1e], cl; syscall; 
0x00000000000596b1: add byte ptr [rcx + rcx*4 - 0x20], 0x5b; pop rbp; pop r12; ret; 
0x0000000000039c89: add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000003d979: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x000000000003b156: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002277e: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000003945f: add byte ptr [rcx + rcx*4 - 0x20], al; pop rdx; pop rbp; pop r12; ret; 
0x000000000004d29d: add byte ptr [rcx + rcx*4 - 0x20], al; pop rdx; pop rbx; pop r12; ret; 
0x0000000000019066: add byte ptr [rcx + rcx*4 - 0x20], cl; mov qword ptr [rip + 0x82e87], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004c9a0: add byte ptr [rcx + rcx*4 - 0x20], cl; mov rdx, r13; syscall; 
0x0000000000019143: add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x0000000000018062: add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000019116: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x0000000000019102: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000002089b: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x0000000000021b64: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000005678b: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000018819: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043cbd: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rdx; pop rbp; pop r12; ret; 
0x000000000005bc6c: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rdx; pop rbx; pop r12; ret; 
0x00000000000229c9: add byte ptr [rcx + rcx*4 - 0x2e], cl; mov rax, r8; syscall; 
0x0000000000022a3f: add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000004d047: add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, r8; syscall; 
0x000000000004cfa1: add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x000000000001b22b: add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x0000000000022094: add byte ptr [rcx + rcx*4 - 0x39], cl; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000005735e: add byte ptr [rcx + rcx*4 - 0x39], cl; mov rax, r9; syscall; 
0x000000000002267a: add byte ptr [rcx + rcx*4 - 0x39], cl; mov rdx, rcx; syscall; 
0x000000000004cda3: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x000000000004cda3: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d3ce: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; movsxd rdi, r9d; call 0x17230; pop rdx; ret; 
0x0000000000058cf9: add byte ptr [rcx + rcx*4 - 0x3a], al; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005e3e4: add byte ptr [rcx + rcx*4 - 0x3a], cl; add rsp, 0x190; jmp rax; 
0x000000000005dca0: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0x59; syscall; 
0x000000000002268b: add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005dd01: add byte ptr [rcx + rcx*4 - 0x3e], cl; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000004d403: add byte ptr [rcx + rcx*4 - 0x40], al; ret; 
0x0000000000022988: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x00000000000577af: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000005a616: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000003bf37: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rdx; ret; 
0x000000000003819d: add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000001b260: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x00000000000592db: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x00000000000595a9: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x000000000003b2a0: add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x0000000000057f82: add byte ptr [rcx + rcx*4 - 8], cl; mov rdx, rsi; syscall; 
0x000000000005d4cb: add byte ptr [rcx + rcx*4 - 9], cl; mov rdx, r13; syscall; 
0x000000000005d4b0: add byte ptr [rcx + rcx*4 - 9], cl; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000005d8d2: add byte ptr [rcx + rcx*8 - 0xb7eb8c], al; ret 0xebeb; 
0x0000000000022103: add byte ptr [rcx - 0x1576b311], cl; mov rsi, r12; call rbx; 
0x000000000005ceaa: add byte ptr [rcx - 0x19], al; jg 0x5ce6a; loope 0x5ceb4; add byte ptr [rax], al; syscall; 
0x000000000005cefa: add byte ptr [rcx - 0x19], al; jg 0x5cf4a; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000004b1d8: add byte ptr [rcx - 0x2708a428], cl; ret; 
0x00000000000280bd: add byte ptr [rcx - 0x2e357638], cl; call 0x9056b89; ret 0xd089; 
0x000000000004bf0a: add byte ptr [rcx - 0x3ca2a428], cl; movsxd rdi, edi; push rax; mov eax, 0x26; syscall; 
0x0000000000043a4c: add byte ptr [rcx - 0x3ee87630], cl; call 0xffffffff89d46b62; ret 0xe2c1; 
0x000000000005bdb0: add byte ptr [rcx - 0x3fce0109], bl; test edx, edx; sete al; ret; 
0x000000000004cb02: add byte ptr [rcx - 0x46], al; add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0x106; mov rsi, rbp; syscall; 
0x00000000000453d3: add byte ptr [rcx - 0x47], al; pop rbx; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x7174; 
0x00000000000579e2: add byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000058eee: add byte ptr [rcx - 0x73], cl; mov eax, 0x88; syscall; 
0x00000000000410eb: add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x000000000005bbf5: add byte ptr [rcx - 0x77], cl; and al, 0x30; mov rax, r12; pop r12; ret; 
0x000000000002484f: add byte ptr [rcx - 0x77], cl; retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000049e5c: add byte ptr [rcx - 0x7d], al; lcall [rdi + 0x74]; cmove ecx, dword ptr [rcx - 0x1724ce01]; xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x000000000001f9d5: add byte ptr [rcx - 0x7d], cl; ret 0xf710; 
0x0000000000019c47: add byte ptr [rcx - 0x7d], cl; ret; 
0x00000000000220ba: add byte ptr [rcx - 0xa], al; fadd dword ptr [rsi]; and byte ptr [rbx + rcx + 0x48], dh; mov eax, edx; syscall; 
0x00000000000262f8: add byte ptr [rcx - 1], al; ret 0xdceb; 
0x0000000000023881: add byte ptr [rcx], 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000060ad1: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000004c99d: add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x000000000005f4a6: add byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000000220dc: add byte ptr [rcx], al; add rsp, 0x150; pop rbx; ret; 
0x00000000000446ca: add byte ptr [rcx], al; je 0x44708; mov eax, 0x68; syscall; 
0x0000000000021e9a: add byte ptr [rcx], al; mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000002d2f1: add byte ptr [rcx], al; sal bl, 0xf; sub al, al; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x000000000002cd79: add byte ptr [rcx], al; sal dl, 0xf; sub al, al; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000004c9cb: add byte ptr [rcx], al; sub al, byte ptr [rax]; syscall; 
0x000000000005e75c: add byte ptr [rcx], al; sub rdx, rsi; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x00000000000571b6: add byte ptr [rcx], bh; ret 0x1574; 
0x0000000000043afa: add byte ptr [rcx], bh; ret 0x177e; 
0x0000000000023827: add byte ptr [rcx], bh; ret; 
0x000000000002aa2f: add byte ptr [rcx], ch; fmul dword ptr [rcx + 0x4db2404]; and al, 0xd9; ret; 
0x00000000000390d3: add byte ptr [rcx], ch; rcr byte ptr [rdx - 0x3d], 1; push rax; mov eax, 0x78; syscall; 
0x000000000002e3ee: add byte ptr [rcx], ch; ret 0x8948; 
0x000000000002e634: add byte ptr [rcx], ch; ret 0xe2c1; 
0x0000000000057674: add byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000000589f5: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000000228a5: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000056ff4: add byte ptr [rcx], dh; rcr byte ptr [rbx - 0x3d], 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x0000000000021582: add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000058c9c: add byte ptr [rcx], dh; rol byte ptr [rbx - 0x76b6f932], cl; fimul dword ptr [rcx + rcx*4 - 0x18]; syscall; 
0x0000000000021a59: add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x00000000000580b3: add byte ptr [rcx], dh; rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000427c8: add byte ptr [rcx], dh; ror byte ptr [rax + 0x63], 0x94; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x0000000000056fd9: add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x0000000000057039: add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x39], 0x44; or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000003f006: add byte ptr [rcx], dh; ror byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffd82; ret; 
0x0000000000044d4e: add byte ptr [rcx], dh; sal bl, 0xa5; ret; 
0x000000000004cd9a: add byte ptr [rcx], dh; sal bl, 0xab; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdbe: add byte ptr [rcx], dh; sal bl, 0xab; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000002bbbf: add byte ptr [rcx], dh; sal bl, 0xf; pop rsp; ret 0xff3; 
0x000000000002b6eb: add byte ptr [rcx], dh; sal dl, 0xf; pop rsp; ret 0xff2; 
0x0000000000018217: add byte ptr [rcx], dh; sar byte ptr [rax], cl; sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x000000000004bd66: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; 
0x000000000004bd66: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; ret; 
0x0000000000056ceb: add byte ptr [rcx], dh; sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000057b64: add byte ptr [rcx], dh; sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x00000000000410e4: add byte ptr [rcx], dh; shr al, 0x4b; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x000000000001b41d: add byte ptr [rcx], dh; shr al, 0x9a; jno 0x1b424; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001e5b3: add byte ptr [rcx], dh; shr al, 0xb1; and eax, 0xc0ff0003; cdqe; pop rdx; ret; 
0x00000000000568ec: add byte ptr [rcx], dh; shr cl, 0xd5; sub esi, edi; call qword ptr [rax - 0x18]; 
0x000000000005b8ce: add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; syscall; 
0x000000000004aff7: add byte ptr [rcx], dh; test byte ptr [rcx + rcx*4 - 0x19], 0xe8; cmp dword ptr [rax + rax - 0x1f76b400], esi; pop r12; ret; 
0x00000000000241af: add byte ptr [rcx], dh; test byte ptr [rdi], 5; ret; 
0x00000000000241aa: add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000241aa: add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x00000000000216e7: add byte ptr [rdi + 0x18], dh; and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x000000000003b580: add byte ptr [rdi + 0x27], dh; sub esi, 0xd7c0; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000004c767: add byte ptr [rdi + 0x82], bh; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000035a9c: add byte ptr [rdi + 0xe], bh; movsd qword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x00000000000581cd: add byte ptr [rdi + 1], bh; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000023dec: add byte ptr [rdi + 1], bh; syscall; 
0x000000000004c746: add byte ptr [rdi + 2], bh; syscall; 
0x000000000004c746: add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x00000000000580ae: add byte ptr [rdi + 2], bh; xor edx, edx; mov r10d, 8; syscall; 
0x000000000003ea93: add byte ptr [rdi + 3], dh; movzx eax, di; ret; 
0x000000000003e48c: add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x000000000001a1a2: add byte ptr [rdi + rcx + 0x28], al; ret 0xf44; 
0x000000000005be66: add byte ptr [rdi + rcx + 0x44], al; shr bl, 6; mov r8d, 1; mov eax, r8d; ret; 
0x000000000001a126: add byte ptr [rdi + rcx + 0x54], al; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000002f353: add byte ptr [rdi], bh; movd xmm0, edx; pop rbx; ret; 
0x0000000000023bd0: add byte ptr [rdi], bl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005dd0c: add byte ptr [rdi], cl; add eax, 0x394cc789; ret 0x775; 
0x000000000002456b: add byte ptr [rdi], cl; add eax, 0x58106b89; pop rbx; pop rbp; ret; 
0x0000000000021ba0: add byte ptr [rdi], cl; add eax, 0x588903eb; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000023e4b: add byte ptr [rdi], cl; add eax, 0x6348c189; stc; call 0x17230; pop rdx; ret; 
0x0000000000023e7e: add byte ptr [rdi], cl; add eax, 0x6348c289; cli; call 0x17230; pop rdx; ret; 
0x00000000000580bb: add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x0000000000024063: add byte ptr [rdi], cl; add eax, 0x8908ff83; ret; 
0x0000000000024020: add byte ptr [rdi], cl; add eax, 0xe8c78948; add eax, 0x5affff32; ret; 
0x0000000000023d3d: add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b023c7d; ret; 
0x000000000002423d: add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b024178; ret; 
0x000000000005dae8: add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5afffb97; ret; 
0x0000000000022de8: add byte ptr [rdi], cl; add eax, 0xe8c78948; cmp eax, 0x5affff44; ret; 
0x000000000004bf18: add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcb3; ret; 
0x000000000004b218: add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcc0; ret; 
0x0000000000023d18: add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5affff35; ret; 
0x000000000005e1bd: add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5afffb90; ret; 
0x000000000003b1bd: add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5afffdc0; ret; 
0x000000000004b362: add byte ptr [rdi], cl; add eax, 0xe8c78948; ret; 
0x000000000005cf08: add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffba3; ret; 
0x0000000000024008: add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5affff32; ret; 
0x0000000000023e16: add byte ptr [rdi], cl; add eax, 0xe8c78948; sysenter; 
0x000000000002886f: add byte ptr [rdi], cl; fsubr st(3); or byte ptr [rcx - 0x77], cl; ret 0x1bb; 
0x000000000004710d: add byte ptr [rdi], cl; lahf; ret 0x48d; 
0x00000000000256a1: add byte ptr [rdi], cl; mov bh, 4; push rax; ret; 
0x000000000004f909: add byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000003aa4c: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x000000000002598d: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000026200: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000018357: add byte ptr [rdi], cl; mov dh, 0xc2; sub eax, ecx; ret; 
0x000000000001e6cd: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005c5ea: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x000000000002f079: add byte ptr [rdi], cl; push rdi; leave; mulsd xmm0, xmm1; ret; 
0x000000000002f1c3: add byte ptr [rdi], cl; push rdi; leave; mulss xmm0, xmm1; ret; 
0x0000000000036451: add byte ptr [rdi], cl; push rdi; ret 0xff3; 
0x0000000000022d40: add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x000000000002e51d: add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000001bcc9: add byte ptr [rdi], cl; sub al, dl; movsd xmm0, qword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x000000000002de4c: add byte ptr [rdi], cl; sub cl, al; ret; 
0x0000000000035cd1: add byte ptr [rdi], cl; sub dl, al; add rsp, 0x18; ret; 
0x00000000000183b2: add byte ptr [rdi], cl; test dword ptr [rsi + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000034d0a: add byte ptr [rdi], cl; wait; ret 0x450f; 
0x0000000000026a69: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x3948; 
0x00000000000493c0: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000056ab5: add byte ptr [rdi], cl; xchg eax, ebp; ret 0xcabf; 
0x0000000000022c0e: add byte ptr [rdi], cl; xchg eax, ebp; sal bh, 0xd8; pop rdx; ret; 
0x000000000001a404: add byte ptr [rdi], cl; xchg eax, edi; ret 0x4566; 
0x000000000002ea61: add byte ptr [rdi], cl; xchg eax, edi; ret 0xc1d9; 
0x0000000000045dd3: add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x00000000000527e8: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x0000000000026d51: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000025b70: add byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x000000000002643a: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x0000000000025b33: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd009; 
0x0000000000050ae9: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x0000000000058bf2: add byte ptr [rdx + 0x10], bh; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x000000000004c9c9: add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x0000000000022c93: add byte ptr [rdx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000023e97: add byte ptr [rdx + 0x48], bl; cmp eax, 8; setne al; movzx eax, al; neg eax; ret; 
0x00000000000407cc: add byte ptr [rdx + 0x48], bl; lea eax, [rip + 0x5b4fb]; ret; 
0x0000000000046764: add byte ptr [rdx + 0x5b], bl; pop rbp; pop r12; pop r13; ret; 
0x00000000000465ad: add byte ptr [rdx + 0x5b], bl; pop rbp; ret; 
0x0000000000060875: add byte ptr [rdx + 0x5d], bl; pop r12; jmp rax; 
0x0000000000053e0d: add byte ptr [rdx + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000052647: add byte ptr [rdx + 0x63], cl; add al, 0x9a; add rax, rdx; jmp rax; 
0x0000000000050490: add byte ptr [rdx + 0x63], cl; jl 0x50441; and byte ptr [rax + 3], bh; syscall; 
0x00000000000450d6: add byte ptr [rdx + 0x755d3c03], cl; or dword ptr [rax - 1], ecx; ret; 
0x000000000001b287: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b256: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057354: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x000000000005936a: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000576d3: add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x00000000000570e3: add byte ptr [rdx + 0x7fffffff], bh; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000041aac: add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x000000000005db6e: add byte ptr [rdx + 0x800], bh; mov rax, r9; syscall; 
0x0000000000021bc5: add byte ptr [rdx + 0x800], bh; syscall; 
0x00000000000246bb: add byte ptr [rdx + 0x800], bh; syscall; call 0x17230; pop rdx; ret; 
0x000000000001c078: add byte ptr [rdx + 0xf], bl; sub cl, dl; movaps xmm1, xmm0; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000057e0e: add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dbf: add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005082b: add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f895: add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d425: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005852c: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4f: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057261: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf1: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000577aa: add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022a14: add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x000000000005db46: add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000005d3c9: add byte ptr [rdx + 1], bh; mov rdi, r8; syscall; 
0x0000000000057116: add byte ptr [rdx + 1], bh; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022af1: add byte ptr [rdx + 1], bh; syscall; 
0x000000000004d5d3: add byte ptr [rdx + 2], bh; syscall; 
0x0000000000050b59: add byte ptr [rdx + rcx - 0x39], dh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000584f5: add byte ptr [rdx + rsi*2 + 0x48], dh; movsxd rdi, dword ptr [rbx + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x00000000000584f4: add byte ptr [rdx + rsi*2 + 0x48], r14b; movsxd rdi, dword ptr [rbx + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000057d55: add byte ptr [rdx - 0x75], dl; pop rax; xor byte ptr [rbx + 0x4429005], cl; add byte ptr [rcx], bh; ret; 
0x000000000005d5e1: add byte ptr [rdx - 0x80000000], bh; syscall; 
0x0000000000032d3b: add byte ptr [rdx - 0xd], bl; cvttps2pi mm0, xmm0; ret; 
0x000000000002d3eb: add byte ptr [rdx - 0xd], bl; subps xmm0, xmm1; ret; 
0x0000000000032d2e: add byte ptr [rdx - 0xe], bl; cvttps2pi mm0, xmm0; ret; 
0x000000000002ce73: add byte ptr [rdx - 0xe], bl; subps xmm0, xmm1; ret; 
0x000000000001bcd4: add byte ptr [rdx - 0xe], bl; subps xmm0, xmm2; ret; 
0x0000000000038822: add byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000005c2be: add byte ptr [rdx], al; add cl, ch; ret 1; 
0x000000000004055b: add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000000050b61: add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x000000000002e01f: add byte ptr [rip + 0x7f7], bh; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0ec: add byte ptr [rip + 0x7f7], bh; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000004c9bd: add byte ptr [rip + 0xa000], bh; je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000004ca23: add byte ptr [rip + 0xa000], bh; je 0x4ca39; mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x00000000000490c1: add byte ptr [rip - 0x76b80000], al; ret 0x894c; 
0x0000000000025692: add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000058ee9: add byte ptr [rsi + 0x18], bh; lea rdi, [r8 + 0x88]; syscall; 
0x00000000000229c4: add byte ptr [rsi + 0x406], bh; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000017114: add byte ptr [rsi + 0x41], ah; mov dword ptr [rax + 0xe], eax; ret; 
0x000000000002e45d: add byte ptr [rsi + 0x50], dh; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e1ea: add byte ptr [rsi + 0x51], dh; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000004d19b: add byte ptr [rsi + 0x5413], bh; syscall; 
0x0000000000039686: add byte ptr [rsi + 0x5f], bl; shr eax, 0x1f; add rsp, 0x10; pop rbx; ret; 
0x00000000000220b5: add byte ptr [rsi + 0x8002], bh; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000051048: add byte ptr [rsi + 0x80c2], bh; mov rdi, r12; mov edx, 0x180; syscall; 
0x0000000000050830: add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f89a: add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d42a: add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x0000000000058531: add byte ptr [rsi + 0x81], bh; mov rax, r9; syscall; 
0x000000000004eb54: add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057266: add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf6: add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000004d2ce: add byte ptr [rsi + 0x88000], bh; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000058bb7: add byte ptr [rsi + 0xa], bh; push rax; call 0x5a45b; xor eax, eax; pop rdx; ret; 
0x00000000000177bb: add byte ptr [rsi + 0xc70000], ch; or al, 0; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x00000000000576ce: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570de: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004c8ed: add byte ptr [rsi + 1], bh; syscall; 
0x000000000005db41: add byte ptr [rsi + 2], bh; mov edx, 1; mov rax, r9; syscall; 
0x000000000005d3c4: add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022aec: add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000005db69: add byte ptr [rsi + 4], bh; mov edx, 0x800; mov rax, r9; syscall; 
0x00000000000246b6: add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000004efde: add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x000000000002e024: add byte ptr [rsi + 5], dh; addss xmm0, xmm0; ret; 
0x00000000000591c1: add byte ptr [rsi + 6], bh; syscall; 
0x0000000000035a54: add byte ptr [rsi + rax], al; add byte ptr [rbp + 0xf0375c0], al; sub cl, al; ret; 
0x0000000000057fe2: add byte ptr [rsi + rcx - 0x48], dh; adc dword ptr [rcx], eax; add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x0000000000047bfc: add byte ptr [rsi - 0x22], bh; ret; 
0x0000000000027b1a: add byte ptr [rsi - 0x3f], ah; call 0x3fe2fe28; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000027f92: add byte ptr [rsi - 0x3f], ah; call 0x3fe302a0; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x000000000001f517: add byte ptr [rsi - 0x76], bl; add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x000000000004c1b1: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x00000000000503da: add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret 1; 
0x00000000000523e6: add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000002fead: add byte ptr cs:[rax], al; mulsd xmm0, qword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x00000000000266c4: add byte ptr ds:[rax - 0x73], cl; adc eax, 0x6ff30; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x000000000004cad1: add byte ptr ds:[rbp + 0x73], dh; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x0000000000028eba: add byte ptr ds:[rcx + rax - 0xc], dh; sub rax, rdx; ret; 
0x000000000004bf15: add byte ptr es:[rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcb3; ret; 
0x000000000005c2bd: add byte ptr es:[rdx], al; add cl, ch; ret 1; 
0x000000000003042a: add byte ptr ss:[rax], al; mulss xmm0, dword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000003aae7: add ch, bl; or byte ptr [rbp - 0x7b7bf00a], al; add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000003c794: add ch, bl; sbb edi, edi; ret 0x8948; 
0x000000000001bec5: add cl, bl; leave; add rsp, 0x38; fchs; fxch st(1); ret; 
0x000000000001616f: add cl, bl; out dx, al; ret; 
0x0000000000035361: add cl, bl; ret 0xc9d8; 
0x000000000001a8f7: add cl, bl; ret 0xcad8; 
0x000000000002aa5d: add cl, bl; ret; 
0x0000000000016713: add cl, bl; ror dword ptr [rax - 0x7d], 0xeb; add eax, ebx; loope 0x166fb; ret 0x8341; 
0x000000000003c584: add cl, byte ptr [rax + 0x39]; ret 0x820f; 
0x000000000003b55c: add cl, byte ptr [rax - 0x7b]; push qword ptr [rbp + 0xa]; test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x0000000000055ccb: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000002201c: add cl, byte ptr [rax - 1]; ret 0xc084; 
0x0000000000019f68: add cl, byte ptr [rcx - 0x7ab76fc4]; sal byte ptr [rsi - 0x75], cl; adc al, 0xb1; mov dword ptr [rax + rsi*4], edx; ret; 
0x0000000000045de0: add cl, byte ptr [rcx]; ret 0xc883; 
0x00000000000280c6: add cl, byte ptr [rcx]; ret 0xd089; 
0x00000000000599ec: add cl, byte ptr [rdi]; sub byte ptr [rip + 0x3b05c], cl; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x0000000000048a6d: add cl, ch; cli; or eax, 0x83480000; ret; 
0x0000000000028137: add cl, ch; in eax, 0xe7; add al, byte ptr [rax]; ret; 
0x000000000004fcab: add cl, ch; in eax, 0xff; call qword ptr [rax + 0x48]; 
0x0000000000056cc7: add cl, ch; jbe 0x56cf3; add byte ptr [rax], al; ret; 
0x000000000005de29: add cl, ch; jno 0x5de2d; add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x00000000000215ed: add cl, ch; lea eax, [rcx]; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000023be1: add cl, ch; pop rcx; adc al, 0xff; call qword ptr [rbx + 0x48]; 
0x00000000000503de: add cl, ch; ret 1; 
0x000000000001d503: add cl, ch; ret; 
0x00000000000532f6: add cl, ch; wait; add byte ptr [rax], al; add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x000000000002a6cd: add dh, bl; leave; fsubp st(1); fsubp st(1); ret; 
0x0000000000032b22: add dh, bl; ret 0x6cdb; 
0x000000000002d651: add dh, bl; ret 0xc9d9; 
0x0000000000032c1e: add dh, bl; ret 0xc9dc; 
0x000000000002d4ca: add dh, bl; ret 0xf1de; 
0x000000000002a9fb: add dh, bl; ret; 
0x000000000002c812: add dh, bl; retf 0xc9de; pop rax; pop rdx; add rsp, 0x28; ret; 
0x00000000000577cc: add dh, byte ptr [rbp + 0x23]; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000058524: add dh, byte ptr [rbp + 0x23]; mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000001b895: add dh, byte ptr [rbp + 0x53]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000003b296: add dh, byte ptr [rbp + rbx + 0x48]; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x00000000000465e7: add dh, byte ptr [rcx]; rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x000000000005b28b: add dh, byte ptr [rcx]; ror byte ptr [rax + 0x6b], cl; ret 0x4106; 
0x00000000000599cd: add dh, byte ptr [rdi + 0x2b]; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000005861a: add dh, byte ptr [rdi + rax + 0x31]; imul cl; ja 0x58624; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000045ccc: add dh, byte ptr [rdx + rcx*2 + 0x48]; mov eax, dword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x0000000000024425: add dh, byte ptr [rsi + 3]; mov r10, rcx; movsxd rdi, edi; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000446c7: add dh, dh; add byte ptr [r9], r8b; je 0x44708; mov eax, 0x68; syscall; 
0x00000000000384c5: add dh, dh; ret 0x7402; 
0x000000000003848f: add dh, dh; ret 0x7408; 
0x00000000000286e2: add dh, dh; ret; 
0x000000000005a4d3: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x000000000005a4d3: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x000000000001a5a3: add dl, dh; addps xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002b223: add dl, dh; addps xmm0, xmmword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab55: add dl, dh; addps xmm0, xmmword ptr [rip + 0x69fea]; ret; 
0x000000000002aeb7: add dl, dh; addps xmm0, xmmword ptr [rip + 0x6a118]; add rsp, 0x18; ret; 
0x00000000000309b1: add dl, dh; addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002b22b: add dl, dh; cvtps2pd xmm0, xmm0; ret; 
0x000000000002e2ac: add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002fdb0: add dl, dh; divps xmm0, xmm1; ret; 
0x000000000002a90d: add dl, dh; divps xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ab4d: add dl, dh; movups xmm0, xmmword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000001cfaf: add dl, dh; movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002952e: add dl, dh; movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295be: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002c251: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7d7: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x000000000002b088: add dl, dh; mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab05: add dl, dh; mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x0000000000029362: add dl, dh; mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab11: add dl, dh; mulps xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000003085d: add dl, dh; mulps xmm0, xmm2; pop rax; pop rbx; pop rbp; ret; 
0x0000000000032ff0: add dl, dh; mulps xmm0, xmm6; addsd xmm2, xmm3; addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000002feaf: add dl, dh; mulps xmm0, xmmword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002cbf9: add dl, dh; mulps xmm0, xmmword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002a5c9: add dl, dh; mulps xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002ce92: add dl, dh; subps xmm0, xmm1; ret; 
0x000000000002feb7: add dl, dh; subps xmm0, xmmword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002e396: add dl, dh; subps xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000003f21a: add dword ptr [r11 - 0x3fc33f20], r8d; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000034226: add dword ptr [r8 - 0x77], ecx; ret 0x4866; 
0x0000000000018c9a: add dword ptr [r8 - 0x7d], r9d; ret; 
0x0000000000025546: add dword ptr [r8 - 1], ecx; ret; 
0x00000000000213d4: add dword ptr [rax + 0x19], ecx; ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x000000000005e75d: add dword ptr [rax + 0x29], ecx; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x00000000000343bf: add dword ptr [rax + 0x29], ecx; retf 0x8548; clc; mov eax, 0; cmove eax, edx; ret; 
0x00000000000178d2: add dword ptr [rax + 0x3944ff57], ecx; retf 0xe575; lea rax, [rcx + 1]; pop rbx; ret; 
0x0000000000018807: add dword ptr [rax + 0x3948ff48], ecx; ret 0x774; 
0x0000000000017cdb: add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000019f91: add dword ptr [rax + 0x39], ecx; xlatb; jne 0x19f88; ret; 
0x0000000000017f9b: add dword ptr [rax + 0x75c98408], ecx; out dx, al; ret; 
0x000000000004f92d: add dword ptr [rax - 0x77], ecx; adc eax, 0x498f3; movzx eax, byte ptr [rax]; ret; 
0x000000000004f902: add dword ptr [rax - 0x77], ecx; adc eax, 0x4991e; movzx eax, byte ptr [rax]; ret; 
0x0000000000056106: add dword ptr [rax - 0x77], ecx; or byte ptr [r9 - 0x76], r8b; add byte ptr [rax + 0x1b806], cl; add byte ptr [rax], al; ret; 
0x00000000000508e1: add dword ptr [rax - 0x77], ecx; or eax, 0x48a5f; mov byte ptr [rdx], dil; ret; 
0x00000000000508a8: add dword ptr [rax - 0x77], ecx; or eax, 0x48a98; mov byte ptr [rdx], dil; ret; 
0x000000000004de4f: add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000034227: add dword ptr [rax - 0x77], ecx; ret 0x4866; 
0x00000000000188cf: add dword ptr [rax - 0x77], ecx; ret; 
0x0000000000022454: add dword ptr [rax - 0x77], ecx; sbb al, 0xd0; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000004ebc8: add dword ptr [rax - 0x77], ecx; sub byte ptr [r8 + r9*4 + 2], r8b; ret; 
0x0000000000017f93: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x0000000000018139: add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000017fb4: add dword ptr [rax - 0x7d], ecx; rol byte ptr [rcx], 0xf6; ret 0x7507; 
0x00000000000186a3: add dword ptr [rax - 0x7fef8bf9], ebp; cmp byte ptr [rax], al; jne 0x186a0; sub rax, rdi; ret; 
0x000000000002877a: add dword ptr [rax - 0x80], eax; jmp qword ptr [rbx + 0x40]; 
0x0000000000018703: add dword ptr [rax - 0x88affc8], eax; sub rax, rdi; ret; 
0x0000000000060d50: add dword ptr [rax - 1], ecx; ret 0x8348; 
0x0000000000025547: add dword ptr [rax - 1], ecx; ret; 
0x0000000000057afc: add dword ptr [rax], 0; add byte ptr [rbx - 0x72b3fbbd], cl; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000057268: add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r8; syscall; 
0x000000000004ddf8: add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r9; syscall; 
0x000000000004eb56: add dword ptr [rax], 0x894c0000; out 0x4c, eax; mov eax, ecx; syscall; 
0x0000000000050832: add dword ptr [rax], 0x8d480000; cmp eax, 0x48b6f; mov rax, r9; syscall; 
0x000000000004f89c: add dword ptr [rax], 0x8d480000; cmp eax, 0x49a05; mov rax, r9; syscall; 
0x000000000001b28e: add dword ptr [rax], 0x8d480000; cmp eax, 0x80d4f; mov rax, r8; syscall; 
0x000000000002bea1: add dword ptr [rax], eax; add bh, dh; ret 0; 
0x000000000003b1b1: add dword ptr [rax], eax; add bl, al; movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x0000000000029f49: add dword ptr [rax], eax; add bl, ch; ret 0x7c83; 
0x000000000002ace4: add dword ptr [rax], eax; add bl, dh; movups xmm0, xmmword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000002405c: add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000038a7d: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x000000000005d389: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x00000000000446e8: add dword ptr [rax], eax; add byte ptr [rax + 0x66], bh; syscall; 
0x0000000000060329: add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret; 
0x0000000000032a49: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x633b9; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032386: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x63974; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031ca6: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x64040; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000019582: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x000000000005eb46: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; cmp eax, 0x37898; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000537fe: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; cmp eax, 0x428ac; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000005143d: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; cmp eax, 0x44a81; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x00000000000227ca: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; ret 0xe808; 
0x000000000004cb0b: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; out dx, al; syscall; 
0x000000000004b2d4: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x00000000000430c1: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000018be3: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000017b14: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000019af1: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000005a2f5: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x4bf36; mov rdi, qword ptr [rsp + 8]; call rbx; 
0x0000000000057e10: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc1: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d2f1: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004e745: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000004d400: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, r8d; ret; 
0x00000000000576d0: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570e0: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000005082d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f897: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d427: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005852e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb51: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057263: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x0000000000057f7f: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r15; mov rdx, rsi; syscall; 
0x00000000000577ac: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000003bf42: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; ret; 
0x000000000001b26d: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; 
0x00000000000592d8: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x00000000000595a6: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001b238: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000005d3cb: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000004dd46: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x0000000000057118: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d8ab: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d4a1: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005dcfe: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdx, r8; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000005dc9d: add dword ptr [rax], eax; add byte ptr [rax], al; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000004d531: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; jmp rax; 
0x000000000004d3b8: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000061a98: add dword ptr [rax], eax; add byte ptr [rax], al; pop rcx; ret; 
0x0000000000039479: add dword ptr [rax], eax; add byte ptr [rax], al; pop rdx; ret; 
0x00000000000191ed: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000000581cf: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x000000000004c176: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000226ab: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000057b61: add dword ptr [rax], eax; add byte ptr [rax], al; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x00000000000411ff: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000056071: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r14; ret; 
0x0000000000023882: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005d907: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000023dd3: add dword ptr [rax], eax; add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x000000000003f5ef: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000038732: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c99e: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], cl; mov rdx, r13; syscall; 
0x000000000004cf9f: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x0000000000044769: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000004ca2f: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000005d4c9: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 9], cl; mov rdx, r13; syscall; 
0x000000000005d4ae: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 9], cl; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000005cbcf: add dword ptr [rax], eax; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000001b41b: add dword ptr [rax], eax; add byte ptr [rcx], dh; shr al, 0x9a; jno 0x1b424; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000241a8: add dword ptr [rax], eax; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000241a8: add dword ptr [rax], eax; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x000000000001a1a0: add dword ptr [rax], eax; add byte ptr [rdi + rcx + 0x28], al; ret 0xf44; 
0x000000000005dd0a: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x394cc789; ret 0x775; 
0x0000000000024061: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x8908ff83; ret; 
0x0000000000023d3b: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b023c7d; ret; 
0x000000000005e1bb: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0xe8c78948; push 0x5afffb90; ret; 
0x000000000002f077: add dword ptr [rax], eax; add byte ptr [rdi], cl; push rdi; leave; mulsd xmm0, xmm1; ret; 
0x000000000002e51b: add dword ptr [rax], eax; add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000035ccf: add dword ptr [rax], eax; add byte ptr [rdi], cl; sub dl, al; add rsp, 0x18; ret; 
0x000000000004c9c7: add dword ptr [rax], eax; add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x0000000000058ee7: add dword ptr [rax], eax; add byte ptr [rsi + 0x18], bh; lea rdi, [r8 + 0x88]; syscall; 
0x00000000000215eb: add dword ptr [rax], eax; add cl, ch; lea eax, [rcx]; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000000446c5: add dword ptr [rax], eax; add dh, dh; add byte ptr [r9], r8b; je 0x44708; mov eax, 0x68; syscall; 
0x000000000002e2aa: add dword ptr [rax], eax; add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002ab4b: add dword ptr [rax], eax; add dl, dh; movups xmm0, xmmword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x0000000000043d88: add dword ptr [rax], eax; mov eax, 0x39; syscall; 
0x000000000003b005: add dword ptr [rax], eax; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000039476: add dword ptr [rax], eax; mov eax, 1; pop rdx; ret; 
0x000000000003a608: add dword ptr [rax], eax; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x00000000000241d0: add dword ptr [rax], eax; mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x000000000003d4ad: add dword ptr [rax], eax; mov qword ptr [rbp], rbx; pop rax; pop rbx; pop rbp; ret; 
0x0000000000043cfa: add dword ptr [rax], eax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000003b0c1: add dword ptr [rax], eax; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043cbc: add dword ptr [rax], eax; mov rax, r12; pop rdx; pop rbp; pop r12; ret; 
0x000000000003afc6: add dword ptr [rax], eax; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000001cfae: add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000003b3a3: add dword ptr [rax], eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003eaed: add dword ptr [rax], eax; pop rcx; mov rax, r12; pop rsi; pop r12; ret; 
0x000000000005a637: add dword ptr [rax], eax; ret; 
0x0000000000024b35: add dword ptr [rax], eax; xor eax, eax; pop rdx; ret; 
0x000000000002ed92: add dword ptr [rax], edi; ret 0x2474; 
0x000000000005aa02: add dword ptr [rax], edx; cmp r8d, 6; mov eax, 6; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x00000000000241a7: add dword ptr [rax], r8d; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000241a7: add dword ptr [rax], r8d; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x0000000000024060: add dword ptr [rax], r8d; add byte ptr [rdi], cl; add eax, 0x8908ff83; ret; 
0x0000000000039475: add dword ptr [rax], r8d; mov eax, 1; pop rdx; ret; 
0x00000000000266a5: add dword ptr [rbp + 0xa], esi; push rax; call 0x15060; xor eax, eax; pop rdx; ret; 
0x000000000004b9df: add dword ptr [rbx + 0x445b1840], ecx; sub eax, edx; ret; 
0x000000000001a0ac: add dword ptr [rbx + rax - 0x77], esi; ja 0x1a0ba; ret; 
0x000000000003f21b: add dword ptr [rbx - 0x3fc33f20], eax; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000001a039: add dword ptr [rbx - 0xc], esi; ret; 
0x0000000000056cd5: add dword ptr [rcx + 0xa], edi; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x00000000000493b8: add dword ptr [rcx + rcx + 0x31], esi; rol byte ptr [rbx + 0xf001078], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000042242: add dword ptr [rcx - 0x38b80000], edi; add eax, 0x59c5f; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003c3db: add dword ptr [rcx - 0x77], eax; ret; 
0x000000000004c9c6: add dword ptr [rcx], eax; add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000002f076: add dword ptr [rcx], eax; add byte ptr [rax], al; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000002f928: add dword ptr [rcx], ebx; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000015ed2: add dword ptr [rcx], ecx; ret 0x8941; 
0x0000000000045f5d: add dword ptr [rcx], ecx; ret; 
0x0000000000022cfa: add dword ptr [rdi + 0x1246c08], ebx; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000029e7b: add dword ptr [rdi + 0x63480006], ebp; ret; 
0x00000000000595cd: add dword ptr [rdi + 4], esi; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000056f37: add dword ptr [rdi + 5], esi; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f62: add dword ptr [rdi + 5], esi; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000057436: add dword ptr [rdi + 7], esi; shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000004db3f: add dword ptr [rdi + 8], esi; ret; 
0x0000000000023a3c: add dword ptr [rdi], 0; pop rax; ret; 
0x0000000000023a92: add dword ptr [rdi], 0; pop rdx; ret; 
0x0000000000022cff: add dword ptr [rdi], ecx; scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x0000000000060609: add dword ptr [rdx - 0x2d], esi; sub rbx, 8; call qword ptr [rbx]; 
0x00000000000407c7: add dword ptr [rip + 0x5b88b], eax; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x00000000000522bd: add dword ptr [rip - 0x7cb7e98b], esp; ret 0x4802; 
0x00000000000532fe: add dword ptr [rsi + 0x74], ebx; or byte ptr [rax - 1], cl; ret; 
0x000000000002cb61: add dword ptr [rsi + 0xff20006], 0x59; ret 0xff2; 
0x0000000000022a35: add dword ptr [rsi + 3], esi; movsxd rsi, eax; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000002b44d: add dword ptr [rsi], 0; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002ce86: add dword ptr [rsi], 0; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002cc67: add dword ptr [rsi], 0x590ff200; ret 0xff2; 
0x0000000000021a57: add dword ptr [rsi], ecx; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000018891: add dword ptr [rsp + rax*4 - 0x3a], eax; jne 0x18868; sub eax, edi; ret; 
0x000000000002cc66: add dword ptr cs:[rsi], 0x590ff200; ret 0xff2; 
0x0000000000023f8e: add dword ptr es:[rax], eax; add byte ptr [rcx + 0x48], dl; mov edx, edi; syscall; 
0x0000000000043cf9: add dword ptr es:[rax], eax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000024b34: add dword ptr fs:[rax], eax; xor eax, eax; pop rdx; ret; 
0x0000000000028091: add eax, 0x11fe283; rol byte ptr [rcx - 0x78], 1; std; mov rax, r8; ret; 
0x000000000004448b: add eax, 0x12491e8; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000005a634: add eax, 0x15180; ret; 
0x00000000000447c8: add eax, 0x1c244489; and eax, 0xfffffffe; mov rsi, r15; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x00000000000446de: add eax, 0x1c244489; test eax, eax; jne 0x448bb; mov eax, 0x66; syscall; 
0x000000000004475f: add eax, 0x1c244489; test eax, eax; js 0x448bb; mov rax, r9; syscall; 
0x00000000000378c6: add eax, 0x21d0f700; sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x000000000005e3e0: add eax, 0x22db; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000003a2ee: add eax, 0x244c8b48; or byte ptr [rbx + rcx*4 + 9], cl; syscall; 
0x000000000005042b: add eax, 0x247c6348; and al, 0x48; mov eax, edx; syscall; 
0x000000000005d979: add eax, 0x27b8c3; add byte ptr [rax], al; syscall; 
0x000000000005748d: add eax, 0x30c1; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000002241a: add eax, 0x31188948; fisttp dword ptr [rax - 1]; ret 0x8348; 
0x000000000003b42d: add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x00000000000225c9: add eax, 0x34; ret; 
0x0000000000042e00: add eax, 0x358d4800; xlatb; je 0x42e0d; add al, ch; ret 0; 
0x000000000005dd0e: add eax, 0x394cc789; ret 0x775; 
0x0000000000060871: add eax, 0x3b12a; pop rdx; pop rbp; pop r12; jmp rax; 
0x000000000005e7b0: add eax, 0x3b183; ret; 
0x00000000000607e3: add eax, 0x3b1b8; call rax; 
0x00000000000606b4: add eax, 0x3b8ab; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x000000000005f15e: add eax, 0x3ce4d; mov qword ptr [rip + 0x3ce46], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000042945: add eax, 0x3d8d4800; ret; 
0x000000000005b88e: add eax, 0x3dbdd; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000035e5c: add eax, 0x3ff; shl rax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000005a483: add eax, 0x41a98; ret; 
0x0000000000058746: add eax, 0x41c48941; neg esp; jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000005a275: add eax, 0x41e0e; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000056f1e: add eax, 0x42581; mov qword ptr [rbx + 8], rax; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x000000000001e5dd: add eax, 0x43a1e; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000057da0: add eax, 0x442d7; ret; 
0x0000000000057d94: add eax, 0x442e3; test eax, eax; je 0x57da6; dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x000000000003e1d9: add eax, 0x450f4800; ret 0x8948; 
0x0000000000041a8f: add eax, 0x47b6348; mov rax, r8; syscall; 
0x000000000005db50: add eax, 0x47d6348; mov rax, r9; syscall; 
0x000000000005a59b: add eax, 0x48000000; mov edi, ebp; syscall; 
0x000000000004cad9: add eax, 0x48000000; mov esi, edx; syscall; 
0x00000000000447bc: add eax, 0x48b87feb; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000005d5d3: add eax, 0x48d23145; mov esi, esp; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x0000000000045027: add eax, 0x48fffd22; add esp, 0x18; ret; 
0x000000000004d02d: add eax, 0x4c000001; mov esi, ecx; mov rdx, r8; syscall; 
0x000000000004f8a3: add eax, 0x4c00049a; mov eax, ecx; syscall; 
0x000000000004fcc0: add eax, 0x4c223; pop rdx; ret; 
0x000000000005d5c1: add eax, 0x4f88348; jne 0x5d5a5; movsxd rdi, dword ptr [rsp + 0x20]; mov eax, 3; syscall; 
0x00000000000241b3: add eax, 0x50f689c3; mov eax, 0x13f; syscall; 
0x00000000000439ae: add eax, 0x5117d; pop rdx; ret; 
0x000000000004b176: add eax, 0x53c3d8f7; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000034c2a: add eax, 0x580ff200; ret 0x4866; 
0x000000000002456d: add eax, 0x58106b89; pop rbx; pop rbp; ret; 
0x0000000000043a37: add eax, 0x5849c; shr rax, 0x21; ret; 
0x0000000000043a2d: add eax, 0x584a6; inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x0000000000043a1a: add eax, 0x584b9; ret; 
0x0000000000021ba2: add eax, 0x588903eb; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000041331: add eax, 0x58c8a; ret; 
0x000000000003486d: add eax, 0x590ff200; ret; 
0x0000000000042da0: add eax, 0x5911f; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000042d93: add eax, 0x5912c; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000042255: add eax, 0x59c52; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000042248: add eax, 0x59c5f; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003e498: add eax, 0x5ab0b; ret; 
0x0000000000024027: add eax, 0x5affff32; ret; 
0x00000000000407d0: add eax, 0x5b4fb; ret; 
0x00000000000407c8: add eax, 0x5b88b; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x0000000000040774: add eax, 0x5b8db; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000040769: add eax, 0x5b8e6; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000036eca: add eax, 0x5c8a1; add rsp, 0x10; pop rbx; ret; 
0x0000000000036dff: add eax, 0x5c95c; add rsp, 0x10; pop rbx; ret; 
0x0000000000035b75: add eax, 0x5dbf6; ret; 
0x000000000004f8b9: add eax, 0x5dc08944; ret; 
0x0000000000035aed: add eax, 0x5dc6e; ret; 
0x00000000000359b3: add eax, 0x5ddb8; ret; 
0x000000000003582e: add eax, 0x5df2d; ret; 
0x0000000000035ae1: add eax, 0x5f04a; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035a03: add eax, 0x5f6a0; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x0000000000035b6a: add eax, 0x5fd09; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x00000000000349aa: add eax, 0x60181; add rsp, 0x40; pop rbx; ret; 
0x0000000000035a53: add eax, 0x60400; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x000000000003932e: add eax, 0x605ef; ret; 
0x0000000000034c90: add eax, 0x60be3; add rsp, 0x28; ret; 
0x0000000000033e18: add eax, 0x619a3; ret; 
0x0000000000033e28: add eax, 0x61acf; ret; 
0x0000000000033e21: add eax, 0x61ad6; ret; 
0x0000000000031831: add eax, 0x61f3a; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023e4d: add eax, 0x6348c189; stc; call 0x17230; pop rdx; ret; 
0x0000000000023e80: add eax, 0x6348c289; cli; call 0x17230; pop rdx; ret; 
0x000000000004ca36: add eax, 0x6348c689; sti; mov eax, 3; syscall; 
0x000000000004cb6b: add eax, 0x634910eb; stc; movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x0000000000030859: add eax, 0x642e2; mulsd xmm0, xmm2; pop rax; pop rbx; pop rbp; ret; 
0x00000000000309ad: add eax, 0x6438e; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000308ca: add eax, 0x64c39; divsd xmm0, xmm1; ret; 
0x0000000000030f3b: add eax, 0x64d1c; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002fdac: add eax, 0x64d7f; divsd xmm0, xmm1; ret; 
0x0000000000030e5b: add eax, 0x64e5c; divss xmm0, xmm1; ret; 
0x000000000002feb3: add eax, 0x64e88; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000003032c: add eax, 0x65547; divss xmm0, xmm1; ret; 
0x000000000002febb: add eax, 0x65560; add rsp, 0x28; ret; 
0x0000000000030438: add eax, 0x6580b; add rsp, 0x18; ret; 
0x0000000000030430: add eax, 0x65827; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002569d: add eax, 0x662be; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002e7f7: add eax, 0x66334; ret; 
0x000000000002d2c7: add eax, 0x664a4; pop rbx; ret; 
0x000000000002e392: add eax, 0x667a1; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002e1f0: add eax, 0x66993; ret; 
0x000000000002cd4c: add eax, 0x66a0f; pop rbx; ret; 
0x000000000002e1e6: add eax, 0x670d5; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002da04: add eax, 0x67127; ret; 
0x000000000002e661: add eax, 0x673c6; ret; 
0x000000000002e463: add eax, 0x67424; ret; 
0x000000000002e459: add eax, 0x6774e; jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002db0b: add eax, 0x67780; ret; 
0x000000000002bde6: add eax, 0x67985; add rsp, 0x10; pop rbx; ret; 
0x000000000002bd47: add eax, 0x67a14; add rsp, 0x10; pop rbx; ret; 
0x000000000002bc9e: add eax, 0x67acd; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002b812: add eax, 0x67f49; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002ce8e: add eax, 0x68155; subsd xmm0, xmm1; ret; 
0x000000000002ce6f: add eax, 0x68174; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002b33a: add eax, 0x68431; add rsp, 0x10; pop rbx; ret; 
0x000000000002cd41: add eax, 0x68542; test ebx, ebx; je 0x2cd51; xorps xmm0, xmmword ptr [rip + 0x66a0f]; pop rbx; ret; 
0x000000000002d406: add eax, 0x6867d; subss xmm0, xmm1; ret; 
0x000000000002d3e7: add eax, 0x6869c; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002c276: add eax, 0x688b5; ret; 
0x000000000002c260: add eax, 0x688cb; ret; 
0x000000000005d865: add eax, 0x68b8c3; add byte ptr [rax], al; syscall; 
0x000000000002a82f: add eax, 0x68f2c; ret; 
0x000000000002b98d: add eax, 0x691b6; pop rbx; ret; 
0x000000000002b21f: add eax, 0x69904; addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002bb13: add eax, 0x69d6c; pop rbx; ret; 
0x000000000002b227: add eax, 0x69d9c; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b090: add eax, 0x69f0b; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab59: add eax, 0x69fea; ret; 
0x000000000002aebb: add eax, 0x6a118; add rsp, 0x18; ret; 
0x000000000002ab51: add eax, 0x6a472; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002ab0d: add eax, 0x6a48e; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002af6c: add eax, 0x6aaf3; add rsp, 0x18; ret; 
0x000000000002acf2: add eax, 0x6ad5d; ret; 
0x000000000002acea: add eax, 0x6ad69; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x00000000000293f8: add eax, 0x6b8e3; add rsp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000005d85d: add eax, 0x6bb8c3; add byte ptr [rax], al; syscall; 
0x0000000000029431: add eax, 0x6c5f2; add rsp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000002f550: add eax, 0x6e0f4866; ret 0x8b48; 
0x000000000005d981: add eax, 0x6eb8c3; add byte ptr [rax], al; syscall; 
0x00000000000274f7: add eax, 0x6f13a; ret; 
0x0000000000026f40: add eax, 0x6fa83; ret; 
0x00000000000266cf: add eax, 0x6ff36; cmove rax, rdx; ret; 
0x0000000000026778: add eax, 0x7024b; ret; 
0x0000000000028168: add eax, 0x71d83; ret; 
0x0000000000026a5a: add eax, 0x721a1; ret; 
0x0000000000026a95: add eax, 0x72fa6; cmp rdi, rax; setne al; movzx eax, al; and eax, edx; ret; 
0x0000000000022fbe: add eax, 0x73561; ret; 
0x000000000002817c: add eax, 0x73e97; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000274eb: add eax, 0x74958; test rax, rax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000024677: add eax, 0x74daf883; add eax, 0xebf86348; mov r8d, 0x11a; syscall; 
0x000000000005d356: add eax, 0x74f0f883; test byte ptr [rax + 0x63], 0xf8; call 0x17230; pop rdx; ret; 
0x000000000004081a: add eax, 0x75105839; int1; pop rbx; ret; 
0x000000000005640f: add eax, 0x75caffa4; sti; ret; 
0x000000000002297e: add eax, 0x75eaf883; adc bh, byte ptr [rsi + 9]; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000229d1: add eax, 0x75eaf883; xor al, byte ptr [rbp + 0x31]; leave; mov rax, r8; mov rdx, r9; syscall; 
0x000000000001bf69: add eax, 0x777f2; add rsp, 0x18; movaps xmm2, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000213e3: add eax, 0x779b0; ret; 
0x00000000000213bb: add eax, 0x779d0; ret; 
0x0000000000023a90: add eax, 0x78393; pop rdx; ret; 
0x0000000000023a3a: add eax, 0x783d9; pop rax; ret; 
0x00000000000239ec: add eax, 0x78423; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000239df: add eax, 0x78430; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000001bcd0: add eax, 0x78e53; pop rdx; subsd xmm0, xmm2; ret; 
0x000000000002244c: add eax, 0x7998f; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x0000000000035f4c: add eax, 0x7cdb3fff; and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000035ecd: add eax, 0x7f; shl eax, 0x17; movd xmm2, eax; mulss xmm0, xmm2; ret; 
0x000000000002f92b: add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f856: add eax, 0x80000000; movss dword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x0000000000045dca: add eax, 0x8102e083; loope 0x45d51; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x000000000004cae1: add eax, 0x83c08941; clc; test dword ptr [rdi], 0x9385; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000043d90: add eax, 0x85c38948; sal byte ptr [rbp + 0x56], 0xb8; mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x00000000000580bd: add eax, 0x87b8b48; call qword ptr [rbx]; 
0x0000000000024065: add eax, 0x8908ff83; ret; 
0x00000000000490c2: add eax, 0x89480000; ret 0x894c; 
0x0000000000044adc: add eax, 0x8948fffd; ret; 
0x000000000003829e: add eax, 0x894c5300; ret; 
0x0000000000043094: add eax, 0x8b440000; and byte ptr [rax - 0x77], cl; ret; 
0x00000000000614db: add eax, 0x8b480000; mov esp, 0x8824; add al, ch; ret; 
0x0000000000052d3e: add eax, 0x8d481d77; or eax, 0x432d0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000407cb: add eax, 0x8d485a00; add eax, 0x5b4fb; ret; 
0x000000000003e490: add eax, 0xa0; ret; 
0x0000000000021538: add eax, 0xb60fd001; add al, 6; sar eax, cl; and eax, 1; ret; 
0x000000000005d421: add eax, 0xb8c78948; jno 0x5d428; add byte ptr [rax], al; syscall; 
0x00000000000446d4: add eax, 0xb8c78948; push 0; add byte ptr [rax], al; syscall; 
0x000000000005a4e5: add eax, 0xb8ff3148; cmp al, 0; add byte ptr [rax], al; syscall; 
0x000000000005a4dd: add eax, 0xbb8c3; add byte ptr [rax], al; syscall; 
0x000000000002bfc7: add eax, 0xc0580ff3; ret; 
0x0000000000035a06: add eax, 0xc0854800; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x000000000004de11: add eax, 0xc089445a; pop rbx; pop rbp; ret; 
0x000000000004eb6f: add eax, 0xc089445b; pop rbp; pop r12; ret; 
0x0000000000043a30: add eax, 0xc0ff4800; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000002b84a: add eax, 0xc1580ff2; ret; 
0x000000000002b9b9: add eax, 0xc1580ff3; ret; 
0x000000000003b51e: add eax, 0xc7b60f40; ret; 
0x00000000000244e8: add eax, 0xca8949c3; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x0000000000037883: add eax, 0xd0f74800; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x0000000000035ae4: add eax, 0xd2854800; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x000000000002fa94: add eax, 0xd8d4800; ret; 
0x0000000000037a01: add eax, 0xd9ddfdd9; ret; 
0x000000000001b230: add eax, 0xdaf88348; jne 0x1b241; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b265: add eax, 0xdaf88348; jne 0x1b276; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b29d: add eax, 0xdaf88348; jne 0x1b2ae; mov esi, 1; mov rax, r8; syscall; 
0x000000000004d3da: add eax, 0xdaf88348; jne 0x4d3a9; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004d434: add eax, 0xdaf88348; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d434: add eax, 0xdaf88348; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004de03: add eax, 0xdaf88348; jne 0x4de12; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004eb61: add eax, 0xdaf88348; jne 0x4eb70; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f7c3: add eax, 0xdaf88348; jne 0x4f7d2; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f8ab: add eax, 0xdaf88348; jne 0x4f8ba; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005071b: add eax, 0xdaf88348; jne 0x5072a; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000050841: add eax, 0xdaf88348; jne 0x50850; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000569a7: add eax, 0xdaf88348; jne 0x569b5; xor esi, esi; mov rax, r9; syscall; 
0x00000000000569fe: add eax, 0xdaf88348; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000569fe: add eax, 0xdaf88348; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000056c44: add eax, 0xdaf88348; jne 0x56c33; xor esi, esi; mov rax, r12; syscall; 
0x00000000000570f0: add eax, 0xdaf88348; jne 0x570fc; mov rax, r8; syscall; 
0x0000000000057126: add eax, 0xdaf88348; jne 0x57132; mov rax, r8; syscall; 
0x000000000005718c: add eax, 0xdaf88348; jne 0x571bb; mov rax, r8; syscall; 
0x00000000000571f5: add eax, 0xdaf88348; jne 0x57201; mov rax, r8; syscall; 
0x0000000000057273: add eax, 0xdaf88348; jne 0x57282; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000572d2: add eax, 0xdaf88348; jne 0x572bd; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000005732c: add eax, 0xdaf88348; jne 0x5733b; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000573a0: add eax, 0xdaf88348; jne 0x573af; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000057366: add eax, 0xdaf88348; jne 0x573c2; mov esi, 1; mov rax, r9; syscall; 
0x00000000000573ef: add eax, 0xdaf88348; jne 0x573fe; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576dd: add eax, 0xdaf88348; jne 0x576e9; mov rax, r8; syscall; 
0x00000000000576dd: add eax, 0xdaf88348; jne 0x576e9; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000057728: add eax, 0xdaf88348; jne 0x57734; mov rax, r8; syscall; 
0x00000000000577b7: add eax, 0xdaf88348; jne 0x577c3; mov rax, r8; syscall; 
0x00000000000577b7: add eax, 0xdaf88348; jne 0x577c3; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000577e3: add eax, 0xdaf88348; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000577e3: add eax, 0xdaf88348; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057ab1: add eax, 0xdaf88348; jne 0x57acc; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b70: add eax, 0xdaf88348; jne 0x57b8c; mov esi, 3; mov rax, rbx; syscall; 
0x0000000000057b49: add eax, 0xdaf88348; jne 0x57b8c; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dd3: add eax, 0xdaf88348; jne 0x57ddf; mov rax, r8; syscall; 
0x0000000000057dd3: add eax, 0xdaf88348; jne 0x57ddf; mov rax, r8; syscall; ret; 
0x0000000000057e22: add eax, 0xdaf88348; jne 0x57e2e; mov rax, r8; syscall; 
0x0000000000057e22: add eax, 0xdaf88348; jne 0x57e2e; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057f77: add eax, 0xdaf88348; jne 0x57f20; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000058023: add eax, 0xdaf88348; jne 0x58037; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000005853b: add eax, 0xdaf88348; jne 0x5854a; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000059149: add eax, 0xdaf88348; jne 0x59158; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000592d0: add eax, 0xdaf88348; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d0: add eax, 0xdaf88348; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000005937c: add eax, 0xdaf88348; jne 0x593a8; mov esi, 1; mov rax, r8; syscall; 
0x000000000005959e: add eax, 0xdaf88348; jne 0x595af; mov esi, 1; mov rax, r8; syscall; 
0x0000000000059fa3: add eax, 0xdaf88348; jne 0x59fb2; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005a4bd: add eax, 0xdaf88348; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; 
0x000000000005a4bd: add eax, 0xdaf88348; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000038253: add eax, 0xe0894c00; pop r12; ret; 
0x00000000000246aa: add eax, 0xe0ba0f41; or esi, dword ptr [rbx + 0x11]; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000003792e: add eax, 0xe0d9d9dd; ret; 
0x000000000003b013: add eax, 0xe8c78948; adc al, 0xc2; std; lcall [rdx + 0x5b]; pop rbp; ret; 
0x0000000000024022: add eax, 0xe8c78948; add eax, 0x5affff32; ret; 
0x0000000000023d3f: add eax, 0xe8c78948; call 0x5b023c7d; ret; 
0x000000000002423f: add eax, 0xe8c78948; call 0x5b024178; ret; 
0x000000000005daea: add eax, 0xe8c78948; cmp eax, 0x5afffb97; ret; 
0x0000000000022dea: add eax, 0xe8c78948; cmp eax, 0x5affff44; ret; 
0x000000000003af80: add eax, 0xe8c78948; cmpsd dword ptr [rsi], dword ptr [rdi]; ret 0xfffd; 
0x000000000003adbe: add eax, 0xe8c78948; imul eax, esp, 0xc35afffd; push rax; mov eax, 0x1b; syscall; 
0x000000000002447a: add eax, 0xe8c78948; lodsd eax, dword ptr [rsi]; sub eax, 0xc35affff; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x00000000000390df: add eax, 0xe8c78948; loope 0x390e4; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x000000000004b161: add eax, 0xe8c78948; mov al, 0xfc; lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x000000000005df76: add eax, 0xe8c78948; mov cl, 0x92; sti; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x000000000004bf1a: add eax, 0xe8c78948; or eax, 0x5afffcb3; ret; 
0x000000000004b21a: add eax, 0xe8c78948; or eax, 0x5afffcc0; ret; 
0x0000000000023d1a: add eax, 0xe8c78948; or eax, 0x5affff35; ret; 
0x000000000005da1c: add eax, 0xe8c78948; or ebx, dword ptr [rax - 0x3ca50005]; push rax; mov eax, 0x56; syscall; 
0x000000000005e1bf: add eax, 0xe8c78948; push 0x5afffb90; ret; 
0x000000000003b1bf: add eax, 0xe8c78948; push 0x5afffdc0; ret; 
0x000000000005d966: add eax, 0xe8c78948; rcr dword ptr [rax - 0x3ca50005], 0xb8; jns 0x5d974; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000004b364: add eax, 0xe8c78948; ret; 
0x000000000005cf0a: add eax, 0xe8c78948; sbb eax, 0x5afffba3; ret; 
0x000000000003f00a: add eax, 0xe8c78948; sbb eax, 0x5afffd82; ret; 
0x000000000002400a: add eax, 0xe8c78948; sbb eax, 0x5affff32; ret; 
0x0000000000023e18: add eax, 0xe8c78948; sysenter; 
0x00000000000241db: add eax, 0xe8c78948; xor dil, r15b; lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x0000000000023cf6: add eax, 0xe8c78948; xor dword ptr [rip - 0x3ca50001], esi; push rax; mov eax, 0x7d; syscall; 
0x0000000000022f4e: add eax, 0xe8f86348; fld dword ptr [rdx - 1]; lcall [rdx - 0x3d]; push rax; mov eax, 0x43; syscall; 
0x00000000000509d1: add eax, 0xe8f86348; push rsi; push -0x3ca50004; push rax; mov eax, 0x52; syscall; 
0x00000000000244f9: add eax, 0xe9c78948; sub eax, 0xff89ffff; push rax; mov eax, 0x7b; syscall; 
0x000000000003ea6d: add eax, 0xeb10e7c1; add eax, ecx; out 8, eax; or eax, edi; ret; 
0x0000000000026c5c: add eax, 0xebc0ff48; out dx, al; cmp cl, 0x20; je 0x26c5d; ret; 
0x000000000001bdc2: add eax, 0xebca570f; add ecx, dword ptr [rdi]; push rdi; ret 0xf66; 
0x000000000003c7a6: add eax, 0xebd00148; mov esp, 0xffc88341; mov eax, r8d; ret; 
0x000000000002467c: add eax, 0xebf86348; mov r8d, 0x11a; syscall; 
0x000000000005d3a0: add eax, 0xebf86348; xor dword ptr [rdx + 0x21], edi; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000005d631: add eax, 0xebfa6348; sub eax, 0x48b8; add byte ptr [rsi + 1], bh; syscall; 
0x000000000004c8e3: add eax, 0xebfa6348; xor byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000373d0: add eax, 0xf486600; outsb dx, byte ptr [rsi]; ret; 
0x0000000000057733: add eax, 0xf70c538b; ret 0xffff; 
0x000000000004bd3d: add eax, 0xfa8948c3; mov r10d, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005b8e6: add eax, 0xfbb944e8; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005772e: add eax, 0xfc0894c; add eax, 0xf70c538b; ret 0xffff; 
0x000000000005da03: add eax, 0xfc47eee8; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x18; ret; 
0x000000000005b817: add eax, 0xfc69dae8; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x000000000005b7bb: add eax, 0xfc6a36e8; dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x00000000000485b3: add eax, 0xfccaa7e8; dec dword ptr [rax - 0x7d]; ret; 
0x000000000004cf3b: add eax, 0xfd52b6e8; dec dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x000000000004419b: add eax, 0xfde056e8; dec ecx; ret; 
0x0000000000043f46: add eax, 0xfde2abe8; dec ecx; ret; 
0x000000000005a4cd: add eax, 0xfe8948c3; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000003c971: add eax, 0xff480c74; ret; 
0x0000000000045b65: add eax, 0xff482fff; ret; 
0x000000000004bd6f: add eax, 0xff6348c3; push rax; mov eax, 0x24; syscall; 
0x000000000005d86d: add eax, 0xff6348c3; push rax; mov eax, 0x73; syscall; 
0x000000000005d989: add eax, 0xff6348c3; push rax; mov eax, 0x7c; syscall; 
0x000000000005d3f9: add eax, 0xffce8348; mov rdi, rax; mov eax, 0x72; syscall; 
0x000000000002b870: add eax, 0xfffdbbe9; call qword ptr [rbx - 0x77]; 
0x0000000000018701: add eax, 1; cmp byte ptr [rax], 0; jne 0x18700; sub rax, rdi; ret; 
0x0000000000017f99: add eax, 1; mov byte ptr [rax], cl; test cl, cl; jne 0x17f90; ret; 
0x00000000000407c4: add eax, 2; add dword ptr [rip + 0x5b88b], eax; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x00000000000349f2: add eax, 2; mov eax, r8d; ret; 
0x00000000000213dd: add eax, 4; ret; 
0x00000000000196f4: add eax, 4; test edx, edx; jne 0x196f0; sub rax, rdi; sar rax, 2; ret; 
0x000000000005f3b3: add eax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x00000000000228a3: add eax, dword ptr [r8]; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000001f51a: add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x0000000000022cf6: add eax, dword ptr [rax - 0x60fedb9c]; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000018538: add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000052624: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x438e2; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000054853: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; or eax, 0x418bf; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000028759: add eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbx + 0x40]; 
0x000000000003a9a7: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x00000000000606b7: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x000000000004d13c: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000057b78: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; syscall; 
0x000000000005a5b2: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000005041e: add eax, dword ptr [rax]; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x0000000000021b9d: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000040acf: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; ret; 
0x00000000000262f6: add eax, dword ptr [rax]; add byte ptr [rcx - 1], al; ret 0xdceb; 
0x000000000002e3ec: add eax, dword ptr [rax]; add byte ptr [rcx], ch; ret 0x8948; 
0x0000000000035a9a: add eax, dword ptr [rax]; add byte ptr [rdi + 0xe], bh; movsd qword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000005c5e8: add eax, dword ptr [rax]; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x0000000000017f27: add eax, dword ptr [rax]; add rax, rbx; pop rbx; ret; 
0x000000000001780c: add eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000000599f2: add eax, dword ptr [rax]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x0000000000061a90: add eax, dword ptr [rax]; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x00000000000607e6: add eax, dword ptr [rax]; call rax; 
0x000000000005ef2f: add eax, dword ptr [rax]; cmp rdi, rax; je 0x5ef41; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x000000000001e5b9: add eax, dword ptr [rax]; inc eax; cdqe; pop rdx; ret; 
0x000000000005e7a4: add eax, dword ptr [rax]; lea rdx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x000000000002277d: add eax, dword ptr [rax]; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022102: add eax, dword ptr [rax]; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000005f168: add eax, dword ptr [rax]; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005f161: add eax, dword ptr [rax]; mov qword ptr [rip + 0x3ce46], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000023219: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 8]; ret; 
0x0000000000021e63: add eax, dword ptr [rax]; mov rax, qword ptr [rdi]; ret; 
0x0000000000018061: add eax, dword ptr [rax]; mov rax, r12; pop r12; ret; 
0x0000000000022e43: add eax, dword ptr [rax]; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005eb4e: add eax, dword ptr [rax]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023010: add eax, dword ptr [rax]; pop rax; pop rbx; pop rbp; ret; 
0x0000000000060874: add eax, dword ptr [rax]; pop rdx; pop rbp; pop r12; jmp rax; 
0x000000000005e7b3: add eax, dword ptr [rax]; ret; 
0x000000000005b891: add eax, dword ptr [rax]; test rax, rax; je 0x5b8aa; call rax; 
0x00000000000228a4: add eax, dword ptr [rax]; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003d9a7: add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x000000000004df58: add eax, dword ptr [rbp + 0x31]; rol byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x0000000000056ece: add eax, dword ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x000000000005a411: add eax, dword ptr [rbx - 0x3ca50038]; mov eax, 0x18; syscall; 
0x0000000000053990: add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm0; ret; 
0x000000000005f35f: add eax, dword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005a918: add eax, dword ptr [rcx - 9]; fadd dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000004cd6d: add eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000004d875: add eax, dword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000023237: add eax, dword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000056bdf: add eax, dword ptr [rdx + rcx*8]; ret; 
0x0000000000060870: add eax, dword ptr [rip + 0x3b12a]; pop rdx; pop rbp; pop r12; jmp rax; 
0x00000000000607e2: add eax, dword ptr [rip + 0x3b1b8]; call rax; 
0x000000000006061f: add eax, dword ptr [rsi]; mov rdx, rax; xor eax, eax; call rdx; 
0x00000000000228a2: add eax, dword ptr cs:[r8]; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000002cd7a: add eax, eax; cvtsi2sd xmm0, eax; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000002d2f2: add eax, eax; cvtsi2ss xmm0, eax; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x000000000002c2d4: add eax, eax; je 0x2c2dd; mov eax, 0x3f800000; movd xmm0, eax; ret; 
0x000000000003aa55: add eax, eax; jmp rax; 
0x000000000005a42e: add eax, eax; ret; 
0x0000000000029511: add eax, eax; sete r8b; mov eax, r8d; ret; 
0x000000000005a913: add eax, eax; test esi, esi; je 0x5a91c; neg r8d; mov eax, r8d; ret; 
0x0000000000055800: add eax, ebp; adc dh, byte ptr [rdi + rdi*8 - 0x1f76b301]; pop r12; ret; 
0x0000000000048c25: add eax, ebp; cmc; ret; 
0x000000000001855b: add eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000003a11b: add eax, ebp; ret; 
0x0000000000016719: add eax, ebx; loope 0x166fb; ret 0x8341; 
0x000000000001893c: add eax, ebx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x0000000000018575: add eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017f2a: add eax, ebx; pop rbx; ret; 
0x000000000001e6d6: add eax, ecx; jmp rax; 
0x0000000000024364: add eax, ecx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x000000000003ea72: add eax, ecx; out 8, eax; or eax, edi; ret; 
0x0000000000026209: add eax, edi; jmp rax; 
0x00000000000215ac: add eax, edx; jmp rax; 
0x0000000000028095: add eax, edx; mov byte ptr [r8 - 3], al; mov rax, r8; ret; 
0x0000000000027676: add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x000000000002df4d: add eax, edx; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x0000000000021539: add eax, edx; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; ret; 
0x000000000004f282: add eax, edx; pop rbx; ret; 
0x0000000000023a8a: add eax, esi; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x000000000003d9a5: add eax, esi; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x0000000000017150: add eax, esi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000381e5: add ebp, dword ptr [rdi]; jne 0x381d8; mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x000000000005f3ab: add ebp, eax; cmp rax, r13; je 0x5f36f; add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x00000000000523e2: add ebp, edi; inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000028365: add ebx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000005769e: add ebx, dword ptr [rdx + 0x5b]; pop rbp; jmp rax; 
0x0000000000060600: add ebx, dword ptr [rsi]; shr r15, 3; sub r15, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x000000000002835b: add ebx, eax; mov qword ptr [rip + 0x71b94], rbx; add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000038048: add ebx, ecx; stc; ret; 
0x000000000001888f: add ecx, 1; test sil, r8b; jne 0x18868; sub eax, edi; ret; 
0x0000000000017e0d: add ecx, dword ptr [rax + 1]; ret; 
0x000000000001b8de: add ecx, dword ptr [rax - 0x77]; and al, 0x30; mov eax, 0x81; syscall; 
0x0000000000029f72: add ecx, dword ptr [rax - 0x77]; ret 0x840f; 
0x000000000001fd4b: add ecx, dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000005f360: add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000023969: add ecx, dword ptr [rax - 0x77]; ret; 
0x000000000004538c: add ecx, dword ptr [rax - 0x77]; ror byte ptr [rcx + 0x39], 1; ret 0x1e76; 
0x0000000000045c30: add ecx, dword ptr [rax - 1]; ret 0x8841; 
0x000000000002722d: add ecx, dword ptr [rax - 1]; ret 0xff48; 
0x0000000000048a7e: add ecx, dword ptr [rax - 1]; ret; 
0x000000000004b954: add ecx, dword ptr [rbp + 0x42890146]; sbb byte ptr [rcx + rbp - 0x30], al; ret; 
0x000000000004637f: add ecx, dword ptr [rcx - 0x7cb6fbb0]; rol byte ptr [rbx + rbp*8], 0xd9; mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000000060605: add ecx, dword ptr [rcx - 0x7d]; out dx, eax; add dword ptr [rdx - 0x2d], esi; sub rbx, 8; call qword ptr [rbx]; 
0x000000000003ea95: add ecx, dword ptr [rdi]; mov bh, 0xc7; ret; 
0x00000000000286de: add ecx, dword ptr [rdi]; mov dh, 0x1c; add dh, dh; ret; 
0x000000000001bdc7: add ecx, dword ptr [rdi]; push rdi; ret 0xf66; 
0x000000000003153a: add ecx, dword ptr [rdi]; push rdi; ror byte ptr [rax - 0x7d], 0xc4; adc byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x0000000000035a0c: add ecx, dword ptr [rdi]; sub cl, al; ret; 
0x0000000000025b50: add ecx, dword ptr [rdi]; xchg byte ptr [rsi + 0x31fffffe], al; imul al; mov eax, 0x89fffffa; ret 0x3d; 
0x000000000005f49c: add ecx, dword ptr [rsp]; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000003a2e7: add ecx, ecx; cmp r9d, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000044d55: add edi, 0x88; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000001e7f5: add edi, 4; bswap eax; mov dword ptr [rdi - 4], eax; dec esi; jne 0x1e7f2; ret; 
0x0000000000044d47: add edi, 8; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000000450d8: add edi, dword ptr [rbx*2 - 0xb7f68b]; ret; 
0x0000000000021e9b: add edi, eax; cmp byte ptr [r10], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x7a141]; syscall; 
0x0000000000044c46: add edi, ebp; dec dword ptr [rax - 0x77]; ret; 
0x000000000005cec9: add edi, edi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000003ef27: add edi, edi; ret; 
0x0000000000017f95: add edx, 1; add rax, 1; mov byte ptr [rax], cl; test cl, cl; jne 0x17f90; ret; 
0x0000000000019f8f: add edx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x00000000000195ef: add edx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x000000000005144c: add edx, edi; jmp rdx; 
0x000000000005c5f3: add edx, esi; jmp rdx; 
0x00000000000592b9: add esi, dword ptr [rbp + 0x25]; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005750c: add esi, dword ptr [rbp + 7]; mov rax, r12; syscall; 
0x00000000000220d4: add esi, dword ptr [rbp - 0x1c]; mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x00000000000564e1: add esi, ebx; stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000028146: add esi, edi; ret 0x1c75; 
0x0000000000056fab: add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000004d6ac: add esi, edx; movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r15d; mov rax, r13; mov rsi, rbp; syscall; 
0x0000000000017fb8: add esi, esi; ret 0x7507; 
0x000000000005f4a4: add esp, 0x100; ret; 
0x000000000005f287: add esp, 0x108; pop rbx; pop rbp; ret; 
0x000000000004dc11: add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000000038950: add esp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x00000000000274c8: add esp, 0x10; mov rax, r12; pop rbx; pop r12; pop r13; ret; 
0x0000000000027627: add esp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000036882: add esp, 0x10; movaps xmm0, xmm2; pop rbx; ret; 
0x0000000000021a9d: add esp, 0x10; pop rbp; ret; 
0x00000000000430f8: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003153f: add esp, 0x10; pop rbx; pop rbp; pop r14; ret; 
0x000000000001cdc9: add esp, 0x10; pop rbx; ret; 
0x00000000000379b1: add esp, 0x10; ret; 
0x000000000005a3eb: add esp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005f16f: add esp, 0x110; pop rbx; ret; 
0x000000000003f5ec: add esp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000054f59: add esp, 0x118; ret; 
0x000000000003b1ae: add esp, 0x128; ret; 
0x00000000000387e4: add esp, 0x130; pop rbp; ret; 
0x000000000003872f: add esp, 0x140; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c426: add esp, 0x148; ret; 
0x00000000000220df: add esp, 0x150; pop rbx; ret; 
0x000000000005e12e: add esp, 0x158; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000044ddf: add esp, 0x160; pop rbp; ret; 
0x000000000002387f: add esp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x00000000000509a7: add esp, 0x18; dec eax; ret; 
0x000000000001cc77: add esp, 0x18; fxch st(1); ret; 
0x0000000000039d58: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000045466: add esp, 0x18; mov eax, r9d; pop rbx; pop rbp; ret; 
0x000000000004b28c: add esp, 0x18; mov rax, -0x26; pop rbp; pop r12; ret; 
0x000000000004b27d: add esp, 0x18; mov rsi, r12; mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x000000000001bf6f: add esp, 0x18; movaps xmm2, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001d2d2: add esp, 0x18; movq rax, xmm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x0000000000023ec6: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x000000000004ec04: add esp, 0x18; movzx eax, al; pop rbx; pop r12; neg eax; ret; 
0x00000000000293fe: add esp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000029437: add esp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000022149: add esp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000002320b: add esp, 0x18; pop rbx; pop r12; ret; 
0x0000000000049ac2: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000466ba: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r14; ret; 
0x000000000002aa8d: add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001725f: add esp, 0x18; ret; 
0x000000000005e3e9: add esp, 0x190; jmp rax; 
0x00000000000388ab: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005cbcc: add esp, 0x190; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d904: add esp, 0x198; pop rbx; pop rbp; ret; 
0x000000000005532d: add esp, 0x1f8; ret; 
0x000000000002d73d: add esp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x0000000000037555: add esp, 0x20; fmulp st(1); fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x000000000003a248: add esp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000003918f: add esp, 0x20; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000041c21: add esp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000003c9ad: add esp, 0x20; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000510af: add esp, 0x20; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000002b451: add esp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001c911: add esp, 0x20; movaps xmm1, xmm2; pop rbx; ret; 
0x000000000003a7e9: add esp, 0x20; pop rbp; pop r12; pop r14; ret; 
0x0000000000031837: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000037fc7: add esp, 0x20; pop rbx; pop rbp; pop r14; ret; 
0x000000000001bded: add esp, 0x20; pop rbx; ret; 
0x00000000000593be: add esp, 0x20; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ba21: add esp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000001e7de: add esp, 0x210; pop rbx; ret; 
0x000000000003d974: add esp, 0x228; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004c71c: add esp, 0x258; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001c197: add esp, 0x28; fchs; fxch st(1); ret; 
0x000000000002b00e: add esp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000056bc0: add esp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000004c14a: add esp, 0x28; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000056572: add esp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000001bbc5: add esp, 0x28; pop rbx; pop r14; ret; 
0x00000000000513a9: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000026d6f: add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000000001bd4c: add esp, 0x28; ret; 
0x0000000000043828: add esp, 0x28; sar eax, 0x1f; ret; 
0x000000000004d649: add esp, 0x30; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000004441b: add esp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x000000000005d67f: add esp, 0x30; pop rbp; ret; 
0x000000000001be71: add esp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000361f0: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001cc38: add esp, 0x30; pop rbx; ret; 
0x0000000000037aab: add esp, 0x30; ret; 
0x000000000001bec9: add esp, 0x38; fchs; fxch st(1); ret; 
0x000000000003755e: add esp, 0x38; fmulp st(1); ret; 
0x000000000001d3e6: add esp, 0x38; fxch st(1); ret; 
0x0000000000031347: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000183ba: add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000018ac6: add esp, 0x38; ret; 
0x000000000005cab4: add esp, 0x40; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000005b9b7: add esp, 0x40; pop rbp; ret; 
0x000000000002b62c: add esp, 0x40; pop rbx; ret; 
0x0000000000041879: add esp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c58f: add esp, 0x48; fxch st(1); ret; 
0x0000000000061e76: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000037434: add esp, 0x48; pop rbx; pop rbp; ret; 
0x000000000001c053: add esp, 0x48; ret; 
0x000000000004c0a0: add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022b14: add esp, 0x50; pop rbx; ret; 
0x000000000001c146: add esp, 0x58; fxch st(1); ret; 
0x000000000001ffda: add esp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003af9f: add esp, 0x58; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022ba7: add esp, 0x58; ret; 
0x000000000002edef: add esp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000024465: add esp, 0x60; pop rbx; ret; 
0x0000000000023bb4: add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000022a63: add esp, 0x68; ret; 
0x00000000000232be: add esp, 0x840; mov rax, r12; pop r12; ret; 
0x00000000000392c1: add esp, 0x90; pop rbp; ret; 
0x0000000000043e2c: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000000213b1: add esp, 0x90; pop rbx; ret; 
0x000000000004bf05: add esp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000020896: add esp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004c28b: add esp, 0x98; pop rbp; pop r12; ret; 
0x0000000000041130: add esp, 0x98; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002f7e9: add esp, 0x98; ret; 
0x000000000005a611: add esp, 0xa0; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000059991: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022dbd: add esp, 0xa0; pop rbx; ret; 
0x000000000001b904: add esp, 0xa0; xor eax, eax; pop rbx; ret; 
0x0000000000021b5f: add esp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000004c2f9: add esp, 0xa8; pop rbp; pop r12; ret; 
0x000000000005766f: add esp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000004c37a: add esp, 0xb8; pop rbx; pop r12; ret; 
0x0000000000051166: add esp, 0xb8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004cc42: add esp, 0xd8; pop rbx; pop rbp; ret; 
0x00000000000231c9: add esp, 0xd8; ret; 
0x0000000000023cb9: add esp, 0xe0; pop rbx; ret; 
0x0000000000055f84: add esp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000051427: add esp, 0xf8; ret; 
0x00000000000194ba: add esp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x00000000000181ff: add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000189a8: add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000019072: add esp, 8; pop rbp; pop r12; ret; 
0x0000000000017dd3: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000171fb: add esp, 8; pop rbx; pop rbp; ret; 
0x000000000001780f: add esp, 8; ret; 
0x0000000000018489: add esp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000019941: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000022d0e: add esp, dword ptr [rip + 0xc00]; ret; 
0x0000000000018316: add esp, eax; mov rax, r12; pop r12; ret; 
0x0000000000028eb7: add esp, esi; cmp byte ptr [rsi], 0; je 0x28ebf; hlt; sub rax, rdx; ret; 
0x0000000000027af1: add esp, esi; ret; 
0x0000000000028ebd: add esp, esi; sub rax, rdx; ret; 
0x0000000000044768: add qword ptr [r8], r8; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x00000000000508e0: add qword ptr [rax - 0x77], rcx; or eax, 0x48a5f; mov byte ptr [rdx], dil; ret; 
0x00000000000508a7: add qword ptr [rax - 0x77], rcx; or eax, 0x48a98; mov byte ptr [rdx], dil; ret; 
0x0000000000022453: add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000004ebc7: add qword ptr [rax - 0x77], rcx; sub byte ptr [r8 + r9*4 + 2], r8b; ret; 
0x0000000000017f92: add qword ptr [rax - 0x7d], rcx; ret 0x4801; 
0x000000000002e51a: add qword ptr [rax], rax; add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000005aa01: add qword ptr [rax], rdx; cmp r8d, 6; mov eax, 6; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x000000000004db3e: add qword ptr [rdi + 8], rsi; ret; 
0x0000000000018315: add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000005f3aa: add r13, rax; cmp rax, r13; je 0x5f36f; add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x000000000004d6ab: add r14, rdx; movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r15d; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000002f855: add r8d, 0x80000000; movss dword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x00000000000349f1: add r8d, 2; mov eax, r8d; ret; 
0x000000000005a912: add r8d, eax; test esi, esi; je 0x5a91c; neg r8d; mov eax, r8d; ret; 
0x00000000000225c8: add rax, 0x34; ret; 
0x000000000003e48f: add rax, 0xa0; ret; 
0x0000000000018700: add rax, 1; cmp byte ptr [rax], 0; jne 0x18700; sub rax, rdi; ret; 
0x0000000000017f98: add rax, 1; mov byte ptr [rax], cl; test cl, cl; jne 0x17f90; ret; 
0x00000000000407c3: add rax, 2; add dword ptr [rip + 0x5b88b], eax; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x00000000000213dc: add rax, 4; ret; 
0x00000000000196f3: add rax, 4; test edx, edx; jne 0x196f0; sub rax, rdi; sar rax, 2; ret; 
0x000000000005f3b2: add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x000000000006061e: add rax, qword ptr [r14]; mov rdx, rax; xor eax, eax; call rdx; 
0x0000000000021e62: add rax, qword ptr [r8]; mov rax, qword ptr [rdi]; ret; 
0x000000000005f35e: add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000004d874: add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000023236: add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000056bde: add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000006086f: add rax, qword ptr [rip + 0x3b12a]; pop rdx; pop rbp; pop r12; jmp rax; 
0x00000000000607e1: add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x0000000000044789: add rax, r10; jmp rax; 
0x000000000003aa54: add rax, r8; jmp rax; 
0x0000000000029510: add rax, rax; sete r8b; mov eax, r8d; ret; 
0x000000000001855a: add rax, rbp; pop rbp; pop r12; pop r13; ret; 
0x000000000001893b: add rax, rbx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x0000000000018574: add rax, rbx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017f29: add rax, rbx; pop rbx; ret; 
0x000000000001e6d5: add rax, rcx; jmp rax; 
0x0000000000024363: add rax, rcx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x0000000000026208: add rax, rdi; jmp rax; 
0x00000000000215ab: add rax, rdx; jmp rax; 
0x000000000002df4c: add rax, rdx; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000004f281: add rax, rdx; pop rbx; ret; 
0x000000000001714f: add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000028364: add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x00000000000605ff: add rbx, qword ptr [r14]; shr r15, 3; sub r15, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x000000000002835a: add rbx, rax; mov qword ptr [rip + 0x71b94], rbx; add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000001888e: add rcx, 1; test sil, r8b; jne 0x18868; sub eax, edi; ret; 
0x0000000000017e0c: add rcx, qword ptr [rax + 1]; ret; 
0x000000000005f49b: add rcx, qword ptr [rsp]; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000003a2e6: add rcx, r9; cmp r9d, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000044d54: add rdi, 0x88; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000001e7f4: add rdi, 4; bswap eax; mov dword ptr [rdi - 4], eax; dec esi; jne 0x1e7f2; ret; 
0x0000000000044d46: add rdi, 8; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005cec8: add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x0000000000017f94: add rdx, 1; add rax, 1; mov byte ptr [rax], cl; test cl, cl; jne 0x17f90; ret; 
0x0000000000019f8e: add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x00000000000195ee: add rdx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x000000000005c5f2: add rdx, r14; jmp rdx; 
0x000000000005144b: add rdx, rdi; jmp rdx; 
0x0000000000056faa: add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000005f4a3: add rsp, 0x100; ret; 
0x000000000005f286: add rsp, 0x108; pop rbx; pop rbp; ret; 
0x000000000004dc10: add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000003894f: add rsp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x00000000000274c7: add rsp, 0x10; mov rax, r12; pop rbx; pop r12; pop r13; ret; 
0x0000000000027626: add rsp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000036881: add rsp, 0x10; movaps xmm0, xmm2; pop rbx; ret; 
0x0000000000021a9c: add rsp, 0x10; pop rbp; ret; 
0x00000000000430f7: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003153e: add rsp, 0x10; pop rbx; pop rbp; pop r14; ret; 
0x000000000001cdc8: add rsp, 0x10; pop rbx; ret; 
0x00000000000379b0: add rsp, 0x10; ret; 
0x000000000005a3ea: add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005f16e: add rsp, 0x110; pop rbx; ret; 
0x000000000003f5eb: add rsp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000054f58: add rsp, 0x118; ret; 
0x000000000003b1ad: add rsp, 0x128; ret; 
0x00000000000387e3: add rsp, 0x130; pop rbp; ret; 
0x000000000003872e: add rsp, 0x140; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c425: add rsp, 0x148; ret; 
0x00000000000220de: add rsp, 0x150; pop rbx; ret; 
0x000000000005e12d: add rsp, 0x158; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000044dde: add rsp, 0x160; pop rbp; ret; 
0x000000000002387e: add rsp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x00000000000509a6: add rsp, 0x18; dec eax; ret; 
0x000000000001cc76: add rsp, 0x18; fxch st(1); ret; 
0x0000000000039d57: add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000045465: add rsp, 0x18; mov eax, r9d; pop rbx; pop rbp; ret; 
0x000000000004b28b: add rsp, 0x18; mov rax, -0x26; pop rbp; pop r12; ret; 
0x000000000004b27c: add rsp, 0x18; mov rsi, r12; mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x000000000001bf6e: add rsp, 0x18; movaps xmm2, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001d2d1: add rsp, 0x18; movq rax, xmm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x0000000000023ec5: add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x000000000004ec03: add rsp, 0x18; movzx eax, al; pop rbx; pop r12; neg eax; ret; 
0x00000000000293fd: add rsp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000029436: add rsp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000022148: add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000002320a: add rsp, 0x18; pop rbx; pop r12; ret; 
0x0000000000049ac1: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000466b9: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r14; ret; 
0x000000000002aa8c: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001725e: add rsp, 0x18; ret; 
0x000000000005e3e8: add rsp, 0x190; jmp rax; 
0x00000000000388aa: add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005cbcb: add rsp, 0x190; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d903: add rsp, 0x198; pop rbx; pop rbp; ret; 
0x000000000005532c: add rsp, 0x1f8; ret; 
0x000000000002d73c: add rsp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x0000000000037554: add rsp, 0x20; fmulp st(1); fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x000000000003a247: add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000003918e: add rsp, 0x20; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000041c20: add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000003c9ac: add rsp, 0x20; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000510ae: add rsp, 0x20; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000002b450: add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001c910: add rsp, 0x20; movaps xmm1, xmm2; pop rbx; ret; 
0x000000000003a7e8: add rsp, 0x20; pop rbp; pop r12; pop r14; ret; 
0x0000000000031836: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000037fc6: add rsp, 0x20; pop rbx; pop rbp; pop r14; ret; 
0x000000000001bdec: add rsp, 0x20; pop rbx; ret; 
0x00000000000593bd: add rsp, 0x20; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ba20: add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000001e7dd: add rsp, 0x210; pop rbx; ret; 
0x000000000003d973: add rsp, 0x228; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004c71b: add rsp, 0x258; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001c196: add rsp, 0x28; fchs; fxch st(1); ret; 
0x000000000002b00d: add rsp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000056bbf: add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000004c149: add rsp, 0x28; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000056571: add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000001bbc4: add rsp, 0x28; pop rbx; pop r14; ret; 
0x00000000000513a8: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000026d6e: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000001bd4b: add rsp, 0x28; ret; 
0x0000000000043827: add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004d648: add rsp, 0x30; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000004441a: add rsp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x000000000005d67e: add rsp, 0x30; pop rbp; ret; 
0x000000000001be70: add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000361ef: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001cc37: add rsp, 0x30; pop rbx; ret; 
0x0000000000037aaa: add rsp, 0x30; ret; 
0x000000000001bec8: add rsp, 0x38; fchs; fxch st(1); ret; 
0x000000000003755d: add rsp, 0x38; fmulp st(1); ret; 
0x000000000001d3e5: add rsp, 0x38; fxch st(1); ret; 
0x0000000000031346: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000183b9: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000018ac5: add rsp, 0x38; ret; 
0x000000000005cab3: add rsp, 0x40; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000005b9b6: add rsp, 0x40; pop rbp; ret; 
0x000000000002b62b: add rsp, 0x40; pop rbx; ret; 
0x0000000000041878: add rsp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c58e: add rsp, 0x48; fxch st(1); ret; 
0x0000000000061e75: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000037433: add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000001c052: add rsp, 0x48; ret; 
0x000000000004c09f: add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022b13: add rsp, 0x50; pop rbx; ret; 
0x000000000001c145: add rsp, 0x58; fxch st(1); ret; 
0x000000000001ffd9: add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003af9e: add rsp, 0x58; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000022ba6: add rsp, 0x58; ret; 
0x000000000002edee: add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000024464: add rsp, 0x60; pop rbx; ret; 
0x0000000000023bb3: add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000022a62: add rsp, 0x68; ret; 
0x00000000000232bd: add rsp, 0x840; mov rax, r12; pop r12; ret; 
0x00000000000392c0: add rsp, 0x90; pop rbp; ret; 
0x0000000000043e2b: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000000213b0: add rsp, 0x90; pop rbx; ret; 
0x000000000004bf04: add rsp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000020895: add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004c28a: add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004112f: add rsp, 0x98; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002f7e8: add rsp, 0x98; ret; 
0x000000000005a610: add rsp, 0xa0; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000059990: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022dbc: add rsp, 0xa0; pop rbx; ret; 
0x000000000001b903: add rsp, 0xa0; xor eax, eax; pop rbx; ret; 
0x0000000000021b5e: add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000004c2f8: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000005766e: add rsp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000004c379: add rsp, 0xb8; pop rbx; pop r12; ret; 
0x0000000000051165: add rsp, 0xb8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004cc41: add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x00000000000231c8: add rsp, 0xd8; ret; 
0x0000000000023cb8: add rsp, 0xe0; pop rbx; ret; 
0x0000000000055f83: add rsp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000051426: add rsp, 0xf8; ret; 
0x00000000000194b9: add rsp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x00000000000181fe: add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000189a7: add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000019071: add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000017dd2: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000171fa: add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001780e: add rsp, 8; ret; 
0x0000000000018488: add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000019940: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000002ac79: addps xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000002e3a5: addps xmm0, xmm0; addsd xmm0, xmm5; ret; 
0x000000000002e5f3: addps xmm0, xmm0; addss xmm0, xmm4; ret; 
0x000000000002bfc9: addps xmm0, xmm0; ret; 
0x000000000002df59: addps xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x0000000000033a0d: addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002e7eb: addps xmm0, xmm1; comisd xmm1, xmm2; jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c26a: addps xmm0, xmm1; comisd xmm2, xmm1; jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x0000000000029368: addps xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002db05: addps xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x67780]; ret; 
0x000000000002b29b: addps xmm0, xmm1; ret; 
0x000000000003391f: addps xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000032ffa: addps xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x0000000000033a11: addps xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000033f92: addps xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034027: addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000002a5cf: addps xmm0, xmm2; ret; 
0x000000000001a5a5: addps xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002e656: addps xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002e5f7: addps xmm0, xmm4; ret; 
0x0000000000029314: addps xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e415: addps xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e3a9: addps xmm0, xmm5; ret; 
0x0000000000029318: addps xmm0, xmm6; ret; 
0x00000000000334f3: addps xmm0, xmm7; ret; 
0x0000000000035adf: addps xmm0, xmmword ptr [rip + 0x5f04a]; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b68: addps xmm0, xmmword ptr [rip + 0x5fd09]; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002da02: addps xmm0, xmmword ptr [rip + 0x67127]; ret; 
0x000000000002c274: addps xmm0, xmmword ptr [rip + 0x688b5]; ret; 
0x000000000002b225: addps xmm0, xmmword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b08e: addps xmm0, xmmword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab57: addps xmm0, xmmword ptr [rip + 0x69fea]; ret; 
0x000000000002aeb9: addps xmm0, xmmword ptr [rip + 0x6a118]; add rsp, 0x18; ret; 
0x000000000002ab0b: addps xmm0, xmmword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002af6a: addps xmm0, xmmword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000002acf0: addps xmm0, xmmword ptr [rip + 0x6ad5d]; ret; 
0x0000000000030f41: addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x00000000000309b3: addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002a649: addps xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x00000000000334ec: addps xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x0000000000033665: addps xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000002bfad: addps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003426c: addps xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000034366: addps xmm1, xmm2; movss dword ptr [rsp + 0x1c], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000033917: addps xmm1, xmm3; addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002e40d: addps xmm1, xmm3; subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e64e: addps xmm1, xmm3; subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002de46: addps xmm1, xmmword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000002acb2: addps xmm1, xmmword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000003391b: addps xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a64d: addps xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x0000000000032ff6: addps xmm2, xmm3; addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000002b28b: addps xmm2, xmmword ptr [rip + 0x6a5e6]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002e38c: addps xmm4, xmm0; movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002e5db: addps xmm5, xmm0; subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x0000000000035ade: addsd xmm0, qword ptr [rip + 0x5f04a]; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x000000000002da01: addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000002c273: addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000002b224: addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b08d: addsd xmm0, qword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab56: addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002aeb8: addsd xmm0, qword ptr [rip + 0x6a118]; add rsp, 0x18; ret; 
0x000000000002ab0a: addsd xmm0, qword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000309b2: addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002ac78: addsd xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000002e3a4: addsd xmm0, xmm0; addsd xmm0, xmm5; ret; 
0x000000000002df5c: addsd xmm0, xmm0; ret; 
0x000000000002df58: addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x0000000000033a0c: addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002e7ea: addsd xmm0, xmm1; comisd xmm1, xmm2; jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c269: addsd xmm0, xmm1; comisd xmm2, xmm1; jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x0000000000029367: addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002db04: addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x67780]; ret; 
0x000000000002b84b: addsd xmm0, xmm1; ret; 
0x000000000003391e: addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000032ff9: addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x0000000000033a10: addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000033f91: addsd xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x000000000002a5ce: addsd xmm0, xmm2; ret; 
0x000000000001a5a4: addsd xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000033922: addsd xmm0, xmm4; ret; 
0x0000000000029313: addsd xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e414: addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e3a8: addsd xmm0, xmm5; ret; 
0x0000000000029317: addsd xmm0, xmm6; ret; 
0x00000000000334f2: addsd xmm0, xmm7; ret; 
0x000000000002de45: addsd xmm1, qword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000002a648: addsd xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x00000000000334eb: addsd xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x000000000002bfac: addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003426b: addsd xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000033916: addsd xmm1, xmm3; addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002e40c: addsd xmm1, xmm3; subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000003391a: addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a64c: addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x0000000000032ff5: addsd xmm2, xmm3; addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000002e38b: addsd xmm4, xmm0; movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x0000000000035b67: addss xmm0, dword ptr [rip + 0x5fd09]; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002af69: addss xmm0, dword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000002acef: addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x0000000000030f40: addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002ae07: addss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000002e5f2: addss xmm0, xmm0; addss xmm0, xmm4; ret; 
0x000000000002bfc8: addss xmm0, xmm0; ret; 
0x000000000002b29a: addss xmm0, xmm1; ret; 
0x0000000000034026: addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000002e655: addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002e5f6: addss xmm0, xmm4; ret; 
0x000000000002acb1: addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x0000000000033664: addss xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x0000000000034365: addss xmm1, xmm2; movss dword ptr [rsp + 0x1c], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000002e64d: addss xmm1, xmm3; subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002b28a: addss xmm2, dword ptr [rip + 0x6a5e6]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002e5da: addss xmm5, xmm0; subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x0000000000015c26: and ah, bl; ret 0x438d; 
0x000000000002540a: and ah, byte ptr [rip - 0x76b60001]; ret 0x8548; 
0x000000000004bd76: and al, 0; add byte ptr [rax], al; syscall; 
0x000000000005ce7f: and al, 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000058cf8: and al, 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000059a33: and al, 0; ret; 
0x00000000000406d0: and al, 0x10; add al, 0; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000024361: and al, 0x10; add rax, rcx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x000000000001c3ae: and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc92: and al, 0x10; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d35b: and al, 0x10; add rsp, 0x28; ret; 
0x000000000001cf0f: and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x000000000001d058: and al, 0x10; add rsp, 0x38; ret; 
0x000000000001c58c: and al, 0x10; add rsp, 0x48; fxch st(1); ret; 
0x000000000001c050: and al, 0x10; add rsp, 0x48; ret; 
0x0000000000045d99: and al, 0x10; call rax; 
0x000000000002cbfe: and al, 0x10; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d17c: and al, 0x10; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000001c588: and al, 0x10; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x0000000000033e0d: and al, 0x10; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000032d6b: and al, 0x10; fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001c3a4: and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x000000000001d04e: and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000039301: and al, 0x10; mov eax, 0x10; syscall; 
0x0000000000059257: and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000005cb9e: and al, 0x10; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005a549: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a549: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000045f51: and al, 0x10; mov rdi, r13; call rax; 
0x0000000000045cd2: and al, 0x10; mov rdi, r13; mov r14d, 2; call rax; 
0x000000000001d34f: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf03: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c044: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000022e9f: and al, 0x10; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000033e11: and al, 0x10; pop rbx; ret; 
0x000000000002a558: and al, 0x10; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000041321: and al, 0x10; test eax, eax; jne 0x4132a; or eax, 0xffffffff; add rsp, 0x28; ret; 
0x000000000001c3a8: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc8c: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d355: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf09: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001d052: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001c04a: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000002209a: and al, 0x18; add al, byte ptr [rax]; add byte ptr [rax], al; mov rdx, rcx; syscall; 
0x000000000002405a: and al, 0x18; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000034273: and al, 0x18; add rsp, 0x20; pop rbx; ret; 
0x000000000001cc35: and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x0000000000037907: and al, 0x18; fpatan; ret; 
0x000000000001cc2b: and al, 0x18; mov dword ptr [rsp + 0x1c], eax; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x000000000001b8d6: and al, 0x18; mov dword ptr [rsp + 0x2c], eax; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000004c54c: and al, 0x18; mov eax, 0x81; syscall; 
0x0000000000050fbc: and al, 0x18; mov eax, 6; mov rdi, r13; syscall; 
0x0000000000039882: and al, 0x18; mov rax, qword ptr [rsp + 0x20]; mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000005cb67: and al, 0x18; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005cdcc: and al, 0x18; mov rax, qword ptr [rsp + 8]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000001cf6a: and al, 0x18; ret; 
0x0000000000039121: and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000003436d: and al, 0x1c; add rsp, 0x20; pop rbx; ret; 
0x00000000000447cb: and al, 0x1c; and eax, 0xfffffffe; mov rsi, r15; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000033aff: and al, 0x1c; fild dword ptr [rsp + 0x1c]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x00000000000448d7: and al, 0x1c; mov edx, 4; mov rax, r8; syscall; 
0x000000000001cc2f: and al, 0x1c; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x0000000000033b03: and al, 0x1c; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x00000000000446e1: and al, 0x1c; test eax, eax; jne 0x448bb; mov eax, 0x66; syscall; 
0x0000000000044762: and al, 0x1c; test eax, eax; js 0x448bb; mov rax, r9; syscall; 
0x0000000000032d6f: and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000002f3da: and al, 0x20; add rsp, 0x10; pop rbx; ret; 
0x000000000002d73a: and al, 0x20; add rsp, 0x20; fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x000000000001df96: and al, 0x20; add rsp, 0x38; ret; 
0x000000000002f3d6: and al, 0x20; fld xword ptr [rsp + 0x20]; add rsp, 0x10; pop rbx; ret; 
0x000000000005d5b2: and al, 0x20; lea rsi, [rsp + 4]; xor eax, eax; mov edx, 4; syscall; 
0x000000000005cdd8: and al, 0x20; mov eax, 0xde; syscall; 
0x000000000005d5cb: and al, 0x20; mov eax, 3; syscall; 
0x0000000000039887: and al, 0x20; mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x00000000000392fc: and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000050425: and al, 0x20; mov rax, rdx; syscall; 
0x000000000001df8a: and al, 0x20; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000002ef03: and al, 0x20; pop rbx; ret; 
0x0000000000038101: and al, 0x21; jns 0x38107; neg eax; mov dword ptr [rdi], eax; ret; 
0x000000000005d594: and al, 0x24; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005042f: and al, 0x24; mov rax, rdx; syscall; 
0x000000000001df90: and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000029f70: and al, 0x28; add ecx, dword ptr [rax - 0x77]; ret 0x840f; 
0x000000000005d621: and al, 0x28; mov eax, 0x51; syscall; 
0x000000000004bfb5: and al, 0x28; mov eax, 0xe; syscall; 
0x000000000005cd62: and al, 0x28; mov qword ptr [rsp + 0x28], rax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000005cd67: and al, 0x28; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x0000000000054e7b: and al, 0x28; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x00000000000443b8: and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8d1: and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000001b8da: and al, 0x2c; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x0000000000036a0c: and al, 0x30; add rsp, 0x20; pop rbx; ret; 
0x0000000000039892: and al, 0x30; call rax; 
0x000000000001b8e2: and al, 0x30; mov eax, 0x81; syscall; 
0x000000000005bbf9: and al, 0x30; mov rax, r12; pop r12; ret; 
0x000000000005a5e5: and al, 0x38; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000005d6a0: and al, 0x38; xor eax, eax; mov eax, 0x5d; syscall; 
0x0000000000034156: and al, 0x40; add rsp, 0x28; ret; 
0x000000000001d14f: and al, 0x40; add rsp, 0x38; ret; 
0x000000000001d3df: and al, 0x40; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x0000000000057aa1: and al, 0x40; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005d595: and al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x0000000000057dc8: and al, 0x42; add al, 0; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000033ee5: and al, 0x48; add esp, 0x10; pop rbx; ret; 
0x000000000004f21e: and al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001bdeb: and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000001bd4a: and al, 0x48; add esp, 0x28; ret; 
0x000000000003755c: and al, 0x48; add esp, 0x38; fmulp st(1); ret; 
0x000000000004bd1d: and al, 0x48; mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x000000000001b326: and al, 0x48; mov dword ptr [rsp + 0x5c], eax; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x0000000000050430: and al, 0x48; mov eax, edx; syscall; 
0x000000000005f49e: and al, 0x49; mov dword ptr [rax + 0x58], ecx; add rsp, 0x100; ret; 
0x00000000000447ea: and al, 0x4c; mov eax, edi; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000021d48: and al, 0x4c; mov edi, edi; call rax; 
0x000000000001d3e3: and al, 0x50; add rsp, 0x38; fxch st(1); ret; 
0x00000000000584ff: and al, 0x50; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000058504: and al, 0x54; mov eax, 0x90; syscall; 
0x0000000000022d0a: and al, 0x58; shr eax, 3; and eax, 0xc00; ret; 
0x0000000000022d03: and al, 0x59; ret; 
0x000000000003bcdd: and al, 0x5b; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000001b32a: and al, 0x5c; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x0000000000022d51: and al, 0x5e; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x0000000000036b3a: and al, 0x60; add rsp, 0x58; ret; 
0x000000000001b334: and al, 0x60; mov eax, 0x81; syscall; 
0x00000000000581da: and al, 0x68; mov eax, 0xe; syscall; 
0x000000000004efbc: and al, 0x78; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004efd8: and al, 0x78; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000003b37e: and al, 0x78; mov eax, 0xf4; mov dword ptr [rsp + 0x80], ebx; syscall; 
0x0000000000059215: and al, 0x7f; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000001e7ad: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x000000000002ea5d: and al, 0x80; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xc1d9; 
0x000000000003536f: and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000019222: and al, 0x83; call 0xffffffffd0531f59; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x0000000000042700: and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x00000000000427ce: and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x0000000000018304: and al, 0x84; sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x00000000000614e1: and al, 0x88; add byte ptr [rax], al; add al, ch; ret; 
0x000000000001bde2: and al, 0x89; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd41: and al, 0x89; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000004f202: and al, 0x89; ret; 
0x0000000000048b14: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000005a577: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x00000000000527e4: and al, 0x98; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x000000000001a93a: and al, 0x98; ret; 
0x000000000001f513: and al, 0xac; add byte ptr [rax], al; add byte ptr [rsi - 0x76], bl; add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x0000000000034d06: and al, 0xb0; add byte ptr [rax], al; add byte ptr [rdi], cl; wait; ret 0x450f; 
0x000000000005a5ea: and al, 0xb8; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000055f5d: and al, 0xc8; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000021a9a: and al, 0xc; add rsp, 0x10; pop rbp; ret; 
0x000000000004ed68: and al, 0xc; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000033eaa: and al, 0xc; add rsp, 0x10; pop rbx; ret; 
0x000000000004e233: and al, 0xc; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000055fa4: and al, 0xc; add rsp, 0x18; ret; 
0x000000000002d182: and al, 0xc; add rsp, 0x20; pop rbx; ret; 
0x0000000000021a91: and al, 0xc; call 0x15060; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbp; ret; 
0x0000000000033e9f: and al, 0xc; call 0x22c9b; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000005099f: and al, 0xc; call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x0000000000053700: and al, 0xc; dec dword ptr [rax - 1]; ret; 
0x000000000005099a: and al, 0xc; lea rdi, [rsp + 0xc]; call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x0000000000059955: and al, 0xc; mov eax, 0x8e; syscall; 
0x000000000001c0ed: and al, 0xc; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000055f9e: and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000002f632: and al, 0xc; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002d987: and al, 0xd8; loope 0x2d969; ret 0xe1de; 
0x0000000000037a63: and al, 0xd9; ret 0xc9d8; 
0x000000000002aa37: and al, 0xd9; ret; 
0x00000000000379dc: and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000002c1e1: and al, 0xe8; fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000035f5a: and al, 0xe8; fmulp st(1); ret; 
0x0000000000033edd: and al, 0xe8; mov eax, 0xdbfffeed; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x0000000000035f51: and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c340: and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000002db80: and al, 0xe8; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002db86: and al, 0xe8; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002c349: and al, 0xe8; ret; 
0x000000000005ac04: and al, 0xe8; xchg dl, bl; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000035f56: and al, 0xf0; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c345: and al, 0xf0; fld xword ptr [rsp - 0x18]; ret; 
0x000000000001d10f: and al, 0xf0; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000002db90: and al, 0xf0; mulsd xmm0, xmm4; ret; 
0x000000000001d119: and al, 0xf0; ret; 
0x000000000001bbbd: and al, 0xf2; mulps xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001df91: and al, 0xf3; movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x000000000001d113: and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000002f934: and al, 0xf4; ret; 
0x0000000000022cbe: and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000033f99: and al, 0xf8; movaps xmm0, xmm1; ret; 
0x000000000003788f: and al, 0xf8; movq xmm0, rax; ret; 
0x0000000000029533: and al, 0xf8; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295c3: and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001a2c9: and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001cf5f: and al, 0xf8; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001d3f1: and al, 0xf8; movss xmm0, dword ptr [rsp - 8]; ret; 
0x00000000000295c9: and al, 0xf8; mulsd xmm0, xmm1; ret; 
0x0000000000022cce: and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000001a2d5: and al, 0xf8; ret; 
0x000000000002c256: and al, 0xf8; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7dc: and al, 0xf8; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000022cc3: and al, 0xf8; xor eax, eax; ret; 
0x0000000000029539: and al, 0xf8; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035aa3: and al, 0xf8; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000002ed8c: and al, 0xf; xchg eax, ebp; ret 0xe083; 
0x000000000002c317: and al, 0xfc; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000002e766: and al, 0xfc; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002f860: and al, 0xfc; mov eax, r8d; ret; 
0x000000000003402e: and al, 0xfc; movaps xmm0, xmm1; ret; 
0x00000000000378d0: and al, 0xfc; movd xmm0, eax; ret; 
0x000000000001a2cf: and al, 0xfc; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002955b: and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295e2: and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295e8: and al, 0xfc; mulss xmm0, xmm1; ret; 
0x000000000001cf65: and al, 0xfc; ret; 
0x0000000000029561: and al, 0xfc; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000035b2e: and al, 0xfc; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000005bada: and al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x000000000003f345: and al, 0xff; ret; 
0x0000000000052072: and al, 0xff; sbb al, 0; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000004448e: and al, 1; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000005d388: and al, 1; add byte ptr [rax], al; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x0000000000022cf9: and al, 1; lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000022cfe: and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000052623: and al, 3; add byte ptr [rax], al; lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000591bc: and al, 4; add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x0000000000030f44: and al, 4; add rsp, 0x18; ret; 
0x000000000005cca6: and al, 4; mov eax, 0xde; mov rsi, rbx; syscall; 
0x000000000005d456: and al, 4; mov eax, 1; syscall; 
0x0000000000039cfe: and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000001bde5: and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd44: and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000005d44d: and al, 4; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000004f3ee: and al, 4; pop rdx; ret; 
0x000000000005d5b7: and al, 4; xor eax, eax; mov edx, 4; syscall; 
0x000000000005dc98: and al, 7; jne 0x5dca4; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000004d8a8: and al, 7; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d49e: and al, 7; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000033e68: and al, 8; add rsp, 0x10; pop rbx; ret; 
0x000000000001cc74: and al, 8; add rsp, 0x18; fxch st(1); ret; 
0x000000000001d2cf: and al, 8; add rsp, 0x18; movq rax, xmm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x0000000000022146: and al, 8; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000004f2be: and al, 8; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004e920: and al, 8; add rsp, 0x18; ret; 
0x000000000001bbc2: and al, 8; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001c0f3: and al, 8; add rsp, 0x28; ret; 
0x000000000002cc04: and al, 8; add rsp, 0x30; pop rbx; ret; 
0x0000000000033e5d: and al, 8; call 0x22c9b; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000002b006: and al, 8; call 0x3805c; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x000000000003bcf4: and al, 8; call 0x3ba2e; add rsp, 0x18; ret; 
0x000000000003b39e: and al, 8; call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005f3b9: and al, 8; call qword ptr [rax - 8]; 
0x000000000004e911: and al, 8; call rax; 
0x000000000005a301: and al, 8; call rbx; 
0x0000000000038040: and al, 8; cmp eax, 0x3ffd9400; ja 0x3804c; fyl2xp1; ret; 
0x0000000000037acb: and al, 8; fabs; ret; 
0x0000000000035c0d: and al, 8; fchs; fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x000000000001cc70: and al, 8; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000037903: and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000002c1e7: and al, 8; fld xword ptr [rsp + 8]; ret; 
0x000000000003790e: and al, 8; fld1; fpatan; ret; 
0x0000000000037ae5: and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003810c: and al, 8; frndint; ret; 
0x000000000003811d: and al, 8; fsqrt; ret; 
0x000000000003802e: and al, 8; fyl2x; ret; 
0x00000000000392f7: and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000059252: and al, 8; lea rdx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000003bcef: and al, 8; lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x000000000001c0e9: and al, 8; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000005d6bb: and al, 8; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000039148: and al, 8; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000005d3f1: and al, 8; mov eax, 0x6c; syscall; 
0x000000000005b7ed: and al, 8; mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x000000000005a598: and al, 8; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000005cdd1: and al, 8; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x0000000000058013: and al, 8; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000022973: and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000001b32f: and al, 8; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x000000000003a2f2: and al, 8; mov r9, qword ptr [rcx]; syscall; 
0x000000000005a544: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a544: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000005a503: and al, 8; mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000058030: and al, 8; mov rsi, rdx; syscall; 
0x000000000001cc6a: and al, 8; movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000055fbb: and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000004c033: and al, 8; movsxd rdi, r12d; mov r10d, 8; mov eax, 0xd; syscall; 
0x0000000000017251: and al, 8; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x000000000001d3fc: and al, 8; ret; 
0x000000000005a54e: and al, 8; syscall; 
0x000000000005a54e: and al, 8; syscall; ret; 
0x000000000005d9c0: and al, 8; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000000037aeb: and al, 9; fldcw word ptr [rsp + 8]; ret; 
0x000000000001f59e: and al, 9; ret 0x458a; 
0x0000000000053e0b: and al, byte ptr [rax + rax]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x000000000005a270: and al, byte ptr [rax]; add byte ptr [rax], al; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005e3e2: and al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x3a], cl; add rsp, 0x190; jmp rax; 
0x0000000000023e69: and al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000003c1ce: and bh, bh; inc dword ptr [rbx + 0x4777ffa]; movzx eax, dil; ret; 
0x0000000000028ca1: and bh, bh; ret 0xc166; 
0x0000000000029ec9: and bh, byte ptr [rdi + 0x63480000]; ret; 
0x000000000002f3d7: and bl, bl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x10; pop rbx; ret; 
0x00000000000547af: and bl, ch; ret 0x8b48; 
0x000000000001df8b: and bl, dh; movups xmmword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000049fbd: and byte ptr [r8 - 0x75], r9b; je 0x49fe7; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004a588: and byte ptr [r8 - 0x7d], cl; ret 0x4c04; 
0x0000000000042cf1: and byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000003b9e3: and byte ptr [rax + 0x29], cl; ret; 
0x0000000000027e59: and byte ptr [rax + 0x31], cl; rol byte ptr [rcx - 0x3a], 1; std; jmp qword ptr [rsi + 0x41]; 
0x000000000004d3cc: and byte ptr [rax + 0x63], cl; rol byte ptr [rbp + 0x31], cl; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000005cdd9: and byte ptr [rax + 0xde], bh; syscall; 
0x000000000001e0e3: and byte ptr [rax + 0xf], cl; mov edx, 0x9483ff2; ret; 
0x0000000000037bfe: and byte ptr [rax + 1], cl; ret 0x920f; 
0x00000000000395f3: and byte ptr [rax + 1], cl; ret; 
0x0000000000050495: and byte ptr [rax + 3], bh; syscall; 
0x0000000000043954: and byte ptr [rax + 9], cl; ret 0xb70f; 
0x000000000001bb43: and byte ptr [rax + 9], cl; ret 0xc889; 
0x0000000000049fbe: and byte ptr [rax - 0x75], cl; je 0x49fe7; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000042cfb: and byte ptr [rax - 0x75], cl; push rbx; sub byte ptr [rax + 0x29], cl; ret 0x148; 
0x00000000000392fd: and byte ptr [rax - 0x77], cl; and al, 0x10; mov eax, 0x10; syscall; 
0x000000000004bfb1: and byte ptr [rax - 0x77], cl; and al, 0x28; mov eax, 0xe; syscall; 
0x00000000000581d6: and byte ptr [rax - 0x77], cl; and al, 0x68; mov eax, 0xe; syscall; 
0x00000000000314ed: and byte ptr [rax - 0x77], cl; ret 0xc031; 
0x0000000000043099: and byte ptr [rax - 0x77], cl; ret; 
0x000000000004a589: and byte ptr [rax - 0x7d], cl; ret 0x4c04; 
0x0000000000028cc8: and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000003c1cd: and byte ptr [rax], 0xff; inc dword ptr [rbx + 0x4777ffa]; movzx eax, dil; ret; 
0x0000000000028368: and byte ptr [rax], al; add byte ptr [rax + 0xc], bh; mov rdi, rbx; syscall; 
0x000000000005cc98: and byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000226a3: and byte ptr [rax], al; add byte ptr [rax], al; mov rsi, rsp; mov edi, 1; syscall; 
0x000000000004475a: and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005ce8b: and byte ptr [rax], al; add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x0000000000044d4b: and byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000026438: and byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x000000000004dadc: and byte ptr [rax], al; je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004da93: and byte ptr [rax], al; setne al; ret; 
0x00000000000572c4: and byte ptr [rbp + 0x31], al; ror byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000003a7eb: and byte ptr [rbp + 0x41], bl; pop rsp; pop r14; ret; 
0x0000000000028e54: and byte ptr [rbp + r9*4 + 5], r9b; ret; 
0x0000000000028e55: and byte ptr [rbp + rcx*4 + 5], cl; ret; 
0x00000000000203f9: and byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023110: and byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000031839: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000037fc9: and byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x00000000000220c0: and byte ptr [rbx + rcx + 0x48], dh; mov eax, edx; syscall; 
0x000000000001bddf: and byte ptr [rcx + 0x44892414], cl; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd3e: and byte ptr [rcx + 0x44892414], cl; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000044755: and byte ptr [rcx + 0x63], cl; std; mov eax, 0x20; syscall; 
0x000000000002c77f: and byte ptr [rcx + 0x7217f6fa], al; mov cl, 0xf; xchg eax, esi; ret 0xf981; 
0x0000000000043b0c: and byte ptr [rcx + rcx*4 + 4], al; or dword ptr [rax - 1], 0x8be5ebc0; cmp dword ptr [rbx + 0x398901cf], eax; ret; 
0x0000000000039888: and byte ptr [rcx + rcx*4 - 0x1e], al; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000003a24a: and byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000039191: and byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000041c23: and byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000003c9af: and byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000000510b1: and byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000004d851: and byte ptr [rcx - 0x377cf9], cl; ret; 
0x00000000000447e6: and byte ptr [rcx - 0x73], cl; js 0x4480f; mov rax, r15; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000004973a: and byte ptr [rcx - 0x75], al; adc al, byte ptr [rbp - 0x5677f02e]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x000000000001d10c: and byte ptr [rcx - 0x760fdbac], cl; and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001d04b: and byte ptr [rcx - 0x76efdbac], cl; and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001c0e6: and byte ptr [rcx - 0x76f7dbac], cl; and al, 0xc; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000054146: and byte ptr [rcx - 0x7d], al; call qword ptr [rdi]; 
0x000000000003eaec: and byte ptr [rcx], al; add byte ptr [rcx + 0x4c], bl; mov eax, esp; pop rsi; pop r12; ret; 
0x000000000002eed1: and byte ptr [rcx], bh; ret; 
0x00000000000593c0: and byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000021494: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000021416: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x000000000002178f: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x00000000000426fa: and byte ptr [rcx], dh; ror byte ptr [rax + 0x63], 0x94; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x000000000004dd14: and byte ptr [rcx], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000002b453: and byte ptr [rdi], cl; sub cl, al; pop rbx; ret; 
0x000000000001c913: and byte ptr [rdi], cl; sub dl, cl; pop rbx; ret; 
0x00000000000214ce: and byte ptr [rdi], cl; xchg eax, esp; ret 0xd009; 
0x0000000000021433: and byte ptr [rdi], cl; xchg eax, esp; rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x0000000000022cf7: and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000026437: and byte ptr ds:[rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x0000000000022100: and ch, 3; add byte ptr [rcx - 0x1576b311], cl; mov rsi, r12; call rbx; 
0x000000000002d6ba: and ch, byte ptr [rax + 6]; add dh, bl; ret 0xc9d9; 
0x0000000000056999: and cl, byte ptr [rcx + 0x63]; rol byte ptr [rbp + 0x31], 1; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000037557: and dh, bl; leave; fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x000000000002d73f: and dh, bl; stc; add rsp, 0x60; pop rbx; ret; 
0x000000000005873c: and dword ptr [rax + 0x8f], edi; mov rsi, r14; syscall; 
0x0000000000027284: and dword ptr [rax - 1], ecx; ret 0x3145; 
0x000000000005749f: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x000000000005749f: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x000000000005d3a7: and dword ptr [rax], eax; add byte ptr [rax], al; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000005d348: and dword ptr [rax], eax; add byte ptr [rax], al; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000038102: and dword ptr [rcx + 2], edi; neg eax; mov dword ptr [rdi], eax; ret; 
0x0000000000024672: and dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000015653: and dword ptr [rcx], ebp; ret; 
0x0000000000021472: and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x0000000000058bab: and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000004c204: and dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000022cbc: and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000002c337: and dx, 0x8000; or eax, edx; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x00000000000225c3: and eax, 0; add rax, 0x34; ret; 
0x000000000003e483: and eax, 0; cmp qword ptr [rax + 0x58], 0; je 0x3e496; add rax, 0xa0; ret; 
0x0000000000023f81: and eax, 0; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000221ec: and eax, 0; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580fc: and eax, 0; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004f337: and eax, 0; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000005879f: and eax, 0; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000022687: and eax, 0; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004bec9: and eax, 0; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000002323f: and eax, 0; pop rdx; ret; 
0x00000000000595d9: and eax, 0; ret; 
0x0000000000043da1: and eax, 0; syscall; 
0x0000000000056799: and eax, 0x100f; ret; 
0x0000000000058fe9: and eax, 0x10; ret; 
0x0000000000059382: and eax, 0x1be; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000021281: and eax, 0x28; je 0x2128d; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000022a56: and eax, 0x28; je 0x22a62; call 0x221f7; add rsp, 0x68; ret; 
0x0000000000022b9a: and eax, 0x28; je 0x22ba6; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000022ec2: and eax, 0x28; je 0x22ece; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000231bc: and eax, 0x28; je 0x231c8; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000234ff: and eax, 0x28; je 0x2350b; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000235b5: and eax, 0x28; je 0x235c1; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000002377e: and eax, 0x28; je 0x2378a; call 0x221f7; add rsp, 0x38; ret; 
0x00000000000237cc: and eax, 0x28; je 0x237d8; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000023b10: and eax, 0x28; je 0x23b1c; call 0x221f7; add rsp, 0x38; ret; 
0x0000000000023da2: and eax, 0x28; je 0x23dae; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000024307: and eax, 0x28; je 0x24313; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024381: and eax, 0x28; je 0x2438d; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000245bd: and eax, 0x28; je 0x245c9; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024654: and eax, 0x28; je 0x24660; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002471d: and eax, 0x28; je 0x24729; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024cb5: and eax, 0x28; je 0x24cc1; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000026f8c: and eax, 0x28; je 0x26f98; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000273c0: and eax, 0x28; je 0x273cc; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000027482: and eax, 0x28; je 0x2748e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000002c417: and eax, 0x28; je 0x2c423; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002c5f4: and eax, 0x28; je 0x2c600; call 0x221f7; add rsp, 0x18; ret; 
0x000000000002f55f: and eax, 0x28; je 0x2f56b; call 0x221f7; add rsp, 0x48; ret; 
0x000000000003562e: and eax, 0x28; je 0x3563a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000035666: and eax, 0x28; je 0x35672; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003607f: and eax, 0x28; je 0x3608b; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000367c0: and eax, 0x28; je 0x367cc; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036beb: and eax, 0x28; je 0x36bf7; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000036d40: and eax, 0x28; je 0x36d4c; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000038019: and eax, 0x28; je 0x38025; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000038099: and eax, 0x28; je 0x380a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003931b: and eax, 0x28; je 0x39327; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000039cc7: and eax, 0x28; je 0x39cd3; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003a30a: and eax, 0x28; je 0x3a316; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003a88f: and eax, 0x28; je 0x3a89b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000003a907: and eax, 0x28; je 0x3a913; call 0x221f7; add rsp, 0x28; ret; 
0x000000000003b1a1: and eax, 0x28; je 0x3b1ad; call 0x221f7; add rsp, 0x128; ret; 
0x000000000003b44e: and eax, 0x28; je 0x3b45a; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003b875: and eax, 0x28; je 0x3b881; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003be1e: and eax, 0x28; je 0x3be2a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003c199: and eax, 0x28; je 0x3c1a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003e90d: and eax, 0x28; je 0x3e919; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000040b1a: and eax, 0x28; je 0x40b26; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004193c: and eax, 0x28; je 0x41948; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000041b2d: and eax, 0x28; je 0x41b39; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041b86: and eax, 0x28; je 0x41b92; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000422f3: and eax, 0x28; je 0x422ff; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042367: and eax, 0x28; je 0x42373; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000423d9: and eax, 0x28; je 0x423e5; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042e1b: and eax, 0x28; je 0x42e27; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042e6e: and eax, 0x28; je 0x42e7a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042ebf: and eax, 0x28; je 0x42ecb; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043d37: and eax, 0x28; je 0x43d43; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043f40: and eax, 0x28; je 0x43f4c; call 0x221f7; leave; ret; 
0x0000000000044195: and eax, 0x28; je 0x441a1; call 0x221f7; leave; ret; 
0x000000000004b630: and eax, 0x28; je 0x4b63c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004bbff: and eax, 0x28; je 0x4bc0b; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004c419: and eax, 0x28; je 0x4c425; call 0x221f7; add rsp, 0x148; ret; 
0x000000000004ccd3: and eax, 0x28; je 0x4ccdf; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004d7c1: and eax, 0x28; je 0x4d7cd; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004d977: and eax, 0x28; je 0x4d983; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004da66: and eax, 0x28; je 0x4da72; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004e51e: and eax, 0x28; je 0x4e52a; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004eacb: and eax, 0x28; je 0x4ead7; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f13f: and eax, 0x28; je 0x4f14b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f566: and eax, 0x28; je 0x4f572; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f742: and eax, 0x28; je 0x4f74e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004fc8f: and eax, 0x28; je 0x4fc9b; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004fe41: and eax, 0x28; je 0x4fe4d; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000050685: and eax, 0x28; je 0x50691; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050acc: and eax, 0x28; je 0x50ad8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050c04: and eax, 0x28; je 0x50c10; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050cb5: and eax, 0x28; je 0x50cc1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050d66: and eax, 0x28; je 0x50d72; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050e12: and eax, 0x28; je 0x50e1e; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050ec3: and eax, 0x28; je 0x50ecf; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000005141a: and eax, 0x28; je 0x51426; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000052dee: and eax, 0x28; je 0x52dfa; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054402: and eax, 0x28; je 0x5440e; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054f4c: and eax, 0x28; je 0x54f58; call 0x221f7; add rsp, 0x118; ret; 
0x0000000000055040: and eax, 0x28; je 0x5504c; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000055320: and eax, 0x28; je 0x5532c; call 0x221f7; add rsp, 0x1f8; ret; 
0x00000000000553fa: and eax, 0x28; je 0x55406; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000554b0: and eax, 0x28; je 0x554bc; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000568a6: and eax, 0x28; je 0x568b2; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000591f5: and eax, 0x28; je 0x59201; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000059285: and eax, 0x28; je 0x59291; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005b67d: and eax, 0x28; je 0x5b689; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005cf8c: and eax, 0x28; je 0x5cf98; call 0x221f7; add rsp, 0x38; ret; 
0x000000000005d2aa: and eax, 0x28; je 0x5d2b6; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005dcca: and eax, 0x28; je 0x5dcd6; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005dd2e: and eax, 0x28; je 0x5dd3a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005def0: and eax, 0x28; je 0x5defc; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005df49: and eax, 0x28; je 0x5df55; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005dfc4: and eax, 0x28; je 0x5dfd0; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e005: and eax, 0x28; je 0x5e011; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e18f: and eax, 0x28; je 0x5e19b; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005e211: and eax, 0x28; je 0x5e21d; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000018abe: and eax, 0x28; jne 0x18af1; add rsp, 0x38; ret; 
0x0000000000024052: and eax, 0x28; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x0000000000039119: and eax, 0x28; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d619: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000443b0: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8c9: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d698: and eax, 0x28; mov qword ptr [rsp + 0x38], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000005a56f: and eax, 0x28; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3e9: and eax, 0x28; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000027b1f: and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x000000000001efa5: and eax, 0x3f; ret; 
0x000000000005db0b: and eax, 0x48000001; movsxd rsi, esi; syscall; 
0x000000000002cc61: and eax, 0x5100ff2; add dword ptr cs:[rsi], 0x590ff200; ret 0xff2; 
0x0000000000038250: and eax, 0x5ec0c; mov rax, r12; pop r12; ret; 
0x00000000000217e5: and eax, 0x5f; ret; 
0x00000000000217c4: and eax, 0x7f; ret; 
0x000000000002bfbc: and eax, 0x7fffffff; cmp eax, 0x7f7fffff; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002b9ae: and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x0000000000056eb6: and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000057d1e: and eax, 0x7fffffff; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000001b3f1: and eax, 0x7fffffff; ret; 
0x00000000000522be: and eax, 0x83481675; ret 0x4802; 
0x000000000002540b: and eax, 0x8949ffff; ret 0x8548; 
0x0000000000022d0f: and eax, 0xc00; ret; 
0x000000000002e857: and eax, 0xc0800000; sub eax, 0x40800000; movd xmm0, eax; ret; 
0x000000000001e5b8: and eax, 0xc0ff0003; cdqe; pop rdx; ret; 
0x000000000001b250: and eax, 0xcab841; add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057b34: and eax, 0xcab841; add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003b545: and eax, 0xdfff; ret; 
0x000000000003f1c8: and eax, 0xf; ret; 
0x0000000000052f2e: and eax, 0xff483475; ret; 
0x0000000000027b07: and eax, 0xfffff000; sub rax, 0x10; ret; 
0x00000000000567bf: and eax, 0xfffffecf; andps xmm0, xmm1; or eax, 0x30; mov dword ptr [rdi + 8], eax; movq qword ptr [rdi], xmm0; ret; 
0x000000000003ea84: and eax, 0xffffff; ret; 
0x000000000003f21c: and eax, 0xffffffc0; cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000005e44b: and eax, 0xfffffff; ret; 
0x00000000000213d9: and eax, 0xfffffffd; add rax, 4; ret; 
0x00000000000447cd: and eax, 0xfffffffe; mov rsi, r15; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000021a15: and eax, 1; inc eax; ret; 
0x0000000000056ecf: and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001efc0: and eax, 1; ret; 
0x0000000000021971: and eax, 2; add rsp, 0x18; ret; 
0x0000000000056ef3: and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000380fc: and eax, 7; xor dl, byte ptr [rsp + 0x21]; jns 0x38107; neg eax; mov dword ptr [rdi], eax; ret; 
0x0000000000060bff: and eax, dword ptr [rax + rax*8 - 0x74b7e88b]; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x000000000004c60c: and eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000002454a: and eax, dword ptr [rbx + 0x7500107b]; sbb eax, 0xcde8ff31; ja 0x24559; add byte ptr [rax + 0x27], bh; syscall; 
0x0000000000058526: and eax, dword ptr [rcx - 0x47]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004d41f: and eax, dword ptr [rcx - 0x48]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000033548: and eax, dword ptr [rcx]; add byte ptr [rax], al; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000023dd2: and eax, dword ptr [rcx]; add byte ptr [rax], al; push rcx; mov rdx, rdi; syscall; 
0x000000000004c1d0: and eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000002c315: and eax, dword ptr [rsp - 4]; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000002e764: and eax, dword ptr [rsp - 4]; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002b844: and eax, ecx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x0000000000037b5a: and eax, ecx; mov rcx, rsi; shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x00000000000349ea: and eax, edi; neg eax; sbb r8d, r8d; add r8d, 2; mov eax, r8d; ret; 
0x0000000000022d57: and eax, edi; ret; 
0x000000000004fcc1: and eax, edx; add al, 0; pop rdx; ret; 
0x000000000005e7ac: and eax, edx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x0000000000037889: and eax, edx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x00000000000378ca: and eax, edx; movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000026aa3: and eax, edx; ret; 
0x00000000000503d6: and ebp, edi; inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret 1; 
0x00000000000343bd: and ecx, 1; sub rdx, rcx; test rax, rdi; mov eax, 0; cmove eax, edx; ret; 
0x000000000004d786: and ecx, dword ptr [rax + 0x63]; jg 0x4d803; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004d190: and ecx, dword ptr [rax + 0x63]; sti; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005bf40: and ecx, dword ptr [rax - 0x39]; ret 0xffe6; 
0x000000000005e517: and ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000005ced1: and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005ceab: and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x000000000005cefb: and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000005cbab: and edi, 0x7fffffff; syscall; 
0x000000000002f284: and edi, 0x80000000; or edi, eax; movd xmm0, edi; ret; 
0x00000000000216ea: and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x000000000002142a: and edi, 0xffffff80; sete al; ret; 
0x0000000000050557: and edi, ebp; dec dword ptr [rdx + 0x63]; jl 0x5050a; and byte ptr [rax + 3], bh; syscall; 
0x000000000002f171: and edi, edx; or rdi, rax; movq xmm0, rdi; ret; 
0x0000000000028092: and edx, 0x1f; add eax, edx; mov byte ptr [r8 - 3], al; mov rax, r8; ret; 
0x0000000000027673: and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x00000000000219ac: and edx, 0x7f; cmp edx, 0x20; jg 0x21a68; neg edi; sbb eax, eax; ret; 
0x000000000002c319: and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000002f347: and edx, 0x807fffff; mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; pop rbx; ret; 
0x000000000002c338: and edx, 0xd0098000; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000051592: and edx, 0xfffffff0; lea rsi, [rdx + 0x10]; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000022fb0: and edx, 0xfffffffd; mov byte ptr [rcx + 0x42], dl; cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x000000000005640b: and edx, 7; je 0x56415; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x56410; ret; 
0x000000000002c2fb: and edx, ecx; or rax, rdx; movq xmm0, rax; ret; 
0x0000000000057cfc: and esi, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000057f6d: and esi, 0x80; or esi, 1; syscall; 
0x0000000000058f69: and esi, 0x80; or esi, 7; syscall; 
0x000000000004198a: and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x00000000000567ef: and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x000000000003aee1: and esi, 0xfffff000; sub rsi, rdi; syscall; 
0x000000000005a509: and esi, 0xfffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000592a8: and esi, 0xfffffffc; or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x0000000000056cd3: and esi, 1; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x00000000000586ca: and esi, dword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000004c203: and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000028ff8: and r15b, dil; ret 0xc166; 
0x0000000000028ca0: and r15b, r15b; ret 0xc166; 
0x0000000000027b06: and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x00000000000213d8: and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000004c1cf: and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000002b843: and rax, rcx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x0000000000037b59: and rax, rcx; mov rcx, rsi; shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x000000000005e7ab: and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x0000000000037888: and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x0000000000043985: and rax, rdx; ret; 
0x000000000002f170: and rdi, rdx; or rdi, rax; movq xmm0, rdi; ret; 
0x0000000000051591: and rdx, 0xfffffffffffffff0; lea rsi, [rdx + 0x10]; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000002c2fa: and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x000000000003aee0: and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000005a508: and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000599f4: andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x00000000000567c4: andps xmm0, xmm1; or eax, 0x30; mov dword ptr [rdi + 8], eax; movq qword ptr [rdi], xmm0; ret; 
0x0000000000037ab8: andps xmm0, xmm1; ret; 
0x0000000000017f4c: bnd je 0x17f57; cmp rax, rdi; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x000000000005c5f4: bnd jmp rdx; 
0x0000000000038263: bsf eax, eax; inc eax; ret; 
0x0000000000038271: bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x0000000000038262: bsf rax, rax; inc eax; ret; 
0x0000000000038270: bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000024b2d: bswap eax; lea esi, [rax + 0x14]; call 0x3aff9; xor eax, eax; pop rdx; ret; 
0x000000000001e7f8: bswap eax; mov dword ptr [rdi - 4], eax; dec esi; jne 0x1e7f2; ret; 
0x00000000000403c6: bswap eax; mov eax, eax; ret; 
0x000000000002497c: bswap eax; ret; 
0x00000000000403d3: bswap edi; mov dword ptr [rsi], edi; ret; 
0x0000000000023940: bt dword ptr [rbx], eax; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000246ac: bt eax, 0xb; jae 0x246c3; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000022ae2: bt ebx, 0x13; jae 0x22af9; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x00000000000246ab: bt r8d, 0xb; jae 0x246c3; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000002c2f6: btr eax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x000000000002e74b: btr eax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000002c2f5: btr rax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x000000000002e74a: btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x0000000000037b64: bts eax, 0x35; or rdx, rcx; ret; 
0x0000000000037b63: bts rax, 0x35; or rdx, rcx; ret; 
0x000000000003ccab: call 0x100355fc; scasd eax, dword ptr [rdi]; ret; 
0x0000000000021a93: call 0x15060; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbp; ret; 
0x000000000004dbce: call 0x15060; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004b508: call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000004b500: call 0x15060; mov rdi, qword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000003d8ef: call 0x15060; mov rdi, rbx; test rbx, rbx; jne 0x3d8ec; pop rbx; ret; 
0x0000000000045a57: call 0x15060; mov rdi, rbx; test rbx, rbx; jne 0x45a54; pop rbx; ret; 
0x00000000000266a9: call 0x15060; xor eax, eax; pop rdx; ret; 
0x000000000005d652: call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000004c904: call 0x17080; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000022e48: call 0x17230; add rsp, 0x18; ret; 
0x000000000004c7b5: call 0x17230; pop rbx; pop rbp; pop r12; ret; 
0x00000000000419de: call 0x17230; pop rbx; ret; 
0x000000000005d314: call 0x17230; pop rdi; ret; 
0x000000000003b017: call 0x17230; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022dd6: call 0x17230; pop rdx; ret; 
0x0000000000018365: call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b5: call 0x18020; mov rax, r12; pop r12; ret; 
0x0000000000021966: call 0x18320; cmp eax, 1; sbb rax, rax; and eax, 2; add rsp, 0x18; ret; 
0x00000000000181f9: call 0x18360; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000005d950: call 0x18360; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018310: call 0x18690; add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000001866f: call 0x18690; add rax, rbx; pop rbx; ret; 
0x0000000000019539: call 0x195e0; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000194b4: call 0x196e0; add rsp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000019580: call 0x196e0; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x0000000000019889: call 0x1a050; mov rax, r12; pop r12; ret; 
0x000000000001b53b: call 0x1b3f7; mov eax, r12d; pop r12; ret; 
0x000000000004d4d4: call 0x1b52a; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000043d7d: call 0x1b546; mov rdi, r12; call 0x56922; mov eax, 0x39; syscall; 
0x000000000001c191: call 0x1d05f; add rsp, 0x28; fchs; fxch st(1); ret; 
0x0000000000056d2c: call 0x1e5f035; ret; 
0x0000000000056ecd: call 0x1e5f1d5; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056eda: call 0x1e5f1e6; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056ee7: call 0x1e5f1ee; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001e5ee: call 0x1e61e; pop rdx; ret; 
0x000000000004dab1: call 0x1f55db8; and eax, 1; ret; 
0x000000000004dabd: call 0x1f55dc5; and eax, 1; ret; 
0x000000000002ef00: call 0x20275be0; pop rbx; ret; 
0x00000000000214ac: call 0x213f1; pop rdx; test eax, eax; sete al; movzx eax, al; ret; 
0x00000000000214f7: call 0x21511; pop rdx; test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000021689: call 0x218eb; cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x000000000003a67d: call 0x221f7; add rsp, 0x10; pop rbp; ret; 
0x00000000000430f2: call 0x221f7; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003b72a: call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000005a3e5: call 0x221f7; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000003f5e6: call 0x221f7; add rsp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000054f53: call 0x221f7; add rsp, 0x118; ret; 
0x000000000003b1a8: call 0x221f7; add rsp, 0x128; ret; 
0x00000000000387de: call 0x221f7; add rsp, 0x130; pop rbp; ret; 
0x000000000004c420: call 0x221f7; add rsp, 0x148; ret; 
0x0000000000044dd9: call 0x221f7; add rsp, 0x160; pop rbp; ret; 
0x0000000000023879: call 0x221f7; add rsp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039d52: call 0x221f7; add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000045460: call 0x221f7; add rsp, 0x18; mov eax, r9d; pop rbx; pop rbp; ret; 
0x000000000003a95f: call 0x221f7; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000021288: call 0x221f7; add rsp, 0x18; ret; 
0x00000000000388a5: call 0x221f7; add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d8fe: call 0x221f7; add rsp, 0x198; pop rbx; pop rbp; ret; 
0x0000000000055327: call 0x221f7; add rsp, 0x1f8; ret; 
0x000000000003a242: call 0x221f7; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000041c1b: call 0x221f7; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000003a7e3: call 0x221f7; add rsp, 0x20; pop rbp; pop r12; pop r14; ret; 
0x000000000003647b: call 0x221f7; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000002dc4e: call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000005ba1b: call 0x221f7; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000001e7d8: call 0x221f7; add rsp, 0x210; pop rbx; ret; 
0x000000000003d96e: call 0x221f7; add rsp, 0x228; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000056bba: call 0x221f7; add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000004c144: call 0x221f7; add rsp, 0x28; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005656c: call 0x221f7; add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000026d69: call 0x221f7; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000000237d3: call 0x221f7; add rsp, 0x28; ret; 
0x0000000000044415: call 0x221f7; add rsp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x000000000005d679: call 0x221f7; add rsp, 0x30; pop rbp; ret; 
0x000000000001be6b: call 0x221f7; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000361ea: call 0x221f7; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039402: call 0x221f7; add rsp, 0x30; pop rbx; ret; 
0x0000000000029a7e: call 0x221f7; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000023785: call 0x221f7; add rsp, 0x38; ret; 
0x000000000005b9b1: call 0x221f7; add rsp, 0x40; pop rbp; ret; 
0x000000000002de14: call 0x221f7; add rsp, 0x40; pop rbx; ret; 
0x0000000000041873: call 0x221f7; add rsp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x0000000000040925: call 0x221f7; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000002c910: call 0x221f7; add rsp, 0x48; ret; 
0x0000000000022b0e: call 0x221f7; add rsp, 0x50; pop rbx; ret; 
0x000000000001d0d0: call 0x221f7; add rsp, 0x58; fxch st(1); ret; 
0x000000000001ffd4: call 0x221f7; add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000022ba1: call 0x221f7; add rsp, 0x58; ret; 
0x0000000000036601: call 0x221f7; add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x000000000002445f: call 0x221f7; add rsp, 0x60; pop rbx; ret; 
0x0000000000023bae: call 0x221f7; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000022a5d: call 0x221f7; add rsp, 0x68; ret; 
0x00000000000232b8: call 0x221f7; add rsp, 0x840; mov rax, r12; pop r12; ret; 
0x00000000000392bb: call 0x221f7; add rsp, 0x90; pop rbp; ret; 
0x0000000000043e26: call 0x221f7; add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000000213ab: call 0x221f7; add rsp, 0x90; pop rbx; ret; 
0x000000000004beff: call 0x221f7; add rsp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000020890: call 0x221f7; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004c285: call 0x221f7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000002f7e3: call 0x221f7; add rsp, 0x98; ret; 
0x000000000005998b: call 0x221f7; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022db7: call 0x221f7; add rsp, 0xa0; pop rbx; ret; 
0x000000000001b8fe: call 0x221f7; add rsp, 0xa0; xor eax, eax; pop rbx; ret; 
0x0000000000021b59: call 0x221f7; add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000004c2f3: call 0x221f7; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000057669: call 0x221f7; add rsp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000004c374: call 0x221f7; add rsp, 0xb8; pop rbx; pop r12; ret; 
0x000000000004cc3c: call 0x221f7; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x00000000000231c3: call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000023cb3: call 0x221f7; add rsp, 0xe0; pop rbx; ret; 
0x0000000000051421: call 0x221f7; add rsp, 0xf8; ret; 
0x000000000001c13e: call 0x221f7; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000036b33: call 0x221f7; fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x0000000000043f47: call 0x221f7; leave; ret; 
0x000000000005da04: call 0x221f7; mov eax, r8d; add rsp, 0x18; ret; 
0x000000000005b818: call 0x221f7; mov eax, r8d; add rsp, 0x28; ret; 
0x000000000005b7bc: call 0x221f7; mov rax, r8; add rsp, 0x28; ret; 
0x000000000004ce84: call 0x221f7; sub rsp, -0x80; pop rbx; ret; 
0x000000000005d46f: call 0x221f7; xor eax, eax; add rsp, 0x18; ret; 
0x000000000001b3d9: call 0x225bf; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e5c7: call 0x225bf; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000024b17: call 0x225bf; mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x000000000003b5bb: call 0x225bf; mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000023bca: call 0x225bf; mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005a0bf: call 0x225bf; mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x00000000000177ba: call 0x225bf; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000003881c: call 0x225bf; mov dword ptr [rax], 2; mov rax, r12; pop r12; ret; 
0x000000000004c4c5: call 0x225bf; mov dword ptr [rax], r12d; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000003bf29: call 0x225bf; or r8, 0xffffffffffffffff; mov dword ptr [rax], 0x54; mov rax, r8; pop rdx; ret; 
0x0000000000017780: call 0x225bf; pop rbx; mov eax, dword ptr [rax]; ret; 
0x00000000000611ad: call 0x225bf; sub rbx, 8; mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000005d226: call 0x2260d; movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x0000000000050555: call 0x228e3; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x0000000000023a9f: call 0x228e3; pop rdx; sar eax, 0x1f; ret; 
0x0000000000033ede: call 0x22c9b; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000033e5f: call 0x22c9b; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000033ea1: call 0x22c9b; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000022c33: call 0x22c9b; xor eax, eax; pop rdx; ret; 
0x0000000000022c56: call 0x22cc8; pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000022c1c: call 0x22d4a; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000005e8cf: call 0x23016; add rsp, 0xd8; ret; 
0x000000000001bd3d: call 0x24164662; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000001bdde: call 0x24164703; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001c0e5: call 0x24564a0a; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000001c444: call 0x24564d69; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000001d04a: call 0x2456596f; adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000001d48d: call 0x24565db2; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000001e06b: call 0x24566990; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x00000000000267ae: call 0x2497f; test rax, rax; je 0x2679c; pop rbx; ret; 
0x000000000001879e: call 0x2945e4fe; rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x000000000001978c: call 0x2945f4ec; rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x000000000002ce64: call 0x2c91a; movaps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x00000000000379d7: call 0x2cdf3bba; and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000002d3dc: call 0x2cea0; movaps xmm1, xmm0; movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002d173: call 0x2e0c6; mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x0000000000033a5d: call 0x2f7f0; pop rdx; cvtsi2sd xmm1, eax; movaps xmm0, xmm1; ret; 
0x0000000000033aae: call 0x2f866; cvtsi2ss xmm1, eax; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000001cfab: call 0x32d7b; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002feab: call 0x32d7b; mulsd xmm0, qword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002af64: call 0x33b0c; addss xmm0, dword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x0000000000030428: call 0x33b0c; mulss xmm0, dword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x0000000000032d2a: call 0x35a60; pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000032d37: call 0x35af3; pop rdx; cvttss2si rax, xmm0; ret; 
0x000000000003743f: call 0x37090; pop rdx; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000037942: call 0x37951; pop rax; fld1; fsubp st(1); ret; 
0x000000000002b008: call 0x3805c; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x000000000002f629: call 0x38116; movss xmm2, dword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000003e56d: call 0x392c9; movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x0000000000056860: call 0x392c9; pop rdx; neg eax; sbb eax, eax; ret; 
0x0000000000059f39: call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x0000000000024b32: call 0x3aff9; xor eax, eax; pop rdx; ret; 
0x000000000003bcf6: call 0x3ba2e; add rsp, 0x18; ret; 
0x000000000003c1e3: call 0x3be2f; pop rdx; ret; 
0x000000000003d43d: call 0x3d1e5; add rsp, 0x18; ret; 
0x0000000000027b1d: call 0x3fe2fe28; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000027f95: call 0x3fe302a0; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000035f4a: call 0x400264b5; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000040397: call 0x40224; mov r10d, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000001855c: call 0x415dc6be; pop rbp; ret; 
0x000000000003c8da: call 0x4203522b; call rsi; 
0x00000000000439fc: call 0x43946; pop rdx; shr rax, 0x10; cdqe; ret; 
0x00000000000439dd: call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000001815e: call 0x445dc2c0; sub eax, eax; ret; 
0x0000000000046405: call 0x463a6; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a591: call 0x48c92ede; lea esi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000005e3da: call 0x48d7cef7; lea eax, [rip + 0x22db]; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x0000000000043b0b: call 0x48d7f30; or dword ptr [rax - 1], 0x8be5ebc0; cmp dword ptr [rbx + 0x398901cf], eax; ret; 
0x000000000004b8c5: call 0x4b8a7; test rbx, rbx; je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000024553: call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000004bebd: call 0x4bd3f; movsxd rsi, ebx; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a2f9: call 0x4bf36; mov rdi, qword ptr [rsp + 8]; call rbx; 
0x0000000000043cf8: call 0x4c043e23; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000002db81: call 0x4c12eb78; and al, 0xe8; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002dfd1: call 0x4c12efc8; and al, 0xe8; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000004dc0b: call 0x4d408; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000004f4b9: call 0x4d408; add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004e22c: call 0x4d408; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004f217: call 0x4d408; mov eax, dword ptr [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000039473: call 0x4db47; mov eax, 1; pop rdx; ret; 
0x0000000000042d8c: call 0x4db47; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042241: call 0x4db47; mov qword ptr [rip + 0x59c5f], 0; pop rdx; ret; 
0x00000000000239d8: call 0x4db47; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x000000000005058e: call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000004db64: call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x0000000000023a33: call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x0000000000043822: call 0x4ea2e; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004f3e7: call 0x4f344; mov eax, dword ptr [rsp + 4]; pop rdx; ret; 
0x00000000000509a1: call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x000000000004fcf1: call 0x4fcc7; mov rax, r12; pop r12; ret; 
0x000000000001e5b6: call 0x50b6c; inc eax; cdqe; pop rdx; ret; 
0x0000000000055801: call 0x50c18; mov rax, r12; pop r12; ret; 
0x0000000000055f97: call 0x55ef2; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000055fb4: call 0x55ef2; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000056211: call 0x56119; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000005622e: call 0x56119; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000017f24: call 0x563e4; add rax, rbx; pop rbx; ret; 
0x000000000003d4aa: call 0x563e4; mov qword ptr [rbp], rbx; pop rax; pop rbx; pop rbp; ret; 
0x0000000000043cf7: call 0x563e4; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000003b0be: call 0x563e4; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017809: call 0x5643b; add rsp, 8; ret; 
0x000000000004b1d4: call 0x5643b; mov eax, ebx; pop rbx; neg eax; ret; 
0x000000000001805e: call 0x5643b; mov rax, r12; pop r12; ret; 
0x000000000004fcb9: call 0x56922; lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x0000000000043d85: call 0x56922; mov eax, 0x39; syscall; 
0x0000000000058041: call 0x569d4; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000043c2a: call 0x569d4; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043cb9: call 0x569d4; mov rax, r12; pop rdx; pop rbp; pop r12; ret; 
0x00000000000228a1: call 0x569d4; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022e40: call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005b938: call 0x56a0e; pop rdx; pop rcx; neg eax; pop rsi; ret; 
0x0000000000056f27: call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x000000000003b3a0: call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000059347: call 0x5767b; call rbx; 
0x000000000005cb5f: call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x00000000000574c7: call 0x57e31; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x00000000000580c7: call 0x57e31; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000058936: call 0x59543; mov eax, 0xb; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000059733: call 0x59a36; xor eax, eax; pop rdx; ret; 
0x0000000000056ff0: call 0x5a45b; xor eax, eax; pop rbx; ret; 
0x0000000000058bbb: call 0x5a45b; xor eax, eax; pop rdx; ret; 
0x000000000005d58c: call 0x5a4f0; movsxd rdi, dword ptr [rsp + 0x24]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005a985: call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x0000000000023d44: call 0x5b023c7d; ret; 
0x0000000000024244: call 0x5b024178; ret; 
0x000000000005cf27: call 0x5b884; pop rdx; not eax; shr eax, 0x1f; ret; 
0x000000000005bd6a: call 0x5b8f0; neg eax; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000017610: call 0x5c42d370; ret; 
0x0000000000017710: call 0x5c42d470; ret; 
0x00000000000184dd: call 0x5c42e23d; pop r13; ret; 
0x000000000001850e: call 0x5c42e26e; pop r13; ret; 
0x000000000004df3c: call 0x5c463c9c; pop r13; ret; 
0x000000000005bb46: call 0x5c4718a6; pop r13; pop r14; ret; 
0x000000000003945b: call 0x5d2e3; mov eax, r12d; pop rdx; pop rbp; pop r12; ret; 
0x0000000000016e6a: call 0x5d42cab0; pop r14; pop r15; ret; 
0x0000000000022514: call 0x5d43815a; pop r14; pop r15; ret; 
0x0000000000054e7f: call 0x5d46aac5; pop r14; ret; 
0x00000000000607d2: call 0x5e56f; mov rsi, r15; mov rdi, r12; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x0000000000061a92: call 0x5e810; mov eax, 1; pop rcx; ret; 
0x00000000000220ff: call 0x60684; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000001a2c4: call 0x6412b2bc; and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000035960: call 0x6e12bf84; ret 0x774; 
0x000000000002c1e2: call 0x7cde8bc5; and al, 8; fld xword ptr [rsp + 8]; ret; 
0x0000000000038054: call 0x827ed34; fyl2x; ret; 
0x00000000000280c3: call 0x9056b89; ret 0xd089; 
0x0000000000055876: call 0x9524a04; ror byte ptr [rax - 0x2d], 0xe2; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000191e5: call 0x9fa151a; jbe 0x191d0; mov eax, 1; ret; 
0x000000000001923d: call 0x9fa1572; jbe 0x19276; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x0000000000022d0d: call 0xc025215; add byte ptr [rax], al; ret; 
0x000000000003273f: call 0xe6a874; add bh, bh; jg 0x32751; ret; 
0x00000000000357d8: call 0xf4bbe1c; outsb dx, byte ptr [rsi]; ret 0x774; 
0x0000000000031b9a: call 0xffffffff81031ba2; std; ret; 
0x000000000005f3af: call 0xffffffff834eb128; ror byte ptr [rax], 0x48; mov dword ptr [rsp + 8], eax; call qword ptr [rax - 8]; 
0x0000000000049039: call 0xffffffff894d903d; ret 0x8548; 
0x0000000000043a52: call 0xffffffff89d46b62; ret 0xe2c1; 
0x000000000001fd7b: call 0xffffffff89e0e890; ret 0x894c; 
0x0000000000028e4f: call 0xffffffff8b1e7964; and byte ptr [rbp + r9*4 + 5], r9b; ret; 
0x000000000002a55c: call 0xffffffffc0b9b470; ret; 
0x000000000001967c: call 0xffffffffc149f3dc; clc; add al, byte ptr [rcx + 0x5c]; ret; 
0x0000000000043aa8: call 0xffffffffc15a49b1; movd dword ptr [rax], xmm0; ret; 
0x00000000000378f5: call 0xffffffffc2dc5ad6; fmulp st(1); fsqrt; fpatan; ret; 
0x0000000000037b66: call 0xffffffffca0cc3a0; ret; 
0x000000000002db87: call 0xffffffffcc5beb7e; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002dfd7: call 0xffffffffcc5befce; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002e5dd: call 0xffffffffcd5ef5d5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x0000000000019224: call 0xffffffffd0531f59; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000003792c: call 0xffffffffd9e07ea3; fchs; ret; 
0x000000000003804d: call 0xfffffffff1dd4230; ret; 
0x000000000002f62a: call 0xfffffffff302f6b9; movups xmm2, xmmword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x00000000000379ff: call 0xfffffffffddc7f7c; fstp st(1); ret; 
0x00000000000226c5: call qword ptr [rax + 0x41]; 
0x0000000000024757: call qword ptr [rax + 0x41]; mov edx, ecx; mov eax, 0x115; syscall; 
0x000000000003e03f: call qword ptr [rax + 0x45]; 
0x000000000003e442: call qword ptr [rax + 0x45]; xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e03f: call qword ptr [rax + 0x45]; xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000022dc7: call qword ptr [rax + 0x48]; 
0x00000000000580cb: call qword ptr [rax + 0x48]; mov eax, edi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000005e1b4: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000024267: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000024017: call qword ptr [rax + 0x48]; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x00000000000247ae: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000245e2: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022f43: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004bd88: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000022ddf: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000022dc7: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023f1c: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005ddd0: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023fd5: call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x000000000006103d: call qword ptr [rax + 1]; 
0x00000000000177b8: call qword ptr [rax - 0x18]; 
0x0000000000032d28: call qword ptr [rax - 0x18]; xor dword ptr [rip - 0xda60000], ebp; cvttps2pi mm0, xmm0; ret; 
0x0000000000032843: call qword ptr [rax - 0x25]; 
0x00000000000568bc: call qword ptr [rax - 0x42]; 
0x000000000005690a: call qword ptr [rax - 0x42]; adc al, 0x54; add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x00000000000568bc: call qword ptr [rax - 0x42]; adc edx, dword ptr [rax + rax]; mov eax, 0x10; syscall; 
0x0000000000022f01: call qword ptr [rax - 0x48]; 
0x00000000000247f6: call qword ptr [rax - 0x48]; adc byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000003b1b7: call qword ptr [rax - 0x48]; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004bd73: call qword ptr [rax - 0x48]; and al, 0; add byte ptr [rax], al; syscall; 
0x000000000005d332: call qword ptr [rax - 0x48]; and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005b827: call qword ptr [rax - 0x48]; in eax, 0; add byte ptr [rax], al; syscall; 
0x000000000005d871: call qword ptr [rax - 0x48]; jae 0x5d876; add byte ptr [rax], al; syscall; 
0x000000000005d98d: call qword ptr [rax - 0x48]; jl 0x5d992; add byte ptr [rax], al; syscall; 
0x0000000000024503: call qword ptr [rax - 0x48]; jnp 0x24508; add byte ptr [rax], al; syscall; 
0x000000000005d95e: call qword ptr [rax - 0x48]; jns 0x5d963; add byte ptr [rax], al; syscall; 
0x0000000000024517: call qword ptr [rax - 0x48]; jp 0x2451c; add byte ptr [rax], al; syscall; 
0x000000000002476f: call qword ptr [rax - 0x48]; xor al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000023eeb: call qword ptr [rax - 0x77]; 
0x0000000000023eeb: call qword ptr [rax - 0x77]; idiv byte ptr [rax + 0x12c]; syscall; 
0x000000000004cd23: call qword ptr [rax - 0x77]; sar byte ptr [rax + 0x102], cl; syscall; 
0x0000000000023fbe: call qword ptr [rax - 0x77]; sar byte ptr [rax + 0xfe], cl; syscall; 
0x000000000003a17f: call qword ptr [rax - 0x77]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x8d; syscall; 
0x000000000005f3bb: call qword ptr [rax - 8]; 
0x0000000000025a31: call qword ptr [rax]; 
0x000000000004e86f: call qword ptr [rbp + 0x10]; 
0x000000000004db6f: call qword ptr [rbp + 0x18]; 
0x000000000004ef1f: call qword ptr [rbp + 0x40]; 
0x000000000002273f: call qword ptr [rbp + 0x48]; 
0x000000000004dd4d: call qword ptr [rbp + 0x50]; 
0x0000000000039af9: call qword ptr [rbp + 0x53]; 
0x0000000000023447: call qword ptr [rbp - 0x77]; 
0x000000000001b89b: call qword ptr [rbx + 0x10]; 
0x000000000004d8b2: call qword ptr [rbx + 0x40]; 
0x000000000001e61d: call qword ptr [rbx + 0x48]; 
0x000000000004f19f: call qword ptr [rbx + 0x50]; 
0x000000000001ccc4: call qword ptr [rbx + 0x66]; 
0x0000000000039636: call qword ptr [rbx - 0x46]; 
0x00000000000243d6: call qword ptr [rbx - 0x73]; 
0x0000000000021685: call qword ptr [rbx - 0x77]; 
0x00000000000580c2: call qword ptr [rbx]; 
0x000000000002466a: call qword ptr [rcx - 0x46]; 
0x000000000002466a: call qword ptr [rcx - 0x46]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x00000000000390b5: call qword ptr [rcx - 0x77]; 
0x00000000000390b5: call qword ptr [rcx - 0x77]; idiv byte ptr [rax + 0x8c]; syscall; 
0x0000000000015617: call qword ptr [rcx]; 
0x000000000002d1cc: call qword ptr [rdi + 0x3f]; 
0x000000000004d7f5: call qword ptr [rdi + 0x48]; 
0x000000000002cd1b: call qword ptr [rdi]; 
0x0000000000060683: call qword ptr [rdx + 0x48]; 
0x0000000000055dab: call qword ptr [rsi + 0x45]; 
0x000000000004e7dc: call qword ptr [rsi + 8]; 
0x000000000005a51c: call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x0000000000021d4c: call rax; 
0x000000000002210c: call rbx; 
0x000000000002110f: call rcx; 
0x000000000005a51d: call rcx; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x000000000002d797: call rdi; 
0x000000000002342f: call rdx; 
0x000000000003c8df: call rsi; 
0x0000000000022729: call rsp; 
0x000000000004f907: cdq; add al, 0; movzx eax, byte ptr [rax]; ret; 
0x0000000000054860: cdq; add rax, rcx; jmp rax; 
0x0000000000055622: cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x000000000005bdb1: cdq; idiv esi; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000005581b: cdq; idiv rsi; ret; 
0x0000000000023381: cdq; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000028d13: cdqe; cmp r8, rax; setb al; movzx eax, al; ret; 
0x000000000004633a: cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000004634c: cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000021a0d: cdqe; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; inc eax; ret; 
0x0000000000049910: cdqe; pop r13; ret; 
0x000000000001e5bd: cdqe; pop rdx; ret; 
0x0000000000027b29: cdqe; ret; 
0x000000000001fbea: clc; adc byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d5c4: clc; add al, 0x75; fisttp qword ptr [rax + 0x63]; jl 0x5d5f0; and byte ptr [rax + 3], bh; syscall; 
0x0000000000019681: clc; add al, byte ptr [rcx + 0x5c]; ret; 
0x0000000000019650: clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000055f86: clc; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000001b894: clc; add dh, byte ptr [rbp + 0x53]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x00000000000203f8: clc; and byte ptr [rbp - 0x32], dh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000026436: clc; and byte ptr ds:[rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x00000000000217c3: clc; and eax, 0x7f; ret; 
0x000000000003b544: clc; and eax, 0xdfff; ret; 
0x000000000003ea83: clc; and eax, 0xffffff; ret; 
0x0000000000021a14: clc; and eax, 1; inc eax; ret; 
0x0000000000021540: clc; and eax, 1; ret; 
0x0000000000024b3c: clc; bswap eax; ret; 
0x000000000005d313: clc; call 0x17230; pop rdi; ret; 
0x0000000000022dd5: clc; call 0x17230; pop rdx; ret; 
0x0000000000055621: clc; cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x00000000000217cc: clc; cmp edx, 0x19; ja 0x217d5; or eax, 0x20; ret; 
0x00000000000217df: clc; cmp edx, 0x19; ja 0x217e8; and eax, 0x5f; ret; 
0x00000000000447b3: clc; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x0000000000055819: clc; cqo; idiv rsi; ret; 
0x0000000000030d0e: clc; cvtsd2ss xmm0, xmm7; ret; 
0x0000000000057ab4: clc; fidiv dword ptr [rbp + 0x14]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b73: clc; fidiv dword ptr [rbp + 0x15]; mov esi, 3; mov rax, rbx; syscall; 
0x000000000005937f: clc; fidiv dword ptr [rbp + 0x25]; mov esi, 1; mov rax, r8; syscall; 
0x000000000005718f: clc; fidiv dword ptr [rbp + 0x28]; mov rax, r8; syscall; 
0x0000000000057b4c: clc; fidiv dword ptr [rbp + 0x3c]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057369: clc; fidiv dword ptr [rbp + 0x55]; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b268: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d3: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000001b233: clc; fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r9; syscall; 
0x0000000000058026: clc; fidiv dword ptr [rbp + 0xd]; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x0000000000023e72: clc; fidiv dword ptr [rbp + 0xd]; test esi, esi; jne 0x23e83; mov eax, 0x11c; syscall; 
0x0000000000023f9c: clc; fidiv dword ptr [rbp + 0xe]; test edx, edx; jne 0x23fae; mov eax, 0xfd; syscall; 
0x0000000000023e3e: clc; fidiv dword ptr [rbp + 0xe]; test r8, r8; jne 0x23e50; mov eax, 0xe8; syscall; 
0x00000000000570f3: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x0000000000057e25: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057dd6: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; ret; 
0x00000000000576e0: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000569aa: clc; fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000004d437: clc; fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d437: clc; fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004de06: clc; fidiv dword ptr [rbp + 8]; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c47: clc; fidiv dword ptr [rbp - 0x18]; xor esi, esi; mov rax, r12; syscall; 
0x00000000000572d5: clc; fidiv dword ptr [rbp - 0x1c]; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000004d3dd: clc; fidiv dword ptr [rbp - 0x38]; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x0000000000057f7a: clc; fidiv dword ptr [rbp - 0x5e]; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000037fda: clc; fnstsw ax; fstp st(1); test ah, 4; jne 0x37fd3; ret; 
0x000000000003eaa9: clc; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000002620a: clc; jmp rax; 
0x0000000000017f51: clc; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000022a0d: clc; js 0x22a48; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000022cbf: clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000044089: clc; leave; ret; 
0x000000000001e89e: clc; mov dword ptr [rcx - 4], edx; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x00000000000343c5: clc; mov eax, 0; cmove eax, edx; ret; 
0x000000000005d30a: clc; mov eax, 0; cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x000000000005d5dc: clc; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000419c9: clc; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004cdc5: clc; mov eax, 0x8a; syscall; 
0x00000000000229ed: clc; mov eax, 3; syscall; 
0x000000000004d2ef: clc; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004e743: clc; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000003c297: clc; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000005d3e4: clc; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000004480f: clc; mov rax, r12; syscall; 
0x00000000000580cf: clc; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000057f85: clc; mov rdx, rsi; syscall; 
0x0000000000033f9a: clc; movaps xmm0, xmm1; ret; 
0x0000000000037890: clc; movq xmm0, rax; ret; 
0x0000000000029534: clc; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295c4: clc; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001a2ca: clc; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001cf60: clc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001d3f2: clc; movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000058b1b: clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x00000000000295ca: clc; mulsd xmm0, xmm1; ret; 
0x00000000000554c5: clc; neg eax; cmovs eax, edi; ret; 
0x00000000000349eb: clc; neg eax; sbb r8d, r8d; add r8d, 2; mov eax, r8d; ret; 
0x000000000005580e: clc; neg rax; cmovs rax, rdi; ret; 
0x0000000000023e9b: clc; or byte ptr [rdi], cl; xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000019240: clc; or dword ptr [rsi + 0x32], esi; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x00000000000191e8: clc; or dword ptr [rsi - 0x1c], esi; mov eax, 1; ret; 
0x0000000000022ccf: clc; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x00000000000447ed: clc; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000017de6: clc; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002e367: clc; push qword ptr [rbp + 0xd]; subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5b7: clc; push qword ptr [rbp + 0xd]; subss xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x0000000000022fb8: clc; push qword ptr [rbp + 7]; lea rax, [rip + 0x73561]; ret; 
0x000000000001723b: clc; ret; 
0x00000000000196fd: clc; sar rax, 2; ret; 
0x000000000004cae6: clc; test dword ptr [rdi], 0x9385; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000059744: clc; test edi, edi; js 0x59752; mov edx, 0xb; cmovne eax, edx; ret; 
0x0000000000024977: clc; test esi, esi; je 0x2497e; bswap eax; ret; 
0x000000000002c257: clc; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7dd: clc; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000018eb9: clc; test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x000000000003e51b: clc; xchg al, ah; ret; 
0x0000000000022cc4: clc; xor eax, eax; ret; 
0x000000000002953a: clc; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000035aa4: clc; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000005750b: cld; add esi, dword ptr [rbp + 7]; mov rax, r12; syscall; 
0x000000000002c318: cld; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x0000000000018364: cld; call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b4: cld; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000005b6f7: cld; call qword ptr [rbp + 0x48]; 
0x000000000002e767: cld; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000001e8a1: cld; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x000000000004d4d7: cld; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x0000000000053652: cld; dec dword ptr [rax - 0x77]; ret 0x8b49; 
0x0000000000045a90: cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000000485b7: cld; dec dword ptr [rax - 0x7d]; ret; 
0x000000000005e04b: cld; dec dword ptr [rcx + 0x5ac03128]; pop rbx; pop rbp; ret; 
0x000000000005b7bf: cld; dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x000000000001e7fc: cld; dec esi; jne 0x1e7f2; ret; 
0x000000000004dbd1: cld; inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005da07: cld; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x18; ret; 
0x000000000005b81b: cld; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x000000000004862c: cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000004b1aa: cld; lcall [rbx - 0x3d]; push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000004b168: cld; lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x000000000004b221: cld; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x000000000004b326: cld; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000004b359: cld; lcall [rdx - 0x3d]; push rax; mov eax, 0x18; syscall; 
0x00000000000509d8: cld; lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x0000000000056435: cld; lea rax, [rdi + 1]; ret; 
0x0000000000037ae8: cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003c2b1: cld; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000002f861: cld; mov eax, r8d; ret; 
0x000000000004c037: cld; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000003402f: cld; movaps xmm0, xmm1; ret; 
0x00000000000378d1: cld; movd xmm0, eax; ret; 
0x000000000001a2d0: cld; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002955c: cld; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295e3: cld; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295e9: cld; mulss xmm0, xmm1; ret; 
0x00000000000592aa: cld; or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x0000000000055787: cld; push rdi; fdivr dword ptr [rcx]; ret; 
0x000000000001cf66: cld; ret; 
0x0000000000029562: cld; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000035b2f: cld; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000003b023: cli; add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000005048d: cli; add byte ptr [rax], al; add byte ptr [rdx + 0x63], cl; jl 0x50441; and byte ptr [rax + 3], bh; syscall; 
0x000000000002f927: cli; add dword ptr [rcx], ebx; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000022a34: cli; add dword ptr [rsi + 3], esi; movsxd rsi, eax; mov eax, 0x48; mov rdx, r10; syscall; 
0x0000000000025b4f: cli; add ecx, dword ptr [rdi]; xchg byte ptr [rsi + 0x31fffffe], al; imul al; mov eax, 0x89fffffa; ret 0x3d; 
0x0000000000023e85: cli; call 0x17230; pop rdx; ret; 
0x00000000000378e6: cli; fabs; fxch st(1); fpatan; ret; 
0x00000000000378fd: cli; fpatan; ret; 
0x000000000003c1d2: cli; jg 0x3c24c; add al, 0x40; movzx eax, bh; ret; 
0x000000000005144d: cli; jmp rdx; 
0x000000000003ea8f: cli; mov edi, 0x77000000; add ecx, dword ptr [rdi]; mov bh, 0xc7; ret; 
0x00000000000275ab: cli; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x000000000004bd41: cli; mov r10d, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd27: cli; mov r10d, 8; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000047bf3: cli; or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x0000000000051ca0: cli; or dword ptr [rdi + rax + 0x6b], esi; test byte ptr [rdx], 0xff; ret 0xf4eb; 
0x0000000000048a6f: cli; or eax, 0x83480000; ret; 
0x000000000003f1c1: cli; push qword ptr [rbp + 7]; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000001a132: cli; ret 7; 
0x0000000000038120: cli; ret; 
0x00000000000217e1: cli; sbb dword ptr [rdi + 3], esi; and eax, 0x5f; ret; 
0x00000000000217ce: cli; sbb dword ptr [rdi + 3], esi; or eax, 0x20; ret; 
0x000000000001948c: cli; sbb eax, 0xb70f0c7e; sbb al, 0x66; rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x0000000000023dd9: cli; syscall; 
0x0000000000046981: cmc; add al, 0; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000045a8f: cmc; cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000000380b5: cmc; fnstsw ax; fstp st(1); test ah, 4; jne 0x380ae; ret; 
0x00000000000281eb: cmc; loope 0x281f0; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000041a0b: cmc; push rbx; mov rbx, rcx; syscall; 
0x000000000003a01d: cmc; ret; 
0x00000000000196fa: cmc; sub rax, rdi; sar rax, 2; ret; 
0x0000000000023f3f: cmova edx, eax; mov eax, 0xd9; syscall; 
0x0000000000023f3e: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000018943: cmove eax, edx; ret; 
0x0000000000039d06: cmove ebx, eax; mov eax, 0x10; syscall; 
0x0000000000049e62: cmove ecx, dword ptr [rcx - 0x1724ce01]; xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x000000000005d311: cmove edi, eax; call 0x17230; pop rdi; ret; 
0x00000000000275a9: cmove edi, edx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000018942: cmove rax, rdx; ret; 
0x0000000000039d05: cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000005d310: cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x00000000000275a8: cmove rdi, rdx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000017156: cmovg edx, eax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000017155: cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005aa0e: cmovge edx, eax; mov byte ptr [rcx + rdx], 0; ret; 
0x000000000005aa0d: cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x0000000000035e59: cmovl eax, edx; add eax, 0x3ff; shl rax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x0000000000035eca: cmovl eax, edx; add eax, 0x7f; shl eax, 0x17; movd xmm2, eax; mulss xmm0, xmm2; ret; 
0x0000000000018923: cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001821e: cmovne eax, edx; ret; 
0x0000000000056e8d: cmovne esi, dword ptr [rcx]; ror byte ptr [rax + 0x29], 0xc8; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000005dab1: cmovne esp, eax; mov eax, r12d; pop r12; ret; 
0x000000000005dab0: cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x0000000000018922: cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001821d: cmovne rax, rdx; ret; 
0x000000000001f1ea: cmovno edi, edi; ret 0xc148; 
0x0000000000038b22: cmovns ecx, dword ptr [rbx - 0x76b739f4]; ret 0x894c; 
0x0000000000051590: cmovs eax, dword ptr [rbx - 0x72b70f1e]; jb 0x515a9; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000053951: cmovs eax, dword ptr [rbx - 0x72b70f1e]; jb 0x5396a; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000554c8: cmovs eax, edi; ret; 
0x0000000000059a46: cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002dc08: cmovs ebx, dword ptr [rax + 0x4100ff2]; ret; 
0x000000000002dc27: cmovs ebx, dword ptr [rax + 0x4590ff2]; ret; 
0x0000000000056bd5: cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000022f7a: cmovs esi, eax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000002411d: cmovs esp, dword ptr [rbx + 0x7a]; xor byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005874e: cmovs esp, dword ptr [rbx + 0x7b]; xor byte ptr [rax + 0x91], bh; syscall; 
0x00000000000598b4: cmovs esp, dword ptr [rbx - 0xd]; mov eax, 0x90; mov rdx, r12; syscall; 
0x0000000000055812: cmovs rax, rdi; ret; 
0x0000000000022f79: cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000005d40e: cmp al, 0; add byte ptr [rax], al; mov edi, 1; syscall; 
0x0000000000022618: cmp al, 0; add byte ptr [rax], al; mov rax, rdx; syscall; 
0x000000000005a4ea: cmp al, 0; add byte ptr [rax], al; syscall; 
0x0000000000058047: cmp al, 0; add byte ptr [rax], al; xor edi, edi; mov rax, rdx; syscall; 
0x000000000001c18f: cmp al, 0x24; call 0x1d05f; add rsp, 0x28; fchs; fxch st(1); ret; 
0x0000000000033edc: cmp al, 0x24; call 0x22c9b; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000052ca4: cmp al, 0x31; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000021d44: cmp al, 0x48; mov eax, dword ptr [rsp]; mov rdi, r15; call rax; 
0x0000000000057b4f: cmp al, 0x4c; mov eax, eax; mov rsi, rdx; syscall; 
0x00000000000308c4: cmp al, 0x77; or eax, 0x5100ff2; cmp dword ptr [rsi + rax], ecx; divsd xmm0, xmm1; ret; 
0x000000000004991c: cmp al, 0x86; add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x8b4c; 
0x0000000000045822: cmp al, 0x89; ret 0x7c83; 
0x000000000004575b: cmp al, 0x89; ret 0x8341; 
0x0000000000019f6a: cmp al, 0x90; test rdx, rdx; je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000003f21f: cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x00000000000556ab: cmp al, 0xf; xchg eax, ebp; ret 0xd101; 
0x000000000001e5df: cmp al, byte ptr [rax + rax]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000045061: cmp al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005c01b: cmp al, byte ptr [rbx + 0xf]; xchg eax, ebp; ret 0xb60f; 
0x000000000002e1df: cmp al, byte ptr [rdx]; add byte ptr [rax], al; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x0000000000035945: cmp bh, 0x89; ret 0xe2c1; 
0x000000000002e0e5: cmp bh, 0xf; test byte ptr [rbx + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002e018: cmp bh, 0xf; test byte ptr [rdx + 0x3d000000], ah; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000024e5e: cmp bh, bh; dec dword ptr [rax - 0x77]; ret 0x854d; 
0x00000000000446cd: cmp bh, byte ptr [rax + 0x68]; syscall; 
0x0000000000021e9d: cmp byte ptr [r10], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000004d507: cmp byte ptr [r8 + 0x39], r9b; sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004dd0d: cmp byte ptr [r8 + 0x39], r9b; sub byte ptr [r8 + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004174f: cmp byte ptr [r8 - 0x7d], cl; ret; 
0x000000000004d508: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004dd0e: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r8 + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000042943: cmp byte ptr [rax + 0x3d8d4800], bh; ret; 
0x000000000004b80c: cmp byte ptr [rax + 0x63], cl; ret; 
0x0000000000019e8c: cmp byte ptr [rax + 1], cl; dec byte ptr [rax + 0x39]; ret 0x1b74; 
0x000000000004981a: cmp byte ptr [rax + 1], cl; ret; 
0x000000000005262b: cmp byte ptr [rax + rax], al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000004b571: cmp byte ptr [rax - 0x77], cl; ret; 
0x0000000000044486: cmp byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0x18]; xchg eax, ecx; and al, 1; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000049fc3: cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000041750: cmp byte ptr [rax - 0x7d], cl; ret; 
0x000000000001893f: cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x00000000000186a8: cmp byte ptr [rax], 0; jne 0x186a0; sub rax, rdi; ret; 
0x0000000000018704: cmp byte ptr [rax], 0; jne 0x18700; sub rax, rdi; ret; 
0x0000000000023a86: cmp byte ptr [rax], 0xa; jne 0x23a8e; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x0000000000018940: cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x00000000000186a9: cmp byte ptr [rax], al; jne 0x186a0; sub rax, rdi; ret; 
0x0000000000018705: cmp byte ptr [rax], al; jne 0x18700; sub rax, rdi; ret; 
0x000000000001821a: cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x0000000000031349: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000000183bc: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000381e3: cmp byte ptr [rbx + rax], 0x2f; jne 0x381d8; mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x00000000000200a8: cmp byte ptr [rbx - 0x7cb7fb86], cl; ret 0x8904; 
0x000000000003f4dc: cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x000000000005f7cc: cmp byte ptr [rcx + 1], cl; ret 0xdceb; 
0x0000000000059856: cmp byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005a5e6: cmp byte ptr [rcx - 0x77], cl; add al, 0x24; mov eax, 3; syscall; 
0x00000000000497e2: cmp byte ptr [rcx - 0x7d], cl; ret 0x8938; 
0x000000000005eb45: cmp byte ptr [rcx], al; add byte ptr [rax], al; lea rdi, [rip + 0x37898]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000213d3: cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000003b24c: cmp byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000002b9b6: cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm1; ret; 
0x000000000002e6d8: cmp byte ptr [rdi + 0x77], 0xa; comiss xmm0, xmm1; jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x0000000000035867: cmp byte ptr [rdi + 0x77], 7; cmp eax, 0xff; jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000003b4e1: cmp byte ptr [rdi], 0x2f; push r12; jne 0x3b4eb; inc rdi; mov eax, 0xf1; syscall; 
0x000000000002c2db: cmp byte ptr [rdi], 0x66; movd mm0, eax; ret; 
0x0000000000021e9e: cmp byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x7a141]; syscall; 
0x0000000000023a87: cmp byte ptr [rdx], cl; jne 0x23a8e; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x0000000000039f42: cmp byte ptr [rip - 0x76b7fffe], bh; ret 0x3949; 
0x0000000000022a0f: cmp byte ptr [rsi + 2], bh; mov edx, 1; mov rax, r8; syscall; 
0x0000000000039c80: cmp byte ptr [rsi*2 + 0xb00c706], bl; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000028eb9: cmp byte ptr [rsi], 0; je 0x28ebf; hlt; sub rax, rdx; ret; 
0x000000000004cad0: cmp byte ptr [rsi], 0; jne 0x4cb48; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x0000000000039141: cmp byte ptr [rsi], ah; jne 0x39179; lea rsi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x0000000000022311: cmp ch, bl; imul ecx, dword ptr [rcx + rcx*4 - 0x19], -0x18; hlt; sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x0000000000029cf7: cmp ch, bl; or eax, dword ptr [rcx - 0x77]; ret; 
0x0000000000026c62: cmp cl, 0x20; je 0x26c5d; ret; 
0x0000000000017a23: cmp cl, al; je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x000000000001d3e8: cmp cl, bl; leave; ret; 
0x000000000001a663: cmp cl, bl; ret; 
0x000000000005d6b7: cmp cl, byte ptr [rax - 0x77]; push rsp; and al, 8; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000051bb5: cmp cl, byte ptr [rax - 0x7d]; ret 0x4104; 
0x000000000003e87e: cmp cl, byte ptr [rcx - 0x77]; in al, 0x89; ret; 
0x0000000000017a22: cmp cl, r8b; je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000037560: cmp dh, bl; leave; ret; 
0x000000000003f1c0: cmp dl, 0xff; jne 0x3f1cc; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x0000000000044750: cmp dword ptr [r8 + 0x14], r13d; jne 0x44776; movsxd rdi, r13d; mov eax, 0x20; syscall; 
0x000000000004081b: cmp dword ptr [rax + 0x10], ebx; jne 0x40811; pop rbx; ret; 
0x0000000000044751: cmp dword ptr [rax + 0x14], ebp; jne 0x44776; movsxd rdi, r13d; mov eax, 0x20; syscall; 
0x000000000003e489: cmp dword ptr [rax + 0x58], 0; je 0x3e496; add rax, 0xa0; ret; 
0x000000000004480c: cmp dword ptr [rax + 0x63], ecx; clc; mov rax, r12; syscall; 
0x000000000004affe: cmp dword ptr [rax + rax - 0x1f76b400], esi; pop r12; ret; 
0x0000000000052645: cmp dword ptr [rax + rax], eax; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000039c7f: cmp dword ptr [rax], 0x1c; jne 0x39c8a; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x0000000000039140: cmp dword ptr [rax], 0x26; jne 0x39179; lea rsi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x00000000000213d2: cmp dword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000043d8b: cmp dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000004d50a: cmp dword ptr [rbp + 0x28], eax; je 0x4d519; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004dd10: cmp dword ptr [rbp + 0x28], eax; je 0x4dd35; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000002454b: cmp dword ptr [rbx + 0x10], 0; jne 0x2456e; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000005de75: cmp dword ptr [rbx + 0x10], 0; jne 0x5de98; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x0000000000043b17: cmp dword ptr [rbx + 0x398901cf], eax; ret; 
0x000000000002300f: cmp dword ptr [rbx], eax; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x0000000000058ba0: cmp dword ptr [rcx + 0x30], edx; jne 0x58bb1; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000004daa6: cmp dword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000003a197: cmp dword ptr [rdi + 0x14], 0; mov rsi, rdi; jg 0x3a1b0; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000004dada: cmp dword ptr [rdi + 0x20], 0; je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004da91: cmp dword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004d7ec: cmp dword ptr [rdi + 0x28], eax; je 0x4d7f8; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004f24e: cmp dword ptr [rdi + 0x28], esi; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000050b56: cmp dword ptr [rdi + 0x60], 0; je 0x50b66; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000021bb8: cmp dword ptr [rdi + 0xc], eax; jl 0x21bf2; movsxd rdi, dword ptr [rdi + 8]; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x000000000003b892: cmp dword ptr [rdi], 0; sete al; ret; 
0x0000000000056ea9: cmp dword ptr [rdi], 0; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000019dea: cmp dword ptr [rdi], esi; jne 0x19de0; mov rax, rdi; ret; 
0x00000000000599b3: cmp dword ptr [rdx], esi; je 0x599be; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005a44d: cmp dword ptr [rdx], esi; je 0x5a458; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000003b293: cmp dword ptr [rsi + 0xc], 2; je 0x3b2b6; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x00000000000308cb: cmp dword ptr [rsi + rax], ecx; divsd xmm0, xmm1; ret; 
0x00000000000266c3: cmp dword ptr [rsi], 0; lea rdx, [rip + 0x6ff30]; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x000000000003945c: cmp dword ptr [rsi], 2; add byte ptr [rcx + rcx*4 - 0x20], al; pop rdx; pop rbp; pop r12; ret; 
0x000000000003238d: cmp dword ptr [rsi], eax; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000018f95: cmp dx, r8w; jne 0x18f80; pop rbp; ret; 
0x000000000005d357: cmp eax, -0x10; je 0x5d352; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000509c6: cmp eax, -0x15; jne 0x509d2; mov eax, 0x54; syscall; 
0x000000000005b8a5: cmp eax, -0x16; je 0x5b8e7; movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000002297f: cmp eax, -0x16; jne 0x22996; mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000229d2: cmp eax, -0x16; jne 0x22a09; xor r9d, r9d; mov rax, r8; mov rdx, r9; syscall; 
0x000000000001b232: cmp eax, -0x26; jne 0x1b241; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b267: cmp eax, -0x26; jne 0x1b276; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b29f: cmp eax, -0x26; jne 0x1b2ae; mov esi, 1; mov rax, r8; syscall; 
0x0000000000023e3d: cmp eax, -0x26; jne 0x23e50; test r8, r8; jne 0x23e50; mov eax, 0xe8; syscall; 
0x0000000000023e71: cmp eax, -0x26; jne 0x23e83; test esi, esi; jne 0x23e83; mov eax, 0x11c; syscall; 
0x0000000000023f9b: cmp eax, -0x26; jne 0x23fae; test edx, edx; jne 0x23fae; mov eax, 0xfd; syscall; 
0x000000000004d3dc: cmp eax, -0x26; jne 0x4d3a9; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004d436: cmp eax, -0x26; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d436: cmp eax, -0x26; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004de05: cmp eax, -0x26; jne 0x4de12; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004eb63: cmp eax, -0x26; jne 0x4eb70; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f7c5: cmp eax, -0x26; jne 0x4f7d2; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f8ad: cmp eax, -0x26; jne 0x4f8ba; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005071d: cmp eax, -0x26; jne 0x5072a; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000050843: cmp eax, -0x26; jne 0x50850; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000569a9: cmp eax, -0x26; jne 0x569b5; xor esi, esi; mov rax, r9; syscall; 
0x0000000000056a00: cmp eax, -0x26; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000056a00: cmp eax, -0x26; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000056c46: cmp eax, -0x26; jne 0x56c33; xor esi, esi; mov rax, r12; syscall; 
0x00000000000570f2: cmp eax, -0x26; jne 0x570fc; mov rax, r8; syscall; 
0x0000000000057128: cmp eax, -0x26; jne 0x57132; mov rax, r8; syscall; 
0x000000000005718e: cmp eax, -0x26; jne 0x571bb; mov rax, r8; syscall; 
0x00000000000571f7: cmp eax, -0x26; jne 0x57201; mov rax, r8; syscall; 
0x0000000000057275: cmp eax, -0x26; jne 0x57282; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000572d4: cmp eax, -0x26; jne 0x572bd; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000005732e: cmp eax, -0x26; jne 0x5733b; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000573a2: cmp eax, -0x26; jne 0x573af; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000057368: cmp eax, -0x26; jne 0x573c2; mov esi, 1; mov rax, r9; syscall; 
0x00000000000573f1: cmp eax, -0x26; jne 0x573fe; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576df: cmp eax, -0x26; jne 0x576e9; mov rax, r8; syscall; 
0x00000000000576df: cmp eax, -0x26; jne 0x576e9; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005772a: cmp eax, -0x26; jne 0x57734; mov rax, r8; syscall; 
0x00000000000577b9: cmp eax, -0x26; jne 0x577c3; mov rax, r8; syscall; 
0x00000000000577b9: cmp eax, -0x26; jne 0x577c3; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000577e5: cmp eax, -0x26; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000577e5: cmp eax, -0x26; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057ab3: cmp eax, -0x26; jne 0x57acc; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b72: cmp eax, -0x26; jne 0x57b8c; mov esi, 3; mov rax, rbx; syscall; 
0x0000000000057b4b: cmp eax, -0x26; jne 0x57b8c; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dd5: cmp eax, -0x26; jne 0x57ddf; mov rax, r8; syscall; 
0x0000000000057dd5: cmp eax, -0x26; jne 0x57ddf; mov rax, r8; syscall; ret; 
0x0000000000057e24: cmp eax, -0x26; jne 0x57e2e; mov rax, r8; syscall; 
0x0000000000057e24: cmp eax, -0x26; jne 0x57e2e; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057f79: cmp eax, -0x26; jne 0x57f20; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000058025: cmp eax, -0x26; jne 0x58037; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000005853d: cmp eax, -0x26; jne 0x5854a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005914b: cmp eax, -0x26; jne 0x59158; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000592d2: cmp eax, -0x26; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d2: cmp eax, -0x26; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000005937e: cmp eax, -0x26; jne 0x593a8; mov esi, 1; mov rax, r8; syscall; 
0x00000000000595a0: cmp eax, -0x26; jne 0x595af; mov esi, 1; mov rax, r8; syscall; 
0x0000000000059fa5: cmp eax, -0x26; jne 0x59fb2; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005a4bf: cmp eax, -0x26; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; 
0x000000000005a4bf: cmp eax, -0x26; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000022fb7: cmp eax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x000000000002e366: cmp eax, -1; jne 0x2e378; subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5b6: cmp eax, -1; jne 0x2e5c8; subss xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000004cae5: cmp eax, -9; jne 0x4cb81; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000001fbe9: cmp eax, 0x10; jne 0x1fbbc; pop rbx; pop rbp; pop r12; ret; 
0x00000000000203f7: cmp eax, 0x20; jne 0x203ca; pop rbx; pop rbp; pop r12; ret; 
0x0000000000061a8d: cmp eax, 0x35582; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x000000000005eb4b: cmp eax, 0x37898; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000005261e: cmp eax, 0x37; ja 0x5294b; lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000308c0: cmp eax, 0x3c8fffff; ja 0x308d4; movsd xmm0, qword ptr [rip + 0x64c39]; divsd xmm0, xmm1; ret; 
0x000000000005ef3c: cmp eax, 0x3d077; ret; 
0x0000000000038042: cmp eax, 0x3ffd9400; ja 0x3804c; fyl2xp1; ret; 
0x0000000000053803: cmp eax, 0x428ac; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000057e16: cmp eax, 0x441d5; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc7: cmp eax, 0x44224; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000051442: cmp eax, 0x44a81; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000050278: cmp eax, 0x45000000; xor edx, edx; xor edx, edx; mov rax, r8; syscall; 
0x0000000000050838: cmp eax, 0x48b6f; mov rax, r9; syscall; 
0x000000000004f8a2: cmp eax, 0x49a05; mov rax, r9; syscall; 
0x000000000005daef: cmp eax, 0x5afffb97; ret; 
0x0000000000022def: cmp eax, 0x5affff44; ret; 
0x00000000000261fc: cmp eax, 0x6f7a7; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023a2e: cmp eax, 0x6febd; call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x00000000000220b1: cmp eax, 0x746fa; mov esi, 0x8002; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000021eaa: cmp eax, 0x7a141; syscall; 
0x0000000000035b25: cmp eax, 0x7d; jg 0x35b38; movss dword ptr [rsp - 4], xmm1; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000002e020: cmp eax, 0x7f7; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0ed: cmp eax, 0x7f7; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000002bfc1: cmp eax, 0x7f7fffff; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002e768: cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002e6d5: cmp eax, 0x7f800000; ja 0x2e6e6; comiss xmm0, xmm1; jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x000000000002b9b3: cmp eax, 0x7f800000; jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x000000000002fda2: cmp eax, 0x7fefffff; jbe 0x2fdb6; movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x00000000000356ba: cmp eax, 0x7ff; jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000001b294: cmp eax, 0x80d4f; mov rax, r8; syscall; 
0x0000000000039f43: cmp eax, 0x89480002; ret 0x3949; 
0x0000000000060bf7: cmp eax, 0x8d4c0675; or bl, ch; and eax, dword ptr [rax + rax*8 - 0x74b7e88b]; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x000000000004c9be: cmp eax, 0xa000; je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000004ca24: cmp eax, 0xa000; je 0x4ca39; mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x000000000005b8a9: cmp eax, 0xb8fb6348; in al, 0; add byte ptr [rax], al; mov rsi, rbp; syscall; 
0x000000000003eaa3: cmp eax, 0xbf; mov eax, edi; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000002935f: cmp eax, 0xf20006b9; mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003586b: cmp eax, 0xff; jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000005d587: cmp eax, 0xfffffe52; call 0x5a4f0; movsxd rdi, dword ptr [rsp + 0x24]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000002196b: cmp eax, 1; sbb rax, rax; and eax, 2; add rsp, 0x18; ret; 
0x000000000001b893: cmp eax, 2; jne 0x1b8eb; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000005d5c3: cmp eax, 4; jne 0x5d5a5; movsxd rdi, dword ptr [rsp + 0x20]; mov eax, 3; syscall; 
0x000000000005aa05: cmp eax, 6; mov eax, 6; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x0000000000053dfe: cmp eax, 7; ja 0x53ac6; lea rdx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000023e9a: cmp eax, 8; setne al; movzx eax, al; neg eax; ret; 
0x00000000000191e7: cmp eax, 9; jbe 0x191d0; mov eax, 1; ret; 
0x000000000001923f: cmp eax, 9; jbe 0x19276; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x00000000000441b4: cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003f4dd: cmp eax, dword ptr [rax]; sete al; pop rbx; ret; 
0x0000000000019e21: cmp eax, eax; je 0x19e10; sub eax, r8d; ret; 
0x0000000000028d16: cmp eax, eax; setb al; movzx eax, al; ret; 
0x000000000001983c: cmp eax, eax; sete r9b; test r10b, r9b; jne 0x19820; sub eax, r8d; ret; 
0x000000000005f3ae: cmp eax, ebp; je 0x5f36f; add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x000000000002168e: cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x000000000001e8a3: cmp eax, ecx; ja 0x1e805; pop rbx; ret; 
0x0000000000056c36: cmp eax, ecx; jne 0x56c54; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x0000000000017f50: cmp eax, edi; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x000000000002e699: cmp eax, edx; ja 0x2e6a8; comisd xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002b847: cmp eax, edx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000004db30: cmp eax, edx; je 0x4db3b; sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x000000000004f3ac: cmp eax, edx; je 0x4f3f2; inc rax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x00000000000275b4: cmp eax, edx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000028161: cmp eax, edx; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x000000000002e750: cmp eax, edx; setbe al; movzx eax, al; ret; 
0x0000000000020d40: cmp eax, esp; jne 0x20ced; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019e20: cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x000000000001983b: cmp eax, r8d; sete r9b; test r10b, r9b; jne 0x19820; sub eax, r8d; ret; 
0x0000000000056c35: cmp eax, r9d; jne 0x56c54; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000001b4bd: cmp ebp, eax; ret 0x3c0; 
0x000000000005bd6b: cmp ebx, 0xd8f7ffff; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000220d2: cmp ebx, 3; jne 0x220bb; mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x0000000000052638: cmp ebx, 7; ja 0x5230e; lea rdx, [rip + 0x439a8]; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x000000000003a2ea: cmp ecx, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x000000000002d9f8: cmp ecx, 0x3e; jbe 0x2da3f; test ecx, ecx; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000004c393: cmp ecx, 0x3f; ja 0x4c3a1; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000047bf7: cmp ecx, 0xff; jle 0x47bdd; ret; 
0x0000000000019ea5: cmp ecx, 1; je 0x19eb0; mov eax, dword ptr [rsi + 8]; mov dword ptr [rcx + 8], eax; mov rax, r8; ret; 
0x000000000001a0aa: cmp ecx, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001b68f: cmp ecx, dword ptr [rax - 1]; ret 0x8948; 
0x0000000000056fce: cmp ecx, edx; ja 0x56fdf; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000017153: cmp ecx, esi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000057487: cmp ecx, esi; jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000003b53a: cmp edi, -1; je 0x3b54b; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000002141c: cmp edi, 0x19; setbe al; ret; 
0x00000000000214cc: cmp edi, 0x20; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000021547: cmp edi, 0x2fffd; setbe al; ret; 
0x0000000000030e50: cmp edi, 0x32ffffff; ja 0x30e65; movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x0000000000021475: cmp edi, 0x5d; setbe al; ret; 
0x0000000000021497: cmp edi, 0x5e; setbe al; ret; 
0x000000000001ef9d: cmp edi, 0x60; jg 0x1efa5; lea eax, [rdi - 0x35]; and eax, 0x3f; ret; 
0x0000000000030321: cmp edi, 0x7f7fffff; jbe 0x30336; movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x000000000003c1aa: cmp edi, 0x7f; ja 0x3c1b2; mov eax, edi; ret; 
0x000000000002144e: cmp edi, 0x7f; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000021a5c: cmp edi, 0xee; seta al; ret; 
0x00000000000216f0: cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x0000000000017231: cmp edi, 0xfffff000; ja 0x17240; mov rax, rdi; ret; 
0x00000000000599cb: cmp edi, 2; ja 0x599fb; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x0000000000021585: cmp edi, 2; setbe al; ret; 
0x0000000000021795: cmp edi, 5; setbe al; ret; 
0x0000000000021408: cmp edi, 9; setbe al; ret; 
0x0000000000021437: cmp edi, 9; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000041a80: cmp edi, dword ptr [rsi + 2]; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa7: cmp edi, dword ptr [rsi + 4]; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005ef32: cmp edi, eax; je 0x5ef41; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x0000000000026a9b: cmp edi, eax; setne al; movzx eax, al; and eax, edx; ret; 
0x0000000000024f7b: cmp edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000019f93: cmp edi, edx; jne 0x19f88; ret; 
0x00000000000217cd: cmp edx, 0x19; ja 0x217d5; or eax, 0x20; ret; 
0x00000000000217e0: cmp edx, 0x19; ja 0x217e8; and eax, 0x5f; ret; 
0x000000000001948b: cmp edx, 0x1d; jle 0x1949c; movzx eax, word ptr [rdi + 0x1c]; rol ax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x00000000000219af: cmp edx, 0x20; jg 0x21a68; neg edi; sbb eax, eax; ret; 
0x000000000003c1d1: cmp edx, 0x7f; ja 0x3c1da; movzx eax, dil; ret; 
0x000000000003ea8e: cmp edx, 0xbf; ja 0x3ea99; movzx eax, di; ret; 
0x0000000000022a33: cmp edx, 1; jbe 0x22a3b; movsxd rsi, eax; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000002f926: cmp edx, 1; sbb eax, eax; add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002e852: cmp edx, 1; sbb eax, eax; and eax, 0xc0800000; sub eax, 0x40800000; movd xmm0, eax; ret; 
0x000000000003b022: cmp edx, 4; je 0x3b033; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000047bf2: cmp edx, 9; ja 0x47bff; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x000000000002bf61: cmp edx, dword ptr [rcx + 0xff20006]; pop rax; ret; 
0x0000000000023f3c: cmp edx, eax; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000024b57: cmp edx, eax; jb 0x24b61; seta al; movzx eax, al; ret; 
0x0000000000018f97: cmp edx, eax; jne 0x18f80; pop rbp; ret; 
0x00000000000569cd: cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x0000000000059519: cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b7: cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x000000000002411a: cmp edx, ebp; je 0x2412d; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000028121: cmp edx, ecx; adc eax, 0; ret; 
0x0000000000027aee: cmp edx, ecx; jbe 0x27af3; hlt; ret; 
0x00000000000178d7: cmp edx, ecx; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x0000000000024b56: cmp edx, r8d; jb 0x24b61; seta al; movzx eax, al; ret; 
0x0000000000018f96: cmp edx, r8d; jne 0x18f80; pop rbp; ret; 
0x00000000000178d6: cmp edx, r9d; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x000000000002159b: cmp esi, 0xb; ja 0x215f3; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000056f35: cmp esi, 1; ja 0x56f3f; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f60: cmp esi, 1; ja 0x56f6a; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000057434: cmp esi, 1; ja 0x57440; shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000595cb: cmp esi, 1; ja 0x595d4; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001a016: cmp esi, 1; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x0000000000045cca: cmp esi, 2; je 0x45d19; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x0000000000052d3c: cmp esi, 5; ja 0x52d5e; lea rcx, [rip + 0x432d0]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000017105: cmp esi, 9; ja 0x170e0; ret; 
0x00000000000447b4: cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x0000000000044809: cmp esi, eax; je 0x44846; movsxd rdi, eax; mov rax, r12; syscall; 
0x000000000004dd3e: cmp esi, eax; je 0x4dd50; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004b951: cmp esi, ecx; jle 0x4b958; lea eax, [rsi + 1]; mov dword ptr [rdx + 0x18], eax; sub eax, r10d; ret; 
0x000000000005862a: cmp esi, edi; sete al; ret; 
0x0000000000056f50: cmp esi, edx; ja 0x56f5a; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000005750a: cmp esp, 3; jne 0x57516; mov rax, r12; syscall; 
0x0000000000052f2d: cmp esp, dword ptr [rip - 0xb7cb8b]; ret; 
0x000000000003e488: cmp qword ptr [rax + 0x58], 0; je 0x3e496; add rax, 0xa0; ret; 
0x00000000000213d1: cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000004d509: cmp qword ptr [rbp + 0x28], rax; je 0x4d519; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004dd0f: cmp qword ptr [rbp + 0x28], rax; je 0x4dd35; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004daa5: cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004dad9: cmp qword ptr [rdi + 0x20], 0; je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004da90: cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004d7eb: cmp qword ptr [rdi + 0x28], rax; je 0x4d7f8; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004f24d: cmp qword ptr [rdi + 0x28], rsi; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000050b55: cmp qword ptr [rdi + 0x60], 0; je 0x50b66; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000004c386: cmp qword ptr [rdi], 0; sete al; ret; 
0x00000000000599b2: cmp qword ptr [rdx], rsi; je 0x599be; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005a44c: cmp qword ptr [rdx], rsi; je 0x5a458; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000266c2: cmp qword ptr [rsi], 0; lea rdx, [rip + 0x6ff30]; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x0000000000052637: cmp r11d, 7; ja 0x5230e; lea rdx, [rip + 0x439a8]; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000057509: cmp r12, 3; jne 0x57516; mov rax, r12; syscall; 
0x0000000000028d15: cmp r8, rax; setb al; movzx eax, al; ret; 
0x000000000001e8a2: cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x000000000005aa04: cmp r8d, 6; mov eax, 6; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x0000000000053dfd: cmp r8d, 7; ja 0x53ac6; lea rdx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000019ea4: cmp r9, 1; je 0x19eb0; mov eax, dword ptr [rsi + 8]; mov dword ptr [rcx + 8], eax; mov rax, r8; ret; 
0x000000000001a0a9: cmp r9, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000003a2e9: cmp r9d, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x000000000001b231: cmp rax, -0x26; jne 0x1b241; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b266: cmp rax, -0x26; jne 0x1b276; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b29e: cmp rax, -0x26; jne 0x1b2ae; mov esi, 1; mov rax, r8; syscall; 
0x000000000004d3db: cmp rax, -0x26; jne 0x4d3a9; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004d435: cmp rax, -0x26; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d435: cmp rax, -0x26; jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004de04: cmp rax, -0x26; jne 0x4de12; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004eb62: cmp rax, -0x26; jne 0x4eb70; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f7c4: cmp rax, -0x26; jne 0x4f7d2; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f8ac: cmp rax, -0x26; jne 0x4f8ba; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005071c: cmp rax, -0x26; jne 0x5072a; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000050842: cmp rax, -0x26; jne 0x50850; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000569a8: cmp rax, -0x26; jne 0x569b5; xor esi, esi; mov rax, r9; syscall; 
0x00000000000569ff: cmp rax, -0x26; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000569ff: cmp rax, -0x26; jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000056c45: cmp rax, -0x26; jne 0x56c33; xor esi, esi; mov rax, r12; syscall; 
0x00000000000570f1: cmp rax, -0x26; jne 0x570fc; mov rax, r8; syscall; 
0x0000000000057127: cmp rax, -0x26; jne 0x57132; mov rax, r8; syscall; 
0x000000000005718d: cmp rax, -0x26; jne 0x571bb; mov rax, r8; syscall; 
0x00000000000571f6: cmp rax, -0x26; jne 0x57201; mov rax, r8; syscall; 
0x0000000000057274: cmp rax, -0x26; jne 0x57282; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000572d3: cmp rax, -0x26; jne 0x572bd; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000005732d: cmp rax, -0x26; jne 0x5733b; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000573a1: cmp rax, -0x26; jne 0x573af; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000057367: cmp rax, -0x26; jne 0x573c2; mov esi, 1; mov rax, r9; syscall; 
0x00000000000573f0: cmp rax, -0x26; jne 0x573fe; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576de: cmp rax, -0x26; jne 0x576e9; mov rax, r8; syscall; 
0x00000000000576de: cmp rax, -0x26; jne 0x576e9; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000057729: cmp rax, -0x26; jne 0x57734; mov rax, r8; syscall; 
0x00000000000577b8: cmp rax, -0x26; jne 0x577c3; mov rax, r8; syscall; 
0x00000000000577b8: cmp rax, -0x26; jne 0x577c3; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000577e4: cmp rax, -0x26; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000577e4: cmp rax, -0x26; jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057ab2: cmp rax, -0x26; jne 0x57acc; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b71: cmp rax, -0x26; jne 0x57b8c; mov esi, 3; mov rax, rbx; syscall; 
0x0000000000057b4a: cmp rax, -0x26; jne 0x57b8c; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dd4: cmp rax, -0x26; jne 0x57ddf; mov rax, r8; syscall; 
0x0000000000057dd4: cmp rax, -0x26; jne 0x57ddf; mov rax, r8; syscall; ret; 
0x0000000000057e23: cmp rax, -0x26; jne 0x57e2e; mov rax, r8; syscall; 
0x0000000000057e23: cmp rax, -0x26; jne 0x57e2e; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057f78: cmp rax, -0x26; jne 0x57f20; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000058024: cmp rax, -0x26; jne 0x58037; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000005853c: cmp rax, -0x26; jne 0x5854a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005914a: cmp rax, -0x26; jne 0x59158; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000592d1: cmp rax, -0x26; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d1: cmp rax, -0x26; jne 0x592e1; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000005937d: cmp rax, -0x26; jne 0x593a8; mov esi, 1; mov rax, r8; syscall; 
0x000000000005959f: cmp rax, -0x26; jne 0x595af; mov esi, 1; mov rax, r8; syscall; 
0x0000000000059fa4: cmp rax, -0x26; jne 0x59fb2; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005a4be: cmp rax, -0x26; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; 
0x000000000005a4be: cmp rax, -0x26; jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000022fb6: cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x000000000001fbe8: cmp rax, 0x10; jne 0x1fbbc; pop rbx; pop rbp; pop r12; ret; 
0x00000000000203f6: cmp rax, 0x20; jne 0x203ca; pop rbx; pop rbp; pop r12; ret; 
0x000000000002fda1: cmp rax, 0x7fefffff; jbe 0x2fdb6; movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x000000000005d5c2: cmp rax, 4; jne 0x5d5a5; movsxd rdi, dword ptr [rsp + 0x20]; mov eax, 3; syscall; 
0x0000000000023e99: cmp rax, 8; setne al; movzx eax, al; neg eax; ret; 
0x0000000000020d3f: cmp rax, r12; jne 0x20ced; pop rbx; pop rbp; pop r12; ret; 
0x000000000005f3ad: cmp rax, r13; je 0x5f36f; add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x0000000000017f4f: cmp rax, rdi; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x000000000002e698: cmp rax, rdx; ja 0x2e6a8; comisd xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002b846: cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000004db2f: cmp rax, rdx; je 0x4db3b; sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x000000000004f3ab: cmp rax, rdx; je 0x4f3f2; inc rax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x00000000000275b3: cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000028160: cmp rax, rdx; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x000000000002e74f: cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x00000000000220d1: cmp rbx, 3; jne 0x220bb; mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x0000000000056fcd: cmp rcx, rdx; ja 0x56fdf; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000017152: cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000057486: cmp rcx, rsi; jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000017230: cmp rdi, -0x1000; ja 0x17240; mov rax, rdi; ret; 
0x000000000005ef31: cmp rdi, rax; je 0x5ef41; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x0000000000026a9a: cmp rdi, rax; setne al; movzx eax, al; and eax, edx; ret; 
0x0000000000019f92: cmp rdi, rdx; jne 0x19f88; ret; 
0x000000000001948a: cmp rdx, 0x1d; jle 0x1949c; movzx eax, word ptr [rdi + 0x1c]; rol ax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x000000000002f925: cmp rdx, 1; sbb eax, eax; add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000023f3b: cmp rdx, rax; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000024119: cmp rdx, rbp; je 0x2412d; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000028120: cmp rdx, rcx; adc eax, 0; ret; 
0x0000000000027aed: cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x000000000002159a: cmp rsi, 0xb; ja 0x215f3; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000001a015: cmp rsi, 1; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x000000000004dd3d: cmp rsi, rax; je 0x4dd50; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x0000000000058629: cmp rsi, rdi; sete al; ret; 
0x0000000000056f4f: cmp rsi, rdx; ja 0x56f5a; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000002423a: cmpsb byte ptr [rsi], byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x5b024178; ret; 
0x000000000003c30d: cmpsb byte ptr [rsi], byte ptr [rdi]; add dword ptr [rax], eax; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000043a2e: cmpsb byte ptr [rsi], byte ptr [rdi]; test byte ptr [rip - 0x3f00b800], al; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000003c20c: cmpsd dword ptr [rsi], dword ptr [rdi]; add dword ptr [rax], eax; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000003af85: cmpsd dword ptr [rsi], dword ptr [rdi]; ret 0xfffd; 
0x000000000003a729: cmpsd dword ptr [rsi], dword ptr [rdi]; ret 1; 
0x00000000000261fd: cmpsd dword ptr [rsi], dword ptr [rdi]; test dword ptr [rsi], 0xc0b60f00; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000058fe5: cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d27: cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cf4: cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf9: cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x00000000000569c7: cmpxchg dword ptr [rdi], eax; mov r8d, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x0000000000059516: cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b4: cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x0000000000059a28: cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000059a18: cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x59a13; ret; 
0x0000000000059534: cmpxchg dword ptr [rdi], edx; test eax, eax; setne al; movzx eax, al; shl eax, 4; ret; 
0x00000000000569c6: cmpxchg dword ptr [rdi], r8d; mov r8d, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x000000000002e69d: comisd xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002e1e3: comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002e7ee: comisd xmm1, xmm2; jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c26d: comisd xmm2, xmm1; jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000002e69e: comiss xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002e6dc: comiss xmm0, xmm1; jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x000000000002e1e4: comiss xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002e457: comiss xmm0, xmmword ptr [rip + 0x6774e]; jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e7ef: comiss xmm1, xmm2; jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c26e: comiss xmm2, xmm1; jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000005581a: cqo; idiv rsi; ret; 
0x000000000002cd7d: cvtpi2ps xmm0, mm0; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000002d2f5: cvtpi2ps xmm0, mm0; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x000000000005b9c1: cvtpi2ps xmm0, mm7; ret; 
0x0000000000033ab4: cvtpi2ps xmm1, mm0; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000033a64: cvtpi2ps xmm1, mm0; movaps xmm0, xmm1; ret; 
0x0000000000037fc3: cvtps2pd xmm0, xmm0; add rsp, 0x20; pop rbx; pop rbp; pop r14; ret; 
0x000000000003743c: cvtps2pd xmm0, xmm0; call 0x37090; pop rdx; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002936c: cvtps2pd xmm0, xmm0; ret; 
0x000000000002a913: cvtps2pd xmm0, xmm1; ret; 
0x000000000002a651: cvtps2pd xmm0, xmm2; ret; 
0x0000000000030d10: cvtps2pd xmm0, xmm7; ret; 
0x000000000002e2ae: cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000037fe7: cvtps2pi mm0, xmm0; ret; 
0x0000000000037fe5: cvtsd2si rax, xmm0; ret; 
0x0000000000037fc2: cvtsd2ss xmm0, xmm0; add rsp, 0x20; pop rbx; pop rbp; pop r14; ret; 
0x000000000002936b: cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a912: cvtsd2ss xmm0, xmm1; ret; 
0x000000000002a650: cvtsd2ss xmm0, xmm2; ret; 
0x0000000000030d0f: cvtsd2ss xmm0, xmm7; ret; 
0x000000000002e2ad: cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002cd7c: cvtsi2sd xmm0, eax; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000005b9bf: cvtsi2sd xmm0, rdi; ret; 
0x0000000000033a63: cvtsi2sd xmm1, eax; movaps xmm0, xmm1; ret; 
0x000000000002d2f4: cvtsi2ss xmm0, eax; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x0000000000033ab3: cvtsi2ss xmm1, eax; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003743b: cvtss2sd xmm0, xmm0; call 0x37090; pop rdx; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000037feb: cvtss2si rax, xmm0; ret; 
0x0000000000032d32: cvttps2pi mm0, xmm0; ret; 
0x0000000000032d30: cvttsd2si rax, xmm0; ret; 
0x0000000000032d3d: cvttss2si rax, xmm0; ret; 
0x0000000000049ba1: cwde; adc al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000004f932: cwde; add al, 0; movzx eax, byte ptr [rax]; ret; 
0x0000000000048b15: cwde; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000005a578: cwde; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x000000000004c28d: cwde; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000041132: cwde; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000020898: cwde; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x00000000000527e5: cwde; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x000000000005d906: cwde; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000028d14: cwde; cmp r8, rax; setb al; movzx eax, al; ret; 
0x000000000005eb4c: cwde; js 0x5eb52; add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rdi; jmp rax; 
0x00000000000508ac: cwde; mov al, byte ptr [rax + rax]; mov byte ptr [rdx], dil; ret; 
0x000000000004633b: cwde; mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000004634d: cwde; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000021a0e: cwde; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; inc eax; ret; 
0x0000000000049911: cwde; pop r13; ret; 
0x000000000001e5be: cwde; pop rdx; ret; 
0x000000000001a93b: cwde; ret; 
0x000000000005a484: cwde; sbb al, byte ptr [rax + rax]; ret; 
0x000000000005d99b: cwde; sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005d96c: cwde; sti; lcall [rdx - 0x3d]; mov eax, 0x79; xor edi, edi; syscall; 
0x000000000005da22: cwde; sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x56; syscall; 
0x0000000000043d86: cwde; sub eax, dword ptr [rcx]; add byte ptr [rax + 0x39], bh; syscall; 
0x0000000000019e8f: dec byte ptr [rax + 0x39]; ret 0x1b74; 
0x00000000000447d2: dec byte ptr [rax + 0x63]; sar byte ptr [rax + 0x48], 1; syscall; 
0x000000000005d64e: dec byte ptr [rax - 0x77]; out dx, eax; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x00000000000461ce: dec byte ptr [rax - 0x77]; ret 0x9ae8; 
0x0000000000021da2: dec byte ptr [rax - 1]; ret; 
0x000000000002159c: dec byte ptr [rbx]; ja 0x215f3; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000607d9: dec byte ptr [rcx + rcx*4 - 0x19]; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x00000000000447cf: dec byte ptr [rcx + rcx*4 - 2]; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000027b87: dec byte ptr [rcx - 0x77]; ret; 
0x0000000000017106: dec byte ptr [rcx]; ja 0x170e0; ret; 
0x0000000000015ecb: dec byte ptr [rdi]; xchg eax, esp; rol byte ptr [rcx - 0x7d], 0xc6; add dword ptr [rcx], ecx; ret 0x8941; 
0x000000000002cfe6: dec byte ptr [rdx + 0xff30006]; pop rcx; ret 0xff3; 
0x0000000000043a16: dec dword ptr [r8 - 0x77]; add eax, 0x584b9; ret; 
0x0000000000033f58: dec dword ptr [r8 - 0x77]; ret 0x4866; 
0x0000000000056c5a: dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000001880a: dec dword ptr [rax + 0x39]; ret 0x774; 
0x00000000000519a9: dec dword ptr [rax + 0x39]; ret 0x77c; 
0x0000000000023f3a: dec dword ptr [rax + 0x39]; ret 0xf48; 
0x0000000000022f40: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x00000000000247ab: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000022f40: dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x0000000000023fbb: dec dword ptr [rax + 0x63]; call qword ptr [rax - 0x77]; 
0x0000000000023fbb: dec dword ptr [rax + 0x63]; call qword ptr [rax - 0x77]; sar byte ptr [rax + 0xfe], cl; syscall; 
0x00000000000390b2: dec dword ptr [rax + 0x63]; call qword ptr [rcx - 0x77]; 
0x00000000000390b2: dec dword ptr [rax + 0x63]; call qword ptr [rcx - 0x77]; idiv byte ptr [rax + 0x8c]; syscall; 
0x000000000004d4d8: dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x0000000000027b84: dec dword ptr [rax + 0x63]; dec byte ptr [rcx - 0x77]; ret; 
0x000000000005d590: dec dword ptr [rax + 0x63]; jl 0x5d5b9; and al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000004bec1: dec dword ptr [rax + 0x63]; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000028af6: dec dword ptr [rax + 0x63]; ret; 
0x0000000000022f2e: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1e], cl; syscall; 
0x000000000005da59: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 8], cl; syscall; 
0x000000000003e571: dec dword ptr [rax + 0x63]; sti; mov edx, eax; mov eax, 3; syscall; 
0x0000000000022ee7: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x00000000000253dd: dec dword ptr [rax + 1]; ret; 
0x000000000004c1ff: dec dword ptr [rax - 0x2d]; ror byte ptr [rax + 0x21], 7; xor eax, eax; ret; 
0x00000000000606b1: dec dword ptr [rax - 0x39]; add eax, 0x3b8ab; add byte ptr [rax], al; add byte ptr [rax], al; pop rax; ret; 
0x0000000000053e06: dec dword ptr [rax - 0x73]; adc eax, 0x422ee; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000052640: dec dword ptr [rax - 0x73]; adc eax, 0x439a8; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x000000000002569a: dec dword ptr [rax - 0x73]; add eax, 0x662be; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000026775: dec dword ptr [rax - 0x73]; add eax, 0x7024b; ret; 
0x00000000000508dd: dec dword ptr [rax - 0x73]; add qword ptr [rax - 0x77], rcx; or eax, 0x48a5f; mov byte ptr [rdx], dil; ret; 
0x00000000000508a4: dec dword ptr [rax - 0x73]; add qword ptr [rax - 0x77], rcx; or eax, 0x48a98; mov byte ptr [rdx], dil; ret; 
0x000000000004ebc4: dec dword ptr [rax - 0x73]; add qword ptr [rax - 0x77], rcx; sub byte ptr [r8 + r9*4 + 2], r8b; ret; 
0x000000000005206e: dec dword ptr [rax - 0x73]; mov ah, 0x24; lcall [rax + rax]; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000004f929: dec dword ptr [rax - 0x73]; push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x498f3; movzx eax, byte ptr [rax]; ret; 
0x000000000004f8fe: dec dword ptr [rax - 0x73]; push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x4991e; movzx eax, byte ptr [rax]; ret; 
0x00000000000587ac: dec dword ptr [rax - 0x75]; add al, 0xf8; ret; 
0x00000000000274e8: dec dword ptr [rax - 0x75]; add eax, 0x74958; test rax, rax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x000000000005cb9a: dec dword ptr [rax - 0x75]; and al, 0x10; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000004f2ba: dec dword ptr [rax - 0x75]; and al, 8; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004a585: dec dword ptr [rax - 0x75]; and byte ptr [r8 - 0x7d], cl; ret 0x4c04; 
0x000000000005cb63: dec dword ptr [rax - 0x75]; jl 0x5cb8c; sbb byte ptr [rax - 0x75], cl; and al, 8; call rax; 
0x0000000000044085: dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000043a17: dec dword ptr [rax - 0x77]; add eax, 0x584b9; ret; 
0x0000000000018915: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000033f59: dec dword ptr [rax - 0x77]; ret 0x4866; 
0x0000000000024e53: dec dword ptr [rax - 0x77]; ret 0x50eb; 
0x000000000003ac92: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000024e60: dec dword ptr [rax - 0x77]; ret 0x854d; 
0x0000000000024e8a: dec dword ptr [rax - 0x77]; ret 0x8949; 
0x0000000000053653: dec dword ptr [rax - 0x77]; ret 0x8b49; 
0x000000000005b856: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x00000000000443f3: dec dword ptr [rax - 0x77]; ret 0xc883; 
0x0000000000022309: dec dword ptr [rax - 0x77]; ret; 
0x0000000000041956: dec dword ptr [rax - 0x77]; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x0000000000061c58: dec dword ptr [rax - 0x7b]; ror byte ptr [rcx + 0xf], 0x44; ret; 
0x0000000000040815: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp + rax + 0x39], 0x58; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000005a5ab: dec dword ptr [rax - 0x7b]; sal byte ptr [rdi + rcx - 0x48], 3; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x0000000000028e4c: dec dword ptr [rax - 0x7d]; call 0xffffffff8b1e7964; and byte ptr [rbp + r9*4 + 5], r9b; ret; 
0x00000000000596ad: dec dword ptr [rax - 0x7d]; in al, dx; add byte ptr [rcx + rcx*4 - 0x20], 0x5b; pop rbp; pop r12; ret; 
0x000000000004cf40: dec dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x000000000004816d: dec dword ptr [rax - 0x7d]; ret 0x4010; 
0x00000000000485b8: dec dword ptr [rax - 0x7d]; ret; 
0x00000000000407c2: dec dword ptr [rax - 0x7d]; rol byte ptr [rdx], 1; add eax, 0x5b88b; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x0000000000053993: dec dword ptr [rax - 0x7d]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm0; ret; 
0x00000000000483d1: dec dword ptr [rax - 1]; ret; 
0x0000000000056c5b: dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043a14: dec dword ptr [rbp - 0x76b700b9]; add eax, 0x584b9; ret; 
0x0000000000021a97: dec dword ptr [rbx + 0x480c2444]; add esp, 0x10; pop rbp; ret; 
0x000000000004ed65: dec dword ptr [rbx + 0x480c2444]; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004e230: dec dword ptr [rbx + 0x480c2444]; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004f3eb: dec dword ptr [rbx + 0x5a042444]; ret; 
0x0000000000023f05: dec dword ptr [rbx - 0x2f]; mov eax, 0x12d; syscall; 
0x0000000000022bad: dec dword ptr [rbx - 0x2f]; mov eax, 0xdd; syscall; 
0x0000000000022bad: dec dword ptr [rbx - 0x2f]; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000058086: dec dword ptr [rbx - 0x3f7aefbd]; je 0x580a6; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000004682f: dec dword ptr [rbx - 0x6bf0f3ba]; ret 0x8548; 
0x000000000001eeed: dec dword ptr [rbx - 0x76afdbbc]; ret 0xf281; 
0x000000000004581e: dec dword ptr [rbx - 0x76c3db8c]; ret 0x7c83; 
0x0000000000045757: dec dword ptr [rbx - 0x76c3db8c]; ret 0x8341; 
0x00000000000455cf: dec dword ptr [rbx - 0x76f7db8c]; ret 0x8341; 
0x00000000000173e3: dec dword ptr [rbx - 0x7ab2fb87]; dec dword ptr [rdi + rcx + 0x44]; ret; 
0x000000000001fd75: dec dword ptr [rbx - 0x7cf7dbbc]; call 0xffffffff89e0e890; ret 0x894c; 
0x000000000005db07: dec dword ptr [rcx + 0x125b8f3]; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x0000000000039c58: dec dword ptr [rcx + 0x5ac03128]; pop rbx; pop rbp; ret; 
0x0000000000044852: dec dword ptr [rcx + 0x63]; std; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005105f: dec dword ptr [rcx + 0x78c085c3]; sub al, 0xb8; push rdi; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x00000000000217c1: dec dword ptr [rcx + 0x7fe083f8]; ret; 
0x00000000000170e7: dec dword ptr [rcx + 0xf]; scasd eax, dword ptr [rdi]; ret 0x894c; 
0x000000000004ca0a: dec dword ptr [rcx + rcx*4 - 0x16]; syscall; 
0x0000000000043d81: dec dword ptr [rcx + rcx*4 - 0x19]; call 0x56922; mov eax, 0x39; syscall; 
0x0000000000059343: dec dword ptr [rcx + rcx*4 - 0x19]; call 0x5767b; call rbx; 
0x0000000000018369: dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000005b556: dec dword ptr [rcx + rcx*4 - 0x20]; pop rdx; pop rbp; pop r12; ret; 
0x0000000000025852: dec dword ptr [rcx + rcx*4 - 0x20]; pop rdx; pop rbx; pop r12; ret; 
0x000000000005b7c0: dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x00000000000607d6: dec dword ptr [rcx + rcx*4 - 2]; mov rdi, r12; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x0000000000020d3e: dec dword ptr [rcx + rdi - 0x20]; jne 0x20ced; pop rbx; pop rbp; pop r12; ret; 
0x000000000004db5e: dec dword ptr [rcx - 0x1076b73d]; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000003b542: dec dword ptr [rcx - 0x2000da08]; add byte ptr [rax], al; ret; 
0x0000000000033afc: dec dword ptr [rcx - 0x24e3dbbc]; and al, 0x1c; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000002540d: dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000005dd6c: dec dword ptr [rcx - 0x77]; retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x00000000000248d3: dec dword ptr [rcx - 0x77]; retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000021b90: dec dword ptr [rcx - 0x77]; ror byte ptr [rax - 0x7b], 0xc0; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005107d: dec dword ptr [rcx - 0x77]; ror byte ptr [rax - 0x7b], 0xc0; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000058cf1: dec dword ptr [rcx - 0x7c0ff7bb]; or al, 0x24; add byte ptr [rcx + rcx*4 - 0x3a], al; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000021409: dec dword ptr [rcx]; setbe al; ret; 
0x0000000000021438: dec dword ptr [rcx]; sete dl; or eax, edx; movzx eax, al; ret; 
0x00000000000173e9: dec dword ptr [rdi + rcx + 0x44]; ret; 
0x00000000000308c2: dec dword ptr [rdi - 0xdf288c4]; movups xmm0, xmmword ptr [rip + 0x64c39]; divsd xmm0, xmm1; ret; 
0x000000000003aed7: dec dword ptr [rdi]; add byte ptr [rax], al; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x00000000000567c3: dec dword ptr [rdi]; push rsp; rol dword ptr [rbx + 0x478930c8], 8; movq qword ptr [rdi], xmm0; ret; 
0x0000000000059fb6: dec dword ptr [rdi]; ret; 
0x000000000003ccae: dec dword ptr [rdi]; scasd eax, dword ptr [rdi]; ret; 
0x000000000002ce68: dec dword ptr [rdi]; sub al, cl; movsd xmm0, qword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002d3e0: dec dword ptr [rdi]; sub al, cl; movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002e0e6: dec dword ptr [rdi]; test byte ptr [rbx + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000002e019: dec dword ptr [rdi]; test byte ptr [rdx + 0x3d000000], ah; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000005bf5e: dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000050559: dec dword ptr [rdx + 0x63]; jl 0x5050a; and byte ptr [rax + 3], bh; syscall; 
0x0000000000050592: dec dword ptr [rdx + 0x63]; jl 0x50543; and byte ptr [rax + 3], bh; syscall; 
0x0000000000057505: dec eax; je 0x5750f; cmp r12, 3; jne 0x57516; mov rax, r12; syscall; 
0x0000000000056f7f: dec eax; jne 0x56f89; mov eax, 0x5f; ret; 
0x0000000000046335: dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000046347: dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000057d9d: dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x000000000004f42b: dec eax; mov qword ptr [rdi + 0x80], rax; ret; 
0x00000000000509aa: dec eax; ret; 
0x0000000000027aeb: dec ecx; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x0000000000043f4b: dec ecx; ret; 
0x000000000005a630: dec edi; jle 0x5a639; add eax, 0x15180; ret; 
0x0000000000056411: dec edx; jne 0x56410; ret; 
0x000000000001e7fd: dec esi; jne 0x1e7f2; ret; 
0x0000000000029604: dec esi; jne 0x295f5; ret; 
0x0000000000029622: dec esi; jne 0x29617; fstp st(1); ret; 
0x0000000000018809: dec qword ptr [rax + 0x39]; ret 0x774; 
0x00000000000170e6: dec qword ptr [rcx + 0xf]; scasd eax, dword ptr [rdi]; ret 0x894c; 
0x000000000004f42a: dec rax; mov qword ptr [rdi + 0x80], rax; ret; 
0x0000000000027aea: dec rcx; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x0000000000059a16: div al; cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x59a13; ret; 
0x000000000004b643: div byte ptr [rbp + 0x10]; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x0000000000023e77: div byte ptr [rbp + 9]; mov eax, 0x11c; syscall; 
0x0000000000018ebc: div byte ptr [rbp + 9]; pop rbp; ret; 
0x000000000005a916: div byte ptr [rbx + rax + 0x41]; neg eax; mov eax, r8d; ret; 
0x000000000005a62d: div byte ptr [rcx + rcx - 1]; iretd; jle 0x5a639; add eax, 0x15180; ret; 
0x000000000003cb45: div byte ptr [rcx]; fild dword ptr [rbp + 0x31]; in al, 0xf6; ret; 
0x0000000000059700: div byte ptr [rsi + rax + 0xf]; mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000005b9be: div edx; cvtpi2ps xmm0, mm7; ret; 
0x000000000002f922: divps xmm0, xmm0; cmp rdx, 1; sbb eax, eax; add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f8f5: divps xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000029570: divps xmm0, xmm0; ret; 
0x000000000002953f: divps xmm0, xmm1; ret; 
0x0000000000033372: divps xmm0, xmm2; ret; 
0x000000000002ab67: divps xmm0, xmm4; ret; 
0x000000000002d17f: divps xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002cc01: divps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002a90f: divps xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002bfa5: divps xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002b293: divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002cd81: divps xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000002d2f9: divps xmm1, xmm3; addss xmm0, xmm1; ret; 
0x000000000001e28f: divps xmm1, xmm4; movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000002c070: divps xmm2, xmm0; cvtsd2ss xmm0, xmm2; ret; 
0x000000000001e28b: divps xmm2, xmm4; divsd xmm1, xmm4; movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000030d0c: divps xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x000000000002cc00: divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002956f: divsd xmm0, xmm0; ret; 
0x000000000002953e: divsd xmm0, xmm1; ret; 
0x0000000000033371: divsd xmm0, xmm2; ret; 
0x000000000002ab66: divsd xmm0, xmm4; ret; 
0x000000000002a90e: divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002bfa4: divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002cd80: divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000001e28e: divsd xmm1, xmm4; movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000002c06f: divsd xmm2, xmm0; cvtsd2ss xmm0, xmm2; ret; 
0x000000000001e28a: divsd xmm2, xmm4; divsd xmm1, xmm4; movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000030d0b: divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x000000000002d17e: divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002f921: divss xmm0, xmm0; cmp rdx, 1; sbb eax, eax; add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f8f4: divss xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000029578: divss xmm0, xmm0; ret; 
0x0000000000029566: divss xmm0, xmm1; ret; 
0x0000000000033525: divss xmm0, xmm2; ret; 
0x000000000002b292: divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002d2f8: divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x00000000000379a8: f2xm1; faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037aa4: f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000003793e: f2xm1; ret; 
0x0000000000037936: fabs; fucomip st(1); fstp st(0); ja 0x37941; f2xm1; ret; 
0x00000000000378e7: fabs; fxch st(1); fpatan; ret; 
0x0000000000037acd: fabs; ret; 
0x000000000004cc44: fadd dword ptr [rax]; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x00000000000231cb: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000000244c1: fadd dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000349ed: fadd dword ptr [rbp + 0x19]; rol byte ptr [rcx - 0x7d], 0xc0; add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000005a91b: fadd dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000004da7d: fadd dword ptr [rcx]; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000000220be: fadd dword ptr [rsi]; and byte ptr [rbx + rcx + 0x48], dh; mov eax, edx; syscall; 
0x0000000000022f1c: fadd qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003b50b: fadd qword ptr [rcx + rcx*4 + 0x20]; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x00000000000556b2: fadd qword ptr [rcx - 0x3a]; add al, 0x3c; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000002ca78: fadd qword ptr [rsi + 0xff20006]; pop rcx; ret 0xff2; 
0x00000000000378f8: fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x000000000004b178: fadd st(3); push rbx; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000037aa8: faddp st(1); add rsp, 0x30; ret; 
0x0000000000029602: faddp st(1); dec esi; jne 0x295f5; ret; 
0x0000000000029620: faddp st(1); dec esi; jne 0x29617; fstp st(1); ret; 
0x0000000000037aa2: faddp st(1); f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000002c1dd: faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x00000000000379d8: faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x00000000000379aa: faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x000000000002f66d: faddp st(1); fstp xword ptr [rsi]; ret; 
0x000000000002f667: faddp st(1); fxch st(1); fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x000000000003804e: faddp st(1); fyl2x; ret; 
0x00000000000293d2: faddp st(1); ret; 
0x00000000000293d0: faddp st(2); faddp st(1); ret; 
0x0000000000030429: fbstp tbyte ptr [rsi]; add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002d87e: fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000002be74: fchs; add rsp, 0x30; pop rbx; ret; 
0x000000000002b629: fchs; add rsp, 0x40; pop rbx; ret; 
0x000000000001c143: fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001d14b: fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x0000000000033e09: fchs; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000035c0f: fchs; fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x000000000001becc: fchs; fxch st(1); ret; 
0x0000000000037931: fchs; ret; 
0x000000000002f013: fcomip st(1); fstp st(0); ja 0x2efc8; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000002eefb: fcomip st(1); fstp st(0); jbe 0x2eee9; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x0000000000033915: fcomip st(2); addps xmm1, xmm3; addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000004e8ad: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000000018576: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x00000000000181cd: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000004bf0c: fcomp dword ptr [rbx + 0x5d]; ret; 
0x000000000001893d: fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000002e736: fcomp st(1); out dx, al; pop rax; ret; 
0x0000000000036a09: fcomp st(3); insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x20; pop rbx; ret; 
0x0000000000034153: fcomp st(3); insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x28; ret; 
0x000000000002e734: fcomp st(5); fcomp st(1); out dx, al; pop rax; ret; 
0x000000000001a933: fcomp st(5); fcomp st(5); fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000001a935: fcomp st(5); fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x0000000000017742: fcos; jmp qword ptr [rsi + 0x2e]; 
0x0000000000040c02: fcos; jmp qword ptr [rsi + 0x41]; 
0x000000000003793b: fdiv dword ptr [rdi + 3]; f2xm1; ret; 
0x000000000002f016: fdiv dword ptr [rdi - 0x51]; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000002eefe: fdiv dword ptr [rsi - 0x18]; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000005874c: fdiv qword ptr [rbp + 0xf]; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x0000000000053650: fdiv qword ptr [rbx]; cld; dec dword ptr [rax - 0x77]; ret 0x8b49; 
0x00000000000384b4: fdiv st(6); ret 0x7404; 
0x000000000002d740: fdivp st(1); add rsp, 0x60; pop rbx; ret; 
0x0000000000039d08: fdivr dword ptr [rax + 0x10]; syscall; 
0x000000000005578a: fdivr dword ptr [rcx]; ret; 
0x00000000000177b6: fdivr st(7); call qword ptr [rax - 0x18]; 
0x0000000000040c35: fdivr st(7); jmp qword ptr [rsi + 0x41]; 
0x00000000000255ec: fdivrp st(3); movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000021ea4: fiadd dword ptr [rax]; add byte ptr [rax], al; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005808f: fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x00000000000195c3: fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000005cca9: fiadd word ptr [rax]; add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x000000000005cddb: fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000359a8: fiadd word ptr [rcx - 0x77]; xor al, byte ptr [rbp - 0x7b]; leave; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x0000000000035823: fiadd word ptr [rcx - 0x77]; xor cl, byte ptr [rbp - 0x7b]; leave; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x0000000000023de1: fidiv dword ptr [rbp + 0x13]; test edx, edx; jne 0x23df7; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000057ab5: fidiv dword ptr [rbp + 0x14]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b74: fidiv dword ptr [rbp + 0x15]; mov esi, 3; mov rax, rbx; syscall; 
0x000000000004b2cd: fidiv dword ptr [rbp + 0x19]; xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000059380: fidiv dword ptr [rbp + 0x25]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000057190: fidiv dword ptr [rbp + 0x28]; mov rax, r8; syscall; 
0x0000000000057b4d: fidiv dword ptr [rbp + 0x3c]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005736a: fidiv dword ptr [rbp + 0x55]; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b269: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d4: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000595a2: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001b234: fidiv dword ptr [rbp + 0xa]; mov esi, 1; mov rax, r9; syscall; 
0x0000000000058027: fidiv dword ptr [rbp + 0xd]; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x0000000000023e73: fidiv dword ptr [rbp + 0xd]; test esi, esi; jne 0x23e83; mov eax, 0x11c; syscall; 
0x0000000000023f9d: fidiv dword ptr [rbp + 0xe]; test edx, edx; jne 0x23fae; mov eax, 0xfd; syscall; 
0x0000000000023e3f: fidiv dword ptr [rbp + 0xe]; test r8, r8; jne 0x23e50; mov eax, 0xe8; syscall; 
0x00000000000570f4: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x0000000000057e26: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057dd7: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; ret; 
0x00000000000576e1: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000569ab: fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000004d438: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d438: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000059fa7: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000004de07: fidiv dword ptr [rbp + 8]; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000056c48: fidiv dword ptr [rbp - 0x18]; xor esi, esi; mov rax, r12; syscall; 
0x00000000000572d6: fidiv dword ptr [rbp - 0x1c]; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000004d3de: fidiv dword ptr [rbp - 0x38]; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x0000000000057f7b: fidiv dword ptr [rbp - 0x5e]; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x000000000003ef80: fidivr dword ptr [rcx]; ret 0xb57e; 
0x000000000003cb47: fild dword ptr [rbp + 0x31]; in al, 0xf6; ret; 
0x0000000000028353: fild dword ptr [rcx + 0xfffe3]; add byte ptr [rax + 1], cl; ret; 
0x0000000000033b01: fild dword ptr [rsp + 0x1c]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000005cf05: fild word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000001fd48: fild word ptr [rbx - 0x76b7fc40]; ret 0x8948; 
0x0000000000038aa5: fild word ptr [rsi + rax]; add bh, bh; ret 0x8941; 
0x000000000003417c: fimul dword ptr [rax + 0xf]; mov edx, 0x39483ff2; ret 0x676; 
0x000000000004f605: fimul dword ptr [rcx + rcx*4 - 0x12]; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000058ca4: fimul dword ptr [rcx + rcx*4 - 0x18]; syscall; 
0x000000000003af7e: fimul dword ptr [rdi]; add eax, 0xe8c78948; cmpsd dword ptr [rsi], dword ptr [rdi]; ret 0xfffd; 
0x000000000001c286: fimul word ptr [rax + 0x280f0007]; ret; 
0x000000000005d6e7: fimul word ptr [rax - 0x75]; push rsp; and al, 8; syscall; 
0x00000000000384b1: fimul word ptr [rax - 0x77]; fdiv st(6); ret 0x7404; 
0x000000000003920e: fimul word ptr [rax - 0x77]; ret 0x8949; 
0x0000000000027076: fimul word ptr [rax - 1]; ret; 
0x000000000005d4b6: fimul word ptr [rcx + rcx*4 - 0x16]; syscall; 
0x000000000004f28c: fisttp dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx + 0x8c87], cl; add byte ptr [rbp - 0x17f88740], al; mov edx, 0x89ffffe0; ret; 
0x000000000002241f: fisttp dword ptr [rax - 1]; ret 0x8348; 
0x000000000005ee17: fisttp dword ptr [rbp + rcx*4 + 0x2d]; lea edi, [rsi + 3]; add bl, ch; add ecx, dword ptr [rax - 1]; ret; 
0x000000000002cee5: fisttp dword ptr [rbx + 0xff30006]; pop rcx; retf 0xff3; pop rcx; ret 0xff3; 
0x000000000005bf5b: fisttp dword ptr [rcx + 0x39]; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x000000000004f4a0: fisttp dword ptr [rdi]; lahf; ret 0x548d; 
0x0000000000051c5c: fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xca21; 
0x000000000005a728: fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xff85; 
0x000000000005d5c7: fisttp qword ptr [rax + 0x63]; jl 0x5d5f0; and byte ptr [rax + 3], bh; syscall; 
0x000000000005bfd4: fisttp word ptr [rax + 0x39]; ret; 
0x000000000003b00e: fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000001fce3: fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x00000000000227c4: fisttp word ptr [rbx + rcx*4 - 0x5c]; ret 0x108; 
0x000000000004e711: fisttp word ptr [rcx - 0x3a76be3a]; mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000028b71: fisub dword ptr [rcx]; ret 0x2274; 
0x000000000002d64e: fisub word ptr [rdi + 6]; add dh, bl; ret 0xc9d9; 
0x000000000005b819: fisubr dword ptr [rcx - 4]; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x000000000004824e: fld dword ptr [rax + 0x747b027b]; or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000021bc2: fld dword ptr [rax]; add byte ptr [rax], al; mov edx, 0x800; syscall; 
0x0000000000023f43: fld dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005a722: fld dword ptr [rbp - 0x7aee8a40]; fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xff85; 
0x0000000000020276: fld dword ptr [rbx - 0x1f32e6e1]; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000019846: fld dword ptr [rcx + rbp - 0x40]; ret; 
0x000000000002ff09: fld dword ptr [rcx - 3]; jle 0x2ff20; xchg dword ptr [rdx + rax + 0x280f0000], ebp; ret 0xff3; 
0x0000000000022f53: fld dword ptr [rdx - 1]; lcall [rdx - 0x3d]; push rax; mov eax, 0x43; syscall; 
0x0000000000033e27: fld dword ptr [rip + 0x61acf]; ret; 
0x000000000001c58a: fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x0000000000022bb2: fld qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000022bb2: fld qword ptr [rax]; add byte ptr [rax], al; syscall; neg eax; ret; 
0x0000000000051584: fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000001cc72: fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x000000000001cc68: fld qword ptr [rsp + 8]; movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x00000000000295ff: fld xword ptr [rax - 0x10]; faddp st(1); dec esi; jne 0x295f5; ret; 
0x000000000002961d: fld xword ptr [rax - 0x10]; faddp st(1); dec esi; jne 0x29617; fstp st(1); ret; 
0x000000000005159d: fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000002a6c8: fld xword ptr [rip + 0x693a2]; fmulp st(1); fsubp st(1); fsubp st(1); ret; 
0x000000000002a6a7: fld xword ptr [rip + 0x693b3]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000033e0f: fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000037905: fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000001cf68: fld xword ptr [rsp + 0x18]; ret; 
0x000000000002f3d8: fld xword ptr [rsp + 0x20]; add rsp, 0x10; pop rbx; ret; 
0x000000000002ef01: fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x0000000000036a0a: fld xword ptr [rsp + 0x30]; add rsp, 0x20; pop rbx; ret; 
0x0000000000034154: fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x000000000001d14d: fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000001d3dd: fld xword ptr [rsp + 0x40]; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x000000000001d3e1: fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x0000000000036b38: fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x000000000002ede7: fld xword ptr [rsp + 0xa0]; add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x000000000003803e: fld xword ptr [rsp + 8]; cmp eax, 0x3ffd9400; ja 0x3804c; fyl2xp1; ret; 
0x0000000000037ac9: fld xword ptr [rsp + 8]; fabs; ret; 
0x0000000000035c0b: fld xword ptr [rsp + 8]; fchs; fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000037901: fld xword ptr [rsp + 8]; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000003790c: fld xword ptr [rsp + 8]; fld1; fpatan; ret; 
0x000000000003810a: fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003811b: fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000003802c: fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000001d3fa: fld xword ptr [rsp + 8]; ret; 
0x000000000002c1df: fld xword ptr [rsp - 0x18]; fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000035f58: fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c347: fld xword ptr [rsp - 0x18]; ret; 
0x000000000001a938: fld xword ptr [rsp - 0x68]; ret; 
0x0000000000033ee3: fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003755a: fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x00000000000379da: fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x00000000000379d6: fld1; faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x000000000003804c: fld1; faddp st(1); fyl2x; ret; 
0x0000000000038053: fld1; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000037910: fld1; fpatan; ret; 
0x0000000000037948: fld1; fsubp st(1); ret; 
0x000000000003792b: fld1; jb 0x37934; fstp st(1); fchs; ret; 
0x00000000000379fe: fld1; js 0x37a07; fscale; fstp st(1); ret; 
0x0000000000032d6d: fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000037ae3: fldcw word ptr [rsp + 8]; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x0000000000037aed: fldcw word ptr [rsp + 8]; ret; 
0x0000000000022d25: fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000003802a: fldlg2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000002b011: fldln2; faddp st(1); ret; 
0x000000000003805c: fldln2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000002e737: fldz; pop rax; ret; 
0x0000000000016170: fldz; ret; 
0x000000000005bd70: fmul dword ptr [rax + 0x63]; clc; call 0x17230; pop rdx; ret; 
0x000000000001964d: fmul dword ptr [rax - 0x3f]; clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000004d3d5: fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000002aa31: fmul dword ptr [rcx + 0x4db2404]; and al, 0xd9; ret; 
0x000000000001e89b: fmul dword ptr [rcx + 0x5189f841]; cld; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x000000000005c397: fmul dword ptr [rdi + rcx + 0x48]; ret 0xa8e9; 
0x0000000000029a53: fmul dword ptr [rdi]; push rdi; retf 0x570f; ret 0xff2; 
0x000000000002acfb: fmul dword ptr [rdi]; push rdi; sal bl, 0xf; pop rsi; ret; 
0x000000000002e913: fmul dword ptr [rdi]; wait; ret 0x440f; 
0x000000000001dbb1: fmul dword ptr [rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000051c48: fmul dword ptr [rdi]; xchg eax, ebp; ret 0xf41; 
0x000000000001dbb0: fmul dword ptr cs:[rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000005448e: fmul qword ptr [rax - 0x7d]; ret; 
0x000000000005ed98: fmul qword ptr [rax - 1]; ret; 
0x000000000002d9d7: fmul st(0); add rsp, 0x18; ret; 
0x000000000002f66b: fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x0000000000037aa6: fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x00000000000379dd: fmulp st(1); add rsp, 0x10; ret; 
0x000000000002a6af: fmulp st(1); faddp st(1); ret; 
0x00000000000295fd: fmulp st(1); fld xword ptr [rax - 0x10]; faddp st(1); dec esi; jne 0x295f5; ret; 
0x0000000000037558: fmulp st(1); fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x00000000000378e3: fmulp st(1); fsqrt; fabs; fxch st(1); fpatan; ret; 
0x00000000000378fa: fmulp st(1); fsqrt; fpatan; ret; 
0x000000000002c1e3: fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x000000000002a6ce: fmulp st(1); fsubp st(1); fsubp st(1); ret; 
0x000000000002c815: fmulp st(1); pop rax; pop rdx; add rsp, 0x28; ret; 
0x0000000000035f5c: fmulp st(1); ret; 
0x000000000002a6a5: fmulp st(2); fld xword ptr [rip + 0x693b3]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000002c813: fmulp st(2); fmulp st(1); pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000004993d: fnstcw word ptr [rax + 1]; ret; 
0x0000000000022d17: fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x0000000000037fdb: fnstsw ax; fstp st(1); test ah, 4; jne 0x37fd3; ret; 
0x00000000000380b6: fnstsw ax; fstp st(1); test ah, 4; jne 0x380ae; ret; 
0x0000000000022d53: fnstsw ax; or eax, esi; and eax, edi; ret; 
0x00000000000378eb: fpatan; ret; 
0x00000000000380b4: fprem1; fnstsw ax; fstp st(1); test ah, 4; jne 0x380ae; ret; 
0x0000000000037fd9: fprem; fnstsw ax; fstp st(1); test ah, 4; jne 0x37fd3; ret; 
0x0000000000037ae7: frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003810e: frndint; ret; 
0x00000000000379ac: fscale; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037a02: fscale; fstp st(1); ret; 
0x000000000005ad18: fsincos; dec dword ptr [rax - 0x77]; ret; 
0x00000000000378e5: fsqrt; fabs; fxch st(1); fpatan; ret; 
0x00000000000378fc: fsqrt; fpatan; ret; 
0x000000000003811f: fsqrt; ret; 
0x000000000001c586: fstp dword ptr [rsp + 0x10]; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x0000000000055f9c: fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000057837: fstp qword ptr [rax + 0x5b]; pop rbp; ret; 
0x0000000000049a51: fstp qword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000055fb9: fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000002aa8a: fstp st(0); add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001be69: fstp st(0); call 0x221f7; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x000000000002de12: fstp st(0); call 0x221f7; add rsp, 0x40; pop rbx; ret; 
0x000000000002c90e: fstp st(0); call 0x221f7; add rsp, 0x48; ret; 
0x000000000001d0ce: fstp st(0); call 0x221f7; add rsp, 0x58; fxch st(1); ret; 
0x000000000002f7e1: fstp st(0); call 0x221f7; add rsp, 0x98; ret; 
0x000000000001e557: fstp st(0); call 0x221f7; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000036a08: fstp st(0); fld xword ptr [rsp + 0x30]; add rsp, 0x20; pop rbx; ret; 
0x0000000000034152: fstp st(0); fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x000000000002e735: fstp st(0); fldz; pop rax; ret; 
0x000000000002aa88: fstp st(0); fstp st(0); add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001d0cc: fstp st(0); fstp st(0); call 0x221f7; add rsp, 0x58; fxch st(1); ret; 
0x000000000002e733: fstp st(0); fstp st(0); fldz; pop rax; ret; 
0x000000000001a932: fstp st(0); fstp st(0); fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x000000000003783f: fstp st(0); fstp st(1); add rsp, 0x38; ret; 
0x000000000001a934: fstp st(0); fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x000000000002f015: fstp st(0); ja 0x2efc8; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000003793a: fstp st(0); ja 0x37941; f2xm1; ret; 
0x000000000002eefd: fstp st(0); jbe 0x2eee9; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000379ae: fstp st(1); add rsp, 0x10; ret; 
0x0000000000037841: fstp st(1); add rsp, 0x38; ret; 
0x000000000003792f: fstp st(1); fchs; ret; 
0x000000000001a936: fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x0000000000029626: fstp st(1); ret; 
0x0000000000037fdd: fstp st(1); test ah, 4; jne 0x37fd3; ret; 
0x00000000000380b8: fstp st(1); test ah, 4; jne 0x380ae; ret; 
0x000000000005b88f: fstp st(3); add eax, dword ptr [rax]; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000040775: fstp xword ptr [rax + 5]; add byte ptr [rax], al; ret; 
0x0000000000036f9e: fstp xword ptr [rcx + 2]; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000002b335: fstp xword ptr [rcx + 7]; xorps xmm0, xmmword ptr [rip + 0x68431]; add rsp, 0x10; pop rbx; ret; 
0x0000000000051586: fstp xword ptr [rcx]; ret; 
0x0000000000033e07: fstp xword ptr [rdi]; fchs; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000002f66f: fstp xword ptr [rsi]; ret; 
0x0000000000033e0b: fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000002c1e5: fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000035f4f: fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c33e: fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000001c18e: fstp xword ptr [rsp]; call 0x1d05f; add rsp, 0x28; fchs; fxch st(1); ret; 
0x0000000000033edb: fstp xword ptr [rsp]; call 0x22c9b; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000001a937: fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000002addb: fsub dword ptr [rsi + 0xf]; outsb dx, byte ptr [rsi]; sal bl, 0xf; pop rcx; ret; 
0x00000000000293cc: fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x000000000001805f: fsub st(3); add eax, dword ptr [rax]; mov rax, r12; pop r12; ret; 
0x0000000000048b3b: fsubp st(0); call rdi; 
0x000000000003fd1b: fsubp st(0); ret; 
0x000000000002a6d0: fsubp st(1); fsubp st(1); ret; 
0x000000000002a6d2: fsubp st(1); ret; 
0x000000000002a6ad: fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000015f4d: fsubr st(0); movsb byte ptr [rdi], byte ptr [rsi]; ret 0; 
0x00000000000378f6: fsubr st(1), st(0); fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x00000000000557ad: fsubr st(3); adc al, 0x29; ret; 
0x0000000000028872: fsubr st(3); or byte ptr [rcx - 0x77], cl; ret 0x1bb; 
0x00000000000293ce: fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x000000000002a6c6: fsubrp st(2); fld xword ptr [rip + 0x693a2]; fmulp st(1); fsubp st(1); fsubp st(1); ret; 
0x00000000000293ca: fsubrp st(4); fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x0000000000049e67: fucomi st(0); xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x0000000000058c53: fucomi st(1); ret; 
0x000000000004ad92: fucomip st(0); jmp qword ptr [rdi - 3]; 
0x00000000000442b2: fucomip st(0); js 0x442f5; std; dec dword ptr [rax - 0x77]; ret 0x8949; 
0x00000000000221d3: fucomip st(0); or eax, dword ptr [rdx + 3]; add bl, ch; or cl, byte ptr [rax + 0x69]; ret; 
0x0000000000022268: fucomip st(0); ret 0xff65; 
0x0000000000037929: fucomip st(1); fld1; jb 0x37934; fstp st(1); fchs; ret; 
0x0000000000037938: fucomip st(1); fstp st(0); ja 0x37941; f2xm1; ret; 
0x000000000001bec6: fxch st(1); add rsp, 0x38; fchs; fxch st(1); ret; 
0x000000000002f669: fxch st(1); fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x00000000000378e9: fxch st(1); fpatan; ret; 
0x000000000001be75: fxch st(1); ret; 
0x0000000000038030: fyl2x; ret; 
0x0000000000038049: fyl2xp1; ret; 
0x00000000000488dc: hlt; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x000000000003b381: hlt; add byte ptr [rax], al; add byte ptr [rcx + 0x80249c], cl; add byte ptr [rax], al; syscall; 
0x000000000003b29d: hlt; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000003b004: hlt; add dword ptr [rax], eax; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000028eb8: hlt; cmp byte ptr [rsi], 0; je 0x28ebf; hlt; sub rax, rdx; ret; 
0x000000000001d114: hlt; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001a03b: hlt; ret; 
0x0000000000022318: hlt; sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x0000000000028ebe: hlt; sub rax, rdx; ret; 
0x0000000000028af4: idiv bh; dec dword ptr [rax + 0x63]; ret; 
0x0000000000025347: idiv bh; dec dword ptr [rax - 0x77]; ret; 
0x0000000000028926: idiv bh; inc dword ptr [rbx - 0x32160038]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x00000000000247b2: idiv byte ptr [rax + 0x11b]; syscall; 
0x0000000000023eee: idiv byte ptr [rax + 0x12c]; syscall; 
0x00000000000245e6: idiv byte ptr [rax + 0x134]; syscall; 
0x0000000000044d2d: idiv byte ptr [rax + 0x16]; test esi, 0xffffff00; jne 0x44d3f; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000022f47: idiv byte ptr [rax + 0x1f]; syscall; 
0x0000000000022f47: idiv byte ptr [rax + 0x1f]; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x000000000004bd8c: idiv byte ptr [rax + 0x3e]; syscall; 
0x000000000004bd8c: idiv byte ptr [rax + 0x3e]; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022de3: idiv byte ptr [rax + 0x44]; syscall; 
0x0000000000022de3: idiv byte ptr [rax + 0x44]; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022dcb: idiv byte ptr [rax + 0x47]; syscall; 
0x0000000000022dcb: idiv byte ptr [rax + 0x47]; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000023f20: idiv byte ptr [rax + 0x49]; syscall; 
0x0000000000023f20: idiv byte ptr [rax + 0x49]; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005ddd4: idiv byte ptr [rax + 0x6d]; syscall; 
0x000000000005ddd4: idiv byte ptr [rax + 0x6d]; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000390b8: idiv byte ptr [rax + 0x8c]; syscall; 
0x00000000000590e9: idiv byte ptr [rax + 0xca]; or esi, 7; syscall; 
0x000000000005cf03: idiv byte ptr [rax + 0xdf]; syscall; 
0x000000000003b435: idiv byte ptr [rax + 0xf0]; syscall; 
0x0000000000023fd9: idiv byte ptr [rax + 0xff]; syscall; 
0x00000000000188b6: idiv di; dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x00000000000188b7: idiv edi; dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000004db5c: idiv edi; dec dword ptr [rcx - 0x1076b73d]; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x0000000000030fc2: idiv edi; jmp qword ptr [rcx]; 
0x000000000004198e: idiv edi; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000041a51: idiv edi; mov eax, 0x35; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000005581d: idiv esi; ret; 
0x0000000000055623: idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x000000000005bdb2: idiv esi; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000005581c: idiv rsi; ret; 
0x0000000000049f11: imul al; adc dword ptr es:[rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005bd69: imul al; cmp ebx, 0xd8f7ffff; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000049b9f: imul al; cwde; adc al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001805d: imul al; fsub st(3); add eax, dword ptr [rax]; mov rax, r12; pop r12; ret; 
0x0000000000025b58: imul al; mov eax, 0x89fffffa; ret 0x3d; 
0x0000000000019888: imul al; ret 7; 
0x0000000000017808: imul al; sub eax, 0x480003ec; add esp, 8; ret; 
0x000000000005861e: imul cl; ja 0x58624; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000023a34: imul dword ptr [rdx - 0x76b7fffe]; add eax, 0x783d9; pop rax; ret; 
0x000000000002de40: imul eax, dword ptr [rbp - 0xdf38637], 0xf; pop rax; or eax, 0x66ce3; movaps xmm0, xmm1; ret; 
0x0000000000017b13: imul eax, dword ptr [rcx], 0x83480000; ret 0x4801; 
0x0000000000043a2b: imul eax, dword ptr [rip + 0x584a6]; inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000003adc3: imul eax, esp, 0xc35afffd; push rax; mov eax, 0x1b; syscall; 
0x000000000003a727: imul eax; cmpsd dword ptr [rsi], dword ptr [rdi]; ret 1; 
0x000000000005364e: imul eax; fdiv qword ptr [rbx]; cld; dec dword ptr [rax - 0x77]; ret 0x8b49; 
0x000000000003a6c4: imul eax; pop rax; ret 1; 
0x0000000000053698: imul eax; ret 0xfc28; 
0x000000000005bad7: imul eax; test byte ptr [rdi + rdi*8], ah; dec dword ptr [rax - 0x77]; ret; 
0x000000000002d1ed: imul ecx, dword ptr [rcx + 0xff30006], 0x58; ret 0xff3; 
0x0000000000022313: imul ecx, dword ptr [rcx + rcx*4 - 0x19], -0x18; hlt; sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x000000000004b639: imul edi, ebp, -1; add rsp, 0x18; ret; 
0x0000000000021968: imul edi, edi, 0x1f883ff; sbb rax, rax; and eax, 2; add rsp, 0x18; ret; 
0x000000000003b6b9: imul edi, esi, -1; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000005b686: imul edi, esp, -1; add rsp, 0x18; ret; 
0x000000000005b81a: imul edi, esp, 0xc08944ff; add rsp, 0x28; ret; 
0x000000000002456f: imul edx, dword ptr [rax], 0x58; pop rbx; pop rbp; ret; 
0x0000000000032613: imul esi, dword ptr [rdx], 0xff30006; pop rax; ret 0xff3; 
0x000000000002b309: imul esp, dword ptr [rbp + 0xff30006], 0x5e; sal ebx, 0xf; pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000043a2a: imul rax, qword ptr [rip + 0x584a6]; inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000005b8ae: in al, 0; add byte ptr [rax], al; mov rsi, rbp; syscall; 
0x00000000000572d8: in al, 0x31; test byte ptr [rax - 0x77], 0xe8; mov rdx, r12; syscall; 
0x0000000000051c34: in al, 0x39; ret 0x872; 
0x00000000000190a5: in al, 0x48; add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000059339: in al, 0x48; mov edx, ebp; lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000004b914: in al, 0x4c; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000040800: in al, 0x4c; mov eax, esp; pop rdx; pop rbx; pop r12; ret; 
0x00000000000267b7: in al, 0x5b; ret; 
0x000000000001913a: in al, 0x5d; mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x000000000004e7ab: in al, 0x74; adc ecx, dword ptr [rcx - 0x75]; mov rdx, r12; call rax; 
0x000000000003e55e: in al, 0x89; ret; 
0x000000000005d7f4: in al, 0xb8; add byte ptr [r8], r8b; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x00000000000191eb: in al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000002ec30: in al, 0xd8; ret; 
0x000000000004e72a: in al, 0xe8; add byte ptr [rbx - 0x76b70004], cl; ret; 
0x00000000000450ca: in al, 0xeb; or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000003cb4a: in al, 0xf6; ret; 
0x000000000001a170: in al, 0xf; xchg eax, edi; ret 0x2e0f; 
0x000000000005a422: in al, 0xff; lcall [rdx - 0x7b]; ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret; 
0x000000000005a20e: in al, dx; add byte ptr [rax], al; add byte ptr [rax + 0xba], bh; syscall; 
0x00000000000596b0: in al, dx; add byte ptr [rcx + rcx*4 - 0x20], 0x5b; pop rbp; pop r12; ret; 
0x0000000000038252: in al, dx; add eax, 0xe0894c00; pop r12; ret; 
0x000000000001780b: in al, dx; add eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000003802b: in al, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000017802: in al, dx; or byte ptr [rax - 0x77], cl; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x000000000004f28f: in al, dx; sbb byte ptr [rbx + 0x8c87], cl; add byte ptr [rbp - 0x17f88740], al; mov edx, 0x89ffffe0; ret; 
0x000000000004cf43: in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x0000000000017f53: in al, dx; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000035d86: in eax, 0; add byte ptr [rax], al; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000005b7f0: in eax, 0; add byte ptr [rax], al; movsxd rdi, r9d; syscall; 
0x000000000005b82a: in eax, 0; add byte ptr [rax], al; syscall; 
0x00000000000178da: in eax, 0x48; lea eax, [rcx + 1]; pop rbx; ret; 
0x00000000000181ca: in eax, 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018f9a: in eax, 0x5d; ret; 
0x0000000000043b15: in eax, 0x8b; cmp dword ptr [rbx + 0x398901cf], eax; ret; 
0x0000000000028139: in eax, 0xe7; add al, byte ptr [rax]; ret; 
0x000000000001a2c0: in eax, 0xf3; mulps xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000004fcae: in eax, 0xff; call qword ptr [rax + 0x48]; 
0x0000000000022101: in eax, 3; add byte ptr [rcx - 0x1576b311], cl; mov rsi, r12; call rbx; 
0x0000000000022cf5: in eax, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x00000000000384ac: in eax, 5; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; fdiv st(6); ret 0x7404; 
0x00000000000384c3: in eax, 5; add dh, dh; ret 0x7402; 
0x000000000003848d: in eax, 5; add dh, dh; ret 0x7408; 
0x000000000002b012: in eax, dx; faddp st(1); ret; 
0x000000000003805d: in eax, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000052ca2: in eax, dx; je 0x52ce1; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005e41b: in eax, dx; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000029607: in eax, dx; ret; 
0x000000000005e405: in eax, dx; sub eax, edx; ret; 
0x000000000003f4d9: in eax, dx; xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x0000000000023fc3: inc byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000025b6e: inc byte ptr [rax]; add byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000025b31: inc byte ptr [rax]; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd009; 
0x0000000000056f36: inc byte ptr [rcx]; ja 0x56f3f; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f61: inc byte ptr [rcx]; ja 0x56f6a; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000057435: inc byte ptr [rcx]; ja 0x57440; shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x00000000000595cc: inc byte ptr [rcx]; ja 0x595d4; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001a017: inc byte ptr [rcx]; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x0000000000059734: inc byte ptr [rdx]; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000045ccb: inc byte ptr [rdx]; je 0x45d19; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x0000000000052d3d: inc byte ptr [rip - 0x72b7e289]; or eax, 0x432d0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000023a30: inc byte ptr [rsi]; add al, ch; imul dword ptr [rdx - 0x76b7fffe]; add eax, 0x783d9; pop rax; ret; 
0x00000000000577a1: inc dword ptr [r8 + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576c5: inc dword ptr [r8 + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000023a85: inc dword ptr [rax + 0x3750a38]; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x000000000002009a: inc dword ptr [rax + 0x75]; ret; 
0x00000000000577a2: inc dword ptr [rax + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576c6: inc dword ptr [rax + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000047bf9: inc dword ptr [rax]; add byte ptr [rax], al; jle 0x47bdd; ret; 
0x000000000002f1a8: inc dword ptr [rax]; add byte ptr [rax], al; jne 0x2f1b7; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000003586c: inc dword ptr [rax]; add byte ptr [rax], al; jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000023fdb: inc dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000021580: inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000003ea87: inc dword ptr [rax]; ret; 
0x000000000002ce7e: inc dword ptr [rbp + 0x100ff2c0]; or eax, 0x683ff; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d3f6: inc dword ptr [rbp + 0x100ff3c0]; or eax, 0x68657; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000003cb42: inc dword ptr [rbp + 0x31]; div byte ptr [rcx]; fild dword ptr [rbp + 0x31]; in al, 0xf6; ret; 
0x000000000003e46a: inc dword ptr [rbp + 0x31]; leave; mov eax, 0x37; syscall; 
0x00000000000418e4: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d4: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x000000000003eff8: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000004c9fa: inc dword ptr [rbp + 0x31]; ror byte ptr [rcx + rcx*4 - 0x20], cl; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000004c966: inc dword ptr [rbp + 0x31]; sar byte ptr [rax + 0x10c], cl; syscall; 
0x000000000005f496: inc dword ptr [rbp + 0x480874c0]; add ecx, dword ptr [rsp]; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000005fc99: inc dword ptr [rbp - 0x16248b40]; ret; 
0x000000000003d9a1: inc dword ptr [rbp - 0x39fc8040]; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x00000000000246d2: inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x0000000000023dbb: inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x00000000000418c6: inc dword ptr [rbp - 0x77]; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x36; syscall; 
0x000000000003913f: inc dword ptr [rbx + 0x34752638]; lea rsi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000005b8a4: inc dword ptr [rbx + 0x3d74eaf8]; movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000002d9f7: inc dword ptr [rbx + 0x42763ef9]; test ecx, ecx; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000003c1d0: inc dword ptr [rbx + 0x4777ffa]; movzx eax, dil; ret; 
0x0000000000039c7e: inc dword ptr [rbx + 0x6751c38]; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000002ce85: inc dword ptr [rbx + 0xd740006]; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x0000000000057711: inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000028928: inc dword ptr [rbx - 0x32160038]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x0000000000021480: inc dword ptr [rbx - 0x3fce9e11]; cmp edi, 0x19; setbe al; ret; 
0x00000000000214dc: inc dword ptr [rbx - 0x3fcebe11]; cmp edi, 0x19; setbe al; ret; 
0x000000000002145e: inc dword ptr [rbx - 0x3fcecf11]; cmp edi, 9; setbe al; ret; 
0x000000000002146f: inc dword ptr [rbx - 0x3fcede11]; cmp edi, 0x5d; setbe al; ret; 
0x0000000000021491: inc dword ptr [rbx - 0x3fcedf11]; cmp edi, 0x5e; setbe al; ret; 
0x0000000000021413: inc dword ptr [rbx - 0x3fcedf31]; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000047a34: inc dword ptr [rbx - 0x76bb0037]; ret 0x894c; 
0x0000000000054852: inc dword ptr [rbx]; add byte ptr [rax], al; lea rcx, [rip + 0x418bf]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000035e5d: inc dword ptr [rbx]; add byte ptr [rax], al; shl rax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000001ed6b: inc dword ptr [rcx + 0xf]; mov dh, 0xb6; xchg eax, edx; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000005a72d: inc dword ptr [rcx + 0xf]; xchg eax, esp; ret; 
0x0000000000029c7b: inc dword ptr [rcx + 1]; call rbx; 
0x0000000000051f0b: inc dword ptr [rcx + 1]; ret 0x48b; 
0x000000000005a911: inc dword ptr [rcx + 1]; rol byte ptr [rbp + 0x410374f6], 0xf7; fadd dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000004c4c9: inc dword ptr [rcx + rcx*4 + 0x20]; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000001b53f: inc dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000004dbd2: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005da08: inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x18; ret; 
0x000000000005b81c: inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x000000000003c7af: inc dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x00000000000178d5: inc dword ptr [rcx + rdi - 0x36]; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x0000000000024b55: inc dword ptr [rcx + rdi - 0x3e]; jb 0x24b61; seta al; movzx eax, al; ret; 
0x000000000004c99a: inc dword ptr [rcx - 0x46]; add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x00000000000599d2: inc dword ptr [rcx - 0x46]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x0000000000023e2d: inc dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x000000000004039b: inc dword ptr [rcx - 0x77]; ret 0x6348; 
0x000000000004037a: inc dword ptr [rcx - 0x77]; ret 0xc085; 
0x000000000001fee3: inc dword ptr [rcx - 0x77]; ret 0xe8c1; 
0x0000000000015698: inc dword ptr [rcx - 0x77]; ret; 
0x0000000000059dc0: inc dword ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x0000000000030e4f: inc dword ptr [rcx - 1]; xor dh, byte ptr [rdi + 0xd]; movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x000000000003b508: inc dword ptr [rcx - 9]; fadd qword ptr [rcx + rcx*4 + 0x20]; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x00000000000507dd: inc dword ptr [rdi + rcx - 0x4a]; ret; 
0x000000000001926a: inc dword ptr [rdi + rcx - 0x4a]; sar byte ptr [rdx + 0x30], 0xeb; sar dword ptr [rax - 1], 1; ret; 
0x000000000002f05c: inc dword ptr [rdi]; add byte ptr [rax], al; jne 0x2f06b; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x00000000000356bb: inc dword ptr [rdi]; add byte ptr [rax], al; jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x00000000000599cc: inc dword ptr [rdx]; ja 0x599fb; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x0000000000021586: inc dword ptr [rdx]; setbe al; ret; 
0x000000000005a482: inc dword ptr [rip + 0x41a98]; ret; 
0x00000000000266ca: inc dword ptr [rsi]; add byte ptr [rax - 0x73], cl; add eax, 0x6ff36; cmove rax, rdx; ret; 
0x000000000002598b: inc dword ptr [rsi]; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001e5bb: inc eax; cdqe; pop rdx; ret; 
0x000000000002815e: inc eax; cmp rax, rdx; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x000000000004f3b1: inc eax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000043a33: inc eax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000004990b: inc eax; pop rbp; pop r12; cdqe; pop r13; ret; 
0x0000000000021a18: inc eax; ret; 
0x000000000005d32e: inc ebx; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000005e400: inc ecx; test al, al; jne 0x5e3f3; sub eax, edx; ret; 
0x000000000003bf31: inc edi; add byte ptr [rax + rax], dl; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rdx; ret; 
0x0000000000059f58: inc edi; add byte ptr [rbx], cl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000023bce: inc edi; add byte ptr [rdi], bl; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000038820: inc edi; add byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000040559: inc edi; add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000004c1af: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0xfebffc8], al; mov eax, 0x83; syscall; 
0x00000000000503d8: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret 1; 
0x00000000000523e4: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000022d21: inc edi; je 0x22d2d; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000003b4e9: inc edi; mov eax, 0xf1; syscall; 
0x000000000005a980: inc edx; mov qword ptr [rdi], rdx; call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x000000000004f254: inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000002815d: inc rax; cmp rax, rdx; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x000000000004f3b0: inc rax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000043a32: inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000005e3ff: inc rcx; test al, al; jne 0x5e3f3; sub eax, edx; ret; 
0x0000000000022d20: inc rdi; je 0x22d2d; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000003b4e8: inc rdi; mov eax, 0xf1; syscall; 
0x000000000005a97f: inc rdx; mov qword ptr [rdi], rdx; call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x000000000004fcbb: insb byte ptr [rdi], dx; add byte ptr [rax], al; lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x00000000000241cf: insb byte ptr [rdi], dx; add dword ptr [rax], eax; mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x0000000000033e10: insb byte ptr [rdi], dx; and al, 0x10; pop rbx; ret; 
0x0000000000037906: insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x000000000001cf69: insb byte ptr [rdi], dx; and al, 0x18; ret; 
0x0000000000032d6e: insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000002f3d9: insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x10; pop rbx; ret; 
0x000000000002ef02: insb byte ptr [rdi], dx; and al, 0x20; pop rbx; ret; 
0x0000000000036a0b: insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x20; pop rbx; ret; 
0x0000000000034155: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x28; ret; 
0x000000000001d14e: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x38; ret; 
0x000000000001d3de: insb byte ptr [rdi], dx; and al, 0x40; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x000000000001d3e2: insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x38; fxch st(1); ret; 
0x0000000000036b39: insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x58; ret; 
0x000000000001a939: insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000002c1e0: insb byte ptr [rdi], dx; and al, 0xe8; fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000035f59: insb byte ptr [rdi], dx; and al, 0xe8; fmulp st(1); ret; 
0x000000000002c348: insb byte ptr [rdi], dx; and al, 0xe8; ret; 
0x000000000001a2ce: insb byte ptr [rdi], dx; and al, 0xfc; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000022cfd: insb byte ptr [rdi], dx; and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000003803f: insb byte ptr [rdi], dx; and al, 8; cmp eax, 0x3ffd9400; ja 0x3804c; fyl2xp1; ret; 
0x0000000000037aca: insb byte ptr [rdi], dx; and al, 8; fabs; ret; 
0x0000000000035c0c: insb byte ptr [rdi], dx; and al, 8; fchs; fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x0000000000037902: insb byte ptr [rdi], dx; and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000003790d: insb byte ptr [rdi], dx; and al, 8; fld1; fpatan; ret; 
0x0000000000037ae4: insb byte ptr [rdi], dx; and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003810b: insb byte ptr [rdi], dx; and al, 8; frndint; ret; 
0x000000000003811c: insb byte ptr [rdi], dx; and al, 8; fsqrt; ret; 
0x000000000003802d: insb byte ptr [rdi], dx; and al, 8; fyl2x; ret; 
0x000000000001d3fb: insb byte ptr [rdi], dx; and al, 8; ret; 
0x00000000000220fc: insb byte ptr [rdi], dx; ret 0xe808; 
0x0000000000036087: insb byte ptr [rdi], dx; sar esi, 0xff; add rsp, 0x28; ret; 
0x000000000003d397: insd dword ptr [rdi], dx; add al, ch; ret 0xfdaf; 
0x000000000005c0fa: int 0x44; mov ebp, ecx; add rax, rdx; jmp rax; 
0x000000000005c0fd: int 0x48; add eax, edx; jmp rax; 
0x0000000000024554: int 0x77; add al, byte ptr [rax]; mov eax, 0x27; syscall; 
0x000000000002027a: int 0xe0; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000020b98: int 0xe0; pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000002a5f9: int 0xf2; subps xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x0000000000033663: int 0xf3; addps xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000002e5e1: int 0xf3; mulps xmm1, xmmword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000001fa7b: int 1; rol dword ptr [rcx + 1], cl; ret; 
0x0000000000017154: int1; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000002f014: int1; fstp st(0); ja 0x2efc8; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000002eefc: int1; fstp st(0); jbe 0x2eee9; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x0000000000029625: int1; fstp st(1); ret; 
0x0000000000057488: int1; jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000028164: int1; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x0000000000055878: int1; or rax, r8; shl rdx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000558b8: int1; or rax, r8; shr rdx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000004081f: int1; pop rbx; ret; 
0x0000000000019f96: int1; ret; 
0x0000000000037b5e: int1; shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x0000000000039474: iretd; add dword ptr [rax], r8d; mov eax, 1; pop rdx; ret; 
0x0000000000021415: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x000000000002178e: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x000000000005013d: iretd; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000005a631: iretd; jle 0x5a639; add eax, 0x15180; ret; 
0x000000000001ca73: iretd; jmp qword ptr [rsi + 0xf]; 
0x00000000000403d4: iretd; mov dword ptr [rsi], edi; ret; 
0x000000000004d04a: iretd; mov rsi, r8; syscall; 
0x000000000001e743: iretd; syscall; 
0x0000000000017108: ja 0x170e0; ret; 
0x0000000000017237: ja 0x17240; mov rax, rdi; ret; 
0x0000000000019930: ja 0x19940; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001a0a7: ja 0x1a0ad; cmp r9, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001a0b0: ja 0x1a0ba; ret; 
0x000000000001e8a5: ja 0x1e805; pop rbx; ret; 
0x000000000002159e: ja 0x215f3; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000216e8: ja 0x21702; and edi, 0xfffe; cmp edi, 0xfffe; setne al; movzx eax, al; ret; 
0x00000000000217d0: ja 0x217d5; or eax, 0x20; ret; 
0x00000000000217e3: ja 0x217e8; and eax, 0x5f; ret; 
0x0000000000024555: ja 0x24559; add byte ptr [rax + 0x27], bh; syscall; 
0x000000000002e45b: ja 0x2e463; add byte ptr [rsi + 0x50], dh; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e69b: ja 0x2e6a8; comisd xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002e6da: ja 0x2e6e6; comiss xmm0, xmm1; jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x000000000002f017: ja 0x2efc8; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000308c5: ja 0x308d4; movsd xmm0, qword ptr [rip + 0x64c39]; divsd xmm0, xmm1; ret; 
0x0000000000030e56: ja 0x30e65; movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x0000000000032383: ja 0x324be; lea rdx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000356b8: ja 0x356c1; cmp eax, 0x7ff; jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035869: ja 0x35872; cmp eax, 0xff; jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000003793c: ja 0x37941; f2xm1; ret; 
0x0000000000038047: ja 0x3804c; fyl2xp1; ret; 
0x000000000003b581: ja 0x3b5aa; sub esi, 0xd7c0; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000003c1ad: ja 0x3c1b2; mov eax, edi; ret; 
0x000000000003c1d4: ja 0x3c1da; movzx eax, dil; ret; 
0x000000000003ea94: ja 0x3ea99; movzx eax, di; ret; 
0x000000000003eaaa: ja 0x3eab0; shr eax, 0x10; ret; 
0x0000000000043d7f: ja 0x43d7e; dec dword ptr [rcx + rcx*4 - 0x19]; call 0x56922; mov eax, 0x39; syscall; 
0x000000000004477f: ja 0x44846; movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x0000000000044ce8: ja 0x44cf2; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000044d41: ja 0x44d47; xor eax, eax; ret; 
0x0000000000047bf5: ja 0x47bff; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x000000000004bced: ja 0x4bd0f; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004c396: ja 0x4c3a1; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000004db40: ja 0x4db4a; ret; 
0x000000000004f24f: ja 0x4f279; setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000005143a: ja 0x515a1; lea rdi, [rip + 0x44a81]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000005263b: ja 0x5230e; lea rdx, [rip + 0x439a8]; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000052621: ja 0x5294b; lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000052d3f: ja 0x52d5e; lea rcx, [rip + 0x432d0]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000053294: ja 0x536e5; lea rcx, [rip + 0x42d8f]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000537fb: ja 0x53962; lea rdi, [rip + 0x428ac]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000053e01: ja 0x53ac6; lea rdx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x00000000000567ed: ja 0x567f7; and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x00000000000567fa: ja 0x56804; ret; 
0x0000000000056f38: ja 0x56f3f; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f3b: ja 0x56f55; xor eax, eax; ret; 
0x0000000000056f52: ja 0x56f5a; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x0000000000056f56: ja 0x56f60; xor eax, eax; ret; 
0x0000000000056f63: ja 0x56f6a; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x0000000000056f66: ja 0x56f84; xor eax, eax; ret; 
0x0000000000056f74: ja 0x56f96; xor eax, eax; ret; 
0x0000000000056fa8: ja 0x56fb6; add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000056fb4: ja 0x56fc6; ret; 
0x0000000000056fd0: ja 0x56fdf; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000057437: ja 0x57440; shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000058620: ja 0x58624; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000000595ce: ja 0x595d4; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x00000000000599ce: ja 0x599fb; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000005ef3d: ja 0x5ef0f; add eax, dword ptr [rax]; ret; 
0x000000000001a03a: jae 0x1a030; ret; 
0x0000000000022ae6: jae 0x22af9; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000024540: jae 0x2454a; syscall; 
0x0000000000024698: jae 0x246ab; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x00000000000246b0: jae 0x246c3; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000003c293: jae 0x3c2a9; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000003c2ad: jae 0x3c2c3; movsxd rdi, r12d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000040897: jae 0x408fa; add dword ptr [rax], eax; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x00000000000419ab: jae 0x419c1; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x00000000000419c5: jae 0x419db; movsxd rdi, r8d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004cad4: jae 0x4cb1e; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x000000000004d3cb: jae 0x4d3ed; movsxd rdx, edx; xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000004d41e: jae 0x4d443; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004e73f: jae 0x4e753; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000004efb7: jae 0x4efcf; movsxd rdi, dword ptr [r12 + 0x78]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000057489: jae 0x5749a; lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x00000000000580a8: jae 0x580c2; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000005d874: jae 0x5d876; add byte ptr [rax], al; syscall; 
0x000000000005de63: jae 0x5de69; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x00000000000171f5: jb 0x171fa; mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000021e79: jb 0x21e7a; call qword ptr [rbx + 0x48]; 
0x0000000000024b59: jb 0x24b61; seta al; movzx eax, al; ret; 
0x000000000002e5e7: jb 0x2e5ef; add byte ptr [rdi], cl; sub cl, al; ret; 
0x000000000002e622: jb 0x2e62a; add bl, ch; add al, 0xf3; mulps xmm0, xmm2; subss xmm0, xmm4; ret; 
0x0000000000035adc: jb 0x35ae6; addsd xmm0, qword ptr [rip + 0x5f04a]; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b65: jb 0x35b6f; addss xmm0, dword ptr [rip + 0x5fd09]; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000003792d: jb 0x37934; fstp st(1); fchs; ret; 
0x000000000004cacf: jb 0x4ca51; add byte ptr ds:[rbp + 0x73], dh; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x000000000004d149: jb 0x4d15b; or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005146a: jb 0x51474; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005157e: jb 0x51588; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000051597: jb 0x515a9; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005382b: jb 0x53835; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005393f: jb 0x53949; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000053958: jb 0x5396a; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000584f7: jb 0x58541; movsxd rdi, dword ptr [rbx + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000005d402: jb 0x5d404; add byte ptr [rax], al; syscall; 
0x000000000005e049: jb 0x5e090; cld; dec dword ptr [rcx + 0x5ac03128]; pop rbx; pop rbp; ret; 
0x000000000006060a: jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x00000000000191ea: jbe 0x191d0; mov eax, 1; ret; 
0x0000000000019242: jbe 0x19276; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x0000000000021401: jbe 0x2140e; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x0000000000022a36: jbe 0x22a3b; movsxd rsi, eax; mov eax, 0x48; mov rdx, r10; syscall; 
0x0000000000024426: jbe 0x2442b; mov r10, rcx; movsxd rdi, edi; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000279f9: jbe 0x27a03; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x0000000000027af0: jbe 0x27af3; hlt; ret; 
0x0000000000027f63: jbe 0x27f6d; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x000000000002b849: jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000002b9b8: jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x000000000002bfc6: jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002c271: jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000002d9fb: jbe 0x2da3f; test ecx, ecx; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000002de3f: jbe 0x2deac; test ecx, ecx; jns 0x2de51; addsd xmm1, qword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000002e025: jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0f2: jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000002e1eb: jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002e389: jbe 0x2e3a0; addsd xmm4, xmm0; movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002e45e: jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e5d8: jbe 0x2e5ee; addss xmm5, xmm0; subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002e6a1: jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000002e6df: jbe 0x2e6ea; subss xmm0, xmm1; ret; 
0x000000000002e7f2: jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002eeff: jbe 0x2eee9; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000002fda7: jbe 0x2fdb6; movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x0000000000030327: jbe 0x30336; movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x0000000000037ab1: jbe 0x37a7c; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037abe: jbe 0x37a89; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000390ec: jbe 0x390ee; add byte ptr [rax], al; syscall; 
0x000000000003a2ed: jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x000000000004c7b6: jbe 0x4c762; cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x0000000000056cc9: jbe 0x56cf3; add byte ptr [rax], al; ret; 
0x000000000001776d: je 0x17780; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x0000000000017902: je 0x17850; test rax, rax; jne 0x178e8; xor eax, eax; pop rbx; ret; 
0x0000000000017952: je 0x17960; test rdx, rdx; jne 0x17940; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000017a25: je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000017f4d: je 0x17f57; cmp rax, rdi; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000186a6: je 0x186b8; cmp byte ptr [rax], 0; jne 0x186a0; sub rax, rdi; ret; 
0x0000000000018f93: je 0x18f60; cmp dx, r8w; jne 0x18f80; pop rbp; ret; 
0x0000000000019de8: je 0x19df8; cmp dword ptr [rdi], esi; jne 0x19de0; mov rax, rdi; ret; 
0x0000000000019e23: je 0x19e10; sub eax, r8d; ret; 
0x0000000000019ea8: je 0x19eb0; mov eax, dword ptr [rsi + 8]; mov dword ptr [rcx + 8], eax; mov rax, r8; ret; 
0x0000000000019f6f: je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001a019: je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x000000000001a0a4: je 0x1a0b2; mov dword ptr [rdi + 4], esi; cmp r9, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001a0ad: je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x000000000001b24f: je 0x1b276; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000001b537: je 0x1b540; xor esi, esi; call 0x1b3f7; mov eax, r12d; pop r12; ret; 
0x000000000001b891: je 0x1b8a0; cmp eax, 2; jne 0x1b8eb; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001b8fc: je 0x1b903; call 0x221f7; add rsp, 0xa0; xor eax, eax; pop rbx; ret; 
0x000000000001e7d6: je 0x1e7dd; call 0x221f7; add rsp, 0x210; pop rbx; ret; 
0x000000000001fcde: je 0x1fd04; sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x0000000000021286: je 0x2128d; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000213a9: je 0x213b0; call 0x221f7; add rsp, 0x90; pop rbx; ret; 
0x0000000000021a52: je 0x21a66; sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x00000000000220c1: je 0x220ce; mov rax, rdx; syscall; 
0x00000000000229e5: je 0x229fe; test eax, eax; js 0x229f5; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000022a5b: je 0x22a62; call 0x221f7; add rsp, 0x68; ret; 
0x0000000000022b0c: je 0x22b13; call 0x221f7; add rsp, 0x50; pop rbx; ret; 
0x0000000000022b9f: je 0x22ba6; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000022cb8: je 0x22cc5; not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000022d23: je 0x22d2d; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000022db5: je 0x22dbc; call 0x221f7; add rsp, 0xa0; pop rbx; ret; 
0x0000000000022ec7: je 0x22ece; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000231c1: je 0x231c8; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000232b6: je 0x232bd; call 0x221f7; add rsp, 0x840; mov rax, r12; pop r12; ret; 
0x0000000000023504: je 0x2350b; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000235ba: je 0x235c1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000023783: je 0x2378a; call 0x221f7; add rsp, 0x38; ret; 
0x00000000000237d1: je 0x237d8; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000239d5: je 0x239ea; push rax; call 0x4db47; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x0000000000023b15: je 0x23b1c; call 0x221f7; add rsp, 0x38; ret; 
0x0000000000023bac: je 0x23bb3; call 0x221f7; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000023cb1: je 0x23cb8; call 0x221f7; add rsp, 0xe0; pop rbx; ret; 
0x0000000000023da7: je 0x23dae; call 0x221f7; add rsp, 0x58; ret; 
0x000000000002411c: je 0x2412d; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000002430c: je 0x24313; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024386: je 0x2438d; call 0x221f7; add rsp, 0x58; ret; 
0x000000000002445d: je 0x24464; call 0x221f7; add rsp, 0x60; pop rbx; ret; 
0x00000000000245c2: je 0x245c9; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024659: je 0x24660; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024722: je 0x24729; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002497a: je 0x2497e; bswap eax; ret; 
0x0000000000024b15: je 0x24b22; call 0x225bf; mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x0000000000024cba: je 0x24cc1; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000266f7: je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x00000000000267b6: je 0x2679c; pop rbx; ret; 
0x0000000000026c65: je 0x26c5d; ret; 
0x0000000000026d67: je 0x26d6e; call 0x221f7; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000026f91: je 0x26f98; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000273c5: je 0x273cc; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000027487: je 0x2748e; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000027b04: je 0x27b11; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027f7c: je 0x27f89; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000028179: je 0x28186; mov dword ptr [rip + 0x73e97], 0; ret; 
0x0000000000028ebc: je 0x28ebf; hlt; sub rax, rdx; ret; 
0x000000000002950b: je 0x29517; xor r8d, r8d; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x00000000000295b6: je 0x295bf; xorps xmm1, xmmword ptr [rip + 0x6a1a1]; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x00000000000295d5: je 0x295de; xorps xmm1, xmmword ptr [rip + 0x6a192]; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000029a7c: je 0x29a83; call 0x221f7; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000002a25e: je 0x2a265; call 0x221f7; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002a536: je 0x2a53d; call 0x221f7; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002a82b: je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x000000000002a904: je 0x2a917; movsd xmm1, qword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002b447: je 0x2b450; xorps xmm1, xmmword ptr [rip + 0x68310]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002b548: je 0x2b551; xorps xmm1, xmmword ptr [rip + 0x6821f]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002b627: je 0x2b62b; fchs; add rsp, 0x40; pop rbx; ret; 
0x000000000002b80e: je 0x2b817; xorps xmm0, xmmword ptr [rip + 0x67f49]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002bc9a: je 0x2bca3; xorps xmm0, xmmword ptr [rip + 0x67acd]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002bd43: je 0x2bd4c; xorps xmm0, xmmword ptr [rip + 0x67a14]; add rsp, 0x10; pop rbx; ret; 
0x000000000002bde2: je 0x2bdeb; xorps xmm0, xmmword ptr [rip + 0x67985]; add rsp, 0x10; pop rbx; ret; 
0x000000000002be72: je 0x2be76; fchs; add rsp, 0x30; pop rbx; ret; 
0x000000000002c2d6: je 0x2c2dd; mov eax, 0x3f800000; movd xmm0, eax; ret; 
0x000000000002c41c: je 0x2c423; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002c5f9: je 0x2c600; call 0x221f7; add rsp, 0x18; ret; 
0x000000000002c90c: je 0x2c915; fstp st(0); call 0x221f7; add rsp, 0x48; ret; 
0x000000000002cd48: je 0x2cd51; xorps xmm0, xmmword ptr [rip + 0x66a0f]; pop rbx; ret; 
0x000000000002ce89: je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d2c3: je 0x2d2cc; xorps xmm0, xmmword ptr [rip + 0x664a4]; pop rbx; ret; 
0x000000000002d401: je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002d87c: je 0x2d880; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000002dc4c: je 0x2dc53; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000002dcf8: je 0x2dcff; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000002de10: je 0x2de19; fstp st(0); call 0x221f7; add rsp, 0x40; pop rbx; ret; 
0x000000000002e01a: je 0x2e0c2; cmp eax, 0x7f7; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000002e0e7: je 0x2e198; cmp eax, 0x7f7; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x000000000002f564: je 0x2f56b; call 0x221f7; add rsp, 0x48; ret; 
0x000000000002f7df: je 0x2f7e8; fstp st(0); call 0x221f7; add rsp, 0x98; ret; 
0x0000000000031860: je 0x3186a; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000018348: je 0x31ecf920; shr byte ptr [rcx], 0xc8; ret; 
0x0000000000035633: je 0x3563a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003566b: je 0x35672; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003582a: je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359af: je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x0000000000036084: je 0x3608b; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000367c5: je 0x367cc; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036b31: je 0x36b38; call 0x221f7; fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x0000000000036bf0: je 0x36bf7; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000036d45: je 0x36d4c; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036dfb: je 0x36e04; xorps xmm0, xmmword ptr [rip + 0x5c95c]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036ec6: je 0x36ecf; xorps xmm0, xmmword ptr [rip + 0x5c8a1]; add rsp, 0x10; pop rbx; ret; 
0x0000000000037080: je 0x37087; call 0x221f7; fld xword ptr [rsp + 0x60]; add rsp, 0x58; ret; 
0x000000000003801e: je 0x38025; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003809e: je 0x380a5; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000038260: je 0x38268; bsf rax, rax; inc eax; ret; 
0x000000000003826e: je 0x38277; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003827d: je 0x38286; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x00000000000387dc: je 0x387e3; call 0x221f7; add rsp, 0x130; pop rbp; ret; 
0x0000000000039147: je 0x3916d; or byte ptr [rax + 0x61], bh; mov rdi, rbp; syscall; 
0x00000000000392b9: je 0x392c0; call 0x221f7; add rsp, 0x90; pop rbp; ret; 
0x0000000000039320: je 0x39327; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000039400: je 0x39407; call 0x221f7; add rsp, 0x30; pop rbx; ret; 
0x0000000000039470: je 0x3947f; push rax; call 0x4db47; mov eax, 1; pop rdx; ret; 
0x0000000000039ccc: je 0x39cd3; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003a240: je 0x3a247; call 0x221f7; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000003a30f: je 0x3a316; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003a67b: je 0x3a682; call 0x221f7; add rsp, 0x10; pop rbp; ret; 
0x000000000003a894: je 0x3a89b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000003a90c: je 0x3a913; call 0x221f7; add rsp, 0x28; ret; 
0x000000000003a95d: je 0x3a964; call 0x221f7; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003b025: je 0x3b033; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003b025: je 0x3b033; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x000000000003b1a6: je 0x3b1ad; call 0x221f7; add rsp, 0x128; ret; 
0x000000000003b297: je 0x3b2b6; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x000000000003b338: je 0x3b351; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003b453: je 0x3b45a; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003b53d: je 0x3b54b; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000003b6b5: je 0x3b6bc; call 0x221f7; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003b728: je 0x3b72f; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003b87a: je 0x3b881; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003b88e: je 0x3b898; xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x000000000003be23: je 0x3be2a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003bfcb: je 0x3bff1; or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000003c19e: je 0x3c1a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003c1de: je 0x3c1ea; push rax; xor edx, edx; call 0x3be2f; pop rdx; ret; 
0x000000000003e0a8: je 0x3e0af; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003e25a: je 0x3e261; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000003e48d: je 0x3e496; add rax, 0xa0; ret; 
0x000000000003e912: je 0x3e919; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000040819: je 0x40820; cmp dword ptr [rax + 0x10], ebx; jne 0x40811; pop rbx; ret; 
0x0000000000040923: je 0x4092a; call 0x221f7; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000040b1f: je 0x40b26; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041271: je 0x41297; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000041941: je 0x41948; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000041b32: je 0x41b39; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041b8b: je 0x41b92; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041c19: je 0x41c20; call 0x221f7; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x00000000000422f8: je 0x422ff; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004236c: je 0x42373; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000423de: je 0x423e5; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042d89: je 0x42d9e; push rax; call 0x4db47; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042e06: je 0x42e0d; add al, ch; ret 0; 
0x0000000000042e20: je 0x42e27; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042e73: je 0x42e7a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042ec4: je 0x42ecb; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043d3c: je 0x43d43; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043f45: je 0x43f4c; call 0x221f7; leave; ret; 
0x000000000004419a: je 0x441a1; call 0x221f7; leave; ret; 
0x00000000000446cc: je 0x44708; mov eax, 0x68; syscall; 
0x00000000000447b6: je 0x447bf; mov rax, r12; syscall; 
0x000000000004480b: je 0x44846; movsxd rdi, eax; mov rax, r12; syscall; 
0x00000000000448d6: je 0x448fc; sbb al, 0xba; add al, 0; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000044dd7: je 0x44dde; call 0x221f7; add rsp, 0x160; pop rbp; ret; 
0x00000000000454e0: je 0x454e7; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x00000000000455c8: je 0x455ee; or al, ch; movabs al, byte ptr [0x890824748bfffffa]; ret 0x8341; 
0x0000000000045759: je 0x4577f; cmp al, 0x89; ret 0x8341; 
0x0000000000045820: je 0x45846; cmp al, 0x89; ret 0x7c83; 
0x0000000000045ccd: je 0x45d19; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x000000000004726c: je 0x4727c; mov qword ptr [rax], -1; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000049fc1: je 0x49fe7; cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004b2bc: je 0x4b2d0; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000004b2ff: je 0x4b306; call 0x221f7; add rsp, 0x10; pop rbp; ret; 
0x000000000004b635: je 0x4b63c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004b669: je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004b687: je 0x4b68c; mov qword ptr [rdx], rax; ret; 
0x000000000004b8cd: je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000004bc04: je 0x4bc0b; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004bcc8: je 0x4bccf; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000004c032: je 0x4c058; or byte ptr [rcx + 0x63], cl; cld; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000004c283: je 0x4c28a; call 0x221f7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004c2f1: je 0x4c2f8; call 0x221f7; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000004c372: je 0x4c379; call 0x221f7; add rsp, 0xb8; pop rbx; pop r12; ret; 
0x000000000004c41e: je 0x4c425; call 0x221f7; add rsp, 0x148; ret; 
0x000000000004c48e: je 0x4c495; call 0x221f7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004c5f3: je 0x4c5fa; call 0x221f7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004c7b3: je 0x4c78c; call 0x17230; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c80d: je 0x4c814; call 0x221f7; add rsp, 0x90; pop rbx; ret; 
0x000000000004c92c: je 0x4c933; call 0x221f7; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000004c9c3: je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000004ca29: je 0x4ca39; mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x000000000004cc3a: je 0x4cc41; call 0x221f7; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000004ccd8: je 0x4ccdf; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004ce82: je 0x4ce89; call 0x221f7; sub rsp, -0x80; pop rbx; ret; 
0x000000000004cf3a: je 0x4cf41; call 0x221f7; sub rsp, -0x80; pop rbx; ret; 
0x000000000004d066: je 0x4d06d; call 0x221f7; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000004d116: je 0x4d12c; movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004d4c3: je 0x4d4ca; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000004d50d: je 0x4d519; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004d5ca: je 0x4d5d9; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000004d7c6: je 0x4d7cd; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004d7ef: je 0x4d7f8; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004d84d: je 0x4d858; or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x000000000004d8cd: je 0x4d8d4; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000004d97c: je 0x4d983; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004da6b: je 0x4da72; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004dade: je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004db1d: je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004db32: je 0x4db3b; sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x000000000004dbd0: je 0x4dbce; inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000004dc09: je 0x4dc10; call 0x4d408; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000004dc48: je 0x4dc4f; call 0x4d408; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000004dd13: je 0x4dd35; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004dd40: je 0x4dd50; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004e523: je 0x4e52a; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004e7ac: je 0x4e7c1; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000004e8c5: je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004ead0: je 0x4ead7; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f144: je 0x4f14b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f278: je 0x4f284; mov rdx, qword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000004f329: je 0x4f333; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000004f36b: je 0x4f374; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004f3ae: je 0x4f3f2; inc rax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x000000000004f56b: je 0x4f572; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f747: je 0x4f74e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004fc94: je 0x4fc9b; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004fe46: je 0x4fe4d; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000502ab: je 0x502b2; call 0x221f7; add rsp, 0x10; pop rbx; ret; 
0x000000000005068a: je 0x50691; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050ad1: je 0x50ad8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050b5a: je 0x50b66; mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000050c09: je 0x50c10; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050cba: je 0x50cc1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050d6b: je 0x50d72; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050e17: je 0x50e1e; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050ec8: je 0x50ecf; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050fbb: je 0x50fe1; sbb byte ptr [rax + 6], bh; mov rdi, r13; syscall; 
0x000000000005141f: je 0x51426; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000052ca3: je 0x52ce1; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000052df3: je 0x52dfa; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054407: je 0x5440e; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054f51: je 0x54f58; call 0x221f7; add rsp, 0x118; ret; 
0x0000000000055045: je 0x5504c; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000055325: je 0x5532c; call 0x221f7; add rsp, 0x1f8; ret; 
0x00000000000553ff: je 0x55406; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000554b5: je 0x554bc; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000005640e: je 0x56415; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x56410; ret; 
0x00000000000568ab: je 0x568b2; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000569e8: je 0x56a0d; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000056c57: je 0x56c5d; lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000056d87: je 0x56d8b; call rax; 
0x0000000000056da9: je 0x56dad; call rax; 
0x0000000000056d7f: je 0x56dcc; mov rax, qword ptr [rbx]; test rax, rax; je 0x56d8b; call rax; 
0x0000000000056f7d: je 0x56f8e; dec eax; jne 0x56f89; mov eax, 0x5f; ret; 
0x00000000000573d9: je 0x573fe; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057507: je 0x5750f; cmp r12, 3; jne 0x57516; mov rax, r12; syscall; 
0x0000000000057b33: je 0x57b5a; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057d2d: je 0x57d43; mov eax, dword ptr [rdi + 0x8c]; test eax, eax; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000057d9b: je 0x57da6; dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x0000000000057e71: je 0x57e86; mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000057fe3: je 0x57ff3; mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000005808c: je 0x580a6; mov eax, 0xda; mov rdi, rbp; syscall; 
0x00000000000584fe: je 0x58524; push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x00000000000584f6: je 0x5856a; movsxd rdi, dword ptr [rbx + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000005873b: je 0x5875e; mov eax, 0x8f; mov rsi, r14; syscall; 
0x0000000000058b17: je 0x58b2a; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000058bdc: je 0x58be2; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000058fc3: je 0x58fd1; mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x00000000000591fa: je 0x59201; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005928a: je 0x59291; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000593e9: je 0x593f3; mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x000000000005947d: je 0x59430; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000594f3: je 0x594b6; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000059701: je 0x59709; movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000059730: je 0x59742; push rax; call 0x59a36; xor eax, eax; pop rdx; ret; 
0x00000000000598b3: je 0x598c4; movsxd rsi, ebx; mov eax, 0x90; mov rdx, r12; syscall; 
0x0000000000059950: je 0x59960; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000059954: je 0x5997a; or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000599b5: je 0x599be; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000599e7: je 0x599fb; movq xmm0, qword ptr [rdx]; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000005a3e3: je 0x5a3ea; call 0x221f7; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005a44f: je 0x5a458; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005a4a7: je 0x5a4ce; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005a597: je 0x5a5bd; or byte ptr [rax + 5], bh; mov rdi, rbp; syscall; 
0x000000000005a5af: je 0x5a5c0; mov eax, 3; mov rdi, rbp; syscall; 
0x000000000005a62e: je 0x5a639; dec edi; jle 0x5a639; add eax, 0x15180; ret; 
0x000000000005a917: je 0x5a91c; neg r8d; mov eax, r8d; ret; 
0x000000000005b682: je 0x5b689; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005b7ba: je 0x5b7c1; call 0x221f7; mov rax, r8; add rsp, 0x28; ret; 
0x000000000005b7ec: je 0x5b812; or byte ptr [rax + 0xe5], bh; movsxd rdi, r9d; syscall; 
0x000000000005b816: je 0x5b81d; call 0x221f7; mov eax, r8d; add rsp, 0x28; ret; 
0x000000000005b896: je 0x5b8aa; call rax; 
0x000000000005b8a8: je 0x5b8e7; movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000005b9af: je 0x5b9b6; call 0x221f7; add rsp, 0x40; pop rbp; ret; 
0x000000000005ba19: je 0x5ba20; call 0x221f7; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000005bba1: je 0x5bba8; call 0x221f7; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000005ca23: je 0x5ca2a; call 0x221f7; add rsp, 0x20; pop rbx; ret; 
0x000000000005cf91: je 0x5cf98; call 0x221f7; add rsp, 0x38; ret; 
0x000000000005d2af: je 0x5d2b6; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005d35a: je 0x5d352; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x000000000005d3be: je 0x5d3d4; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000005d40b: je 0x5d41b; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000005d46d: je 0x5d474; call 0x221f7; xor eax, eax; add rsp, 0x18; ret; 
0x000000000005d455: je 0x5d47b; add al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005d677: je 0x5d67e; call 0x221f7; add rsp, 0x30; pop rbp; ret; 
0x000000000005d705: je 0x5d70c; call 0x221f7; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x000000000005d8fc: je 0x5d903; call 0x221f7; add rsp, 0x198; pop rbx; pop rbp; ret; 
0x000000000005da02: je 0x5da09; call 0x221f7; mov eax, r8d; add rsp, 0x18; ret; 
0x000000000005dccf: je 0x5dcd6; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005dd33: je 0x5dd3a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005def5: je 0x5defc; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005df4e: je 0x5df55; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005dfc9: je 0x5dfd0; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e00a: je 0x5e011; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e194: je 0x5e19b; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005e216: je 0x5e21d; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005e2a9: je 0x5e26b; or byte ptr [rax - 0x77], cl; ret 0xff48; 
0x000000000005e2e4: je 0x5e2aa; mov byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000005ef34: je 0x5ef41; mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x000000000005f35c: je 0x5f368; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005f3b0: je 0x5f36f; add rax, 8; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x000000000005f499: je 0x5f4a3; add rcx, qword ptr [rsp]; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000006061c: je 0x60628; add rax, qword ptr [r14]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000001b28c: jg 0x1b24c; add dword ptr [rax], 0x8d480000; cmp eax, 0x80d4f; mov rax, r8; syscall; 
0x000000000001e6fc: jg 0x1e6e7; ret; 
0x000000000001efa0: jg 0x1efa5; lea eax, [rdi - 0x35]; and eax, 0x3f; ret; 
0x0000000000021450: jg 0x21461; xchg eax, esp; ret 0xd009; 
0x00000000000216a9: jg 0x2162e; jmp qword ptr [rax]; 
0x00000000000219b2: jg 0x21a68; neg edi; sbb eax, eax; ret; 
0x0000000000021bbf: jg 0x21bc9; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x0000000000023f37: jg 0x23f81; movsxd rdi, edi; cmp rdx, rax; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000002b9b2: jg 0x2b9f1; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm1; ret; 
0x000000000002b9b7: jg 0x2ba2f; add eax, 0xc1580ff3; ret; 
0x000000000002bfc5: jg 0x2c03d; add eax, 0xc0580ff3; ret; 
0x000000000002bfc4: jg 0x2c045; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002c314: jg 0x2c339; and al, 0xfc; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000002c336: jg 0x2c39e; and edx, 0xd0098000; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000002e2a6: jg 0x2e2b7; test dword ptr [rax + 1], edi; add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002e763: jg 0x2e788; and al, 0xfc; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002e76b: jg 0x2e7ec; setbe al; movzx eax, al; ret; 
0x000000000002f34b: jg 0x2f2cd; mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; pop rbx; ret; 
0x0000000000030325: jg 0x303a6; jbe 0x30336; movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x0000000000032746: jg 0x32751; ret; 
0x0000000000033391: jg 0x333a2; test dword ptr [rsi + 1], ebx; add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000035a9d: jg 0x35aad; movsd qword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x0000000000035b28: jg 0x35b38; movss dword ptr [rsp - 4], xmm1; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000003a19e: jg 0x3a1b0; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000003a1a2: jg 0x3a1b4; mov eax, 0xa0; syscall; 
0x000000000003a1a2: jg 0x3a1b4; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000003c1d3: jg 0x3c24c; add al, 0x40; movzx eax, bh; ret; 
0x000000000003d9a4: jg 0x3d9a9; mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x00000000000447be: jg 0x44778; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x0000000000044ca1: jg 0x44cab; test rdi, rdi; jne 0x44cab; xor eax, eax; ret; 
0x000000000004b16e: jg 0x4b1a0; mov eax, 0xcb; syscall; 
0x000000000004b16e: jg 0x4b1a0; mov eax, 0xcb; syscall; neg eax; ret; 
0x000000000004b1b6: jg 0x4b1e8; syscall; 
0x000000000004bcf1: jg 0x4bd1b; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004c4a7: jg 0x4c4a9; add byte ptr [rax], al; syscall; 
0x000000000004d4d2: jg 0x4d54c; call 0x1b52a; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000004d789: jg 0x4d803; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004dadb: jg 0x4dafd; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000050b57: jg 0x50bb9; add byte ptr [rdx + rcx - 0x39], dh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000570e8: jg 0x57136; mov edi, ebp; mov rax, r8; syscall; 
0x0000000000057184: jg 0x571d2; mov edi, ebp; mov rax, r8; syscall; 
0x0000000000057770: jg 0x576fb; adc byte ptr [rbp + 0x480779c0], al; mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x00000000000576d8: jg 0x57726; mov eax, eax; syscall; 
0x0000000000057723: jg 0x57771; mov eax, eax; syscall; 
0x00000000000580d2: jg 0x580dc; call qword ptr [rax]; 
0x0000000000058931: jg 0x5896c; ret 0xd875; 
0x000000000005936f: jg 0x5932f; add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r8; syscall; 
0x000000000005ceb0: jg 0x5ce6a; loope 0x5ceb4; add byte ptr [rax], al; syscall; 
0x000000000005ce88: jg 0x5ceba; mov esi, 0x20; syscall; 
0x000000000005ce88: jg 0x5ceba; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000005cf00: jg 0x5cf4a; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x0000000000021753: jge 0x21754; lcall [rdx + 0x48]; test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000023d03: jge 0x23d05; add byte ptr [rax], al; syscall; 
0x0000000000026d4f: jge 0x26d51; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x000000000004b8d1: jge 0x4b8d3; call rbx; 
0x000000000005db40: jge 0x5db42; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000005db53: jge 0x5db59; mov rax, r9; syscall; 
0x000000000005db68: jge 0x5db6a; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x000000000005db7b: jge 0x5db81; mov rax, r9; syscall; 
0x000000000003c1ca: jge 0xffffffffff244267; inc dword ptr [rbx + 0x4777ffa]; movzx eax, dil; ret; 
0x0000000000018ca7: jl 0x18ccd; or byte ptr [rax - 0x77], cl; ret; 
0x000000000001a66b: jl 0x1a691; test al, 0xd9; ret; 
0x0000000000021bbb: jl 0x21bf2; movsxd rdi, dword ptr [rdi + 8]; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x0000000000022cd1: jl 0x22cf7; clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000002c1e6: jl 0x2c20c; or bl, bl; insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000033e0c: jl 0x33e32; adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; pop rbx; ret; 
0x0000000000035c12: jl 0x35c38; or bl, bl; insb byte ptr [rdi], dx; and al, 8; ret; 
0x000000000003a019: jl 0x3a058; add al, ch; cmc; ret; 
0x000000000003a115: jl 0x3a13b; sub byte ptr [rcx - 0x73], cl; push rbp; add eax, ebp; ret; 
0x0000000000044a07: jl 0x44a2d; sub al, 0x89; ret; 
0x0000000000047dc7: jl 0x47ded; adc byte ptr [rax - 1], cl; ret; 
0x0000000000048a4b: jl 0x48ac2; sub ecx, dword ptr [rax - 1]; ret; 
0x0000000000048c23: jl 0x48c25; add eax, ebp; cmc; ret; 
0x000000000004efbb: jl 0x4efe1; js 0x4ef77; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000004efd7: jl 0x4effd; js 0x4ef93; add byte ptr [rax], al; add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x0000000000050493: jl 0x50441; and byte ptr [rax + 3], bh; syscall; 
0x000000000005042e: jl 0x50454; and al, 0x48; mov eax, edx; syscall; 
0x000000000005055c: jl 0x5050a; and byte ptr [rax + 3], bh; syscall; 
0x0000000000050595: jl 0x50543; and byte ptr [rax + 3], bh; syscall; 
0x0000000000057aa0: jl 0x57ac6; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000058012: jl 0x58038; or byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005bf57: jl 0x5bf7d; adc byte ptr [rcx], dh; fisttp dword ptr [rcx + 0x39]; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x000000000005cb66: jl 0x5cb8c; sbb byte ptr [rax - 0x75], cl; and al, 8; call rax; 
0x000000000005d593: jl 0x5d5b9; and al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000005d5ca: jl 0x5d5f0; and byte ptr [rax + 3], bh; syscall; 
0x000000000005d990: jl 0x5d992; add byte ptr [rax], al; syscall; 
0x0000000000016948: jle 0x1694f; ret 0x7e2; 
0x0000000000016a1b: jle 0x16a22; jmp rcx; 
0x000000000001948e: jle 0x1949c; movzx eax, word ptr [rdi + 0x1c]; rol ax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x000000000001a2d3: jle 0x1a319; and al, 0xf8; ret; 
0x000000000001bc90: jle 0x1bcd6; and al, 0x10; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001bd48: jle 0x1bd4e; and al, 0x48; add esp, 0x28; ret; 
0x000000000001bde9: jle 0x1bdef; and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000001c04e: jle 0x1c094; and al, 0x10; add rsp, 0x48; ret; 
0x000000000001c0f1: jle 0x1c137; and al, 8; add rsp, 0x28; ret; 
0x000000000001c3ac: jle 0x1c3f2; and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x000000000001c450: jle 0x1c496; and al, 8; add rsp, 0x28; ret; 
0x000000000001cc33: jle 0x1cc79; and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x000000000001cf0d: jle 0x1cf53; and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x000000000001d056: jle 0x1d09c; and al, 0x10; add rsp, 0x38; ret; 
0x000000000001d117: jle 0x1d15d; and al, 0xf0; ret; 
0x000000000001d2d8: jle 0x1d29a; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x000000000001d359: jle 0x1d39f; and al, 0x10; add rsp, 0x28; ret; 
0x000000000001d499: jle 0x1d4df; and al, 8; add rsp, 0x28; ret; 
0x000000000001daef: jle 0x1db35; and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x000000000001df94: jle 0x1dfda; and al, 0x20; add rsp, 0x38; ret; 
0x000000000001e077: jle 0x1e0bd; and al, 8; add rsp, 0x28; ret; 
0x000000000001e4cb: jle 0x1e511; and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x0000000000023cf1: jle 0x23cf3; add byte ptr [rax], al; syscall; 
0x0000000000025693: jle 0x256a6; lea edx, [rax - 0x100]; lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002a547: jle 0x2a509; shr rax, 0x3f; ret; 
0x000000000002a550: jle 0x2a512; shr eax, 0x1f; ret; 
0x000000000002aeb0: jle 0x2aeb2; add al, ch; ret; 
0x000000000002aeb5: jle 0x2aeb7; add dl, dh; addps xmm0, xmmword ptr [rip + 0x6a118]; add rsp, 0x18; ret; 
0x000000000002b841: jle 0x2b804; and rax, rcx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000002b9ac: jle 0x2b96f; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x000000000002bfba: jle 0x2bf7d; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002e748: jle 0x2e70a; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000002ff0f: jle 0x2ff20; xchg dword ptr [rdx + rax + 0x280f0000], ebp; ret 0xff3; 
0x000000000003b294: jle 0x3b2a2; add dh, byte ptr [rbp + rbx + 0x48]; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x000000000003d170: jle 0x3d16f; dec dword ptr [rax - 0x77]; ret; 
0x0000000000043aaf: jle 0x43ab1; ret; 
0x0000000000045a8e: jle 0x45a85; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000047bfd: jle 0x47bdd; ret; 
0x000000000004b953: jle 0x4b958; lea eax, [rsi + 1]; mov dword ptr [rdx + 0x18], eax; sub eax, r10d; ret; 
0x0000000000058bb8: jle 0x58bc4; push rax; call 0x5a45b; xor eax, eax; pop rdx; ret; 
0x00000000000599eb: jle 0x599ef; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000005a632: jle 0x5a639; add eax, 0x15180; ret; 
0x000000000005ee1c: jle 0x5ee21; add bl, ch; add ecx, dword ptr [rax - 1]; ret; 
0x000000000001ef9e: jmp qword ptr [rax + 0x7f]; 
0x0000000000021432: jmp qword ptr [rax]; 
0x000000000002875e: jmp qword ptr [rbx + 0x40]; 
0x0000000000030fc4: jmp qword ptr [rcx]; 
0x000000000004d074: jmp qword ptr [rdi + 0x18]; 
0x000000000004bcf7: jmp qword ptr [rdi + 0x38]; 
0x000000000004ad94: jmp qword ptr [rdi - 3]; 
0x00000000000216c0: jmp qword ptr [rdi]; 
0x00000000000154d5: jmp qword ptr [rsi + 0x2e]; 
0x0000000000037137: jmp qword ptr [rsi + 0x40]; 
0x0000000000027e61: jmp qword ptr [rsi + 0x41]; 
0x00000000000404bd: jmp qword ptr [rsi + 0x42]; 
0x000000000002a845: jmp qword ptr [rsi + 0x48]; 
0x000000000003353d: jmp qword ptr [rsi + 0x77]; 
0x00000000000154b6: jmp qword ptr [rsi + 0xf]; 
0x0000000000017cfd: jmp qword ptr [rsi - 0x70]; 
0x0000000000025af1: jmp qword ptr [rsi - 0x75]; 
0x00000000000404af: jmp qword ptr [rsi - 0x77]; 
0x000000000001b381: jmp rax; 
0x0000000000016a1d: jmp rcx; 
0x0000000000022787: jmp rdi; 
0x000000000005144e: jmp rdx; 
0x00000000000178d9: jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x000000000001790b: jne 0x178e8; xor eax, eax; pop rbx; ret; 
0x0000000000017957: jne 0x17940; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000017f52: jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000017fa0: jne 0x17f90; ret; 
0x00000000000181c9: jne 0x181b0; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018307: jne 0x182f8; mov rax, r12; pop r12; ret; 
0x000000000001834b: jne 0x18338; xor eax, eax; sub eax, ecx; ret; 
0x0000000000018347: jne 0x18358; test dl, dl; jne 0x18338; xor eax, eax; sub eax, ecx; ret; 
0x00000000000183b3: jne 0x1843f; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000000186ab: jne 0x186a0; sub rax, rdi; ret; 
0x0000000000018707: jne 0x18700; sub rax, rdi; ret; 
0x0000000000018895: jne 0x18868; sub eax, edi; ret; 
0x0000000000018ac3: jne 0x18af1; add rsp, 0x38; ret; 
0x0000000000018ebd: jne 0x18ec8; pop rbp; ret; 
0x0000000000018f5c: jne 0x18f40; nop; xor eax, eax; pop rbp; ret; 
0x0000000000018f99: jne 0x18f80; pop rbp; ret; 
0x000000000001956c: jne 0x19560; xor eax, eax; pop rbx; ret; 
0x00000000000195c0: jne 0x195a8; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x00000000000195f4: jne 0x195e8; ret; 
0x00000000000196f9: jne 0x196f0; sub rax, rdi; sar rax, 2; ret; 
0x0000000000019845: jne 0x19820; sub eax, r8d; ret; 
0x0000000000019885: jne 0x19870; xor esi, esi; call 0x1a050; mov rax, r12; pop r12; ret; 
0x0000000000019dec: jne 0x19de0; mov rax, rdi; ret; 
0x0000000000019f95: jne 0x19f88; ret; 
0x000000000001b235: jne 0x1b241; mov esi, 1; mov rax, r9; syscall; 
0x000000000001b26a: jne 0x1b276; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b2a2: jne 0x1b2ae; mov esi, 1; mov rax, r8; syscall; 
0x000000000001b896: jne 0x1b8eb; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001db7e: jne 0x1dbc6; add byte ptr [rax], al; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001e7ff: jne 0x1e7f2; ret; 
0x000000000001fbec: jne 0x1fbbc; pop rbx; pop rbp; pop r12; ret; 
0x00000000000203fa: jne 0x203ca; pop rbx; pop rbp; pop r12; ret; 
0x0000000000020d42: jne 0x20ced; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021b97: jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000220d5: jne 0x220bb; mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x0000000000022982: jne 0x22996; mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x00000000000229d5: jne 0x22a09; xor r9d, r9d; mov rax, r8; mov rdx, r9; syscall; 
0x00000000000229bd: jne 0x22a21; mov r8d, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000022fba: jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x0000000000023a89: jne 0x23a8e; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x0000000000023d28: jne 0x23d36; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000023de6: jne 0x23df7; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000023de2: jne 0x23df7; test edx, edx; jne 0x23df7; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000023e45: jne 0x23e50; mov eax, 0xe8; syscall; 
0x0000000000023e40: jne 0x23e50; test r8, r8; jne 0x23e50; mov eax, 0xe8; syscall; 
0x0000000000023e78: jne 0x23e83; mov eax, 0x11c; syscall; 
0x0000000000023e74: jne 0x23e83; test esi, esi; jne 0x23e83; mov eax, 0x11c; syscall; 
0x0000000000023fa2: jne 0x23fae; mov eax, 0xfd; syscall; 
0x0000000000023f9e: jne 0x23fae; test edx, edx; jne 0x23fae; mov eax, 0xfd; syscall; 
0x000000000002454f: jne 0x2456e; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x00000000000266a6: jne 0x266b2; push rax; call 0x15060; xor eax, eax; pop rdx; ret; 
0x00000000000266c0: jne 0x266d9; cmp qword ptr [rsi], 0; lea rdx, [rip + 0x6ff30]; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x00000000000274f3: jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000027568: jne 0x27538; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000275b6: jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000028163: jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x0000000000029479: jne 0x29486; xor r8d, r8d; shl rax, 0xc; sete r8b; mov eax, r8d; ret; 
0x00000000000294b7: jne 0x294c3; xor r8d, r8d; shl eax, 9; sete r8b; mov eax, r8d; ret; 
0x0000000000029606: jne 0x295f5; ret; 
0x0000000000029624: jne 0x29617; fstp st(1); ret; 
0x000000000002a5bc: jne 0x2a5d3; mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002e347: jne 0x2e356; mulsd xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000002e369: jne 0x2e378; subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e1dd: jne 0x2e41d; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002e2a7: jne 0x2e425; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002e597: jne 0x2e5a6; mulss xmm1, xmm0; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x000000000002e5b9: jne 0x2e5c8; subss xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000002e451: jne 0x2e65e; comiss xmm0, xmmword ptr [rip + 0x6774e]; jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002e518: jne 0x2e666; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002f060: jne 0x2f06b; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002f1ac: jne 0x2f1b7; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000002f8ea: jne 0x2f8ff; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000033369: jne 0x33376; xorps xmm2, xmm2; movaps xmm0, xmm1; divsd xmm0, xmm2; ret; 
0x0000000000033392: jne 0x334f6; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003351d: jne 0x3352a; xorps xmm2, xmm2; movaps xmm0, xmm1; divss xmm0, xmm2; ret; 
0x00000000000356bf: jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035870: jne 0x3587b; mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000035a0b: jne 0x35a10; movaps xmm0, xmm1; ret; 
0x00000000000359fe: jne 0x35a10; movsd xmm0, qword ptr [rip + 0x5f6a0]; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x0000000000035a5a: jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000035a4e: jne 0x35a5f; movss xmm0, dword ptr [rip + 0x60400]; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000037fe2: jne 0x37fd3; ret; 
0x00000000000380bd: jne 0x380ae; ret; 
0x00000000000381e7: jne 0x381d8; mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x0000000000039143: jne 0x39179; lea rsi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x0000000000039c82: jne 0x39c8a; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000003b4e6: jne 0x3b4eb; inc rdi; mov eax, 0xf1; syscall; 
0x000000000003b51d: jne 0x3b524; movzx eax, dil; ret; 
0x000000000003b560: jne 0x3b56c; test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x000000000003b564: jne 0x3b5b4; mov eax, 1; ret; 
0x000000000003c1c9: jne 0x3c1da; lea edx, [rdi - 0xdf80]; cmp edx, 0x7f; ja 0x3c1da; movzx eax, dil; ret; 
0x000000000003d8e8: jne 0x3d8eb; ret; 
0x000000000003d8fa: jne 0x3d8ec; pop rbx; ret; 
0x000000000003f1c3: jne 0x3f1cc; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003f4d8: jne 0x3f4c7; xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x00000000000407ff: jne 0x407e5; mov rax, r12; pop rdx; pop rbx; pop r12; ret; 
0x000000000004081e: jne 0x40811; pop rbx; ret; 
0x0000000000041325: jne 0x4132a; or eax, 0xffffffff; add rsp, 0x28; ret; 
0x0000000000043d96: jne 0x43dee; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x00000000000446b1: jne 0x446b7; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000004484d: jne 0x44750; movsxd rdi, r13d; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000044754: jne 0x44776; movsxd rdi, r13d; mov eax, 0x20; syscall; 
0x00000000000446e5: jne 0x448bb; mov eax, 0x66; syscall; 
0x0000000000044ca6: jne 0x44cab; xor eax, eax; ret; 
0x0000000000044cba: jne 0x44cac; xor eax, eax; pop rbx; ret; 
0x0000000000044d39: jne 0x44d3f; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000045a50: jne 0x45a53; ret; 
0x0000000000045a62: jne 0x45a54; pop rbx; ret; 
0x0000000000045d8f: jne 0x45dbc; mov esi, dword ptr [rax]; mov rdi, r13; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000004b2ce: jne 0x4b2e9; xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004b644: jne 0x4b656; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004c960: jne 0x4c979; mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000004cad3: jne 0x4cb48; movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x000000000004cb5d: jne 0x4cb6e; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004cae8: jne 0x4cb81; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000004d041: jne 0x4d050; mov eax, 0xeb; mov rdi, r9; mov rsi, r8; syscall; 
0x000000000004d18f: jne 0x4d1b4; movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004d3df: jne 0x4d3a9; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004d3b5: jne 0x4d3bf; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000004d439: jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d439: jne 0x4d443; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000004d785: jne 0x4d7aa; movsxd rdi, dword ptr [rdi + 0x78]; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004da8c: jne 0x4da98; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004daa1: jne 0x4daad; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004de08: jne 0x4de12; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004e764: jne 0x4e770; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004eb66: jne 0x4eb70; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f7c8: jne 0x4f7d2; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f8b0: jne 0x4f8ba; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005041b: jne 0x5043b; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x0000000000050720: jne 0x5072a; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000050846: jne 0x50850; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000509c9: jne 0x509d2; mov eax, 0x54; syscall; 
0x0000000000051084: jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000055514: jne 0x55518; neg eax; ret; 
0x000000000005555f: jne 0x55564; neg rax; ret; 
0x00000000000555ab: jne 0x555b0; neg rax; ret; 
0x0000000000056413: jne 0x56410; ret; 
0x00000000000564dc: jne 0x564e9; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x00000000000569cf: jne 0x56992; pop rbx; ret; 
0x00000000000569ac: jne 0x569b5; xor esi, esi; mov rax, r9; syscall; 
0x0000000000056a03: jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000056a03: jne 0x56a0d; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000056c49: jne 0x56c33; xor esi, esi; mov rax, r12; syscall; 
0x0000000000056c38: jne 0x56c54; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x0000000000056cfa: jne 0x56ce5; ret; 
0x0000000000056f81: jne 0x56f89; mov eax, 0x5f; ret; 
0x0000000000056fee: jne 0x56ff9; call 0x5a45b; xor eax, eax; pop rbx; ret; 
0x00000000000570f5: jne 0x570fc; mov rax, r8; syscall; 
0x000000000005712b: jne 0x57132; mov rax, r8; syscall; 
0x0000000000057191: jne 0x571bb; mov rax, r8; syscall; 
0x00000000000571fa: jne 0x57201; mov rax, r8; syscall; 
0x0000000000057278: jne 0x57282; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000572d7: jne 0x572bd; xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x00000000000572c3: jne 0x572e5; xor r10d, r10d; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x0000000000057331: jne 0x5733b; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000573a5: jne 0x573af; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005736b: jne 0x573c2; mov esi, 1; mov rax, r9; syscall; 
0x00000000000573f4: jne 0x573fe; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005750d: jne 0x57516; mov rax, r12; syscall; 
0x00000000000576e2: jne 0x576e9; mov rax, r8; syscall; 
0x00000000000576e2: jne 0x576e9; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005772d: jne 0x57734; mov rax, r8; syscall; 
0x00000000000577bc: jne 0x577c3; mov rax, r8; syscall; 
0x00000000000577bc: jne 0x577c3; mov rax, r8; syscall; xor eax, eax; ret; 
0x00000000000577cd: jne 0x577f2; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x00000000000577e8: jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000577e8: jne 0x577f2; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000057836: jne 0x57815; pop rax; pop rbx; pop rbp; ret; 
0x0000000000057ab6: jne 0x57acc; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057b75: jne 0x57b8c; mov esi, 3; mov rax, rbx; syscall; 
0x0000000000057b4e: jne 0x57b8c; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dd8: jne 0x57ddf; mov rax, r8; syscall; 
0x0000000000057dd8: jne 0x57ddf; mov rax, r8; syscall; ret; 
0x0000000000057e27: jne 0x57e2e; mov rax, r8; syscall; 
0x0000000000057e27: jne 0x57e2e; mov rax, r8; syscall; pop rax; ret; 
0x0000000000057f7c: jne 0x57f20; mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x0000000000058028: jne 0x58037; mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x0000000000058525: jne 0x5854a; mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000058540: jne 0x5854a; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005874d: jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x0000000000058ba3: jne 0x58bb1; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000058bff: jne 0x58bec; ret; 
0x000000000005914e: jne 0x59158; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000592d5: jne 0x592e1; mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d5: jne 0x592e1; mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000592ba: jne 0x592e1; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000059381: jne 0x593a8; mov esi, 1; mov rax, r8; syscall; 
0x000000000005951b: jne 0x594f9; xor eax, eax; ret; 
0x00000000000595a3: jne 0x595af; mov esi, 1; mov rax, r8; syscall; 
0x00000000000595a3: jne 0x595af; mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000059a1d: jne 0x59a13; ret; 
0x0000000000059fa8: jne 0x59fb2; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000059fa8: jne 0x59fb2; mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000005a0b9: jne 0x5a094; xor eax, eax; ret; 
0x000000000005a4c2: jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; 
0x000000000005a4c2: jne 0x5a4ce; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000005a97d: jne 0x5a98a; inc rdx; mov qword ptr [rdi], rdx; call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x000000000005ad17: jne 0x5acf2; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000005b8c8: jne 0x5b8e7; mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000005d4aa: jne 0x5d4c1; mov eax, 0x10d; mov rdi, r14; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000005d5c6: jne 0x5d5a5; movsxd rdi, dword ptr [rsp + 0x20]; mov eax, 3; syscall; 
0x000000000005dc9a: jne 0x5dca4; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000005de79: jne 0x5de98; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000005e404: jne 0x5e3f3; sub eax, edx; ret; 
0x000000000005e3fd: jne 0x5e406; inc rcx; test al, al; jne 0x5e3f3; sub eax, edx; ret; 
0x0000000000019186: jno 0x19115; ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x000000000001b422: jno 0x1b424; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001e6cb: jno 0x1e6d4; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000033d11: jno 0x33df9; or byte ptr [rdi], 0x28; shl byte ptr [rsi + 0xf], 1; outsb dx, byte ptr [rsi]; ret 0x2aeb; 
0x000000000004b9db: jno 0x4b9f5; mov qword ptr [r9], rax; mov eax, dword ptr [rax + 0x18]; pop rbx; sub eax, r10d; ret; 
0x000000000005d426: jno 0x5d428; add byte ptr [rax], al; syscall; 
0x000000000005de2b: jno 0x5de2d; add byte ptr [rax], al; push rax; mov eax, 0x70; syscall; 
0x0000000000018311: jnp 0x18316; add byte ptr [rax], al; add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000001b220: jnp 0x1b24a; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000024506: jnp 0x24508; add byte ptr [rax], al; syscall; 
0x000000000002454c: jnp 0x2455e; add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000003ecde: jnp 0x3ece5; add byte ptr [rcx], bh; ret; 
0x0000000000041a92: jnp 0x41a98; mov rax, r8; syscall; 
0x0000000000041ab9: jnp 0x41abf; mov rax, r8; syscall; 
0x0000000000048250: jnp 0x48254; jnp 0x482c8; or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000048252: jnp 0x482c8; or ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000000488d9: jnp 0x488ea; test esp, esi; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x000000000004d6b0: jnp 0x4d72a; movsxd rdx, r15d; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000005769a: jnp 0x576a4; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x00000000000580c0: jnp 0x580ca; call qword ptr [rbx]; 
0x00000000000584fa: jnp 0x5852c; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000058737: jnp 0x58769; test edi, edi; je 0x5875e; mov eax, 0x8f; mov rsi, r14; syscall; 
0x0000000000058751: jnp 0x58783; mov eax, 0x91; syscall; 
0x000000000005de76: jnp 0x5de88; add byte ptr [rbp + 0x1d], dh; xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x0000000000057cf9: jnp 0xebfe36; add byte ptr [rax], al; or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002ab48: jns 0x2ac81; movsd xmm0, qword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002ace1: jns 0x2ae10; movss xmm0, dword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000002b336: jns 0x2b33f; xorps xmm0, xmmword ptr [rip + 0x68431]; add rsp, 0x10; pop rbx; ret; 
0x000000000002d9ff: jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000002de43: jns 0x2de51; addsd xmm1, qword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000002fd94: jns 0x2fd9e; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000030314: jns 0x3031e; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003088a: jns 0x30894; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000030e1b: jns 0x30e25; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003185c: jns 0x3186a; test eax, eax; je 0x3186a; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003303c: jns 0x3304a; subsd xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000033208: jns 0x33216; subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000035ae9: jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b71: jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x0000000000036f9f: jns 0x36fa3; fchs; add rsp, 0x10; pop rbx; ret; 
0x0000000000038103: jns 0x38107; neg eax; mov dword ptr [rdi], eax; ret; 
0x000000000003b399: jns 0x3b3b3; mov rdi, qword ptr [rsp + 8]; call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003eaa1: jns 0x3eab3; cmp eax, 0xbf; mov eax, edi; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000004710b: jns 0x47125; add byte ptr [rdi], cl; lahf; ret 0x48d; 
0x00000000000493b3: jns 0x493bd; add byte ptr [rax - 0x75], cl; add dword ptr [rcx + rcx + 0x31], esi; rol byte ptr [rbx + 0xf001078], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000056998: jns 0x569bc; movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000057776: jns 0x5777f; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000057d37: jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000005cec6: jns 0x5ced7; add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005d961: jns 0x5d963; add byte ptr [rax], al; syscall; 
0x000000000005d972: jns 0x5d974; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000005d972: jns 0x5d974; add byte ptr [rax], al; xor edi, edi; syscall; ret; 
0x0000000000024b30: jo 0x24b46; call 0x3aff9; xor eax, eax; pop rdx; ret; 
0x00000000000279ed: jo 0x279f7; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000027f57: jo 0x27f61; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x000000000002e1e8: jo 0x2e1f0; add byte ptr [rsi + 0x51], dh; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000004469c: jo 0x4469e; add byte ptr [rax], al; syscall; 
0x00000000000447af: jo 0x447c5; movsxd rdi, eax; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x0000000000044807: jo 0x4481d; cmp esi, eax; je 0x44846; movsxd rdi, eax; mov rax, r12; syscall; 
0x000000000005146e: jo 0x51478; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x0000000000051582: jo 0x5158c; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005159b: jo 0x515a5; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005382f: jo 0x53839; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x0000000000053943: jo 0x5394d; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005395c: jo 0x53966; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005d437: jo 0x5d441; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005de31: jo 0x5de33; add byte ptr [rax], al; syscall; 
0x000000000005f16d: jo 0x5f1b7; add esp, 0x110; pop rbx; ret; 
0x0000000000021e98: jp 0x21ea1; add byte ptr [rcx], al; mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x0000000000024120: jp 0x24152; mov rax, r8; syscall; 
0x000000000002451a: jp 0x2451c; add byte ptr [rax], al; syscall; 
0x0000000000033367: jp 0x33376; jne 0x33376; xorps xmm2, xmm2; movaps xmm0, xmm1; divsd xmm0, xmm2; ret; 
0x000000000003351b: jp 0x3352a; jne 0x3352a; xorps xmm2, xmm2; movaps xmm0, xmm1; divss xmm0, xmm2; ret; 
0x00000000000522bc: jp 0x522bf; and eax, 0x83481675; ret 0x4802; 
0x0000000000058f60: jp 0x58f66; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000005970b: jp 0x5974d; xor eax, eax; ret; 
0x000000000005a27c: jp 0x5a2ae; mov eax, 0xc8; syscall; 
0x00000000000220da: js 0x220e3; add byte ptr [rcx], al; add rsp, 0x150; pop rbx; ret; 
0x0000000000022691: js 0x226c3; mov eax, 0xc8; syscall; 
0x00000000000229e9: js 0x229f5; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000022a0e: js 0x22a48; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000002c25b: js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e2a9: js 0x2e2ac; add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002e7e1: js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000037a00: js 0x37a07; fscale; fstp st(1); ret; 
0x00000000000390ca: js 0x390d6; mov rdx, rax; mov eax, 0x14; sub eax, edx; pop rdx; ret; 
0x00000000000390da: js 0x390dc; add byte ptr [rax], al; syscall; 
0x000000000003b37f: js 0x3b339; hlt; add byte ptr [rax], al; add byte ptr [rcx + 0x80249c], cl; add byte ptr [rax], al; syscall; 
0x000000000003e48a: js 0x3e4e4; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x000000000003ea80: js 0x3ea8a; mov eax, edi; and eax, 0xffffff; ret; 
0x00000000000442b4: js 0x442f5; std; dec dword ptr [rax - 0x77]; ret 0x8949; 
0x00000000000447e9: js 0x4480f; mov rax, r15; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000044835: js 0x4484b; mov eax, 0x51; syscall; 
0x0000000000044766: js 0x448bb; mov rax, r9; syscall; 
0x00000000000493be: js 0x493d0; add byte ptr [rdi], cl; xchg eax, ebp; ret 0x5389; 
0x000000000004b66d: js 0x4b677; ret; 
0x000000000004bed0: js 0x4bf02; mov eax, 0xc8; syscall; 
0x000000000004d2eb: js 0x4d34b; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004d6b1: js 0x4d6fc; movsxd rdx, edi; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000004d78a: js 0x4d7d4; mov edx, esp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004df54: js 0x4df5c; mov qword ptr [rbx], rax; xor r8d, r8d; mov eax, r8d; pop rbx; ret; 
0x000000000004efbd: js 0x4ef77; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000004efd9: js 0x4ef93; add byte ptr [rax], al; add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x0000000000051064: js 0x51092; mov eax, 0x57; mov rdi, r12; syscall; 
0x000000000005749c: js 0x574ce; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000005749c: js 0x574ce; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x0000000000057e78: js 0x57e82; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000580ea: js 0x58134; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x00000000000580f1: js 0x5816b; ret; 
0x0000000000059747: js 0x59752; mov edx, 0xb; cmovne eax, edx; ret; 
0x000000000005d451: js 0x5d467; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005eb4d: js 0x5eb52; add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rdi; jmp rax; 
0x000000000005ef38: js 0x5efa2; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x00000000000217dd: lahf; mov eax, edi; cmp edx, 0x19; ja 0x217e8; and eax, 0x5f; ret; 
0x0000000000022cfb: lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000004710f: lahf; ret 0x48d; 
0x000000000004f4a2: lahf; ret 0x548d; 
0x000000000005d23b: lahf; sti; lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x000000000006052b: lcall [rax + 0x5b]; pop rbp; pop r12; pop r13; ret; 
0x0000000000050a25: lcall [rax + 0x5b]; pop rbp; ret; 
0x0000000000052073: lcall [rax + rax]; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000004b295: lcall [rbp + 0x41]; pop rsp; ret; 
0x000000000003aebb: lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x00000000000257cc: lcall [rbx + 0x5d]; pop r12; ret; 
0x0000000000037e75: lcall [rbx + 0xf]; sub dl, al; pop rbp; pop r12; ret; 
0x000000000004b1ab: lcall [rbx - 0x3d]; push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000002141d: lcall [rcx]; setbe al; ret; 
0x0000000000049e5f: lcall [rdi + 0x74]; cmove ecx, dword ptr [rcx - 0x1724ce01]; xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x0000000000043a00: lcall [rdx + 0x48]; shr eax, 0x10; cdqe; ret; 
0x00000000000439e1: lcall [rdx + 0x48]; shr eax, 0x11; ret; 
0x0000000000021755: lcall [rdx + 0x48]; test eax, eax; setne al; movzx eax, al; ret; 
0x000000000005b93c: lcall [rdx + 0x59]; neg eax; pop rsi; ret; 
0x0000000000057562: lcall [rdx + 0x5b]; pop r12; ret; 
0x000000000004053e: lcall [rdx + 0x5b]; pop rbp; pop r12; pop r13; ret; 
0x000000000003b01b: lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005a414: lcall [rdx - 0x3d]; mov eax, 0x18; syscall; 
0x000000000005cf12: lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000005d99d: lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005d96e: lcall [rdx - 0x3d]; mov eax, 0x79; xor edi, edi; syscall; 
0x000000000005df7e: lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x0000000000024513: lcall [rdx - 0x3d]; mov edi, edi; push rax; mov eax, 0x7a; syscall; 
0x0000000000023ee7: lcall [rdx - 0x3d]; mov edi, edi; push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x00000000000241f5: lcall [rdx - 0x3d]; mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000005d2ca: lcall [rdx - 0x3d]; mov esi, esi; push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000024868: lcall [rdx - 0x3d]; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000000243aa: lcall [rdx - 0x3d]; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000024209: lcall [rdx - 0x3d]; mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x00000000000248e9: lcall [rdx - 0x3d]; mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022f11: lcall [rdx - 0x3d]; mov r10, rcx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000004b169: lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000024482: lcall [rdx - 0x3d]; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000024828: lcall [rdx - 0x3d]; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x0000000000022f29: lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x000000000005da54: lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x00000000000247f1: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x00000000000247dc: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x000000000002476a: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x0000000000022efc: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x000000000004b222: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x000000000004b327: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000003adea: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x0000000000023ffd: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x0000000000024940: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x000000000004cd1e: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000024752: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov r10d, ecx; mov eax, 0x115; syscall; 
0x000000000005e1af: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000024262: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000024012: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x00000000000245dd: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x000000000004bd83: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000022dda: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000023f17: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000023fd0: lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000023fe8: lcall [rdx - 0x3d]; movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x0000000000024791: lcall [rdx - 0x3d]; movsxd rsi, esi; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x000000000005df69: lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x0000000000024232: lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000004b35a: lcall [rdx - 0x3d]; push rax; mov eax, 0x18; syscall; 
0x000000000003adc6: lcall [rdx - 0x3d]; push rax; mov eax, 0x1b; syscall; 
0x0000000000022f56: lcall [rdx - 0x3d]; push rax; mov eax, 0x43; syscall; 
0x00000000000509d9: lcall [rdx - 0x3d]; push rax; mov eax, 0x52; syscall; 
0x000000000005dd85: lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x000000000005da24: lcall [rdx - 0x3d]; push rax; mov eax, 0x56; syscall; 
0x000000000002477f: lcall [rdx - 0x3d]; push rax; mov eax, 0x63; syscall; 
0x00000000000390e7: lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x0000000000023cfe: lcall [rdx - 0x3d]; push rax; mov eax, 0x7d; syscall; 
0x0000000000023cec: lcall [rdx - 0x3d]; push rax; mov eax, 0x7e; syscall; 
0x000000000002427a: lcall [rdx - 0x3d]; push rax; mov eax, 0x87; syscall; 
0x000000000003add8: lcall [rdx - 0x3d]; push rax; mov eax, 0x95; syscall; 
0x000000000003afe4: lcall [rdx - 0x3d]; push rax; mov eax, 0x98; syscall; 
0x000000000002428c: lcall [rdx - 0x3d]; push rax; mov eax, 0x9b; syscall; 
0x0000000000023d10: lcall [rdx - 0x3d]; push rax; mov eax, 0xa1; syscall; 
0x000000000005d23d: lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x0000000000024740: lcall [rdx - 0x3d]; push rax; mov eax, 0xa8; syscall; 
0x00000000000241e3: lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x000000000002491c: lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x000000000002492e: lcall [rdx - 0x3d]; push rax; mov eax, 0xc6; syscall; 
0x000000000002421e: lcall [rdx - 0x3d]; xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000005a424: lcall [rdx - 0x7b]; ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret; 
0x0000000000033a61: lcall [rdx - 0xe]; cvtpi2ps xmm1, mm0; movaps xmm0, xmm1; ret; 
0x0000000000037443: lcall [rdx - 0xe]; cvtps2pd xmm0, xmm0; ret; 
0x0000000000022d28: ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000022cc0: ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000022d41: ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000022d00: ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000056104: lea eax, [rax + 1]; mov qword ptr [rdi + 8], rax; mov al, byte ptr [r8]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x000000000003f227: lea eax, [rax + rax*8 + 5]; ret; 
0x00000000000586da: lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003a187: lea eax, [rax]; add byte ptr [rax], al; syscall; 
0x00000000000198ec: lea eax, [rbx + rax*4]; pop rbx; mov ecx, dword ptr [rax]; test ecx, ecx; cmove rax, rdx; ret; 
0x00000000000194ee: lea eax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000194be: lea eax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000019586: lea eax, [rbx + rax*4]; pop rbx; ret; 
0x00000000000178dc: lea eax, [rcx + 1]; pop rbx; ret; 
0x00000000000215ef: lea eax, [rcx]; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000038274: lea eax, [rdi + 1]; ret; 
0x000000000001efa2: lea eax, [rdi - 0x35]; and eax, 0x3f; ret; 
0x000000000001ef9a: lea eax, [rdi - 0x3b]; cmp edi, 0x60; jg 0x1efa5; lea eax, [rdi - 0x35]; and eax, 0x3f; ret; 
0x0000000000043a15: lea eax, [rdi - 1]; mov qword ptr [rip + 0x584b9], rax; ret; 
0x00000000000266fe: lea eax, [rdx + 0x10]; ret; 
0x000000000005e3df: lea eax, [rip + 0x22db]; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000005748c: lea eax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000001e5dc: lea eax, [rip + 0x43a1e]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004fcbf: lea eax, [rip + 0x4c223]; pop rdx; ret; 
0x0000000000041330: lea eax, [rip + 0x58c8a]; ret; 
0x00000000000407cf: lea eax, [rip + 0x5b4fb]; ret; 
0x000000000002569c: lea eax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000274f6: lea eax, [rip + 0x6f13a]; ret; 
0x0000000000026f3f: lea eax, [rip + 0x6fa83]; ret; 
0x00000000000266ce: lea eax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x0000000000026777: lea eax, [rip + 0x7024b]; ret; 
0x0000000000026a59: lea eax, [rip + 0x721a1]; ret; 
0x0000000000026a94: lea eax, [rip + 0x72fa6]; cmp rdi, rax; setne al; movzx eax, al; and eax, edx; ret; 
0x0000000000022fbd: lea eax, [rip + 0x73561]; ret; 
0x00000000000213e2: lea eax, [rip + 0x779b0]; ret; 
0x00000000000213ba: lea eax, [rip + 0x779d0]; ret; 
0x000000000004b955: lea eax, [rsi + 1]; mov dword ptr [rdx + 0x18], eax; sub eax, r10d; ret; 
0x00000000000392fa: lea eax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x000000000005dc96: lea eax, [rsp + 7]; jne 0x5dca4; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x00000000000220fb: lea ebp, [rdx + rax*8 + 8]; call 0x60684; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000022452: lea ecx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x00000000000507ab: lea ecx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000004ebc6: lea ecx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], r8b; ret; 
0x00000000000508df: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x48a5f], rcx; mov byte ptr [rdx], dil; ret; 
0x00000000000508a6: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x48a98], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000054857: lea ecx, [rip + 0x418bf]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005329b: lea ecx, [rip + 0x42d8f]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000052d42: lea ecx, [rip + 0x432d0]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004697e: lea ecx, [rip + 0x4f528]; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000025988: lea ecx, [rip + 0x6ff76]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001e6c8: lea ecx, [rip + 0x771ca]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000039890: lea ecx, [rsp + 0x30]; call rax; 
0x00000000000447e8: lea edi, [rax + 0x24]; mov rax, r15; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000058ef0: lea edi, [rax + 0x88]; syscall; 
0x000000000001b21f: lea edi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000058f5f: lea edi, [rdx + 4]; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000061a8c: lea edi, [rip + 0x35582]; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x000000000005eb4a: lea edi, [rip + 0x37898]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000053802: lea edi, [rip + 0x428ac]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000057e15: lea edi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc6: lea edi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000051441: lea edi, [rip + 0x44a81]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000050837: lea edi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f8a1: lea edi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x00000000000261fb: lea edi, [rip + 0x6f7a7]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023a2d: lea edi, [rip + 0x6febd]; call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x00000000000220b0: lea edi, [rip + 0x746fa]; mov esi, 0x8002; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000021ea9: lea edi, [rip + 0x7a141]; syscall; 
0x000000000001b293: lea edi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000005d586: lea edi, [rip - 0x1ae]; call 0x5a4f0; movsxd rdi, dword ptr [rsp + 0x24]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005ee1b: lea edi, [rsi + 3]; add bl, ch; add ecx, dword ptr [rax - 1]; ret; 
0x000000000005099d: lea edi, [rsp + 0xc]; call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x000000000004de4d: lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f92b: lea edx, [rax + 1]; mov qword ptr [rip + 0x498f3], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f900: lea edx, [rax + 1]; mov qword ptr [rip + 0x4991e], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000025695: lea edx, [rax - 0x100]; lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000005e7a7: lea edx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x0000000000019226: lea edx, [rcx - 0x30]; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x00000000000217c8: lea edx, [rdi - 0x41]; mov eax, edi; cmp edx, 0x19; ja 0x217d5; or eax, 0x20; ret; 
0x000000000003c1cb: lea edx, [rdi - 0xdf80]; cmp edx, 0x7f; ja 0x3c1da; movzx eax, dil; ret; 
0x0000000000053e08: lea edx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000052628: lea edx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000052642: lea edx, [rip + 0x439a8]; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000032a4d: lea edx, [rip + 0x633b9]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000003238a: lea edx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031caa: lea edx, [rip + 0x64040]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000026e37: lea edx, [rip + 0x6ebb7]; mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x00000000000266c7: lea edx, [rip + 0x6ff30]; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x00000000000215a1: lea edx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000059255: lea edx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000058502: lea edx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000005cca4: lea edx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x0000000000039cfc: lea edx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000022971: lea edx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000024b2f: lea esi, [rax + 0x14]; call 0x3aff9; xor eax, eax; pop rdx; ret; 
0x00000000000580a7: lea esi, [rbx + 0x18]; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000044cfb: lea esi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000044ce7: lea esi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000051596: lea esi, [rdx + 0x10]; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005157d: lea esi, [rdx + 8]; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000051469: lea esi, [rdx + 8]; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000004bd49: lea esi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd49: lea esi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004bd2f: lea esi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2f: lea esi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x00000000000439f6: lea esi, [rip + 0x55a2a]; call 0x43946; pop rdx; shr rax, 0x10; cdqe; ret; 
0x00000000000439d7: lea esi, [rip + 0x55a49]; call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000005933e: lea esi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000005642e: lea esi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000050fba: lea esi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x00000000000448d5: lea esi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x0000000000059953: lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000005d454: lea esi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005d5b5: lea esi, [rsp + 4]; xor eax, eax; mov edx, 4; syscall; 
0x000000000004d8a6: lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d49c: lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003bcf2: lea esi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x000000000004e90f: lea esi, [rsp + 8]; call rax; 
0x0000000000039146: lea esi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000005b7eb: lea esi, [rsp + 8]; mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x000000000005a596: lea esi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000004c031: lea esi, [rsp + 8]; movsxd rdi, r12d; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000004dbcf: lea esi, [rsp + rdi*8 - 1]; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000005d84c: lea esp, [rbp - 0x10]; mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x000000000003824f: lea esp, [rip + 0x5ec0c]; mov rax, r12; pop r12; ret; 
0x000000000003824e: lea r12, [rip + 0x5ec0c]; mov rax, r12; pop r12; ret; 
0x00000000000220fa: lea r13, [rdx + rax*8 + 8]; call 0x60684; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000005dc95: lea r8, [rsp + 7]; jne 0x5dca4; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000056103: lea rax, [r8 + 1]; mov qword ptr [rdi + 8], rax; mov al, byte ptr [r8]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x00000000000198eb: lea rax, [rbx + rax*4]; pop rbx; mov ecx, dword ptr [rax]; test ecx, ecx; cmove rax, rdx; ret; 
0x00000000000194ed: lea rax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000194bd: lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x0000000000019585: lea rax, [rbx + rax*4]; pop rbx; ret; 
0x00000000000178db: lea rax, [rcx + 1]; pop rbx; ret; 
0x0000000000056436: lea rax, [rdi + 1]; ret; 
0x00000000000266fd: lea rax, [rdx + 0x10]; ret; 
0x000000000005e3de: lea rax, [rip + 0x22db]; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000005748b: lea rax, [rip + 0x30c1]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000001e5db: lea rax, [rip + 0x43a1e]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004fcbe: lea rax, [rip + 0x4c223]; pop rdx; ret; 
0x000000000004132f: lea rax, [rip + 0x58c8a]; ret; 
0x00000000000407ce: lea rax, [rip + 0x5b4fb]; ret; 
0x000000000002569b: lea rax, [rip + 0x662be]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x00000000000274f5: lea rax, [rip + 0x6f13a]; ret; 
0x0000000000026f3e: lea rax, [rip + 0x6fa83]; ret; 
0x00000000000266cd: lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x0000000000026776: lea rax, [rip + 0x7024b]; ret; 
0x0000000000026a58: lea rax, [rip + 0x721a1]; ret; 
0x0000000000026a93: lea rax, [rip + 0x72fa6]; cmp rdi, rax; setne al; movzx eax, al; and eax, edx; ret; 
0x0000000000022fbc: lea rax, [rip + 0x73561]; ret; 
0x00000000000213e1: lea rax, [rip + 0x779b0]; ret; 
0x00000000000213b9: lea rax, [rip + 0x779d0]; ret; 
0x00000000000392f9: lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000022451: lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x00000000000507aa: lea rcx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000004ebc5: lea rcx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], r8b; ret; 
0x00000000000508de: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x48a5f], rcx; mov byte ptr [rdx], dil; ret; 
0x00000000000508a5: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x48a98], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000054856: lea rcx, [rip + 0x418bf]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005329a: lea rcx, [rip + 0x42d8f]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000052d41: lea rcx, [rip + 0x432d0]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000004697d: lea rcx, [rip + 0x4f528]; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000025987: lea rcx, [rip + 0x6ff76]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001e6c7: lea rcx, [rip + 0x771ca]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000003988f: lea rcx, [rsp + 0x30]; call rax; 
0x00000000000447e7: lea rdi, [r8 + 0x24]; mov rax, r15; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000058eef: lea rdi, [r8 + 0x88]; syscall; 
0x000000000001b21e: lea rdi, [rbx + 0x28]; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000058f5e: lea rdi, [rdx + 4]; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000061a8b: lea rdi, [rip + 0x35582]; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x000000000005eb49: lea rdi, [rip + 0x37898]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000053801: lea rdi, [rip + 0x428ac]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000057e14: lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc5: lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000051440: lea rdi, [rip + 0x44a81]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000050836: lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f8a0: lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x00000000000261fa: lea rdi, [rip + 0x6f7a7]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000023a2c: lea rdi, [rip + 0x6febd]; call 0x4e52f; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x00000000000220af: lea rdi, [rip + 0x746fa]; mov esi, 0x8002; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000021ea8: lea rdi, [rip + 0x7a141]; syscall; 
0x000000000001b292: lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000005d585: lea rdi, [rip - 0x1ae]; call 0x5a4f0; movsxd rdi, dword ptr [rsp + 0x24]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005099c: lea rdi, [rsp + 0xc]; call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x000000000004de4c: lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f92a: lea rdx, [rax + 1]; mov qword ptr [rip + 0x498f3], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f8ff: lea rdx, [rax + 1]; mov qword ptr [rip + 0x4991e], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005e7a6: lea rdx, [rcx + rdx*8 + 8]; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x0000000000053e07: lea rdx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000052627: lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000052641: lea rdx, [rip + 0x439a8]; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000032a4c: lea rdx, [rip + 0x633b9]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000032389: lea rdx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000031ca9: lea rdx, [rip + 0x64040]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000026e36: lea rdx, [rip + 0x6ebb7]; mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x00000000000266c6: lea rdx, [rip + 0x6ff30]; lea rax, [rip + 0x6ff36]; cmove rax, rdx; ret; 
0x00000000000215a0: lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000059254: lea rdx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000058501: lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000005cca3: lea rdx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x0000000000039cfb: lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000022970: lea rdx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x00000000000580a6: lea rsi, [rbx + 0x18]; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000044cfa: lea rsi, [rdi + 0x88]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000044ce6: lea rsi, [rdi + 8]; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000051595: lea rsi, [rdx + 0x10]; mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005157c: lea rsi, [rdx + 8]; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000051468: lea rsi, [rdx + 8]; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000004bd48: lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd48: lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004bd2e: lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2e: lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x00000000000439f5: lea rsi, [rip + 0x55a2a]; call 0x43946; pop rdx; shr rax, 0x10; cdqe; ret; 
0x00000000000439d6: lea rsi, [rip + 0x55a49]; call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000005933d: lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000005642d: lea rsi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000050fb9: lea rsi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x00000000000448d4: lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x0000000000059952: lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000005d453: lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005d5b4: lea rsi, [rsp + 4]; xor eax, eax; mov edx, 4; syscall; 
0x000000000004d8a5: lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d49b: lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003bcf1: lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x000000000004e90e: lea rsi, [rsp + 8]; call rax; 
0x0000000000039145: lea rsi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000005b7ea: lea rsi, [rsp + 8]; mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x000000000005a595: lea rsi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000004c030: lea rsi, [rsp + 8]; movsxd rdi, r12d; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000005d84b: lea rsp, [rbp - 0x10]; mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x00000000000379de: leave; add rsp, 0x10; ret; 
0x000000000001bec7: leave; add rsp, 0x38; fchs; fxch st(1); ret; 
0x000000000003426a: leave; addsd xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000034364: leave; addss xmm1, xmm2; movss dword ptr [rsp + 0x1c], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000041989: leave; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x00000000000198f3: leave; cmove rax, rdx; ret; 
0x000000000003a2e8: leave; cmp r9d, 0x2f; jbe 0x3a2f4; mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000027aec: leave; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x000000000002953d: leave; divsd xmm0, xmm1; ret; 
0x0000000000029565: leave; divss xmm0, xmm1; ret; 
0x0000000000037aa7: leave; faddp st(1); add rsp, 0x30; ret; 
0x000000000002a6b0: leave; faddp st(1); ret; 
0x00000000000295fe: leave; fld xword ptr [rax - 0x10]; faddp st(1); dec esi; jne 0x295f5; ret; 
0x0000000000037559: leave; fld xword ptr [rsp]; add rsp, 0x38; fmulp st(1); ret; 
0x000000000002f66a: leave; fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x00000000000378ea: leave; fpatan; ret; 
0x00000000000378e4: leave; fsqrt; fabs; fxch st(1); fpatan; ret; 
0x00000000000378fb: leave; fsqrt; fpatan; ret; 
0x000000000002c1e4: leave; fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x000000000002a6cf: leave; fsubp st(1); fsubp st(1); ret; 
0x0000000000035829: leave; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359ae: leave; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x0000000000017f9f: leave; jne 0x17f90; ret; 
0x00000000000195f3: leave; jne 0x195e8; ret; 
0x000000000002e1dc: leave; jne 0x2e41d; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000004cb5c: leave; jne 0x4cb6e; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000055513: leave; jne 0x55518; neg eax; ret; 
0x000000000005555e: leave; jne 0x55564; neg rax; ret; 
0x00000000000555aa: leave; jne 0x555b0; neg rax; ret; 
0x000000000002d9fe: leave; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000002de42: leave; jns 0x2de51; addsd xmm1, qword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000003303b: leave; jns 0x3304a; subsd xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000246d5: leave; mov eax, 0x113; syscall; 
0x0000000000023dbe: leave; mov eax, 0x146; syscall; 
0x0000000000041962: leave; mov eax, 0x29; syscall; 
0x00000000000418ed: leave; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2dd: leave; mov eax, 0x31; syscall; 
0x000000000003f001: leave; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e44c: leave; mov eax, 0x33; syscall; 
0x000000000003e049: leave; mov eax, 0x34; syscall; 
0x00000000000418cc: leave; mov eax, 0x36; syscall; 
0x000000000003e46d: leave; mov eax, 0x37; syscall; 
0x00000000000564bc: leave; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000003bceb: leave; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x00000000000229d9: leave; mov rax, r8; mov rdx, r9; syscall; 
0x000000000002f07c: leave; mulsd xmm0, xmm1; ret; 
0x000000000002f1c6: leave; mulss xmm0, xmm1; ret; 
0x000000000002c816: leave; pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000005e4b3: leave; pop rbx; mov rax, r9; pop rbp; pop r12; ret; 
0x0000000000037abf: leave; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037ab2: leave; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000001be76: leave; ret; 
0x000000000004db65: lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000004c9bb: lock add byte ptr [rax], al; cmp eax, 0xa000; je 0x4c9e2; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x0000000000038a7c: lock add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret 0x8b49; 
0x0000000000058baa: lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000058fe4: lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d26: lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cf3: lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf8: lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059515: lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b3: lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x0000000000059a27: lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000059a17: lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x59a13; ret; 
0x0000000000059533: lock cmpxchg dword ptr [rdi], edx; test eax, eax; setne al; movzx eax, al; shl eax, 4; ret; 
0x00000000000569c5: lock cmpxchg dword ptr [rdi], r8d; mov r8d, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x0000000000056c59: lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000059fb5: lock dec dword ptr [rdi]; ret; 
0x00000000000577a0: lock inc dword ptr [r8 + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576c4: lock inc dword ptr [r8 + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000057710: lock inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005a481: lock inc dword ptr [rip + 0x41a98]; ret; 
0x000000000005ce7c: lock or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000058cf5: lock or dword ptr [rsp], 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000059a30: lock or dword ptr [rsp], 0; ret; 
0x000000000004ea23: lodsb al, byte ptr [rsi]; adc al, byte ptr [rax]; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000024005: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5affff32; ret; 
0x000000000001f514: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rsi - 0x76], bl; add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x000000000002ea5c: lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xc1d9; 
0x000000000003536e: lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000034d05: lodsb al, byte ptr [rsi]; and al, 0xb0; add byte ptr [rax], al; add byte ptr [rdi], cl; wait; ret 0x450f; 
0x0000000000050494: lodsb al, byte ptr [rsi]; and byte ptr [rax + 3], bh; syscall; 
0x0000000000028140: lodsb al, byte ptr [rsi]; sbb eax, 0x428d0007; add esi, edi; ret 0x1c75; 
0x0000000000053804: lodsb al, byte ptr [rsi]; sub byte ptr [rax + rax], al; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000042d8e: lodsd eax, dword ptr [rsi]; add byte ptr [rax], al; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x00000000000218d8: lodsd eax, dword ptr [rsi]; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000002447f: lodsd eax, dword ptr [rsi]; sub eax, 0xc35affff; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x000000000001671b: loope 0x166fb; ret 0x8341; 
0x000000000001b3da: loope 0x1b44d; add byte ptr [rax], al; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001c15b: loope 0x1c136; ret 0xc2d8; 
0x000000000002449d: loope 0x2449d; push rax; mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x0000000000026773: loope 0x26774; dec dword ptr [rax - 0x73]; add eax, 0x7024b; ret; 
0x00000000000281ec: loope 0x281f0; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000293cf: loope 0x293af; ret 0xc1de; 
0x000000000002d989: loope 0x2d969; ret 0xe1de; 
0x0000000000031663: loope 0x3169e; ret 0xee75; 
0x00000000000343be: loope 0x343c1; sub rdx, rcx; test rax, rdi; mov eax, 0; cmove eax, edx; ret; 
0x00000000000378e0: loope 0x378ba; ret 0xc9de; 
0x00000000000378e8: loope 0x378c3; leave; fpatan; ret; 
0x00000000000378f7: loope 0x378d1; ret 0xc9de; 
0x0000000000037b61: loope 0x37b83; bts rax, 0x35; or rdx, rcx; ret; 
0x00000000000390e5: loope 0x390e4; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x0000000000044083: loope 0x44082; dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x00000000000443f1: loope 0x443f0; dec dword ptr [rax - 0x77]; ret 0xc883; 
0x0000000000045dcf: loope 0x45d51; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x4c89; 
0x00000000000484b9: loope 0x484ba; dec dword ptr [rax - 0x77]; ret 0x854d; 
0x000000000004b28a: loope 0x4b2d4; add esp, 0x18; mov rax, -0x26; pop rbp; pop r12; ret; 
0x000000000005ceb2: loope 0x5ceb4; add byte ptr [rax], al; syscall; 
0x000000000002ee3c: maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ee3b: maxsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ee81: maxss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef4c: minps xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef4b: minsd xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef94: minss xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004afff: mov ah, 0; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000052071: mov ah, 0x24; lcall [rax + rax]; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000001c13f: mov ah, 0x60; add byte ptr [rax], al; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000055803: mov ah, 0xff; dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000005b554: mov ah, 0xff; dec dword ptr [rcx + rcx*4 - 0x20]; pop rdx; pop rbp; pop r12; ret; 
0x000000000001a402: mov ah, 7; add byte ptr [rdi], cl; xchg eax, edi; ret 0x4566; 
0x00000000000219b4: mov al, 0; add byte ptr [rax], al; neg edi; sbb eax, eax; ret; 
0x00000000000241fc: mov al, 0; add byte ptr [rax], al; syscall; 
0x000000000005a523: mov al, 0x3c; syscall; 
0x000000000005a523: mov al, 0x3c; syscall; hlt; ret; 
0x000000000001a035: mov al, 0x48; sub esi, 1; jae 0x1a030; ret; 
0x000000000005d32c: mov al, 0xfb; inc ebx; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000004b166: mov al, 0xfc; lcall [rdx - 0x3d]; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x000000000005b93a: mov al, 0xff; lcall [rdx + 0x59]; neg eax; pop rsi; ret; 
0x00000000000557ff: mov al, 1; call 0x50c18; mov rax, r12; pop r12; ret; 
0x0000000000028165: mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x000000000005610b: mov al, byte ptr [r8]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x00000000000508ad: mov al, byte ptr [rax + rax]; mov byte ptr [rdx], dil; ret; 
0x000000000002f62b: mov al, byte ptr [rax]; add bl, dh; movups xmm2, xmmword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000004cdc7: mov al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005610c: mov al, byte ptr [rax]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x000000000003f1c5: mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x00000000000403bb: mov ax, word ptr [rdi]; xchg al, ah; movzx eax, ax; ret; 
0x000000000002811d: mov bh, 0x14; push rsi; cmp rdx, rcx; adc eax, 0; ret; 
0x0000000000032d38: mov bh, 0x2d; add byte ptr [rax], al; pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000019491: mov bh, 0x47; sbb al, 0x66; rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x000000000005144a: mov bh, 0x48; add edx, edi; jmp rdx; 
0x000000000002a55f: mov bh, 0xc0; ret; 
0x000000000003ea97: mov bh, 0xc7; ret; 
0x000000000005d4c8: mov bh, 1; add byte ptr [rax], al; mov rdi, r14; mov rdx, r13; syscall; 
0x00000000000256a3: mov bh, 4; push rax; ret; 
0x0000000000027b23: mov bh, 4; shl eax, 4; cdqe; ret; 
0x0000000000024475: mov bl, 0; add byte ptr [rax], al; syscall; 
0x00000000000448a0: mov bl, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ebx, 0x88; call rax; 
0x000000000003b0c0: mov bl, 1; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000001a4a1: mov bl, 7; add byte ptr [rdi], cl; xchg eax, edi; ret 0x4566; 
0x00000000000188ee: mov byte ptr [r12 + rbx], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000170fd: mov byte ptr [r8 + r9], sil; mov esi, ecx; mov ecx, eax; cmp esi, 9; ja 0x170e0; ret; 
0x0000000000028097: mov byte ptr [r8 - 3], al; mov rax, r8; ret; 
0x00000000000574cc: mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000005e763: mov byte ptr [rax + 0x48000000], cl; mov dword ptr [rax + 0x90], edx; ret; 
0x00000000000170fe: mov byte ptr [rax + rcx], dh; mov esi, ecx; mov ecx, eax; cmp esi, 9; ja 0x170e0; ret; 
0x000000000005e2e6: mov byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000028098: mov byte ptr [rax - 3], al; mov rax, r8; ret; 
0x000000000001866c: mov byte ptr [rax], 0; call 0x18690; add rax, rbx; pop rbx; ret; 
0x0000000000023a8b: mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x0000000000018817: mov byte ptr [rax], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000003819b: mov byte ptr [rax], 0; mov rax, r8; ret; 
0x00000000000448a8: mov byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x0000000000044d57: mov byte ptr [rax], al; add byte ptr [rax], al; mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005e764: mov byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x90], rdx; ret; 
0x0000000000044cfd: mov byte ptr [rax], al; add byte ptr [rax], al; mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000058ef2: mov byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000017f9c: mov byte ptr [rax], cl; test cl, cl; jne 0x17f90; ret; 
0x000000000003d9a6: mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x0000000000061038: mov byte ptr [rbx], al; add byte ptr [rax - 0x7f], cl; call qword ptr [rax + 1]; 
0x0000000000022fb3: mov byte ptr [rcx + 0x42], dl; cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x000000000005aa11: mov byte ptr [rcx + rdx], 0; ret; 
0x000000000004e713: mov byte ptr [rcx - 0x77], 0xc5; mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000015ed1: mov byte ptr [rcx], 9; ret 0x8941; 
0x0000000000044767: mov byte ptr [rdi + 1], cl; add byte ptr [rax], al; mov rax, r9; syscall; 
0x00000000000178d3: mov byte ptr [rdi - 1], dl; cmp edx, r9d; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x0000000000027678: mov byte ptr [rdi - 3], al; ret; 
0x0000000000052d51: mov byte ptr [rdi], dl; ret; 
0x000000000005970a: mov byte ptr [rdx + 0x40], bh; xor eax, eax; ret; 
0x0000000000059709: mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000004481c: mov byte ptr [rdx + 0x4c000000], bl; mov eax, ecx; syscall; 
0x00000000000171f7: mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000052d3a: mov byte ptr [rdx], 0x83; inc byte ptr [rip - 0x72b7e289]; or eax, 0x432d0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000507b2: mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000004ebce: mov byte ptr [rdx], al; ret; 
0x00000000000508b1: mov byte ptr [rdx], bh; ret; 
0x000000000003bf3e: mov byte ptr [rdx], dh; mov r8d, 1; mov rax, r8; ret; 
0x00000000000508b0: mov byte ptr [rdx], dil; ret; 
0x000000000004ebcd: mov byte ptr [rdx], r8b; ret; 
0x000000000003bf3d: mov byte ptr [rdx], sil; mov r8d, 1; mov rax, r8; ret; 
0x0000000000028167: mov byte ptr [rip + 0x71d83], al; ret; 
0x00000000000220d7: mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x000000000002feb4: mov byte ptr [rsi + 6], cl; add dl, dh; subps xmm0, xmmword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000005610e: mov byte ptr [rsi], al; mov eax, 1; ret; 
0x0000000000037ae9: mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x00000000000188ef: mov byte ptr [rsp + rbx], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b4b8: mov ch, 0xff; call qword ptr [rbp + 0x48]; 
0x0000000000060acf: mov ch, 3; add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000059a29: mov cl, 0x17; ret; 
0x0000000000059a19: mov cl, 0x17; test eax, eax; jne 0x59a13; ret; 
0x0000000000059535: mov cl, 0x17; test eax, eax; setne al; movzx eax, al; shl eax, 4; ret; 
0x000000000001e5b7: mov cl, 0x25; add eax, dword ptr [rax]; inc eax; cdqe; pop rdx; ret; 
0x0000000000052d4b: mov cl, 0x48; add eax, ecx; jmp rax; 
0x00000000000571b4: mov cl, 0x4d; add byte ptr [rcx], bh; ret 0x1574; 
0x0000000000058c4d: mov cl, 0x57; add al, 0x85; sal byte ptr [rbp - 0x25], 0xe9; ret; 
0x0000000000056d28: mov cl, 0x57; add al, 0xc1; call 0x1e5f035; ret; 
0x000000000005947e: mov cl, 0x5a; pop rbx; pop rbp; ret; 
0x00000000000590de: mov cl, 0x5d; add al, 0x39; ret 0xe275; 
0x0000000000019f73: mov cl, 0x89; adc al, 0xb0; ret; 
0x000000000001a032: mov cl, 0x89; adc al, 0xb0; sub rsi, 1; jae 0x1a030; ret; 
0x000000000005df7b: mov cl, 0x92; sti; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x0000000000059517: mov cl, 0xf; cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b5: mov cl, 0xf; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x000000000002c785: mov cl, 0xf; xchg eax, esi; ret 0xf981; 
0x0000000000060873: mov cl, 3; add byte ptr [rdx + 0x5d], bl; pop r12; jmp rax; 
0x00000000000569c8: mov cl, 7; mov r8d, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x00000000000258e3: mov cs, word ptr [rip - 0x76b80000]; ret 0xc148; 
0x000000000004de55: mov dh, 0; ret; 
0x00000000000286e0: mov dh, 0x1c; add dh, dh; ret; 
0x0000000000059704: mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000017f91: mov dh, 0x4a; add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000004cf3d: mov dh, 0x52; std; dec dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x000000000001ed6f: mov dh, 0x92; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x0000000000042d8d: mov dh, 0xad; add byte ptr [rax], al; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x000000000001ed6e: mov dh, 0xb6; xchg eax, edx; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000005a42c: mov dh, 0xc0; add eax, eax; ret; 
0x000000000002167a: mov dh, 0xc0; add rsp, 0x18; ret; 
0x0000000000026aa1: mov dh, 0xc0; and eax, edx; ret; 
0x000000000003f225: mov dh, 0xc0; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000003aa4e: mov dh, 0xc0; movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x000000000002598f: mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000026202: mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000043263: mov dh, 0xc0; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023ea1: mov dh, 0xc0; neg eax; ret; 
0x000000000004ec08: mov dh, 0xc0; pop rbx; pop r12; neg eax; ret; 
0x0000000000021440: mov dh, 0xc0; ret; 
0x000000000005953d: mov dh, 0xc0; shl eax, 4; ret; 
0x000000000001922d: mov dh, 0xc0; sub eax, edx; ret; 
0x0000000000017a28: mov dh, 0xc1; sub eax, r8d; ret; 
0x0000000000018359: mov dh, 0xc2; sub eax, ecx; ret; 
0x000000000003ea8c: mov dh, 0xc7; cmp edx, 0xbf; ja 0x3ea99; movzx eax, di; ret; 
0x000000000003b521: mov dh, 0xc7; ret; 
0x0000000000019245: mov dh, 0xd1; mov eax, r8d; sub eax, edx; ret; 
0x000000000001e6cf: mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005c5ec: mov dh, 0xd2; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x000000000001922a: mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x0000000000059f9a: mov dh, 0xf6; shl esi, 7; or esi, 1; syscall; 
0x0000000000018302: mov dh, 4; and al, 0x84; sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x000000000002fa92: mov dh, bl; add eax, 0xd8d4800; ret; 
0x000000000004b1a1: mov dl, 0; add byte ptr [rax + 0x63], cl; sti; call 0x17230; pop rbx; ret; 
0x000000000004b1d6: mov dl, 0; add byte ptr [rcx - 0x2708a428], cl; ret; 
0x00000000000215aa: mov dl, 0x48; add eax, edx; jmp rax; 
0x000000000003f1be: mov dl, byte ptr [rdi]; cmp dl, 0xff; jne 0x3f1cc; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x0000000000035824: mov dword ptr [r10], esi; test r9, r9; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359a9: mov dword ptr [r10], esi; test r9d, r9d; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x0000000000017116: mov dword ptr [r8 + 0xe], eax; ret; 
0x0000000000057044: mov dword ptr [r8 + 8], edx; ret; 
0x000000000005a98a: mov dword ptr [r9 + 0x10], eax; ret; 
0x000000000001a011: mov dword ptr [r9 + 4], ecx; cmp rsi, 1; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x000000000001a022: mov dword ptr [r9 + 8], edx; ret; 
0x00000000000278b9: mov dword ptr [r9 - 2], eax; pop rdx; mov rax, r8; pop rbx; pop r12; ret; 
0x0000000000047908: mov dword ptr [rax + 0x18], edx; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000000221f2: mov dword ptr [rax + 0x28], edx; pop rbx; ret; 
0x000000000005f4a0: mov dword ptr [rax + 0x58], ecx; add rsp, 0x100; ret; 
0x000000000005ef37: mov dword ptr [rax + 0x68], edi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x00000000000580f0: mov dword ptr [rax + 0x78], edi; ret; 
0x0000000000058102: mov dword ptr [rax + 0x78], edx; ret; 
0x000000000005e762: mov dword ptr [rax + 0x88], ecx; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000005e769: mov dword ptr [rax + 0x90], edx; ret; 
0x000000000004f36e: mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000017117: mov dword ptr [rax + 0xe], eax; ret; 
0x0000000000047275: mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000021ba5: mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x000000000004b66c: mov dword ptr [rax + 8], edi; ret; 
0x0000000000057045: mov dword ptr [rax + 8], edx; ret; 
0x0000000000051581: mov dword ptr [rax + 8], esi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005159a: mov dword ptr [rax + 8], esi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000279ec: mov dword ptr [rax + 8], esi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x000000000005146d: mov dword ptr [rax + 8], esi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x0000000000020096: mov dword ptr [rax + rcx*2], 0x7540ff83; ret; 
0x0000000000019f69: mov dword ptr [rax + rdx*4], edi; test rdx, rdx; je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x0000000000019f8b: mov dword ptr [rax + rdx*4], esi; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x0000000000022456: mov dword ptr [rax + rdx*8], ebx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x00000000000195eb: mov dword ptr [rax + rdx], ecx; add rdx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x0000000000019f74: mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001a033: mov dword ptr [rax + rsi*4], edx; sub rsi, 1; jae 0x1a030; ret; 
0x00000000000611b6: mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000001b3de: mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e5cc: mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000024b1c: mov dword ptr [rax], 0x16; xor eax, eax; pop rdx; ret; 
0x0000000000059f59: mov dword ptr [rax], 0x4b; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000024948: mov dword ptr [rax], 0x50f0000; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003bf32: mov dword ptr [rax], 0x54; mov rax, r8; pop rdx; ret; 
0x000000000003b5c0: mov dword ptr [rax], 0x54; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x000000000004055a: mov dword ptr [rax], 0x5a; mov eax, r12d; pop r12; ret; 
0x0000000000023bcf: mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x0000000000039c84: mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000005a0c4: mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x00000000000177bf: mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000004726f: mov dword ptr [rax], 0xffffffff; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x0000000000038821: mov dword ptr [rax], 2; mov rax, r12; pop r12; ret; 
0x000000000004e32d: mov dword ptr [rax], 9; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000004cda0: mov dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r8; syscall; 
0x0000000000039c59: mov dword ptr [rax], ebp; xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000017255: mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x00000000000279f4: mov dword ptr [rax], esi; ret; 
0x000000000004fcef: mov dword ptr [rax], esp; call 0x4fcc7; mov rax, r12; pop r12; ret; 
0x000000000003b50d: mov dword ptr [rax], esp; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000003b50c: mov dword ptr [rax], r12d; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000004e727: mov dword ptr [rbp + 0x31], 0x8b00e8e4; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000058cf2: mov dword ptr [rbp + 8], eax; lock or dword ptr [rsp], 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000044b23: mov dword ptr [rbp + 8], ebx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000001913d: mov dword ptr [rbp], 0; mov rax, r12; pop r12; pop r13; ret; 
0x00000000000465ab: mov dword ptr [rbp], eax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003d4b0: mov dword ptr [rbp], ebx; pop rax; pop rbx; pop rbp; ret; 
0x000000000001911c: mov dword ptr [rbp], edx; pop r12; pop r13; ret; 
0x000000000002456e: mov dword ptr [rbx + 0x10], ebp; pop rax; pop rbx; pop rbp; ret; 
0x0000000000021ed8: mov dword ptr [rbx + 0x10], ebx; mov qword ptr [rbx + 0x18], rbx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; pop rbx; ret; 
0x000000000004d82c: mov dword ptr [rbx + 0x10], edx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x0000000000021edc: mov dword ptr [rbx + 0x18], ebx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; pop rbx; ret; 
0x0000000000021ee0: mov dword ptr [rbx + 0x20], eax; xor eax, eax; pop rbx; ret; 
0x000000000004f198: mov dword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000004f190: mov dword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000021e9c: mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005f16b: mov dword ptr [rbx + 0x70], eax; add rsp, 0x110; pop rbx; ret; 
0x0000000000057e7f: mov dword ptr [rbx + 0x78], eax; call rdx; 
0x0000000000046323: mov dword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004f1cd: mov dword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000056f24: mov dword ptr [rbx + 8], eax; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x0000000000044bc5: mov dword ptr [rbx + 8], eax; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000044b70: mov dword ptr [rbx + 8], eax; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000596df: mov dword ptr [rbx + 8], edx; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x000000000004d833: mov dword ptr [rbx + 8], edx; pop rbx; ret; 
0x000000000003a9a6: mov dword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004b50e: mov dword ptr [rbx], 0; pop rbx; ret; 
0x0000000000044c45: mov dword ptr [rbx], 0x8948fffd; ret; 
0x0000000000017770: mov dword ptr [rbx], eax; xor eax, eax; pop rbx; ret; 
0x000000000004df57: mov dword ptr [rbx], eax; xor r8d, r8d; mov eax, r8d; pop rbx; ret; 
0x00000000000189a5: mov dword ptr [rbx], edx; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002ab49: mov dword ptr [rbx], esi; add dword ptr [rax], eax; add dl, dh; movups xmm0, xmmword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x00000000000596dc: mov dword ptr [rbx], esi; mov qword ptr [rbx + 8], rdx; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x0000000000050556: mov dword ptr [rbx], esp; std; dec dword ptr [rdx + 0x63]; jl 0x5050a; and byte ptr [rax + 3], bh; syscall; 
0x00000000000586c9: mov dword ptr [rbx], esp; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a98b: mov dword ptr [rcx + 0x10], eax; ret; 
0x000000000004b9da: mov dword ptr [rcx + 0x18], esi; mov qword ptr [r9], rax; mov eax, dword ptr [rax + 0x18]; pop rbx; sub eax, r10d; ret; 
0x0000000000019499: mov dword ptr [rcx + 0x1c], eax; ret; 
0x00000000000275ad: mov dword ptr [rcx + 0xa8], edi; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x000000000003ea8d: mov dword ptr [rcx + 0xbffa], 0xf037700; mov bh, 0xc7; ret; 
0x000000000001560b: mov dword ptr [rcx + 0xf], 0x3944c74e; sar byte ptr [rdx + rcx + 0x49], 0x83; call qword ptr [rcx]; 
0x000000000001a012: mov dword ptr [rcx + 4], ecx; cmp rsi, 1; je 0x19f97; mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x0000000000043978: mov dword ptr [rcx + 4], edx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000019ead: mov dword ptr [rcx + 8], eax; mov rax, r8; ret; 
0x000000000001a023: mov dword ptr [rcx + 8], edx; ret; 
0x000000000001560f: mov dword ptr [rcx + rdi - 0x40], 0x83490a7c; call qword ptr [rcx]; 
0x00000000000278ba: mov dword ptr [rcx - 2], eax; pop rdx; mov rax, r8; pop rbx; pop r12; ret; 
0x000000000001e89f: mov dword ptr [rcx - 4], edx; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x000000000001e89c: mov dword ptr [rcx - 8], eax; mov dword ptr [rcx - 4], edx; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x00000000000178d1: mov dword ptr [rcx], 0x44ff5788; cmp edx, ecx; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x000000000004b9de: mov dword ptr [rcx], eax; mov eax, dword ptr [rax + 0x18]; pop rbx; sub eax, r10d; ret; 
0x0000000000051474: mov dword ptr [rcx], eax; ret; 
0x0000000000043971: mov dword ptr [rcx], eax; shr rdx, 0x20; mov word ptr [rcx + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000002ace2: mov dword ptr [rcx], ebp; add dword ptr [rax], eax; add bl, dh; movups xmm0, xmmword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x0000000000043b1b: mov dword ptr [rcx], edi; ret; 
0x000000000004db04: mov dword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000056fd3: mov dword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x00000000000580ec: mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000056fb3: mov dword ptr [rdi + 0x10], esi; ret; 
0x0000000000020270: mov dword ptr [rdi + 0x18], eax; movabs rax, 0x5be0cd191f83d9ab; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000056f3a: mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f65: mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000002027e: mov dword ptr [rdi + 0x20], eax; ret; 
0x000000000004d879: mov dword ptr [rdi + 0x20], eax; xor eax, eax; ret; 
0x0000000000056f73: mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x0000000000056f6d: mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000004dafc: mov dword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004d871: mov dword ptr [rdi + 0x28], eax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x00000000000507af: mov dword ptr [rdi + 0x28], ecx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000004ebca: mov dword ptr [rdi + 0x28], ecx; mov byte ptr [rdx], r8b; ret; 
0x0000000000020b80: mov dword ptr [rdi + 0x30], eax; movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004bd17: mov dword ptr [rdi + 0x30], edx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004daf4: mov dword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004d86d: mov dword ptr [rdi + 0x38], eax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000020b8e: mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004bd1f: mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x0000000000020b9c: mov dword ptr [rdi + 0x40], eax; ret; 
0x000000000004f42e: mov dword ptr [rdi + 0x80], eax; ret; 
0x000000000004f3b4: mov dword ptr [rdi + 0x80], eax; xor eax, eax; ret; 
0x0000000000057d39: mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000050b5c: mov dword ptr [rdi + 0x90], 0xa; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000001715a: mov dword ptr [rdi + 0xb8], edx; ret; 
0x0000000000046337: mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000046349: mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x0000000000059a6c: mov dword ptr [rdi + 4], 0; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000001a0a6: mov dword ptr [rdi + 4], esi; cmp r9, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000044d40: mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000004b647: mov dword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004db0c: mov dword ptr [rdi + 8], 0; ret; 
0x0000000000044cc1: mov dword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x0000000000056108: mov dword ptr [rdi + 8], eax; mov al, byte ptr [r8]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x0000000000055880: mov dword ptr [rdi + 8], eax; mov qword ptr [rdi], rdx; ret; 
0x00000000000567ca: mov dword ptr [rdi + 8], eax; movq qword ptr [rdi], xmm0; ret; 
0x0000000000059a76: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000004de51: mov dword ptr [rdi + 8], edx; movzx eax, byte ptr [rax]; ret; 
0x00000000000558c3: mov dword ptr [rdi + 8], edx; ret; 
0x000000000001a0af: mov dword ptr [rdi + 8], esi; ret; 
0x0000000000056f55: mov dword ptr [rdi + 8], esi; xor eax, eax; ret; 
0x000000000001e7f6: mov dword ptr [rdi + rcx], 0xfc4789c8; dec esi; jne 0x1e7f2; ret; 
0x0000000000026d6a: mov dword ptr [rdi + rdi*8 - 0x3b7cb701], esi; sub byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000564c3: mov dword ptr [rdi + rdx - 0x27], eax; mov rax, rdi; ret; 
0x00000000000564be: mov dword ptr [rdi + rdx - 0x2f], eax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000564b9: mov dword ptr [rdi + rdx - 0x37], eax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000564b4: mov dword ptr [rdi + rdx - 0x3f], eax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000001e7fa: mov dword ptr [rdi - 4], eax; dec esi; jne 0x1e7f2; ret; 
0x000000000004b64f: mov dword ptr [rdi], 0; ret; 
0x000000000004c20a: mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000046389: mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000000059a2e: mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x00000000000558c0: mov dword ptr [rdi], eax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000004d852: mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x000000000002f34d: mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; pop rbx; ret; 
0x0000000000038107: mov dword ptr [rdi], eax; ret; 
0x000000000004c1d3: mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005a983: mov dword ptr [rdi], edx; call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x0000000000052d55: mov dword ptr [rdi], edx; ret; 
0x0000000000056fae: mov dword ptr [rdi], edx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x00000000000592ad: mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x00000000000279ff: mov dword ptr [rdi], esi; ret; 
0x0000000000044d3b: mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000057771: mov dword ptr [rdx + 0x10], ecx; test eax, eax; jns 0x5777f; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000058fc5: mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x000000000004b958: mov dword ptr [rdx + 0x18], eax; sub eax, r10d; ret; 
0x000000000004fceb: mov dword ptr [rdx + 0x68], esp; mov qword ptr [rax], r12; call 0x4fcc7; mov rax, r12; pop r12; ret; 
0x0000000000057493: mov dword ptr [rdx + 0xa8], eax; ret; 
0x000000000004f33d: mov dword ptr [rdx + 0xc0], eax; ret; 
0x000000000004f32c: mov dword ptr [rdx + 0xd8], eax; ret; 
0x00000000000593f0: mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x0000000000057779: mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x000000000004b68a: mov dword ptr [rdx], eax; ret; 
0x0000000000058be0: mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000056e95: mov dword ptr [rdx], ecx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x00000000000599b8: mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000003b58e: mov dword ptr [rdx], esi; ret; 
0x0000000000035825: mov dword ptr [rdx], esi; test r9, r9; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359aa: mov dword ptr [rdx], esi; test r9d, r9d; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x000000000005e7af: mov dword ptr [rip + 0x3b183], eax; ret; 
0x00000000000606b3: mov dword ptr [rip + 0x3b8ab], 0; pop rax; ret; 
0x000000000005f164: mov dword ptr [rip + 0x3ce46], ebx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005ef3b: mov dword ptr [rip + 0x3d077], edi; ret; 
0x000000000005a274: mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000057d9f: mov dword ptr [rip + 0x442d7], eax; ret; 
0x00000000000508e3: mov dword ptr [rip + 0x48a5f], ecx; mov byte ptr [rdx], dil; ret; 
0x00000000000508aa: mov dword ptr [rip + 0x48a98], ecx; mov byte ptr [rdx], dil; ret; 
0x000000000004f92f: mov dword ptr [rip + 0x498f3], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f904: mov dword ptr [rip + 0x4991e], edx; movzx eax, byte ptr [rax]; ret; 
0x0000000000043a36: mov dword ptr [rip + 0x5849c], eax; shr rax, 0x21; ret; 
0x0000000000043a19: mov dword ptr [rip + 0x584b9], eax; ret; 
0x0000000000042d9f: mov dword ptr [rip + 0x5911f], 0; ret; 
0x0000000000042d92: mov dword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042254: mov dword ptr [rip + 0x59c52], 0; ret; 
0x0000000000042247: mov dword ptr [rip + 0x59c5f], 0; pop rdx; ret; 
0x0000000000040773: mov dword ptr [rip + 0x5b8db], 0; ret; 
0x0000000000040768: mov dword ptr [rip + 0x5b8e6], 0; ret; 
0x000000000002835e: mov dword ptr [rip + 0x71b94], ebx; add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000002817b: mov dword ptr [rip + 0x73e97], 0; ret; 
0x0000000000023a39: mov dword ptr [rip + 0x783d9], eax; pop rax; ret; 
0x00000000000239eb: mov dword ptr [rip + 0x78423], 0; ret; 
0x00000000000239de: mov dword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x000000000002245a: mov dword ptr [rip + 0x79978], ecx; pop rbx; ret; 
0x000000000002244b: mov dword ptr [rip + 0x7998f], eax; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000001906b: mov dword ptr [rip + 0x82e87], edx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000003a1ad: mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000004f375: mov dword ptr [rsi + 0xc0], edi; ret; 
0x000000000005a7de: mov dword ptr [rsi + 4], edx; mov eax, r10d; pop rbx; pop rbp; ret; 
0x00000000000279f8: mov dword ptr [rsi + 8], esi; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x0000000000056e73: mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x0000000000059707: mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000005e421: mov dword ptr [rsi], eax; mov eax, 1; ret; 
0x0000000000056e98: mov dword ptr [rsi], eax; mov eax, r8d; ret; 
0x00000000000279e9: mov dword ptr [rsi], eax; mov qword ptr [rax + 8], rsi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000044cd1: mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005a511: mov dword ptr [rsi], ecx; syscall; 
0x000000000005a7dc: mov dword ptr [rsi], edi; mov dword ptr [rsi + 4], edx; mov eax, r10d; pop rbx; pop rbp; ret; 
0x000000000004b661: mov dword ptr [rsi], edi; mov rax, qword ptr [rdi]; test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x00000000000403d0: mov dword ptr [rsi], edi; ret; 
0x000000000004db38: mov dword ptr [rsi], edx; ret; 
0x00000000000279fc: mov dword ptr [rsi], esi; mov qword ptr [rdi], rsi; ret; 
0x000000000002435f: mov dword ptr [rsp + 0x10], eax; add rax, rcx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x00000000000392ff: mov dword ptr [rsp + 0x10], eax; mov eax, 0x10; syscall; 
0x0000000000022e9d: mov dword ptr [rsp + 0x10], eax; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x000000000001d04c: mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000024058: mov dword ptr [rsp + 0x118], eax; mov eax, 0x144; syscall; 
0x000000000001c3a6: mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc8a: mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d050: mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000022098: mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000004c54a: mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x000000000005cdca: mov dword ptr [rsp + 0x18], eax; mov rax, qword ptr [rsp + 8]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000003911f: mov dword ptr [rsp + 0x18], eax; xor eax, eax; mov eax, 0x12e; syscall; 
0x00000000000447c9: mov dword ptr [rsp + 0x1c], eax; and eax, 0xfffffffe; mov rsi, r15; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000033afd: mov dword ptr [rsp + 0x1c], eax; fild dword ptr [rsp + 0x1c]; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000001cc2d: mov dword ptr [rsp + 0x1c], eax; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000446df: mov dword ptr [rsp + 0x1c], eax; test eax, eax; jne 0x448bb; mov eax, 0x66; syscall; 
0x0000000000044760: mov dword ptr [rsp + 0x1c], eax; test eax, eax; js 0x448bb; mov rax, r9; syscall; 
0x000000000005cdd6: mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000005d61f: mov dword ptr [rsp + 0x28], eax; mov eax, 0x51; syscall; 
0x000000000004bfb3: mov dword ptr [rsp + 0x28], eax; mov eax, 0xe; syscall; 
0x000000000005cd65: mov dword ptr [rsp + 0x28], eax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x0000000000054e79: mov dword ptr [rsp + 0x28], eax; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x00000000000443b6: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8cf: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000001b8d8: mov dword ptr [rsp + 0x2c], eax; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000001b8e0: mov dword ptr [rsp + 0x30], eax; mov eax, 0x81; syscall; 
0x000000000005bbf7: mov dword ptr [rsp + 0x30], eax; mov rax, r12; pop r12; ret; 
0x000000000005d69e: mov dword ptr [rsp + 0x38], eax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000001b328: mov dword ptr [rsp + 0x5c], eax; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x000000000001b332: mov dword ptr [rsp + 0x60], eax; mov eax, 0x81; syscall; 
0x00000000000581d8: mov dword ptr [rsp + 0x68], eax; mov eax, 0xe; syscall; 
0x000000000003b385: mov dword ptr [rsp + 0x80], ebx; syscall; 
0x000000000005a575: mov dword ptr [rsp + 0x98], eax; mov eax, 2; syscall; 
0x0000000000021a8f: mov dword ptr [rsp + 0xc], eax; call 0x15060; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbp; ret; 
0x000000000001c0eb: mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000591ba: mov dword ptr [rsp + 4], 0; mov esi, 6; syscall; 
0x000000000001bde3: mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd42: mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000005d44b: mov dword ptr [rsp + 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005f3b7: mov dword ptr [rsp + 8], eax; call qword ptr [rax - 8]; 
0x00000000000392f5: mov dword ptr [rsp + 8], eax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x000000000005d3ef: mov dword ptr [rsp + 8], eax; mov eax, 0x6c; syscall; 
0x000000000005d9be: mov dword ptr [rsp + 8], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000005a54c: mov dword ptr [rsp + 8], ebx; syscall; 
0x000000000005a54c: mov dword ptr [rsp + 8], ebx; syscall; ret; 
0x000000000001c0e7: mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000005d6b9: mov dword ptr [rsp + 8], edx; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000003bced: mov dword ptr [rsp + 8], esi; lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x0000000000035f54: mov dword ptr [rsp - 0x10], eax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c343: mov dword ptr [rsp - 0x10], eax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000001d10d: mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001d111: mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000005a5e8: mov dword ptr [rsp], eax; mov eax, 3; syscall; 
0x000000000003bcdb: mov dword ptr [rsp], ebp; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000001bde0: mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd3f: mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000005a7dd: mov dword ptr ds:[rsi + 4], edx; mov eax, r10d; pop rbx; pop rbp; ret; 
0x00000000000343c6: mov eax, 0; cmove eax, edx; ret; 
0x000000000005d30b: mov eax, 0; cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x000000000002388a: mov eax, 0x1000; ret; 
0x000000000004c9c5: mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000004cd27: mov eax, 0x102; syscall; 
0x000000000004cd6c: mov eax, 0x103; syscall; 
0x000000000005d71f: mov eax, 0x104; syscall; 
0x000000000004d02c: mov eax, 0x105; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000004cb09: mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000005e1b9: mov eax, 0x107; syscall; 
0x000000000005e1b9: mov eax, 0x107; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005dd77: mov eax, 0x108; syscall; 
0x000000000005da46: mov eax, 0x109; syscall; 
0x000000000004d197: mov eax, 0x10; mov esi, 0x5413; syscall; 
0x00000000000588af: mov eax, 0x10; ret; 
0x0000000000039303: mov eax, 0x10; syscall; 
0x000000000005df70: mov eax, 0x10a; syscall; 
0x000000000005dd08: mov eax, 0x10b; syscall; 
0x000000000004ca2d: mov eax, 0x10c; mov rsi, r14; syscall; 
0x000000000004c96a: mov eax, 0x10c; syscall; 
0x000000000005d4ac: mov eax, 0x10d; mov rdi, r14; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000005d43c: mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x00000000000247f8: mov eax, 0x110; syscall; 
0x0000000000058ee5: mov eax, 0x111; mov esi, 0x18; lea rdi, [r8 + 0x88]; syscall; 
0x0000000000057fe5: mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x0000000000059259: mov eax, 0x112; xor edi, edi; syscall; 
0x00000000000246d6: mov eax, 0x113; syscall; 
0x000000000002479d: mov eax, 0x114; syscall; 
0x000000000002475c: mov eax, 0x115; syscall; 
0x000000000002475c: mov eax, 0x115; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024831: mov eax, 0x116; syscall; 
0x000000000004cf9d: mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x0000000000023e34: mov eax, 0x119; syscall; 
0x0000000000024682: mov eax, 0x11a; syscall; 
0x00000000000247b3: mov eax, 0x11b; syscall; 
0x0000000000023e7a: mov eax, 0x11c; syscall; 
0x0000000000023ed9: mov eax, 0x11d; syscall; 
0x0000000000023ed9: mov eax, 0x11d; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022bc4: mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x0000000000022bc4: mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x00000000000247ce: mov eax, 0x11e; syscall; 
0x00000000000247ce: mov eax, 0x11e; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000247e3: mov eax, 0x11f; syscall; 
0x00000000000247e3: mov eax, 0x11f; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024671: mov eax, 0x121; syscall; 
0x0000000000023e68: mov eax, 0x122; syscall; 
0x0000000000023dd1: mov eax, 0x123; push rcx; mov rdx, rdi; syscall; 
0x000000000005db0a: mov eax, 0x125; movsxd rsi, esi; syscall; 
0x0000000000023f8d: mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x0000000000023eef: mov eax, 0x12c; syscall; 
0x0000000000023f09: mov eax, 0x12d; syscall; 
0x0000000000023f09: mov eax, 0x12d; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002439c: mov eax, 0x12e; syscall; 
0x000000000002439c: mov eax, 0x12e; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024254: mov eax, 0x12f; syscall; 
0x0000000000024254: mov eax, 0x12f; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002426c: mov eax, 0x130; syscall; 
0x0000000000023d39: mov eax, 0x131; syscall; 
0x0000000000024771: mov eax, 0x132; syscall; 
0x00000000000245e7: mov eax, 0x134; syscall; 
0x000000000004b2d2: mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x00000000000243c8: mov eax, 0x136; syscall; 
0x00000000000243b3: mov eax, 0x137; syscall; 
0x000000000004d5cf: mov eax, 0x13; mov edx, 2; syscall; 
0x00000000000241b8: mov eax, 0x13f; syscall; 
0x00000000000241b8: mov eax, 0x13f; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000443bc: mov eax, 0x142; syscall; 
0x00000000000241a6: mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000241a6: mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x000000000002405f: mov eax, 0x144; syscall; 
0x00000000000241d5: mov eax, 0x145; syscall; 
0x00000000000241d5: mov eax, 0x145; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000023dbf: mov eax, 0x146; syscall; 
0x00000000000390cf: mov eax, 0x14; sub eax, edx; pop rdx; ret; 
0x000000000005d22f: mov eax, 0x15; syscall; 
0x000000000005d22f: mov eax, 0x15; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000056f30: mov eax, 0x16; cmp esi, 1; ja 0x56f3f; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x0000000000056f5b: mov eax, 0x16; cmp esi, 1; ja 0x56f6a; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x00000000000595c6: mov eax, 0x16; cmp esi, 1; ja 0x595d4; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000056f4a: mov eax, 0x16; cmp rsi, rdx; ja 0x56f5a; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x0000000000056f89: mov eax, 0x16; ret; 
0x000000000005dae4: mov eax, 0x16; syscall; 
0x000000000005dae4: mov eax, 0x16; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000044d2e: mov eax, 0x16; test esi, 0xffffff00; jne 0x44d3f; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000004b35e: mov eax, 0x18; syscall; 
0x000000000005a417: mov eax, 0x18; syscall; ret; 
0x000000000003af71: mov eax, 0x19; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005d4c7: mov eax, 0x1b7; mov rdi, r14; mov rdx, r13; syscall; 
0x000000000003adca: mov eax, 0x1b; syscall; 
0x000000000003adb8: mov eax, 0x1c; syscall; 
0x000000000003b02a: mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000022f80: mov eax, 0x1d; syscall; 
0x0000000000022f80: mov eax, 0x1d; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022f32: mov eax, 0x1e; syscall; 
0x0000000000022f48: mov eax, 0x1f; syscall; 
0x0000000000022f48: mov eax, 0x1f; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000044759: mov eax, 0x20; syscall; 
0x000000000005d347: mov eax, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x000000000004c60b: mov eax, 0x23; ret; 
0x000000000004bd75: mov eax, 0x24; syscall; 
0x0000000000044d13: mov eax, 0x26; ret; 
0x000000000004bf14: mov eax, 0x26; syscall; 
0x000000000004bf14: mov eax, 0x26; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024558: mov eax, 0x27; syscall; 
0x000000000005d97b: mov eax, 0x27; syscall; ret; 
0x00000000000244f3: mov eax, 0x28; syscall; 
0x0000000000041990: mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000041963: mov eax, 0x29; syscall; 
0x0000000000017110: mov eax, 0x30; mov word ptr [r8 + 0xe], ax; ret; 
0x00000000000418ee: mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2de: mov eax, 0x31; syscall; 
0x000000000003f002: mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e44d: mov eax, 0x33; syscall; 
0x000000000003e04a: mov eax, 0x34; syscall; 
0x0000000000041a53: mov eax, 0x35; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x00000000000418cd: mov eax, 0x36; syscall; 
0x00000000000418cd: mov eax, 0x36; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x000000000003e46e: mov eax, 0x37; syscall; 
0x000000000003e46e: mov eax, 0x37; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000043d8a: mov eax, 0x39; syscall; 
0x0000000000045060: mov eax, 0x3a; syscall; 
0x00000000000441b3: mov eax, 0x3b; syscall; 
0x000000000005d40d: mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000005a4e9: mov eax, 0x3c; syscall; 
0x000000000005d5dd: mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000002485a: mov eax, 0x3d; syscall; 
0x000000000002485a: mov eax, 0x3d; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000050277: mov eax, 0x3d; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x0000000000024567: mov eax, 0x3e; syscall; 
0x000000000004bd8d: mov eax, 0x3e; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002c2d8: mov eax, 0x3f800000; movd xmm0, eax; ret; 
0x000000000003a8a4: mov eax, 0x3f; syscall; 
0x000000000003a8a4: mov eax, 0x3f; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004c605: mov eax, 0x40; ret; 
0x0000000000022eee: mov eax, 0x40; syscall; 
0x0000000000022eee: mov eax, 0x40; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022f03: mov eax, 0x41; syscall; 
0x0000000000022f03: mov eax, 0x41; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022eaa: mov eax, 0x42; syscall; 
0x0000000000022f5a: mov eax, 0x43; syscall; 
0x0000000000022f5a: mov eax, 0x43; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022de4: mov eax, 0x44; syscall; 
0x0000000000022de4: mov eax, 0x44; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022dcc: mov eax, 0x47; syscall; 
0x0000000000022dcc: mov eax, 0x47; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000407ca: mov eax, 0x485a0005; lea eax, [rip + 0x5b4fb]; ret; 
0x000000000003c29d: mov eax, 0x48; mov edx, 1; syscall; 
0x00000000000229c0: mov eax, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000004c8e9: mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005d3c0: mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022ae8: mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x00000000000246b2: mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004efda: mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x0000000000022a3b: mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000004d2f5: mov eax, 0x48; mov rsi, r13; syscall; 
0x00000000000447bf: mov eax, 0x48; mov rsi, r14; syscall; 
0x0000000000041a79: mov eax, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa0: mov eax, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004d133: mov eax, 0x48; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x00000000000447d6: mov eax, 0x48; syscall; 
0x0000000000023f21: mov eax, 0x49; syscall; 
0x0000000000023f21: mov eax, 0x49; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005e017: mov eax, 0x4c; syscall; 
0x000000000005e017: mov eax, 0x4c; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d788: mov eax, 0x4d; syscall; 
0x000000000005d788: mov eax, 0x4d; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d7f5: mov eax, 0x4f; mov rdi, r12; syscall; 
0x000000000005d657: mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000005d2bc: mov eax, 0x50; syscall; 
0x000000000005d2bc: mov eax, 0x50; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000044837: mov eax, 0x51; syscall; 
0x00000000000509dd: mov eax, 0x52; syscall; 
0x00000000000509dd: mov eax, 0x52; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004cd10: mov eax, 0x53; syscall; 
0x000000000004cd10: mov eax, 0x53; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000509cb: mov eax, 0x54; syscall; 
0x000000000005dd89: mov eax, 0x54; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000509cb: mov eax, 0x54; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x000000000005da28: mov eax, 0x56; syscall; 
0x000000000005da28: mov eax, 0x56; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000051066: mov eax, 0x57; mov rdi, r12; syscall; 
0x00000000000509be: mov eax, 0x57; push rcx; syscall; 
0x000000000005e1a1: mov eax, 0x57; syscall; 
0x000000000005e1a1: mov eax, 0x57; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005df5b: mov eax, 0x58; syscall; 
0x000000000005df5b: mov eax, 0x58; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005dca4: mov eax, 0x59; syscall; 
0x000000000004c909: mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004c8a6: mov eax, 0x5a; syscall; 
0x000000000004c8a6: mov eax, 0x5a; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004c37c: mov eax, 0x5b000000; pop r12; ret; 
0x0000000000051168: mov eax, 0x5b000000; pop rbp; pop r12; pop r13; ret; 
0x000000000004c8d5: mov eax, 0x5b; syscall; 
0x000000000005d2d2: mov eax, 0x5c; syscall; 
0x000000000005d2d2: mov eax, 0x5c; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d6a4: mov eax, 0x5d; syscall; 
0x000000000005da16: mov eax, 0x5e; syscall; 
0x000000000005da16: mov eax, 0x5e; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000056f83: mov eax, 0x5f; ret; 
0x000000000004cf4a: mov eax, 0x5f; syscall; 
0x000000000004cf4a: mov eax, 0x5f; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005b8ca: mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000003914a: mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000003919e: mov eax, 0x62; syscall; 
0x000000000003919e: mov eax, 0x62; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000024783: mov eax, 0x63; syscall; 
0x000000000005cf15: mov eax, 0x64; syscall; 
0x000000000005cf15: mov eax, 0x64; syscall; ret; 
0x0000000000024431: mov eax, 0x65; syscall; 
0x00000000000446eb: mov eax, 0x66; syscall; 
0x000000000005d9a0: mov eax, 0x66; syscall; ret; 
0x000000000002401c: mov eax, 0x67; syscall; 
0x000000000002401c: mov eax, 0x67; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000446ce: mov eax, 0x68; syscall; 
0x000000000005d867: mov eax, 0x68; syscall; ret; 
0x00000000000446f5: mov eax, 0x69; syscall; 
0x00000000000446d8: mov eax, 0x6a; syscall; 
0x000000000005d41b: mov eax, 0x6b; syscall; 
0x000000000005d85f: mov eax, 0x6b; syscall; ret; 
0x000000000005d3f3: mov eax, 0x6c; syscall; 
0x000000000005d857: mov eax, 0x6c; syscall; ret; 
0x000000000005ddd5: mov eax, 0x6d; syscall; 
0x000000000005ddd5: mov eax, 0x6d; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000446b3: mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005d983: mov eax, 0x6e; syscall; 
0x000000000005d983: mov eax, 0x6e; syscall; ret; 
0x000000000004469b: mov eax, 0x70; syscall; 
0x000000000005d425: mov eax, 0x71; syscall; 
0x000000000005d401: mov eax, 0x72; syscall; 
0x000000000005d873: mov eax, 0x73; syscall; 
0x00000000000390eb: mov eax, 0x76; syscall; 
0x00000000000390d9: mov eax, 0x78; syscall; 
0x000000000005d960: mov eax, 0x79; syscall; 
0x000000000005d971: mov eax, 0x79; xor edi, edi; syscall; 
0x000000000005d971: mov eax, 0x79; xor edi, edi; syscall; ret; 
0x0000000000024519: mov eax, 0x7a; syscall; 
0x0000000000024505: mov eax, 0x7b; syscall; 
0x000000000005d98f: mov eax, 0x7c; syscall; 
0x0000000000023d02: mov eax, 0x7d; syscall; 
0x0000000000023cf0: mov eax, 0x7e; syscall; 
0x000000000004c4a6: mov eax, 0x7f; syscall; 
0x000000000002c310: mov eax, 0x7fffffff; and eax, dword ptr [rsp - 4]; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000002e75f: mov eax, 0x7fffffff; and eax, dword ptr [rsp - 4]; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x0000000000023f33: mov eax, 0x7fffffff; movsxd rdi, edi; cmp rdx, rax; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000002f8ef: mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x000000000001b336: mov eax, 0x81; syscall; 
0x0000000000058fcc: mov eax, 0x82; pop rbx; ret; 
0x000000000004c1bb: mov eax, 0x83; syscall; 
0x000000000004c1bb: mov eax, 0x83; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004cd52: mov eax, 0x85; syscall; 
0x000000000002427e: mov eax, 0x87; syscall; 
0x0000000000058ef1: mov eax, 0x88; syscall; 
0x000000000004cd9f: mov eax, 0x89; mov rdi, r8; syscall; 
0x0000000000025b5a: mov eax, 0x89fffffa; ret 0x3d; 
0x000000000004cdc6: mov eax, 0x8a; syscall; 
0x00000000000390b9: mov eax, 0x8c; syscall; 
0x000000000003a186: mov eax, 0x8d; syscall; 
0x0000000000059957: mov eax, 0x8e; syscall; 
0x000000000005873d: mov eax, 0x8f; mov rsi, r14; syscall; 
0x00000000000598b8: mov eax, 0x90; mov rdx, r12; syscall; 
0x0000000000058506: mov eax, 0x90; syscall; 
0x0000000000058753: mov eax, 0x91; syscall; 
0x000000000004b214: mov eax, 0x92; syscall; 
0x000000000004b214: mov eax, 0x92; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004b229: mov eax, 0x93; syscall; 
0x000000000004b229: mov eax, 0x93; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004b32e: mov eax, 0x94; syscall; 
0x000000000004b32e: mov eax, 0x94; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003addc: mov eax, 0x95; syscall; 
0x000000000003addc: mov eax, 0x95; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003afd6: mov eax, 0x96; syscall; 
0x000000000003afd6: mov eax, 0x96; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003adf1: mov eax, 0x97; syscall; 
0x000000000003adf1: mov eax, 0x97; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003afe8: mov eax, 0x98; syscall; 
0x000000000003afe8: mov eax, 0x98; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002481a: mov eax, 0x99; syscall; 
0x000000000002481a: mov eax, 0x99; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024290: mov eax, 0x9b; syscall; 
0x0000000000024290: mov eax, 0x9b; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024369: mov eax, 0x9d; syscall; 
0x0000000000023ccf: mov eax, 0x9e; syscall; 
0x0000000000023ccf: mov eax, 0x9e; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005a4d7: mov eax, 0x9e; syscall; ret; 
0x0000000000023d2a: mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000003a1a4: mov eax, 0xa0; syscall; 
0x000000000003a1a4: mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000023d14: mov eax, 0xa1; syscall; 
0x0000000000023d14: mov eax, 0xa1; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005df81: mov eax, 0xa2; syscall; 
0x000000000005df81: mov eax, 0xa2; syscall; ret; 
0x000000000005d241: mov eax, 0xa3; syscall; 
0x000000000005d241: mov eax, 0xa3; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005cba1: mov eax, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000024210: mov eax, 0xa5; syscall; 
0x0000000000024210: mov eax, 0xa5; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024224: mov eax, 0xa6; syscall; 
0x0000000000024224: mov eax, 0xa6; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024732: mov eax, 0xa7; syscall; 
0x0000000000024732: mov eax, 0xa7; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024744: mov eax, 0xa8; syscall; 
0x00000000000244a5: mov eax, 0xa9; syscall; 
0x00000000000244a5: mov eax, 0xa9; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003aedb: mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x00000000000245cf: mov eax, 0xaa; syscall; 
0x00000000000245cf: mov eax, 0xaa; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003a16c: mov eax, 0xab; syscall; 
0x000000000003a16c: mov eax, 0xab; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024004: mov eax, 0xac; syscall; 
0x0000000000024004: mov eax, 0xac; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000023fef: mov eax, 0xad; syscall; 
0x0000000000023fef: mov eax, 0xad; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000241e7: mov eax, 0xaf; syscall; 
0x00000000000241e7: mov eax, 0xaf; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000241fb: mov eax, 0xb0; syscall; 
0x0000000000024474: mov eax, 0xb3; syscall; 
0x000000000003b007: mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000005893b: mov eax, 0xb; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000059526: mov eax, 0xb; ret; 
0x000000000005a4df: mov eax, 0xb; syscall; 
0x0000000000043d98: mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000005a212: mov eax, 0xba; syscall; 
0x0000000000024488: mov eax, 0xbb; syscall; 
0x00000000000248db: mov eax, 0xbc; syscall; 
0x00000000000248db: mov eax, 0xbc; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000248f3: mov eax, 0xbd; syscall; 
0x00000000000248f3: mov eax, 0xbd; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002490e: mov eax, 0xbe; syscall; 
0x000000000002490e: mov eax, 0xbe; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002486e: mov eax, 0xbf; syscall; 
0x0000000000058ba5: mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000024880: mov eax, 0xc0; syscall; 
0x0000000000024895: mov eax, 0xc1; syscall; 
0x00000000000248a4: mov eax, 0xc2; syscall; 
0x00000000000248b3: mov eax, 0xc3; syscall; 
0x00000000000248c5: mov eax, 0xc4; syscall; 
0x0000000000024920: mov eax, 0xc5; syscall; 
0x0000000000024920: mov eax, 0xc5; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024932: mov eax, 0xc6; syscall; 
0x0000000000024932: mov eax, 0xc6; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000024947: mov eax, 0xc7; syscall; 
0x0000000000024947: mov eax, 0xc7; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005ce81: mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000022693: mov eax, 0xc8; syscall; 
0x00000000000574a3: mov eax, 0xc8; syscall; ret; 
0x000000000002833f: mov eax, 0xc; mov rdi, r12; syscall; 
0x000000000002836b: mov eax, 0xc; mov rdi, rbx; syscall; 
0x00000000000244e2: mov eax, 0xc; syscall; 
0x00000000000244e2: mov eax, 0xc; syscall; ret; 
0x000000000001b283: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b252: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000059366: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x0000000000057e0a: mov eax, 0xca; mov edx, 1; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dbb: mov eax, 0xca; mov edx, 1; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d421: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005725d: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000577a6: mov eax, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057112: mov eax, 0xca; mov edx, 1; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576ca: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570da: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000058f62: mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000058cfd: mov eax, 0xca; or esi, 7; syscall; 
0x000000000004b15b: mov eax, 0xcb; syscall; 
0x000000000004b15b: mov eax, 0xcb; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004b170: mov eax, 0xcb; syscall; neg eax; ret; 
0x000000000001e73c: mov eax, 0xcc; mov rdi, rcx; syscall; 
0x000000000004b1af: mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000004b17e: mov eax, 0xcc; syscall; 
0x000000000004f36f: mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000023de8: mov eax, 0xd5; mov edi, 1; syscall; 
0x00000000000244c0: mov eax, 0xd8; syscall; 
0x0000000000021bc1: mov eax, 0xd9; mov edx, 0x800; syscall; 
0x0000000000023f42: mov eax, 0xd9; syscall; 
0x0000000000022676: mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000004c03e: mov eax, 0xd; syscall; 
0x0000000000021ea3: mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000005808e: mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000033edf: mov eax, 0xdbfffeed; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x0000000000022f1b: mov eax, 0xdc; syscall; 
0x0000000000022bb1: mov eax, 0xdd; syscall; 
0x0000000000022bb1: mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000005cca8: mov eax, 0xde; mov rsi, rbx; syscall; 
0x000000000005cdda: mov eax, 0xde; syscall; 
0x000000000005cf04: mov eax, 0xdf; syscall; 
0x000000000005ced7: mov eax, 0xe0; syscall; 
0x000000000005ced7: mov eax, 0xe0; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005ceb1: mov eax, 0xe1; syscall; 
0x000000000005cba6: mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005ce94: mov eax, 0xe2; syscall; 
0x000000000005ce94: mov eax, 0xe2; syscall; ret; 
0x000000000005b948: mov eax, 0xe3; syscall; 
0x000000000005b948: mov eax, 0xe3; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005b8ad: mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000005b7ef: mov eax, 0xe5; movsxd rdi, r9d; syscall; 
0x000000000005b829: mov eax, 0xe5; syscall; 
0x0000000000022610: mov eax, 0xe7; syscall; 
0x0000000000023e47: mov eax, 0xe8; syscall; 
0x0000000000023e12: mov eax, 0xe9; syscall; 
0x0000000000023e12: mov eax, 0xe9; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004c742: mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004c742: mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x00000000000580aa: mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000005cd6f: mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000004bd37: mov eax, 0xe; syscall; 
0x000000000004bd37: mov eax, 0xe; syscall; ret; 
0x000000000004bd62: mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd62: mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000004d043: mov eax, 0xeb; mov rdi, r9; mov rsi, r8; syscall; 
0x000000000003b436: mov eax, 0xf0; syscall; 
0x000000000003b4eb: mov eax, 0xf1; syscall; 
0x000000000003b380: mov eax, 0xf4; mov dword ptr [rsp + 0x80], ebx; syscall; 
0x000000000003b29c: mov eax, 0xf4; mov rsi, r14; syscall; 
0x000000000003b473: mov eax, 0xf5; syscall; 
0x000000000003b473: mov eax, 0xf5; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004c826: mov eax, 0xf; syscall; 
0x0000000000023fa4: mov eax, 0xfd; syscall; 
0x0000000000023fa4: mov eax, 0xfd; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000023fc2: mov eax, 0xfe; syscall; 
0x0000000000023fda: mov eax, 0xff; syscall; 
0x00000000000574d1: mov eax, 0xffffff83; ret; 
0x000000000004b290: mov eax, 0xffffffda; pop rbp; pop r12; ret; 
0x000000000005755d: mov eax, 0xfffffffc; pop rdx; pop rbx; pop r12; ret; 
0x000000000004c1fa: mov eax, 0xfffffffe; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000017258: mov eax, 0xffffffff; add rsp, 0x18; ret; 
0x000000000005daab: mov eax, 0xffffffff; cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x0000000000022f70: mov eax, 0xffffffff; movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000019276: mov eax, 0xffffffff; ret; 
0x000000000004d3ff: mov eax, 1; mov eax, r8d; ret; 
0x000000000003bf41: mov eax, 1; mov rax, r8; ret; 
0x000000000004d3b7: mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000061a97: mov eax, 1; pop rcx; ret; 
0x0000000000039478: mov eax, 1; pop rdx; ret; 
0x00000000000191ec: mov eax, 1; ret; 
0x000000000004c175: mov eax, 1; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005d458: mov eax, 1; syscall; 
0x0000000000051044: mov eax, 2; mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x0000000000056c9b: mov eax, 2; pop rdx; ret; 
0x000000000005a57c: mov eax, 2; syscall; 
0x00000000000606b6: mov eax, 3; add byte ptr [rax], al; pop rax; ret; 
0x000000000005a5b1: mov eax, 3; mov rdi, rbp; syscall; 
0x0000000000021b9c: mov eax, 3; syscall; 
0x0000000000040ace: mov eax, 3; syscall; ret; 
0x000000000004cb5f: mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004076b: mov eax, 5; add byte ptr [rax], al; ret; 
0x000000000005a59a: mov eax, 5; mov rdi, rbp; syscall; 
0x000000000004cad8: mov eax, 5; mov rsi, rdx; syscall; 
0x000000000005aa08: mov eax, 6; cmovge rdx, rax; mov byte ptr [rcx + rdx], 0; ret; 
0x000000000005111f: mov eax, 6; mov rdi, r12; syscall; 
0x0000000000050fbe: mov eax, 6; mov rdi, r13; syscall; 
0x0000000000022090: mov eax, 7; mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000005da5d: mov eax, 8; syscall; 
0x000000000003ae6d: mov eax, 9; mov rdi, r12; mov rsi, r13; syscall; 
0x00000000000225c1: mov eax, dword ptr [0]; add rax, 0x34; ret; 
0x0000000000023f7f: mov eax, dword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000221ea: mov eax, dword ptr [0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580fa: mov eax, dword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004bec7: mov eax, dword ptr [0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000595d7: mov eax, dword ptr [0]; ret; 
0x0000000000024050: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000005d617: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000005a56d: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3e7: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000057e7b: mov eax, dword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004b9e0: mov eax, dword ptr [rax + 0x18]; pop rbx; sub eax, r10d; ret; 
0x000000000005cdd3: mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x0000000000023f86: mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000587a5: mov eax, dword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000023233: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006086c: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b12a]; pop rdx; pop rbp; pop r12; jmp rax; 
0x00000000000607de: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x000000000002321c: mov eax, dword ptr [rax + 8]; ret; 
0x000000000005083a: mov eax, dword ptr [rax + rax]; mov rax, r9; syscall; 
0x00000000000587ae: mov eax, dword ptr [rax + rdi*8]; ret; 
0x000000000002af66: mov eax, dword ptr [rax]; add bl, dh; addps xmm0, xmmword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x0000000000024367: mov eax, dword ptr [rax]; mov eax, 0x9d; syscall; 
0x00000000000279e6: mov eax, dword ptr [rax]; mov qword ptr [rsi], rax; mov qword ptr [rax + 8], rsi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000017786: mov eax, dword ptr [rax]; ret; 
0x000000000004635a: mov eax, dword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000004d52d: mov eax, dword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000058087: mov eax, dword ptr [rbx + 0x10]; test eax, eax; je 0x580a6; mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000056da3: mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x56dad; call rax; 
0x000000000001b8dd: mov eax, dword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000005769d: mov eax, dword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000019568: mov eax, dword ptr [rbx]; test eax, eax; jne 0x19560; xor eax, eax; pop rbx; ret; 
0x0000000000056d82: mov eax, dword ptr [rbx]; test rax, rax; je 0x56d8b; call rax; 
0x0000000000056e49: mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056e5b: mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056e6b: mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000027afb: mov eax, dword ptr [rdi + 0x20]; test rax, -0x1000; je 0x27b11; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027f73: mov eax, dword ptr [rdi + 0x20]; test rax, -0x1000; je 0x27f89; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000056e63: mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004dae1: mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x00000000000586d5: mov eax, dword ptr [rdi + 0x30]; not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004d7e8: mov eax, dword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x4d7f8; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004dad3: mov eax, dword ptr [rdi + 0x60]; ret; 
0x000000000001b3ee: mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000001b3ea: mov eax, dword ptr [rdi + 0x78]; ret; 
0x0000000000057d2f: mov eax, dword ptr [rdi + 0x8c]; test eax, eax; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000004dac6: mov eax, dword ptr [rdi + 0x90]; not eax; shr eax, 0x1f; ret; 
0x0000000000044cd6: mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056bdb: mov eax, dword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000056796: mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000005e41d: mov eax, dword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000056e52: mov eax, dword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000021aa2: mov eax, dword ptr [rdi + 8]; ret; 
0x0000000000019e19: mov eax, dword ptr [rdi + rcx*4]; mov r8d, dword ptr [rsi + rcx*4]; cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x0000000000056eb4: mov eax, dword ptr [rdi]; and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056ef1: mov eax, dword ptr [rdi]; and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000403c4: mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x000000000005aa16: mov eax, dword ptr [rdi]; bswap eax; ret; 
0x0000000000056efb: mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056e9f: mov eax, dword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000046354: mov eax, dword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000044cce: mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x0000000000021e66: mov eax, dword ptr [rdi]; ret; 
0x0000000000056ec0: mov eax, dword ptr [rdi]; shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000056ee4: mov eax, dword ptr [rdi]; shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004daae: mov eax, dword ptr [rdi]; shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x0000000000056eca: mov eax, dword ptr [rdi]; shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004daba: mov eax, dword ptr [rdi]; shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x0000000000056ed7: mov eax, dword ptr [rdi]; shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004c399: mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000004b664: mov eax, dword ptr [rdi]; test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x00000000000403bc: mov eax, dword ptr [rdi]; xchg al, ah; movzx eax, ax; ret; 
0x000000000004e8bf: mov eax, dword ptr [rdx + 0x20]; test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005a26c: mov eax, dword ptr [rdx + 0x30]; mov esi, 0x22; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004633c: mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000005f15d: mov eax, dword ptr [rip + 0x3ce4d]; mov qword ptr [rip + 0x3ce46], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005b88d: mov eax, dword ptr [rip + 0x3dbdd]; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000056f1d: mov eax, dword ptr [rip + 0x42581]; mov qword ptr [rbx + 8], rax; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x0000000000057d93: mov eax, dword ptr [rip + 0x442e3]; test eax, eax; je 0x57da6; dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x000000000003e497: mov eax, dword ptr [rip + 0x5ab0b]; ret; 
0x00000000000274ea: mov eax, dword ptr [rip + 0x74958]; test rax, rax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000023a8f: mov eax, dword ptr [rip + 0x78393]; pop rdx; ret; 
0x000000000003f22c: mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x0000000000019eaa: mov eax, dword ptr [rsi + 8]; mov dword ptr [rcx + 8], eax; mov rax, r8; ret; 
0x00000000000279f0: mov eax, dword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000019e1d: mov eax, dword ptr [rsi + rcx*4]; cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x000000000004c1cd: mov eax, dword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000056f6b: mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x0000000000058bde: mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000004c42e: mov eax, dword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000593eb: mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x0000000000032d72: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000045d97: mov eax, dword ptr [rsp + 0x10]; call rax; 
0x000000000005cb9c: mov eax, dword ptr [rsp + 0x10]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000045f4f: mov eax, dword ptr [rsp + 0x10]; mov rdi, r13; call rax; 
0x0000000000045cd0: mov eax, dword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x000000000002a556: mov eax, dword ptr [rsp + 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000004131f: mov eax, dword ptr [rsp + 0x10]; test eax, eax; jne 0x4132a; or eax, 0xffffffff; add rsp, 0x28; ret; 
0x0000000000039885: mov eax, dword ptr [rsp + 0x20]; mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000005a5e3: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x00000000000611bd: mov eax, dword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x0000000000021a98: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbp; ret; 
0x000000000004ed66: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004e231: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004f3ec: mov eax, dword ptr [rsp + 4]; pop rdx; ret; 
0x000000000004f2bc: mov eax, dword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004e91e: mov eax, dword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005cb6a: mov eax, dword ptr [rsp + 8]; call rax; 
0x000000000005cdcf: mov eax, dword ptr [rsp + 8]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000001b32d: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x000000000005a542: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a542: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000004f21c: mov eax, dword ptr [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000021d46: mov eax, dword ptr [rsp]; mov rdi, r15; call rax; 
0x000000000005da0a: mov eax, eax; add rsp, 0x18; ret; 
0x000000000005b7c2: mov eax, eax; add rsp, 0x28; ret; 
0x000000000004cae3: mov eax, eax; cmp eax, -9; jne 0x4cb81; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000569cb: mov eax, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x000000000005d597: mov eax, eax; mov eax, 3; syscall; 
0x000000000001815b: mov eax, eax; mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000005a5e0: mov eax, eax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000005802b: mov eax, eax; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000002298a: mov eax, eax; mov rdx, r10; syscall; 
0x00000000000229db: mov eax, eax; mov rdx, r9; syscall; 
0x00000000000229ff: mov eax, eax; mov rsi, r9; mov rdx, r10; syscall; 
0x00000000000572c9: mov eax, eax; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004d43c: mov eax, eax; mov rsi, rdx; syscall; 
0x000000000004d43c: mov eax, eax; mov rsi, rdx; syscall; ret; 
0x0000000000059fab: mov eax, eax; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x0000000000046984: mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000059f96: mov eax, eax; movzx esi, sil; shl esi, 7; or esi, 1; syscall; 
0x00000000000218db: mov eax, eax; pop rbp; pop r12; ret; 
0x000000000004f8bb: mov eax, eax; pop rbp; ret; 
0x00000000000278bf: mov eax, eax; pop rbx; pop r12; ret; 
0x00000000000510b3: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000044b75: mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000021ba9: mov eax, eax; pop rbx; ret; 
0x000000000003bf39: mov eax, eax; pop rdx; ret; 
0x000000000001795d: mov eax, eax; ret; 
0x0000000000059140: mov eax, eax; shl esi, 7; or esi, 1; syscall; 
0x0000000000019248: mov eax, eax; sub eax, edx; ret; 
0x000000000001b262: mov eax, eax; syscall; 
0x0000000000057e2a: mov eax, eax; syscall; pop rax; ret; 
0x0000000000057ddb: mov eax, eax; syscall; ret; 
0x00000000000576e5: mov eax, eax; syscall; xor eax, eax; ret; 
0x0000000000021b92: mov eax, eax; test rax, rax; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005107f: mov eax, eax; test rax, rax; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000418c8: mov eax, eax; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000004d2d5: mov eax, ebp; mov rdi, r14; syscall; 
0x00000000000572dc: mov eax, ebp; mov rdx, r12; syscall; 
0x000000000004d6b6: mov eax, ebp; mov rsi, rbp; syscall; 
0x0000000000056c3e: mov eax, ebp; mov rsi, rbx; syscall; 
0x0000000000022513: mov eax, ebp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000054e7e: mov eax, ebp; pop r12; pop r13; pop r14; ret; 
0x000000000001815d: mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x00000000000184dc: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001760f: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000058ca6: mov eax, ebp; syscall; 
0x0000000000018920: mov eax, ebx; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004d3d4: mov eax, ebx; mov rsi, rbp; syscall; 
0x000000000004b1d9: mov eax, ebx; pop rbx; neg eax; ret; 
0x000000000004c587: mov eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000181cc: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000004bf0b: mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000019579: mov eax, ebx; pop rbx; ret; 
0x000000000001964c: mov eax, ebx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x000000000004d3e7: mov eax, ebx; syscall; 
0x000000000005d390: mov eax, ecx; mov rsi, r8; syscall; 
0x00000000000569a1: mov eax, ecx; mov rsi, rbx; syscall; 
0x000000000004de0b: mov eax, ecx; mov rsi, rdx; syscall; 
0x000000000004f8b3: mov eax, ecx; mov rsi, rdx; syscall; mov eax, r8d; pop rbp; ret; 
0x000000000005d4c2: mov eax, ecx; movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r14; mov rdx, r13; syscall; 
0x000000000005e4b6: mov eax, ecx; pop rbp; pop r12; ret; 
0x000000000004546a: mov eax, ecx; pop rbx; pop rbp; ret; 
0x000000000001b22d: mov eax, ecx; syscall; 
0x00000000000217c2: mov eax, edi; and eax, 0x7f; ret; 
0x000000000003b543: mov eax, edi; and eax, 0xdfff; ret; 
0x000000000003ea82: mov eax, edi; and eax, 0xffffff; ret; 
0x0000000000024b3b: mov eax, edi; bswap eax; ret; 
0x0000000000055620: mov eax, edi; cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x00000000000217cb: mov eax, edi; cmp edx, 0x19; ja 0x217d5; or eax, 0x20; ret; 
0x00000000000217de: mov eax, edi; cmp edx, 0x19; ja 0x217e8; and eax, 0x5f; ret; 
0x0000000000055818: mov eax, edi; cqo; idiv rsi; ret; 
0x000000000003eaa8: mov eax, edi; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000005d3e3: mov eax, edi; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x00000000000580ce: mov eax, edi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000057f84: mov eax, edi; mov rdx, rsi; syscall; 
0x00000000000554c4: mov eax, edi; neg eax; cmovs eax, edi; ret; 
0x000000000005580d: mov eax, edi; neg rax; cmovs rax, rdi; ret; 
0x00000000000447ec: mov eax, edi; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000017de5: mov eax, edi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001723a: mov eax, edi; ret; 
0x0000000000059743: mov eax, edi; test edi, edi; js 0x59752; mov edx, 0xb; cmovne eax, edx; ret; 
0x0000000000024976: mov eax, edi; test esi, esi; je 0x2497e; bswap eax; ret; 
0x0000000000018eb8: mov eax, edi; test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x000000000003e51a: mov eax, edi; xchg al, ah; ret; 
0x000000000002c2d2: mov eax, edx; add eax, eax; je 0x2c2dd; mov eax, 0x3f800000; movd xmm0, eax; ret; 
0x00000000000381ea: mov eax, edx; add rax, rbx; pop rbx; ret; 
0x0000000000024696: mov eax, edx; jae 0x246ab; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000059513: mov eax, edx; lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b1: mov eax, edx; lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x00000000000195c5: mov eax, edx; mov eax, r8d; ret; 
0x0000000000057f68: mov eax, edx; mov rdx, r14; and esi, 0x80; or esi, 1; syscall; 
0x000000000005d3ac: mov eax, edx; mov rsi, r8; syscall; 
0x000000000003c757: mov eax, edx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005a7e2: mov eax, edx; pop rbx; pop rbp; ret; 
0x000000000005a7e8: mov eax, edx; ret; 
0x000000000004db20: mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x00000000000220c4: mov eax, edx; syscall; 
0x000000000004e718: mov eax, esi; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000041ac2: mov eax, esi; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000507b4: mov eax, esi; ret; 
0x0000000000019068: mov eax, esp; mov qword ptr [rip + 0x82e87], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004c9a2: mov eax, esp; mov rdx, r13; syscall; 
0x000000000004c9ff: mov eax, esp; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000019145: mov eax, esp; pop r12; pop r13; ret; 
0x0000000000018064: mov eax, esp; pop r12; ret; 
0x0000000000019118: mov eax, esp; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000004bb3d: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000003c2c5: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000019104: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000000018203: mov eax, esp; pop rbp; pop r12; ret; 
0x00000000000274cc: mov eax, esp; pop rbx; pop r12; pop r13; ret; 
0x000000000005d850: mov eax, esp; pop rbx; pop r12; pop rbp; ret; 
0x00000000000189ac: mov eax, esp; pop rbx; pop r12; ret; 
0x0000000000015230: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001881b: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039461: mov eax, esp; pop rdx; pop rbp; pop r12; ret; 
0x0000000000025854: mov eax, esp; pop rdx; pop rbx; pop r12; ret; 
0x000000000003eaf1: mov eax, esp; pop rsi; pop r12; ret; 
0x00000000000447b9: mov eax, esp; syscall; 
0x000000000003c756: mov eax, r10d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005a7e1: mov eax, r10d; pop rbx; pop rbp; ret; 
0x000000000005a7e7: mov eax, r10d; ret; 
0x000000000001b540: mov eax, r12d; pop r12; ret; 
0x000000000003c2c4: mov eax, r12d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000056bc3: mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000039d5b: mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000003b157: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000021930: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039460: mov eax, r12d; pop rdx; pop rbp; pop r12; ret; 
0x000000000004d29e: mov eax, r12d; pop rdx; pop rbx; pop r12; ret; 
0x0000000000022512: mov eax, r13d; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000000184db: mov eax, r13d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000041ac1: mov eax, r14d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005da09: mov eax, r8d; add rsp, 0x18; ret; 
0x000000000005b81d: mov eax, r8d; add rsp, 0x28; ret; 
0x00000000000218da: mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000004f8ba: mov eax, r8d; pop rbp; ret; 
0x0000000000044b74: mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000004df5c: mov eax, r8d; pop rbx; ret; 
0x00000000000195c7: mov eax, r8d; ret; 
0x0000000000019247: mov eax, r8d; sub eax, edx; ret; 
0x0000000000045469: mov eax, r9d; pop rbx; pop rbp; ret; 
0x000000000005dd36: mov ebp, 0x48fffc44; add esp, 0x18; ret; 
0x0000000000035636: mov ebp, 0x48fffecb; add esp, 0x18; ret; 
0x000000000005bf3b: mov ebp, 0x7716f980; and ecx, dword ptr [rax - 0x39]; ret 0xffe6; 
0x000000000005f3b1: mov ebp, 0x8c08348; mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x0000000000058c98: mov ebp, 0xca; xor edx, edx; or esi, 6; mov r10, rbx; mov rax, r13; syscall; 
0x0000000000020b86: mov ebp, 0xd9abfb41; sbb dword ptr [rdi], 0x48; mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000023a2f: mov ebp, 0xe80006fe; imul dword ptr [rdx - 0x76b7fffe]; add eax, 0x783d9; pop rax; ret; 
0x0000000000033a5f: mov ebp, 0xf25affff; cvtpi2ps xmm1, mm0; movaps xmm0, xmm1; ret; 
0x0000000000033ab0: mov ebp, 0xff3ffff; sub cl, al; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000004bce8: mov ebp, dword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004e715: mov ebp, eax; mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000005c0fc: mov ebp, ecx; add rax, rdx; jmp rax; 
0x000000000005c0f9: mov ebp, ecx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x000000000004e7a7: mov ebp, edx; test r12, r12; je 0x4e7c1; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000041a0a: mov ebp, esi; push rbx; mov rbx, rcx; syscall; 
0x000000000005c0fb: mov ebp, r9d; add rax, rdx; jmp rax; 
0x0000000000017f25: mov ebx, 0x480003e4; add eax, ebx; pop rbx; ret; 
0x000000000004b638: mov ebx, 0x48fffd6b; add esp, 0x18; ret; 
0x00000000000448a7: mov ebx, 0x88; call rax; 
0x0000000000057f64: mov ebx, 0x894cd6f7; ror byte ptr [rcx + rcx*4 - 0xe], 1; and esi, 0x80; or esi, 1; syscall; 
0x0000000000044087: mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x000000000005a593: mov ebx, eax; lea rsi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000004db5f: mov ebx, eax; mov rdi, rbp; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005cc9e: mov ebx, eax; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x0000000000043d92: mov ebx, eax; test eax, eax; jne 0x43dee; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x0000000000051060: mov ebx, eax; test eax, eax; js 0x51092; mov eax, 0x57; mov rdi, r12; syscall; 
0x0000000000041a0e: mov ebx, ecx; syscall; 
0x000000000005b889: mov ebx, edi; push rcx; mov rax, qword ptr [rip + 0x3dbdd]; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000024538: mov ebx, edi; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000017f22: mov ebx, edx; call 0x563e4; add rax, rbx; pop rbx; ret; 
0x000000000005db08: mov ebx, esi; mov eax, 0x125; movsxd rsi, esi; syscall; 
0x000000000005c0f2: mov ebx, esi; movsxd rax, dword ptr [rdx + rax*4]; mov r13, rcx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x0000000000041958: mov ebx, esi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x000000000005d387: mov ecx, 0x124; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x0000000000049ac0: mov ecx, 0x18c48348; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004cd96: mov ecx, 0x1e; xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdba: mov ecx, 0x1e; xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000044d4a: mov ecx, 0x20; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000032a4f: mov ecx, 0x48000633; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000004bb73: mov ecx, 0x48fffcb6; add esp, 0x18; ret; 
0x000000000004dc4b: mov ecx, 0x48fffff7; add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000000044d0b: mov ecx, 0x54; rep stosd dword ptr [rdi], eax; ret; 
0x000000000005b8e9: mov ecx, 0x5b5afffb; pop rbp; ret; 
0x000000000003d99e: mov ecx, 0x85ffffec; sar byte ptr [rdi + 3], 0xc6; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x00000000000275ae: mov ecx, 0xa8; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000056cd6: mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000042243: mov ecx, 0xc7480000; add eax, 0x59c5f; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000056c73: mov ecx, 0xc; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000057350: mov ecx, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000050827: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f891: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x0000000000058528: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4b: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x000000000004dded: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x0000000000029360: mov ecx, 0xff20006; pop rcx; ret 0xff2; 
0x0000000000023e2f: mov ecx, 8; mov eax, 0x119; syscall; 
0x00000000000198f0: mov ecx, dword ptr [rax]; test ecx, ecx; cmove rax, rdx; ret; 
0x000000000002cf45: mov ecx, dword ptr [rbx + 0xff30006]; pop rcx; retf 0xff3; pop rcx; ret 0xff3; 
0x000000000003a2f5: mov ecx, dword ptr [rcx]; syscall; 
0x0000000000056bd4: mov ecx, dword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x00000000000195e8: mov ecx, dword ptr [rsi + rdx]; mov dword ptr [rax + rdx], ecx; add rdx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x000000000005a547: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a547: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000003a2f0: mov ecx, dword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x0000000000017103: mov ecx, eax; cmp esi, 9; ja 0x170e0; ret; 
0x0000000000023e4e: mov ecx, eax; movsxd rdi, ecx; call 0x17230; pop rdx; ret; 
0x000000000005a506: mov ecx, ebx; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000246d4: mov ecx, ecx; mov eax, 0x113; syscall; 
0x0000000000023dbd: mov ecx, ecx; mov eax, 0x146; syscall; 
0x00000000000564da: mov ecx, edx; jne 0x564e9; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000003d433: mov ecx, edx; mov rdx, rsi; mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x0000000000055877: mov ecx, esi; or rax, r8; shl rdx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000558b7: mov ecx, esi; or rax, r8; shr rdx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x0000000000037b5d: mov ecx, esi; shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x000000000005a4d2: mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000005a4d2: mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x00000000000241ab: mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000241ab: mov edi, 0x10; xor esi, esi; syscall; ret; 
0x0000000000058ba9: mov edi, 0x44721f0; xor eax, eax; ret; 
0x0000000000022e3b: mov edi, 0x45; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000054859: mov edi, 0x48000418; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000053e03: mov edi, 0x48fffffc; lea edx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x000000000005d76d: mov edi, 0x4a; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005d743: mov edi, 0x4b; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000001e5f6: mov edi, 0x54; call 0x1e61e; pop rdx; ret; 
0x0000000000029eca: mov edi, 0x63480000; ret; 
0x000000000003ea90: mov edi, 0x77000000; add ecx, dword ptr [rdi]; mov bh, 0xc7; ret; 
0x000000000004c768: mov edi, 0x82; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000003eaa4: mov edi, 0x89000000; clc; ja 0x3eab0; shr eax, 0x10; ret; 
0x000000000005107b: mov edi, 0x8949ffff; ror byte ptr [rax - 0x7b], 0xc0; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005cecc: mov edi, 0xa4; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000004b325: mov edi, 0xc35afffc; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x0000000000036b34: mov edi, 0xdbfffeb6; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x58; ret; 
0x000000000002acb5: mov edi, 0xf30006ab; divps xmm0, xmm1; ret; 
0x0000000000045019: mov edi, 0xf7; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x00000000000217ca: mov edi, 0xfa83f889; sbb dword ptr [rdi + 3], esi; or eax, 0x20; ret; 
0x000000000002449a: mov edi, 0xfee1dead; push rax; mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x000000000004ca05: mov edi, 0xffffff9c; mov rdx, r13; syscall; 
0x000000000002d3dd: mov edi, 0xffffffa; sub al, cl; movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000004b30e: mov edi, 0xffffffda; call 0x17230; pop rdx; ret; 
0x0000000000023ce2: mov edi, 0xfffffff4; call 0x17230; pop rdx; ret; 
0x000000000004ca8d: mov edi, 0xfffffff7; call 0x17230; pop rdx; ret; 
0x00000000000581ce: mov edi, 1; shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x00000000000226aa: mov edi, 1; syscall; 
0x000000000004bd69: mov edi, 2; syscall; 
0x000000000004c747: mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000004bd69: mov edi, 2; syscall; ret; 
0x00000000000580af: mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x00000000000407c9: mov edi, dword ptr [rax + 0x485a0005]; lea eax, [rip + 0x5b4fb]; ret; 
0x000000000005cba0: mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000057e77: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000267ac: mov edi, dword ptr [rax]; call 0x2497f; test rax, rax; je 0x2679c; pop rbx; ret; 
0x000000000004b8d0: mov edi, dword ptr [rbp]; call rbx; 
0x00000000000448a6: mov edi, dword ptr [rbx + 0x88]; call rax; 
0x00000000000580bf: mov edi, dword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000057699: mov edi, dword ptr [rbx + 8]; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x000000000004b506: mov edi, dword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000001b899: mov edi, dword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000004e90c: mov edi, dword ptr [rcx]; lea rsi, [rsp + 8]; call rax; 
0x0000000000043b16: mov edi, dword ptr [rcx]; or edi, 1; mov dword ptr [rcx], edi; ret; 
0x000000000004bcf0: mov edi, dword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004d4d1: mov edi, dword ptr [rdi + 0x78]; call 0x1b52a; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000005cecb: mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x00000000000580d1: mov edi, dword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000044ca0: mov edi, dword ptr [rdi + 8]; test rdi, rdi; jne 0x44cab; xor eax, eax; ret; 
0x000000000002453c: mov edi, dword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000045a4b: mov edi, dword ptr [rdi]; test rdi, rdi; jne 0x45a53; ret; 
0x000000000004e8c8: mov edi, dword ptr [rdx]; jmp rax; 
0x000000000004e7af: mov edi, dword ptr [rsi]; mov rdx, r12; call rax; 
0x000000000005cb65: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000057a9f: mov edi, dword ptr [rsp + 0x40]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003b39c: mov edi, dword ptr [rsp + 8]; call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005a2ff: mov edi, dword ptr [rsp + 8]; call rbx; 
0x0000000000058011: mov edi, dword ptr [rsp + 8]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005802e: mov edi, dword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000001724f: mov edi, dword ptr [rsp + 8]; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x0000000000022e46: mov edi, eax; call 0x17230; add rsp, 0x18; ret; 
0x000000000003b015: mov edi, eax; call 0x17230; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022dec: mov edi, eax; call 0x17230; pop rdx; ret; 
0x00000000000580c5: mov edi, eax; call 0x57e31; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000022096: mov edi, eax; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x0000000000024565: mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000000446f3: mov edi, eax; mov eax, 0x69; syscall; 
0x00000000000446d6: mov edi, eax; mov eax, 0x6a; syscall; 
0x000000000005d423: mov edi, eax; mov eax, 0x71; syscall; 
0x000000000005d3ff: mov edi, eax; mov eax, 0x72; syscall; 
0x0000000000057360: mov edi, eax; mov rax, r9; syscall; 
0x000000000002267c: mov edi, eax; mov rdx, rcx; syscall; 
0x00000000000255e8: mov edi, eax; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000005703d: mov edi, eax; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000004cda5: mov edi, eax; syscall; 
0x000000000004cda5: mov edi, eax; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d3d0: mov edi, eax; syscall; movsxd rdi, r9d; call 0x17230; pop rdx; ret; 
0x000000000005a51f: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x000000000005a51f: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x0000000000044ceb: mov edi, eax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005d650: mov edi, ebp; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000004c902: mov edi, ebp; call 0x17080; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000059f37: mov edi, ebp; call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x000000000004db62: mov edi, ebp; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005cb5d: mov edi, ebp; call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004d514: mov edi, ebp; call qword ptr [rbp + 0x48]; 
0x000000000004dd4b: mov edi, ebp; call qword ptr [rbp + 0x50]; 
0x0000000000045f54: mov edi, ebp; call rax; 
0x000000000003988d: mov edi, ebp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000004db6a: mov edi, ebp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x0000000000045cd5: mov edi, ebp; mov r14d, 2; call rax; 
0x000000000005a5dd: mov edi, ebp; mov r8, rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000004d52a: mov edi, ebp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000045d94: mov edi, ebp; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000005711d: mov edi, ebp; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000570ea: mov edi, ebp; mov rax, r8; syscall; 
0x000000000004ddfd: mov edi, ebp; mov rax, r9; syscall; 
0x0000000000022141: mov edi, ebp; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x0000000000022104: mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000005d6e3: mov edi, ebp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c90f: mov edi, ebp; mov rsi, rbx; syscall; 
0x000000000004b2d8: mov edi, ebp; mov rsi, rdx; syscall; 
0x000000000004b284: mov edi, ebp; pop rbp; pop r12; jmp rcx; 
0x000000000005b873: mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000004f5ab: mov edi, ebp; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000039150: mov edi, ebp; syscall; 
0x0000000000040395: mov edi, ebx; call 0x40224; mov r10d, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004d8b0: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000004d4a6: mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000004f259: mov edi, ebx; call rax; 
0x000000000005fc97: mov edi, ebx; inc dword ptr [rbp - 0x16248b40]; ret; 
0x000000000004f18d: mov edi, ebx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000003b00d: mov edi, ebx; mov rsi, rbp; syscall; 
0x0000000000028371: mov edi, ebx; syscall; 
0x000000000003d8f5: mov edi, ebx; test rbx, rbx; jne 0x3d8ec; pop rbx; ret; 
0x0000000000044cb5: mov edi, ebx; test rbx, rbx; jne 0x44cac; xor eax, eax; pop rbx; ret; 
0x0000000000045a5d: mov edi, ebx; test rbx, rbx; jne 0x45a54; pop rbx; ret; 
0x000000000004d049: mov edi, ecx; mov rsi, r8; syscall; 
0x000000000001e742: mov edi, ecx; syscall; 
0x0000000000021d4a: mov edi, edi; call rax; 
0x0000000000023e66: mov edi, edi; mov eax, 0x122; syscall; 
0x00000000000587ab: mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000004cf47: mov edi, edi; push rax; mov eax, 0x5f; syscall; 
0x0000000000024516: mov edi, edi; push rax; mov eax, 0x7a; syscall; 
0x0000000000024502: mov edi, edi; push rax; mov eax, 0x7b; syscall; 
0x0000000000023eea: mov edi, edi; push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x000000000005cd75: mov edi, edx; syscall; 
0x000000000005d4cd: mov edi, esi; mov rdx, r13; syscall; 
0x000000000005d4b2: mov edi, esi; mov rsi, rbx; mov rdx, r13; syscall; 
0x0000000000023d30: mov edi, esi; syscall; 
0x000000000005058c: mov edi, esp; call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000004affb: mov edi, esp; call 0x5643b; mov rax, r12; pop r12; ret; 
0x0000000000043d83: mov edi, esp; call 0x56922; mov eax, 0x39; syscall; 
0x000000000005803f: mov edi, esp; call 0x569d4; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000059345: mov edi, esp; call 0x5767b; call rbx; 
0x000000000004e72d: mov edi, esp; dec dword ptr [rax - 0x77]; ret; 
0x00000000000557fd: mov edi, esp; mov al, 1; call 0x50c18; mov rax, r12; pop r12; ret; 
0x000000000005104f: mov edi, esp; mov edx, 0x180; syscall; 
0x00000000000607db: mov edi, esp; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x000000000004eb5b: mov edi, esp; mov rax, r9; syscall; 
0x0000000000041a07: mov edi, esp; mov rbp, rsi; push rbx; mov rbx, rcx; syscall; 
0x0000000000041a59: mov edi, esp; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000003af77: mov edi, esp; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae73: mov edi, esp; mov rsi, r13; syscall; 
0x0000000000028345: mov edi, esp; syscall; 
0x000000000004cb04: mov edx, 0x1000; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000004c99c: mov edx, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x000000000004d146: mov edx, 0x10720ae0; or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x0000000000058fdf: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000056d21: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cee: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000058bf3: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x58bec; ret; 
0x0000000000059a22: mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000246ad: mov edx, 0x11730be0; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000022ae3: mov edx, 0x117313e3; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000003c2aa: mov edx, 0x14730be3; movsxd rdi, r12d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x00000000000419c2: mov edx, 0x14730be3; movsxd rdi, r8d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000003c290: mov edx, 0x147313e3; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000004efb4: mov edx, 0x167313e3; movsxd rdi, dword ptr [r12 + 0x78]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000051051: mov edx, 0x180; syscall; 
0x000000000002c2f7: mov edx, 0x21483ff0; retf 0x948; shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x000000000005d3a6: mov edx, 0x21; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000004d41b: mov edx, 0x23731ee0; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004c9ca: mov edx, 0x2a0100; syscall; 
0x000000000001e14c: mov edx, 0x39483ff2; ret 0x1e76; 
0x000000000003417f: mov edx, 0x39483ff2; ret 0x676; 
0x0000000000033a2e: mov edx, 0x39483ff2; ret 0x976; 
0x0000000000022617: mov edx, 0x3c; mov rax, rdx; syscall; 
0x0000000000058046: mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000043aa2: mov edx, 0x48000585; sub eax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000002a539: mov edx, 0x48ffff7c; add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000043d99: mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x000000000001b288: mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b257: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000001b222: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000057355: mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x000000000005936b: mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000576d4: mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570e4: mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000005d5e2: mov edx, 0x80000000; syscall; 
0x0000000000041aad: mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005db6f: mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000021bc6: mov edx, 0x800; syscall; 
0x00000000000246bc: mov edx, 0x800; syscall; call 0x17230; pop rdx; ret; 
0x000000000005b854: mov edx, 0x8948fffb; ret 0x8d48; 
0x0000000000024692: mov edx, 0x894d13e2; sal byte ptr [rbx + 0x11], 1; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004f29c: mov edx, 0x89ffffe0; ret; 
0x000000000001e0e6: mov edx, 0x9483ff2; ret; 
0x0000000000059749: mov edx, 0xb; cmovne eax, edx; ret; 
0x000000000002d612: mov edx, 0xd8000667; ret 0xcad8; 
0x0000000000057e0f: mov edx, 1; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dc0: mov edx, 1; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d2f0: mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004e744: mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000005082c: mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f896: mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d426: mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005852d: mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb50: mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x0000000000057262: mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf2: mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000577ab: mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000022a15: mov edx, 1; mov rax, r8; syscall; 
0x000000000005db47: mov edx, 1; mov rax, r9; syscall; 
0x000000000005d3ca: mov edx, 1; mov rdi, r8; syscall; 
0x000000000004dd45: mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x0000000000057117: mov edx, 1; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d8aa: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d4a0: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005dcfd: mov edx, 1; mov rdx, r8; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000005dc9c: mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000004d530: mov edx, 1; pop rbp; jmp rax; 
0x0000000000022af2: mov edx, 1; syscall; 
0x0000000000057b60: mov edx, 1; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000004d5d4: mov edx, 2; syscall; 
0x000000000005041d: mov edx, 3; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x00000000000448d9: mov edx, 4; mov rax, r8; syscall; 
0x000000000005d5bb: mov edx, 4; syscall; 
0x000000000004bd43: mov edx, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd29: mov edx, 8; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000002466c: mov edx, 8; mov eax, 0x121; syscall; 
0x000000000004c039: mov edx, 8; mov eax, 0xd; syscall; 
0x000000000004c73d: mov edx, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005cd6a: mov edx, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000599d4: mov edx, 8; mov eax, 0xe; syscall; 
0x000000000004bd5d: mov edx, 8; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x00000000000580b7: mov edx, 8; syscall; 
0x00000000000580b7: mov edx, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004f335: mov edx, dword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000043d9f: mov edx, dword ptr [0]; syscall; 
0x00000000000580e8: mov edx, dword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000056bd7: mov edx, dword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000057e74: mov edx, dword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004381e: mov edx, dword ptr [rax]; xor eax, eax; call 0x4ea2e; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004f27b: mov edx, dword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x0000000000019f71: mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001a030: mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; sub rsi, 1; jae 0x1a030; ret; 
0x000000000004db2c: mov edx, dword ptr [rdi + 0x10]; cmp rax, rdx; je 0x4db3b; sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000046332: mov edx, dword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000046344: mov edx, dword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000004e8b8: mov edx, dword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004b681: mov edx, dword ptr [rdi + 8]; test rdx, rdx; je 0x4b68c; mov qword ptr [rdx], rax; ret; 
0x000000000001a01f: mov edx, dword ptr [rdx + 8]; mov dword ptr [r9 + 8], edx; ret; 
0x00000000000266f1: mov edx, dword ptr [rsi + rdx*8]; test rdx, rdx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x0000000000046357: mov edx, dword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000022144: mov edx, dword ptr [rsp + 8]; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000005d6e9: mov edx, dword ptr [rsp + 8]; syscall; 
0x000000000004bd1b: mov edx, dword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000019f70: mov edx, dword ptr es:[rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x00000000000390cd: mov edx, eax; mov eax, 0x14; sub eax, edx; pop rdx; ret; 
0x000000000003e575: mov edx, eax; mov eax, 3; syscall; 
0x000000000005a53c: mov edx, eax; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000004039d: mov edx, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005dd03: mov edx, eax; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000023e81: mov edx, eax; movsxd rdi, edx; call 0x17230; pop rdx; ret; 
0x0000000000043a70: mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000001d107: mov edx, eax; shr rax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000022bcc: mov edx, eax; syscall; 
0x0000000000022bcc: mov edx, eax; syscall; neg eax; ret; 
0x000000000005f362: mov edx, eax; xor eax, eax; call rdx; 
0x000000000005933b: mov edx, ebp; lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000004c548: mov edx, ebp; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x000000000004ca2b: mov edx, ebp; mov eax, 0x10c; mov rsi, r14; syscall; 
0x0000000000022107: mov edx, ebp; mov rsi, r12; call rbx; 
0x0000000000041a5c: mov edx, ebp; movsxd rsi, esi; syscall; 
0x000000000004c9a5: mov edx, ebp; syscall; 
0x0000000000058ca3: mov edx, ebx; mov rax, r13; syscall; 
0x000000000004f604: mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000003af7d: mov edx, ebx; syscall; 
0x000000000002479b: mov edx, ecx; mov eax, 0x114; syscall; 
0x000000000002475a: mov edx, ecx; mov eax, 0x115; syscall; 
0x000000000002482f: mov edx, ecx; mov eax, 0x116; syscall; 
0x000000000002486c: mov edx, ecx; mov eax, 0xbf; syscall; 
0x000000000002487e: mov edx, ecx; mov eax, 0xc0; syscall; 
0x000000000005a53f: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a53f: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000005d71a: mov edx, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x00000000000243c3: mov edx, ecx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x00000000000243ae: mov edx, ecx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x0000000000024890: mov edx, ecx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000024429: mov edx, ecx; movsxd rdi, edi; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000246cb: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023db4: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x00000000000244eb: mov edx, ecx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000002420d: mov edx, ecx; push rax; mov eax, 0xa5; syscall; 
0x000000000004cd64: mov edx, ecx; push rax; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x00000000000248d5: mov edx, ecx; push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x00000000000248ed: mov edx, ecx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022f15: mov edx, ecx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000002424b: mov edx, ecx; push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x0000000000024905: mov edx, ecx; push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x00000000000244b7: mov edx, ecx; push rax; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000005dd6e: mov edx, ecx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024851: mov edx, ecx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x000000000002446b: mov edx, ecx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000023ed0: mov edx, ecx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x00000000000247c5: mov edx, ecx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000024393: mov edx, ecx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x00000000000220a1: mov edx, ecx; syscall; 
0x000000000004bd40: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd26: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023dd8: mov edx, edi; syscall; 
0x000000000003b4cd: mov edx, edx; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000004cd25: mov edx, edx; mov eax, 0x102; syscall; 
0x000000000005d2d0: mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005da14: mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023fc0: mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000229cb: mov edx, edx; mov rax, r8; syscall; 
0x000000000004cd67: mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000022bbf: mov edx, edx; movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x000000000004c962: mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x00000000000241d2: mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x000000000002298d: mov edx, edx; syscall; 
0x0000000000057f6b: mov edx, esi; and esi, 0x80; or esi, 1; syscall; 
0x000000000003d436: mov edx, esi; mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x00000000000568b8: mov edx, esi; movsxd rdi, edi; push rax; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000056906: mov edx, esi; movsxd rdi, edi; push rax; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000057f87: mov edx, esi; syscall; 
0x0000000000017805: mov edx, esi; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x000000000004e7b2: mov edx, esp; call rax; 
0x000000000004d195: mov edx, esp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005d9c5: mov edx, esp; mov eax, 0x10; syscall; 
0x000000000003988a: mov edx, esp; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000004f187: mov edx, esp; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x00000000000572df: mov edx, esp; syscall; 
0x0000000000039889: mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000004f186: mov edx, r12d; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000059958: mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000002ccee: mov es, word ptr [rbp + 0xff20006]; pop rcx; ret; 
0x0000000000019834: mov es, word ptr [rbp - 0x6af0be40]; ret 0x3944; 
0x00000000000309ae: mov es, word ptr [rbx + 6]; add dl, dh; addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000019e1f: mov es, word ptr [rcx + rdi - 0x40]; je 0x19e10; sub eax, r8d; ret; 
0x000000000001bcd2: mov es, word ptr [rdi]; add byte ptr [rdx - 0xe], bl; subps xmm0, xmm2; ret; 
0x0000000000043093: mov es, word ptr [rip - 0x74bc0000]; and byte ptr [rax - 0x77], cl; ret; 
0x0000000000022975: mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000058eea: mov esi, 0x18; lea rdi, [r8 + 0x88]; syscall; 
0x0000000000057fec: mov esi, 0x18; syscall; 
0x000000000005ce8a: mov esi, 0x20; syscall; 
0x000000000005ce8a: mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000005749e: mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000005749e: mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000005a26f: mov esi, 0x22; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000244a0: mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x0000000000047bed: mov esi, 0x30ea8310; cmp edx, 9; ja 0x47bff; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x00000000000229c5: mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000041b35: mov esi, 0x48fffe06; add esp, 0x28; ret; 
0x00000000000568be: mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000004d19c: mov esi, 0x5413; syscall; 
0x000000000005690c: mov esi, 0x5414; mov eax, 0x10; syscall; 
0x00000000000220b6: mov esi, 0x8002; test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000039d00: mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000051049: mov esi, 0x80c2; mov rdi, r12; mov edx, 0x180; syscall; 
0x0000000000050831: mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f89b: mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000001b28d: mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b25c: mov esi, 0x81; mov rax, r8; syscall; 
0x000000000001b227: mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb55: mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x000000000005735a: mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000057267: mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddf7: mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x0000000000057b67: mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000004d2cf: mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x000000000004f376: mov esi, 0xc0; ret; 
0x000000000004b358: mov esi, 0xc35afffc; push rax; mov eax, 0x18; syscall; 
0x0000000000016710: mov esi, 0xd9000000; ror dword ptr [rax - 0x7d], 0xeb; add eax, ebx; loope 0x166fb; ret 0x8341; 
0x000000000002569e: mov esi, 0xf000662; mov bh, 4; push rax; ret; 
0x000000000004595e: mov esi, 0xf6000000; ret; 
0x0000000000018eb5: mov esi, 0xf8894836; test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x0000000000025545: mov esi, 0xff480143; ret; 
0x00000000000576cf: mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570df: mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000057f7e: mov esi, 1; mov rax, r15; mov rdx, rsi; syscall; 
0x000000000001b26c: mov esi, 1; mov rax, r8; syscall; 
0x00000000000592d7: mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000595a5: mov esi, 1; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001b237: mov esi, 1; mov rax, r9; syscall; 
0x000000000004c8ee: mov esi, 1; syscall; 
0x000000000003d438: mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x0000000000045cd8: mov esi, 2; call rax; 
0x000000000003c298: mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x0000000000022a10: mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000005db42: mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000005d3c5: mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000022aed: mov esi, 2; mov edx, 1; syscall; 
0x000000000004d13b: mov esi, 3; mov rax, r8; syscall; 
0x0000000000057b77: mov esi, 3; mov rax, rbx; syscall; 
0x0000000000041aa8: mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000005db6a: mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x00000000000246b7: mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004d14e: mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004efdf: mov esi, 4; movsxd rdx, ebx; syscall; 
0x00000000000591c2: mov esi, 6; syscall; 
0x000000000004c4a0: mov esi, 8; push rax; mov eax, 0x7f; syscall; 
0x0000000000022984: mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x000000000002455f: mov esi, 9; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000045f4b: mov esi, dword ptr [r14]; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; call rax; 
0x000000000005d436: mov esi, dword ptr [rax + 8]; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x0000000000045d91: mov esi, dword ptr [rax]; mov rdi, r13; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000004489f: mov esi, dword ptr [rbx + 0xa0]; mov rdi, qword ptr [rbx + 0x88]; call rax; 
0x000000000002453f: mov esi, dword ptr [rbx + 8]; syscall; 
0x0000000000019f88: mov esi, dword ptr [rcx + rdx*4]; mov dword ptr [rax + rdx*4], esi; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x000000000004bcec: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x00000000000567ec: mov esi, dword ptr [rdi + 8]; and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000057cfa: mov esi, dword ptr [rdi]; and esi, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000045f4c: mov esi, dword ptr [rsi]; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; call rax; 
0x000000000005e3e6: mov esi, eax; add rsp, 0x190; jmp rax; 
0x0000000000045d8d: mov esi, eax; jne 0x45dbc; mov esi, dword ptr [rax]; mov rdi, r13; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000005dca2: mov esi, eax; mov eax, 0x59; syscall; 
0x0000000000058cfb: mov esi, eax; mov eax, 0xca; or esi, 7; syscall; 
0x000000000004e712: mov esi, eax; mov r13d, eax; mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000002268d: mov esi, eax; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004ca37: mov esi, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004d04c: mov esi, eax; syscall; 
0x000000000004f607: mov esi, ebp; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004f18a: mov esi, ebp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000003af7a: mov esi, ebp; mov rdx, rbx; syscall; 
0x000000000003ae76: mov esi, ebp; syscall; 
0x000000000004b8c3: mov esi, ebx; call 0x4b8a7; test rbx, rbx; je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000005d6e6: mov esi, ebx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000005d4b5: mov esi, ebx; mov rdx, r13; syscall; 
0x00000000000255eb: mov esi, ebx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000004c912: mov esi, ebx; syscall; 
0x0000000000017101: mov esi, ecx; mov ecx, eax; cmp esi, 9; ja 0x170e0; ret; 
0x0000000000022a02: mov esi, ecx; mov rdx, r10; syscall; 
0x000000000004cfa3: mov esi, ecx; mov rdx, r8; syscall; 
0x00000000000572cc: mov esi, ecx; mov rdx, rbx; syscall; 
0x0000000000039c56: mov esi, edi; dec dword ptr [rcx + 0x5ac03128]; pop rbx; pop rbp; ret; 
0x0000000000039c7c: mov esi, edi; inc dword ptr [rbx + 0x6751c38]; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000003a19c: mov esi, edi; jg 0x3a1b0; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000005a4d0: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000005a4d0: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x00000000000607d8: mov esi, edi; mov rdi, r12; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x000000000005d64d: mov esi, edi; mov rdi, rbp; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x00000000000447d1: mov esi, edi; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000005e8cd: mov esi, edx; call 0x23016; add rsp, 0xd8; ret; 
0x000000000004b2db: mov esi, edx; syscall; 
0x000000000004f8b6: mov esi, edx; syscall; mov eax, r8d; pop rbp; ret; 
0x000000000004d43f: mov esi, edx; syscall; ret; 
0x0000000000059fae: mov esi, edx; syscall; xor eax, eax; ret; 
0x000000000004c738: mov esi, edx; xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000023eed: mov esi, esi; mov eax, 0x12c; syscall; 
0x00000000000390b7: mov esi, esi; mov eax, 0x8c; syscall; 
0x00000000000590e8: mov esi, esi; mov eax, 0xca; or esi, 7; syscall; 
0x000000000004ca02: mov esi, esi; mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000026e3e: mov esi, esi; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x000000000003a181: mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000241b5: mov esi, esi; push rax; mov eax, 0x13f; syscall; 
0x000000000004cd0d: mov esi, esi; push rax; mov eax, 0x53; syscall; 
0x000000000004c8a3: mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000004cd4f: mov esi, esi; push rax; mov eax, 0x85; syscall; 
0x00000000000241f8: mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x000000000005d2cd: mov esi, esi; push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005da11: mov esi, esi; push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023f00: mov esi, esi; push rax; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x000000000003b2a2: mov esi, esi; syscall; 
0x000000000002210a: mov esi, esp; call rbx; 
0x000000000004d5cd: mov esi, esp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000005111d: mov esi, esp; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000226a8: mov esi, esp; mov edi, 1; syscall; 
0x000000000005b871: mov esi, esp; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000004b281: mov esi, esp; mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x000000000005d5d8: mov esi, esp; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000590e7: mov esi, r14d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000058cfa: mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000038272: mov esp, 0x1478dff; ret; 
0x000000000004504e: mov esp, 0x48000119; mov edi, eax; call 0x17230; add rsp, 0x18; ret; 
0x00000000000614e0: mov esp, 0x8824; add al, ch; ret; 
0x00000000000159b3: mov esp, 0xaf0f4560; ret; 
0x000000000003c7ab: mov esp, 0xffc88341; mov eax, r8d; ret; 
0x000000000004bce4: mov esp, dword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004bcf4: mov esp, dword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004db6d: mov esp, eax; call qword ptr [rbp + 0x18]; 
0x000000000002192e: mov esp, eax; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000058748: mov esp, eax; neg r12d; jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000003b334: mov esp, eax; test eax, eax; je 0x3b351; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004e75f: mov esp, eax; test rax, rax; jne 0x4e770; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000611c5: mov esp, ebx; jmp rax; 
0x0000000000018363: mov esp, edi; call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b3: mov esp, edi; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000005d7f3: mov esp, esp; mov eax, 0x4f; mov rdi, r12; syscall; 
0x0000000000059338: mov esp, esp; mov rdx, rbp; lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000002ab0e: mov fs, word ptr [rsi + rax + 0x590ff200]; ret 0xff2; 
0x0000000000054e78: mov qword ptr [r12 + 0x28], rax; mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000005bbf6: mov qword ptr [r12 + 0x30], rax; mov rax, r12; pop r12; ret; 
0x000000000005a5e7: mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000003bcda: mov qword ptr [r12], rbp; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000001913c: mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x000000000001911b: mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000005f49f: mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000004b9dd: mov qword ptr [r9], rax; mov eax, dword ptr [rax + 0x18]; pop rbx; sub eax, r10d; ret; 
0x00000000000221f1: mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x000000000005ef36: mov qword ptr [rax + 0x68], rdi; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x00000000000580ef: mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000058101: mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005e761: mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000005e768: mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000004f36d: mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004b66b: mov qword ptr [rax + 8], rdi; ret; 
0x0000000000051580: mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000051599: mov qword ptr [rax + 8], rsi; fld xword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000279eb: mov qword ptr [rax + 8], rsi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x000000000005146c: mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x0000000000022455: mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000004726e: mov qword ptr [rax], -1; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x000000000004fcee: mov qword ptr [rax], r12; call 0x4fcc7; mov rax, r12; pop r12; ret; 
0x00000000000279f3: mov qword ptr [rax], rsi; ret; 
0x0000000000044b22: mov qword ptr [rbp + 8], rbx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000465aa: mov qword ptr [rbp], rax; pop rdx; pop rbx; pop rbp; ret; 
0x000000000003d4af: mov qword ptr [rbp], rbx; pop rax; pop rbx; pop rbp; ret; 
0x0000000000021ed7: mov qword ptr [rbx + 0x10], rbx; mov qword ptr [rbx + 0x18], rbx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; pop rbx; ret; 
0x000000000004d82b: mov qword ptr [rbx + 0x10], rdx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x0000000000021edb: mov qword ptr [rbx + 0x18], rbx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; pop rbx; ret; 
0x0000000000021edf: mov qword ptr [rbx + 0x20], rax; xor eax, eax; pop rbx; ret; 
0x000000000004f197: mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000004f18f: mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000005f16a: mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000057e7e: mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000046322: mov qword ptr [rbx + 8], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004f1cc: mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000056f23: mov qword ptr [rbx + 8], rax; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x0000000000044bc4: mov qword ptr [rbx + 8], rax; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000044b6f: mov qword ptr [rbx + 8], rax; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000596de: mov qword ptr [rbx + 8], rdx; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x000000000004d832: mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000003a9a5: mov qword ptr [rbx], 0; pop rax; pop rbx; pop rbp; ret; 
0x000000000004b50d: mov qword ptr [rbx], 0; pop rbx; ret; 
0x00000000000586c8: mov qword ptr [rbx], r12; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000001776f: mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000004df56: mov qword ptr [rbx], rax; xor r8d, r8d; mov eax, r8d; pop rbx; ret; 
0x00000000000189a4: mov qword ptr [rbx], rdx; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000000596db: mov qword ptr [rbx], rsi; mov qword ptr [rbx + 8], rdx; call 0x56cc1; xor eax, eax; pop rbx; ret; 
0x00000000000275ac: mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x000000000001560e: mov qword ptr [rcx + r15 - 0x40], -0x7cb6f584; call qword ptr [rcx]; 
0x0000000000051473: mov qword ptr [rcx], rax; ret; 
0x000000000004db03: mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000056fd2: mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x00000000000580eb: mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000056fb2: mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000002026f: mov qword ptr [rdi + 0x18], rax; movabs rax, 0x5be0cd191f83d9ab; mov qword ptr [rdi + 0x20], rax; ret; 
0x000000000002027d: mov qword ptr [rdi + 0x20], rax; ret; 
0x000000000004d878: mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000004dafb: mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004d870: mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x00000000000507ae: mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000004ebc9: mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], r8b; ret; 
0x0000000000020b7f: mov qword ptr [rdi + 0x30], rax; movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004bd16: mov qword ptr [rdi + 0x30], rdx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004daf3: mov qword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000004d86c: mov qword ptr [rdi + 0x38], rax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000020b8d: mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004bd1e: mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000020b9b: mov qword ptr [rdi + 0x40], rax; ret; 
0x000000000004f42d: mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000004f3b3: mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000017159: mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000004b646: mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000004db0b: mov qword ptr [rdi + 8], 0; ret; 
0x0000000000044cc0: mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x0000000000056107: mov qword ptr [rdi + 8], rax; mov al, byte ptr [r8]; mov byte ptr [rsi], al; mov eax, 1; ret; 
0x000000000005587f: mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x000000000004de50: mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000558c2: mov qword ptr [rdi + 8], rdx; ret; 
0x0000000000056f54: mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x00000000000564c2: mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000564bd: mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000564b8: mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x00000000000564b3: mov qword ptr [rdi + rdx - 0x3f], rax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000004b64e: mov qword ptr [rdi], 0; ret; 
0x000000000004c209: mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x00000000000558bf: mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000004c1d2: mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005a982: mov qword ptr [rdi], rdx; call 0x5a8b6; mov dword ptr [r9 + 0x10], eax; ret; 
0x0000000000052d5b: mov qword ptr [rdi], rdx; ret; 
0x0000000000056fad: mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x00000000000279fe: mov qword ptr [rdi], rsi; ret; 
0x000000000004fcea: mov qword ptr [rdx + 0x68], r12; mov qword ptr [rax], r12; call 0x4fcc7; mov rax, r12; pop r12; ret; 
0x0000000000057492: mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000004f33c: mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f32b: mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000057778: mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x000000000004b689: mov qword ptr [rdx], rax; ret; 
0x0000000000056e94: mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x00000000000599b7: mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005e7ae: mov qword ptr [rip + 0x3b183], rax; ret; 
0x00000000000606b2: mov qword ptr [rip + 0x3b8ab], 0; pop rax; ret; 
0x000000000005f163: mov qword ptr [rip + 0x3ce46], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005ef3a: mov qword ptr [rip + 0x3d077], rdi; ret; 
0x00000000000508e2: mov qword ptr [rip + 0x48a5f], rcx; mov byte ptr [rdx], dil; ret; 
0x00000000000508a9: mov qword ptr [rip + 0x48a98], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000004f92e: mov qword ptr [rip + 0x498f3], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004f903: mov qword ptr [rip + 0x4991e], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000043a35: mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x0000000000043a18: mov qword ptr [rip + 0x584b9], rax; ret; 
0x0000000000042d9e: mov qword ptr [rip + 0x5911f], 0; ret; 
0x0000000000042d91: mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042253: mov qword ptr [rip + 0x59c52], 0; ret; 
0x0000000000042246: mov qword ptr [rip + 0x59c5f], 0; pop rdx; ret; 
0x000000000002835d: mov qword ptr [rip + 0x71b94], rbx; add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x0000000000023a38: mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x00000000000239ea: mov qword ptr [rip + 0x78423], 0; ret; 
0x00000000000239dd: mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x0000000000022459: mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000002244a: mov qword ptr [rip + 0x7998f], rax; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x000000000001906a: mov qword ptr [rip + 0x82e87], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004f374: mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000279f7: mov qword ptr [rsi + 8], rsi; mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x000000000005e420: mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000056e97: mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x00000000000279e8: mov qword ptr [rsi], rax; mov qword ptr [rax + 8], rsi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000056e55: mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000005a510: mov qword ptr [rsi], rcx; syscall; 
0x000000000004b660: mov qword ptr [rsi], rdi; mov rax, qword ptr [rdi]; test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004db37: mov qword ptr [rsi], rdx; ret; 
0x00000000000279fb: mov qword ptr [rsi], rsi; mov qword ptr [rdi], rsi; ret; 
0x000000000002435e: mov qword ptr [rsp + 0x10], rax; add rax, rcx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x00000000000392fe: mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000022e9c: mov qword ptr [rsp + 0x10], rax; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000024057: mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000005cdc9: mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 8]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000003911e: mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d61e: mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000004bfb2: mov qword ptr [rsp + 0x28], rax; mov eax, 0xe; syscall; 
0x000000000005cd64: mov qword ptr [rsp + 0x28], rax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000443b5: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8ce: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000001b8df: mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000005d69d: mov qword ptr [rsp + 0x38], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000001b327: mov qword ptr [rsp + 0x5c], rax; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x000000000001b331: mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x00000000000581d7: mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x000000000005a574: mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005a54b: mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a54b: mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000005f3b6: mov qword ptr [rsp + 8], rax; call qword ptr [rax - 8]; 
0x00000000000392f4: mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x000000000005d3ee: mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000005d9bd: mov qword ptr [rsp + 8], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000005d6b8: mov qword ptr [rsp + 8], rdx; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000003bcec: mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x00000000000279fd: mov qword ptr ss:[rdi], rsi; ret; 
0x000000000005a53e: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a53e: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000058ca2: mov r10, rbx; mov rax, r13; syscall; 
0x000000000002486b: mov r10, rcx; mov eax, 0xbf; syscall; 
0x000000000002487d: mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000000243c2: mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x00000000000243ad: mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x000000000002488f: mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000024428: mov r10, rcx; movsxd rdi, edi; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000246ca: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023db3: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x00000000000244ea: mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000002420c: mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x000000000004cd63: mov r10, rcx; push rax; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x00000000000248d4: mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x00000000000248ec: mov r10, rcx; push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022f14: mov r10, rcx; push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000002424a: mov r10, rcx; push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x0000000000024904: mov r10, rcx; push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x00000000000244b6: mov r10, rcx; push rax; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000005dd6d: mov r10, rcx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024850: mov r10, rcx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x000000000002446a: mov r10, rcx; push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000023ecf: mov r10, rcx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x00000000000247c4: mov r10, rcx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000024392: mov r10, rcx; push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000022bbe: mov r10, rdx; movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x000000000004cb03: mov r10d, 0x1000; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000004c99b: mov r10d, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x000000000005dcfc: mov r10d, 1; mov rdx, r8; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000057b5f: mov r10d, 1; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000004bd42: mov r10d, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd28: mov r10d, 8; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004c038: mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000004c73c: mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005cd69: mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000599d3: mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000004bd5c: mov r10d, 8; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x00000000000580b6: mov r10d, 8; syscall; 
0x00000000000580b6: mov r10d, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004039c: mov r10d, eax; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002479a: mov r10d, ecx; mov eax, 0x114; syscall; 
0x0000000000024759: mov r10d, ecx; mov eax, 0x115; syscall; 
0x000000000002482e: mov r10d, ecx; mov eax, 0x116; syscall; 
0x000000000005d719: mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000004bce3: mov r12, qword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000004e75e: mov r12, rax; test rax, rax; jne 0x4e770; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000018362: mov r12, rdi; call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b2: mov r12, rdi; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000005d7f2: mov r12, rsp; mov eax, 0x4f; mov rdi, r12; syscall; 
0x0000000000059337: mov r12, rsp; mov rdx, rbp; lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000004db6c: mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000002192d: mov r12d, eax; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000058747: mov r12d, eax; neg r12d; jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000003b333: mov r12d, eax; test eax, eax; je 0x3b351; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004bce7: mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005c0f8: mov r13, rcx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x000000000004e7a6: mov r13, rdx; test r12, r12; je 0x4e7c1; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000058c97: mov r13d, 0xca; xor edx, edx; or esi, 6; mov r10, rbx; mov rax, r13; syscall; 
0x000000000004e714: mov r13d, eax; mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000004bceb: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000045d8c: mov r14, rax; jne 0x45dbc; mov esi, dword ptr [rax]; mov rdi, r13; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000045cd7: mov r14d, 2; call rax; 
0x0000000000026e3d: mov r14d, r14d; movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x000000000004bcef: mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000024366: mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x000000000005a541: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a541: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000024695: mov r8, r10; jae 0x246ab; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005a5df: mov r8, rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x0000000000021b91: mov r8, rax; test rax, rax; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005107e: mov r8, rax; test rax, rax; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005d3e2: mov r8, rdi; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000024681: mov r8d, 0x11a; syscall; 
0x000000000005d346: mov r8d, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000050276: mov r8d, 0x3d; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x00000000000229bf: mov r8d, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000041a78: mov r8d, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041a9f: mov r8d, 0x48; movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004d132: mov r8d, 0x48; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000001b282: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b251: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000059365: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x0000000000057e09: mov r8d, 0xca; mov edx, 1; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dba: mov r8d, 0xca; mov edx, 1; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d420: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005725c: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x00000000000577a5: mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057111: mov r8d, 0xca; mov edx, 1; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576c9: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570d9: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004d3fe: mov r8d, 1; mov eax, r8d; ret; 
0x000000000003bf40: mov r8d, 1; mov rax, r8; ret; 
0x0000000000019e1c: mov r8d, dword ptr [rsi + rcx*4]; cmp eax, r8d; je 0x19e10; sub eax, r8d; ret; 
0x000000000004cae2: mov r8d, eax; cmp eax, -9; jne 0x4cb81; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000569ca: mov r8d, eax; cmp edx, eax; jne 0x56992; pop rbx; ret; 
0x000000000005d596: mov r8d, eax; mov eax, 3; syscall; 
0x000000000001815a: mov r8d, eax; mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000005d4c1: mov r8d, ecx; movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r14; mov rdx, r13; syscall; 
0x00000000000195c4: mov r8d, edx; mov eax, r8d; ret; 
0x00000000000418c7: mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000003a2f4: mov r9, qword ptr [rcx]; syscall; 
0x000000000005a546: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a546: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000005a505: mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000005d386: mov r9d, 0x124; movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x000000000005734f: mov r9d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000050826: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f890: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x0000000000058527: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4a: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x000000000004ddec: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x0000000000023e2e: mov r9d, 8; mov eax, 0x119; syscall; 
0x00000000000246d3: mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023dbc: mov r9d, r9d; mov eax, 0x146; syscall; 
0x000000000004b28f: mov rax, -0x26; pop rbp; pop r12; ret; 
0x00000000000574d0: mov rax, -0x7d; ret; 
0x0000000000017257: mov rax, -1; add rsp, 0x18; ret; 
0x0000000000022f6f: mov rax, -1; movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000004c1f9: mov rax, -2; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005755c: mov rax, -4; pop rdx; pop rbx; pop r12; ret; 
0x000000000004c825: mov rax, 0xf; syscall; 
0x00000000000225c0: mov rax, qword ptr [0]; add rax, 0x34; ret; 
0x0000000000023f7e: mov rax, qword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000221e9: mov rax, qword ptr [0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580f9: mov rax, qword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004bec6: mov rax, qword ptr [0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000595d6: mov rax, qword ptr [0]; ret; 
0x000000000002404f: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000005d616: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000005a56c: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3e6: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000057e7a: mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000587a4: mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000023232: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006086b: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b12a]; pop rdx; pop rbp; pop r12; jmp rax; 
0x00000000000607dd: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x000000000002321b: mov rax, qword ptr [rax + 8]; ret; 
0x00000000000587ad: mov rax, qword ptr [rax + rdi*8]; ret; 
0x00000000000279e5: mov rax, qword ptr [rax]; mov qword ptr [rsi], rax; mov qword ptr [rax + 8], rsi; mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x0000000000046359: mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000004d52c: mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000056da2: mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x56dad; call rax; 
0x000000000001b8dc: mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000005769c: mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000056d81: mov rax, qword ptr [rbx]; test rax, rax; je 0x56d8b; call rax; 
0x0000000000027afa: mov rax, qword ptr [rdi + 0x20]; test rax, -0x1000; je 0x27b11; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027f72: mov rax, qword ptr [rdi + 0x20]; test rax, -0x1000; je 0x27f89; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000004dae0: mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004d7e7: mov rax, qword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x4d7f8; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004dad2: mov rax, qword ptr [rdi + 0x60]; ret; 
0x000000000001b3e9: mov rax, qword ptr [rdi + 0x78]; ret; 
0x0000000000056bda: mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000005e41c: mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; mov eax, 1; ret; 
0x0000000000056e51: mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000056e9e: mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000046353: mov rax, qword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000021e65: mov rax, qword ptr [rdi]; ret; 
0x000000000004c398: mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000004b663: mov rax, qword ptr [rdi]; test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004e8be: mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004634e: mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000005f15c: mov rax, qword ptr [rip + 0x3ce4d]; mov qword ptr [rip + 0x3ce46], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x000000000005b88c: mov rax, qword ptr [rip + 0x3dbdd]; test rax, rax; je 0x5b8aa; call rax; 
0x000000000003e496: mov rax, qword ptr [rip + 0x5ab0b]; ret; 
0x00000000000274e9: mov rax, qword ptr [rip + 0x74958]; test rax, rax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000023a8e: mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x00000000000279ef: mov rax, qword ptr [rsi + 8]; mov qword ptr [rax], rsi; ret; 
0x000000000004c1cc: mov rax, qword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000004c42d: mov rax, qword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000032d71: mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000045d96: mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000005cb9b: mov rax, qword ptr [rsp + 0x10]; mov edi, dword ptr [rax + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000045f4e: mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; call rax; 
0x0000000000045ccf: mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x0000000000039884: mov rax, qword ptr [rsp + 0x20]; mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000005a5e2: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x00000000000611bc: mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000004f2bb: mov rax, qword ptr [rsp + 8]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004e91d: mov rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005cb69: mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005cdce: mov rax, qword ptr [rsp + 8]; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000001b32c: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x0000000000021d45: mov rax, qword ptr [rsp]; mov rdi, r15; call rax; 
0x000000000004b662: mov rax, qword ptr ds:[rdi]; test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x00000000000225bf: mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x0000000000023f7d: mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x00000000000221e8: mov rax, qword ptr fs:[0]; mov qword ptr [rax + 0x28], rdx; pop rbx; ret; 
0x00000000000580f8: mov rax, qword ptr fs:[0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000004bec5: mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x00000000000595d5: mov rax, qword ptr fs:[0]; ret; 
0x000000000002404e: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000005d615: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000005a56b: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3e5: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000045f4d: mov rax, qword ptr ss:[rsp + 0x10]; mov rdi, r13; call rax; 
0x0000000000057f67: mov rax, r10; mov rdx, r14; and esi, 0x80; or esi, 1; syscall; 
0x0000000000019067: mov rax, r12; mov qword ptr [rip + 0x82e87], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004c9a1: mov rax, r12; mov rdx, r13; syscall; 
0x000000000004c9fe: mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000019144: mov rax, r12; pop r12; pop r13; ret; 
0x0000000000018063: mov rax, r12; pop r12; ret; 
0x0000000000019117: mov rax, r12; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000004bb3c: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000003ca0a: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000019103: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000018202: mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000274cb: mov rax, r12; pop rbx; pop r12; pop r13; ret; 
0x000000000005d84f: mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x00000000000189ab: mov rax, r12; pop rbx; pop r12; ret; 
0x000000000001522f: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001881a: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043cbe: mov rax, r12; pop rdx; pop rbp; pop r12; ret; 
0x0000000000025853: mov rax, r12; pop rdx; pop rbx; pop r12; ret; 
0x000000000003eaf0: mov rax, r12; pop rsi; pop r12; ret; 
0x00000000000447b8: mov rax, r12; syscall; 
0x000000000004d2d4: mov rax, r13; mov rdi, r14; syscall; 
0x000000000004d6b5: mov rax, r13; mov rsi, rbp; syscall; 
0x0000000000054e7d: mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000004df3a: mov rax, r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000058ca5: mov rax, r13; syscall; 
0x000000000004e717: mov rax, r14; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000057f83: mov rax, r15; mov rdx, rsi; syscall; 
0x00000000000447eb: mov rax, r15; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000005b7c1: mov rax, r8; add rsp, 0x28; ret; 
0x000000000005802a: mov rax, r8; mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x0000000000022989: mov rax, r8; mov rdx, r10; syscall; 
0x00000000000229da: mov rax, r8; mov rdx, r9; syscall; 
0x00000000000229fe: mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x00000000000572c8: mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004d43b: mov rax, r8; mov rsi, rdx; syscall; 
0x000000000004d43b: mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000059faa: mov rax, r8; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x0000000000059f95: mov rax, r8; movzx esi, sil; shl esi, 7; or esi, 1; syscall; 
0x000000000003bcdf: mov rax, r8; pop rbp; pop r12; ret; 
0x00000000000278be: mov rax, r8; pop rbx; pop r12; ret; 
0x00000000000510b2: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021ba8: mov rax, r8; pop rbx; ret; 
0x000000000003bf38: mov rax, r8; pop rdx; ret; 
0x000000000001795c: mov rax, r8; ret; 
0x000000000005913f: mov rax, r8; shl esi, 7; or esi, 1; syscall; 
0x000000000001b261: mov rax, r8; syscall; 
0x0000000000057e29: mov rax, r8; syscall; pop rax; ret; 
0x0000000000057dda: mov rax, r8; syscall; ret; 
0x00000000000576e4: mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005d38f: mov rax, r9; mov rsi, r8; syscall; 
0x00000000000569a0: mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004de0a: mov rax, r9; mov rsi, rdx; syscall; 
0x000000000004f8b2: mov rax, r9; mov rsi, rdx; syscall; mov eax, r8d; pop rbp; ret; 
0x000000000005e4b5: mov rax, r9; pop rbp; pop r12; ret; 
0x000000000001b22c: mov rax, r9; syscall; 
0x00000000000572db: mov rax, rbp; mov rdx, r12; syscall; 
0x0000000000056c3d: mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000001760e: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000001891f: mov rax, rbx; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004d3d3: mov rax, rbx; mov rsi, rbp; syscall; 
0x00000000000181cb: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019578: mov rax, rbx; pop rbx; ret; 
0x000000000001964b: mov rax, rbx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x000000000004d3e6: mov rax, rbx; syscall; 
0x0000000000055817: mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000000580cd: mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000005580c: mov rax, rdi; neg rax; cmovs rax, rdi; ret; 
0x0000000000017de4: mov rax, rdi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000017239: mov rax, rdi; ret; 
0x0000000000018eb7: mov rax, rdi; test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x00000000000381e9: mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x000000000005d3ab: mov rax, rdx; mov rsi, r8; syscall; 
0x000000000004db1f: mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x00000000000220c3: mov rax, rdx; syscall; 
0x0000000000041a09: mov rbp, rsi; push rbx; mov rbx, rcx; syscall; 
0x0000000000044086: mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000005a592: mov rbx, rax; lea rsi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000005cc9d: mov rbx, rax; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x0000000000043d91: mov rbx, rax; test eax, eax; jne 0x43dee; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x0000000000041a0d: mov rbx, rcx; syscall; 
0x0000000000024537: mov rbx, rdi; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000017f21: mov rbx, rdx; call 0x563e4; add rax, rbx; pop rbx; ret; 
0x000000000005c0f1: mov rbx, rsi; movsxd rax, dword ptr [rdx + rax*4]; mov r13, rcx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x0000000000041957: mov rbx, rsi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x0000000000056bd3: mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000003a2ef: mov rcx, qword ptr [rsp + 8]; mov r9, qword ptr [rcx]; syscall; 
0x00000000000564d9: mov rcx, rdx; jne 0x564e9; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000003d432: mov rcx, rdx; mov rdx, rsi; mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x0000000000037b5c: mov rcx, rsi; shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x000000000004b30d: mov rdi, -0x26; call 0x17230; pop rdx; ret; 
0x000000000004ca04: mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000023ce1: mov rdi, -0xc; call 0x17230; pop rdx; ret; 
0x000000000004ca8c: mov rdi, -9; call 0x17230; pop rdx; ret; 
0x000000000004e7ae: mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000057e76: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000267ab: mov rdi, qword ptr [rax]; call 0x2497f; test rax, rax; je 0x2679c; pop rbx; ret; 
0x000000000004b8cf: mov rdi, qword ptr [rbp]; call rbx; 
0x00000000000448a5: mov rdi, qword ptr [rbx + 0x88]; call rax; 
0x00000000000580be: mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000057698: mov rdi, qword ptr [rbx + 8]; mov rax, qword ptr [rbx]; pop rdx; pop rbx; pop rbp; jmp rax; 
0x000000000004b505: mov rdi, qword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000001b898: mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000004e90b: mov rdi, qword ptr [rcx]; lea rsi, [rsp + 8]; call rax; 
0x00000000000580d0: mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000044c9f: mov rdi, qword ptr [rdi + 8]; test rdi, rdi; jne 0x44cab; xor eax, eax; ret; 
0x000000000002453b: mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000045a4a: mov rdi, qword ptr [rdi]; test rdi, rdi; jne 0x45a53; ret; 
0x000000000004e8c7: mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005cb64: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000057a9e: mov rdi, qword ptr [rsp + 0x40]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003b39b: mov rdi, qword ptr [rsp + 8]; call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005a2fe: mov rdi, qword ptr [rsp + 8]; call rbx; 
0x0000000000058010: mov rdi, qword ptr [rsp + 8]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005802d: mov rdi, qword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x000000000001724e: mov rdi, qword ptr [rsp + 8]; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x000000000005058b: mov rdi, r12; call 0x4db47; movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x000000000004affa: mov rdi, r12; call 0x5643b; mov rax, r12; pop r12; ret; 
0x0000000000043d82: mov rdi, r12; call 0x56922; mov eax, 0x39; syscall; 
0x000000000005803e: mov rdi, r12; call 0x569d4; mov edx, 0x3c; xor edi, edi; mov rax, rdx; syscall; 
0x0000000000059344: mov rdi, r12; call 0x5767b; call rbx; 
0x00000000000557fc: mov rdi, r12; mov al, 1; call 0x50c18; mov rax, r12; pop r12; ret; 
0x000000000005104e: mov rdi, r12; mov edx, 0x180; syscall; 
0x00000000000607da: mov rdi, r12; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x000000000004eb5a: mov rdi, r12; mov rax, r9; syscall; 
0x0000000000041a06: mov rdi, r12; mov rbp, rsi; push rbx; mov rbx, rcx; syscall; 
0x0000000000041a58: mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000003af76: mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae72: mov rdi, r12; mov rsi, r13; syscall; 
0x0000000000028344: mov rdi, r12; syscall; 
0x0000000000045f53: mov rdi, r13; call rax; 
0x0000000000045cd4: mov rdi, r13; mov r14d, 2; call rax; 
0x0000000000045d93: mov rdi, r13; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x00000000000570e9: mov rdi, r13; mov rax, r8; syscall; 
0x0000000000022140: mov rdi, r13; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x0000000000050fc3: mov rdi, r13; syscall; 
0x000000000005d4cc: mov rdi, r14; mov rdx, r13; syscall; 
0x000000000005d4b1: mov rdi, r14; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000004d2d7: mov rdi, r14; syscall; 
0x0000000000021d49: mov rdi, r15; call rax; 
0x0000000000022095: mov rdi, r8; mov dword ptr [rsp + 0x18], 2; mov rdx, rcx; syscall; 
0x000000000005735f: mov rdi, r8; mov rax, r9; syscall; 
0x000000000002267b: mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005703c: mov rdi, r8; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000004cda4: mov rdi, r8; syscall; 
0x000000000004cda4: mov rdi, r8; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d3cf: mov rdi, r8; syscall; movsxd rdi, r9d; call 0x17230; pop rdx; ret; 
0x000000000004d048: mov rdi, r9; mov rsi, r8; syscall; 
0x0000000000022e45: mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000003b014: mov rdi, rax; call 0x17230; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000022deb: mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000580c4: mov rdi, rax; call 0x57e31; push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000024564: mov rdi, rax; mov eax, 0x3e; syscall; 
0x00000000000446f2: mov rdi, rax; mov eax, 0x69; syscall; 
0x00000000000446d5: mov rdi, rax; mov eax, 0x6a; syscall; 
0x000000000005d422: mov rdi, rax; mov eax, 0x71; syscall; 
0x000000000005d3fe: mov rdi, rax; mov eax, 0x72; syscall; 
0x00000000000255e7: mov rdi, rax; mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000044cea: mov rdi, rax; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000005d64f: mov rdi, rbp; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000004c901: mov rdi, rbp; call 0x17080; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000059f36: mov rdi, rbp; call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x000000000004db61: mov rdi, rbp; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005cb5c: mov rdi, rbp; call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004d513: mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004dd4a: mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004b2c2: mov rdi, rbp; call rax; 
0x000000000003988c: mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000004db69: mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005a5dc: mov rdi, rbp; mov r8, rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000004d529: mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x000000000005711c: mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005726c: mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddfc: mov rdi, rbp; mov rax, r9; syscall; 
0x000000000005d6e2: mov rdi, rbp; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c90e: mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004b2d7: mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004b283: mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x000000000004f5aa: mov rdi, rbp; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000003914f: mov rdi, rbp; syscall; 
0x000000000004d8af: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004d4a5: mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004f258: mov rdi, rbx; call rax; 
0x000000000004f18c: mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000003b00c: mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000028370: mov rdi, rbx; syscall; 
0x000000000003d8f4: mov rdi, rbx; test rbx, rbx; jne 0x3d8ec; pop rbx; ret; 
0x0000000000044cb4: mov rdi, rbx; test rbx, rbx; jne 0x44cac; xor eax, eax; pop rbx; ret; 
0x0000000000045a5c: mov rdi, rbx; test rbx, rbx; jne 0x45a54; pop rbx; ret; 
0x000000000001e741: mov rdi, rcx; syscall; 
0x000000000005cd74: mov rdi, rdx; syscall; 
0x0000000000023d2f: mov rdi, rsi; syscall; 
0x000000000004f334: mov rdx, qword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000043d9e: mov rdx, qword ptr [0]; syscall; 
0x00000000000580e7: mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000056bd6: mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000057e73: mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004381d: mov rdx, qword ptr [rax]; xor eax, eax; call 0x4ea2e; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004f27a: mov rdx, qword ptr [rbx + 0x28]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000004db2b: mov rdx, qword ptr [rdi + 0x10]; cmp rax, rdx; je 0x4db3b; sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000046331: mov rdx, qword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov eax, dword ptr [rdx + rax*8]; ret; 
0x0000000000046343: mov rdx, qword ptr [rdi + 0x10]; dec eax; mov dword ptr [rdi + 0xc], eax; cdqe; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000004e8b7: mov rdx, qword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004b680: mov rdx, qword ptr [rdi + 8]; test rdx, rdx; je 0x4b68c; mov qword ptr [rdx], rax; ret; 
0x00000000000266f0: mov rdx, qword ptr [rsi + rdx*8]; test rdx, rdx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x0000000000046356: mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000022143: mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000005d6e8: mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004bd1a: mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004f333: mov rdx, qword ptr fs:[0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000043d9d: mov rdx, qword ptr fs:[0]; syscall; 
0x000000000003b4cc: mov rdx, r10; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x00000000000229ca: mov rdx, r10; mov rax, r8; syscall; 
0x000000000002298c: mov rdx, r10; syscall; 
0x000000000004e7b1: mov rdx, r12; call rax; 
0x00000000000572de: mov rdx, r12; syscall; 
0x000000000004c547: mov rdx, r13; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x0000000000022106: mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000041a5b: mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000004c9a4: mov rdx, r13; syscall; 
0x0000000000057f6a: mov rdx, r14; and esi, 0x80; or esi, 1; syscall; 
0x000000000005a53b: mov rdx, r8; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005dd02: mov rdx, r8; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000022bcb: mov rdx, r8; syscall; 
0x0000000000022bcb: mov rdx, r8; syscall; neg eax; ret; 
0x00000000000229dd: mov rdx, r9; syscall; 
0x00000000000390cc: mov rdx, rax; mov eax, 0x14; sub eax, edx; pop rdx; ret; 
0x000000000005f361: mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005933a: mov rdx, rbp; lea rsi, [rip - 0x91]; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000004f603: mov rdx, rbx; mov rsi, r13; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000003af7c: mov rdx, rbx; syscall; 
0x00000000000220a0: mov rdx, rcx; syscall; 
0x000000000004bd3f: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd25: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023dd7: mov rdx, rdi; syscall; 
0x000000000003d435: mov rdx, rsi; mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x00000000000568b7: mov rdx, rsi; movsxd rdi, edi; push rax; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000056905: mov rdx, rsi; movsxd rdi, edi; push rax; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000057f86: mov rdx, rsi; syscall; 
0x0000000000017804: mov rdx, rsi; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x000000000004d194: mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005d9c4: mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000005d435: mov rsi, qword ptr [r8 + 8]; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004489e: mov rsi, qword ptr [rbx + 0xa0]; mov rdi, qword ptr [rbx + 0x88]; call rax; 
0x000000000002453e: mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000022109: mov rsi, r12; call rbx; 
0x000000000005b870: mov rsi, r12; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000004b280: mov rsi, r12; mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x000000000004f606: mov rsi, r13; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000003af79: mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae75: mov rsi, r13; syscall; 
0x000000000004ca01: mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000003b2a1: mov rsi, r14; syscall; 
0x00000000000607d7: mov rsi, r15; mov rdi, r12; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x00000000000447d0: mov rsi, r15; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000005e3e5: mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000005dca1: mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000002268c: mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004d04b: mov rsi, r8; syscall; 
0x0000000000022a01: mov rsi, r9; mov rdx, r10; syscall; 
0x000000000004cfa2: mov rsi, r9; mov rdx, r8; syscall; 
0x00000000000572cb: mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000004f189: mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000003b00f: mov rsi, rbp; syscall; 
0x000000000004b8c2: mov rsi, rbx; call 0x4b8a7; test rbx, rbx; je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000005d6e5: mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000005d4b4: mov rsi, rbx; mov rdx, r13; syscall; 
0x00000000000255ea: mov rsi, rbx; rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000004c911: mov rsi, rbx; syscall; 
0x000000000003a19b: mov rsi, rdi; jg 0x3a1b0; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000005a4cf: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000005a4cf: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x000000000005e8cc: mov rsi, rdx; call 0x23016; add rsp, 0xd8; ret; 
0x000000000004b2da: mov rsi, rdx; syscall; 
0x000000000004f8b5: mov rsi, rdx; syscall; mov eax, r8d; pop rbp; ret; 
0x000000000004d43e: mov rsi, rdx; syscall; ret; 
0x0000000000059fad: mov rsi, rdx; syscall; xor eax, eax; ret; 
0x000000000004c737: mov rsi, rdx; xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000004d5cc: mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000005111c: mov rsi, rsp; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000226a7: mov rsi, rsp; mov edi, 1; syscall; 
0x000000000005d5d7: mov rsi, rsp; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000004bcf3: mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x00000000000611c4: mov rsp, rbx; jmp rax; 
0x0000000000039c55: mov si, di; dec dword ptr [rcx + 0x5ac03128]; pop rbx; pop rbp; ret; 
0x0000000000017115: mov word ptr [r8 + 0xe], ax; ret; 
0x00000000000278b8: mov word ptr [r9 - 2], ax; pop rdx; mov rax, r8; pop rbx; pop r12; ret; 
0x0000000000057d3b: mov word ptr [rax], es; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000390ba: mov word ptr [rax], es; add byte ptr [rax], al; syscall; 
0x0000000000057d31: mov word ptr [rax], es; add byte ptr [rax], al; test eax, eax; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000022c21: mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x0000000000019498: mov word ptr [rcx + 0x1c], ax; ret; 
0x0000000000043977: mov word ptr [rcx + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000052d54: mov word ptr [rdi], dx; ret; 
0x0000000000028756: mov word ptr [rdi], es; push rax; add eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbx + 0x40]; 
0x0000000000044cd0: mov word ptr [rsi], ax; xor eax, eax; ret; 
0x00000000000403cf: mov word ptr [rsi], di; ret; 
0x0000000000035f53: mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000002c342: mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000004c9c0: movabs al, byte ptr [0x101b81d740000]; add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x0000000000035a04: movabs al, byte ptr [0x375c085480005f6]; movaps xmm0, xmm1; ret; 
0x0000000000039d53: movabs al, byte ptr [0x4418c48348fffe84]; mov eax, esp; pop rbx; pop r12; ret; 
0x000000000002edea: movabs al, byte ptr [0x5b60c48348000000]; pop rbp; pop r12; ret; 
0x000000000005a613: movabs al, byte ptr [0x5d5bc0894c000000]; pop r12; ret; 
0x00000000000448a1: movabs al, byte ptr [0x88bb8b48000000]; add byte ptr [rax], al; call rax; 
0x00000000000455cc: movabs al, byte ptr [0x890824748bfffffa]; ret 0x8341; 
0x000000000004ca26: movabs al, byte ptr [0xcb8ea890e740000]; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000002bddc: movabs al, byte ptr [0xf0774db8500069a]; push rdi; add eax, 0x67985; add rsp, 0x10; pop rbx; ret; 
0x000000000002ab03: movabs al, byte ptr [0xff2c2590ff20006]; pop rax; add eax, 0x6a48e; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000001953a: movabs byte ptr [0x4c08c48348000000], al; mov eax, esp; pop rbp; pop r12; ret; 
0x000000000002e01c: movabs byte ptr [0x7f73d000000], al; jbe 0x2e02c; addss xmm0, xmm0; ret; 
0x000000000005df51: movabs byte ptr [0xc328c48348fffc42], al; push rax; mov eax, 0x58; syscall; 
0x0000000000057f7d: movabs byte ptr [0xf8894c00000001be], al; mov rdx, rsi; syscall; 
0x000000000005de7e: movabs dword ptr [0x27b8fffede], eax; syscall; 
0x000000000005d242: movabs dword ptr [0xc78948050f000000], eax; call 0x17230; pop rdx; ret; 
0x00000000000295bb: movabs eax, dword ptr [0x244c110ff20006a1]; clc; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000036ecb: movabs eax, dword ptr [0x5b10c483480005c8]; ret; 
0x0000000000060528: movabs eax, dword ptr [0x5c415d5b58fffffe]; pop r13; ret; 
0x0000000000023d15: movabs eax, dword ptr [0xc78948050f000000]; call 0x17230; pop rdx; ret; 
0x000000000002e393: movabs eax, dword ptr [0xf2cc5c0ff2000667]; mulps xmm0, xmm1; ret; 
0x00000000000295bc: movabs eax, dword ptr [0xf8244c110ff20006]; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x00000000000295db: movabs eax, dword ptr [0xfc244c110ff30006]; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000020b83: movabs rax, 0x1f83d9abfb41bd6b; mov qword ptr [rdi + 0x38], rax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000020b91: movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000020273: movabs rax, 0x5be0cd191f83d9ab; mov qword ptr [rdi + 0x20], rax; ret; 
0x000000000004397b: movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000001a5b0: movapd xmm0, xmm5; ret; 
0x0000000000033ab7: movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x00000000000334ef: movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x0000000000033668: movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000003336e: movaps xmm0, xmm1; divsd xmm0, xmm2; ret; 
0x0000000000033522: movaps xmm0, xmm1; divss xmm0, xmm2; ret; 
0x0000000000033cd5: movaps xmm0, xmm1; movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002ce98: movaps xmm0, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000002d410: movaps xmm0, xmm1; mulss xmm0, xmm1; ret; 
0x000000000002b454: movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001cf57: movaps xmm0, xmm1; ret; 
0x0000000000035cd2: movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001e292: movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000037e77: movaps xmm0, xmm2; pop rbp; pop r12; ret; 
0x0000000000036885: movaps xmm0, xmm2; pop rbx; ret; 
0x000000000001bf78: movaps xmm0, xmm2; ret; 
0x000000000002a826: movaps xmm0, xmm4; test edx, edx; je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x000000000001a5b1: movaps xmm0, xmm5; ret; 
0x000000000001cdc5: movaps xmm1, xmm0; add rsp, 0x10; pop rbx; ret; 
0x000000000003031e: movaps xmm1, xmm0; cmp edi, 0x7f7fffff; jbe 0x30336; movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x000000000002fd9e: movaps xmm1, xmm0; cmp rax, 0x7fefffff; jbe 0x2fdb6; movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x000000000002ef4f: movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001bf75: movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002ce69: movaps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002d3e1: movaps xmm1, xmm0; movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002e51e: movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b231: movaps xmm1, xmm0; subss xmm1, xmm0; xorps xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000001c07d: movaps xmm1, xmm0; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x000000000001ddb2: movaps xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd76: movaps xmm1, xmm2; pop rbx; ret; 
0x000000000002a5ef: movaps xmm1, xmm3; mulsd xmm1, xmm4; subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x00000000000599ed: movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000001bcca: movaps xmm2, xmm0; movsd xmm0, qword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x000000000001bf72: movaps xmm2, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001c07a: movaps xmm2, xmm1; movaps xmm1, xmm0; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000043aae: movd dword ptr [rax], mm0; ret; 
0x0000000000043aad: movd dword ptr [rax], xmm0; ret; 
0x00000000000599ea: movd dword ptr [rdx], mm0; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000001c3ab: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc8f: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d358: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x28; ret; 
0x000000000001cf0c: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001d055: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x000000000001c04d: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x000000000001cc32: movd dword ptr [rsp + 0x18], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000001df93: movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x000000000001c0f0: movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000001d116: movd dword ptr [rsp - 0x10], mm0; ret; 
0x000000000001a2d2: movd dword ptr [rsp - 8], mm0; ret; 
0x000000000001bde8: movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd47: movd dword ptr [rsp], mm0; add rsp, 0x28; ret; 
0x000000000002e747: movd eax, mm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001d2d7: movd eax, mm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x000000000002a54f: movd eax, mm0; shr eax, 0x1f; ret; 
0x000000000002a546: movd eax, mm0; shr rax, 0x3f; ret; 
0x000000000002a54e: movd eax, xmm0; shr eax, 0x1f; ret; 
0x000000000002bfb9: movd ecx, mm0; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002b9ab: movd ecx, mm0; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x000000000002b840: movd ecx, mm0; and rax, rcx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000002bfb8: movd ecx, xmm0; and eax, 0x7fffffff; cmp eax, 0x7f7fffff; jbe 0x2bfcd; addss xmm0, xmm0; ret; 
0x000000000002b9aa: movd ecx, xmm0; and eax, 0x7fffffff; cmp eax, 0x7f800000; jbe 0x2b9bf; addss xmm0, xmm1; ret; 
0x000000000002c2de: movd mm0, eax; ret; 
0x00000000000439a8: movd mm0, eax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002f178: movd mm0, edi; ret; 
0x000000000002f2fb: movd mm0, edx; pop rbx; ret; 
0x000000000002c301: movd mm0, rax; ret; 
0x00000000000439a7: movd mm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002f177: movd mm0, rdi; ret; 
0x000000000002f2fa: movd mm0, rdx; pop rbx; ret; 
0x0000000000043a9f: movd mm1, dword ptr [rip + 0x585ba]; sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000001d2dc: movd mm1, eax; movaps xmm0, xmm2; ret; 
0x0000000000033cda: movd mm1, eax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002df51: movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002db99: movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000001d2db: movd mm1, rax; movaps xmm0, xmm2; ret; 
0x0000000000033cd9: movd mm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002df50: movd mm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002db98: movd mm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000035e67: movd mm2, eax; mulsd xmm0, xmm2; ret; 
0x0000000000035ed4: movd mm2, eax; mulss xmm0, xmm2; ret; 
0x0000000000035e66: movd mm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000002e746: movd rax, mm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001d2d6: movd rax, mm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x000000000002a545: movd rax, mm0; shr rax, 0x3f; ret; 
0x000000000002b83f: movd rcx, mm0; and rax, rcx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000002c2dd: movd xmm0, eax; ret; 
0x000000000002f28c: movd xmm0, edi; ret; 
0x000000000002f355: movd xmm0, edx; pop rbx; ret; 
0x0000000000043a9e: movd xmm1, dword ptr [rip + 0x585ba]; sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x0000000000035ed3: movd xmm2, eax; mulss xmm0, xmm2; ret; 
0x00000000000567cd: movq qword ptr [rdi], xmm0; ret; 
0x00000000000599f7: movq qword ptr [rdx], xmm0; ret; 
0x000000000001cf5b: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001d3ed: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000002e745: movq rax, xmm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001d2d5: movq rax, xmm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x000000000002a544: movq rax, xmm0; shr rax, 0x3f; ret; 
0x000000000002b83e: movq rcx, xmm0; and rax, rcx; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x00000000000599e9: movq xmm0, qword ptr [rdx]; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000001c3aa: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bc8e: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001d357: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf0b: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001d054: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001c04c: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001cc31: movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x000000000001df92: movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001c0ef: movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001d115: movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001a2d1: movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001bde7: movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd46: movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000002c300: movq xmm0, rax; ret; 
0x00000000000439a6: movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002f176: movq xmm0, rdi; ret; 
0x000000000002f2f9: movq xmm0, rdx; pop rbx; ret; 
0x000000000001d2da: movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x0000000000033cd8: movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002df4f: movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002db97: movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000035e65: movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000005cba2: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x0000000000056434: movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000056410: movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x56410; ret; 
0x0000000000015f4f: movsb byte ptr [rdi], byte ptr [rsi]; ret 0; 
0x00000000000227c7: movsb byte ptr [rdi], byte ptr [rsi]; ret 0x108; 
0x00000000000255ee: movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000044cf0: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000002f42a: movsd qword ptr [rsi], xmm0; ret; 
0x0000000000033cdd: movsd qword ptr [rsi], xmm1; ret; 
0x000000000003426f: movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x0000000000033e59: movsd qword ptr [rsp + 8], xmm0; call 0x22c9b; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001cc6c: movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x000000000002db8c: movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002db7c: movsd qword ptr [rsp - 0x18], xmm4; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x0000000000033f95: movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003788b: movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000002952f: movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295bf: movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002c252: movsd qword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7d8: movsd qword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000035a9f: movsd qword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x0000000000035a00: movsd xmm0, qword ptr [rip + 0x5f6a0]; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x00000000000349a7: movsd xmm0, qword ptr [rip + 0x60181]; add rsp, 0x40; pop rbx; ret; 
0x0000000000033e15: movsd xmm0, qword ptr [rip + 0x619a3]; ret; 
0x00000000000308c7: movsd xmm0, qword ptr [rip + 0x64c39]; divsd xmm0, xmm1; ret; 
0x000000000002fda9: movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x000000000002e38f: movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002ce8b: movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002ce6c: movsd xmm0, qword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002c25d: movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002b98a: movsd xmm0, qword ptr [rip + 0x691b6]; pop rbx; ret; 
0x000000000002ab4e: movsd xmm0, qword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x00000000000293f5: movsd xmm0, qword ptr [rip + 0x6b8e3]; add rsp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000001bccd: movsd xmm0, qword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x0000000000033e64: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fbd: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000029535: movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000002ce81: movsd xmm1, qword ptr [rip + 0x683ff]; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002a906: movsd xmm1, qword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000001a59c: movsd xmm1, qword ptr [rip + 0x7a5ec]; addsd xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000001cfb0: movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002db82: movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x00000000000295c5: movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000033d4b: movss dword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000001c040: movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001d34b: movss dword ptr [rsp + 0x10], xmm2; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001d351: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf05: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c046: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000034369: movss dword ptr [rsp + 0x1c], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000001df86: movss dword ptr [rsp + 0x20], xmm2; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001df8c: movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000033e9b: movss dword ptr [rsp + 0xc], xmm0; call 0x22c9b; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000002f8f8: movss dword ptr [rsp - 0x10], xmm0; ret; 
0x000000000002f930: movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f85c: movss dword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x000000000003402a: movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x00000000000378cc: movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000029557: movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295de: movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002e2b1: movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000035b2a: movss dword ptr [rsp - 4], xmm1; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000001a2cb: movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001a2c5: movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000035a50: movss xmm0, dword ptr [rip + 0x60400]; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000034c8d: movss xmm0, dword ptr [rip + 0x60be3]; add rsp, 0x28; ret; 
0x0000000000033e1e: movss xmm0, dword ptr [rip + 0x61ad6]; ret; 
0x0000000000030e58: movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x0000000000030329: movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x000000000002e65e: movss xmm0, dword ptr [rip + 0x673c6]; ret; 
0x000000000002d403: movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002d3e4: movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002bb10: movss xmm0, dword ptr [rip + 0x69d6c]; pop rbx; ret; 
0x000000000002ace7: movss xmm0, dword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000002942e: movss xmm0, dword ptr [rip + 0x6c5f2]; add rsp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000033ea6: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fa0: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000001cf61: movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002955d: movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000001d3f3: movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000002d3f9: movss xmm1, dword ptr [rip + 0x68657]; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x00000000000295e4: movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002f62e: movss xmm2, dword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000003932c: movsx eax, byte ptr [rip + 0x605ef]; ret; 
0x000000000001e5e3: movsx eax, word ptr [rax + rsi*2]; ret; 
0x0000000000027226: movsx eax, word ptr [rcx]; add byte ptr [rax], al; add bl, ch; add ecx, dword ptr [rax - 1]; ret 0xff48; 
0x000000000003b540: movsx edi, bh; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000003b53f: movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x0000000000018eb4: movsx esi, byte ptr [rsi]; mov rax, rdi; test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x000000000001e5e2: movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004cf9a: movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000003af6e: movsxd r10, ebp; mov eax, 0x19; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae67: movsxd r10, ebx; movsxd r8, r14d; mov eax, 9; mov rdi, r12; mov rsi, r13; syscall; 
0x000000000004cb71: movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x0000000000023f06: movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x000000000005d4c4: movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r14; mov rdx, r13; syscall; 
0x0000000000022bae: movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x0000000000022bae: movsxd r10, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000024665: movsxd r10, edx; movsxd rdi, edi; push rcx; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000003ae6a: movsxd r8, r14d; mov eax, 9; mov rdi, r12; mov rsi, r13; syscall; 
0x000000000005d71c: movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000005da43: movsxd r8, r8d; mov eax, 0x109; syscall; 
0x0000000000024251: movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000248d8: movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x00000000000248f0: movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x000000000002490b: movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x00000000000244bd: movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000044785: movsxd rax, dword ptr [r10 + rax*4]; add rax, r10; jmp rax; 
0x000000000003aa50: movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x000000000003aa51: movsxd rax, dword ptr [rax + rax*4]; add rax, r8; jmp rax; 
0x0000000000060bbf: movsxd rax, dword ptr [rax + rax*8 - 0x74b7a88b]; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx*2 + 0x48], 0x83; ret; 
0x0000000000024784: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000022c34: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000025992: movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005485e: movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000001e6d2: movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000052d49: movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000005de5e: movsxd rax, dword ptr [rdi + 0xc]; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000026205: movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000052648: movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x0000000000026e40: movsxd rax, dword ptr [rdx + r14*4]; add rax, rdx; jmp rax; 
0x0000000000053e0e: movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x0000000000044786: movsxd rax, dword ptr [rdx + rax*4]; add rax, r10; jmp rax; 
0x0000000000031cb1: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000005c0f5: movsxd rax, dword ptr [rdx + rax*4]; mov r13, rcx; mov ebp, r9d; add rax, rdx; jmp rax; 
0x0000000000052649: movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000215a8: movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000051471: movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005d71d: movsxd rax, eax; mov eax, 0x104; syscall; 
0x000000000005da44: movsxd rax, eax; mov eax, 0x109; syscall; 
0x0000000000024252: movsxd rax, eax; mov eax, 0x12f; syscall; 
0x00000000000248d9: movsxd rax, eax; mov eax, 0xbc; syscall; 
0x00000000000248f1: movsxd rax, eax; mov eax, 0xbd; syscall; 
0x000000000002490c: movsxd rax, eax; mov eax, 0xbe; syscall; 
0x00000000000244be: movsxd rax, eax; mov eax, 0xd8; syscall; 
0x000000000003825c: movsxd rax, edi; test eax, eax; je 0x38268; bsf rax, rax; inc eax; ret; 
0x000000000003ae6b: movsxd rax, esi; mov eax, 9; mov rdi, r12; mov rsi, r13; syscall; 
0x000000000005a590: movsxd rbp, eax; mov rbx, rax; lea rsi, [rsp + 8]; mov eax, 5; mov rdi, rbp; syscall; 
0x000000000004efb9: movsxd rdi, dword ptr [r12 + 0x78]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004efd5: movsxd rdi, dword ptr [r12 + 0x78]; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000005d44f: movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000044833: movsxd rdi, dword ptr [r8 + 0x14]; mov eax, 0x51; syscall; 
0x000000000005d441: movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005d450: movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000044834: movsxd rdi, dword ptr [rax + 0x14]; mov eax, 0x51; syscall; 
0x0000000000022690: movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005749b: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000005749b: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000005d442: movsxd rdi, dword ptr [rax]; syscall; 
0x000000000005db52: movsxd rdi, dword ptr [rbp + 4]; mov rax, r9; syscall; 
0x000000000005db3f: movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000005db67: movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000058750: movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x00000000000584f9: movsxd rdi, dword ptr [rbx + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000058736: movsxd rdi, dword ptr [rbx + 0x30]; test edi, edi; je 0x5875e; mov eax, 0x8f; mov rsi, r14; syscall; 
0x000000000004d6af: movsxd rdi, dword ptr [rbx + 0x78]; movsxd rdx, r15d; mov rax, r13; mov rsi, rbp; syscall; 
0x0000000000041a91: movsxd rdi, dword ptr [rbx + 4]; mov rax, r8; syscall; 
0x0000000000041a7f: movsxd rdi, dword ptr [rbx]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000041aa6: movsxd rdi, dword ptr [rbx]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000003a1a1: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000003a1a1: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000004b16d: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x000000000004b16d: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; neg eax; ret; 
0x000000000005ce87: movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000005ce87: movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000004b1b5: movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000004d788: movsxd rdi, dword ptr [rdi + 0x78]; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000021bbe: movsxd rdi, dword ptr [rdi + 8]; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x000000000005de66: movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x000000000005a27b: movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000002411f: movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000005d5b0: movsxd rdi, dword ptr [rsp + 0x20]; lea rsi, [rsp + 4]; xor eax, eax; mov edx, 4; syscall; 
0x000000000005d5c9: movsxd rdi, dword ptr [rsp + 0x20]; mov eax, 3; syscall; 
0x0000000000050423: movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x000000000005d592: movsxd rdi, dword ptr [rsp + 0x24]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005042d: movsxd rdi, dword ptr [rsp + 0x24]; mov rax, rdx; syscall; 
0x000000000004efba: movsxd rdi, dword ptr [rsp + 0x78]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004efd6: movsxd rdi, dword ptr [rsp + 0x78]; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x0000000000050491: movsxd rdi, dword ptr [rsp + r13*4 + 0x20]; mov eax, 3; syscall; 
0x0000000000050492: movsxd rdi, dword ptr [rsp + rbp*4 + 0x20]; mov eax, 3; syscall; 
0x0000000000022dd4: movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000447b2: movsxd rdi, eax; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x0000000000022a0c: movsxd rdi, eax; js 0x22a48; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000005d309: movsxd rdi, eax; mov eax, 0; cmove rdi, rax; call 0x17230; pop rdi; ret; 
0x000000000005d5db: movsxd rdi, eax; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000419c8: movsxd rdi, eax; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004cdc4: movsxd rdi, eax; mov eax, 0x8a; syscall; 
0x00000000000229ec: movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000004d2ee: movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000004e742: movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000003c296: movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000004480e: movsxd rdi, eax; mov rax, r12; syscall; 
0x0000000000058b1a: movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000005cca1: movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x00000000000448d2: movsxd rdi, ebp; lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x0000000000044757: movsxd rdi, ebp; mov eax, 0x20; syscall; 
0x0000000000044854: movsxd rdi, ebp; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000003b29a: movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x000000000004c542: movsxd rdi, ebp; movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x000000000004b1a5: movsxd rdi, ebx; call 0x17230; pop rbx; ret; 
0x000000000004d119: movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005b8ab: movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x0000000000021b9a: movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003e573: movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x000000000004d139: movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x0000000000050274: movsxd rdi, ebx; mov r8d, 0x3d; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000004d192: movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004cf98: movsxd rdi, ebx; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x00000000000419dc: movsxd rdi, ecx; call 0x17230; pop rbx; ret; 
0x0000000000023e51: movsxd rdi, ecx; call 0x17230; pop rdx; ret; 
0x000000000004cb6f: movsxd rdi, ecx; movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000005b7f5: movsxd rdi, ecx; syscall; 
0x0000000000022f77: movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000023f39: movsxd rdi, edi; cmp rdx, rax; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000004cd6a: movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000005dd75: movsxd rdi, edi; mov eax, 0x108; syscall; 
0x000000000005dd06: movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000023ed7: movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x0000000000022bc2: movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x00000000000247cc: movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023dcf: movsxd rdi, edi; mov eax, 0x123; push rcx; mov rdx, rdi; syscall; 
0x0000000000023f8b: movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x000000000002439a: movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000023d37: movsxd rdi, edi; mov eax, 0x131; syscall; 
0x00000000000243c6: movsxd rdi, edi; mov eax, 0x136; syscall; 
0x00000000000243b1: movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000244f1: movsxd rdi, edi; mov eax, 0x28; syscall; 
0x0000000000024858: movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000022ea8: movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000024472: movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000024486: movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000024893: movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x00000000000248c3: movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x000000000004b17c: movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000022f19: movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000002260e: movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x0000000000023e10: movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x000000000004cad6: movsxd rdi, edi; mov eax, 5; mov rsi, rdx; syscall; 
0x000000000004c999: movsxd rdi, edi; mov r10d, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x00000000000599d1: movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x0000000000024798: movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x000000000002482c: movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x000000000005d717: movsxd rdi, edi; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x00000000000418c5: movsxd rdi, edi; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000023e2c: movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x00000000000246d1: movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023dba: movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x0000000000023f04: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x0000000000022bac: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x0000000000022bac: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000005da41: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x000000000002424f: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x0000000000024909: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000022f2d: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x000000000005da58: movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005d34d: movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000022ee6: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x00000000000247f5: movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x00000000000247e0: movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x000000000002476e: movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x000000000005d331: movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000004bd72: movsxd rdi, edi; push rax; mov eax, 0x24; syscall; 
0x000000000004bf11: movsxd rdi, edi; push rax; mov eax, 0x26; syscall; 
0x0000000000022f00: movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x000000000005d785: movsxd rdi, edi; push rax; mov eax, 0x4d; syscall; 
0x000000000003919b: movsxd rdi, edi; push rax; mov eax, 0x62; syscall; 
0x000000000005d870: movsxd rdi, edi; push rax; mov eax, 0x73; syscall; 
0x000000000005d95d: movsxd rdi, edi; push rax; mov eax, 0x79; syscall; 
0x000000000005d98c: movsxd rdi, edi; push rax; mov eax, 0x7c; syscall; 
0x000000000004b211: movsxd rdi, edi; push rax; mov eax, 0x92; syscall; 
0x000000000004b226: movsxd rdi, edi; push rax; mov eax, 0x93; syscall; 
0x000000000004b32b: movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x000000000003adee: movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x0000000000023ccc: movsxd rdi, edi; push rax; mov eax, 0x9e; syscall; 
0x0000000000024001: movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x0000000000024944: movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x000000000004b158: movsxd rdi, edi; push rax; mov eax, 0xcb; syscall; 
0x000000000005b945: movsxd rdi, edi; push rax; mov eax, 0xe3; syscall; 
0x000000000005b826: movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x000000000003b470: movsxd rdi, edi; push rax; mov eax, 0xf5; syscall; 
0x000000000003b1b6: movsxd rdi, edi; push rax; mov eax, 3; syscall; 
0x000000000004cd22: movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023fbd: movsxd rdi, edi; push rax; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000568bb: movsxd rdi, edi; push rax; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x0000000000056909: movsxd rdi, edi; push rax; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x000000000003a17e: movsxd rdi, edi; push rax; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x0000000000024756: movsxd rdi, edi; push rax; mov r10d, ecx; mov eax, 0x115; syscall; 
0x000000000005e1b3: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000024266: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000024016: movsxd rdi, edi; push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x00000000000247ad: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000245e1: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022f42: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004bd87: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000022dde: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000022dc6: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023f1b: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005ddcf: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023fd4: movsxd rdi, edi; push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000024669: movsxd rdi, edi; push rcx; mov edx, 8; mov eax, 0x121; syscall; 
0x00000000000390b4: movsxd rdi, edi; push rcx; mov esi, esi; mov eax, 0x8c; syscall; 
0x000000000004c965: movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000003c2d3: movsxd rdi, edi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000002442c: movsxd rdi, edi; xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000003e469: movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x0000000000023e84: movsxd rdi, edx; call 0x17230; pop rdx; ret; 
0x000000000003c2b0: movsxd rdi, esp; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004c036: movsxd rdi, esp; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000003c2af: movsxd rdi, r12d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004c035: movsxd rdi, r12d; mov r10d, 8; mov eax, 0xd; syscall; 
0x00000000000448d1: movsxd rdi, r13d; lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x0000000000044756: movsxd rdi, r13d; mov eax, 0x20; syscall; 
0x0000000000044853: movsxd rdi, r13d; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005d5da: movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000419c7: movsxd rdi, r8d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004cdc3: movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x00000000000419db: movsxd rdi, r9d; call 0x17230; pop rbx; ret; 
0x000000000005d3d4: movsxd rdi, r9d; call 0x17230; pop rdx; ret; 
0x000000000004cb6e: movsxd rdi, r9d; movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x000000000005b7f4: movsxd rdi, r9d; syscall; 
0x000000000005c5ee: movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x000000000005de69: movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000051448: movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000005c5ef: movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, r14; jmp rdx; 
0x00000000000447d4: movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000004d154: movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000002811a: movsxd rdx, eax; movzx edx, word ptr [rsi + rdx*2]; cmp rdx, rcx; adc eax, 0; ret; 
0x000000000005699b: movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004cf9b: movsxd rdx, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000003af6f: movsxd rdx, ebp; mov eax, 0x19; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000003ae68: movsxd rdx, ebx; movsxd r8, r14d; mov eax, 9; mov rdi, r12; mov rsi, r13; syscall; 
0x000000000004efe5: movsxd rdx, ebx; syscall; 
0x000000000004cb72: movsxd rdx, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x0000000000023f07: movsxd rdx, ecx; mov eax, 0x12d; syscall; 
0x000000000005d4c5: movsxd rdx, ecx; mov eax, 0x1b7; mov rdi, r14; mov rdx, r13; syscall; 
0x0000000000022baf: movsxd rdx, ecx; mov eax, 0xdd; syscall; 
0x0000000000022baf: movsxd rdx, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000024498: movsxd rdx, edi; mov edi, 0xfee1dead; push rax; mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x000000000004d6b3: movsxd rdx, edi; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000005e1b7: movsxd rdx, edx; mov eax, 0x107; syscall; 
0x000000000002426a: movsxd rdx, edx; mov eax, 0x130; syscall; 
0x000000000003b028: movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003b028: movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000022f7e: movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000022f30: movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x0000000000022eec: movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000002401a: movsxd rdx, edx; mov eax, 0x67; syscall; 
0x000000000003a184: movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x000000000005da5b: movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005d38d: movsxd rdx, edx; mov rax, r9; mov rsi, r8; syscall; 
0x00000000000244bb: movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000005dd72: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024855: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x000000000002446f: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000023e29: movsxd rdx, edx; movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x00000000000246ce: movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023db7: movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x000000000005da3e: movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x0000000000024666: movsxd rdx, edx; movsxd rdi, edi; push rcx; mov edx, 8; mov eax, 0x121; syscall; 
0x0000000000022ea2: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000023e0a: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x000000000003e463: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000003adb5: movsxd rdx, edx; push rax; mov eax, 0x1c; syscall; 
0x0000000000023fec: movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x000000000005958e: movsxd rdx, edx; setne sil; mov rax, r8; shl esi, 7; or esi, 1; syscall; 
0x000000000004d3ce: movsxd rdx, edx; xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000004d6b2: movsxd rdx, r15d; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000005699a: movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000044805: movsxd rsi, dword ptr [r8 + 0x14]; cmp esi, eax; je 0x44846; movsxd rdi, eax; mov rax, r12; syscall; 
0x00000000000447ad: movsxd rsi, dword ptr [r8 + 0x14]; movsxd rdi, eax; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x0000000000044806: movsxd rsi, dword ptr [rax + 0x14]; cmp esi, eax; je 0x44846; movsxd rdi, eax; mov rax, r12; syscall; 
0x00000000000447ae: movsxd rsi, dword ptr [rax + 0x14]; movsxd rdi, eax; cmp esi, eax; je 0x447bf; mov rax, r12; syscall; 
0x00000000000446b0: movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005de62: movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x00000000000584fd: movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000022a39: movsxd rsi, eax; mov eax, 0x48; mov rdx, r10; syscall; 
0x00000000000598b6: movsxd rsi, ebx; mov eax, 0x90; mov rdx, r12; syscall; 
0x0000000000058b1d: movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000004bec3: movsxd rsi, ebx; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000004c545: movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x000000000001e5d9: movsxd rsi, esi; lea rax, [rip + 0x43a1e]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x00000000000247b1: movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000245e5: movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022f46: movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004bd8b: movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000022de2: movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000022dca: movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023f1f: movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005ddd3: movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x000000000005cf02: movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000003b434: movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000023fd8: movsxd rsi, esi; mov eax, 0xff; syscall; 
0x000000000005d350: movsxd rsi, esi; mov rax, r8; syscall; 
0x0000000000023ed4: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x00000000000247c9: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000024397: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x00000000000244ee: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x0000000000022ea5: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000023e0d: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x0000000000024795: movsxd rsi, esi; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x00000000000418c2: movsxd rsi, esi; movsxd rdi, edi; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000003e466: movsxd rsi, esi; movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x0000000000022ee9: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000005df6d: movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x000000000005d22c: movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x0000000000024236: movsxd rsi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000002472f: movsxd rsi, esi; push rax; mov eax, 0xa7; syscall; 
0x0000000000023e63: movsxd rsi, esi; push rcx; mov edi, edi; mov eax, 0x122; syscall; 
0x0000000000041996: movsxd rsi, esi; syscall; 
0x0000000000035a01: movups xmm0, xmmword ptr [rip + 0x5f6a0]; test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x00000000000349a8: movups xmm0, xmmword ptr [rip + 0x60181]; add rsp, 0x40; pop rbx; ret; 
0x0000000000035a51: movups xmm0, xmmword ptr [rip + 0x60400]; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000034c8e: movups xmm0, xmmword ptr [rip + 0x60be3]; add rsp, 0x28; ret; 
0x0000000000033e16: movups xmm0, xmmword ptr [rip + 0x619a3]; ret; 
0x0000000000033e1f: movups xmm0, xmmword ptr [rip + 0x61ad6]; ret; 
0x00000000000308c8: movups xmm0, xmmword ptr [rip + 0x64c39]; divsd xmm0, xmm1; ret; 
0x000000000002fdaa: movups xmm0, xmmword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x0000000000030e59: movups xmm0, xmmword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x000000000003032a: movups xmm0, xmmword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x000000000002e390: movups xmm0, xmmword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002e65f: movups xmm0, xmmword ptr [rip + 0x673c6]; ret; 
0x000000000002ce8c: movups xmm0, xmmword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002ce6d: movups xmm0, xmmword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002d404: movups xmm0, xmmword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002d3e5: movups xmm0, xmmword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002c25e: movups xmm0, xmmword ptr [rip + 0x688cb]; ret; 
0x000000000002b98b: movups xmm0, xmmword ptr [rip + 0x691b6]; pop rbx; ret; 
0x000000000002bb11: movups xmm0, xmmword ptr [rip + 0x69d6c]; pop rbx; ret; 
0x000000000002ab4f: movups xmm0, xmmword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x000000000002ace8: movups xmm0, xmmword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x00000000000293f6: movups xmm0, xmmword ptr [rip + 0x6b8e3]; add rsp, 0x18; mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000002942f: movups xmm0, xmmword ptr [rip + 0x6c5f2]; add rsp, 0x18; mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000001bcce: movups xmm0, xmmword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x0000000000033ea7: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fa1: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000033e65: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000055fbe: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000001cf62: movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x000000000002955e: movups xmm0, xmmword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000001d3f4: movups xmm0, xmmword ptr [rsp - 8]; ret; 
0x0000000000029536: movups xmm0, xmmword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000002ce82: movups xmm1, xmmword ptr [rip + 0x683ff]; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d3fa: movups xmm1, xmmword ptr [rip + 0x68657]; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002a907: movups xmm1, xmmword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000001a59d: movups xmm1, xmmword ptr [rip + 0x7a5ec]; addsd xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000001cfb1: movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002db83: movups xmm1, xmmword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x00000000000295e5: movups xmm1, xmmword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295c6: movups xmm1, xmmword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002f62f: movups xmm2, xmmword ptr [rsp + 0xc]; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000033d4c: movups xmmword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000002f42b: movups xmmword ptr [rsi], xmm0; ret; 
0x0000000000033cde: movups xmmword ptr [rsi], xmm1; ret; 
0x000000000001c041: movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001d34c: movups xmmword ptr [rsp + 0x10], xmm2; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001d352: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001cf06: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x000000000001c047: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000034270: movups xmmword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000003436a: movups xmmword ptr [rsp + 0x1c], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000001df87: movups xmmword ptr [rsp + 0x20], xmm2; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001df8d: movups xmmword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000033e9c: movups xmmword ptr [rsp + 0xc], xmm0; call 0x22c9b; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000033e5a: movups xmmword ptr [rsp + 8], xmm0; call 0x22c9b; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001cc6d: movups xmmword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x000000000002f8f9: movups xmmword ptr [rsp - 0x10], xmm0; ret; 
0x000000000002db8d: movups xmmword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002db7d: movups xmmword ptr [rsp - 0x18], xmm4; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002f931: movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f85d: movups xmmword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x000000000003402b: movups xmmword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x00000000000378cd: movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000029558: movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x00000000000295df: movups xmmword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002e2b2: movups xmmword ptr [rsp - 4], xmm1; ret; 
0x0000000000035b2b: movups xmmword ptr [rsp - 4], xmm1; xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000001a2cc: movups xmmword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000033f96: movups xmmword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003788c: movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x0000000000029530: movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x00000000000295c0: movups xmmword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002c253: movups xmmword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7d9: movups xmmword ptr [rsp - 8], xmm1; test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000035aa0: movups xmmword ptr [rsp - 8], xmm1; xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000001a2c6: movups xmmword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000005a42b: movzx eax, al; add eax, eax; ret; 
0x0000000000021679: movzx eax, al; add rsp, 0x18; ret; 
0x0000000000026aa0: movzx eax, al; and eax, edx; ret; 
0x000000000003f224: movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000003aa4d: movzx eax, al; movsxd rax, dword ptr [r8 + rax*4]; add rax, r8; jmp rax; 
0x000000000002598e: movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000026201: movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000043262: movzx eax, al; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023ea0: movzx eax, al; neg eax; ret; 
0x000000000004ec07: movzx eax, al; pop rbx; pop r12; neg eax; ret; 
0x000000000002143f: movzx eax, al; ret; 
0x000000000005953c: movzx eax, al; shl eax, 4; ret; 
0x000000000001922c: movzx eax, al; sub eax, edx; ret; 
0x000000000002a55e: movzx eax, ax; ret; 
0x000000000003ea8b: movzx eax, bh; cmp edx, 0xbf; ja 0x3ea99; movzx eax, di; ret; 
0x000000000003b520: movzx eax, bh; ret; 
0x0000000000018300: movzx eax, byte ptr [r12]; test al, al; jne 0x182f8; mov rax, r12; pop r12; ret; 
0x000000000004de54: movzx eax, byte ptr [rax]; ret; 
0x0000000000059703: movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000017a1e: movzx eax, byte ptr [rsi + rax]; cmp cl, r8b; je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x0000000000021a0f: movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; inc eax; ret; 
0x000000000002153b: movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; ret; 
0x00000000000191e0: movzx eax, byte ptr [rsi + rdx]; sub eax, 0x30; cmp eax, 9; jbe 0x191d0; mov eax, 1; ret; 
0x0000000000018301: movzx eax, byte ptr [rsp]; test al, al; jne 0x182f8; mov rax, r12; pop r12; ret; 
0x0000000000017a27: movzx eax, cl; sub eax, r8d; ret; 
0x000000000003ea96: movzx eax, di; ret; 
0x000000000003ea8a: movzx eax, dil; cmp edx, 0xbf; ja 0x3ea99; movzx eax, di; ret; 
0x000000000003b51f: movzx eax, dil; ret; 
0x0000000000018358: movzx eax, dl; sub eax, ecx; ret; 
0x00000000000256a2: movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000019490: movzx eax, word ptr [rdi + 0x1c]; rol ax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x0000000000027b22: movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000019244: movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x000000000001e6ce: movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005c5eb: movzx edx, dl; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x0000000000019229: movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000002811c: movzx edx, word ptr [rsi + rdx*2]; cmp rdx, rcx; adc eax, 0; ret; 
0x0000000000025645: movzx esi, byte ptr [rdi + rsi]; shl edx, 8; shl esi, 0x10; or eax, esi; or eax, edx; ret; 
0x0000000000059f99: movzx esi, dh; shl esi, 7; or esi, 1; syscall; 
0x0000000000059f98: movzx esi, sil; shl esi, 7; or esi, 1; syscall; 
0x0000000000017a1d: movzx r8d, byte ptr [rsi + rax]; cmp cl, r8b; je 0x17a10; movzx eax, cl; sub eax, r8d; ret; 
0x000000000002df55: mulps xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002db9d: mulps xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000002f063: mulps xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002f1af: mulps xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000001d7b4: mulps xmm0, xmm1; mulsd xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000002940a: mulps xmm0, xmm1; ret; 
0x000000000002f635: mulps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002b08a: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab07: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x0000000000029364: mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab13: mulps xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000003085f: mulps xmm0, xmm2; pop rax; pop rbx; pop rbp; ret; 
0x000000000002e419: mulps xmm0, xmm2; ret; 
0x000000000002930c: mulps xmm0, xmm2; subsd xmm0, xmm4; addsd xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e3e2: mulps xmm0, xmm2; subsd xmm0, xmm5; ret; 
0x000000000002e628: mulps xmm0, xmm2; subss xmm0, xmm4; ret; 
0x000000000002db93: mulps xmm0, xmm4; ret; 
0x000000000002e370: mulps xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5c0: mulps xmm0, xmm5; subss xmm0, xmm5; ret; 
0x0000000000032ff2: mulps xmm0, xmm6; addsd xmm2, xmm3; addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x00000000000309ab: mulps xmm0, xmmword ptr [rip + 0x6438e]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000030f39: mulps xmm0, xmmword ptr [rip + 0x64d1c]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002feb1: mulps xmm0, xmmword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000003042e: mulps xmm0, xmmword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002e1ee: mulps xmm0, xmmword ptr [rip + 0x66993]; ret; 
0x000000000002e461: mulps xmm0, xmmword ptr [rip + 0x67424]; ret; 
0x000000000002db09: mulps xmm0, xmmword ptr [rip + 0x67780]; ret; 
0x000000000002b21d: mulps xmm0, xmmword ptr [rip + 0x69904]; addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002cbfb: mulps xmm0, xmmword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d179: mulps xmm0, xmmword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002bfa9: mulps xmm1, xmm0; addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002b297: mulps xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000001a5ad: mulps xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002e522: mulps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000029402: mulps xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000002943b: mulps xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000002e34a: mulps xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000002e59a: mulps xmm1, xmm0; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x000000000001d7b8: mulps xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000029406: mulps xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000002943f: mulps xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000002db89: mulps xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002a641: mulps xmm1, xmm4; mulsd xmm2, xmm3; addsd xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000002a5f3: mulps xmm1, xmm4; subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000002e5e3: mulps xmm1, xmmword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002acaa: mulps xmm1, xmmword ptr [rip + 0x6ad9f]; addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000001bbbf: mulps xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x0000000000033f8e: mulps xmm2, xmm1; addsd xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034023: mulps xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000001c90d: mulps xmm2, xmm3; add rsp, 0x20; movaps xmm1, xmm2; pop rbx; ret; 
0x0000000000033a09: mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a645: mulps xmm2, xmm3; addsd xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000002a5bf: mulps xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002a5cb: mulps xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000001a2c2: mulps xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001a5a9: mulps xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x00000000000309aa: mulsd xmm0, qword ptr [rip + 0x6438e]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002feb0: mulsd xmm0, qword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002e1ed: mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000002db08: mulsd xmm0, qword ptr [rip + 0x67780]; ret; 
0x000000000002b21c: mulsd xmm0, qword ptr [rip + 0x69904]; addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002cbfa: mulsd xmm0, qword ptr [rsp + 0x10]; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002df54: mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002db9c: mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000002f062: mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000001d7b3: mulsd xmm0, xmm1; mulsd xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000029409: mulsd xmm0, xmm1; ret; 
0x000000000002b089: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab06: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x0000000000029363: mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab12: mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000003085e: mulsd xmm0, xmm2; pop rax; pop rbx; pop rbp; ret; 
0x000000000002e418: mulsd xmm0, xmm2; ret; 
0x000000000002930b: mulsd xmm0, xmm2; subsd xmm0, xmm4; addsd xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e3e1: mulsd xmm0, xmm2; subsd xmm0, xmm5; ret; 
0x000000000002db92: mulsd xmm0, xmm4; ret; 
0x000000000002e36f: mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x0000000000032ff1: mulsd xmm0, xmm6; addsd xmm2, xmm3; addsd xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000001bbbe: mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000002bfa8: mulsd xmm1, xmm0; addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001a5ac: mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000029401: mulsd xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000002e349: mulsd xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000001d7b7: mulsd xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000029405: mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000002db88: mulsd xmm1, xmm4; movsd qword ptr [rsp - 0x10], xmm1; mulsd xmm0, xmm4; ret; 
0x000000000002a640: mulsd xmm1, xmm4; mulsd xmm2, xmm3; addsd xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000002a5f2: mulsd xmm1, xmm4; subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x0000000000033f8d: mulsd xmm2, xmm1; addsd xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x000000000001c90c: mulsd xmm2, xmm3; add rsp, 0x20; movaps xmm1, xmm2; pop rbx; ret; 
0x0000000000033a08: mulsd xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a644: mulsd xmm2, xmm3; addsd xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000002a5be: mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002a5ca: mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000001a5a8: mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000030f38: mulss xmm0, dword ptr [rip + 0x64d1c]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000003042d: mulss xmm0, dword ptr [rip + 0x65827]; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002e460: mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x000000000002d178: mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000002f1ae: mulss xmm0, xmm1; divss xmm0, xmm0; ret; 
0x0000000000029442: mulss xmm0, xmm1; ret; 
0x000000000002f634: mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000002e659: mulss xmm0, xmm2; ret; 
0x000000000002e627: mulss xmm0, xmm2; subss xmm0, xmm4; ret; 
0x000000000002e5bf: mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000002e5e2: mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002aca9: mulss xmm1, dword ptr [rip + 0x6ad9f]; addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000002b296: mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002e521: mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002943a: mulss xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x000000000002e599: mulss xmm1, xmm0; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x000000000002943e: mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000034022: mulss xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000001a2c1: mulss xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000015695: neg byte ptr [rcx - 0x76be0009]; ret; 
0x0000000000043265: neg eax; add rsp, 0x10; pop rbx; ret; 
0x00000000000554c6: neg eax; cmovs eax, edi; ret; 
0x0000000000055810: neg eax; cmovs rax, rdi; ret; 
0x0000000000038105: neg eax; mov dword ptr [rdi], eax; ret; 
0x000000000003a1ab: neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000005a91a: neg eax; mov eax, r8d; ret; 
0x000000000005bd6f: neg eax; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x0000000000022c12: neg eax; pop rdx; ret; 
0x000000000005b93f: neg eax; pop rsi; ret; 
0x0000000000022bb8: neg eax; ret; 
0x0000000000056866: neg eax; sbb eax, eax; ret; 
0x00000000000349ec: neg eax; sbb r8d, r8d; add r8d, 2; mov eax, r8d; ret; 
0x0000000000017253: neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x00000000000219b8: neg edi; sbb eax, eax; ret; 
0x00000000000195c2: neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x0000000000035822: neg esi; mov dword ptr [r10], esi; test r9, r9; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359a7: neg esi; mov dword ptr [r10], esi; test r9d, r9d; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x000000000005874b: neg esp; jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000003b50a: neg esp; mov dword ptr [rax], r12d; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000005874a: neg r12d; jne 0x5875e; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000003b509: neg r12d; mov dword ptr [rax], r12d; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000005a919: neg r8d; mov eax, r8d; ret; 
0x000000000005580f: neg rax; cmovs rax, rdi; ret; 
0x0000000000055561: neg rax; ret; 
0x00000000000196cb: nop dword ptr [rax + rax]; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001616b: nop dword ptr [rax + rax]; fldz; ret; 
0x000000000001710b: nop dword ptr [rax + rax]; mov eax, 0x30; mov word ptr [r8 + 0xe], ax; ret; 
0x0000000000019573: nop dword ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000018353: nop dword ptr [rax + rax]; movzx eax, dl; sub eax, ecx; ret; 
0x00000000000181d3: nop dword ptr [rax + rax]; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000000191f3: nop dword ptr [rax + rax]; ret; 
0x00000000000195cb: nop dword ptr [rax + rax]; sub r8d, edx; mov eax, r8d; ret; 
0x0000000000018ff3: nop dword ptr [rax + rax]; sub rax, 2; pop rbp; ret; 
0x0000000000019703: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000018485: nop dword ptr [rax]; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000018015: nop dword ptr [rax]; ret; 
0x00000000000187a9: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000000196ca: nop word ptr [rax + rax]; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000019572: nop word ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000018352: nop word ptr [rax + rax]; movzx eax, dl; sub eax, ecx; ret; 
0x00000000000191f2: nop word ptr [rax + rax]; ret; 
0x0000000000018ff2: nop word ptr [rax + rax]; sub rax, 2; pop rbp; ret; 
0x0000000000019797: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000043e2e: nop; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000000598b9: nop; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1e], cl; syscall; 
0x0000000000050b5e: nop; add byte ptr [rax], al; add byte ptr [rdx], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000388ad: nop; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005cbce: nop; add dword ptr [rax], eax; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000042dff: nop; add eax, 0x358d4800; xlatb; je 0x42e0d; add al, ch; ret 0; 
0x0000000000019f8d: nop; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x000000000001830f: nop; call 0x18690; add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000004c824: nop; mov rax, 0xf; syscall; 
0x000000000004fe7c: nop; push rcx; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000018fff: nop; sub rax, 1; pop rbp; ret; 
0x0000000000019f6b: nop; test rdx, rdx; je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x0000000000018f5f: nop; xor eax, eax; pop rbp; ret; 
0x0000000000017a2f: nop; xor eax, eax; ret; 
0x0000000000023f01: not byte ptr [rax + 0x48]; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x00000000000241f9: not byte ptr [rax - 0x48]; mov al, 0; add byte ptr [rax], al; syscall; 
0x000000000005df6e: not byte ptr [rax - 0x48]; or al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000004cd50: not byte ptr [rax - 0x48]; test dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005d2ce: not byte ptr [rax - 0x77]; sar byte ptr [rax + 0x5c], cl; syscall; 
0x000000000005da12: not byte ptr [rax - 0x77]; sar byte ptr [rax + 0x5e], cl; syscall; 
0x00000000000378c8: not eax; and eax, edx; movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000037886: not eax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x00000000000586d8: not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004dacc: not eax; shr eax, 0x1f; ret; 
0x0000000000022cba: not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000058f67: not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000057f65: not esi; mov rax, r10; mov rdx, r14; and esi, 0x80; or esi, 1; syscall; 
0x0000000000037885: not rax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000004d14b: or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x0000000000058938: or al, 0; add byte ptr [rax + 0xb], bh; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000028340: or al, 0; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x000000000002836c: or al, 0; add byte ptr [rax], al; mov rdi, rbx; syscall; 
0x0000000000056c74: or al, 0; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; ret; 
0x00000000000244e3: or al, 0; add byte ptr [rax], al; syscall; 
0x00000000000244e3: or al, 0; add byte ptr [rax], al; syscall; ret; 
0x00000000000177c1: or al, 0; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000022c0c: or al, 0; add byte ptr [rdi], cl; xchg eax, ebp; sal bh, 0xd8; pop rdx; ret; 
0x00000000000195ec: or al, 0x10; add rdx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x00000000000195e9: or al, 0x16; mov dword ptr [rax + rdx], ecx; add rdx, 4; test ecx, ecx; jne 0x195e8; ret; 
0x000000000005ce7e: or al, 0x24; add byte ptr [rax + 0xc8], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000058cf7: or al, 0x24; add byte ptr [rcx + rcx*4 - 0x3a], al; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005f49d: or al, 0x24; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000001bbbc: or al, 0x24; mulsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; pop rbx; pop r14; ret; 
0x00000000000318ed: or al, 0x31; shl byte ptr [rsi + 0xf], 0x7e; ret 0xe839; 
0x000000000002f58b: or al, 0x39; ret 0x173; 
0x00000000000570c5: or al, 0x39; ret; 
0x000000000003b53e: or al, 0x40; movsx edi, bh; mov eax, edi; and eax, 0xdfff; ret; 
0x0000000000029481: or al, 0x41; sete al; mov eax, r8d; ret; 
0x0000000000056fa9: or al, 0x48; add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x0000000000021a9b: or al, 0x48; add esp, 0x10; pop rbp; ret; 
0x000000000004ed69: or al, 0x48; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000033eab: or al, 0x48; add esp, 0x10; pop rbx; ret; 
0x000000000004e234: or al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000055fa5: or al, 0x48; add esp, 0x18; ret; 
0x000000000002d183: or al, 0x48; add esp, 0x20; pop rbx; ret; 
0x0000000000046339: or al, 0x48; cwde; mov eax, dword ptr [rdx + rax*8]; ret; 
0x000000000004634b: or al, 0x48; cwde; mov rax, qword ptr [rdx + rax*8]; ret; 
0x000000000005099b: or al, 0x48; lea edi, [rsp + 0xc]; call 0x4f628; add rsp, 0x18; dec eax; ret; 
0x0000000000021b98: or al, 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003b026: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000003b026: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x000000000005de60: or al, 0x48; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000017953: or al, 0x48; test edx, edx; jne 0x17940; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000027224: or al, 0x75; movsx eax, word ptr [rcx]; add byte ptr [rax], al; add bl, ch; add ecx, dword ptr [rax - 1]; ret 0xff48; 
0x000000000001bdc0: or al, 0x79; add eax, 0xebca570f; add ecx, dword ptr [rdi]; push rdi; ret 0xf66; 
0x0000000000021bba: or al, 0x7c; xor eax, 0x87f6348; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x000000000001ca71: or al, 0x83; iretd; jmp qword ptr [rsi + 0xf]; 
0x000000000001b88e: or al, 0x85; sal byte ptr [rbp + rcx - 0x7d], 0xf8; add dh, byte ptr [rbp + 0x53]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001a0a5: or al, 0x89; ja 0x1a0ad; cmp r9, 1; je 0x1a0b2; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000024b9b: or al, 0x89; ret 0x6b8b; 
0x0000000000015e5f: or al, 0x89; ret; 
0x0000000000059956: or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000058fc4: or al, 0xc7; adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x0000000000038251: or al, 0xec; add eax, 0xe0894c00; pop r12; ret; 
0x000000000002de44: or al, 0xf2; addps xmm1, xmmword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000003303d: or al, 0xf2; subps xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000001c0ee: or al, 0xf3; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x0000000000055f9f: or al, 0xf3; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000002f633: or al, 0xf3; mulps xmm0, xmm2; add rsp, 0x18; ret; 
0x00000000000432af: or al, 0xf3; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000033209: or al, 0xf3; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000005432a: or al, 0xf6; ret 0xf20; 
0x0000000000057736: or al, 0xf7; ret 0xffff; 
0x000000000001948f: or al, 0xf; mov bh, 0x47; sbb al, 0x66; rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x0000000000046832: or al, 0xf; xchg eax, esp; ret 0x8548; 
0x000000000004ca2e: or al, 1; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x000000000004c96b: or al, 1; add byte ptr [rax], al; syscall; 
0x00000000000446ab: or al, 2; add byte ptr [rax], al; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000003b295: or al, 2; je 0x3b2b6; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, r14; syscall; 
0x0000000000050b5b: or al, bh; xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000057d38: or al, bh; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x000000000003aedc: or al, byte ptr [rax]; add byte ptr [rax], al; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x0000000000050b62: or al, byte ptr [rax]; add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000037943: or al, byte ptr [rax]; add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x0000000000056cd7: or al, byte ptr [rax]; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000002950c: or al, byte ptr [rbp + 0x31]; ror byte ptr [rax + 1], 0xc0; sete r8b; mov eax, r8d; ret; 
0x000000000003b561: or al, byte ptr [rbp - 0x47b18a40]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000000527c4: or al, byte ptr [rcx - 0xa]; ret 0xf01; 
0x000000000005df71: or al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000220fe: or al, ch; and ch, 3; add byte ptr [rcx - 0x1576b311], cl; mov rsi, r12; call rbx; 
0x00000000000281e9: or al, ch; cmc; loope 0x281f0; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000455ca: or al, ch; movabs al, byte ptr [0x890824748bfffffa]; ret 0x8341; 
0x00000000000270c8: or al, ch; ret 0xff15; 
0x0000000000031084: or al, ch; ret 0xffb2; 
0x000000000002b148: or al, ch; ret; 
0x0000000000058cf4: or al, dh; or dword ptr [rsp], 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000001f064: or bh, bh; ret 0xc149; 
0x0000000000051ca6: or bh, bh; ret 0xf4eb; 
0x0000000000021629: or bh, bh; ret; 
0x0000000000023fa3: or bh, byte ptr [rax + 0xfd]; syscall; 
0x0000000000023fa3: or bh, byte ptr [rax + 0xfd]; syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x000000000001b26b: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; 
0x00000000000592d6: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; ret; 
0x00000000000595a4: or bh, byte ptr [rsi + 1]; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000001b236: or bh, byte ptr [rsi + 1]; mov rax, r9; syscall; 
0x000000000003cb0e: or bh, dh; ret; 
0x0000000000037904: or bl, bl; insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x000000000002c1e8: or bl, bl; insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000056d9f: or bl, ch; add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x56dad; call rax; 
0x0000000000060bfd: or bl, ch; and eax, dword ptr [rax + rax*8 - 0x74b7e88b]; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x0000000000022287: or bl, ch; rcr byte ptr [rbx + 0x5d], 1; pop r12; ret; 
0x0000000000035b66: or bl, dh; addps xmm0, xmmword ptr [rip + 0x5fd09]; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002e64c: or bl, dh; addps xmm1, xmm3; subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x0000000000034c8c: or bl, dh; movups xmm0, xmmword ptr [rip + 0x60be3]; add rsp, 0x28; ret; 
0x000000000002bb0f: or bl, dh; movups xmm0, xmmword ptr [rip + 0x69d6c]; pop rbx; ret; 
0x0000000000044b71: or byte ptr [r10 + 0x44], bl; mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000044bc6: or byte ptr [r11 + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000056bdc: or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000060b7b: or byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x84; popfq; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000060c06: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x0000000000060bc6: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx*2 + 0x48], 0x83; ret; 
0x0000000000046324: or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004f1ce: or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000019eae: or byte ptr [r9 + rcx*4 - 0x40], cl; ret; 
0x0000000000057712: or byte ptr [r9 - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000056109: or byte ptr [r9 - 0x76], r8b; add byte ptr [rax + 0x1b806], cl; add byte ptr [rax], al; ret; 
0x000000000005e7aa: or byte ptr [rax + 0x21], cl; ror byte ptr [rax - 0x77], 1; add eax, 0x3b183; ret; 
0x0000000000042cd5: or byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000017f4e: or byte ptr [rax + 0x39], cl; clc; jne 0x17f40; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000599ba: or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000005d6bc: or byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000039149: or byte ptr [rax + 0x61], bh; mov rdi, rbp; syscall; 
0x000000000003c5b0: or byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x000000000005d3f2: or byte ptr [rax + 0x6c], bh; syscall; 
0x0000000000021bc0: or byte ptr [rax + 0xd9], bh; mov edx, 0x800; syscall; 
0x000000000005b7ee: or byte ptr [rax + 0xe5], bh; movsxd rdi, r9d; syscall; 
0x0000000000039d04: or byte ptr [rax + 0xf], 0x44; fdivr dword ptr [rax + 0x10]; syscall; 
0x000000000004d3b6: or byte ptr [rax + 1], bh; pop rbx; pop rbp; ret; 
0x0000000000018573: or byte ptr [rax + 1], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000023235: or byte ptr [rax + 3], cl; add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000056bdd: or byte ptr [rax + 3], cl; add al, 0xca; ret; 
0x0000000000055cc8: or byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000006086e: or byte ptr [rax + 3], cl; add eax, 0x3b12a; pop rdx; pop rbp; pop r12; jmp rax; 
0x00000000000607e0: or byte ptr [rax + 3], cl; add eax, 0x3b1b8; call rax; 
0x000000000005f49a: or byte ptr [rax + 3], cl; or al, 0x24; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000005a599: or byte ptr [rax + 5], bh; mov rdi, rbp; syscall; 
0x0000000000058937: or byte ptr [rax + rax], cl; add byte ptr [rax + 0xb], bh; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000194bc: or byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; pop rbp; ret; 
0x0000000000018c97: or byte ptr [rax - 0x73], cl; add dword ptr [r8 - 0x7d], r9d; ret; 
0x00000000000392f8: or byte ptr [rax - 0x73], cl; and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000051467: or byte ptr [rax - 0x73], cl; jb 0x51474; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005157b: or byte ptr [rax - 0x73], cl; jb 0x51588; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000053828: or byte ptr [rax - 0x73], cl; jb 0x53835; mov qword ptr [rax + 8], rsi; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005393c: or byte ptr [rax - 0x73], cl; jb 0x53949; mov qword ptr [rax + 8], rsi; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x0000000000059253: or byte ptr [rax - 0x73], cl; push rsp; and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000042cc5: or byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rax + 0x29]; ret 0x148; 
0x000000000005769b: or byte ptr [rax - 0x75], cl; add ebx, dword ptr [rdx + 0x5b]; pop rbp; jmp rax; 
0x0000000000056bd9: or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000055cc4: or byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x0000000000042cdf: or byte ptr [rax - 0x75], cl; push rbx; sbb byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000004b67f: or byte ptr [rax - 0x75], cl; push rdi; or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x000000000001b330: or byte ptr [rax - 0x77], cl; and al, 0x60; mov eax, 0x81; syscall; 
0x000000000005f3b5: or byte ptr [rax - 0x77], cl; and al, 8; call qword ptr [rax - 8]; 
0x000000000005e2e1: or byte ptr [rax - 0x77], cl; je 0x5e2aa; mov byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000005146b: or byte ptr [rax - 0x77], cl; jo 0x51478; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x000000000005157f: or byte ptr [rax - 0x77], cl; jo 0x5158c; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x000000000005382c: or byte ptr [rax - 0x77], cl; jo 0x53839; movsxd rax, dword ptr [rdx]; mov qword ptr [rcx], rax; ret; 
0x0000000000053940: or byte ptr [rax - 0x77], cl; jo 0x5394d; fld qword ptr [rdx]; fstp xword ptr [rcx]; ret; 
0x00000000000279fa: or byte ptr [rax - 0x77], cl; mov qword ptr ss:[rdi], rsi; ret; 
0x000000000004cfc3: or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000005c4bd: or byte ptr [rax - 0x77], cl; ret 0x7eb; 
0x000000000003bfcd: or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000002130b: or byte ptr [rax - 0x77], cl; ret 0x8d4c; 
0x000000000003ea0b: or byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000005e2ab: or byte ptr [rax - 0x77], cl; ret 0xff48; 
0x0000000000018ca9: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000017803: or byte ptr [rax - 0x77], cl; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x0000000000044ca2: or byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 3]; xor eax, eax; ret; 
0x0000000000060b7c: or byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; popfq; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000004b683: or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x0000000000060c07: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x0000000000060bc7: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rdx*2 + 0x48], 0x83; ret; 
0x000000000001f7cb: or byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000002094d: or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000004ab9c: or byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000003d32d: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000003ca41: or byte ptr [rax - 1], cl; ret; 
0x000000000004d2d1: or byte ptr [rax], 0; mov rax, r13; mov rdi, r14; syscall; 
0x0000000000046325: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004f1cf: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004bd44: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x49af1]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd2a: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x49b13]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023e30: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x000000000002466d: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000004c03a: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000004c73e: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005cd6b: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000599d5: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000004bd5e: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000004c4a1: or byte ptr [rax], al; add byte ptr [rax], al; push rax; mov eax, 0x7f; syscall; 
0x00000000000580b8: or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000580b8: or byte ptr [rax], al; add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x00000000000232c1: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000005db71: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x0000000000041aaf: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000001906f: or byte ptr [rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004d2d2: or byte ptr [rax], al; mov rax, r13; mov rdi, r14; syscall; 
0x000000000001b297: or byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000004d18e: or byte ptr [rbp + 0x23], dh; movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005d438: or byte ptr [rbp + 0x31], al; sar byte ptr [rax + 0x10d], cl; movsxd rdi, dword ptr [r8]; syscall; 
0x0000000000019074: or byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x00000000000198f1: or byte ptr [rbp + 0x440f48c9], al; ret 0xfc3; 
0x000000000004daa0: or byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000003aae9: or byte ptr [rbp - 0x7b7bf00a], al; add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000005cdd2: or byte ptr [rbx + 0x44893040], cl; and al, 0x20; mov eax, 0xde; syscall; 
0x0000000000044bc7: or byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000018558: or byte ptr [rbx + 0x48], bl; add eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000000019dae: or byte ptr [rbx + 0x4c], bl; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000000017dd5: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000056c5c: or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000000171fd: or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000593ea: or byte ptr [rbx + 0x7e0c106], cl; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x000000000005a545: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a545: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000049736: or byte ptr [rbx + rcx*4 + 0x50], cl; and byte ptr [rcx - 0x75], al; adc al, byte ptr [rbp - 0x5677f02e]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x000000000003a2f3: or byte ptr [rbx + rcx*4 + 9], cl; syscall; 
0x0000000000044d49: or byte ptr [rcx + 0x20], bh; xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004c034: or byte ptr [rcx + 0x63], cl; cld; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000002f34c: or byte ptr [rcx + 0xca8107], 0; add byte ptr [rdi], bh; movd xmm0, edx; pop rbx; ret; 
0x0000000000047bf6: or byte ptr [rcx + 0xfff9], al; add byte ptr [rsi - 0x22], bh; ret; 
0x00000000000184da: or byte ptr [rcx + rcx*4 - 0x18], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000018201: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x00000000000189aa: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000001522e: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004de09: or byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; 
0x000000000004f8b1: or byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; mov eax, r8d; pop rbp; ret; 
0x000000000004d43a: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000004d43a: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; ret; 
0x0000000000059fa9: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; xor eax, eax; ret; 
0x0000000000021ba7: or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000019eaf: or byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000017fac: or byte ptr [rcx + rcx*8 - 0x7cb70e8c], al; ret 0x4801; 
0x00000000000577a4: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576c8: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000005610a: or byte ptr [rcx - 0x76], al; add byte ptr [rax + 0x1b806], cl; add byte ptr [rax], al; ret; 
0x0000000000028874: or byte ptr [rcx - 0x77], cl; ret 0x1bb; 
0x000000000005e4be: or byte ptr [rcx - 0x77], cl; ror byte ptr [rbp + 0x2144ff50], cl; ret 0x3145; 
0x000000000005e4bd: or byte ptr [rcx - 0x77], r9b; ror byte ptr [rbp + 0x2144ff50], cl; ret 0x3145; 
0x0000000000017100: or byte ptr [rcx - 0x7c3e7632], cl; dec byte ptr [rcx]; ja 0x170e0; ret; 
0x000000000001c0ea: or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000003ea81: or byte ptr [rcx - 0xda08], cl; inc dword ptr [rax]; ret; 
0x0000000000057d01: or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002f289: or byte ptr [rcx], 0xc7; movd xmm0, edi; ret; 
0x000000000002c33b: or byte ptr [rcx], 0xd0; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000002c31e: or byte ptr [rcx], 0xd0; movd xmm0, eax; ret; 
0x0000000000032a48: or byte ptr [rcx], al; add byte ptr [rax], al; lea rdx, [rip + 0x633b9]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000005f289: or byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000005dd78: or byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000001fa51: or byte ptr [rcx], al; ret 0x8941; 
0x000000000003c8b6: or byte ptr [rcx], al; ret; 
0x000000000003ea75: or byte ptr [rcx], cl; clc; ret; 
0x00000000000280db: or byte ptr [rcx], cl; ret 0xd089; 
0x000000000001848b: or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000001e886: or byte ptr [rcx], dh; ret 0x8348; 
0x000000000001f999: or byte ptr [rcx], dh; ret 0x8d42; 
0x000000000003b88f: or byte ptr [rcx], dh; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x000000000005f24d: or byte ptr [rcx], dh; ror byte ptr [rax - 0x73], 0x3d; ret 0x37a; 
0x000000000005d9c1: or byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000000023824: or byte ptr [rdi + rax], dl; add byte ptr [rcx], bh; ret; 
0x000000000004b324: or byte ptr [rdi - 0x3ca50004], bh; movsxd rdi, edi; push rax; mov eax, 0x94; syscall; 
0x0000000000033d17: or byte ptr [rdi], 0x28; shl byte ptr [rsi + 0xf], 1; outsb dx, byte ptr [rsi]; ret 0x2aeb; 
0x000000000002142c: or byte ptr [rdi], 0x94; rol bl, 0x83; jmp qword ptr [rax]; 
0x000000000004de53: or byte ptr [rdi], cl; mov dh, 0; ret; 
0x00000000000362ea: or byte ptr [rdi], cl; push rdi; ret 0xff3; 
0x0000000000047cc1: or byte ptr [rdi], cl; test cl, ch; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x0000000000023e9c: or byte ptr [rdi], cl; xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000044b72: or byte ptr [rdx + 0x44], bl; mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000021f57: or byte ptr [rdx + 0x5b], bl; pop rbp; pop r12; pop r13; ret; 
0x0000000000058014: or byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005dc9b: or byte ptr [rdx + 1], bh; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000056798: or byte ptr [rip + 0x100f], ah; ret; 
0x0000000000056797: or byte ptr [rip + 0x100f], r12b; ret; 
0x0000000000038041: or byte ptr [rip + 0x3ffd9400], bh; ja 0x3804c; fyl2xp1; ret; 
0x0000000000032374: or byte ptr [rip + 0xff30006], dh; pop rcx; ret; 
0x0000000000022974: or byte ptr [rsi + 0x10], bh; mov rax, r8; syscall; 
0x0000000000017dff: or byte ptr [rsi - 0x3f], ah; ret 0x4808; 
0x0000000000018f78: or byte ptr [rsi - 0x3f], ah; ret 0xeb08; 
0x0000000000022cfc: or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000001906e: or byte ptr cs:[rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000001cc71: or ch, bl; and al, 8; add rsp, 0x18; fxch st(1); ret; 
0x0000000000060bbd: or ch, bl; movsxd rax, dword ptr [rax + rax*8 - 0x74b7a88b]; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsi + rdx*2 + 0x48], 0x83; ret; 
0x000000000002d692: or ch, byte ptr [rax + 6]; add al, bl; ret 0xcad8; 
0x000000000002564b: or cl, al; out 0x10, al; or eax, esi; or eax, edx; ret; 
0x0000000000037ae6: or cl, bl; cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003810d: or cl, bl; cld; ret; 
0x000000000003811e: or cl, bl; cli; ret; 
0x000000000003802f: or cl, bl; int1; ret; 
0x0000000000017b57: or cl, byte ptr [rax + 0x39]; ret; 
0x00000000000229ea: or cl, byte ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000003a4c3: or cl, byte ptr [rax + 0x63]; ret; 
0x000000000004e765: or cl, byte ptr [rax + 0x63]; sti; mov eax, 3; syscall; 
0x00000000000221da: or cl, byte ptr [rax + 0x69]; ret; 
0x000000000005f35d: or cl, byte ptr [rax + 3]; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000038195: or cl, byte ptr [rax - 0x161400b8]; mov byte ptr [rax], 0; mov rax, r8; ret; 
0x00000000000390cb: or cl, byte ptr [rax - 0x77]; ret 0x14b8; 
0x00000000000450cc: or cl, byte ptr [rax - 0x7d]; ret; 
0x00000000000424c4: or cl, byte ptr [rax - 1]; ret 0x448d; 
0x0000000000029b5c: or cl, byte ptr [rax - 1]; ret 0x8349; 
0x000000000004fc0f: or cl, byte ptr [rax - 1]; ret; 
0x0000000000015614: or cl, byte ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x000000000004c89d: or cl, ch; rol byte ptr [rax + rax], 0; mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x0000000000023a88: or dh, byte ptr [rbp + 3]; mov byte ptr [rax], 0; mov rax, qword ptr [rip + 0x78393]; pop rdx; ret; 
0x000000000004daa2: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000004da8d: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x000000000004d50e: or dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004d148: or dh, byte ptr [rdx + 0x10]; or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x00000000000400f5: or dh, dh; ret 0x75df; 
0x00000000000574c1: or dl, byte ptr [rax + 0x48]; or edi, 0xffffffff; call 0x57e31; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x0000000000035add: or dl, dh; addps xmm0, xmmword ptr [rip + 0x5f04a]; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x000000000002c272: or dl, dh; addps xmm0, xmmword ptr [rip + 0x688b5]; ret; 
0x000000000002e40b: or dl, dh; addps xmm1, xmm3; subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x00000000000349a6: or dl, dh; movups xmm0, xmmword ptr [rip + 0x60181]; add rsp, 0x40; pop rbx; ret; 
0x000000000002b989: or dl, dh; movups xmm0, xmmword ptr [rip + 0x691b6]; pop rbx; ret; 
0x0000000000055fbc: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000001cc6b: or dl, dh; movups xmmword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000033a07: or dl, dh; mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002e7f3: or dl, dh; subps xmm0, xmmword ptr [rip + 0x66334]; ret; 
0x0000000000033a06: or dl, sil; mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000023e79: or dword ptr [rax + 0x11c], edi; syscall; 
0x0000000000023e46: or dword ptr [rax + 0xe8], edi; syscall; 
0x000000000004825f: or dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000043b10: or dword ptr [rax - 1], 0x8be5ebc0; cmp dword ptr [rbx + 0x398901cf], eax; ret; 
0x0000000000060e7b: or dword ptr [rax - 1], ecx; ret 0xa8a; 
0x0000000000026852: or dword ptr [rax - 1], ecx; ret; 
0x0000000000058a9c: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000004e32f: or dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000000022985: or dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x000000000003ae6e: or dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r12; mov rsi, r13; syscall; 
0x0000000000024560: or dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x000000000004cb5a: or dword ptr [rbp - 0x47f08a37], eax; add al, 0; add byte ptr [rax], al; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000005d470: or dword ptr [rbp - 4], 0xffffffff; xor eax, eax; add rsp, 0x18; ret; 
0x000000000004d84e: or dword ptr [rbx + 0x78920c8], eax; or eax, 0xffffffff; ret; 
0x0000000000044832: or dword ptr [rcx + 0x63], ecx; js 0x4484b; mov eax, 0x51; syscall; 
0x00000000000241ce: or dword ptr [rcx + rax], ebp; mov edx, edx; push rax; mov eax, 0x145; syscall; 
0x000000000005398a: or dword ptr [rcx - 0x140fd630], ecx; add eax, dword ptr [rbx - 0x7cb70038]; rol dword ptr [rax + rcx*2], 0x89; por mm1, mm0; ret; 
0x0000000000046abf: or dword ptr [rcx - 0x7cb7eff4], ecx; ret 0xeb04; 
0x000000000005da47: or dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x00000000000493ba: or dword ptr [rcx], esi; rol byte ptr [rbx + 0xf001078], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000047bf4: or dword ptr [rdi + 8], esi; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x0000000000051ca1: or dword ptr [rdi + rax + 0x6b], esi; test byte ptr [rdx], 0xff; ret 0xf4eb; 
0x0000000000017107: or dword ptr [rdi - 0x2a], esi; ret; 
0x000000000004db43: or dword ptr [rdi], 0x20; ret; 
0x0000000000050b66: or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000004c17e: or dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000021439: or dword ptr [rdi], ecx; xchg eax, esp; ret 0xd009; 
0x0000000000059748: or dword ptr [rdx + 0xb], edi; cmovne eax, edx; ret; 
0x0000000000051443: or dword ptr [rdx + 4], 0x14634800; mov bh, 0x48; add edx, edi; jmp rdx; 
0x0000000000019241: or dword ptr [rsi + 0x32], esi; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x00000000000191e9: or dword ptr [rsi - 0x1c], esi; mov eax, 1; ret; 
0x0000000000022cd0: or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000005ce7d: or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000058cf6: or dword ptr [rsp], 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000059a31: or dword ptr [rsp], 0; ret; 
0x0000000000056fd1: or eax, 0x1047c748; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x00000000000384a7: or eax, 0x191d8d48; in eax, 5; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; fdiv st(6); ret 0x7404; 
0x000000000004d84f: or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x00000000000217d2: or eax, 0x20; ret; 
0x0000000000039f1d: or eax, 0x246c8b4c; adc byte ptr [rax - 1], cl; ret; 
0x0000000000018ca4: or eax, 0x247c8948; or byte ptr [rax - 0x77], cl; ret; 
0x00000000000567c7: or eax, 0x30; mov dword ptr [rdi + 8], eax; movq qword ptr [rdi], xmm0; ret; 
0x00000000000599ef: or eax, 0x3b05c; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x0000000000054858: or eax, 0x418bf; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005329c: or eax, 0x42d8f; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000052d43: or eax, 0x432d0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000039471: or eax, 0x46cfe850; add dword ptr [rax], eax; mov eax, 1; pop rdx; ret; 
0x00000000000508e4: or eax, 0x48a5f; mov byte ptr [rdx], dil; ret; 
0x00000000000508ab: or eax, 0x48a98; mov byte ptr [rdx], dil; ret; 
0x0000000000058029: or eax, 0x48c0894c; mov edi, dword ptr [rsp + 8]; mov rsi, rdx; syscall; 
0x00000000000611ae: or eax, 0x48fffc14; sub ebx, 8; mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000005a3e6: or eax, 0x48fffc7e; add esp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005d43d: or eax, 0x49000001; movsxd rdi, dword ptr [rax]; syscall; 
0x0000000000022677: or eax, 0x4c000000; mov edi, eax; mov rdx, rcx; syscall; 
0x000000000005d4ad: or eax, 0x4c000001; mov edi, esi; mov rsi, rbx; mov rdx, r13; syscall; 
0x000000000004697f: or eax, 0x4f528; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000308c6: or eax, 0x5100ff2; cmp dword ptr [rsi + rax], ecx; divsd xmm0, xmm1; ret; 
0x0000000000033368: or eax, 0x570f0b75; ror byte ptr [rdi], cl; sub cl, al; divsd xmm0, xmm2; ret; 
0x000000000003351c: or eax, 0x570f0b75; ror byte ptr [rdi], cl; sub cl, al; divss xmm0, xmm2; ret; 
0x0000000000043aa1: or eax, 0x585ba; sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000004bf1f: or eax, 0x5afffcb3; ret; 
0x000000000004b21f: or eax, 0x5afffcc0; ret; 
0x0000000000023d1f: or eax, 0x5affff35; ret; 
0x000000000002de48: or eax, 0x66ce3; movaps xmm0, xmm1; ret; 
0x000000000002e5e5: or eax, 0x67292; movaps xmm0, xmm1; ret; 
0x000000000002b54c: or eax, 0x6821f; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002b44b: or eax, 0x68310; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002ce84: or eax, 0x683ff; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d3fc: or eax, 0x68657; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002b084: or eax, 0x69aa7; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x69f0b]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab01: or eax, 0x6a02a; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x6a48e]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000295d9: or eax, 0x6a192; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295ba: or eax, 0x6a1a1; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002a909: or eax, 0x6a3da; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002acb4: or eax, 0x6abbf; divss xmm0, xmm1; ret; 
0x000000000002acac: or eax, 0x6ad9f; addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x0000000000025989: or eax, 0x6ff76; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000001b892: or eax, 0x7502f883; push rbx; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001d0de: or eax, 0x7667d; ret; 
0x000000000001e6c9: or eax, 0x771ca; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000002245b: or eax, 0x79978; pop rbx; ret; 
0x000000000001a59f: or eax, 0x7a5ec; addsd xmm0, xmm4; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002b83d: or eax, 0x7e0f4866; ror dword ptr [rax + 0x21], 0xc8; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x0000000000048a70: or eax, 0x83480000; ret; 
0x000000000003fb57: or eax, 0x8348c0ff; ret 0x441c; 
0x0000000000022217: or eax, 0x8348f631; ret; 
0x00000000000258e4: or eax, 0x89480000; ret 0xc148; 
0x000000000005d64c: or eax, 0x8948fe89; out dx, eax; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x0000000000023e75: or eax, 0x975f685; mov eax, 0x11c; syscall; 
0x000000000004d5cb: or eax, 0xb8e68948; adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x000000000002e36a: or eax, 0xc15c0ff2; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5ba: or eax, 0xc15c0ff3; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000002e348: or eax, 0xc8590ff2; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000002e598: or eax, 0xc8590ff3; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x00000000000216a4: or eax, 0xe783c7ff; jg 0x2162e; jmp qword ptr [rax]; 
0x00000000000486c5: or eax, 0xe8ef8948; ret 0xffdc; 
0x000000000004d042: or eax, 0xebb8; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, r8; syscall; 
0x0000000000023207: or eax, 0xffffffff; add rsp, 0x18; pop rbx; pop r12; ret; 
0x0000000000041327: or eax, 0xffffffff; add rsp, 0x28; ret; 
0x0000000000024b53: or eax, 0xffffffff; cmp edx, r8d; jb 0x24b61; seta al; movzx eax, al; ret; 
0x000000000003bf2f: or eax, 0xffffffff; mov dword ptr [rax], 0x54; mov rax, r8; pop rdx; ret; 
0x000000000003c7ad: or eax, 0xffffffff; mov eax, r8d; ret; 
0x00000000000257ca: or eax, 0xffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b3e4: or eax, 0xffffffff; pop rdx; ret; 
0x0000000000022c6e: or eax, 0xffffffff; ret; 
0x000000000005974a: or eax, dword ptr [rax]; add byte ptr [rax], al; cmovne eax, edx; ret; 
0x0000000000039c86: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000003b008: or eax, dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000005a0c6: or eax, dword ptr [rax]; add byte ptr [rax], al; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005893c: or eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000059527: or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000005a4e0: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003cb3f: or eax, dword ptr [rbp + 0x31]; inc dword ptr [rbp + 0x31]; div byte ptr [rcx]; fild dword ptr [rbp + 0x31]; in al, 0xf6; ret; 
0x000000000002947a: or eax, dword ptr [rbp + 0x31]; ror byte ptr [rax - 0x3f], 0xe0; or al, 0x41; sete al; mov eax, r8d; ret; 
0x0000000000033205: or eax, dword ptr [rbp - 0xcf38640]; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000033039: or eax, dword ptr [rbp - 0xdf38637]; subps xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000021402: or eax, dword ptr [rbx - 0x3fcecf11]; cmp edi, 9; setbe al; ret; 
0x0000000000029cf9: or eax, dword ptr [rcx - 0x77]; ret; 
0x000000000005dd09: or eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000221d5: or eax, dword ptr [rdx + 3]; add bl, ch; or cl, byte ptr [rax + 0x69]; ret; 
0x000000000004c431: or eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000614da: or eax, dword ptr [rip - 0x74b80000]; mov esp, 0x8824; add al, ch; ret; 
0x000000000005587a: or eax, eax; shl rdx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000558ba: or eax, eax; shr rdx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000002817a: or eax, edi; add eax, 0x73e97; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000003ea76: or eax, edi; ret; 
0x000000000002c33c: or eax, edx; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000002c31f: or eax, edx; movd xmm0, eax; ret; 
0x000000000002c2fe: or eax, edx; movq xmm0, rax; ret; 
0x00000000000439a4: or eax, edx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002143d: or eax, edx; movzx eax, al; ret; 
0x0000000000025651: or eax, edx; ret; 
0x0000000000022d55: or eax, esi; and eax, edi; ret; 
0x0000000000057d23: or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000002564f: or eax, esi; or eax, edx; ret; 
0x000000000005d951: or ebp, dword ptr [rdx - 0x3fce0005]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005da21: or ebx, dword ptr [rax - 0x3ca50005]; push rax; mov eax, 0x56; syscall; 
0x000000000005b86e: or ebx, dword ptr [rcx + 0x4c]; mov esi, esp; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000002b091: or ebx, dword ptr [rdi + 0xff20006]; pop rcx; ret 0xff2; 
0x000000000002ee38: or ebx, ebp; add al, 0xf2; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef48: or ebx, ebp; add al, 0xf2; minps xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ee7e: or ebx, ebp; add al, 0xf3; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef91: or ebx, ebp; add al, 0xf3; minps xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f1ad: or ebx, esi; mulps xmm0, xmm1; divss xmm0, xmm0; ret; 
0x000000000002e6e0: or ebx, esi; subps xmm0, xmm1; ret; 
0x000000000004a7b6: or ecx, dword ptr [rax + 1]; ret 0x894c; 
0x000000000005ef35: or ecx, dword ptr [rax - 0x77]; js 0x5efa2; mov qword ptr [rip + 0x3d077], rdi; ret; 
0x000000000001b3cc: or ecx, dword ptr [rax - 0x77]; test dword ptr [rcx + rcx*4 - 0x3a], 0xfffc20e9; call qword ptr [rax - 0x18]; 
0x00000000000464c9: or ecx, dword ptr [rax - 0x7d]; ret 0x4804; 
0x000000000003bbfd: or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000028333: or ecx, dword ptr [rax - 0x7f]; ret; 
0x000000000005a97e: or ecx, dword ptr [rax - 1]; ret 0x8948; 
0x0000000000049938: or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x000000000003336a: or ecx, dword ptr [rdi]; push rdi; ror byte ptr [rdi], cl; sub cl, al; divsd xmm0, xmm2; ret; 
0x000000000003351e: or ecx, dword ptr [rdi]; push rdi; ror byte ptr [rdi], cl; sub cl, al; divss xmm0, xmm2; ret; 
0x0000000000037aec: or ecx, ebx; insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000021414: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x000000000002178d: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000043d7a: or edi, 0xffffffff; call 0x1b546; mov rdi, r12; call 0x56922; mov eax, 0x39; syscall; 
0x00000000000574c4: or edi, 0xffffffff; call 0x57e31; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x0000000000043b18: or edi, 1; mov dword ptr [rcx], edi; ret; 
0x00000000000450e5: or edi, dword ptr [rbp - 0xb7f68b]; ret; 
0x000000000002f28a: or edi, eax; movd xmm0, edi; ret; 
0x000000000002f174: or edi, eax; movq xmm0, rdi; ret; 
0x000000000005a62f: or edi, edi; iretd; jle 0x5a639; add eax, 0x15180; ret; 
0x0000000000038ad4: or edi, edi; ret 0x8941; 
0x000000000002f34f: or edx, 0x3f000000; movd xmm0, edx; pop rbx; ret; 
0x000000000002f2f7: or edx, eax; movq xmm0, rdx; pop rbx; ret; 
0x0000000000057040: or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000037b69: or edx, ecx; ret; 
0x000000000002da00: or edx, esi; addps xmm0, xmmword ptr [rip + 0x67127]; ret; 
0x000000000002f061: or edx, esi; mulps xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x000000000002e6a2: or edx, esi; subps xmm0, xmm1; ret; 
0x000000000005703f: or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x00000000000447ee: or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000005d3fb: or esi, 0xffffffff; mov rdi, rax; mov eax, 0x72; syscall; 
0x0000000000057f73: or esi, 1; syscall; 
0x0000000000058c9f: or esi, 6; mov r10, rbx; mov rax, r13; syscall; 
0x0000000000058d02: or esi, 7; syscall; 
0x00000000000246af: or esi, dword ptr [rbx + 0x11]; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000003c2ac: or esi, dword ptr [rbx + 0x14]; movsxd rdi, r12d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x00000000000419c4: or esi, dword ptr [rbx + 0x14]; movsxd rdi, r8d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000002159d: or esi, dword ptr [rdi + 0x53]; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000592ab: or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x00000000000567f5: or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000057d02: or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000022cb9: or esi, edi; shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000004d298: or esp, 0x440; mov eax, r12d; pop rdx; pop rbx; pop r12; ret; 
0x000000000004e32a: or esp, 0xffffffff; mov dword ptr [rax], 9; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000003b510: or esp, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000004dd8b: or esp, 0xffffffff; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000025850: or esp, 0xffffffff; mov rax, r12; pop rdx; pop rbx; pop r12; ret; 
0x000000000004c17d: or qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000056d9e: or r11b, bpl; add al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x56dad; call rax; 
0x000000000002584f: or r12, 0xffffffffffffffff; mov rax, r12; pop rdx; pop rbx; pop r12; ret; 
0x000000000004d297: or r12d, 0x440; mov eax, r12d; pop rdx; pop rbx; pop r12; ret; 
0x000000000004e329: or r12d, 0xffffffff; mov dword ptr [rax], 9; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000000003b50f: or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x000000000004dd8a: or r12d, 0xffffffff; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000003bf2e: or r8, 0xffffffffffffffff; mov dword ptr [rax], 0x54; mov rax, r8; pop rdx; ret; 
0x0000000000058cf3: or r8b, r14b; or dword ptr [rsp], 0; mov esi, r8d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000003c7ac: or r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000000257c9: or rax, 0xffffffffffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e5d2: or rax, 0xffffffffffffffff; pop rdx; ret; 
0x00000000000275b8: or rax, 0xffffffffffffffff; ret; 
0x000000000004c430: or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000055879: or rax, r8; shl rdx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000558b9: or rax, r8; shr rdx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000002c2fd: or rax, rdx; movq xmm0, rax; ret; 
0x00000000000439a3: or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x0000000000055629: or rax, rdx; ret; 
0x00000000000574c3: or rdi, 0xffffffffffffffff; call 0x57e31; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000002f173: or rdi, rax; movq xmm0, rdi; ret; 
0x000000000002f2f6: or rdx, rax; movq xmm0, rdx; pop rbx; ret; 
0x0000000000037b68: or rdx, rcx; ret; 
0x000000000005d3fa: or rsi, 0xffffffffffffffff; mov rdi, rax; mov eax, 0x72; syscall; 
0x0000000000043aaa: orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x0000000000057cfd: out 0, al; add byte ptr [rax], al; or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002f285: out 0, eax; add byte ptr [rax], al; or byte ptr [rcx], 0xc7; movd xmm0, edi; ret; 
0x0000000000022611: out 0, eax; add byte ptr [rax], al; syscall; 
0x000000000002564d: out 0x10, al; or eax, esi; or eax, edx; ret; 
0x0000000000057d1c: out 0x1f, al; and eax, 0x7fffffff; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005743a: out 0x1f, al; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000055785: out 0x2b, eax; cld; push rdi; fdivr dword ptr [rcx]; ret; 
0x00000000000555ea: out 0x41, al; call rax; 
0x0000000000017958: out 0x45, eax; xor eax, eax; mov rax, r8; ret; 
0x000000000004b282: out 0x48, al; mov edi, ebp; pop rbp; pop r12; jmp rcx; 
0x00000000000607dc: out 0x48, eax; mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x3b1b8]; call rax; 
0x0000000000041a08: out 0x48, eax; mov ebp, esi; push rbx; mov rbx, rcx; syscall; 
0x000000000005d5d9: out 0x49, al; movsxd rdi, eax; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000004eb5c: out 0x4c, eax; mov eax, ecx; syscall; 
0x0000000000041a5a: out 0x4c, eax; mov edx, ebp; movsxd rsi, esi; syscall; 
0x000000000003af78: out 0x4c, eax; mov esi, ebp; mov rdx, rbx; syscall; 
0x000000000003ae74: out 0x4c, eax; mov esi, ebp; syscall; 
0x000000000005774c: out 0x5a, eax; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000000522ba: out 0x80, al; jp 0x522bf; and eax, 0x83481675; ret 0x4802; 
0x000000000002142b: out 0x80, eax; sete al; ret; 
0x000000000005555c: out 0x85, al; leave; jne 0x55564; neg rax; ret; 
0x00000000000555a8: out 0x85, al; leave; jne 0x555b0; neg rax; ret; 
0x000000000005b872: out 0x89, al; out dx, eax; pop rbp; pop r12; jmp rdx; 
0x000000000005cd92: out 0x89, eax; ret; 
0x000000000003b58c: out 0xa, al; mov dword ptr [rdx], esi; ret; 
0x00000000000557fe: out 0xb0, eax; add eax, ebp; adc dh, byte ptr [rdi + rdi*8 - 0x1f76b301]; pop r12; ret; 
0x000000000004d5ce: out 0xb8, al; adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x00000000000226a9: out 0xbf, al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000022304: out 0xe8, al; sub eax, 0x8948ffff; ret; 
0x000000000004affc: out 0xe8, eax; cmp dword ptr [rax + rax - 0x1f76b400], esi; pop r12; ret; 
0x0000000000043d84: out 0xe8, eax; cwde; sub eax, dword ptr [rcx]; add byte ptr [rax + 0x39], bh; syscall; 
0x0000000000022316: out 0xe8, eax; hlt; sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x000000000005d94f: out 0xe8, eax; or ebp, dword ptr [rdx - 0x3fce0005]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000058a99: out 0xe8, eax; push rdi; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000001a12a: out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000005a50a: out 0xf0, al; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x00000000000195c1: out 0xf7, al; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x00000000000592a9: out 0xfc, al; or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x0000000000056cd4: out 1, al; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000059213: out 7, al; and al, 0x7f; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000059143: out 7, al; or esi, 1; syscall; 
0x000000000003ea74: out 8, eax; or eax, edi; ret; 
0x0000000000019f67: out dx, al; add cl, byte ptr [rcx - 0x7ab76fc4]; sal byte ptr [rsi - 0x75], cl; adc al, 0xb1; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001a038: out dx, al; add dword ptr [rbx - 0xc], esi; ret; 
0x0000000000053e0a: out dx, al; and al, byte ptr [rax + rax]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x000000000005da05: out dx, al; cld; inc dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x18; ret; 
0x0000000000026c61: out dx, al; cmp cl, 0x20; je 0x26c5d; ret; 
0x000000000004f608: out dx, al; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004f18b: out dx, al; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000003af7b: out dx, al; mov rdx, rbx; syscall; 
0x000000000002e738: out dx, al; pop rax; ret; 
0x0000000000016171: out dx, al; ret; 
0x000000000003ae77: out dx, al; syscall; 
0x000000000001f2b6: out dx, eax; adc al, byte ptr [rbx - 0x7cb6c01d]; ret; 
0x0000000000060608: out dx, eax; add dword ptr [rdx - 0x2d], esi; sub rbx, 8; call qword ptr [rbx]; 
0x0000000000060604: out dx, eax; add ecx, dword ptr [rcx - 0x7d]; out dx, eax; add dword ptr [rdx - 0x2d], esi; sub rbx, 8; call qword ptr [rbx]; 
0x0000000000021493: out dx, eax; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000021471: out dx, eax; and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x000000000005d651: out dx, eax; call 0x17080; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000004c903: out dx, eax; call 0x17080; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000059f38: out dx, eax; call 0x3aff9; xor eax, eax; pop rbp; ret; 
0x000000000004db63: out dx, eax; call 0x4dc59; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005cb5e: out dx, eax; call 0x5767b; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004d515: out dx, eax; call qword ptr [rbp + 0x48]; 
0x000000000004dd4c: out dx, eax; call qword ptr [rbp + 0x50]; 
0x0000000000045f55: out dx, eax; call rax; 
0x000000000001a16f: out dx, eax; in al, 0xf; xchg eax, edi; ret 0x2e0f; 
0x000000000003988e: out dx, eax; lea rcx, [rsp + 0x30]; call rax; 
0x000000000004db6b: out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x0000000000045cd6: out dx, eax; mov r14d, 2; call rax; 
0x000000000005a5de: out dx, eax; mov r8, rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000004d52b: out dx, eax; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000045d95: out dx, eax; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000018308: out dx, eax; mov rax, r12; pop r12; ret; 
0x000000000005711e: out dx, eax; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000570eb: out dx, eax; mov rax, r8; syscall; 
0x000000000004ddfe: out dx, eax; mov rax, r9; syscall; 
0x00000000000381e8: out dx, eax; mov rax, rdx; add rax, rbx; pop rbx; ret; 
0x0000000000022142: out dx, eax; mov rdx, qword ptr [rsp + 8]; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x0000000000022105: out dx, eax; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000005d6e4: out dx, eax; mov rsi, rbx; mov rdx, qword ptr [rsp + 8]; syscall; 
0x000000000004c910: out dx, eax; mov rsi, rbx; syscall; 
0x000000000004b2d9: out dx, eax; mov rsi, rdx; syscall; 
0x000000000004b285: out dx, eax; pop rbp; pop r12; jmp rcx; 
0x000000000005b874: out dx, eax; pop rbp; pop r12; jmp rdx; 
0x000000000004f5ac: out dx, eax; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000037fe3: out dx, eax; ret; 
0x000000000002157e: out dx, eax; stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000002473d: out dx, eax; sub bh, bh; lcall [rdx - 0x3d]; push rax; mov eax, 0xa8; syscall; 
0x0000000000039151: out dx, eax; syscall; 
0x0000000000021404: out dx, eax; xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x00000000000214de: out dx, eax; xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000002adda: outsb dx, byte ptr [rsi]; fsub dword ptr [rsi + 0xf]; outsb dx, byte ptr [rsi]; sal bl, 0xf; pop rcx; ret; 
0x00000000000315a2: outsb dx, byte ptr [rsi]; idiv edi; jmp qword ptr [rcx]; 
0x000000000005b685: outsb dx, byte ptr [rsi]; imul edi, esp, -1; add rsp, 0x18; ret; 
0x0000000000043aa0: outsb dx, byte ptr [rsi]; or eax, 0x585ba; sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x0000000000033cc2: outsb dx, byte ptr [rsi]; ret 0x17eb; 
0x0000000000033d1d: outsb dx, byte ptr [rsi]; ret 0x2aeb; 
0x000000000002b4a1: outsb dx, byte ptr [rsi]; ret 0x5489; 
0x00000000000357dd: outsb dx, byte ptr [rsi]; ret 0x774; 
0x000000000002bd6a: outsb dx, byte ptr [rsi]; ret 0x8348; 
0x000000000002b47d: outsb dx, byte ptr [rsi]; ret 0x88e8; 
0x000000000002f554: outsb dx, byte ptr [rsi]; ret 0x8b48; 
0x000000000002f2fc: outsb dx, byte ptr [rsi]; ret 0xc35b; 
0x000000000002fe7a: outsb dx, byte ptr [rsi]; ret 0xe0e8; 
0x0000000000030969: outsb dx, byte ptr [rsi]; ret 0xff2; 
0x00000000000335ca: outsb dx, byte ptr [rsi]; ret 0xff3; 
0x000000000001c710: outsb dx, byte ptr [rsi]; ret; 
0x000000000002adde: outsb dx, byte ptr [rsi]; sal bl, 0xf; pop rcx; ret; 
0x0000000000035ed5: outsb dx, byte ptr [rsi]; sal bl, 1; mulps xmm0, xmm2; ret; 
0x000000000002ac4f: outsb dx, byte ptr [rsi]; sal dl, 0xf; pop rcx; ret; 
0x00000000000439a9: outsb dx, byte ptr [rsi]; sal dl, 0xf; pop rsp; add eax, 0x5117d; pop rdx; ret; 
0x0000000000035e68: outsb dx, byte ptr [rsi]; sal dl, 1; mulps xmm0, xmm2; ret; 
0x0000000000056c6c: outsb dx, byte ptr [rsi]; sldt word ptr [rax]; ret; 
0x00000000000373ce: outsb dx, byte ptr [rsi]; xlatb; add eax, 0xf486600; outsb dx, byte ptr [rsi]; ret; 
0x0000000000019af0: outsd dx, dword ptr [rsi]; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000021e61: outsd dx, dword ptr [rsi]; add rax, qword ptr [r8]; mov rax, qword ptr [rdi]; ret; 
0x0000000000050839: outsd dx, dword ptr [rsi]; mov eax, dword ptr [rax + rax]; mov rax, r9; syscall; 
0x0000000000037abd: pcmpeqd mm1, mm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037ab0: pcmpeqd mm1, mm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037abc: pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037aaf: pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000379fa: pcmpgtd mm0, qword ptr [rbp + 0x78e8d9c0]; add eax, 0xd9ddfdd9; ret; 
0x000000000005873e: pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x0000000000019830: pop qword ptr [rbx + rcx*4 + 4]; mov es, word ptr [rbp - 0x6af0be40]; ret 0x3944; 
0x0000000000019e1b: pop qword ptr [rbx + rcx*4 + 4]; mov es, word ptr [rcx + rdi - 0x40]; je 0x19e10; sub eax, r8d; ret; 
0x000000000003d4ac: pop qword ptr [rcx]; add byte ptr [rax - 0x77], cl; pop rbp; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000004990e: pop r12; cdqe; pop r13; ret; 
0x0000000000030d09: pop r12; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x0000000000060878: pop r12; jmp rax; 
0x000000000004b287: pop r12; jmp rcx; 
0x000000000005b876: pop r12; jmp rdx; 
0x000000000004ec0b: pop r12; neg eax; ret; 
0x000000000001b37b: pop r12; pop r13; pop r14; jmp rax; 
0x000000000002558c: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000000001552f: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001b3a4: pop r12; pop r13; pop r14; ret; 
0x0000000000015234: pop r12; pop r13; ret; 
0x0000000000046664: pop r12; pop r14; pop r15; ret; 
0x000000000003a7ed: pop r12; pop r14; ret; 
0x000000000005d853: pop r12; pop rbp; ret; 
0x0000000000017613: pop r12; ret; 
0x00000000000437ed: pop r12; sar eax, 0x1f; pop r13; pop r14; ret; 
0x0000000000018160: pop r12; sub eax, r8d; ret; 
0x000000000002214d: pop r13; jmp rax; 
0x000000000001b37d: pop r13; pop r14; jmp rax; 
0x000000000002558e: pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000015531: pop r13; pop r14; pop r15; ret; 
0x000000000001b3a6: pop r13; pop r14; ret; 
0x0000000000015236: pop r13; ret; 
0x000000000001b37f: pop r14; jmp rax; 
0x0000000000025590: pop r14; pop r15; pop rbp; ret; 
0x0000000000015533: pop r14; pop r15; ret; 
0x000000000001b3a8: pop r14; ret; 
0x0000000000025592: pop r15; pop rbp; ret; 
0x0000000000015535: pop r15; ret; 
0x000000000004081c: pop rax; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000002b28c: pop rax; adc eax, 0x6a5e6; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x00000000000154f4: pop rax; add al, byte ptr [rax]; add al, ch; ret 0xd0; 
0x000000000004c71e: pop rax; add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000003e48b: pop rax; add byte ptr [rdi + rax + 0x48], dh; add eax, 0xa0; ret; 
0x000000000005e130: pop rax; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000035ae0: pop rax; add eax, 0x5f04a; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b69: pop rax; add eax, 0x5fd09; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002da03: pop rax; add eax, 0x67127; ret; 
0x000000000002c275: pop rax; add eax, 0x688b5; ret; 
0x000000000002b226: pop rax; add eax, 0x69d9c; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b08f: pop rax; add eax, 0x69f0b; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ab58: pop rax; add eax, 0x69fea; ret; 
0x000000000002aeba: pop rax; add eax, 0x6a118; add rsp, 0x18; ret; 
0x000000000002ab0c: pop rax; add eax, 0x6a48e; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002af6b: pop rax; add eax, 0x6aaf3; add rsp, 0x18; ret; 
0x000000000002acf1: pop rax; add eax, 0x6ad5d; ret; 
0x000000000005f4a2: pop rax; add rsp, 0x100; ret; 
0x0000000000030f42: pop rax; and al, 4; add rsp, 0x18; ret; 
0x00000000000309b4: pop rax; and al, 8; add rsp, 0x28; ret; 
0x000000000002e5dc: pop rax; call 0xffffffffcd5ef5d5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002ff08: pop rax; fld dword ptr [rcx - 3]; jle 0x2ff20; xchg dword ptr [rdx + rax + 0x280f0000], ebp; ret 0xff3; 
0x0000000000037947: pop rax; fld1; fsubp st(1); ret; 
0x000000000001c148: pop rax; fxch st(1); ret; 
0x0000000000043a29: pop rax; imul rax, qword ptr [rip + 0x584a6]; inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000001ffdc: pop rax; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000021ba6: pop rax; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x000000000002de47: pop rax; or eax, 0x66ce3; movaps xmm0, xmm1; ret; 
0x000000000002acb3: pop rax; or eax, 0x6abbf; divss xmm0, xmm1; ret; 
0x0000000000027f2b: pop rax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000023012: pop rax; pop rbx; pop rbp; ret; 
0x000000000002c817: pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000002aefe: pop rax; ret 0x11e8; 
0x000000000002b31b: pop rax; ret 0x280f; 
0x000000000002cd14: pop rax; ret 0x39eb; 
0x0000000000034c2e: pop rax; ret 0x4866; 
0x00000000000366e0: pop rax; ret 0x4eb; 
0x000000000003479f: pop rax; ret 0x8545; 
0x000000000002ae4d: pop rax; ret 0xbde8; 
0x000000000002a5d0: pop rax; ret 0xf2c3; 
0x000000000002db40: pop rax; ret 0xf66; 
0x00000000000296d5: pop rax; ret 0xff2; 
0x000000000001bfa0: pop rax; ret 0xff3; 
0x000000000002a900: pop rax; ret 0xff85; 
0x000000000003a6c6: pop rax; ret 1; 
0x000000000001bf1a: pop rax; ret; 
0x000000000003426d: pop rax; retf 0xff2; adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000001bf5c: pop rax; retf 0xff2; pop rsp; ret; 
0x000000000002a02f: pop rax; retf 0xff2; pop rsp; sal edx, 0xf; pop rax; ret 0xff2; 
0x0000000000034367: pop rax; retf 0xff3; adc dword ptr [rsp + 0x1c], ecx; add rsp, 0x20; pop rbx; ret; 
0x0000000000033918: pop rax; retf; addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002e40e: pop rax; retf; subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e64f: pop rax; retf; subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000003176d: pop rax; sal bl, 0xf; pop rcx; ret 0xff3; 
0x0000000000031281: pop rax; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000033332: pop rax; sal ebx, 0xf; pop rax; ret 0xff3; 
0x0000000000033a0e: pop rax; sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000002db06: pop rax; sal edx, 0xf; pop rcx; add eax, 0x67780; ret; 
0x000000000003391c: pop rax; sal edx, 1; addps xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002a64e: pop rax; sal edx, 1; cvtps2pd xmm0, xmm2; ret; 
0x0000000000032ff7: pop rax; sal edx, cl; addps xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000002e7ec: pop rax; shl dword ptr [rsi + 0xf], 0x2f; retf 0x876; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c26b: pop rax; shl dword ptr [rsi + 0xf], 0x2f; sal dword ptr [rsi + 8], 1; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x0000000000022d0b: pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x00000000000349a3: pop rax; shr ebx, 8; movsd xmm0, qword ptr [rip + 0x60181]; add rsp, 0x40; pop rbx; ret; 
0x0000000000057d58: pop rax; xor byte ptr [rbx + 0x4429005], cl; add byte ptr [rcx], bh; ret; 
0x00000000000590df: pop rbp; add al, 0x39; ret 0xe275; 
0x000000000003d4b1: pop rbp; add byte ptr [rax + 0x5b], bl; pop rbp; ret; 
0x000000000001c49f: pop rbp; add byte ptr [rax], al; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001cfad: pop rbp; add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000044088: pop rbp; clc; leave; ret; 
0x000000000002214e: pop rbp; jmp rax; 
0x000000000001913b: pop rbp; mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x000000000001911a: pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000003d32c: pop rbp; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000004990d: pop rbp; pop r12; cdqe; pop r13; ret; 
0x0000000000030d08: pop rbp; pop r12; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x0000000000060877: pop rbp; pop r12; jmp rax; 
0x000000000004b286: pop rbp; pop r12; jmp rcx; 
0x000000000005b875: pop rbp; pop r12; jmp rdx; 
0x000000000001b37a: pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000001552e: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001b3a3: pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000015233: pop rbp; pop r12; pop r13; ret; 
0x0000000000046663: pop rbp; pop r12; pop r14; pop r15; ret; 
0x000000000003a7ec: pop rbp; pop r12; pop r14; ret; 
0x0000000000017612: pop rbp; pop r12; ret; 
0x00000000000437ec: pop rbp; pop r12; sar eax, 0x1f; pop r13; pop r14; ret; 
0x000000000001815f: pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000002214c: pop rbp; pop r13; jmp rax; 
0x000000000001b37e: pop rbp; pop r14; jmp rax; 
0x000000000002558f: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x0000000000015532: pop rbp; pop r14; pop r15; ret; 
0x000000000001b3a7: pop rbp; pop r14; ret; 
0x0000000000015237: pop rbp; ret; 
0x000000000001967e: pop rbp; sar rax, 2; pop r12; ret; 
0x0000000000021477: pop rbp; setbe al; ret; 
0x00000000000187a0: pop rbp; sub eax, r8d; pop r12; pop r13; ret; 
0x00000000000453d6: pop rbx; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x7174; 
0x0000000000019581: pop rbx; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x0000000000018559: pop rbx; add rax, rbp; pop rbp; pop r12; pop r13; ret; 
0x000000000001821c: pop rbx; cmovne rax, rdx; ret; 
0x000000000001893e: pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x000000000001be74: pop rbx; fxch st(1); ret; 
0x0000000000017785: pop rbx; mov eax, dword ptr [rax]; ret; 
0x00000000000218d9: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000000198ef: pop rbx; mov ecx, dword ptr [rax]; test ecx, ecx; cmove rax, rdx; ret; 
0x000000000002027c: pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000020b9a: pop rbx; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000019daf: pop rbx; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000003bcde: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000005e4b4: pop rbx; mov rax, r9; pop rbp; pop r12; ret; 
0x0000000000037e76: pop rbx; movaps xmm0, xmm2; pop rbp; pop r12; ret; 
0x000000000004b1db: pop rbx; neg eax; ret; 
0x000000000004ec0a: pop rbx; pop r12; neg eax; ret; 
0x00000000000274ce: pop rbx; pop r12; pop r13; ret; 
0x000000000005d852: pop rbx; pop r12; pop rbp; ret; 
0x00000000000189ae: pop rbx; pop r12; ret; 
0x000000000001bbc8: pop rbx; pop r14; ret; 
0x00000000000576a0: pop rbx; pop rbp; jmp rax; 
0x0000000000030d07: pop rbx; pop rbp; pop r12; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x000000000001b379: pop rbx; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000001b3a2: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000015232: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000046662: pop rbx; pop rbp; pop r12; pop r14; pop r15; ret; 
0x00000000000466bd: pop rbx; pop rbp; pop r12; pop r14; ret; 
0x0000000000017611: pop rbx; pop rbp; pop r12; ret; 
0x0000000000031542: pop rbx; pop rbp; pop r14; ret; 
0x00000000000171fe: pop rbx; pop rbp; ret; 
0x000000000001967d: pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x000000000001879f: pop rbx; pop rbp; sub eax, r8d; pop r12; pop r13; ret; 
0x0000000000017774: pop rbx; ret; 
0x0000000000021690: pop rbx; setne al; movzx eax, al; ret; 
0x000000000004b9e3: pop rbx; sub eax, r10d; ret; 
0x00000000000181d8: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000023be3: pop rcx; adc al, 0xff; call qword ptr [rbx + 0x48]; 
0x00000000000309ac: pop rcx; add eax, 0x6438e; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000030f3a: pop rcx; add eax, 0x64d1c; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002feb2: pop rcx; add eax, 0x64e88; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000003042f: pop rcx; add eax, 0x65827; subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002e1ef: pop rcx; add eax, 0x66993; ret; 
0x000000000002e462: pop rcx; add eax, 0x67424; ret; 
0x000000000002db0a: pop rcx; add eax, 0x67780; ret; 
0x000000000002b21e: pop rcx; add eax, 0x69904; addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000033b06: pop rcx; add rsp, 0x18; ret; 
0x000000000002cbfc: pop rcx; and al, 0x10; divsd xmm0, qword ptr [rsp + 8]; add rsp, 0x30; pop rbx; ret; 
0x000000000002d17a: pop rcx; and al, 0x10; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000001bbc0: pop rcx; and al, 8; add rsp, 0x28; pop rbx; pop r14; ret; 
0x000000000001a2c3: pop rcx; call 0x6412b2bc; and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000031662: pop rcx; loope 0x3169e; ret 0xee75; 
0x000000000003eaef: pop rcx; mov rax, r12; pop rsi; pop r12; ret; 
0x000000000005b86f: pop rcx; mov rsi, r12; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000005b93e: pop rcx; neg eax; pop rsi; ret; 
0x0000000000029b5b: pop rcx; or cl, byte ptr [rax - 1]; ret 0x8349; 
0x000000000002e5e4: pop rcx; or eax, 0x67292; movaps xmm0, xmm1; ret; 
0x000000000002acab: pop rcx; or eax, 0x6ad9f; addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000001d756: pop rcx; ret 0x280f; 
0x000000000002d0f9: pop rcx; ret 0x448b; 
0x000000000001e40f: pop rcx; ret 0x4866; 
0x0000000000030860: pop rcx; ret 0x5b58; 
0x000000000002f636: pop rcx; ret 0x8348; 
0x0000000000035e6c: pop rcx; ret 0x83c3; 
0x000000000003115d: pop rcx; ret 0xc0ff; 
0x0000000000035ed9: pop rcx; ret 0xdbc3; 
0x000000000001df2c: pop rcx; ret 0xdee8; 
0x000000000002e41a: pop rcx; ret 0xf2c3; 
0x000000000002e65b: pop rcx; ret 0xf3c3; 
0x000000000001cbdd: pop rcx; ret 0xf66; 
0x000000000001c902: pop rcx; ret 0xff2; 
0x000000000001e40b: pop rcx; ret 0xff3; 
0x000000000002cb73: pop rcx; ret 0xffb8; 
0x000000000001a2a7: pop rcx; ret; 
0x000000000002c94d: pop rcx; retf 0xff2; pop rcx; ret 0xff2; 
0x000000000002b722: pop rcx; retf 0xff2; pop rsp; ret 0xff2; 
0x000000000002ced3: pop rcx; retf 0xff3; pop rcx; ret 0xff3; 
0x000000000002bbf6: pop rcx; retf 0xff3; pop rsp; ret 0xff3; 
0x0000000000037e3d: pop rcx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000031810: pop rcx; sal ebx, 0xf; pop rsi; ret 0x13eb; 
0x0000000000034024: pop rcx; sal ebx, 1; addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000002e0b3: pop rcx; sal edx, 0xf; pop rax; ret 0xff2; 
0x0000000000031320: pop rcx; sal edx, 0xf; pop rsi; ret 0x13eb; 
0x0000000000031330: pop rcx; sal edx, 0xf; pop rsi; ret; 
0x0000000000033f8f: pop rcx; sal edx, 1; addps xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000033a0a: pop rcx; sal edx, cl; addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002a646: pop rcx; sal edx, cl; addps xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000001da95: pop rcx; shl dword ptr [rsi + 0xf], 0x7e; ret; 
0x000000000002323a: pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000003e1d7: pop rcx; xchg byte ptr [rip + 0x450f4800], al; ret 0x8948; 
0x00000000000262f5: pop rdi; add eax, dword ptr [rax]; add byte ptr [rcx - 1], al; ret 0xdceb; 
0x000000000005a51b: pop rdi; call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x00000000000508e5: pop rdi; mov al, byte ptr [rax + rax]; mov byte ptr [rdx], dil; ret; 
0x0000000000025593: pop rdi; pop rbp; ret; 
0x0000000000015536: pop rdi; ret; 
0x0000000000039688: pop rdi; shr eax, 0x1f; add rsp, 0x10; pop rbx; ret; 
0x0000000000023cc7: pop rdx; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x000000000004c90a: pop rdx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004055c: pop rdx; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000002c818: pop rdx; add rsp, 0x28; ret; 
0x0000000000023e98: pop rdx; cmp rax, 8; setne al; movzx eax, al; neg eax; ret; 
0x0000000000037444: pop rdx; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000033a62: pop rdx; cvtsi2sd xmm1, eax; movaps xmm0, xmm1; ret; 
0x0000000000032d2f: pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000032d3c: pop rdx; cvttss2si rax, xmm0; ret; 
0x00000000000407cd: pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x000000000004505f: pop rdx; mov eax, 0x3a; syscall; 
0x000000000005b87a: pop rdx; mov eax, 0xffffffda; pop rbp; pop r12; ret; 
0x0000000000044b73: pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000278bd: pop rdx; mov rax, r8; pop rbx; pop r12; ret; 
0x000000000001c079: pop rdx; movaps xmm2, xmm1; movaps xmm1, xmm0; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000056865: pop rdx; neg eax; sbb eax, eax; ret; 
0x000000000005cf2c: pop rdx; not eax; shr eax, 0x1f; ret; 
0x0000000000060876: pop rdx; pop rbp; pop r12; jmp rax; 
0x0000000000039463: pop rdx; pop rbp; pop r12; ret; 
0x0000000000025856: pop rdx; pop rbx; pop r12; ret; 
0x000000000005769f: pop rdx; pop rbx; pop rbp; jmp rax; 
0x0000000000021f58: pop rdx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000023382: pop rdx; pop rbx; pop rbp; ret; 
0x0000000000033b05: pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000005b93d: pop rdx; pop rcx; neg eax; pop rsi; ret; 
0x0000000000030d05: pop rdx; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x000000000002c075: pop rdx; ret 0x48c3; 
0x000000000002a652: pop rdx; ret 0xdbc3; 
0x0000000000037ea3: pop rdx; ret 0xff2; 
0x00000000000177c7: pop rdx; ret; 
0x000000000002b332: pop rdx; rol byte ptr [rbp + 0xf0779db], 0x57; add eax, 0x68431; add rsp, 0x10; pop rbx; ret; 
0x0000000000037fc4: pop rdx; ror byte ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x000000000002b313: pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000023aa4: pop rdx; sar eax, 0x1f; ret; 
0x000000000004b9d8: pop rdx; sbb byte ptr [rcx - 0x76b6e78f], cl; add dword ptr [rbx + 0x445b1840], ecx; sub eax, edx; ret; 
0x0000000000034c89: pop rdx; shr bl, 8; movss xmm0, dword ptr [rip + 0x60be3]; add rsp, 0x28; ret; 
0x0000000000043a01: pop rdx; shr rax, 0x10; cdqe; ret; 
0x00000000000439e2: pop rdx; shr rax, 0x11; ret; 
0x000000000002ce74: pop rdx; subsd xmm0, xmm1; ret; 
0x000000000001bcd5: pop rdx; subsd xmm0, xmm2; ret; 
0x000000000002d3ec: pop rdx; subss xmm0, xmm1; ret; 
0x00000000000214b1: pop rdx; test eax, eax; sete al; movzx eax, al; ret; 
0x000000000005a425: pop rdx; test eax, eax; setne al; movzx eax, al; add eax, eax; ret; 
0x00000000000214fc: pop rdx; test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000021756: pop rdx; test rax, rax; setne al; movzx eax, al; ret; 
0x0000000000022c94: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000022c5b: pop rdx; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000033394: pop rsi; add dword ptr [rax], eax; add dl, dh; cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002d180: pop rsi; and al, 0xc; add rsp, 0x20; pop rbx; ret; 
0x000000000002cc02: pop rsi; and al, 8; add rsp, 0x30; pop rbx; ret; 
0x0000000000030d0d: pop rsi; clc; cvtsd2ss xmm0, xmm7; ret; 
0x0000000000022d52: pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000001b380: pop rsi; jmp rax; 
0x000000000004d2ec: pop rsi; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000003eaf3: pop rsi; pop r12; ret; 
0x0000000000025591: pop rsi; pop r15; pop rbp; ret; 
0x0000000000015534: pop rsi; pop r15; ret; 
0x0000000000039687: pop rsi; pop rdi; shr eax, 0x1f; add rsp, 0x10; pop rbx; ret; 
0x0000000000031324: pop rsi; ret 0x13eb; 
0x000000000002c198: pop rsi; ret 0x280f; 
0x00000000000314c1: pop rsi; ret 0x69eb; 
0x00000000000307ac: pop rsi; ret 0xafe9; 
0x0000000000033373: pop rsi; ret 0xf2c3; 
0x0000000000033527: pop rsi; ret 0xf3c3; 
0x000000000002b3d1: pop rsi; ret 0xff2; 
0x000000000002b4d3: pop rsi; ret 0xff3; 
0x000000000001b3a9: pop rsi; ret; 
0x000000000002cbdc: pop rsi; retf 0x280f; ret; 
0x000000000002bdb4: pop rsi; retf 0x280f; sal ebx, 0xf; pop rax; ret; 
0x000000000002bd14: pop rsi; retf 0x280f; sal edx, 0xf; pop rax; ret; 
0x000000000002cd82: pop rsi; retf; addsd xmm0, xmm1; ret; 
0x000000000002d2fa: pop rsi; retf; addss xmm0, xmm1; ret; 
0x000000000002f923: pop rsi; ror byte ptr [rax - 0x7d], 0xfa; add dword ptr [rcx], ebx; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f8f6: pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x10], eax; ret; 
0x000000000002c071: pop rsi; sal dl, 1; cvtps2pd xmm0, xmm2; ret; 
0x000000000002d287: pop rsi; sal ebx, 0xf; pop rcx; ret 0xff3; 
0x000000000002b30f: pop rsi; sal ebx, 0xf; pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x000000000002cd0c: pop rsi; sal edx, 0xf; pop rcx; ret 0xff2; 
0x0000000000021499: pop rsi; setbe al; ret; 
0x000000000002a5c4: pop rsp; adc eax, 0x6a836; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002935d: pop rsp; adc eax, 0x6b93d; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000439ad: pop rsp; add eax, 0x5117d; pop rdx; ret; 
0x000000000002feba: pop rsp; add eax, 0x65560; add rsp, 0x28; ret; 
0x0000000000030437: pop rsp; add eax, 0x6580b; add rsp, 0x18; ret; 
0x000000000002e7f6: pop rsp; add eax, 0x66334; ret; 
0x000000000001c587: pop rsp; and al, 0x10; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x000000000001df8f: pop rsp; and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000536ff: pop rsp; and al, 0xc; dec dword ptr [rax - 1]; ret; 
0x0000000000055f9d: pop rsp; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000022ccd: pop rsp; and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000055fba: pop rsp; and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005a54d: pop rsp; and al, 8; syscall; 
0x000000000005a54d: pop rsp; and al, 8; syscall; ret; 
0x000000000004990f: pop rsp; cdqe; pop r13; ret; 
0x0000000000030d0a: pop rsp; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x000000000002acfa: pop rsp; fmul dword ptr [rdi]; push rdi; sal bl, 0xf; pop rsi; ret; 
0x000000000002a5f8: pop rsp; int 0xf2; subps xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x0000000000033662: pop rsp; int 0xf3; addps xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000002e5e0: pop rsp; int 0xf3; mulps xmm1, xmmword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x0000000000060879: pop rsp; jmp rax; 
0x000000000004b288: pop rsp; jmp rcx; 
0x000000000005b877: pop rsp; jmp rdx; 
0x000000000001b32b: pop rsp; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov eax, 0x81; syscall; 
0x000000000004ec0c: pop rsp; neg eax; ret; 
0x000000000001b37c: pop rsp; pop r13; pop r14; jmp rax; 
0x000000000002558d: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000015530: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000001b3a5: pop rsp; pop r13; pop r14; ret; 
0x0000000000015235: pop rsp; pop r13; ret; 
0x0000000000046665: pop rsp; pop r14; pop r15; ret; 
0x000000000003a7ee: pop rsp; pop r14; ret; 
0x000000000005d854: pop rsp; pop rbp; ret; 
0x000000000001bcd8: pop rsp; ret 0x48c3; 
0x00000000000366e6: pop rsp; ret 0x570f; 
0x000000000001dc16: pop rsp; ret 0x8548; 
0x000000000002ded1: pop rsp; ret 0x8948; 
0x00000000000296b1: pop rsp; ret 0xff2; 
0x000000000001c00e: pop rsp; ret 0xff3; 
0x0000000000017614: pop rsp; ret; 
0x00000000000334e9: pop rsp; retf; addsd xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x000000000002e59f: pop rsp; retf; subss xmm0, xmm1; ret; 
0x0000000000033040: pop rsp; ror byte ptr [rdi], 0x57; leave; divsd xmm0, xmm1; ret; 
0x000000000003320c: pop rsp; ror byte ptr [rdi], 0x57; leave; divss xmm0, xmm1; ret; 
0x0000000000033d49: pop rsp; sal ebx, 1; movups xmmword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000002a033: pop rsp; sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000003466d: pop rsp; sal edx, 0xf; pop rcx; ret; 
0x00000000000437ee: pop rsp; sar eax, 0x1f; pop r13; pop r14; ret; 
0x000000000002b986: pop rsp; shr ebx, 8; movsd xmm0, qword ptr [rip + 0x691b6]; pop rbx; ret; 
0x000000000002bb0c: pop rsp; shr ebx, 8; movss xmm0, dword ptr [rip + 0x69d6c]; pop rbx; ret; 
0x000000000002aeac: pop rsp; shr ecx, 0xc8; jle 0x2aeb2; add al, ch; ret; 
0x0000000000018161: pop rsp; sub eax, r8d; ret; 
0x0000000000060b82: popfq; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000001a19f: popfq; add dword ptr [rax], eax; add byte ptr [rdi + rcx + 0x28], al; ret 0xf44; 
0x000000000003d16f: popfq; jle 0x3d16f; dec dword ptr [rax - 0x77]; ret; 
0x0000000000032ccf: popfq; sbb al, byte ptr [rsi]; add al, bl; ret; 
0x00000000000515fd: por mm1, mm0; ret; 
0x00000000000296d2: pslld mm1, qword ptr [rdi]; pop rax; ret 0xff2; 
0x00000000000296ae: pslld mm1, qword ptr [rdi]; pop rsp; ret 0xff2; 
0x0000000000035a4f: psllq mm1, qword ptr [rdi]; adc byte ptr [rip + 0x60400], al; test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x0000000000037ac1: psrld mm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037ac0: psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037ab4: psrlq mm1, 1; andps xmm0, xmm1; ret; 
0x0000000000037ab3: psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003bf28: psubsb mm2, qword ptr [rcx + 0x49fffe66]; or eax, 0xffffffff; mov dword ptr [rax], 0x54; mov rax, r8; pop rdx; ret; 
0x00000000000509d7: push -0x3ca50004; push rax; mov eax, 0x52; syscall; 
0x00000000000239d9: push -0x5f; add al, byte ptr [rax]; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x0000000000040f06: push -0x76be3f7b; ret; 
0x000000000005b7be: push -4; dec dword ptr [rcx + rcx*4 - 0x40]; add rsp, 0x28; ret; 
0x00000000000446d9: push 0; add byte ptr [rax], al; syscall; 
0x0000000000022d3c: push 0x1f80; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000005a88b: push 0x48fffc79; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000044752: push 0x49207514; movsxd rdi, ebp; mov eax, 0x20; syscall; 
0x000000000005e1c4: push 0x5afffb90; ret; 
0x000000000003b1c4: push 0x5afffdc0; ret; 
0x00000000000246c4: push 0x5affff2b; ret; 
0x0000000000021289: push 0xf; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000003b88d: push qword ptr [rax + rcx + 0x31]; rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x000000000002a5bb: push qword ptr [rbp + 0x15]; mulsd xmm2, xmm4; subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000003b55f: push qword ptr [rbp + 0xa]; test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x0000000000023d27: push qword ptr [rbp + 0xc]; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000002e368: push qword ptr [rbp + 0xd]; subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5b8: push qword ptr [rbp + 0xd]; subss xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000003d8e7: push qword ptr [rbp + 1]; ret; 
0x0000000000044ca5: push qword ptr [rbp + 3]; xor eax, eax; ret; 
0x0000000000044d38: push qword ptr [rbp + 4]; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000022fb9: push qword ptr [rbp + 7]; lea rax, [rip + 0x73561]; ret; 
0x000000000003f1c2: push qword ptr [rbp + 7]; mov al, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x0000000000044489: push qword ptr [rbp + rax - 0x18]; xchg eax, ecx; and al, 1; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000003946f: push qword ptr [rbp + rcx + 0x50]; call 0x4db47; mov eax, 1; pop rdx; ret; 
0x0000000000018f5b: push qword ptr [rbp - 0x1e]; nop; xor eax, eax; pop rbp; ret; 
0x0000000000027b03: push qword ptr [rbx + rcx + 0x48]; and eax, 0xfffff000; sub rax, 0x10; ret; 
0x0000000000028178: push qword ptr [rbx + rcx - 0x39]; add eax, 0x73e97; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000018f92: push qword ptr [rbx + rcx*8 + 0x66]; cmp edx, r8d; jne 0x18f80; pop rbp; ret; 
0x0000000000042d88: push qword ptr [rbx + rdx + 0x50]; call 0x4db47; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x00000000000239d4: push qword ptr [rbx + rdx + 0x50]; call 0x4db47; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x00000000000594f2: push qword ptr [rcx + rax*8 + 0x5a]; pop rbx; pop rbp; ret; 
0x000000000002a903: push qword ptr [rcx + rdx - 0xe]; movups xmm1, xmmword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000005947c: push qword ptr [rcx + rsi*4 + 0x5a]; pop rbx; pop rbp; ret; 
0x000000000005873a: push qword ptr [rcx - 0x48]; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x0000000000049e65: push qword ptr [rcx]; fucomi st(0); xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x0000000000025b56: push qword ptr [rcx]; imul al; mov eax, 0x89fffffa; ret 0x3d; 
0x0000000000046409: push qword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000021427: push qword ptr [rcx]; rol byte ptr [rbx - 0x6bf07f19], 0xc0; ret; 
0x0000000000018938: push qword ptr [rcx]; ror byte ptr [rax + 1], cl; fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000026d4a: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], cl; jge 0x26d51; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000017236: push qword ptr [rdi + 7]; mov rax, rdi; ret; 
0x000000000003826d: push qword ptr [rdi + rax + 0x48]; bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x00000000000598b2: push qword ptr [rdi + rcx + 0x48]; movsxd rsi, ebx; mov eax, 0x90; mov rdx, r12; syscall; 
0x000000000003c1dd: push qword ptr [rdx + rcx + 0x50]; xor edx, edx; call 0x3be2f; pop rdx; ret; 
0x0000000000030e54: push qword ptr [rdx]; ja 0x30e65; movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x000000000005994f: push qword ptr [rsi + rcx + 0x48]; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000002b004: push qword ptr [rsp + 8]; call 0x3805c; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x000000000003b53c: push qword ptr [rsp + rcx + 0x40]; movsx edi, bh; mov eax, edi; and eax, 0xdfff; ret; 
0x0000000000057d2c: push qword ptr [rsp + rdx - 0x75]; xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x000000000003b4e4: push r12; jne 0x3b4eb; inc rdi; mov eax, 0xf1; syscall; 
0x0000000000018360: push r12; mov r12, rdi; call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b0: push r12; mov r12, rdi; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000004d52e: push r8; mov edx, 1; pop rbp; jmp rax; 
0x0000000000023e26: push r9; movsxd rdx, edx; movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000005d658: push rax; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000001d148: push rax; add byte ptr [rax], al; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000004f92c: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x498f3; movzx eax, byte ptr [rax]; ret; 
0x000000000004f901: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x4991e; movzx eax, byte ptr [rax]; ret; 
0x000000000004de4e: push rax; add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000028758: push rax; add eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbx + 0x40]; 
0x000000000004538b: push rax; add ecx, dword ptr [rax - 0x77]; ror byte ptr [rcx + 0x39], 1; ret 0x1e76; 
0x000000000001d3e4: push rax; add rsp, 0x38; fxch st(1); ret; 
0x0000000000049739: push rax; and byte ptr [rcx - 0x75], al; adc al, byte ptr [rbp - 0x5677f02e]; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x6349; 
0x00000000000266a8: push rax; call 0x15060; xor eax, eax; pop rdx; ret; 
0x000000000001b3d8: push rax; call 0x225bf; mov dword ptr [rax], 0x16; or eax, 0xffffffff; pop rdx; ret; 
0x000000000001e5c6: push rax; call 0x225bf; mov dword ptr [rax], 0x16; or rax, 0xffffffffffffffff; pop rdx; ret; 
0x0000000000023bc9: push rax; call 0x225bf; mov dword ptr [rax], 0x5f; or eax, 0xffffffff; pop rdx; ret; 
0x000000000005a0be: push rax; call 0x225bf; mov dword ptr [rax], 0xb; or eax, 0xffffffff; pop rdx; ret; 
0x00000000000177b9: push rax; call 0x225bf; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000005d225: push rax; call 0x2260d; movsxd rsi, esi; push rax; mov eax, 0x15; syscall; 
0x0000000000033a5c: push rax; call 0x2f7f0; pop rdx; cvtsi2sd xmm1, eax; movaps xmm0, xmm1; ret; 
0x0000000000032d29: push rax; call 0x35a60; pop rdx; cvttsd2si rax, xmm0; ret; 
0x0000000000032d36: push rax; call 0x35af3; pop rdx; cvttss2si rax, xmm0; ret; 
0x0000000000037941: push rax; call 0x37951; pop rax; fld1; fsubp st(1); ret; 
0x0000000000039472: push rax; call 0x4db47; mov eax, 1; pop rdx; ret; 
0x0000000000042d8b: push rax; call 0x4db47; mov qword ptr [rip + 0x5912c], 0; pop rdx; ret; 
0x0000000000042240: push rax; call 0x4db47; mov qword ptr [rip + 0x59c5f], 0; pop rdx; ret; 
0x00000000000239d7: push rax; call 0x4db47; mov qword ptr [rip + 0x78430], 0; pop rdx; ret; 
0x0000000000059732: push rax; call 0x59a36; xor eax, eax; pop rdx; ret; 
0x0000000000058bba: push rax; call 0x5a45b; xor eax, eax; pop rdx; ret; 
0x000000000003743a: push rax; cvtss2sd xmm0, xmm0; call 0x37090; pop rdx; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000580e9: push rax; js 0x58134; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x0000000000058500: push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x00000000000439d5: push rax; lea rsi, [rip + 0x55a49]; call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000005df6f: push rax; mov eax, 0x10a; syscall; 
0x00000000000247f7: push rax; mov eax, 0x110; syscall; 
0x00000000000247e2: push rax; mov eax, 0x11f; syscall; 
0x0000000000024770: push rax; mov eax, 0x132; syscall; 
0x00000000000241b7: push rax; mov eax, 0x13f; syscall; 
0x00000000000241d4: push rax; mov eax, 0x145; syscall; 
0x000000000005d22e: push rax; mov eax, 0x15; syscall; 
0x000000000005dae3: push rax; mov eax, 0x16; syscall; 
0x000000000004b35d: push rax; mov eax, 0x18; syscall; 
0x000000000003adc9: push rax; mov eax, 0x1b; syscall; 
0x000000000003adb7: push rax; mov eax, 0x1c; syscall; 
0x000000000005d333: push rax; mov eax, 0x20; syscall; 
0x000000000004bd74: push rax; mov eax, 0x24; syscall; 
0x000000000004bf13: push rax; mov eax, 0x26; syscall; 
0x00000000000441b2: push rax; mov eax, 0x3b; syscall; 
0x000000000003a8a3: push rax; mov eax, 0x3f; syscall; 
0x0000000000022f02: push rax; mov eax, 0x41; syscall; 
0x0000000000022f59: push rax; mov eax, 0x43; syscall; 
0x000000000005e016: push rax; mov eax, 0x4c; syscall; 
0x000000000005d787: push rax; mov eax, 0x4d; syscall; 
0x000000000005d2bb: push rax; mov eax, 0x50; syscall; 
0x00000000000509dc: push rax; mov eax, 0x52; syscall; 
0x000000000004cd0f: push rax; mov eax, 0x53; syscall; 
0x000000000005dd88: push rax; mov eax, 0x54; syscall; 
0x000000000005da27: push rax; mov eax, 0x56; syscall; 
0x000000000005e1a0: push rax; mov eax, 0x57; syscall; 
0x000000000005df5a: push rax; mov eax, 0x58; syscall; 
0x000000000004c8a5: push rax; mov eax, 0x5a; syscall; 
0x000000000004cf49: push rax; mov eax, 0x5f; syscall; 
0x000000000003919d: push rax; mov eax, 0x62; syscall; 
0x0000000000024782: push rax; mov eax, 0x63; syscall; 
0x000000000005de2f: push rax; mov eax, 0x70; syscall; 
0x000000000005d872: push rax; mov eax, 0x73; syscall; 
0x00000000000390ea: push rax; mov eax, 0x76; syscall; 
0x00000000000390d8: push rax; mov eax, 0x78; syscall; 
0x000000000005d95f: push rax; mov eax, 0x79; syscall; 
0x0000000000024518: push rax; mov eax, 0x7a; syscall; 
0x0000000000024504: push rax; mov eax, 0x7b; syscall; 
0x000000000005d98e: push rax; mov eax, 0x7c; syscall; 
0x0000000000023d01: push rax; mov eax, 0x7d; syscall; 
0x0000000000023cef: push rax; mov eax, 0x7e; syscall; 
0x000000000004c4a5: push rax; mov eax, 0x7f; syscall; 
0x000000000004cd51: push rax; mov eax, 0x85; syscall; 
0x000000000002427d: push rax; mov eax, 0x87; syscall; 
0x000000000004b213: push rax; mov eax, 0x92; syscall; 
0x000000000004b228: push rax; mov eax, 0x93; syscall; 
0x000000000004b32d: push rax; mov eax, 0x94; syscall; 
0x000000000003addb: push rax; mov eax, 0x95; syscall; 
0x000000000003afd5: push rax; mov eax, 0x96; syscall; 
0x000000000003adf0: push rax; mov eax, 0x97; syscall; 
0x000000000003afe7: push rax; mov eax, 0x98; syscall; 
0x0000000000024819: push rax; mov eax, 0x99; syscall; 
0x000000000002428f: push rax; mov eax, 0x9b; syscall; 
0x0000000000023cce: push rax; mov eax, 0x9e; syscall; 
0x0000000000023d13: push rax; mov eax, 0xa1; syscall; 
0x000000000005d240: push rax; mov eax, 0xa3; syscall; 
0x000000000002420f: push rax; mov eax, 0xa5; syscall; 
0x0000000000024223: push rax; mov eax, 0xa6; syscall; 
0x0000000000024731: push rax; mov eax, 0xa7; syscall; 
0x0000000000024743: push rax; mov eax, 0xa8; syscall; 
0x00000000000245ce: push rax; mov eax, 0xaa; syscall; 
0x000000000003a16b: push rax; mov eax, 0xab; syscall; 
0x0000000000024003: push rax; mov eax, 0xac; syscall; 
0x0000000000023fee: push rax; mov eax, 0xad; syscall; 
0x00000000000241e6: push rax; mov eax, 0xaf; syscall; 
0x00000000000241fa: push rax; mov eax, 0xb0; syscall; 
0x000000000002491f: push rax; mov eax, 0xc5; syscall; 
0x0000000000024931: push rax; mov eax, 0xc6; syscall; 
0x0000000000024946: push rax; mov eax, 0xc7; syscall; 
0x000000000004b15a: push rax; mov eax, 0xcb; syscall; 
0x000000000005b947: push rax; mov eax, 0xe3; syscall; 
0x000000000005b828: push rax; mov eax, 0xe5; syscall; 
0x000000000003b472: push rax; mov eax, 0xf5; syscall; 
0x000000000003b1b8: push rax; mov eax, 3; syscall; 
0x000000000001e5f5: push rax; mov edi, 0x54; call 0x1e61e; pop rdx; ret; 
0x000000000004d4d0: push rax; mov edi, dword ptr [rdi + 0x78]; call 0x1b52a; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000004d52f: push rax; mov edx, 1; pop rbp; jmp rax; 
0x000000000004cd24: push rax; mov edx, edx; mov eax, 0x102; syscall; 
0x000000000005d2cf: push rax; mov edx, edx; mov eax, 0x5c; syscall; 
0x000000000005da13: push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023fbf: push rax; mov edx, edx; mov eax, 0xfe; syscall; 
0x000000000004cd66: push rax; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000002449f: push rax; mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x00000000000568bd: push rax; mov esi, 0x5413; mov eax, 0x10; syscall; 
0x000000000005690b: push rax; mov esi, 0x5414; mov eax, 0x10; syscall; 
0x0000000000023eec: push rax; mov esi, esi; mov eax, 0x12c; syscall; 
0x000000000003a180: push rax; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x0000000000024758: push rax; mov r10d, ecx; mov eax, 0x115; syscall; 
0x00000000000580cc: push rax; mov rax, rdi; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000004b30c: push rax; mov rdi, -0x26; call 0x17230; pop rdx; ret; 
0x0000000000023ce0: push rax; mov rdi, -0xc; call 0x17230; pop rdx; ret; 
0x000000000004ca8b: push rax; mov rdi, -9; call 0x17230; pop rdx; ret; 
0x00000000000248d7: push rax; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x00000000000248ef: push rax; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022f17: push rax; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000005d715: push rax; movsxd rdi, edi; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x0000000000023f02: push rax; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x000000000002424d: push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x0000000000024907: push rax; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x000000000005e1b5: push rax; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000024268: push rax; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000024018: push rax; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x00000000000244b9: push rax; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000005dd70: push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024853: push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x000000000002446d: push rax; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x000000000005da3c: push rax; movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x0000000000023e08: push rax; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x00000000000247af: push rax; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x00000000000245e3: push rax; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022f44: push rax; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000004bd89: push rax; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000022de0: push rax; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000022dc8: push rax; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023f1d: push rax; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000005ddd1: push rax; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023fd6: push rax; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000023ed2: push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x00000000000247c7: push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000024395: push rax; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x000000000002e45f: push rax; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x0000000000056bd8: push rax; or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x00000000000574c2: push rax; or rdi, 0xffffffffffffffff; call 0x57e31; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000004c0a2: push rax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022b16: push rax; pop rbx; ret; 
0x00000000000256a5: push rax; ret; 
0x000000000003b42a: push rax; sbb bl, ch; add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x0000000000022d06: push rax; stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000003c1e0: push rax; xor edx, edx; call 0x3be2f; pop rdx; ret; 
0x000000000003e443: push rax; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e040: push rax; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x000000000004e870: push rbp; adc byte ptr [rax - 0x77], cl; ret; 
0x000000000001911d: push rbp; add byte ptr [rcx + 0x5c], al; pop r13; ret; 
0x0000000000061a8f: push rbp; add eax, dword ptr [rax]; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x000000000003a11a: push rbp; add eax, ebp; ret; 
0x000000000005736c: push rbp; mov esi, 1; mov rax, r9; syscall; 
0x0000000000041a05: push rbp; mov rdi, r12; mov rbp, rsi; push rbx; mov rbx, rcx; syscall; 
0x000000000003c3da: push rbx; add dword ptr [rcx - 0x77], eax; ret; 
0x0000000000042cf0: push rbx; and byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000042cfa: push rbx; and byte ptr [rax - 0x75], cl; push rbx; sub byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000002901f: push rbx; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000033ab2: push rbx; cvtpi2ps xmm1, mm0; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000002159f: push rbx; lea rdx, [rip + 0x7431d]; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000004b1ae: push rbx; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000001bcd1: push rbx; mov es, word ptr [rdi]; add byte ptr [rdx - 0xe], bl; subps xmm0, xmm2; ret; 
0x0000000000041a0c: push rbx; mov rbx, rcx; syscall; 
0x0000000000024536: push rbx; mov rbx, rdi; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000017f20: push rbx; mov rbx, rdx; call 0x563e4; add rax, rbx; pop rbx; ret; 
0x000000000001b897: push rbx; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000004b17a: push rbx; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000033ea5: push rbx; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000057735: push rbx; or al, 0xf7; ret 0xffff; 
0x0000000000042cd4: push rbx; or byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000042cde: push rbx; or byte ptr [rax - 0x75], cl; push rbx; sbb byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000032c39: push rbx; sbb al, byte ptr [rsi]; add dh, bl; ret 0xc9dc; 
0x0000000000042ce2: push rbx; sbb byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000042cec: push rbx; sbb byte ptr [rax - 0x75], cl; push rbx; and byte ptr [rax + 0x29], cl; ret 0x148; 
0x0000000000042cfe: push rbx; sub byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000004e505: push rcx; adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x000000000001d0d2: push rcx; add byte ptr [rax], al; add rsp, 0x58; fxch st(1); ret; 
0x000000000005a636: push rcx; add dword ptr [rax], eax; ret; 
0x000000000001e8a0: push rcx; cld; cmp r8, rcx; ja 0x1e805; pop rbx; ret; 
0x000000000004fe7d: push rcx; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000022fb4: push rcx; cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x0000000000023e65: push rcx; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000002466b: push rcx; mov edx, 8; mov eax, 0x121; syscall; 
0x00000000000390b6: push rcx; mov esi, esi; mov eax, 0x8c; syscall; 
0x000000000005d345: push rcx; mov r8d, 0x21; movsxd rdi, edi; movsxd rsi, esi; mov rax, r8; syscall; 
0x000000000005b88b: push rcx; mov rax, qword ptr [rip + 0x3dbdd]; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000023dd6: push rcx; mov rdx, rdi; syscall; 
0x0000000000023e27: push rcx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000002e1ec: push rcx; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x0000000000019227: push rcx; ror byte ptr [rdi], 1; mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x00000000000509c3: push rcx; syscall; 
0x0000000000023d25: push rcx; test edi, edi; jne 0x23d36; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000058ba1: push rcx; xor byte ptr [rbp + 0xc], dh; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000004db2d: push rdi; adc byte ptr [rax + 0x39], cl; sal byte ptr [rdi + rax + 0x48], 1; sub edx, eax; mov qword ptr [rsi], rdx; ret; 
0x00000000000580ed: push rdi; adc byte ptr [rax - 0x77], cl; js 0x5816b; ret; 
0x0000000000058c4e: push rdi; add al, 0x85; sal byte ptr [rbp - 0x25], 0xe9; ret; 
0x0000000000056d29: push rdi; add al, 0xc1; call 0x1e5f035; ret; 
0x0000000000051067: push rdi; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x0000000000028779: push rdi; add dword ptr [rax - 0x80], eax; jmp qword ptr [rbx + 0x40]; 
0x0000000000036ec9: push rdi; add eax, 0x5c8a1; add rsp, 0x10; pop rbx; ret; 
0x0000000000036dfe: push rdi; add eax, 0x5c95c; add rsp, 0x10; pop rbx; ret; 
0x0000000000035b74: push rdi; add eax, 0x5dbf6; ret; 
0x0000000000035aec: push rdi; add eax, 0x5dc6e; ret; 
0x00000000000359b2: push rdi; add eax, 0x5ddb8; ret; 
0x000000000003582d: push rdi; add eax, 0x5df2d; ret; 
0x000000000002d2c6: push rdi; add eax, 0x664a4; pop rbx; ret; 
0x000000000002cd4b: push rdi; add eax, 0x66a0f; pop rbx; ret; 
0x000000000002bde5: push rdi; add eax, 0x67985; add rsp, 0x10; pop rbx; ret; 
0x000000000002bd46: push rdi; add eax, 0x67a14; add rsp, 0x10; pop rbx; ret; 
0x000000000002bc9d: push rdi; add eax, 0x67acd; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002b811: push rdi; add eax, 0x67f49; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002b339: push rdi; add eax, 0x68431; add rsp, 0x10; pop rbx; ret; 
0x000000000002a82e: push rdi; add eax, 0x68f2c; ret; 
0x0000000000028cc7: push rdi; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000055788: push rdi; fdivr dword ptr [rcx]; ret; 
0x000000000005bd6e: push rdi; fmul dword ptr [rax + 0x63]; clc; call 0x17230; pop rdx; ret; 
0x000000000004198c: push rdi; idiv edi; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x00000000000178d4: push rdi; inc dword ptr [rcx + rdi - 0x36]; jne 0x178c0; lea rax, [rcx + 1]; pop rbx; ret; 
0x000000000002953c: push rdi; leave; divsd xmm0, xmm1; ret; 
0x0000000000029564: push rdi; leave; divss xmm0, xmm1; ret; 
0x000000000002f07b: push rdi; leave; mulsd xmm0, xmm1; ret; 
0x000000000002f1c5: push rdi; leave; mulss xmm0, xmm1; ret; 
0x00000000000217c9: push rdi; mov edi, 0xfa83f889; sbb dword ptr [rdi + 3], esi; or eax, 0x20; ret; 
0x000000000004b682: push rdi; or byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x000000000004de52: push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000058a9b: push rdi; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000002b54b: push rdi; or eax, 0x6821f; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002b44a: push rdi; or eax, 0x68310; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000295d8: push rdi; or eax, 0x6a192; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295b9: push rdi; or eax, 0x6a1a1; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001d0dd: push rdi; or eax, 0x7667d; ret; 
0x000000000001bdc9: push rdi; ret 0xf66; 
0x0000000000029a58: push rdi; ret 0xff2; 
0x00000000000362ec: push rdi; ret 0xff3; 
0x000000000001c06a: push rdi; ret; 
0x0000000000029a55: push rdi; retf 0x570f; ret 0xff2; 
0x000000000001bd6f: push rdi; retf 0x6eb; xorps xmm0, xmm1; movaps xmm1, xmm2; pop rbx; ret; 
0x000000000001c081: push rdi; retf; movaps xmm0, xmm2; ret; 
0x000000000003153c: push rdi; ror byte ptr [rax - 0x7d], 0xc4; adc byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x000000000003336c: push rdi; ror byte ptr [rdi], cl; sub cl, al; divsd xmm0, xmm2; ret; 
0x0000000000033520: push rdi; ror byte ptr [rdi], cl; sub cl, al; divss xmm0, xmm2; ret; 
0x000000000002acfd: push rdi; sal bl, 0xf; pop rsi; ret; 
0x000000000002f8ed: push rdi; sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x0000000000047104: push rdi; sbb al, 1; sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x000000000001c0d4: push rdi; shl dword ptr [rsi + 0xf], 0x7e; ret 0xc148; 
0x000000000002d3fd: push rdi; xchg byte ptr [rsi], al; add byte ptr [rbp + rcx - 0xd], dh; movups xmm0, xmmword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000004bd18: push rdi; xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000061a8a: push rdx; lea rdi, [rip + 0x35582]; call 0x5e810; mov eax, 1; pop rcx; ret; 
0x000000000002453a: push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000005de5c: push rdx; movsxd rax, dword ptr [rdi + 0xc]; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000033e63: push rdx; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000004cf3e: push rdx; std; dec dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x000000000005f82d: push rdx; sub byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x000000000005a7df: push rsi; add al, 0x44; mov eax, edx; pop rbx; pop rbp; ret; 
0x0000000000018c82: push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000002811f: push rsi; cmp rdx, rcx; adc eax, 0; ret; 
0x0000000000043d97: push rsi; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x00000000000509d6: push rsi; push -0x3ca50004; push rax; mov eax, 0x52; syscall; 
0x000000000005a21b: push rsi; xor byte ptr [rax + 0x39], cl; ret 0xe975; 
0x0000000000039d02: push rsp; add al, 0x80; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000044d0c: push rsp; add byte ptr [rax], al; add bl, dh; stosd dword ptr [rdi], eax; ret; 
0x000000000003bf34: push rsp; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rdx; ret; 
0x00000000000568c0: push rsp; add byte ptr [rax], al; mov eax, 0x10; syscall; 
0x000000000004d19e: push rsp; add byte ptr [rax], al; syscall; 
0x000000000001d04d: push rsp; and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000059256: push rsp; and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000001d34e: push rsp; and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000001df89: push rsp; and al, 0x20; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000038100: push rsp; and al, 0x21; jns 0x38107; neg eax; mov dword ptr [rdi], eax; ret; 
0x0000000000058503: push rsp; and al, 0x54; mov eax, 0x90; syscall; 
0x000000000002f631: push rsp; and al, 0xc; mulss xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001d10e: push rsp; and al, 0xf0; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000022cc2: push rsp; and al, 0xf8; xor eax, eax; ret; 
0x000000000005cca5: push rsp; and al, 4; mov eax, 0xde; mov rsi, rbx; syscall; 
0x0000000000039cfd: push rsp; and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000022145: push rsp; and al, 8; add rsp, 0x18; pop rbp; pop r13; jmp rax; 
0x000000000001c0e8: push rsp; and al, 8; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000005d6ba: push rsp; and al, 8; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000022972: push rsp; and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000005d6ea: push rsp; and al, 8; syscall; 
0x000000000003b4e5: push rsp; jne 0x3b4eb; inc rdi; mov eax, 0xf1; syscall; 
0x0000000000058505: push rsp; mov eax, 0x90; syscall; 
0x0000000000018361: push rsp; mov r12, rdi; call 0x17f70; mov rax, r12; pop r12; ret; 
0x00000000000188b1: push rsp; mov r12, rdi; call 0x18020; mov rax, r12; pop r12; ret; 
0x000000000001a129: push rsp; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x00000000000567c5: push rsp; rol dword ptr [rbx + 0x478930c8], 8; movq qword ptr [rdi], xmm0; ret; 
0x000000000005e7a8: push rsp; ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x000000000004d040: pushfq; jne 0x4d050; mov eax, 0xeb; mov rdi, r9; mov rsi, r8; syscall; 
0x000000000002d3e8: pushfq; xchg byte ptr [rsi], al; add byte ptr [rdx - 0xd], bl; subps xmm0, xmm1; ret; 
0x000000000005d714: rcl byte ptr [rax + 0x48], cl; movsxd rdi, edi; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000003adb6: rcl byte ptr [rax - 0x48], cl; sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000005d749: rcl dword ptr [rdx - 0x76b70001], 0xc7; call 0x17230; add rsp, 0x18; ret; 
0x000000000004990c: rcr byte ptr [rbp + 0x41], 0x5c; cdqe; pop r13; ret; 
0x0000000000028bed: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x00000000000181da: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000003c758: rcr byte ptr [rbp + 0x41], 1; pop rsp; pop r13; pop r14; ret; 
0x000000000004ec09: rcr byte ptr [rbx + 0x41], 0x5c; neg eax; ret; 
0x00000000000278c0: rcr byte ptr [rbx + 0x41], 0x5c; ret; 
0x000000000005e562: rcr byte ptr [rbx + 0x4c], 0x89; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000030d06: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; divsd xmm7, xmm0; cvtsd2ss xmm0, xmm7; ret; 
0x0000000000056e3c: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000003b24e: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000021633: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000022289: rcr byte ptr [rbx + 0x5d], 1; pop r12; ret; 
0x000000000005a7e3: rcr byte ptr [rbx + 0x5d], 1; ret; 
0x0000000000022734: rcr byte ptr [rbx + 0x5d], cl; pop r12; ret; 
0x0000000000056ff6: rcr byte ptr [rbx - 0x3d], 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x74f8f610], al; adc esi, edi; ret 0xffff; 
0x00000000000225b6: rcr byte ptr [rdx + 0x5b], 0x5d; pop r12; pop r13; ret; 
0x0000000000039c5c: rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x00000000000390d5: rcr byte ptr [rdx - 0x3d], 1; push rax; mov eax, 0x78; syscall; 
0x0000000000022d16: rcr cl, 0x37; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x00000000000379fd: rcr cl, 0xe8; js 0x37a07; fscale; fstp st(1); ret; 
0x000000000005d96b: rcr dword ptr [rax - 0x3ca50005], 0xb8; jns 0x5d974; add byte ptr [rax], al; xor edi, edi; syscall; 
0x0000000000032711: rcr dword ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x00000000000594f4: rcr dword ptr [rdx + 0x5b], 0x5d; ret; 
0x00000000000379d9: rcr ebx, 0x2c; and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000002f66e: rcr ebx, 0x3e; ret; 
0x0000000000033e06: rcr ebx, 0x3f; fchs; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000002c1de: rcr ebx, 0x6c; and al, 0xe8; fmulp st(1); fstp xword ptr [rsp + 8]; fld xword ptr [rsp + 8]; ret; 
0x000000000002f668: rcr ecx, 0xc9; fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x0000000000037935: rcr ecx, 0xe1; fucomip st(1); fstp st(0); ja 0x37941; f2xm1; ret; 
0x0000000000037aa3: rcr ecx, 0xf0; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000003804f: rcr ecx, 0xf1; ret; 
0x00000000000379ab: rcr ecx, 0xfd; fstp st(1); add rsp, 0x10; ret; 
0x000000000002a666: rcr esp, 0xd; ret; 
0x0000000000056433: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x00000000000255ed: rep movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x0000000000044cef: rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000050fb7: rep stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x0000000000057042: rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000056cdb: rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000004cd9d: rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000001e73a: rep stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000022674: rep stosd dword ptr [rdi], eax; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x000000000005111a: rep stosd dword ptr [rdi], eax; mov rsi, rsp; mov eax, 6; mov rdi, r12; syscall; 
0x000000000004cdc1: rep stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000044d10: rep stosd dword ptr [rdi], eax; ret; 
0x00000000000564e2: rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000015f50: ret 0; 
0x000000000002016f: ret 0x104; 
0x000000000005c041: ret 0x1076; 
0x0000000000016739: ret 0x107e; 
0x00000000000227c8: ret 0x108; 
0x000000000002b427: ret 0x10e8; 
0x000000000001f8fb: ret 0x10e; 
0x0000000000045811: ret 0x1174; 
0x000000000003af1f: ret 0x1176; 
0x0000000000042707: ret 0x117e; 
0x000000000002aeff: ret 0x11e8; 
0x00000000000463b6: ret 0x127d; 
0x0000000000049f96: ret 0x127e; 
0x00000000000530ff: ret 0x129c; 
0x000000000004a073: ret 0x137e; 
0x0000000000031325: ret 0x13eb; 
0x000000000005b270: ret 0x1474; 
0x0000000000020a46: ret 0x148; 
0x0000000000017c25: ret 0x149; 
0x00000000000390ce: ret 0x14b8; 
0x000000000004b12a: ret 0x14c; 
0x00000000000571b8: ret 0x1574; 
0x000000000002bab7: ret 0x1577; 
0x000000000002383d: ret 0x15eb; 
0x000000000003ffcc: ret 0x160; 
0x0000000000024b33: ret 0x164; 
0x00000000000284d5: ret 0x1674; 
0x000000000002f58d: ret 0x173; 
0x0000000000043afc: ret 0x177e; 
0x0000000000025ed3: ret 0x17c; 
0x0000000000033cc3: ret 0x17eb; 
0x0000000000043970: ret 0x189; 
0x000000000003787a: ret 0x1974; 
0x000000000004a29e: ret 0x1a8; 
0x000000000001d79e: ret 0x1aeb; 
0x000000000001c9f6: ret 0x1b0; 
0x0000000000019e92: ret 0x1b74; 
0x0000000000028877: ret 0x1bb; 
0x0000000000028148: ret 0x1c75; 
0x000000000001e151: ret 0x1e76; 
0x0000000000034928: ret 0x1e7; 
0x000000000001c274: ret 0x1e8; 
0x00000000000318dc: ret 0x1ee8; 
0x00000000000179c8: ret 0x1f0f; 
0x0000000000053a41: ret 0x2041; 
0x0000000000045307: ret 0x213c; 
0x0000000000020a40: ret 0x2148; 
0x000000000003b21d: ret 0x220; 
0x0000000000028b73: ret 0x2274; 
0x0000000000049c85: ret 0x237e; 
0x000000000002ed94: ret 0x2474; 
0x0000000000034b50: ret 0x25; 
0x0000000000058f25: ret 0x2674; 
0x000000000001d6ee: ret 0x280f; 
0x000000000003c6d6: ret 0x2945; 
0x0000000000017d88: ret 0x2948; 
0x0000000000019c00: ret 0x294c; 
0x0000000000033d1e: ret 0x2aeb; 
0x0000000000022bda: ret 0x2b8; 
0x000000000001e0f7: ret 0x2c74; 
0x000000000002aa0f: ret 0x2ddb; 
0x000000000001a173: ret 0x2e0f; 
0x0000000000029e85: ret 0x2e72; 
0x00000000000341f6: ret 0x2feb; 
0x0000000000043a48: ret 0x3039; 
0x000000000003aaf4: ret 0x30e9; 
0x000000000001fa4c: ret 0x30f; 
0x000000000001f9a6: ret 0x3110; 
0x0000000000027287: ret 0x3145; 
0x0000000000017885: ret 0x314c; 
0x000000000002300e: ret 0x339; 
0x0000000000043c91: ret 0x346; 
0x000000000001cf96: ret 0x35e8; 
0x0000000000035e23: ret 0x36eb; 
0x000000000005f253: ret 0x37a; 
0x0000000000035f0e: ret 0x38eb; 
0x000000000005aaed: ret 0x391e; 
0x000000000001983a: ret 0x3944; 
0x0000000000017e34: ret 0x3948; 
0x0000000000039f48: ret 0x3949; 
0x000000000002cd15: ret 0x39eb; 
0x0000000000060a3a: ret 0x3ac; 
0x000000000003e576: ret 0x3b8; 
0x000000000001c690: ret 0x3be8; 
0x000000000001b4bf: ret 0x3c0; 
0x0000000000059b2e: ret 0x3d18; 
0x000000000004cfc6: ret 0x3d48; 
0x0000000000025b5f: ret 0x3d; 
0x0000000000018096: ret 0x3e80; 
0x000000000005e1f9: ret 0x3e8; 
0x000000000001bed9: ret 0x3fe9; 
0x0000000000052da3: ret 0x4008; 
0x0000000000048170: ret 0x4010; 
0x000000000005255a: ret 0x40a; 
0x00000000000156cf: ret 0x4101; 
0x000000000003aad7: ret 0x4102; 
0x0000000000051bb8: ret 0x4104; 
0x000000000005b290: ret 0x4106; 
0x0000000000020193: ret 0x410a; 
0x000000000003fc11: ret 0x411c; 
0x00000000000515bb: ret 0x4130; 
0x0000000000037e79: ret 0x415d; 
0x000000000001bc05: ret 0x4166; 
0x0000000000024a41: ret 0x418d; 
0x000000000005a2be: ret 0x41d; 
0x0000000000023c92: ret 0x4240; 
0x00000000000280e4: ret 0x428d; 
0x00000000000414ae: ret 0x4389; 
0x0000000000015c28: ret 0x438d; 
0x000000000002e916: ret 0x440f; 
0x000000000003fb5c: ret 0x441c; 
0x000000000003cfb8: ret 0x4489; 
0x000000000002d0fa: ret 0x448b; 
0x00000000000424c7: ret 0x448d; 
0x0000000000037924: ret 0x44d9; 
0x0000000000039018: ret 0x4502; 
0x0000000000034d0d: ret 0x450f; 
0x000000000001a407: ret 0x4566; 
0x000000000001f5a0: ret 0x458a; 
0x00000000000170bb: ret 0x4801; 
0x00000000000522c3: ret 0x4802; 
0x000000000001ed76: ret 0x4804; 
0x0000000000041820: ret 0x4807; 
0x0000000000017e02: ret 0x4808; 
0x0000000000019efe: ret 0x480c; 
0x0000000000024c8e: ret 0x4814; 
0x0000000000017498: ret 0x4818; 
0x000000000001712f: ret 0x4866; 
0x000000000001e935: ret 0x489; 
0x0000000000051f0e: ret 0x48b; 
0x000000000001bcd9: ret 0x48c3; 
0x000000000005065a: ret 0x48c; 
0x0000000000047110: ret 0x48d; 
0x0000000000019af6: ret 0x4901; 
0x0000000000044029: ret 0x4908; 
0x00000000000272c8: ret 0x4910; 
0x0000000000020a62: ret 0x4919; 
0x000000000002f032: ret 0x4966; 
0x00000000000559f6: ret 0x49f0; 
0x0000000000027ede: ret 0x4a74; 
0x000000000002851a: ret 0x4a8a; 
0x000000000004a58c: ret 0x4c04; 
0x0000000000020a4f: ret 0x4c1e; 
0x0000000000045dd6: ret 0x4c89; 
0x0000000000019fdf: ret 0x4d10; 
0x0000000000053b1a: ret 0x4e8d; 
0x00000000000366e1: ret 0x4eb; 
0x00000000000335c3: ret 0x4f3; 
0x0000000000020214: ret 0x5089; 
0x0000000000024e56: ret 0x50eb; 
0x0000000000022bcd: ret 0x50f; 
0x00000000000493c3: ret 0x5389; 
0x0000000000033d51: ret 0x53c3; 
0x0000000000046846: ret 0x5488; 
0x000000000002b4a2: ret 0x5489; 
0x000000000004f4a3: ret 0x548d; 
0x00000000000285b3: ret 0x568a; 
0x0000000000024bdf: ret 0x56e8; 
0x00000000000366e7: ret 0x570f; 
0x000000000003faa1: ret 0x572; 
0x000000000002e9e1: ret 0x5841; 
0x0000000000036125: ret 0x58e8; 
0x0000000000030861: ret 0x5b58; 
0x0000000000034b5a: ret 0x5d5; 
0x0000000000031885: ret 0x5d5b; 
0x0000000000032a69: ret 0x5d8; 
0x000000000005e10d: ret 0x5eb; 
0x0000000000033091: ret 0x5f62; 
0x0000000000031898: ret 0x62e8; 
0x0000000000051612: ret 0x62e9; 
0x0000000000023e82: ret 0x6348; 
0x0000000000041de4: ret 0x6349; 
0x000000000005a78b: ret 0x64bf; 
0x0000000000030802: ret 0x64c; 
0x000000000002b635: ret 0x6655; 
0x0000000000018220: ret 0x66c3; 
0x0000000000024b58: ret 0x672; 
0x0000000000034184: ret 0x676; 
0x000000000004fa28: ret 0x677; 
0x000000000001e161: ret 0x67a; 
0x0000000000059a48: ret 0x689; 
0x000000000002d02e: ret 0x68a; 
0x00000000000314c2: ret 0x69eb; 
0x000000000002a2fa: ret 0x6aa; 
0x000000000001e1dc: ret 0x6ae8; 
0x0000000000024b9d: ret 0x6b8b; 
0x000000000002ebae: ret 0x6cdb; 
0x0000000000035f40: ret 0x6eb; 
0x00000000000453dc: ret 0x7174; 
0x000000000003a534: ret 0x71; 
0x000000000005acb9: ret 0x71e8; 
0x0000000000022fa5: ret 0x7402; 
0x00000000000384b6: ret 0x7404; 
0x0000000000038491: ret 0x7408; 
0x0000000000038479: ret 0x7410; 
0x000000000003c6ad: ret 0x74c0; 
0x0000000000017fba: ret 0x7507; 
0x00000000000459b6: ret 0x7508; 
0x0000000000022b36: ret 0x7540; 
0x00000000000400f7: ret 0x75df; 
0x000000000001880d: ret 0x774; 
0x000000000005dd13: ret 0x775; 
0x000000000002e031: ret 0x776; 
0x00000000000519ac: ret 0x77c; 
0x000000000002f2dd: ret 0x789; 
0x000000000001cac6: ret 0x78d; 
0x0000000000029f4d: ret 0x7c83; 
0x000000000001694a: ret 0x7e2; 
0x0000000000043fae: ret 0x7eb; 
0x0000000000016f4f: ret 0x7f5; 
0x000000000003aa86: ret 0x8041; 
0x000000000005104a: ret 0x80; 
0x000000000001adf2: ret 0x80f; 
0x000000000003457f: ret 0x8141; 
0x000000000001b5a9: ret 0x8148; 
0x00000000000361fd: ret 0x8155; 
0x000000000002af89: ret 0x8166; 
0x00000000000266d7: ret 0x81c3; 
0x0000000000016cae: ret 0x820f; 
0x000000000001918c: ret 0x8301; 
0x00000000000469f6: ret 0x8304; 
0x0000000000053a6d: ret 0x8308; 
0x0000000000019ee6: ret 0x830f; 
0x000000000001671d: ret 0x8341; 
0x000000000001626a: ret 0x8348; 
0x0000000000029b5f: ret 0x8349; 
0x000000000003bb6f: ret 0x8380; 
0x0000000000035e6d: ret 0x83c3; 
0x000000000001c383: ret 0x83e8; 
0x000000000001a6a9: ret 0x840f; 
0x0000000000040a2d: ret 0x8440; 
0x00000000000195f0: ret 0x8504; 
0x0000000000027b67: ret 0x850f; 
0x00000000000347a0: ret 0x8545; 
0x000000000001dc17: ret 0x8548; 
0x0000000000024e63: ret 0x854d; 
0x0000000000045335: ret 0x860f; 
0x0000000000051c36: ret 0x872; 
0x0000000000051993: ret 0x87e; 
0x00000000000518f1: ret 0x882b; 
0x000000000003de1b: ret 0x8830; 
0x0000000000045c33: ret 0x8841; 
0x000000000002b47e: ret 0x88e8; 
0x00000000000200ae: ret 0x8904; 
0x00000000000545fa: ret 0x8908; 
0x000000000005c763: ret 0x890c; 
0x00000000000497e5: ret 0x8938; 
0x0000000000015ed4: ret 0x8941; 
0x00000000000285a1: ret 0x8944; 
0x00000000000198c5: ret 0x8948; 
0x0000000000024e8d: ret 0x8949; 
0x00000000000170eb: ret 0x894c; 
0x00000000000574eb: ret 0x894d; 
0x000000000002f6c0: ret 0x8966; 
0x000000000004a790: ret 0x8b41; 
0x00000000000237c2: ret 0x8b48; 
0x0000000000038a82: ret 0x8b49; 
0x0000000000049922: ret 0x8b4c; 
0x000000000004633e: ret 0x8bc3; 
0x00000000000262c3: ret 0x8be8; 
0x000000000001f99b: ret 0x8d42; 
0x000000000001ab9c: ret 0x8d48; 
0x00000000000221a1: ret 0x8d49; 
0x0000000000025251: ret 0x8d4b; 
0x000000000002093d: ret 0x8d4c; 
0x000000000001de73: ret 0x8de8; 
0x000000000004a60d: ret 0x8e0f; 
0x00000000000156dd: ret 0x9066; 
0x0000000000037c01: ret 0x920f; 
0x000000000005574d: ret 0x940f; 
0x000000000001a753: ret 0x970f; 
0x0000000000033a33: ret 0x976; 
0x000000000003bde1: ret 0x978; 
0x00000000000515ec: ret 0x97f; 
0x000000000003bc5b: ret 0x980; 
0x00000000000461d1: ret 0x9ae8; 
0x00000000000288e4: ret 0x9ae9; 
0x0000000000059c33: ret 0xa08; 
0x000000000003341a: ret 0xa09e; 
0x000000000001d711: ret 0xa4e9; 
0x0000000000035ac3: ret 0xa76; 
0x0000000000060e7e: ret 0xa8a; 
0x000000000005c39b: ret 0xa8e9; 
0x00000000000427d5: ret 0xa97e; 
0x000000000004a3be: ret 0xaa75; 
0x000000000003c490: ret 0xaaeb; 
0x000000000002eaa3: ret 0xacdb; 
0x00000000000307ad: ret 0xafe9; 
0x000000000004a9b6: ret 0xb275; 
0x000000000003634b: ret 0xb2e8; 
0x000000000003ef82: ret 0xb57e; 
0x000000000001afa0: ret 0xb60f; 
0x0000000000043957: ret 0xb70f; 
0x0000000000053b39: ret 0xb741; 
0x0000000000059750: ret 0xb8c3; 
0x000000000006166a: ret 0xba80; 
0x000000000002ad4b: ret 0xbae9; 
0x000000000004a390: ret 0xbc8b; 
0x0000000000026185: ret 0xbc; 
0x000000000002ae4e: ret 0xbde8; 
0x0000000000032d89: ret 0xbe48; 
0x000000000004802d: ret 0xbe8; 
0x00000000000314f0: ret 0xc031; 
0x000000000002dc05: ret 0xc083; 
0x0000000000015e04: ret 0xc084; 
0x000000000003588a: ret 0xc085; 
0x000000000002ebb6: ret 0xc0d9; 
0x000000000003115e: ret 0xc0ff; 
0x000000000001f85d: ret 0xc131; 
0x000000000005696f: ret 0xc139; 
0x000000000001bc81: ret 0xc148; 
0x000000000001f066: ret 0xc149; 
0x0000000000028ca3: ret 0xc166; 
0x00000000000569ce: ret 0xc175; 
0x00000000000482ac: ret 0xc184; 
0x000000000001af8c: ret 0xc189; 
0x000000000002ea64: ret 0xc1d9; 
0x000000000001679b: ret 0xc1de; 
0x000000000001a6a7: ret 0xc220; 
0x000000000001c15d: ret 0xc2d8; 
0x00000000000369be: ret 0xc2d9; 
0x000000000004f253: ret 0xc2ff; 
0x000000000002f2fd: ret 0xc35b; 
0x000000000002be00: ret 0xc389; 
0x000000000001d2e1: ret 0xc3c3; 
0x000000000002c1d6: ret 0xc3de; 
0x000000000002eba2: ret 0xc4d8; 
0x0000000000038b3e: ret 0xc741; 
0x0000000000049a40: ret 0xc748; 
0x000000000002c105: ret 0xc74; 
0x000000000003d4a4: ret 0xc77; 
0x0000000000050482: ret 0xc79; 
0x000000000001835a: ret 0xc829; 
0x000000000001917e: ret 0xc838; 
0x00000000000410ee: ret 0xc883; 
0x000000000001bb46: ret 0xc889; 
0x000000000002b529: ret 0xc8e8; 
0x0000000000025eb5: ret 0xc931; 
0x000000000005693d: ret 0xc985; 
0x000000000002a662: ret 0xc9d8; 
0x00000000000165af: ret 0xc9d9; 
0x000000000002aa03: ret 0xc9dc; 
0x000000000001a917: ret 0xc9de; 
0x0000000000031394: ret 0xca09; 
0x000000000001f8e4: ret 0xca21; 
0x000000000001f846: ret 0xca31; 
0x0000000000057b0c: ret 0xca81; 
0x0000000000016d05: ret 0xca83; 
0x0000000000056ab8: ret 0xcabf; 
0x000000000001a8f9: ret 0xcad8; 
0x0000000000015cf1: ret 0xcad9; 
0x0000000000040a3c: ret 0xcaff; 
0x0000000000059f77: ret 0xcb75; 
0x00000000000369c0: ret 0xcbd8; 
0x000000000001c559: ret 0xcbd9; 
0x000000000002eb94: ret 0xccd8; 
0x00000000000173d2: ret 0xd008; 
0x000000000002143c: ret 0xd009; 
0x000000000001a102: ret 0xd020; 
0x00000000000280c8: ret 0xd089; 
0x00000000000154f9: ret 0xd0; 
0x000000000002c2b4: ret 0xd0f7; 
0x000000000002017c: ret 0xd101; 
0x000000000001f8fe: ret 0xd131; 
0x0000000000024072: ret 0xd184; 
0x000000000003394b: ret 0xd201; 
0x0000000000029b48: ret 0xd231; 
0x0000000000029edf: ret 0xd285; 
0x0000000000027233: ret 0xd2eb; 
0x0000000000037c72: ret 0xd348; 
0x000000000004b20c: ret 0xd4eb; 
0x000000000001e1c8: ret 0xd5e8; 
0x000000000001fa37: ret 0xd789; 
0x000000000003b689: ret 0xd7c0; 
0x0000000000043f25: ret 0xd7eb; 
0x000000000001c552: ret 0xd850; 
0x0000000000058933: ret 0xd875; 
0x000000000005a0b8: ret 0xd975; 
0x0000000000029b34: ret 0xd9eb; 
0x0000000000027652: ret 0xdaf7; 
0x000000000002a653: ret 0xdbc3; 
0x000000000001d02b: ret 0xdbe8; 
0x000000000005951a: ret 0xdc75; 
0x00000000000262fb: ret 0xdceb; 
0x000000000002a9c7: ret 0xddc; 
0x000000000005ae5e: ret 0xde75; 
0x0000000000024c28: ret 0xde8; 
0x000000000001df2d: ret 0xdee8; 
0x000000000002ed8f: ret 0xe083; 
0x000000000002fe7b: ret 0xe0e8; 
0x000000000005e599: ret 0xe1c1; 
0x0000000000037a4d: ret 0xe1d8; 
0x000000000002a506: ret 0xe1dc; 
0x000000000002d98b: ret 0xe1de; 
0x00000000000590e2: ret 0xe275; 
0x0000000000045d5b: ret 0xe280; 
0x0000000000015878: ret 0xe281; 
0x0000000000016216: ret 0xe283; 
0x0000000000017f00: ret 0xe2c1; 
0x000000000002a3c2: ret 0xe2de; 
0x0000000000018f98: ret 0xe575; 
0x00000000000415de: ret 0xe7eb; 
0x00000000000220fd: ret 0xe808; 
0x00000000000318f3: ret 0xe839; 
0x000000000001ee1a: ret 0xe883; 
0x000000000001fee6: ret 0xe8c1; 
0x000000000001a69d: ret 0xe8df; 
0x000000000005a21f: ret 0xe975; 
0x000000000002c283: ret 0xe9c1; 
0x000000000003bda9: ret 0xeac0; 
0x00000000000298ce: ret 0xeac1; 
0x000000000004746c: ret 0xeaeb; 
0x0000000000046ac5: ret 0xeb04; 
0x000000000005af9d: ret 0xeb06; 
0x0000000000018f7b: ret 0xeb08; 
0x00000000000499c7: ret 0xeb10; 
0x000000000002f113: ret 0xeb7f; 
0x000000000001f592: ret 0xebe8; 
0x000000000003fa89: ret 0xebeb; 
0x0000000000046904: ret 0xec73; 
0x000000000003dcb9: ret 0xeceb; 
0x000000000002f959: ret 0xede8; 
0x000000000001b73e: ret 0xedeb; 
0x0000000000031665: ret 0xee75; 
0x0000000000034f58: ret 0xeeb; 
0x000000000004623e: ret 0xeeeb; 
0x000000000002f240: ret 0xef7f; 
0x000000000005bfec: ret 0xefeb; 
0x0000000000028ccb: ret 0xf000; 
0x0000000000027275: ret 0xf001; 
0x00000000000191d2: ret 0xf01; 
0x00000000000619cf: ret 0xf074; 
0x000000000001f333: ret 0xf089; 
0x000000000002d4cc: ret 0xf1de; 
0x000000000005432c: ret 0xf20; 
0x000000000002f724: ret 0xf229; 
0x000000000001eef3: ret 0xf281; 
0x000000000002a5d1: ret 0xf2c3; 
0x0000000000029ff6: ret 0xf2eb; 
0x000000000003dee0: ret 0xf3; 
0x000000000002e65c: ret 0xf3c3; 
0x0000000000051947: ret 0xf41; 
0x000000000001a12d: ret 0xf44; 
0x0000000000023f3d: ret 0xf48; 
0x000000000005e724: ret 0xf49; 
0x0000000000051ca8: ret 0xf4eb; 
0x000000000001e084: ret 0xf53; 
0x000000000004f255: ret 0xf631; 
0x0000000000045746: ret 0xf641; 
0x00000000000192ff: ret 0xf66; 
0x000000000001f9d8: ret 0xf710; 
0x000000000001ab58: ret 0xf748; 
0x000000000001b780: ret 0xf883; 
0x000000000002c788: ret 0xf981; 
0x0000000000020177: ret 0xfa21; 
0x000000000001e769: ret 0xfa81; 
0x000000000002a04e: ret 0xfa83; 
0x0000000000021863: ret 0xfac1; 
0x00000000000369d0: ret 0xfad8; 
0x000000000003ffea: ret 0xfb83; 
0x0000000000031b84: ret 0xfbb4; 
0x000000000005369a: ret 0xfc28; 
0x00000000000198f7: ret 0xfc3; 
0x000000000005ab63: ret 0xfc76; 
0x000000000003d39a: ret 0xfdaf; 
0x0000000000045a31: ret 0xfdc7; 
0x0000000000035e5b: ret 0xff05; 
0x00000000000270ca: ret 0xff15; 
0x000000000002acc8: ret 0xff25; 
0x000000000001bbb8: ret 0xff2; 
0x000000000001bfa1: ret 0xff3; 
0x000000000001f521: ret 0xff48; 
0x0000000000052726: ret 0xff49; 
0x000000000005a7a6: ret 0xff64; 
0x000000000002226a: ret 0xff65; 
0x0000000000037da9: ret 0xff81; 
0x000000000002a901: ret 0xff85; 
0x000000000001ef3a: ret 0xff8a; 
0x0000000000054342: ret 0xff90; 
0x0000000000031086: ret 0xffb2; 
0x000000000002cb74: ret 0xffb8; 
0x000000000001d28a: ret 0xffbe; 
0x00000000000411b9: ret 0xffd2; 
0x00000000000486ca: ret 0xffdc; 
0x0000000000060e21: ret 0xffe5; 
0x000000000005bf43: ret 0xffe6; 
0x000000000003712e: ret 0xffe9; 
0x000000000001d019: ret 0xffee; 
0x000000000005414d: ret 0xfff8; 
0x00000000000582b9: ret 0xfff; 
0x000000000001f710: ret 0xfffc; 
0x000000000003af86: ret 0xfffd; 
0x0000000000016d90: ret 0xffff; 
0x0000000000019a90: ret 1; 
0x00000000000321f8: ret 2; 
0x000000000004fcc2: ret 4; 
0x00000000000339bf: ret 5; 
0x000000000001988a: ret 7; 
0x0000000000052e80: ret 8; 
0x0000000000015238: ret; 
0x0000000000058c99: retf 0; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x76b6f932], cl; fimul dword ptr [rcx + rcx*4 - 0x18]; syscall; 
0x000000000002f350: retf 0; add byte ptr [rdi], bh; movd xmm0, edx; pop rbx; ret; 
0x000000000001b284: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0x80d4f]; mov rax, r8; syscall; 
0x000000000001b253: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057351: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, r8; mov rax, r9; syscall; 
0x0000000000059367: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x0000000000057e0b: retf 0; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x441d5]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057dbc: retf 0; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x44224]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000050828: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x48b6f]; mov rax, r9; syscall; 
0x000000000004f892: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x49a05]; mov rax, r9; syscall; 
0x000000000004d422: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000058529: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004eb4c: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r9; syscall; 
0x000000000005725e: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000004ddee: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x00000000000577a7: retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000057113: retf 0; add byte ptr [rdx + 1], bh; mov rdi, rbp; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000576cb: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x00000000000570db: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000061b26: retf 0x148; ret 0x8d49; 
0x0000000000027aef: retf 0x176; hlt; ret; 
0x000000000001dc3f: retf 0x280f; ret; 
0x000000000002bdb5: retf 0x280f; sal ebx, 0xf; pop rax; ret; 
0x000000000002bd15: retf 0x280f; sal edx, 0xf; pop rax; ret; 
0x000000000005e3b1: retf 0x2948; ret 0x8548; 
0x000000000002d6b7: retf 0x2ddb; and ch, byte ptr [rax + 6]; add dh, bl; ret 0xc9d9; 
0x000000000002d64b: retf 0x2ddb; fisub word ptr [rdi + 6]; add dh, bl; ret 0xc9d9; 
0x0000000000032ccc: retf 0x2ddb; popfq; sbb al, byte ptr [rsi]; add al, bl; ret; 
0x0000000000032b1c: retf 0x2ddb; sub eax, 0xde00061a; ret 0x6cdb; 
0x0000000000019ee3: retf 0x394c; ret 0x830f; 
0x0000000000022f16: retf 0x4850; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x000000000002424c: retf 0x4850; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x0000000000024906: retf 0x4850; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x00000000000244b8: retf 0x4850; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000005dd6f: retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024852: retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x000000000002446c: retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x000000000005da3b: retf 0x4850; movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x0000000000023e07: retf 0x4850; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x0000000000023ed1: retf 0x4850; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x00000000000247c6: retf 0x4850; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000024394: retf 0x4850; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x00000000000248d6: retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x00000000000248ee: retf 0x4d50; movsxd rax, eax; mov eax, 0xbd; syscall; 
0x0000000000029a56: retf 0x570f; ret 0xff2; 
0x000000000001c068: retf 0x570f; ret; 
0x00000000000246cc: retf 0x6348; ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x0000000000023db5: retf 0x6348; ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x00000000000244ec: retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x28; syscall; 
0x0000000000023239: retf 0x6459; sub rax, qword ptr [0]; pop rdx; ret; 
0x000000000001bd70: retf 0x6eb; xorps xmm0, xmm1; movaps xmm1, xmm2; pop rbx; ret; 
0x000000000001e6ca: retf 0x771; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000019efb: retf 0x8348; ret 0x480c; 
0x0000000000018c7f: retf 0x840f; push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000000343c2: retf 0x8548; clc; mov eax, 0; cmove eax, edx; ret; 
0x000000000002e7f1: retf 0x876; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000005a540: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000005a540: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000002c2fc: retf 0x948; shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x0000000000057041: retf 0xabf3; mov dword ptr [r8 + 8], edx; ret; 
0x000000000002e344: retf 0xc085; jne 0x2e356; mulsd xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x0000000000037aa1: retf 0xc1de; f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000002f666: retf 0xc1de; fxch st(1); fmul st(0); faddp st(1); fstp xword ptr [rsi]; ret; 
0x000000000002c814: retf 0xc9de; pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000002a6a4: retf 0xcade; fld xword ptr [rip + 0x693b3]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000019844: retf 0xd975; sub eax, r8d; ret; 
0x00000000000178d8: retf 0xe575; lea rax, [rcx + 1]; pop rbx; ret; 
0x000000000001e149: retf 0xf48; mov edx, 0x39483ff2; ret 0x1e76; 
0x0000000000018346: retf 0xf75; test dl, dl; jne 0x18338; xor eax, eax; sub eax, ecx; ret; 
0x000000000002e365: retf 0xf883; push qword ptr [rbp + 0xd]; subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x0000000000056412: retf 0xfb75; ret; 
0x000000000003426e: retf 0xff2; adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000002c94e: retf 0xff2; pop rcx; ret 0xff2; 
0x000000000002b723: retf 0xff2; pop rsp; ret 0xff2; 
0x000000000001bf5d: retf 0xff2; pop rsp; ret; 
0x000000000002a030: retf 0xff2; pop rsp; sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000002aea9: retf 0xff2; pop rsp; shr ecx, 0xc8; jle 0x2aeb2; add al, ch; ret; 
0x0000000000034368: retf 0xff3; adc dword ptr [rsp + 0x1c], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000002ced4: retf 0xff3; pop rcx; ret 0xff3; 
0x0000000000031659: retf 0xff3; pop rcx; ret; 
0x000000000002bbf7: retf 0xff3; pop rsp; ret 0xff3; 
0x000000000004862b: retf 0xfffc; pop rbx; pop rbp; pop r12; ret; 
0x0000000000033053: retf 0xffff; jmp qword ptr [rsi + 0x48]; 
0x000000000002feac: retf; add byte ptr cs:[rax], al; mulsd xmm0, qword ptr [rip + 0x64e88]; subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002cd83: retf; addsd xmm0, xmm1; ret; 
0x00000000000334ea: retf; addsd xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x0000000000033919: retf; addsd xmm2, xmm1; addsd xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x000000000002d2fb: retf; addss xmm0, xmm1; ret; 
0x000000000001efa4: retf; and eax, 0x3f; ret; 
0x0000000000018f94: retf; cmp dx, r8w; jne 0x18f80; pop rbp; ret; 
0x00000000000443f0: retf; loope 0x443f0; dec dword ptr [rax - 0x77]; ret 0xc883; 
0x000000000001c082: retf; movaps xmm0, xmm2; ret; 
0x000000000002a5f1: retf; mulsd xmm1, xmm4; subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000001cfac: retf; pop rbp; add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000056675: retf; ret 0x894c; 
0x000000000002e40f: retf; subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e650: retf; subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002e5a0: retf; subss xmm0, xmm1; ret; 
0x0000000000041a0f: retf; syscall; 
0x0000000000019494: rol ax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x00000000000591b9: rol bh, cl; and al, 4; add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000002142f: rol bl, 0x83; jmp qword ptr [rax]; 
0x000000000004c89f: rol byte ptr [rax + rax], 0; mov esi, esi; push rax; mov eax, 0x5a; syscall; 
0x000000000003f4db: rol byte ptr [rax - 0x6bf0ffc5], 0xc0; pop rbx; ret; 
0x00000000000196f5: rol byte ptr [rax*4 + 0x48f575d2], 0x29; clc; sar rax, 2; ret; 
0x000000000002f857: rol byte ptr [rax], 0; add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; mov eax, r8d; ret; 
0x0000000000025cd9: rol byte ptr [rax], 0; add byte ptr [rax + rsi + 0x3d], dh; ret 0; 
0x0000000000046237: rol byte ptr [rax], 1; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0xeeeb; 
0x000000000004f370: rol byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004f322: rol byte ptr [rax], 1; add byte ptr [rax], al; test rdx, rdx; je 0x4f333; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000028124: rol byte ptr [rax], 1; ret; 
0x0000000000041986: rol byte ptr [rbp + 0x31], 0xc9; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004195f: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; syscall; 
0x00000000000418ea: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2da: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x000000000003effe: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e449: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x000000000003e046: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x00000000000418c9: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x36; syscall; 
0x000000000005699c: rol byte ptr [rbp + 0x31], 1; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000041983: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004195c: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; syscall; 
0x00000000000418e7: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d7: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x000000000003effb: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e446: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x000000000003e043: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x000000000004d3cf: rol byte ptr [rbp + 0x31], cl; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000005a914: rol byte ptr [rbp + 0x410374f6], 0xf7; fadd dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000002b333: rol byte ptr [rbp + 0xf0779db], 0x57; add eax, 0x68431; add rsp, 0x10; pop rbx; ret; 
0x0000000000059a43: rol byte ptr [rbp - 0x3db7f040], cl; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000343bc: rol byte ptr [rbx + 0x294801e1], 1; retf 0x8548; clc; mov eax, 0; cmove eax, edx; ret; 
0x0000000000024b52: rol byte ptr [rbx + 0x3944ffc8], 0xc2; jb 0x24b61; seta al; movzx eax, al; ret; 
0x000000000004c392: rol byte ptr [rbx + 0x9773ff9], 0x48; mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x0000000000056cd2: rol byte ptr [rbx + 0xab901e6], 0; add byte ptr [rax], al; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000003b021: rol byte ptr [rbx + 0xc7404fa], 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000493bc: rol byte ptr [rbx + 0xf001078], cl; xchg eax, ebp; ret 0x5389; 
0x0000000000047109: rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x0000000000046385: rol byte ptr [rbx + rbp*8], 0xd9; mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000000043c8c: rol byte ptr [rbx + rcx*4 + 0x27], 0xff; ret 0x346; 
0x000000000002e851: rol byte ptr [rbx - 0x3fe6fe06], cl; and eax, 0xc0800000; sub eax, 0x40800000; movd xmm0, eax; ret; 
0x0000000000021496: rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x0000000000021474: rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x0000000000021485: rol byte ptr [rbx - 0x69f0e601], 0xc0; ret; 
0x0000000000021407: rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x0000000000021584: rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000056ea8: rol byte ptr [rbx - 0x6af0ffc1], 0xc0; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000021429: rol byte ptr [rbx - 0x6bf07f19], 0xc0; ret; 
0x000000000002144d: rol byte ptr [rbx - 0x6bf08001], 0xc2; or eax, edx; movzx eax, al; ret; 
0x00000000000214cb: rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x0000000000021436: rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000003b891: rol byte ptr [rbx - 0x6bf0ffc1], 0xc0; ret; 
0x0000000000058c9e: rol byte ptr [rbx - 0x76b6f932], cl; fimul dword ptr [rcx + rcx*4 - 0x18]; syscall; 
0x000000000004cae4: rol byte ptr [rbx - 0x7af00808], 0x93; add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000021418: rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x0000000000021791: rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x000000000005c5e7: rol byte ptr [rbx], 1; add byte ptr [rax], al; movzx edx, dl; movsxd rdx, dword ptr [r14 + rdx*4]; add rdx, r14; jmp rdx; 
0x0000000000021546: rol byte ptr [rcx + 0x2fffdff], 0; setbe al; ret; 
0x00000000000187a3: rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x0000000000021a5b: rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x000000000001983d: rol byte ptr [rcx + 0xf], 0x94; rol dword ptr [rbp - 0x7c], 0xca; jne 0x19820; sub eax, r8d; ret; 
0x0000000000019836: rol byte ptr [rcx + 0xf], 0x95; ret 0x3944; 
0x000000000004df5b: rol byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x00000000000195c6: rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x0000000000027e5c: rol byte ptr [rcx - 0x3a], 1; std; jmp qword ptr [rsi + 0x41]; 
0x000000000004c73b: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x00000000000580b5: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000580b5: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000028096: rol byte ptr [rcx - 0x78], 1; std; mov rax, r8; ret; 
0x00000000000349f0: rol byte ptr [rcx - 0x7d], 0xc0; add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x0000000000015ece: rol byte ptr [rcx - 0x7d], 0xc6; add dword ptr [rcx], ecx; ret 0x8941; 
0x000000000002f854: rol byte ptr [rcx - 0x7f], 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x44110ff3], al; and al, 0xfc; mov eax, r8d; ret; 
0x0000000000026433: rol byte ptr [rcx - 0x7f], 0xf8; and byte ptr ds:[rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x0000000000018702: rol byte ptr [rcx], 0x80; cmp byte ptr [rax], al; jne 0x18700; sub rax, rdi; ret; 
0x000000000005a42d: rol byte ptr [rcx], 0xc0; ret; 
0x0000000000017fb7: rol byte ptr [rcx], 0xf6; ret 0x7507; 
0x00000000000446e7: rol byte ptr [rcx], 1; add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x00000000000349f3: rol byte ptr [rdx], 0x44; mov eax, eax; ret; 
0x000000000005a7a3: rol byte ptr [rdx], 0x83; ret 0xff64; 
0x00000000000407c5: rol byte ptr [rdx], 1; add eax, 0x5b88b; pop rdx; lea rax, [rip + 0x5b4fb]; ret; 
0x000000000002f92a: rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x00000000000403cb: rol di, 8; mov word ptr [rsi], di; ret; 
0x0000000000053996: rol dword ptr [rax + rcx*2], 0x89; por mm1, mm0; ret; 
0x0000000000044781: rol dword ptr [rax], 0; add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x000000000004d3b2: rol dword ptr [rbp - 0x47f78a40], 1; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000019841: rol dword ptr [rbp - 0x7c], 0xca; jne 0x19820; sub eax, r8d; ret; 
0x00000000000567c6: rol dword ptr [rbx + 0x478930c8], 8; movq qword ptr [rdi], xmm0; ret; 
0x0000000000023e3c: rol dword ptr [rbx + 0xe75daf8], 0x4d; test eax, eax; jne 0x23e50; mov eax, 0xe8; syscall; 
0x0000000000023e25: rol dword ptr [rcx + 0x51], 1; movsxd rdx, edx; movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000001fa7d: rol dword ptr [rcx + 1], cl; ret; 
0x0000000000019246: rol dword ptr [rcx + rcx*4 - 0x40], 1; sub eax, edx; ret; 
0x000000000003c3d7: rol dword ptr [rcx - 0x73], cl; push rbx; add dword ptr [rcx - 0x77], eax; ret; 
0x00000000000156cc: rol dword ptr [rcx - 0x7d], cl; ret 0x4101; 
0x000000000003b3a2: rol dword ptr [rcx], 0; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000018890: rol dword ptr [rcx], 0x44; test dh, al; jne 0x18868; sub eax, edi; ret; 
0x0000000000037ab6: rol dword ptr [rcx], 1; andps xmm0, xmm1; ret; 
0x000000000003aae6: rol dword ptr [rdx], 0xeb; or byte ptr [rbp - 0x7b7bf00a], al; add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret 0x30e9; 
0x000000000002cae9: rol dword ptr [rsi + 0xff20006], cl; pop rcx; ret 0xff2; 
0x0000000000019495: rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x000000000004c201: rol eax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000403cc: rol edi, 8; mov word ptr [rsi], di; ret; 
0x000000000004c200: rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000037887: ror byte ptr [rax + 0x21], 1; sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000004c202: ror byte ptr [rax + 0x21], 7; xor eax, eax; ret; 
0x0000000000056e90: ror byte ptr [rax + 0x29], 0xc8; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000002815f: ror byte ptr [rax + 0x39], 0xd0; jne 0x28156; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x0000000000058628: ror byte ptr [rax + 0x39], 0xfe; sete al; ret; 
0x000000000005b26d: ror byte ptr [rax + 0x39], cl; ret 0x1474; 
0x00000000000426fc: ror byte ptr [rax + 0x63], 0x94; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x00000000000427ca: ror byte ptr [rax + 0x63], 0x94; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x0000000000022a0a: ror byte ptr [rax + 0x63], 0xf8; js 0x22a48; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000004cf96: ror byte ptr [rax + 0x63], 0xfb; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x0000000000026203: ror byte ptr [rax + 0x63], 4; xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x000000000001e6d0: ror byte ptr [rax + 0x63], cl; add al, 0x91; add rax, rcx; jmp rax; 
0x0000000000024667: ror byte ptr [rax + 0x63], cl; call qword ptr [rcx - 0x46]; 
0x0000000000024667: ror byte ptr [rax + 0x63], cl; call qword ptr [rcx - 0x46]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000003b432: ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000004c963: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp + 0x31]; sar byte ptr [rax + 0x10c], cl; syscall; 
0x00000000000246cf: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x0000000000023db8: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x0000000000023e2a: ror byte ptr [rax + 0x63], cl; inc dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000022ea3: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x0000000000023e0b: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x00000000000418c0: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000003e464: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000005b28d: ror byte ptr [rax + 0x6b], cl; ret 0x4106; 
0x000000000004ce1d: ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x000000000002950f: ror byte ptr [rax + 1], 0xc0; sete r8b; mov eax, r8d; ret; 
0x000000000001893a: ror byte ptr [rax + 1], cl; fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000005587b: ror byte ptr [rax - 0x2d], 0xe2; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x00000000000558bb: ror byte ptr [rax - 0x2d], 0xea; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x0000000000037bfa: ror byte ptr [rax - 0x3f], 0xe0; and byte ptr [rax + 1], cl; ret 0x920f; 
0x000000000002947d: ror byte ptr [rax - 0x3f], 0xe0; or al, 0x41; sete al; mov eax, r8d; ret; 
0x00000000000314e9: ror byte ptr [rax - 0x3f], 0xe8; and byte ptr [rax - 0x77], cl; ret 0xc031; 
0x000000000001e5bc: ror byte ptr [rax - 0x68], 0x5a; ret; 
0x0000000000021a0c: ror byte ptr [rax - 0x68], 1; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; inc eax; ret; 
0x000000000005f24f: ror byte ptr [rax - 0x73], 0x3d; ret 0x37a; 
0x000000000005a5e1: ror byte ptr [rax - 0x75], 0x44; and al, 0x38; mov qword ptr [r12], rax; mov eax, 3; syscall; 
0x000000000005802c: ror byte ptr [rax - 0x75], 0x7c; and al, 8; mov rsi, rdx; syscall; 
0x0000000000056fdb: ror byte ptr [rax - 0x77], 0x37; ret; 
0x0000000000044bc3: ror byte ptr [rax - 0x77], 0x43; or byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000044b6e: ror byte ptr [rax - 0x77], 0x43; or byte ptr [rdx + 0x44], bl; mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000004d43d: ror byte ptr [rax - 0x77], 0xd6; syscall; 
0x000000000004d43d: ror byte ptr [rax - 0x77], 0xd6; syscall; ret; 
0x0000000000059fac: ror byte ptr [rax - 0x77], 0xd6; syscall; xor eax, eax; ret; 
0x000000000001891e: ror byte ptr [rax - 0x77], 0xd8; cmovne rax, rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005d9c3: ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000000005e7ad: ror byte ptr [rax - 0x77], 1; add eax, 0x3b183; ret; 
0x0000000000022458: ror byte ptr [rax - 0x77], 1; or eax, 0x79978; pop rbx; ret; 
0x000000000004b127: ror byte ptr [rax - 0x77], 1; ret 0x14c; 
0x000000000004396d: ror byte ptr [rax - 0x77], 1; ret 0x189; 
0x000000000004d3d2: ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000005d5d6: ror byte ptr [rax - 0x77], cl; out 0x49, al; movsxd rdi, eax; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x0000000000021b93: ror byte ptr [rax - 0x7b], 0xc0; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000051080: ror byte ptr [rax - 0x7b], 0xc0; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004db19: ror byte ptr [rax - 0x7b], 0xd2; je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000039cf7: ror byte ptr [rax - 0x7b], 0xf6; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000003826a: ror byte ptr [rax - 0x7b], 0xff; je 0x38277; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000038279: ror byte ptr [rax - 0x7b], 0xff; je 0x38286; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000004daa4: ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000004dad8: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004da8f: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x000000000001888d: ror byte ptr [rax - 0x7d], 0xc1; add dword ptr [rsp + rax*4 - 0x3a], eax; jne 0x18868; sub eax, edi; ret; 
0x000000000003153d: ror byte ptr [rax - 0x7d], 0xc4; adc byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x0000000000037fc5: ror byte ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x0000000000017dd1: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000061e74: ror byte ptr [rax - 0x7d], 0xc4; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000023ec4: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000005b81f: ror byte ptr [rax - 0x7d], 0xc4; sub bl, al; movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x00000000000213d7: ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x000000000002f924: ror byte ptr [rax - 0x7d], 0xfa; add dword ptr [rcx], ebx; rol byte ptr [rip - 0x80000000], 0xf3; movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000019189: ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x0000000000026d4c: ror byte ptr [rax - 0x7d], cl; jge 0x26d51; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000022d1f: ror byte ptr [rax - 1], 0xc7; je 0x22d2d; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000005f3b4: ror byte ptr [rax], 0x48; mov dword ptr [rsp + 8], eax; call qword ptr [rax - 8]; 
0x0000000000019496: ror byte ptr [rax], 0x66; mov dword ptr [rcx + 0x1c], eax; ret; 
0x000000000005e4c1: ror byte ptr [rbp + 0x2144ff50], cl; ret 0x3145; 
0x00000000000586d9: ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000045f57: ror byte ptr [rbx - 0x1c7cdbe4], 1; add dword ptr [rcx], ecx; ret; 
0x0000000000043a6f: ror byte ptr [rcx + 0x12eac1c2], 1; xor eax, edx; shr eax, 1; ret; 
0x000000000004538f: ror byte ptr [rcx + 0x39], 1; ret 0x1e76; 
0x00000000000453b2: ror byte ptr [rcx + 0x39], 1; ret 0x840f; 
0x000000000001815c: ror byte ptr [rcx + 0x5c415de8], 0x44; sub eax, eax; ret; 
0x000000000005c5ed: ror byte ptr [rcx + 0x63], cl; adc al, 0x96; add rdx, r14; jmp rdx; 
0x0000000000061c5b: ror byte ptr [rcx + 0xf], 0x44; ret; 
0x000000000004c9fd: ror byte ptr [rcx + rcx*4 - 0x20], cl; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x00000000000572ca: ror byte ptr [rcx + rcx*4 - 0x32], 0x48; mov edx, ebx; syscall; 
0x0000000000022a00: ror byte ptr [rcx + rcx*4 - 0x32], 0x4c; mov edx, edx; syscall; 
0x000000000005d38e: ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x000000000005699f: ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x000000000005703b: ror byte ptr [rcx + rcx*4 - 0x39], 0x44; or edx, ecx; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000005d3ad: ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000004d155: ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x00000000000572c7: ror byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r9; mov rdx, rbx; syscall; 
0x00000000000229cc: ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000057f69: ror byte ptr [rcx + rcx*4 - 0xe], 1; and esi, 0x80; or esi, 1; syscall; 
0x000000000001d106: ror byte ptr [rcx - 0x173eb73e], 1; and byte ptr [rcx - 0x760fdbac], cl; and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000003e1d0: ror byte ptr [rcx - 0x72b7efbb], 5; pop rcx; xchg byte ptr [rip + 0x450f4800], al; ret 0x8948; 
0x000000000005c394: ror byte ptr [rcx - 9], 1; fmul dword ptr [rdi + rcx + 0x48]; ret 0xa8e9; 
0x000000000004c827: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000015e01: ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000059a45: ror byte ptr [rdi], 0x48; ret 0x689; 
0x00000000000288e1: ror byte ptr [rdi], 0x48; ret 0x9ae9; 
0x0000000000033041: ror byte ptr [rdi], 0x57; leave; divsd xmm0, xmm1; ret; 
0x000000000003320d: ror byte ptr [rdi], 0x57; leave; divss xmm0, xmm1; ret; 
0x00000000000490be: ror byte ptr [rdi], 0x84; add byte ptr [rip - 0x76b80000], al; ret 0x894c; 
0x00000000000262f2: ror byte ptr [rdi], 0x84; pop rdi; add eax, dword ptr [rax]; add byte ptr [rcx - 1], al; ret 0xdceb; 
0x0000000000060b7f: ror byte ptr [rdi], 0x84; popfq; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000052e7d: ror byte ptr [rdi], 0x84; ret 8; 
0x000000000003f33b: ror byte ptr [rdi], 0x84; scasd eax, dword ptr [rdi]; add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x14], cl; and al, 0xff; ret; 
0x000000000001a4b6: ror byte ptr [rdi], 0x85; ret; 
0x00000000000446e4: ror byte ptr [rdi], 0x85; rol byte ptr [rcx], 1; add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x0000000000044765: ror byte ptr [rdi], 0x88; add qword ptr [r8], r8; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x00000000000154f1: ror byte ptr [rdi], 0x89; pop rax; add al, byte ptr [rax]; add al, ch; ret 0xd0; 
0x000000000001eea2: ror byte ptr [rdi], 0x94; ret; 
0x000000000004a38d: ror byte ptr [rdi], 0x95; ret 0xbc8b; 
0x0000000000049e6e: ror byte ptr [rdi], 0x95; ret; 
0x000000000005a427: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret; 
0x000000000003457c: ror byte ptr [rdi], 0x96; ret 0x8141; 
0x000000000005a42a: ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret; 
0x0000000000043261: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000023e9f: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000026a9f: ror byte ptr [rdi], 0xb6; shl byte ptr [rcx], 0xd0; ret; 
0x000000000002811b: ror byte ptr [rdi], 1; mov bh, 0x14; push rsi; cmp rdx, rcx; adc eax, 0; ret; 
0x000000000002143e: ror byte ptr [rdi], 1; mov dh, 0xc0; ret; 
0x0000000000019228: ror byte ptr [rdi], 1; mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x000000000001ddd8: ror byte ptr [rdi], 1; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000057e2b: ror byte ptr [rdi], 5; pop rax; ret; 
0x0000000000057ddc: ror byte ptr [rdi], 5; ret; 
0x00000000000576e6: ror byte ptr [rdi], 5; xor eax, eax; ret; 
0x000000000003f008: ror byte ptr [rdi], cl; add eax, 0xe8c78948; sbb eax, 0x5afffd82; ret; 
0x000000000001922b: ror byte ptr [rdi], cl; mov dh, 0xc0; sub eax, edx; ret; 
0x000000000003336d: ror byte ptr [rdi], cl; sub cl, al; divsd xmm0, xmm2; ret; 
0x0000000000033521: ror byte ptr [rdi], cl; sub cl, al; divss xmm0, xmm2; ret; 
0x00000000000266f6: ror byte ptr [rdi], cl; test byte ptr [rax + 0x48000000], al; lea eax, [rdx + 0x10]; ret; 
0x000000000004595b: ror byte ptr [rdi], cl; test byte ptr [rsi - 0xa000000], bh; ret; 
0x000000000001ddd7: ror byte ptr cs:[rdi], 1; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000002b842: ror dword ptr [rax + 0x21], 0xc8; cmp rax, rdx; jbe 0x2b850; addsd xmm0, xmm1; ret; 
0x000000000001714b: ror dword ptr [rax + 0x29], 1; ror dword ptr [rax + 1], 0xf0; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000023e4f: ror dword ptr [rax + 0x63], 0xf9; call 0x17230; pop rdx; ret; 
0x0000000000038166: ror dword ptr [rax + 0x63], 1; ret; 
0x000000000001714e: ror dword ptr [rax + 1], 0xf0; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000016cab: ror dword ptr [rax + 1], 1; ret 0x820f; 
0x0000000000034c24: ror dword ptr [rax - 0x73], 0x15; adc al, 0x96; add eax, 0x580ff200; ret 0x4866; 
0x000000000005e3dd: ror dword ptr [rax - 0x73], 1; add eax, 0x22db; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x000000000003d434: ror dword ptr [rax - 0x77], 1; mov esi, 2; call 0x3d1e5; add rsp, 0x18; ret; 
0x00000000000357ba: ror dword ptr [rax - 0x77], 1; ret 0xc148; 
0x0000000000016715: ror dword ptr [rax - 0x7d], 0xeb; add eax, ebx; loope 0x166fb; ret 0x8341; 
0x0000000000040a2a: ror dword ptr [rax - 1], 1; ret 0x8440; 
0x000000000005e7a9: ror dword ptr [rax], 1; and rax, rdx; mov qword ptr [rip + 0x3b183], rax; ret; 
0x0000000000033100: ror dword ptr [rbp - 0x3fee97c], 0xff; jmp qword ptr [rsi + 0x48]; 
0x0000000000017b6c: ror dword ptr [rcx + 0x39], cl; ror dword ptr [rdi], 1; test byte ptr [rdx], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000002008f: ror dword ptr [rcx + 0x48283c4c], 0x83; mov dword ptr [rax + rcx*2], 0x7540ff83; ret; 
0x000000000003b4cb: ror dword ptr [rcx + rcx*4 - 0x2e], 1; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005a0b0: ror dword ptr [rcx - 0x4ef00f30], 0xf; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x0000000000019e88: ror dword ptr [rcx - 0x73], 0xc; cmp byte ptr [rax + 1], cl; dec byte ptr [rax + 0x39]; ret 0x1b74; 
0x000000000001c065: ror dword ptr [rdi], 0x28; retf 0x570f; ret; 
0x00000000000457a9: ror dword ptr [rdi], 0x85; ret; 
0x000000000001bf74: ror dword ptr [rdi], 1; sub al, cl; movaps xmm0, xmm2; ret; 
0x000000000001c07c: ror dword ptr [rdi], 1; sub al, cl; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000017b6f: ror dword ptr [rdi], 1; test byte ptr [rdx], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000037d09: ror dword ptr [rdi], cl; xchg eax, ebp; ret 0x8d48; 
0x000000000004fcca: sahf; ret; 
0x0000000000059514: sal al, 1; cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x594f9; xor eax, eax; ret; 
0x000000000005a0b2: sal al, 1; cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x5a094; xor eax, eax; ret; 
0x0000000000043264: sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000022c11: sal bh, 0xd8; pop rdx; ret; 
0x0000000000023ea2: sal bh, 0xd8; ret; 
0x0000000000044cee: sal bl, 0xa5; ret; 
0x000000000004cd9c: sal bl, 0xab; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdc0: sal bl, 0xab; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000002d3f8: sal bl, 0xf; adc byte ptr [rip + 0x68657], cl; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000001d34a: sal bl, 0xf; adc dword ptr [rsp + 0x10], edx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000002f8f7: sal bl, 0xf; adc dword ptr [rsp - 0x10], eax; ret; 
0x000000000003176e: sal bl, 0xf; pop rcx; ret 0xff3; 
0x000000000002addf: sal bl, 0xf; pop rcx; ret; 
0x000000000002acfe: sal bl, 0xf; pop rsi; ret; 
0x000000000002d2f7: sal bl, 0xf; pop rsi; retf; addss xmm0, xmm1; ret; 
0x000000000002bbc1: sal bl, 0xf; pop rsp; ret 0xff3; 
0x0000000000033d46: sal bl, 0xf; pop rsp; sal ebx, 1; movups xmmword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000002d2f3: sal bl, 0xf; sub al, al; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x00000000000378cb: sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000035ed6: sal bl, 1; mulps xmm0, xmm2; ret; 
0x0000000000034021: sal bl, 1; mulps xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000001df85: sal bl, cl; movups xmmword ptr [rsp + 0x20], xmm2; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000005808b: sal byte ptr [rax + rbx - 0x48], 0xda; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000003ca3f: sal byte ptr [rax + rcx + 0x48], 0xff; ret; 
0x000000000005f498: sal byte ptr [rax + rcx + 0x48], 3; or al, 0x24; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000004f328: sal byte ptr [rax + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x0000000000039818: sal byte ptr [rax + rdx + 0x48], 0x89; ret 0xff48; 
0x000000000001f51c: sal byte ptr [rax + rdx + 0x48], 0xff; ret 0xff48; 
0x000000000005972f: sal byte ptr [rax + rdx + 0x50], 0xe8; inc byte ptr [rdx]; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000005a724: sal byte ptr [rbp + 0x11], 0x85; fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xff85; 
0x0000000000051083: sal byte ptr [rbp + 0x13], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002f8e9: sal byte ptr [rbp + 0x13], cl; xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x000000000005041a: sal byte ptr [rbp + 0x1e], 0xba; add eax, dword ptr [rax]; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x000000000002230f: sal byte ptr [rbp + 0x3a], 0xeb; imul ecx, dword ptr [rcx + rcx*4 - 0x19], -0x18; hlt; sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x000000000005a4a6: sal byte ptr [rbp + 0x41], 0xb8; retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057b32: sal byte ptr [rbp + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003b563: sal byte ptr [rbp + 0x4e], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000043d95: sal byte ptr [rbp + 0x56], 0xb8; mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x000000000004e763: sal byte ptr [rbp + 0xa], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000023fa1: sal byte ptr [rbp + 0xa], cl; mov eax, 0xfd; syscall; 
0x0000000000021b96: sal byte ptr [rbp + 0xc], 0x48; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002e346: sal byte ptr [rbp + 0xd], 0xf2; mulps xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000002e596: sal byte ptr [rbp + 0xd], 0xf3; mulps xmm1, xmm0; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x0000000000023de5: sal byte ptr [rbp + 0xf], cl; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000035a0a: sal byte ptr [rbp + 3], 0xf; sub cl, al; ret; 
0x00000000000275b5: sal byte ptr [rbp + 4], 1; or rax, 0xffffffffffffffff; ret; 
0x00000000000274f2: sal byte ptr [rbp + 7], 0x48; lea eax, [rip + 0x6f13a]; ret; 
0x000000000005e3fc: sal byte ptr [rbp + 7], 1; inc rcx; test al, al; jne 0x5e3f3; sub eax, edx; ret; 
0x000000000004d3b4: sal byte ptr [rbp + 8], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000040818: sal byte ptr [rbp + rax + 0x39], 0x58; adc byte ptr [rbp - 0xf], dh; pop rbx; ret; 
0x000000000004d5c9: sal byte ptr [rbp + rcx + 0x48], 0x89; out 0xb8, al; adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x000000000001b890: sal byte ptr [rbp + rcx - 0x7d], 0xf8; add dh, byte ptr [rbp + 0x53]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001dde0: sal byte ptr [rbp + rdx + 0xf], 0x2e; fmul dword ptr [rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000018306: sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x000000000003f4d7: sal byte ptr [rbp - 0x13], 0x31; rol byte ptr [rax - 0x6bf0ffc5], 0xc0; pop rbx; ret; 
0x000000000001834a: sal byte ptr [rbp - 0x15], cl; xor eax, eax; sub eax, ecx; ret; 
0x0000000000019884: sal byte ptr [rbp - 0x17], 0x31; imul al; ret 7; 
0x0000000000017956: sal byte ptr [rbp - 0x19], cl; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000195bf: sal byte ptr [rbp - 0x1a], 0xf7; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x00000000000181c8: sal byte ptr [rbp - 0x1b], 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000407fe: sal byte ptr [rbp - 0x1c], 0x4c; mov eax, esp; pop rdx; pop rbx; pop r12; ret; 
0x0000000000057835: sal byte ptr [rbp - 0x23], 0x58; pop rbx; pop rbp; ret; 
0x0000000000058c51: sal byte ptr [rbp - 0x25], 0xe9; ret; 
0x0000000000027567: sal byte ptr [rbp - 0x32], 0x5a; pop rbx; pop rbp; ret; 
0x00000000000196f8: sal byte ptr [rbp - 0xb], cl; sub rax, rdi; sar rax, 2; ret; 
0x0000000000028162: sal byte ptr [rbp - 0xf], 1; mov al, 1; mov byte ptr [rip + 0x71d83], al; ret; 
0x0000000000024697: sal byte ptr [rbx + 0x11], 1; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x00000000000573d8: sal byte ptr [rbx + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000004b686: sal byte ptr [rbx + rax + 0x48], cl; mov dword ptr [rdx], eax; ret; 
0x0000000000057e70: sal byte ptr [rbx + rdx + 0x48], 0x8b; adc byte ptr [rax - 0x75], cl; js 0x57e82; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000026850: sal byte ptr [rcx + rcx + 0x48], 0xff; ret; 
0x000000000002ee36: sal byte ptr [rcx + rcx - 0x15], 4; maxsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef46: sal byte ptr [rcx + rcx - 0x15], 4; minsd xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000057d9a: sal byte ptr [rcx + rcx - 1], 0xc8; mov dword ptr [rip + 0x442d7], eax; ret; 
0x0000000000058b16: sal byte ptr [rcx + rdx + 0x48], 0x63; clc; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000019184: sal byte ptr [rcx + rsi*2 - 0x73], 0x48; ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x0000000000047107: sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x0000000000049f0f: sal byte ptr [rcx], cl; imul al; adc dword ptr es:[rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000049b9d: sal byte ptr [rcx], cl; imul al; cwde; adc al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000015693: sal byte ptr [rcx], cl; neg byte ptr [rcx - 0x76be0009]; ret; 
0x000000000003b430: sal byte ptr [rcx], cl; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000005027e: sal byte ptr [rcx], cl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000004d3e3: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xd8; syscall; 
0x000000000004f1aa: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000004d510: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004b2bf: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call rax; 
0x000000000002e69a: sal byte ptr [rdi + 0xb], 1; comisd xmm0, xmm1; jbe 0x2e6ac; subsd xmm0, xmm1; ret; 
0x000000000001b536: sal byte ptr [rdi + rax + 0x31], 0xf6; call 0x1b3f7; mov eax, r12d; pop r12; ret; 
0x000000000004f36a: sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000004db31: sal byte ptr [rdi + rax + 0x48], 1; sub edx, eax; mov qword ptr [rsi], rdx; ret; 
0x000000000004db1c: sal byte ptr [rdi + rax + 0x48], cl; mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000038475: sal byte ptr [rdi + rax - 0xa], cl; ret 0x7410; 
0x00000000000381da: sal byte ptr [rdi + rcx + 0x48], 0x89; ret 0xff48; 
0x000000000005a5ae: sal byte ptr [rdi + rcx - 0x48], 3; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000003b337: sal byte ptr [rdi + rdx + 0x48], 0x63; sti; mov eax, 3; syscall; 
0x000000000004f3ad: sal byte ptr [rdx + rax*2 + 0x48], 1; inc eax; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x000000000005f35b: sal byte ptr [rdx + rcx + 0x48], 3; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000004b2bb: sal byte ptr [rdx + rdx + 0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000001dbab: sal byte ptr [rdx + rdx + 0x66], 0xf; fmul dword ptr cs:[rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x00000000000599e6: sal byte ptr [rdx + rdx - 0xd], cl; movd dword ptr [rdx], mm0; movaps xmm1, xmmword ptr [rip + 0x3b05c]; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x0000000000052d44: sal byte ptr [rdx], 1; add al, 0; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000002e5d7: sal byte ptr [rsi + 0x14], 1; addss xmm5, xmm0; subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002e388: sal byte ptr [rsi + 0x15], 1; addsd xmm4, xmm0; movsd xmm0, qword ptr [rip + 0x667a1]; subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002b848: sal byte ptr [rsi + 5], 1; addsd xmm0, xmm1; ret; 
0x000000000002ee32: sal byte ptr [rsi + rax - 0x7b], 1; sal byte ptr [rcx + rcx - 0x15], 4; maxsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ef42: sal byte ptr [rsi + rax - 0x7b], 1; sal byte ptr [rcx + rcx - 0x15], 4; minsd xmm0, xmm1; movaps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005d40a: sal byte ptr [rsi + rcx - 0x48], 0x3c; add byte ptr [rax], al; add byte ptr [rdi + 1], bh; syscall; 
0x0000000000060c0a: sal byte ptr [rsi + rdx + 0x48], 0x83; ret; 
0x0000000000060bca: sal byte ptr [rsi + rdx*2 + 0x48], 0x83; ret; 
0x0000000000019f6e: sal byte ptr [rsi - 0x75], cl; adc al, 0xb1; mov dword ptr [rax + rsi*4], edx; ret; 
0x000000000001b4b8: sal byte ptr [rsp + 0x48], 0x8b; cmp ebp, eax; ret 0x3c0; 
0x000000000002a82a: sal byte ptr [rsp + 0xf], cl; push rdi; add eax, 0x68f2c; ret; 
0x000000000004b668: sal byte ptr [rsp + rax + 0x48], 0x89; js 0x4b677; ret; 
0x0000000000056c56: sal byte ptr [rsp + rax - 0x10], 0x41; dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x000000000004cfbd: sal byte ptr [rsp + rbp*2 + 0x49], 0x8b; or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000003ba8f: sal byte ptr [rsp + rbx + 0x48], 0x83; ret; 
0x000000000002764e: sal byte ptr [rsp + rbx - 0x77], 1; ret 0xdaf7; 
0x0000000000058fc2: sal byte ptr [rsp + rcx - 0x39], 0x42; adc al, 0; add byte ptr [rax], al; add byte ptr [rax + 0x82], bh; pop rbx; ret; 
0x000000000004d115: sal byte ptr [rsp + rdx + 0x48], 0x63; sti; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005d3bd: sal byte ptr [rsp + rdx - 0x48], cl; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x000000000002ce80: sal dl, 0xf; adc byte ptr [rip + 0x683ff], cl; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002b21b: sal dl, 0xf; pop rcx; add eax, 0x69904; addsd xmm0, qword ptr [rip + 0x69d9c]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002b314: sal dl, 0xf; pop rcx; ret 0xff2; 
0x000000000002ac50: sal dl, 0xf; pop rcx; ret; 
0x0000000000037fc1: sal dl, 0xf; pop rdx; ror byte ptr [rax - 0x7d], 0xc4; and byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x000000000002cd7f: sal dl, 0xf; pop rsi; retf; addsd xmm0, xmm1; ret; 
0x00000000000439aa: sal dl, 0xf; pop rsp; add eax, 0x5117d; pop rdx; ret; 
0x000000000002b6ed: sal dl, 0xf; pop rsp; ret 0xff2; 
0x000000000002cd7b: sal dl, 0xf; sub al, al; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000002c072: sal dl, 1; cvtps2pd xmm0, xmm2; ret; 
0x000000000001bccc: sal dl, 1; movups xmm0, xmmword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x000000000003788a: sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x0000000000035e69: sal dl, 1; mulps xmm0, xmm2; ret; 
0x0000000000033f8c: sal dl, 1; mulps xmm2, xmm1; addsd xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000033cd0: sal dl, 1; subps xmm1, xmm2; movaps xmm0, xmm1; movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002e7e9: sal dl, cl; addps xmm0, xmm1; comisd xmm1, xmm2; jbe 0x2e7fc; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c268: sal dl, cl; addps xmm0, xmm1; comisd xmm2, xmm1; jbe 0x2c27b; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000001d7b2: sal dl, cl; mulps xmm0, xmm1; mulsd xmm1, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000005b939: sal dword ptr [rax + 0x595affff], 1; neg eax; pop rsi; ret; 
0x00000000000488d5: sal dword ptr [rax + rcx + 0x3c], 1; jnp 0x488ea; test esp, esi; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x00000000000564db: sal dword ptr [rbp + 0xb], 1; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000056fcf: sal dword ptr [rdi + 0xd], 1; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x00000000000356b7: sal dword ptr [rdi + 7], 1; cmp eax, 0x7ff; jne 0x356ca; mulsd xmm0, xmm1; divsd xmm0, xmm0; ret; 
0x0000000000035adb: sal dword ptr [rdx + 8], 1; addsd xmm0, qword ptr [rip + 0x5f04a]; test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b64: sal dword ptr [rdx + 8], 1; addss xmm0, dword ptr [rip + 0x5fd09]; test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002c270: sal dword ptr [rsi + 8], 1; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x000000000002e6a0: sal dword ptr [rsi + 9], 0xf2; subps xmm0, xmm1; ret; 
0x000000000002e6de: sal dword ptr [rsi + 9], 0xf3; subps xmm0, xmm1; ret; 
0x0000000000033333: sal ebx, 0xf; pop rax; ret 0xff3; 
0x000000000002bdb8: sal ebx, 0xf; pop rax; ret; 
0x000000000002aca8: sal ebx, 0xf; pop rcx; or eax, 0x6ad9f; addss xmm1, dword ptr [rip + 0x6abbf]; divss xmm0, xmm1; ret; 
0x000000000002d288: sal ebx, 0xf; pop rcx; ret 0xff3; 
0x000000000001e404: sal ebx, 0xf; pop rcx; ret; 
0x000000000002b310: sal ebx, 0xf; pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000031811: sal ebx, 0xf; pop rsi; ret 0x13eb; 
0x0000000000033524: sal ebx, 0xf; pop rsi; ret 0xf3c3; 
0x0000000000034025: sal ebx, 1; addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000033d4a: sal ebx, 1; movups xmmword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x0000000000030f33: sal ebx, 1; subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x64d1c]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002a034: sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000002bd18: sal edx, 0xf; pop rax; ret; 
0x000000000002db03: sal edx, 0xf; pop rax; sal edx, 0xf; pop rcx; add eax, 0x67780; ret; 
0x000000000002db07: sal edx, 0xf; pop rcx; add eax, 0x67780; ret; 
0x000000000002cd0d: sal edx, 0xf; pop rcx; ret 0xff2; 
0x000000000002fb1e: sal edx, 0xf; pop rcx; ret; 
0x0000000000031321: sal edx, 0xf; pop rsi; ret 0x13eb; 
0x00000000000314be: sal edx, 0xf; pop rsi; ret 0x69eb; 
0x0000000000033370: sal edx, 0xf; pop rsi; ret 0xf2c3; 
0x0000000000031331: sal edx, 0xf; pop rsi; ret; 
0x000000000003391d: sal edx, 1; addps xmm0, xmm2; addsd xmm0, xmm4; ret; 
0x0000000000033f90: sal edx, 1; addps xmm0, xmm2; movsd qword ptr [rsp - 8], xmm0; movaps xmm0, xmm1; ret; 
0x000000000002a64f: sal edx, 1; cvtps2pd xmm0, xmm2; ret; 
0x00000000000309a5: sal edx, 1; subps xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x6438e]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000033a0b: sal edx, cl; addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000032ff8: sal edx, cl; addps xmm0, xmm2; addsd xmm0, xmm5; ret; 
0x000000000002a647: sal edx, cl; addps xmm1, xmm0; addsd xmm2, xmm1; cvtsd2ss xmm0, xmm2; ret; 
0x000000000002bfa3: sal edx, cl; divps xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004b1a9: sar ah, 0xff; pop rbx; ret; 
0x000000000004b167: sar ah, 0xff; pop rdx; ret; 
0x0000000000038265: sar bh, 0xc0; ret; 
0x0000000000049138: sar bh, cl; dec dword ptr [rax - 0x77]; ret; 
0x0000000000023f40: sar byte ptr [r8 + 0xd9], 1; syscall; 
0x000000000004cd26: sar byte ptr [rax + 0x102], cl; syscall; 
0x000000000005e1b8: sar byte ptr [rax + 0x107], cl; syscall; 
0x000000000005e1b8: sar byte ptr [rax + 0x107], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004c969: sar byte ptr [rax + 0x10c], cl; syscall; 
0x000000000005d43b: sar byte ptr [rax + 0x10d], cl; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000002426b: sar byte ptr [rax + 0x130], cl; syscall; 
0x000000000004b2d1: sar byte ptr [rax + 0x135], cl; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000002e7e0: sar byte ptr [rax + 0x19], cl; xorps xmm0, xmm0; ret; 
0x000000000003b029: sar byte ptr [rax + 0x1c], cl; syscall; 
0x000000000003b029: sar byte ptr [rax + 0x1c], cl; syscall; neg eax; ret; 
0x0000000000022f7f: sar byte ptr [rax + 0x1d], cl; syscall; 
0x0000000000022f7f: sar byte ptr [rax + 0x1d], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002c25a: sar byte ptr [rax + 0x1e], cl; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x0000000000022f31: sar byte ptr [rax + 0x1e], cl; syscall; 
0x0000000000051063: sar byte ptr [rax + 0x2c], 0xb8; push rdi; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x0000000000022eed: sar byte ptr [rax + 0x40], cl; syscall; 
0x0000000000022eed: sar byte ptr [rax + 0x40], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x00000000000447d5: sar byte ptr [rax + 0x48], 1; syscall; 
0x000000000005d2d1: sar byte ptr [rax + 0x5c], cl; syscall; 
0x000000000005d2d1: sar byte ptr [rax + 0x5c], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004d2ea: sar byte ptr [rax + 0x5e], 0x48; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r13; syscall; 
0x000000000005da15: sar byte ptr [rax + 0x5e], cl; syscall; 
0x000000000005da15: sar byte ptr [rax + 0x5e], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000002401b: sar byte ptr [rax + 0x67], cl; syscall; 
0x000000000002401b: sar byte ptr [rax + 0x67], cl; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000003a185: sar byte ptr [rax + 0x8d], cl; syscall; 
0x00000000000390c9: sar byte ptr [rax + 0xa], 0x48; mov edx, eax; mov eax, 0x14; sub eax, edx; pop rdx; ret; 
0x00000000000229e8: sar byte ptr [rax + 0xa], 0x48; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000023f41: sar byte ptr [rax + 0xd9], 1; syscall; 
0x0000000000023fc1: sar byte ptr [rax + 0xfe], cl; syscall; 
0x000000000004df53: sar byte ptr [rax + 6], 0x48; mov dword ptr [rbx], eax; xor r8d, r8d; mov eax, r8d; pop rbx; ret; 
0x000000000004f298: sar byte ptr [rax + 7], 0xe8; mov edx, 0x89ffffe0; ret; 
0x000000000005da5c: sar byte ptr [rax + 8], cl; syscall; 
0x000000000002f8ee: sar byte ptr [rax - 0x80000000], 0xf3; divps xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x000000000005daaa: sar byte ptr [rax - 1], 0x44; cmovne esp, eax; mov eax, r12d; pop r12; ret; 
0x0000000000018219: sar byte ptr [rax], cl; sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x000000000003b398: sar byte ptr [rcx + 0x18], 0x48; mov edi, dword ptr [rsp + 8]; call 0x57585; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004f1a4: sar byte ptr [rcx + 0x18], 0xeb; adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000056997: sar byte ptr [rcx + 0x22], 0x49; movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000044d0a: sar byte ptr [rcx + 0x54], 0xf3; stosd dword ptr [rdi], eax; ret; 
0x0000000000057d36: sar byte ptr [rcx + 0xa], 0xc7; xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x0000000000056c72: sar byte ptr [rcx + 0xc], 0xf3; stosd dword ptr [rdi], eax; ret; 
0x0000000000033207: sar byte ptr [rcx + 0xc], 0xf3; subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000003185b: sar byte ptr [rcx + 0xc], cl; test eax, eax; je 0x3186a; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000057775: sar byte ptr [rcx + 7], 0x48; mov dword ptr [rdx], 0xffffffff; xor eax, eax; ret; 
0x0000000000035b70: sar byte ptr [rcx + 7], cl; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x0000000000035ae8: sar byte ptr [rcx + 7], cl; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x00000000000569cc: sar byte ptr [rcx], 0xc2; jne 0x56992; pop rbx; ret; 
0x0000000000022e3a: sar byte ptr [rdi + 0x45], cl; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005d76c: sar byte ptr [rdi + 0x4a], cl; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000005d742: sar byte ptr [rdi + 0x4b], cl; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x000000000004bd68: sar byte ptr [rdi + 2], cl; syscall; 
0x000000000004bd68: sar byte ptr [rdi + 2], cl; syscall; ret; 
0x000000000003d9a3: sar byte ptr [rdi + 3], 0xc6; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x0000000000056d20: sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056ced: sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000059a21: sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi], edx; ret; 
0x000000000001926e: sar byte ptr [rdx + 0x30], 0xeb; sar dword ptr [rax - 1], 1; ret; 
0x0000000000015612: sar byte ptr [rdx + rcx + 0x49], 0x83; call qword ptr [rcx]; 
0x0000000000057b66: sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x0000000000057b08: sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000005efa7: sar ch, 0xff; pop rax; pop rbx; pop rbp; ret; 
0x000000000003b1c5: sar ch, 0xff; pop rdx; ret; 
0x00000000000361ec: sar dh, 0xff; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000004cb73: sar dword ptr [rax + 0x106], 1; mov rsi, rbp; syscall; 
0x0000000000023f08: sar dword ptr [rax + 0x12d], 1; syscall; 
0x0000000000023f08: sar dword ptr [rax + 0x12d], 1; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000005d4c6: sar dword ptr [rax + 0x1b7], 1; mov rdi, r14; mov rdx, r13; syscall; 
0x0000000000022bb0: sar dword ptr [rax + 0xdd], 1; syscall; 
0x0000000000022bb0: sar dword ptr [rax + 0xdd], 1; syscall; neg eax; ret; 
0x0000000000019275: sar dword ptr [rax - 1], 1; ret; 
0x0000000000045018: sar dword ptr [rdi + 0xf7], 1; call 0x56a0e; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000049934: sar dword ptr [rdi + 7], 0x7c; or ecx, dword ptr [rax - 1]; shr bl, 0xd9; mov eax, 1; ret; 
0x000000000004884d: sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000004d82f: sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x00000000000437ef: sar eax, 0x1f; pop r13; pop r14; ret; 
0x0000000000023aa5: sar eax, 0x1f; ret; 
0x0000000000019680: sar eax, 2; pop r12; ret; 
0x000000000001964f: sar eax, 2; pop rbx; pop rbp; pop r12; ret; 
0x00000000000196ff: sar eax, 2; ret; 
0x0000000000021a13: sar eax, cl; and eax, 1; inc eax; ret; 
0x000000000002153f: sar eax, cl; and eax, 1; ret; 
0x0000000000029603: sar edi, 0xce; jne 0x295f5; ret; 
0x0000000000029621: sar edi, 0xce; jne 0x29617; fstp st(1); ret; 
0x0000000000036088: sar esi, 0xff; add rsp, 0x28; ret; 
0x000000000005efa6: sar r13b, 0xff; pop rax; pop rbx; pop rbp; ret; 
0x000000000001967f: sar rax, 2; pop r12; ret; 
0x000000000001964e: sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x00000000000196fe: sar rax, 2; ret; 
0x000000000002b47a: sbb ah, byte ptr [rsi + 0xf]; outsb dx, byte ptr [rsi]; ret 0x88e8; 
0x0000000000052074: sbb al, 0; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000018670: sbb al, 0; add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x000000000003adb9: sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000003b02b: sbb al, 0; add byte ptr [rax], al; syscall; neg eax; ret; 
0x00000000000188f1: sbb al, 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022d09: sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x0000000000022d50: sbb al, 0x24; pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x0000000000027edc: sbb al, 0x39; ret 0x4a74; 
0x0000000000045f4a: sbb al, 0x41; mov esi, dword ptr [rsi]; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; call rax; 
0x000000000003436e: sbb al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000004f602: sbb al, 0x48; mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000033b04: sbb al, 0x5a; pop rcx; add rsp, 0x18; ret; 
0x0000000000019493: sbb al, 0x66; rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x00000000000446e2: sbb al, 0x85; ror byte ptr [rdi], 0x85; rol byte ptr [rcx], 1; add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x0000000000044763: sbb al, 0x85; ror byte ptr [rdi], 0x88; add qword ptr [r8], r8; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x0000000000027650: sbb al, 0x89; ret 0xdaf7; 
0x000000000001ec44: sbb al, 0xb4; adc byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x00000000000448d8: sbb al, 0xba; add al, 0; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000022457: sbb al, 0xd0; mov qword ptr [rip + 0x79978], rcx; pop rbx; ret; 
0x0000000000033b00: sbb al, 0xdb; and al, 0x1c; pop rdx; pop rcx; add rsp, 0x18; ret; 
0x000000000001cc30: sbb al, 0xf3; movd dword ptr [rsp + 0x18], mm0; add rsp, 0x30; pop rbx; ret; 
0x0000000000023445: sbb al, 0xff; call qword ptr [rbp - 0x77]; 
0x0000000000023e7b: sbb al, 1; add byte ptr [rax], al; syscall; 
0x0000000000047105: sbb al, 1; sal byte ptr [rcx], 1; rol byte ptr [rbx + 0xf001879], cl; lahf; ret 0x48d; 
0x0000000000032c1b: sbb al, byte ptr [r14]; add dh, bl; ret 0xc9dc; 
0x000000000005a485: sbb al, byte ptr [rax + rax]; ret; 
0x0000000000024683: sbb al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000032bb1: sbb al, byte ptr [rsi]; add al, bl; ret; 
0x0000000000032b20: sbb al, byte ptr [rsi]; add dh, bl; ret 0x6cdb; 
0x0000000000032bed: sbb al, byte ptr [rsi]; add dh, bl; ret 0xc9d9; 
0x0000000000032c1c: sbb al, byte ptr [rsi]; add dh, bl; ret 0xc9dc; 
0x0000000000032be3: sbb al, byte ptr [rsi]; add dh, bl; ret; 
0x000000000001d017: sbb al, ch; ret 0xffee; 
0x000000000001e7d9: sbb bh, byte ptr [rdx]; add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x000000000005da0f: sbb bl, al; mov esi, esi; push rax; mov edx, edx; mov eax, 0x5e; syscall; 
0x000000000005d782: sbb bl, al; movsxd rdi, edi; push rax; mov eax, 0x4d; syscall; 
0x000000000004505d: sbb bl, al; pop rdx; mov eax, 0x3a; syscall; 
0x000000000005dae1: sbb bl, al; push rax; mov eax, 0x16; syscall; 
0x000000000005e014: sbb bl, al; push rax; mov eax, 0x4c; syscall; 
0x000000000003afd3: sbb bl, al; push rax; mov eax, 0x96; syscall; 
0x000000000004f1a6: sbb bl, ch; adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000003b42b: sbb bl, ch; add eax, 0x31d23145; ror byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000005e3db: sbb bl, ch; ror dword ptr [rax - 0x73], 1; add eax, 0x22db; mov rsi, r8; add rsp, 0x190; jmp rax; 
0x0000000000029439: sbb bl, dh; mulps xmm1, xmm0; mulss xmm1, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000020271: sbb byte ptr [r8 - 0x48], r9b; stosd dword ptr [rdi], eax; fld dword ptr [rbx - 0x1f32e6e1]; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000042ce3: sbb byte ptr [rax + 0x29], cl; ret 0x148; 
0x00000000000157e5: sbb byte ptr [rax + 0x63], cl; ret; 
0x000000000004c54d: sbb byte ptr [rax + 0x81], bh; syscall; 
0x000000000005808d: sbb byte ptr [rax + 0xda], bh; mov rdi, rbp; syscall; 
0x00000000000580a9: sbb byte ptr [rax + 0xe], bh; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000050fbd: sbb byte ptr [rax + 6], bh; mov rdi, r13; syscall; 
0x000000000005485a: sbb byte ptr [rax + rax], al; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000020272: sbb byte ptr [rax - 0x48], cl; stosd dword ptr [rdi], eax; fld dword ptr [rbx - 0x1f32e6e1]; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000039883: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov edx, r12d; mov rdi, rbp; lea rcx, [rsp + 0x30]; call rax; 
0x000000000005cb68: sbb byte ptr [rax - 0x75], cl; and al, 8; call rax; 
0x000000000005cdcd: sbb byte ptr [rax - 0x75], cl; and al, 8; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000001fcdb: sbb byte ptr [rax - 0x75], cl; je 0x1fd04; sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x0000000000042ced: sbb byte ptr [rax - 0x75], cl; push rbx; and byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000002435d: sbb byte ptr [rax - 0x77], cl; and al, 0x10; add rax, rcx; mov r8, qword ptr [rax]; mov eax, 0x9d; syscall; 
0x000000000004cfe9: sbb byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x000000000003b05f: sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000058eeb: sbb byte ptr [rax], al; add byte ptr [rax], al; lea rdi, [r8 + 0x88]; syscall; 
0x000000000004b35f: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005a418: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; ret; 
0x000000000002214b: sbb byte ptr [rbp + 0x41], bl; pop rbp; jmp rax; 
0x00000000000437eb: sbb byte ptr [rbp + 0x41], bl; pop rsp; sar eax, 0x1f; pop r13; pop r14; ret; 
0x000000000003ea7d: sbb byte ptr [rbp - 0x76f78701], al; clc; and eax, 0xffffff; ret; 
0x000000000002320d: sbb byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x000000000004b9e2: sbb byte ptr [rbx + 0x44], bl; sub eax, edx; ret; 
0x000000000001821b: sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x0000000000049ac4: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000000466bc: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r14; ret; 
0x000000000002aa8f: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000004f290: sbb byte ptr [rbx + 0x8c87], cl; add byte ptr [rbp - 0x17f88740], al; mov edx, 0x89ffffe0; ret; 
0x000000000004cf44: sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x000000000001b8d7: sbb byte ptr [rcx + 0x482c2444], cl; mov eax, dword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x000000000004b959: sbb byte ptr [rcx + r13 - 0x30], al; ret; 
0x000000000004b95a: sbb byte ptr [rcx + rbp - 0x30], al; ret; 
0x000000000004df39: sbb byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004b27f: sbb byte ptr [rcx + rcx*4 - 0x1a], cl; mov rdi, rbp; pop rbp; pop r12; jmp rcx; 
0x0000000000039d5a: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000024c50: sbb byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000045468: sbb byte ptr [rcx + rcx*4 - 0x38], al; pop rbx; pop rbp; ret; 
0x000000000004b9d9: sbb byte ptr [rcx - 0x76b6e78f], cl; add dword ptr [rbx + 0x445b1840], ecx; sub eax, edx; ret; 
0x000000000004b9dc: sbb byte ptr [rcx - 0x77], cl; add dword ptr [rbx + 0x445b1840], ecx; sub eax, edx; ret; 
0x000000000005d3e1: sbb byte ptr [rcx - 0x77], cl; clc; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000001cc2c: sbb byte ptr [rcx - 0xce3dbbc], cl; movd dword ptr [rsp + 0x18], mm0; add rsp, 0x30; pop rbx; ret; 
0x000000000002405b: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x000000000003f5ee: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004cf9e: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov rsi, r9; mov rdx, r8; syscall; 
0x0000000000054f5b: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000021bb7: sbb byte ptr [rcx], bh; or al, 0x7c; xor eax, 0x87f6348; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x000000000002241d: sbb byte ptr [rcx], dh; fisttp dword ptr [rax - 1]; ret 0x8348; 
0x0000000000057ccf: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000022d3d: sbb byte ptr [rdi], 0; add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x00000000000282ca: sbb byte ptr [rdi], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000023ec8: sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000004ec06: sbb byte ptr [rdi], cl; mov dh, 0xc0; pop rbx; pop r12; neg eax; ret; 
0x000000000001bf71: sbb byte ptr [rdi], cl; sub cl, dl; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001d2d4: sbb byte ptr [rsi + 0x48], ah; movd eax, mm0; movq xmm1, rax; movaps xmm0, xmm2; ret; 
0x000000000001cc79: sbb cl, bl; leave; ret; 
0x0000000000061b20: sbb cl, byte ptr [rbx + 0x29480449]; retf 0x148; ret 0x8d49; 
0x0000000000035d84: sbb cl, ch; in eax, 0; add byte ptr [rax], al; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000035ccc: sbb cl, ch; sbb eax, 0xf000001; sub dl, al; add rsp, 0x18; ret; 
0x0000000000029400: sbb dl, dh; mulps xmm1, xmm0; mulsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000004126e: sbb dword ptr [rax - 0x75], ecx; je 0x41297; or byte ptr [rax - 0x77], cl; ret; 
0x000000000004a7ca: sbb dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x000000000003af72: sbb dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x00000000000194f0: sbb dword ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000198ee: sbb dword ptr [rbx - 0x75], 8; test ecx, ecx; cmove rax, rdx; ret; 
0x0000000000023e35: sbb dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000004b2cf: sbb dword ptr [rcx], esi; sar byte ptr [rax + 0x135], cl; mov rdi, rbp; mov rsi, rdx; syscall; 
0x00000000000217e2: sbb dword ptr [rdi + 3], esi; and eax, 0x5f; ret; 
0x00000000000217cf: sbb dword ptr [rdi + 3], esi; or eax, 0x20; ret; 
0x0000000000020277: sbb dword ptr [rdi], 0x19; int 0xe0; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000020b8b: sbb dword ptr [rdi], 0x48; mov dword ptr [rdi + 0x38], eax; movabs rax, 0x5be0cd19137e2179; mov qword ptr [rdi + 0x40], rax; ret; 
0x0000000000028287: sbb dword ptr [rdi], eax; add bh, dh; ret; 
0x000000000005b853: sbb dword ptr [rdx - 0x76b70005], edi; ret 0x8d48; 
0x00000000000244a2: sbb dword ptr [rdx], edx; sub byte ptr [rax + 0xa9], bh; syscall; 
0x0000000000021400: sbb dword ptr [rsi + 0xb], esi; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000004c9c4: sbb eax, 0x101b8; add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x0000000000026d47: sbb eax, 0x31ffffff; ror byte ptr [rax - 0x7d], cl; jge 0x26d51; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x000000000005f165: sbb eax, 0x3ce46; mov qword ptr [rbx + 0x70], rax; add rsp, 0x110; pop rbx; ret; 
0x0000000000028141: sbb eax, 0x428d0007; add esi, edi; ret 0x1c75; 
0x00000000000215a3: sbb eax, 0x48000743; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000005cf0f: sbb eax, 0x5afffba3; ret; 
0x000000000003f00f: sbb eax, 0x5afffd82; ret; 
0x000000000002400f: sbb eax, 0x5affff32; ret; 
0x000000000005b8c9: sbb eax, 0x60b8; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; syscall; 
0x000000000002835f: sbb eax, 0x71b94; add rbx, 0x2000; mov eax, 0xc; mov rdi, rbx; syscall; 
0x000000000003b05a: sbb eax, 0x74c53948; sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000024972: sbb eax, 0x8900001e; clc; test esi, esi; je 0x2497e; bswap eax; ret; 
0x000000000001948d: sbb eax, 0xb70f0c7e; sbb al, 0x66; rol eax, 8; mov word ptr [rcx + 0x1c], ax; ret; 
0x000000000003b298: sbb eax, 0xb8fd6348; hlt; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x0000000000024550: sbb eax, 0xcde8ff31; ja 0x24559; add byte ptr [rax + 0x27], bh; syscall; 
0x0000000000052d40: sbb eax, 0xd00d8d48; xor al, byte ptr [rax + rax]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000035cce: sbb eax, 0xf000001; sub dl, al; add rsp, 0x18; ret; 
0x000000000003adcb: sbb eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000045b61: sbb eax, dword ptr [rcx - 0x3a]; add eax, 0xff482fff; ret; 
0x00000000000247b4: sbb eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000028361: sbb eax, dword ptr [rdi]; add byte ptr [rax - 0x7f], cl; ret; 
0x000000000002f929: sbb eax, eax; add eax, 0x80000000; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000002f853: sbb eax, eax; add r8d, 0x80000000; movss dword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x00000000000349ef: sbb eax, eax; add r8d, 2; mov eax, r8d; ret; 
0x000000000002e855: sbb eax, eax; and eax, 0xc0800000; sub eax, 0x40800000; movd xmm0, eax; ret; 
0x000000000002196f: sbb eax, eax; and eax, 2; add rsp, 0x18; ret; 
0x00000000000213d6: sbb eax, eax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x00000000000219ba: sbb eax, eax; ret; 
0x0000000000053a6a: sbb ecx, dword ptr [rax - 0x7d]; ret 0x8308; 
0x000000000002d269: sbb ecx, dword ptr [rcx + 0xff30006]; pop rcx; ret; 
0x000000000003c796: sbb edi, edi; ret 0x8948; 
0x0000000000032c25: sbb r8b, byte ptr [r14]; add dh, bl; ret 0xc9dc; 
0x000000000002f852: sbb r8d, r8d; add r8d, 0x80000000; movss dword ptr [rsp - 4], xmm0; mov eax, r8d; ret; 
0x00000000000349ee: sbb r8d, r8d; add r8d, 2; mov eax, r8d; ret; 
0x000000000002196e: sbb rax, rax; and eax, 2; add rsp, 0x18; ret; 
0x00000000000213d5: sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000022d42: scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x0000000000022d01: scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x00000000000177bc: scasb al, byte ptr [rdi]; add byte ptr [rax], al; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000004bb6c: scasb al, byte ptr [rdi]; add byte ptr [rax], al; mov rdi, rax; call 0x17230; add rsp, 0x18; ret; 
0x0000000000017782: scasb al, byte ptr [rdi]; add byte ptr [rax], al; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000005ef1d: scasb al, byte ptr [rdi]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022cc1: scasb al, byte ptr [rdi]; push rsp; and al, 0xf8; xor eax, eax; ret; 
0x0000000000022d08: scasb al, byte ptr [rdi]; sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000003f33e: scasd eax, dword ptr [rdi]; add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x14], cl; and al, 0xff; ret; 
0x0000000000043a2c: scasd eax, dword ptr [rdi]; add eax, 0x584a6; inc rax; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x000000000005b6f6: scasd eax, dword ptr [rdi]; cld; call qword ptr [rbp + 0x48]; 
0x000000000002f018: scasd eax, dword ptr [rdi]; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000484b8: scasd eax, dword ptr [rdi]; loope 0x484ba; dec dword ptr [rax - 0x77]; ret 0x854d; 
0x0000000000027840: scasd eax, dword ptr [rdi]; ret 0x8348; 
0x00000000000170ea: scasd eax, dword ptr [rdi]; ret 0x894c; 
0x000000000001e7b4: scasd eax, dword ptr [rdi]; ret 0xc148; 
0x00000000000159b7: scasd eax, dword ptr [rdi]; ret; 
0x0000000000024b5b: seta al; movzx eax, al; ret; 
0x0000000000021a62: seta al; ret; 
0x0000000000028d18: setb al; movzx eax, al; ret; 
0x00000000000214c9: setbe al; cmp edi, 0x20; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000002144b: setbe al; cmp edi, 0x7f; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000002e752: setbe al; movzx eax, al; ret; 
0x000000000002140b: setbe al; ret; 
0x0000000000021434: sete al; cmp edi, 9; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000059a69: sete al; mov dword ptr [rdi + 4], 0; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000029483: sete al; mov eax, r8d; ret; 
0x00000000000214b4: sete al; movzx eax, al; ret; 
0x000000000003f4df: sete al; pop rbx; ret; 
0x000000000002142d: sete al; ret; 
0x000000000001983f: sete cl; test r10b, r9b; jne 0x19820; sub eax, r8d; ret; 
0x000000000002143a: sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000029482: sete r8b; mov eax, r8d; ret; 
0x000000000001983e: sete r9b; test r10b, r9b; jne 0x19820; sub eax, r8d; ret; 
0x000000000001888b: setne al; add rcx, 1; test sil, r8b; jne 0x18868; sub eax, edi; ret; 
0x0000000000023ec2: setne al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x0000000000056eac: setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005a428: setne al; movzx eax, al; add eax, eax; ret; 
0x0000000000021676: setne al; movzx eax, al; add rsp, 0x18; ret; 
0x0000000000026a9d: setne al; movzx eax, al; and eax, edx; ret; 
0x000000000003f221: setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000004325f: setne al; movzx eax, al; neg eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000023e9d: setne al; movzx eax, al; neg eax; ret; 
0x00000000000214ff: setne al; movzx eax, al; ret; 
0x0000000000059539: setne al; movzx eax, al; shl eax, 4; ret; 
0x0000000000022c0f: setne al; neg eax; pop rdx; ret; 
0x000000000004da95: setne al; ret; 
0x0000000000059f92: setne dh; mov rax, r8; movzx esi, sil; shl esi, 7; or esi, 1; syscall; 
0x000000000005913c: setne dh; mov rax, r8; shl esi, 7; or esi, 1; syscall; 
0x000000000004f251: setne dl; inc edx; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000001888a: setne r8b; add rcx, 1; test sil, r8b; jne 0x18868; sub eax, edi; ret; 
0x0000000000059f91: setne sil; mov rax, r8; movzx esi, sil; shl esi, 7; or esi, 1; syscall; 
0x000000000005913b: setne sil; mov rax, r8; shl esi, 7; or esi, 1; syscall; 
0x0000000000026aa2: shl byte ptr [rcx], 0xd0; ret; 
0x00000000000378c9: shl byte ptr [rcx], 1; sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x000000000002c2ff: shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x00000000000439a5: shl byte ptr [rsi + 0x48], 1; movd mm0, eax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002df4e: shl byte ptr [rsi + 0x48], 1; movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; addsd xmm0, xmm0; ret; 
0x000000000002aec8: shl byte ptr [rsi + 0xf], 0x7e; ret 0x280f; 
0x000000000001bc01: shl byte ptr [rsi + 0xf], 0x7e; ret 0x4166; 
0x00000000000318ef: shl byte ptr [rsi + 0xf], 0x7e; ret 0xe839; 
0x0000000000035af6: shl byte ptr [rsi + 0xf], 0x7e; ret 0xe8c1; 
0x000000000002ee46: shl byte ptr [rsi + 0xf], 0x7e; ret 0xff25; 
0x000000000002dffc: shl byte ptr [rsi + 0xf], 0x7e; ret 0xff3; 
0x000000000002b9a9: shl byte ptr [rsi + 0xf], 0x7e; shl dword ptr [rip + 0x7fffffff], 0x3d; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm1; ret; 
0x0000000000033d1a: shl byte ptr [rsi + 0xf], 1; outsb dx, byte ptr [rsi]; ret 0x2aeb; 
0x000000000002aaea: shl byte ptr [rsi + rax + 0x590ff200], cl; ret 0xff2; 
0x0000000000022cf4: shl ch, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000022cbb: shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000002b9ad: shl dword ptr [rip + 0x7fffffff], 0x3d; add byte ptr [rax], al; cmp byte ptr [rdi + 0x76], 5; addss xmm0, xmm1; ret; 
0x000000000002e7ed: shl dword ptr [rsi + 0xf], 0x2f; retf 0x876; subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002c26c: shl dword ptr [rsi + 0xf], 0x2f; sal dword ptr [rsi + 8], 1; addsd xmm0, qword ptr [rip + 0x688b5]; ret; 
0x0000000000043a9d: shl dword ptr [rsi + 0xf], 0x6e; or eax, 0x585ba; sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000001c0d5: shl dword ptr [rsi + 0xf], 0x7e; ret 0xc148; 
0x000000000002c27f: shl dword ptr [rsi + 0xf], 0x7e; ret 0xe9c1; 
0x000000000001da96: shl dword ptr [rsi + 0xf], 0x7e; ret; 
0x0000000000035ed0: shl eax, 0x17; movd xmm2, eax; mulss xmm0, xmm2; ret; 
0x000000000004d828: shl eax, 0x1b; mov qword ptr [rbx + 0x10], rdx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000004bfaf: shl eax, 0x20; mov qword ptr [rsp + 0x28], rax; mov eax, 0xe; syscall; 
0x00000000000581d4: shl eax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000035e62: shl eax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000002f2f3: shl eax, 0x35; or rdx, rax; movq xmm0, rdx; pop rbx; ret; 
0x000000000002947f: shl eax, 0xc; sete r8b; mov eax, r8d; ret; 
0x0000000000028d10: shl eax, 4; cdqe; cmp r8, rax; setb al; movzx eax, al; ret; 
0x0000000000027b26: shl eax, 4; cdqe; ret; 
0x00000000000439a0: shl eax, 4; or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000005953f: shl eax, 4; ret; 
0x0000000000021536: shl eax, 5; add eax, edx; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; ret; 
0x000000000002808f: shl eax, 5; and edx, 0x1f; add eax, edx; mov byte ptr [r8 - 3], al; mov rax, r8; ret; 
0x0000000000027670: shl eax, 5; and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x0000000000059a73: shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x00000000000593ed: shl eax, 7; mov dword ptr [rdx + 8], eax; xor eax, eax; ret; 
0x00000000000294bc: shl eax, 9; sete r8b; mov eax, r8d; ret; 
0x000000000004c17b: shl eax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000037b60: shl ecx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x000000000003ea73: shl edi, 8; or eax, edi; ret; 
0x0000000000055626: shl edx, 0x20; or rax, rdx; ret; 
0x000000000002f16d: shl edx, 0x3f; and rdi, rdx; or rdi, rax; movq xmm0, rdi; ret; 
0x000000000002c2f2: shl edx, 0x3f; btr rax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x0000000000025649: shl edx, 8; shl esi, 0x10; or eax, esi; or eax, edx; ret; 
0x000000000005587d: shl edx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x000000000002564c: shl esi, 0x10; or eax, esi; or eax, edx; ret; 
0x0000000000057d1b: shl esi, 0x1f; and eax, 0x7fffffff; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000057439: shl esi, 0x1f; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000003b58b: shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x0000000000059212: shl esi, 7; and al, 0x7f; or eax, esi; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000059142: shl esi, 7; or esi, 1; syscall; 
0x000000000004bfae: shl rax, 0x20; mov qword ptr [rsp + 0x28], rax; mov eax, 0xe; syscall; 
0x00000000000581d3: shl rax, 0x20; mov qword ptr [rsp + 0x68], rax; mov eax, 0xe; syscall; 
0x0000000000035e61: shl rax, 0x34; movq xmm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000002f2f2: shl rax, 0x35; or rdx, rax; movq xmm0, rdx; pop rbx; ret; 
0x000000000002947e: shl rax, 0xc; sete r8b; mov eax, r8d; ret; 
0x0000000000028d0f: shl rax, 4; cdqe; cmp r8, rax; setb al; movzx eax, al; ret; 
0x000000000004399f: shl rax, 4; or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000004c17a: shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000037b5f: shl rcx, 0x20; bts rax, 0x35; or rdx, rcx; ret; 
0x0000000000055625: shl rdx, 0x20; or rax, rdx; ret; 
0x000000000002f16c: shl rdx, 0x3f; and rdi, rdx; or rdi, rax; movq xmm0, rdi; ret; 
0x000000000002c2f1: shl rdx, 0x3f; btr rax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x000000000005587c: shl rdx, cl; mov qword ptr [rdi + 8], rax; mov qword ptr [rdi], rdx; ret; 
0x0000000000028af1: shr al, 0x30; idiv bh; dec dword ptr [rax + 0x63]; ret; 
0x00000000000410e6: shr al, 0x4b; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], al; ret 0xc883; 
0x000000000001b41f: shr al, 0x9a; jno 0x1b424; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001e5b5: shr al, 0xb1; and eax, 0xc0ff0003; cdqe; pop rdx; ret; 
0x000000000002a55a: shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000027b1b: shr ax, 6; and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x000000000004993b: shr bl, 0xd9; mov eax, 1; ret; 
0x0000000000043b13: shr bl, 0xe5; mov edi, dword ptr [rcx]; or edi, 1; mov dword ptr [rcx], edi; ret; 
0x0000000000026c5f: shr bl, 0xee; cmp cl, 0x20; je 0x26c5d; ret; 
0x000000000003c7a9: shr bl, 1; mov esp, 0xffc88341; mov eax, r8d; ret; 
0x000000000005555a: shr bl, 1; out 0x85, al; leave; jne 0x55564; neg rax; ret; 
0x00000000000555a6: shr bl, 1; out 0x85, al; leave; jne 0x555b0; neg rax; ret; 
0x000000000005b8e4: shr bl, 5; call 0x17230; pop rdx; pop rbx; pop rbp; ret; 
0x000000000004d3fb: shr bl, 6; mov r8d, 1; mov eax, r8d; ret; 
0x0000000000034c8a: shr bl, 8; movss xmm0, dword ptr [rip + 0x60be3]; add rsp, 0x28; ret; 
0x000000000002f908: shr bl, cl; hlt; ret; 
0x000000000002833c: shr bl, cl; sub al, 0xb8; or al, 0; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x000000000001834e: shr byte ptr [rcx], 0xc8; ret; 
0x000000000001922e: shr byte ptr [rcx], 0xd0; ret; 
0x000000000002e85b: shr byte ptr [rip + 0x40800000], 0x66; movd mm0, eax; ret; 
0x000000000003b469: shr cl, 0x43; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; call qword ptr [rax - 0x48]; 
0x00000000000568ee: shr cl, 0xd5; sub esi, edi; call qword ptr [rax - 0x18]; 
0x0000000000018896: shr dword ptr [rcx], 1; clc; ret; 
0x0000000000043a03: shr eax, 0x10; cdqe; ret; 
0x000000000003eaac: shr eax, 0x10; ret; 
0x00000000000439e4: shr eax, 0x11; ret; 
0x0000000000039689: shr eax, 0x1f; add rsp, 0x10; pop rbx; ret; 
0x0000000000056ec2: shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002a552: shr eax, 0x1f; ret; 
0x000000000001d049: shr eax, 0x20; mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001c0e4: shr eax, 0x20; mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001d10a: shr eax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001bd3c: shr eax, 0x20; mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000043a3d: shr eax, 0x21; ret; 
0x000000000002a54a: shr eax, 0x3f; ret; 
0x000000000002a55b: shr eax, 0xf; movzx eax, ax; ret; 
0x0000000000043a77: shr eax, 1; ret; 
0x0000000000056ee6: shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004dab0: shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x0000000000022d0c: shr eax, 3; and eax, 0xc00; ret; 
0x0000000000056ecc: shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004dabc: shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x0000000000056d2b: shr eax, 4; and eax, 1; ret; 
0x0000000000049135: shr eax, 5; sar bh, cl; dec dword ptr [rax - 0x77]; ret; 
0x0000000000027b1c: shr eax, 6; and eax, 0x3f; movzx eax, word ptr [rdx + rax*2]; shl eax, 4; cdqe; ret; 
0x0000000000056ed9: shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003eab0: shr eax, 8; ret; 
0x000000000001efbe: shr eax, cl; and eax, 1; ret; 
0x000000000002f282: shr eax, cl; and edi, 0x80000000; or edi, eax; movd xmm0, edi; ret; 
0x0000000000017f23: shr eax, cl; mov ebx, 0x480003e4; add eax, ebx; pop rbx; ret; 
0x000000000004e547: shr eax, cl; ret; 
0x00000000000556b0: shr ebx, 1; fadd qword ptr [rcx - 0x3a]; add al, 0x3c; add byte ptr [rax + 0x63], cl; ret 0x8d48; 
0x00000000000349a4: shr ebx, 8; movsd xmm0, qword ptr [rip + 0x60181]; add rsp, 0x40; pop rbx; ret; 
0x000000000002b987: shr ebx, 8; movsd xmm0, qword ptr [rip + 0x691b6]; pop rbx; ret; 
0x000000000002bb0d: shr ebx, 8; movss xmm0, dword ptr [rip + 0x69d6c]; pop rbx; ret; 
0x000000000002aead: shr ecx, 0xc8; jle 0x2aeb2; add al, ch; ret; 
0x00000000000564df: shr ecx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000027ae7: shr ecx, 4; dec rcx; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x0000000000060603: shr edi, 3; sub r15, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x0000000000043a72: shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000003ea7b: shr edx, 0x18; test edi, edi; js 0x3ea8a; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000000043974: shr edx, 0x20; mov word ptr [rcx + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x00000000000558bd: shr edx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x0000000000060602: shr r15, 3; sub r15, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x0000000000043a02: shr rax, 0x10; cdqe; ret; 
0x00000000000439e3: shr rax, 0x11; ret; 
0x000000000001d048: shr rax, 0x20; mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000001c0e3: shr rax, 0x20; mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001d109: shr rax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001bd3b: shr rax, 0x20; mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000043a3c: shr rax, 0x21; ret; 
0x000000000002a549: shr rax, 0x3f; ret; 
0x000000000001efbd: shr rax, cl; and eax, 1; ret; 
0x00000000000564de: shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000027ae6: shr rcx, 4; dec rcx; cmp rdx, rcx; jbe 0x27af3; hlt; ret; 
0x0000000000043973: shr rdx, 0x20; mov word ptr [rcx + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x00000000000558bc: shr rdx, cl; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rdx; ret; 
0x000000000004ca87: sldt word ptr [rax]; add byte ptr [rax + 0x48], dl; mov edi, 0xfffffff7; call 0x17230; pop rdx; ret; 
0x000000000002128a: sldt word ptr [rax]; add rsp, 0x18; ret; 
0x0000000000021207: sldt word ptr [rax]; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003aed8: sldt word ptr [rax]; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000002d175: sldt word ptr [rax]; mulss xmm0, dword ptr [rsp + 0x10]; divss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; ret; 
0x000000000004e361: sldt word ptr [rax]; pop rbp; ret; 
0x0000000000056c6d: sldt word ptr [rax]; ret; 
0x0000000000038112: sqrtps xmm0, xmm0; ret; 
0x0000000000038111: sqrtsd xmm0, xmm0; ret; 
0x0000000000038116: sqrtss xmm0, xmm0; ret; 
0x000000000001a0ab: stc; add dword ptr [rbx + rax - 0x77], esi; ja 0x1a0ba; ret; 
0x000000000002d741: stc; add rsp, 0x60; pop rbx; ret; 
0x00000000000419dd: stc; call 0x17230; pop rbx; ret; 
0x0000000000023e52: stc; call 0x17230; pop rdx; ret; 
0x0000000000047bf8: stc; inc dword ptr [rax]; add byte ptr [rax], al; jle 0x47bdd; ret; 
0x000000000002157f: stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000002d9f9: stc; jbe 0x2da3f; test ecx, ecx; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000004cb70: stc; movsxd r10, ecx; mov eax, 0x106; mov rsi, rbp; syscall; 
0x0000000000037363: stc; ret; 
0x000000000005b7f6: stc; syscall; 
0x000000000001e932: std; add al, 0x75; ret 0x489; 
0x00000000000582b3: std; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x00000000000213db: std; add rax, 4; ret; 
0x0000000000044084: std; dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x00000000000442b6: std; dec dword ptr [rax - 0x77]; ret 0x8949; 
0x00000000000443f2: std; dec dword ptr [rax - 0x77]; ret 0xc883; 
0x000000000003d171: std; dec dword ptr [rax - 0x77]; ret; 
0x000000000004cf3f: std; dec dword ptr [rax - 0x7d]; in al, dx; sbb byte ptr [rbx - 0x3d], 0x89; call qword ptr [rax - 0x48]; 
0x0000000000043d80: std; dec dword ptr [rcx + rcx*4 - 0x19]; call 0x56922; mov eax, 0x39; syscall; 
0x0000000000050558: std; dec dword ptr [rdx + 0x63]; jl 0x5050a; and byte ptr [rax + 3], bh; syscall; 
0x0000000000043f4a: std; dec ecx; ret; 
0x00000000000379ad: std; fstp st(1); add rsp, 0x10; ret; 
0x0000000000037a03: std; fstp st(1); ret; 
0x000000000004c4c8: std; inc dword ptr [rcx + rcx*4 + 0x20]; or r12d, 0xffffffff; mov eax, r12d; pop r12; ret; 
0x00000000000503d7: std; inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret 1; 
0x00000000000523e3: std; inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000027e60: std; jmp qword ptr [rsi + 0x41]; 
0x000000000005efa8: std; lcall [rax + 0x5b]; pop rbp; ret; 
0x000000000003b01a: std; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000003ade9: std; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x97; syscall; 
0x000000000003adc5: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x1b; syscall; 
0x00000000000390e6: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x76; syscall; 
0x000000000003add7: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x95; syscall; 
0x000000000003afe3: std; lcall [rdx - 0x3d]; push rax; mov eax, 0x98; syscall; 
0x000000000005cca2: std; lea rdx, [rsp + 4]; mov eax, 0xde; mov rsi, rbx; syscall; 
0x00000000000448d3: std; lea rsi, [rsp + 0x1c]; mov edx, 4; mov rax, r8; syscall; 
0x0000000000061037: std; mov byte ptr [rbx], al; add byte ptr [rax - 0x7f], cl; call qword ptr [rax + 1]; 
0x0000000000022fb2: std; mov byte ptr [rcx + 0x42], dl; cmp rax, -1; jne 0x22fc3; lea rax, [rip + 0x73561]; ret; 
0x0000000000044758: std; mov eax, 0x20; syscall; 
0x0000000000044855: std; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000003b29b: std; mov eax, 0xf4; mov rsi, r14; syscall; 
0x000000000002809a: std; mov rax, r8; ret; 
0x000000000004c543: std; movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x0000000000056432: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000031b83: std; ret 0xfbb4; 
0x000000000002767a: std; ret; 
0x000000000002766f: std; shl eax, 5; and edx, 0x1f; add eax, edx; mov byte ptr [rdi - 3], al; ret; 
0x000000000003c970: sti; add eax, 0xff480c74; ret; 
0x00000000000220d3: sti; add esi, dword ptr [rbp - 0x1c]; mov byte ptr [rip + 0x77844], 1; add rsp, 0x150; pop rbx; ret; 
0x0000000000015652: sti; and dword ptr [rcx], ebp; ret; 
0x000000000004b1a6: sti; call 0x17230; pop rbx; ret; 
0x000000000005b855: sti; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000056de9: sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000005fc98: sti; inc dword ptr [rbp - 0x16248b40]; ret; 
0x000000000005d32d: sti; inc ebx; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000005b8ea: sti; lcall [rdx + 0x5b]; pop rbp; ret; 
0x000000000005cf11: sti; lcall [rdx - 0x3d]; mov eax, 0x64; syscall; 
0x000000000005d99c: sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000005d96d: sti; lcall [rdx - 0x3d]; mov eax, 0x79; xor edi, edi; syscall; 
0x000000000005df7d: sti; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x000000000005da53: sti; lcall [rdx - 0x3d]; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000005df68: sti; lcall [rdx - 0x3d]; movsxd rsi, esi; push rax; mov eax, 0x10a; syscall; 
0x000000000005dd84: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x000000000005da23: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x56; syscall; 
0x000000000005d23c: sti; lcall [rdx - 0x3d]; push rax; mov eax, 0xa3; syscall; 
0x000000000004d11a: sti; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005b8ac: sti; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x0000000000021b9b: sti; mov eax, 3; syscall; 
0x000000000003e574: sti; mov edx, eax; mov eax, 3; syscall; 
0x000000000004d13a: sti; mov esi, 3; mov rax, r8; syscall; 
0x0000000000050275: sti; mov r8d, 0x3d; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000004d193: sti; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000004cf99: sti; movsxd r10, ebp; mov eax, 0x118; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005d953: sti; push qword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000005b88a: sti; push rcx; mov rax, qword ptr [rip + 0x3dbdd]; test rax, rax; je 0x5b8aa; call rax; 
0x0000000000024539: sti; push rdx; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000056414: sti; ret; 
0x0000000000022d19: stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x0000000000022d07: stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x0000000000023a35: stosb byte ptr [rdi], al; add al, byte ptr [rax]; mov qword ptr [rip + 0x783d9], rax; pop rax; ret; 
0x000000000004c7b7: stosb byte ptr [rdi], al; cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000005d952: stosb byte ptr [rdi], al; sti; push qword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000002e0e9: stosd dword ptr [rdi], eax; add byte ptr [rax], al; add byte ptr [rip + 0x7f7], bh; jbe 0x2e0f9; addss xmm0, xmm0; ret; 
0x0000000000018c20: stosd dword ptr [rdi], eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000020275: stosd dword ptr [rdi], eax; fld dword ptr [rbx - 0x1f32e6e1]; pop rbx; mov qword ptr [rdi + 0x20], rax; ret; 
0x0000000000050fb8: stosd dword ptr [rdi], eax; lea rsi, [rsp + 0x18]; mov eax, 6; mov rdi, r13; syscall; 
0x0000000000057043: stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x0000000000056cdc: stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x000000000004cd9e: stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000001e73b: stosd dword ptr [rdi], eax; mov eax, 0xcc; mov rdi, rcx; syscall; 
0x0000000000022675: stosd dword ptr [rdi], eax; mov eax, 0xd; mov rdi, r8; mov rdx, rcx; syscall; 
0x00000000000606b5: stosd dword ptr [rdi], eax; mov eax, 3; add byte ptr [rax], al; pop rax; ret; 
0x00000000000564e4: stosd dword ptr [rdi], eax; mov rax, r8; ret; 
0x000000000005111b: stosd dword ptr [rdi], eax; mov rsi, rsp; mov eax, 6; mov rdi, r12; syscall; 
0x000000000004cdc2: stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000044d11: stosd dword ptr [rdi], eax; ret; 
0x00000000000564e3: stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000002a827: sub ah, al; test edx, edx; je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x000000000002ab02: sub ah, byte ptr [rax + 0xff20006]; pop rcx; ret 0xff2; 
0x0000000000033ee4: sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x000000000003755b: sub al, 0x24; add rsp, 0x38; fmulp st(1); ret; 
0x00000000000379db: sub al, 0x24; fmulp st(1); add rsp, 0x10; ret; 
0x000000000003bcdc: sub al, 0x24; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000018ac4: sub al, 0x48; add esp, 0x38; ret; 
0x000000000001b8db: sub al, 0x48; mov eax, dword ptr [rbx]; mov qword ptr [rsp + 0x30], rax; mov eax, 0x81; syscall; 
0x0000000000044a09: sub al, 0x89; ret; 
0x000000000002833e: sub al, 0xb8; or al, 0; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x0000000000051065: sub al, 0xb8; push rdi; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x0000000000032d33: sub al, 0xc0; ret; 
0x000000000001ddd5: sub al, 0xf; ror byte ptr cs:[rdi], 1; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000022319: sub al, 0xff; dec dword ptr [rax - 0x77]; ret; 
0x0000000000023ef0: sub al, 1; add byte ptr [rax], al; syscall; 
0x000000000002cd7e: sub al, al; divsd xmm1, xmm3; addsd xmm0, xmm1; ret; 
0x000000000002d2f6: sub al, al; divss xmm1, xmm3; addss xmm0, xmm1; ret; 
0x000000000005b9c2: sub al, bh; ret; 
0x000000000004c9cd: sub al, byte ptr [rax]; syscall; 
0x000000000001cdc6: sub al, cl; add rsp, 0x10; pop rbx; ret; 
0x000000000003031f: sub al, cl; cmp edi, 0x7f7fffff; jbe 0x30336; movss xmm0, dword ptr [rip + 0x65547]; divss xmm0, xmm1; ret; 
0x000000000002fd9f: sub al, cl; cmp rax, 0x7fefffff; jbe 0x2fdb6; movsd xmm0, qword ptr [rip + 0x64d7f]; divsd xmm0, xmm1; ret; 
0x000000000002ef50: sub al, cl; movaps xmm0, xmm1; ret; 
0x000000000001bf76: sub al, cl; movaps xmm0, xmm2; ret; 
0x000000000002ce6a: sub al, cl; movsd xmm0, qword ptr [rip + 0x68174]; pop rdx; subsd xmm0, xmm1; ret; 
0x000000000002d3e2: sub al, cl; movss xmm0, dword ptr [rip + 0x6869c]; pop rdx; subss xmm0, xmm1; ret; 
0x000000000002e51f: sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b232: sub al, cl; subss xmm1, xmm0; xorps xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000001c07e: sub al, cl; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x000000000001bccb: sub al, dl; movsd xmm0, qword ptr [rip + 0x78e53]; pop rdx; subsd xmm0, xmm2; ret; 
0x00000000000247a9: sub bh, bh; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; 
0x00000000000247a9: sub bh, bh; dec dword ptr [rax + 0x63]; call qword ptr [rax + 0x48]; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000024826: sub bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x00000000000247ef: sub bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x110; syscall; 
0x00000000000247da: sub bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x11f; syscall; 
0x0000000000024768: sub bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x132; syscall; 
0x000000000002493e: sub bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xc7; syscall; 
0x000000000002477d: sub bh, bh; lcall [rdx - 0x3d]; push rax; mov eax, 0x63; syscall; 
0x000000000002473e: sub bh, bh; lcall [rdx - 0x3d]; push rax; mov eax, 0xa8; syscall; 
0x0000000000056852: sub bh, dh; call qword ptr [rax + 0x48]; 
0x000000000005b823: sub bl, al; movsxd rdi, edi; push rax; mov eax, 0xe5; syscall; 
0x000000000002472c: sub bl, al; movsxd rsi, esi; push rax; mov eax, 0xa7; syscall; 
0x000000000005df58: sub bl, al; push rax; mov eax, 0x58; syscall; 
0x00000000000245cc: sub bl, al; push rax; mov eax, 0xaa; syscall; 
0x000000000002a5f0: sub bl, cl; mulsd xmm1, xmm4; subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000004d50b: sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004dd11: sub byte ptr [r8 + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004ebcb: sub byte ptr [r8 + r9*4 + 2], r8b; ret; 
0x000000000003ca3b: sub byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0xff; ret; 
0x0000000000042cff: sub byte ptr [rax + 0x29], cl; ret 0x148; 
0x000000000001853f: sub byte ptr [rax + 0x29], cl; ret; 
0x000000000004dd12: sub byte ptr [rax + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000045d40: sub byte ptr [rax + 0x39], cl; ret; 
0x000000000004d496: sub byte ptr [rax + 0x481aeb02], cl; lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005d622: sub byte ptr [rax + 0x51], bh; syscall; 
0x00000000000244a4: sub byte ptr [rax + 0xa9], bh; syscall; 
0x00000000000244a4: sub byte ptr [rax + 0xa9], bh; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x000000000004bfb6: sub byte ptr [rax + 0xe], bh; syscall; 
0x0000000000053805: sub byte ptr [rax + rax], al; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000004ebcc: sub byte ptr [rax + rcx*4 + 2], al; ret; 
0x000000000005c019: sub byte ptr [rax - 0x6af0bcc6], al; ret 0xb60f; 
0x000000000005cd63: sub byte ptr [rax - 0x77], cl; and al, 0x28; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000001fce0: sub byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; ret 0x8948; 
0x000000000005a10f: sub byte ptr [rax - 0x77], cl; ret; 
0x000000000003ca3c: sub byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], 0xff; ret; 
0x0000000000020093: sub byte ptr [rax - 0x7d], cl; mov dword ptr [rax + rcx*2], 0x7540ff83; ret; 
0x000000000005f82e: sub byte ptr [rax - 0x7f], cl; ret 0xfff; 
0x0000000000021282: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2128d; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000022a57: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x22a62; call 0x221f7; add rsp, 0x68; ret; 
0x0000000000022b9b: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x22ba6; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000022ec3: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x22ece; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000231bd: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x231c8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000023500: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2350b; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000235b6: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x235c1; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000002377f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2378a; call 0x221f7; add rsp, 0x38; ret; 
0x00000000000237cd: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x237d8; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000023b11: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x23b1c; call 0x221f7; add rsp, 0x38; ret; 
0x0000000000023da3: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x23dae; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000024308: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x24313; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024382: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2438d; call 0x221f7; add rsp, 0x58; ret; 
0x00000000000245be: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x245c9; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024655: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x24660; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002471e: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x24729; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000024cb6: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x24cc1; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000026f8d: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x26f98; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000273c1: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x273cc; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000027483: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2748e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000002c418: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2c423; call 0x221f7; add rsp, 0x28; ret; 
0x000000000002c5f5: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2c600; call 0x221f7; add rsp, 0x18; ret; 
0x000000000002f560: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x2f56b; call 0x221f7; add rsp, 0x48; ret; 
0x000000000003562f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3563a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000035667: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x35672; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036080: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3608b; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000367c1: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x367cc; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000036bec: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x36bf7; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000036d41: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x36d4c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003801a: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x38025; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003809a: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x380a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003931c: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x39327; call 0x221f7; add rsp, 0x58; ret; 
0x0000000000039cc8: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x39cd3; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003a30b: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3a316; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003a890: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3a89b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000003a908: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3a913; call 0x221f7; add rsp, 0x28; ret; 
0x000000000003b1a2: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3b1ad; call 0x221f7; add rsp, 0x128; ret; 
0x000000000003b44f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3b45a; call 0x221f7; add rsp, 0x58; ret; 
0x000000000003b876: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3b881; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003be1f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3be2a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003c19a: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3c1a5; call 0x221f7; add rsp, 0x18; ret; 
0x000000000003e90e: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3e919; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000040b1b: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x40b26; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004193d: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x41948; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000041b2e: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x41b39; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000041b87: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x41b92; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000422f4: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x422ff; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042368: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x42373; call 0x221f7; add rsp, 0x28; ret; 
0x00000000000423da: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x423e5; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000042e1c: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x42e27; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042e6f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x42e7a; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000042ec0: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x42ecb; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043d38: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x43d43; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000043f41: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x43f4c; call 0x221f7; leave; ret; 
0x0000000000044196: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x441a1; call 0x221f7; leave; ret; 
0x000000000004b631: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4b63c; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004bc00: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4bc0b; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004c41a: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4c425; call 0x221f7; add rsp, 0x148; ret; 
0x000000000004ccd4: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4ccdf; call 0x221f7; add rsp, 0x38; ret; 
0x000000000004d7c2: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4d7cd; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004d978: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4d983; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004da67: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4da72; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004e51f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4e52a; call 0x221f7; add rsp, 0x28; ret; 
0x000000000004eacc: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4ead7; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f140: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4f14b; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f567: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4f572; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004f743: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4f74e; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000004fc90: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4fc9b; call 0x221f7; add rsp, 0x18; ret; 
0x000000000004fe42: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x4fe4d; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000050686: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50691; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050acd: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50ad8; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050c05: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50c10; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050cb6: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50cc1; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050d67: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50d72; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050e13: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50e1e; call 0x221f7; add rsp, 0xd8; ret; 
0x0000000000050ec4: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x50ecf; call 0x221f7; add rsp, 0xd8; ret; 
0x000000000005141b: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x51426; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000052def: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x52dfa; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054403: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5440e; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000054f4d: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x54f58; call 0x221f7; add rsp, 0x118; ret; 
0x0000000000055041: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5504c; call 0x221f7; add rsp, 0xf8; ret; 
0x0000000000055321: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5532c; call 0x221f7; add rsp, 0x1f8; ret; 
0x00000000000553fb: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x55406; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000554b1: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x554bc; call 0x221f7; add rsp, 0xd8; ret; 
0x00000000000568a7: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x568b2; call 0x221f7; add rsp, 0x18; ret; 
0x00000000000591f6: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x59201; call 0x221f7; add rsp, 0x18; ret; 
0x0000000000059286: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x59291; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005b67e: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5b689; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005cf8d: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5cf98; call 0x221f7; add rsp, 0x38; ret; 
0x000000000005d2ab: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5d2b6; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005dccb: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5dcd6; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005dd2f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5dd3a; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005def1: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5defc; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005df4a: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5df55; call 0x221f7; add rsp, 0x28; ret; 
0x000000000005dfc5: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5dfd0; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e006: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5e011; call 0x221f7; add rsp, 0x18; ret; 
0x000000000005e190: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5e19b; call 0x221f7; add rsp, 0x58; ret; 
0x000000000005e212: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x5e21d; call 0x221f7; add rsp, 0x28; ret; 
0x0000000000018abf: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x18af1; add rsp, 0x38; ret; 
0x0000000000024053: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x000000000003911a: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005d61a: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000443b1: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8ca: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d699: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000005a570: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000005d3ea: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x00000000000244f4: sub byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000001bbc7: sub byte ptr [rbx + 0x41], bl; pop rsi; ret; 
0x00000000000513ab: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000026d71: sub byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000054e7c: sub byte ptr [rcx + rcx*4 - 0x18], cl; pop r12; pop r13; pop r14; ret; 
0x0000000000056bc2: sub byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000004c14c: sub byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000056574: sub byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000001f773: sub byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000057192: sub byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005cd68: sub byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000003a117: sub byte ptr [rcx - 0x73], cl; push rbp; add eax, ebp; ret; 
0x000000000003d394: sub byte ptr [rcx - 0x77], cl; insd dword ptr [rdi], dx; add al, ch; ret 0xfdaf; 
0x000000000003b1b0: sub byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000039c5a: sub byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5b], 0x5d; ret; 
0x0000000000023444: sub byte ptr [rdi + rdi*8], bl; call qword ptr [rbp - 0x77]; 
0x000000000004f250: sub byte ptr [rdi], cl; xchg eax, ebp; ret 0xc2ff; 
0x000000000001b221: sub byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000004d50c: sub byte ptr [rdx + rcx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000003d976: sub byte ptr [rdx], al; add byte ptr [rax], al; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000000599ee: sub byte ptr [rip + 0x3b05c], cl; andps xmm0, xmm1; movq qword ptr [rdx], xmm0; ret; 
0x000000000001a5b2: sub ch, al; ret; 
0x0000000000046980: sub ch, dh; add al, 0; mov eax, eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000033ab8: sub cl, al; add rsp, 0x18; ret; 
0x00000000000334f0: sub cl, al; addsd xmm0, xmm7; ret; 
0x0000000000033669: sub cl, al; addss xmm0, xmm4; ret; 
0x000000000003336f: sub cl, al; divsd xmm0, xmm2; ret; 
0x0000000000033523: sub cl, al; divss xmm0, xmm2; ret; 
0x0000000000033ab5: sub cl, al; movaps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000033a65: sub cl, al; movaps xmm0, xmm1; ret; 
0x0000000000033cd6: sub cl, al; movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002ce99: sub cl, al; mulsd xmm0, xmm1; ret; 
0x000000000002d411: sub cl, al; mulss xmm0, xmm1; ret; 
0x000000000002b455: sub cl, al; pop rbx; ret; 
0x000000000001cf58: sub cl, al; ret; 
0x000000000002b010: sub cl, bl; in eax, dx; faddp st(1); ret; 
0x000000000001bf73: sub cl, dl; movaps xmm1, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001c07b: sub cl, dl; movaps xmm1, xmm0; xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000060872: sub dh, byte ptr [rcx + 0x5d5a0003]; pop r12; jmp rax; 
0x0000000000035cd3: sub dl, al; add rsp, 0x18; ret; 
0x000000000001e293: sub dl, al; add rsp, 0x20; pop rbx; ret; 
0x0000000000037e78: sub dl, al; pop rbp; pop r12; ret; 
0x0000000000036886: sub dl, al; pop rbx; ret; 
0x000000000001bf79: sub dl, al; ret; 
0x000000000001ddb3: sub dl, cl; add rsp, 0x20; pop rbx; ret; 
0x000000000001bd77: sub dl, cl; pop rbx; ret; 
0x0000000000041991: sub dword ptr [rax], eax; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x0000000000041964: sub dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000022c1d: sub dword ptr [rcx], eax; add byte ptr [rax], al; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000002ace3: sub dword ptr [rcx], eax; add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x6ad69]; addss xmm0, dword ptr [rip + 0x6ad5d]; ret; 
0x000000000005d653: sub dword ptr [rdx + 0x50b8fffb], ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x0000000000027b0d: sub eax, 0x10; ret; 
0x00000000000547aa: sub eax, 0x2444ff48; and bl, ch; ret 0x8b48; 
0x00000000000309e7: sub eax, 0x280f0006; ret 0xff2; 
0x00000000000191e4: sub eax, 0x30; cmp eax, 9; jbe 0x191d0; mov eax, 1; ret; 
0x0000000000019223: sub eax, 0x30; lea edx, [rcx - 0x30]; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000002e85c: sub eax, 0x40800000; movd xmm0, eax; ret; 
0x000000000001780a: sub eax, 0x480003ec; add esp, 8; ret; 
0x000000000005d636: sub eax, 0x48b8; add byte ptr [rsi + 1], bh; syscall; 
0x000000000004d4c6: sub eax, 0x48fffd4d; add esp, 0x10; pop rbx; ret; 
0x000000000005329e: sub eax, 0x63480004; add al, 0x81; add rax, rcx; jmp rax; 
0x000000000002a6c9: sub eax, 0x693a2; fmulp st(1); fsubp st(1); fsubp st(1); ret; 
0x000000000002a6a8: sub eax, 0x693b3; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x0000000000022bd5: sub eax, 0x89000001; ret 0x2b8; 
0x000000000001af87: sub eax, 0x8900080e; ret 0xc189; 
0x0000000000022307: sub eax, 0x8948ffff; ret; 
0x0000000000024511: sub eax, 0xc35affff; mov edi, edi; push rax; mov eax, 0x7a; syscall; 
0x0000000000024480: sub eax, 0xc35affff; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000032b1f: sub eax, 0xde00061a; ret 0x6cdb; 
0x0000000000032d2c: sub eax, 0xf25a0000; cvttps2pi mm0, xmm0; ret; 
0x0000000000032d39: sub eax, 0xf35a0000; cvttps2pi mm0, xmm0; ret; 
0x00000000000450e7: sub eax, 0xff480975; ret; 
0x00000000000244ff: sub eax, 0xff89ffff; push rax; mov eax, 0x7b; syscall; 
0x0000000000019001: sub eax, 1; pop rbp; ret; 
0x0000000000018ff9: sub eax, 2; pop rbp; ret; 
0x0000000000043aa7: sub eax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000002323d: sub eax, dword ptr [0]; pop rdx; ret; 
0x000000000001e5ef: sub eax, dword ptr [rax]; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000043d87: sub eax, dword ptr [rcx]; add byte ptr [rax + 0x39], bh; syscall; 
0x000000000003f22f: sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000004dae5: sub eax, dword ptr [rdi + 0x38]; ret; 
0x000000000004db23: sub eax, dword ptr [rdi + 8]; ret; 
0x000000000004635c: sub eax, dword ptr [rdx]; ret; 
0x0000000000032d04: sub eax, dword ptr [rsi]; add dh, bl; ret 0xc9d9; 
0x00000000000187a2: sub eax, eax; pop r12; pop r13; ret; 
0x0000000000017a2b: sub eax, eax; ret; 
0x0000000000044c43: sub eax, ebp; mov dword ptr [rbx], 0x8948fffd; ret; 
0x0000000000016e69: sub eax, ebp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001967b: sub eax, ebp; pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x0000000000044ad9: sub eax, ebp; xor dword ptr [rip - 0x76b70003], eax; ret; 
0x0000000000056e92: sub eax, ecx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000001834f: sub eax, ecx; ret; 
0x00000000000186ae: sub eax, edi; ret; 
0x00000000000196fc: sub eax, edi; sar rax, 2; ret; 
0x00000000000195d1: sub eax, edx; mov eax, r8d; ret; 
0x00000000000390d4: sub eax, edx; pop rdx; ret; 
0x000000000001922f: sub eax, edx; ret; 
0x000000000004b95b: sub eax, r10d; ret; 
0x00000000000187a1: sub eax, r8d; pop r12; pop r13; ret; 
0x0000000000017a2a: sub eax, r8d; ret; 
0x000000000006060d: sub ebx, 8; call qword ptr [rbx]; 
0x00000000000611b3: sub ebx, 8; mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x0000000000026f35: sub ebx, dword ptr [rdx + 0x5b]; pop rbp; pop r12; pop r13; ret; 
0x00000000000599cf: sub ecx, dword ptr [rax + 0x63]; inc dword ptr [rcx - 0x46]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x0000000000048a4d: sub ecx, dword ptr [rax - 1]; ret; 
0x0000000000045d90: sub ecx, dword ptr [rbx - 0x1076b3d0]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000004884a: sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000001714d: sub ecx, eax; add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000002f280: sub ecx, edx; shr eax, cl; and edi, 0x80000000; or edi, eax; movd xmm0, edi; ret; 
0x0000000000021492: sub edi, 0x20; xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x0000000000021470: sub edi, 0x21; xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x0000000000021403: sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x00000000000214dd: sub edi, 0x41; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000021419: sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000021792: sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000021481: sub edi, 0x61; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000021a54: sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x000000000002157d: sub edi, 0xfff9; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000060607: sub edi, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x00000000000248d1: sub edi, edi; dec dword ptr [rcx - 0x77]; retf 0x4d50; movsxd rax, eax; mov eax, 0xbc; syscall; 
0x0000000000024866: sub edi, edi; lcall [rdx - 0x3d]; mov r10, rcx; mov eax, 0xbf; syscall; 
0x000000000002491a: sub edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0xc5; syscall; 
0x000000000002492c: sub edi, edi; lcall [rdx - 0x3d]; push rax; mov eax, 0xc6; syscall; 
0x000000000005b9bd: sub edi, esi; cvtsi2sd xmm0, rdi; ret; 
0x0000000000055786: sub edi, esp; push rdi; fdivr dword ptr [rcx]; ret; 
0x0000000000047bef: sub edx, 0x30; cmp edx, 9; ja 0x47bff; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x0000000000019de5: sub edx, 1; je 0x19df8; cmp dword ptr [rdi], esi; jne 0x19de0; mov rax, rdi; ret; 
0x0000000000018abc: sub edx, dword ptr [0x28]; jne 0x18af1; add rsp, 0x38; ret; 
0x000000000004db35: sub edx, eax; mov qword ptr [rsi], rdx; ret; 
0x000000000004f27f: sub edx, ecx; add rax, rdx; pop rbx; ret; 
0x00000000000343c1: sub edx, ecx; test rax, rdi; mov eax, 0; cmove eax, edx; ret; 
0x000000000005e75f: sub edx, esi; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000003b583: sub esi, 0xd7c0; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000001a037: sub esi, 1; jae 0x1a030; ret; 
0x000000000005a50d: sub esi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000004dd43: sub esi, eax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004d527: sub esi, eax; mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x00000000000568f1: sub esi, edi; call qword ptr [rax - 0x18]; 
0x000000000003aee8: sub esi, edi; syscall; 
0x00000000000596af: sub esp, -0x80; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004ce8a: sub esp, -0x80; pop rbx; ret; 
0x0000000000017801: sub esp, 8; mov rdx, rsi; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x0000000000060606: sub r15, 1; jb 0x605df; sub rbx, 8; call qword ptr [rbx]; 
0x00000000000195d0: sub r8d, edx; mov eax, r8d; ret; 
0x0000000000027b0c: sub rax, 0x10; ret; 
0x0000000000019000: sub rax, 1; pop rbp; ret; 
0x0000000000018ff8: sub rax, 2; pop rbp; ret; 
0x0000000000043aa6: sub rax, 4; orps xmm0, xmm1; movd dword ptr [rax], xmm0; ret; 
0x000000000002323c: sub rax, qword ptr [0]; pop rdx; ret; 
0x000000000004dae4: sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004db22: sub rax, qword ptr [rdi + 8]; ret; 
0x000000000002323b: sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000016e68: sub rax, r13; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001967a: sub rax, rbp; pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x0000000000056e91: sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x00000000000186ad: sub rax, rdi; ret; 
0x00000000000196fb: sub rax, rdi; sar rax, 2; ret; 
0x0000000000028ebf: sub rax, rdx; ret; 
0x000000000006060c: sub rbx, 8; call qword ptr [rbx]; 
0x00000000000611b2: sub rbx, 8; mov dword ptr [rax], 0; mov rax, qword ptr [rsp + 0x98]; mov rsp, rbx; jmp rax; 
0x000000000001714c: sub rcx, rax; add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005b9bc: sub rdi, rsi; cvtsi2sd xmm0, rdi; ret; 
0x0000000000019de4: sub rdx, 1; je 0x19df8; cmp dword ptr [rdi], esi; jne 0x19de0; mov rax, rdi; ret; 
0x0000000000018abb: sub rdx, qword ptr [0x28]; jne 0x18af1; add rsp, 0x38; ret; 
0x0000000000018aba: sub rdx, qword ptr fs:[0x28]; jne 0x18af1; add rsp, 0x38; ret; 
0x000000000004db34: sub rdx, rax; mov qword ptr [rsi], rdx; ret; 
0x000000000004f27e: sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x00000000000343c0: sub rdx, rcx; test rax, rdi; mov eax, 0; cmove eax, edx; ret; 
0x000000000005e75e: sub rdx, rsi; mov qword ptr [rax + 0x88], r9; mov qword ptr [rax + 0x90], rdx; ret; 
0x000000000001a036: sub rsi, 1; jae 0x1a030; ret; 
0x000000000005a50c: sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000004dd42: sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004d526: sub rsi, rax; mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x000000000003aee7: sub rsi, rdi; syscall; 
0x00000000000596ae: sub rsp, -0x80; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004ce89: sub rsp, -0x80; pop rbx; ret; 
0x0000000000017800: sub rsp, 8; mov rdx, rsi; xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x000000000002956c: subps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000029575: subps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003303f: subps xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000003320b: subps xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002e3a1: subps xmm0, xmm1; addsd xmm0, xmm0; addsd xmm0, xmm5; ret; 
0x000000000002e411: subps xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e5ef: subps xmm0, xmm1; addss xmm0, xmm0; addss xmm0, xmm4; ret; 
0x000000000002e652: subps xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002e36c: subps xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002e5bc: subps xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000002a5ff: subps xmm0, xmm1; ret; 
0x00000000000309a7: subps xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x6438e]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000030f35: subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x64d1c]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000001bcd7: subps xmm0, xmm2; ret; 
0x0000000000029310: subps xmm0, xmm4; addsd xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e374: subps xmm0, xmm4; ret; 
0x000000000002e3e6: subps xmm0, xmm5; ret; 
0x00000000000439ac: subps xmm0, xmmword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002feb9: subps xmm0, xmmword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x0000000000030436: subps xmm0, xmmword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x000000000002e7f5: subps xmm0, xmmword ptr [rip + 0x66334]; ret; 
0x000000000002b235: subps xmm1, xmm0; xorps xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000033cd2: subps xmm1, xmm2; movaps xmm0, xmm1; movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002e34e: subps xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x00000000000334e8: subps xmm1, xmm3; addsd xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x000000000002e59e: subps xmm1, xmm3; subss xmm0, xmm1; ret; 
0x000000000002e398: subps xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x0000000000033661: subps xmm1, xmm5; addss xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000002e5df: subps xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x000000000002a5f7: subps xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000002a5fb: subps xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x0000000000033d48: subps xmm2, xmm1; movss dword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000002a5c3: subps xmm2, xmmword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002935c: subps xmm2, xmmword ptr [rip + 0x6b93d]; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab60: subps xmm4, xmm0; xorps xmm0, xmm0; divsd xmm0, xmm4; ret; 
0x000000000002a823: subps xmm4, xmm3; movaps xmm0, xmm4; test edx, edx; je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x00000000000439ab: subsd xmm0, qword ptr [rip + 0x5117d]; pop rdx; ret; 
0x000000000002feb8: subsd xmm0, qword ptr [rip + 0x65560]; add rsp, 0x28; ret; 
0x000000000002e7f4: subsd xmm0, qword ptr [rip + 0x66334]; ret; 
0x000000000002956b: subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000003303e: subsd xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000002e3a0: subsd xmm0, xmm1; addsd xmm0, xmm0; addsd xmm0, xmm5; ret; 
0x000000000002e410: subsd xmm0, xmm1; addsd xmm0, xmm5; mulsd xmm0, xmm2; ret; 
0x000000000002e36b: subsd xmm0, xmm1; mulsd xmm0, xmm4; subsd xmm0, xmm4; ret; 
0x000000000002a5fe: subsd xmm0, xmm1; ret; 
0x00000000000309a6: subsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x6438e]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001bcd6: subsd xmm0, xmm2; ret; 
0x000000000002930f: subsd xmm0, xmm4; addsd xmm0, xmm5; addsd xmm0, xmm6; ret; 
0x000000000002e373: subsd xmm0, xmm4; ret; 
0x000000000002e3e5: subsd xmm0, xmm5; ret; 
0x0000000000033cd1: subsd xmm1, xmm2; movaps xmm0, xmm1; movq xmm1, rax; movsd qword ptr [rsi], xmm1; ret; 
0x000000000002e34d: subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x00000000000334e7: subsd xmm1, xmm3; addsd xmm1, xmm0; movaps xmm0, xmm1; addsd xmm0, xmm7; ret; 
0x000000000002e397: subsd xmm1, xmm4; mulsd xmm0, xmm1; ret; 
0x000000000002a5f6: subsd xmm1, xmm5; subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000002a5fa: subsd xmm1, xmm6; subsd xmm0, xmm1; ret; 
0x000000000002a5c2: subsd xmm2, qword ptr [rip + 0x6a836]; mulsd xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x000000000002935b: subsd xmm2, qword ptr [rip + 0x6b93d]; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ab5f: subsd xmm4, xmm0; xorps xmm0, xmm0; divsd xmm0, xmm4; ret; 
0x000000000002a822: subsd xmm4, xmm3; movaps xmm0, xmm4; test edx, edx; je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x0000000000030435: subss xmm0, dword ptr [rip + 0x6580b]; add rsp, 0x18; ret; 
0x0000000000029574: subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003320a: subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002e5ee: subss xmm0, xmm1; addss xmm0, xmm0; addss xmm0, xmm4; ret; 
0x000000000002e651: subss xmm0, xmm1; addss xmm0, xmm4; mulss xmm0, xmm2; ret; 
0x000000000002e5bb: subss xmm0, xmm1; mulss xmm0, xmm5; subss xmm0, xmm5; ret; 
0x000000000002d3ed: subss xmm0, xmm1; ret; 
0x0000000000030f34: subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x64d1c]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002e62b: subss xmm0, xmm4; ret; 
0x000000000002e5c3: subss xmm0, xmm5; ret; 
0x000000000002b234: subss xmm1, xmm0; xorps xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000002e59d: subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x0000000000033660: subss xmm1, xmm5; addss xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm4; ret; 
0x000000000002e5de: subss xmm1, xmm5; mulss xmm1, dword ptr [rip + 0x67292]; movaps xmm0, xmm1; ret; 
0x0000000000033d47: subss xmm2, xmm1; movss dword ptr [rdi], xmm0; movaps xmm0, xmm2; ret; 
0x000000000001b22f: syscall; 
0x00000000000246c1: syscall; call 0x17230; pop rdx; ret; 
0x0000000000057dd2: syscall; cmp rax, -0x26; jne 0x57ddf; mov rax, r8; syscall; ret; 
0x000000000005a525: syscall; hlt; ret; 
0x000000000002456c: syscall; mov dword ptr [rbx + 0x10], ebp; pop rax; pop rbx; pop rbp; ret; 
0x000000000004f8b8: syscall; mov eax, r8d; pop rbp; ret; 
0x000000000004c74c: syscall; mov eax, r8d; ret; 
0x0000000000023e4c: syscall; mov ecx, eax; movsxd rdi, ecx; call 0x17230; pop rdx; ret; 
0x0000000000023e7f: syscall; mov edx, eax; movsxd rdi, edx; call 0x17230; pop rdx; ret; 
0x00000000000580bc: syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000022de9: syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000022dd1: syscall; movsxd rdi, eax; call 0x17230; pop rdx; ret; 
0x00000000000419d9: syscall; movsxd rdi, r9d; call 0x17230; pop rbx; ret; 
0x000000000005d3d2: syscall; movsxd rdi, r9d; call 0x17230; pop rdx; ret; 
0x000000000003a1a9: syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000022bb6: syscall; neg eax; ret; 
0x0000000000057e2c: syscall; pop rax; ret; 
0x000000000004eb6e: syscall; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000004de10: syscall; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000241b2: syscall; ret; 
0x00000000000576e7: syscall; xor eax, eax; ret; 
0x0000000000023e1d: sysenter; 
0x0000000000037fdf: test ah, 4; jne 0x37fd3; ret; 
0x00000000000380ba: test ah, 4; jne 0x380ae; ret; 
0x00000000000275af: test al, 0; add byte ptr [rax], al; cmp rax, rdx; jne 0x275bc; or rax, 0xffffffffffffffff; ret; 
0x0000000000021b61: test al, 0; add byte ptr [rax], al; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000004c2fb: test al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x0000000000057495: test al, 0; add byte ptr [rax], al; ret; 
0x0000000000024745: test al, 0; add byte ptr [rax], al; syscall; 
0x0000000000057671: test al, 0; add byte ptr [rax], al; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000052644: test al, 0x39; add al, 0; movsxd rax, dword ptr [rdx + r11*4]; add rax, rdx; jmp rax; 
0x000000000002af60: test al, 0x8b; add byte ptr [rax], al; call 0x33b0c; addss xmm0, dword ptr [rip + 0x6aaf3]; add rsp, 0x18; ret; 
0x000000000001a66d: test al, 0xd9; ret; 
0x000000000002a5c7: test al, 6; add dl, dh; mulps xmm2, xmm6; addsd xmm0, xmm2; ret; 
0x00000000000186a4: test al, 7; je 0x186b8; cmp byte ptr [rax], 0; jne 0x186a0; sub rax, rdi; ret; 
0x000000000004d84b: test al, 8; je 0x4d858; or eax, 0x20; mov dword ptr [rdi], eax; or eax, 0xffffffff; ret; 
0x0000000000018305: test al, al; jne 0x182f8; mov rax, r12; pop r12; ret; 
0x000000000005e402: test al, al; jne 0x5e3f3; sub eax, edx; ret; 
0x0000000000019538: test al, ch; movabs byte ptr [0x4c08c48348000000], al; mov eax, esp; pop rbp; pop r12; ret; 
0x00000000000379fb: test ax, ax; fld1; js 0x37a07; fscale; fstp st(1); ret; 
0x000000000003b51a: test bh, 0x80; jne 0x3b524; movzx eax, dil; ret; 
0x0000000000018f91: test bh, bh; je 0x18f60; cmp dx, r8w; jne 0x18f80; pop rbp; ret; 
0x0000000000018f5a: test bh, bh; jne 0x18f40; nop; xor eax, eax; pop rbp; ret; 
0x000000000002b624: test bx, bx; je 0x2b62b; fchs; add rsp, 0x40; pop rbx; ret; 
0x000000000002be6f: test bx, bx; je 0x2be76; fchs; add rsp, 0x30; pop rbx; ret; 
0x000000000002d879: test bx, bx; je 0x2d880; fchs; add rsp, 0x10; pop rbx; ret; 
0x0000000000036f9c: test bx, bx; jns 0x36fa3; fchs; add rsp, 0x10; pop rbx; ret; 
0x00000000000220bb: test byte ptr [r8 + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x00000000000266f8: test byte ptr [rax + 0x48000000], al; lea eax, [rdx + 0x10]; ret; 
0x0000000000022eea: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x000000000003a182: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x8d; syscall; 
0x000000000005d35b: test byte ptr [rax + 0x63], 0xf8; call 0x17230; pop rdx; ret; 
0x0000000000023ed5: test byte ptr [rax + 0x63], 0xff; mov eax, 0x11d; syscall; 
0x00000000000247ca: test byte ptr [rax + 0x63], 0xff; mov eax, 0x11e; syscall; 
0x0000000000024398: test byte ptr [rax + 0x63], 0xff; mov eax, 0x12e; syscall; 
0x00000000000244ef: test byte ptr [rax + 0x63], 0xff; mov eax, 0x28; syscall; 
0x0000000000022ea6: test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x0000000000023e0e: test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x0000000000024796: test byte ptr [rax + 0x63], 0xff; mov r10d, ecx; mov eax, 0x114; syscall; 
0x00000000000418c3: test byte ptr [rax + 0x63], 0xff; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000003e467: test byte ptr [rax + 0x63], 0xff; xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000001e7ac: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x0000000000048b13: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000005a576: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x00000000000527e3: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8545; 
0x00000000000220bc: test byte ptr [rax + rbx*8 + 6], 0x20; je 0x220ce; mov rax, rdx; syscall; 
0x0000000000024059: test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000055f5c: test byte ptr [rax + rcx*8], ah; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000039cfa: test byte ptr [rax - 0x73], 0x54; and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000004d3e5: test byte ptr [rax - 0x77], 0xd8; syscall; 
0x000000000004f1ac: test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000004f257: test byte ptr [rax - 0x77], 0xdf; call rax; 
0x00000000000572da: test byte ptr [rax - 0x77], 0xe8; mov rdx, r12; syscall; 
0x000000000004d512: test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000004b2c1: test byte ptr [rax - 0x77], 0xef; call rax; 
0x000000000005b8d0: test byte ptr [rax - 0x77], 0xef; syscall; 
0x000000000001979a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000000490c0: test byte ptr [rax], al; add eax, 0x89480000; ret 0x894c; 
0x00000000000446c8: test byte ptr [rbp], 1; je 0x44708; mov eax, 0x68; syscall; 
0x0000000000048844: test byte ptr [rbx + 0x3c000001], cl; sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000002e0e8: test byte ptr [rbx + 0x3d000000], ch; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000004aff9: test byte ptr [rcx + rcx*4 - 0x19], 0xe8; cmp dword ptr [rax + rax - 0x1f76b400], esi; pop r12; ret; 
0x0000000000055a07: test byte ptr [rcx + rcx*4 - 1], 0x41; call rsp; 
0x000000000003f088: test byte ptr [rcx - 0x76b70003], dl; ret; 
0x000000000002f71e: test byte ptr [rcx - 0x77000000], ch; ret 0xf229; 
0x000000000004e86d: test byte ptr [rcx - 1], 0x55; adc byte ptr [rax - 0x77], cl; ret; 
0x000000000005bad9: test byte ptr [rdi + rdi*8], ah; dec dword ptr [rax - 0x77]; ret; 
0x0000000000016d87: test byte ptr [rdi], 0x83; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000016db7: test byte ptr [rdi], 0x83; ret 0; 
0x00000000000173cf: test byte ptr [rdi], 0x94; ret 0xd008; 
0x000000000002406f: test byte ptr [rdi], 0x94; ret 0xd184; 
0x000000000003c5f7: test byte ptr [rdi], 0x95; ret 0xd184; 
0x000000000004da89: test byte ptr [rdi], 4; jne 0x4da98; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x00000000000241b1: test byte ptr [rdi], 5; ret; 
0x000000000004da9e: test byte ptr [rdi], 8; jne 0x4daad; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000002e01b: test byte ptr [rdx + 0x3d000000], ah; test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x0000000000026e3f: test byte ptr [rdx + 0x63], 4; mov dl, 0x48; add eax, edx; jmp rax; 
0x0000000000021e97: test byte ptr [rdx + 7], bh; add byte ptr [rcx], al; mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x7a141]; syscall; 
0x000000000003aaed: test byte ptr [rdx + rax - 0xb80000], al; ret 0x30e9; 
0x0000000000051ca5: test byte ptr [rdx], 0xff; ret 0xf4eb; 
0x0000000000017b71: test byte ptr [rdx], bh; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000035139: test byte ptr [rip + 0x24148900], 0xd9; ret; 
0x0000000000043a2f: test byte ptr [rip - 0x3f00b800], al; mov qword ptr [rip + 0x5849c], rax; shr rax, 0x21; ret; 
0x0000000000035a05: test byte ptr [rip - 0x3f7ab800], 0x75; add ecx, dword ptr [rdi]; sub cl, al; ret; 
0x000000000004595d: test byte ptr [rsi - 0xa000000], bh; ret; 
0x000000000001f512: test byte ptr [rsp + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rsi - 0x76], bl; add eax, dword ptr [rax + rax*8 - 0xb7ef8c]; ret 0xff48; 
0x000000000001ec43: test byte ptr [rsp + rsi*4], bl; adc byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000047cc3: test cl, ch; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x0000000000017f9e: test cl, cl; jne 0x17f90; ret; 
0x0000000000018893: test dh, al; jne 0x18868; sub eax, edi; ret; 
0x0000000000018ebb: test dh, dh; jne 0x18ec8; pop rbp; ret; 
0x000000000003b519: test dil, 0x80; jne 0x3b524; movzx eax, dil; ret; 
0x0000000000018f90: test dil, dil; je 0x18f60; cmp dx, r8w; jne 0x18f80; pop rbp; ret; 
0x0000000000018f59: test dil, dil; jne 0x18f40; nop; xor eax, eax; pop rbp; ret; 
0x0000000000019843: test dl, cl; jne 0x19820; sub eax, r8d; ret; 
0x0000000000018349: test dl, dl; jne 0x18338; xor eax, eax; sub eax, ecx; ret; 
0x000000000002e519: test dword ptr [rax + 1], ecx; add byte ptr [rax], al; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002e2a8: test dword ptr [rax + 1], edi; add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000019a73: test dword ptr [rax - 0x73], 0x39481104; ret; 
0x000000000005d4b3: test dword ptr [rax - 0x77], 0xea894cde; syscall; 
0x000000000004cd53: test dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000003f969: test dword ptr [rbp + rax], esp; add dh, dh; ret; 
0x000000000004cae9: test dword ptr [rbx - 0x48000000], edx; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; syscall; 
0x0000000000060527: test dword ptr [rcx + 0x58fffffe], esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001b3cf: test dword ptr [rcx + rcx*4 - 0x3a], 0xfffc20e9; call qword ptr [rax - 0x18]; 
0x000000000002c98f: test dword ptr [rdi + 0xff20006], eax; pop rcx; retf 0xff2; pop rcx; ret 0xff2; 
0x000000000004f56e: test dword ptr [rdi*8 - 0x3b7eb701], ebp; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000050d6e: test dword ptr [rdi*8 - 0x3b7eb701], edx; fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000002e021: test dword ptr [rdi], 0x5760000; addss xmm0, xmm0; ret; 
0x000000000004cae7: test dword ptr [rdi], 0x9385; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x000000000002d09f: test dword ptr [rdx + 0xff30006], ecx; pop rcx; ret 0xff3; 
0x00000000000183b4: test dword ptr [rsi + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000033393: test dword ptr [rsi + 1], ebx; add byte ptr [rax], al; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000261fe: test dword ptr [rsi], 0xc0b60f00; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000002cd43: test dword ptr [rsi], eax; add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x66a0f; pop rbx; ret; 
0x000000000004f74a: test eax, 0x48fffd2a; add esp, 0xd8; ret; 
0x0000000000020d43: test eax, 0x5c415d5b; ret; 
0x000000000002f71f: test eax, 0x89000000; ret 0xf229; 
0x000000000002e3db: test eax, 0xeb000667; add al, 0xf2; mulps xmm0, xmm2; subsd xmm0, xmm5; ret; 
0x0000000000027aff: test eax, 0xfffff000; je 0x27b11; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027f77: test eax, 0xfffff000; je 0x27f89; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000059478: test eax, 0xfffffffb; je 0x59430; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000594ee: test eax, 0xfffffffb; je 0x594b6; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000059a44: test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000379fc: test eax, eax; fld1; js 0x37a07; fscale; fstp st(1); ret; 
0x000000000001776b: test eax, eax; je 0x17780; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000001b88f: test eax, eax; je 0x1b8a0; cmp eax, 2; jne 0x1b8eb; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x00000000000267b4: test eax, eax; je 0x2679c; pop rbx; ret; 
0x000000000003185e: test eax, eax; je 0x3186a; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003825e: test eax, eax; je 0x38268; bsf rax, rax; inc eax; ret; 
0x000000000003b336: test eax, eax; je 0x3b351; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000040817: test eax, eax; je 0x40820; cmp dword ptr [rax + 0x10], ebx; jne 0x40811; pop rbx; ret; 
0x000000000004726a: test eax, eax; je 0x4727c; mov qword ptr [rax], -1; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x000000000004b2ba: test eax, eax; je 0x4b2d0; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000004b667: test eax, eax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004d5c8: test eax, eax; je 0x4d5d9; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000004e8c3: test eax, eax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004f369: test eax, eax; je 0x4f374; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000056d85: test eax, eax; je 0x56d8b; call rax; 
0x0000000000056da7: test eax, eax; je 0x56dad; call rax; 
0x0000000000057d99: test eax, eax; je 0x57da6; dec eax; mov dword ptr [rip + 0x442d7], eax; ret; 
0x000000000005808a: test eax, eax; je 0x580a6; mov eax, 0xda; mov rdi, rbp; syscall; 
0x0000000000058b15: test eax, eax; je 0x58b2a; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000058fc1: test eax, eax; je 0x58fd1; mov dword ptr [rdx + 0x14], 0; mov eax, 0x82; pop rbx; ret; 
0x000000000005a5ad: test eax, eax; je 0x5a5c0; mov eax, 3; mov rdi, rbp; syscall; 
0x000000000005b894: test eax, eax; je 0x5b8aa; call rax; 
0x000000000005d409: test eax, eax; je 0x5d41b; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000005f35a: test eax, eax; je 0x5f368; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005f497: test eax, eax; je 0x5f4a3; add rcx, qword ptr [rsp]; mov qword ptr [r8 + 0x58], rcx; add rsp, 0x100; ret; 
0x000000000006061a: test eax, eax; je 0x60628; add rax, qword ptr [r14]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000003d9a2: test eax, eax; jg 0x3d9a9; mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x0000000000017909: test eax, eax; jne 0x178e8; xor eax, eax; pop rbx; ret; 
0x000000000001956a: test eax, eax; jne 0x19560; xor eax, eax; pop rbx; ret; 
0x00000000000195be: test eax, eax; jne 0x195a8; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x0000000000021b95: test eax, eax; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000023e43: test eax, eax; jne 0x23e50; mov eax, 0xe8; syscall; 
0x00000000000274f1: test eax, eax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000027566: test eax, eax; jne 0x27538; pop rdx; pop rbx; pop rbp; ret; 
0x000000000002e345: test eax, eax; jne 0x2e356; mulsd xmm1, xmm0; subsd xmm1, xmm2; subsd xmm0, xmm1; ret; 
0x000000000002e595: test eax, eax; jne 0x2e5a6; mulss xmm1, xmm0; subss xmm1, xmm3; subss xmm0, xmm1; ret; 
0x000000000002e44f: test eax, eax; jne 0x2e65e; comiss xmm0, xmmword ptr [rip + 0x6774e]; jbe 0x2e4b0; mulss xmm0, dword ptr [rip + 0x67424]; ret; 
0x0000000000035a09: test eax, eax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x0000000000035a58: test eax, eax; jne 0x35a5f; movaps xmm0, xmm1; ret; 
0x000000000003b562: test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x0000000000041323: test eax, eax; jne 0x4132a; or eax, 0xffffffff; add rsp, 0x28; ret; 
0x0000000000043d94: test eax, eax; jne 0x43dee; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x00000000000446e3: test eax, eax; jne 0x448bb; mov eax, 0x66; syscall; 
0x000000000004d3b3: test eax, eax; jne 0x4d3bf; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000004e762: test eax, eax; jne 0x4e770; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000050419: test eax, eax; jne 0x5043b; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x0000000000051082: test eax, eax; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000056cf8: test eax, eax; jne 0x56ce5; ret; 
0x0000000000056fec: test eax, eax; jne 0x56ff9; call 0x5a45b; xor eax, eax; pop rbx; ret; 
0x0000000000057834: test eax, eax; jne 0x57815; pop rax; pop rbx; pop rbp; ret; 
0x0000000000058bfd: test eax, eax; jne 0x58bec; ret; 
0x0000000000059a1b: test eax, eax; jne 0x59a13; ret; 
0x000000000002fd92: test eax, eax; jns 0x2fd9e; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000030888: test eax, eax; jns 0x30894; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000033206: test eax, eax; jns 0x33216; subss xmm0, xmm0; xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x0000000000057774: test eax, eax; jns 0x5777f; mov qword ptr [rdx], -1; xor eax, eax; ret; 
0x0000000000057d35: test eax, eax; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x00000000000229e7: test eax, eax; js 0x229f5; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000044764: test eax, eax; js 0x448bb; mov rax, r9; syscall; 
0x0000000000051062: test eax, eax; js 0x51092; mov eax, 0x57; mov rdi, r12; syscall; 
0x000000000005daa9: test eax, eax; mov eax, 0xffffffff; cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x000000000002ce7f: test eax, eax; movsd xmm1, qword ptr [rip + 0x683ff]; je 0x2ce98; movsd xmm0, qword ptr [rip + 0x68155]; subsd xmm0, xmm1; ret; 
0x000000000002d3f7: test eax, eax; movss xmm1, dword ptr [rip + 0x68657]; je 0x2d410; movss xmm0, dword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x00000000000214b2: test eax, eax; sete al; movzx eax, al; ret; 
0x000000000005a426: test eax, eax; setne al; movzx eax, al; add eax, eax; ret; 
0x0000000000021674: test eax, eax; setne al; movzx eax, al; add rsp, 0x18; ret; 
0x00000000000214fd: test eax, eax; setne al; movzx eax, al; ret; 
0x0000000000059537: test eax, eax; setne al; movzx eax, al; shl eax, 4; ret; 
0x00000000000343c4: test eax, edi; mov eax, 0; cmove eax, edx; ret; 
0x00000000000446e6: test eax, edx; add dword ptr [rax], eax; add byte ptr [rax + 0x66], bh; syscall; 
0x0000000000052ca1: test ebp, ebp; je 0x52ce1; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000002b625: test ebx, ebx; je 0x2b62b; fchs; add rsp, 0x40; pop rbx; ret; 
0x000000000002bd41: test ebx, ebx; je 0x2bd4c; xorps xmm0, xmmword ptr [rip + 0x67a14]; add rsp, 0x10; pop rbx; ret; 
0x000000000002bde0: test ebx, ebx; je 0x2bdeb; xorps xmm0, xmmword ptr [rip + 0x67985]; add rsp, 0x10; pop rbx; ret; 
0x000000000002be70: test ebx, ebx; je 0x2be76; fchs; add rsp, 0x30; pop rbx; ret; 
0x000000000002cd46: test ebx, ebx; je 0x2cd51; xorps xmm0, xmmword ptr [rip + 0x66a0f]; pop rbx; ret; 
0x000000000002d2c1: test ebx, ebx; je 0x2d2cc; xorps xmm0, xmmword ptr [rip + 0x664a4]; pop rbx; ret; 
0x000000000002d87a: test ebx, ebx; je 0x2d880; fchs; add rsp, 0x10; pop rbx; ret; 
0x0000000000036df9: test ebx, ebx; je 0x36e04; xorps xmm0, xmmword ptr [rip + 0x5c95c]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036ec4: test ebx, ebx; je 0x36ecf; xorps xmm0, xmmword ptr [rip + 0x5c8a1]; add rsp, 0x10; pop rbx; ret; 
0x000000000004b8cb: test ebx, ebx; je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000056d7d: test ebx, ebx; je 0x56dcc; mov rax, qword ptr [rbx]; test rax, rax; je 0x56d8b; call rax; 
0x000000000003d8f8: test ebx, ebx; jne 0x3d8ec; pop rbx; ret; 
0x0000000000044cb8: test ebx, ebx; jne 0x44cac; xor eax, eax; pop rbx; ret; 
0x0000000000045a60: test ebx, ebx; jne 0x45a54; pop rbx; ret; 
0x000000000005b8c6: test ebx, ebx; jne 0x5b8e7; mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000002b334: test ebx, ebx; jns 0x2b33f; xorps xmm0, xmmword ptr [rip + 0x68431]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036f9d: test ebx, ebx; jns 0x36fa3; fchs; add rsp, 0x10; pop rbx; ret; 
0x00000000000198f2: test ecx, ecx; cmove rax, rdx; ret; 
0x0000000000035828: test ecx, ecx; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359ad: test ecx, ecx; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x00000000000195f2: test ecx, ecx; jne 0x195e8; ret; 
0x000000000002e1db: test ecx, ecx; jne 0x2e41d; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000004cb5b: test ecx, ecx; jne 0x4cb6e; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000055512: test ecx, ecx; jne 0x55518; neg eax; ret; 
0x000000000005555d: test ecx, ecx; jne 0x55564; neg rax; ret; 
0x00000000000555a9: test ecx, ecx; jne 0x555b0; neg rax; ret; 
0x000000000002d9fd: test ecx, ecx; jns 0x2da0a; addsd xmm0, qword ptr [rip + 0x67127]; ret; 
0x000000000002de41: test ecx, ecx; jns 0x2de51; addsd xmm1, qword ptr [rip + 0x66ce3]; movaps xmm0, xmm1; ret; 
0x000000000003303a: test ecx, ecx; jns 0x3304a; subsd xmm0, xmm0; xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x000000000002a902: test edi, edi; je 0x2a917; movsd xmm1, qword ptr [rip + 0x6a3da]; divsd xmm1, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000003826c: test edi, edi; je 0x38277; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003827b: test edi, edi; je 0x38286; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003b88c: test edi, edi; je 0x3b898; xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x0000000000058739: test edi, edi; je 0x5875e; mov eax, 0x8f; mov rsi, r14; syscall; 
0x00000000000598b1: test edi, edi; je 0x598c4; movsxd rsi, ebx; mov eax, 0x90; mov rdx, r12; syscall; 
0x000000000005994e: test edi, edi; je 0x59960; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000023d26: test edi, edi; jne 0x23d36; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000003b55e: test edi, edi; jne 0x3b56c; test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x000000000003d8e6: test edi, edi; jne 0x3d8eb; ret; 
0x0000000000044ca4: test edi, edi; jne 0x44cab; xor eax, eax; ret; 
0x0000000000045a4e: test edi, edi; jne 0x45a53; ret; 
0x0000000000030312: test edi, edi; jns 0x3031e; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000030e19: test edi, edi; jns 0x30e25; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003ea7e: test edi, edi; js 0x3ea8a; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000000059745: test edi, edi; js 0x59752; mov edx, 0xb; cmovne eax, edx; ret; 
0x0000000000019f6d: test edx, edx; je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x00000000000266f5: test edx, edx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x000000000002a829: test edx, edx; je 0x2a891; xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x000000000004b685: test edx, edx; je 0x4b68c; mov qword ptr [rdx], rax; ret; 
0x000000000004db1b: test edx, edx; je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004f327: test edx, edx; je 0x4f333; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000017955: test edx, edx; jne 0x17940; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000196f7: test edx, edx; jne 0x196f0; sub rax, rdi; sar rax, 2; ret; 
0x0000000000023de4: test edx, edx; jne 0x23df7; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000023fa0: test edx, edx; jne 0x23fae; mov eax, 0xfd; syscall; 
0x0000000000035ae7: test edx, edx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x0000000000035b6f: test edx, edx; jns 0x35b7a; xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x000000000002c259: test edx, edx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7df: test edx, edx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x000000000005bdb6: test edx, edx; sete al; ret; 
0x0000000000044d33: test esi, 0xffffff00; jne 0x44d3f; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000024978: test esi, esi; je 0x2497e; bswap eax; ret; 
0x0000000000056f7b: test esi, esi; je 0x56f8e; dec eax; jne 0x56f89; mov eax, 0x5f; ret; 
0x0000000000058bda: test esi, esi; je 0x58be2; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000005a62c: test esi, esi; je 0x5a639; dec edi; jle 0x5a639; add eax, 0x15180; ret; 
0x000000000005a915: test esi, esi; je 0x5a91c; neg r8d; mov eax, r8d; ret; 
0x0000000000023e76: test esi, esi; jne 0x23e83; mov eax, 0x11c; syscall; 
0x000000000004b642: test esi, esi; jne 0x4b656; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x0000000000039cf9: test esi, esi; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x00000000000488db: test esp, esi; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret; 
0x000000000004e7aa: test esp, esp; je 0x4e7c1; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000019842: test r10b, r9b; jne 0x19820; sub eax, r8d; ret; 
0x000000000004e7a9: test r12, r12; je 0x4e7c1; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000052ca0: test r13, r13; je 0x52ce1; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000030e18: test r15d, r15d; jns 0x30e25; xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000023e42: test r8, r8; jne 0x23e50; mov eax, 0xe8; syscall; 
0x00000000000195bd: test r8d, r8d; jne 0x195a8; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x0000000000030887: test r8d, r8d; jns 0x30894; xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035827: test r9, r9; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x00000000000359ac: test r9d, r9d; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x0000000000027afe: test rax, -0x1000; je 0x27b11; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x0000000000027f76: test rax, -0x1000; je 0x27f89; and rax, 0xfffffffffffff000; sub rax, 0x10; ret; 
0x000000000001776a: test rax, rax; je 0x17780; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x00000000000267b3: test rax, rax; je 0x2679c; pop rbx; ret; 
0x0000000000040816: test rax, rax; je 0x40820; cmp dword ptr [rax + 0x10], ebx; jne 0x40811; pop rbx; ret; 
0x0000000000047269: test rax, rax; je 0x4727c; mov qword ptr [rax], -1; mov dword ptr [rax + 8], 0xffffffff; pop rdx; ret; 
0x000000000004b2b9: test rax, rax; je 0x4b2d0; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000004b666: test rax, rax; je 0x4b66f; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004d5c7: test rax, rax; je 0x4d5d9; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000004e8c2: test rax, rax; je 0x4e8cc; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004f368: test rax, rax; je 0x4f374; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000056d84: test rax, rax; je 0x56d8b; call rax; 
0x0000000000056da6: test rax, rax; je 0x56dad; call rax; 
0x000000000005a5ac: test rax, rax; je 0x5a5c0; mov eax, 3; mov rdi, rbp; syscall; 
0x000000000005b893: test rax, rax; je 0x5b8aa; call rax; 
0x000000000005d408: test rax, rax; je 0x5d41b; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000005f359: test rax, rax; je 0x5f368; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x0000000000060619: test rax, rax; je 0x60628; add rax, qword ptr [r14]; mov rdx, rax; xor eax, eax; call rdx; 
0x0000000000017908: test rax, rax; jne 0x178e8; xor eax, eax; pop rbx; ret; 
0x0000000000021b94: test rax, rax; jne 0x21ba5; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000274f0: test rax, rax; jne 0x274fc; lea rax, [rip + 0x6f13a]; ret; 
0x0000000000027565: test rax, rax; jne 0x27538; pop rdx; pop rbx; pop rbp; ret; 
0x0000000000035a08: test rax, rax; jne 0x35a10; movaps xmm0, xmm1; ret; 
0x000000000004e761: test rax, rax; jne 0x4e770; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000050418: test rax, rax; jne 0x5043b; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x20]; mov rax, rdx; syscall; 
0x0000000000051081: test rax, rax; jne 0x51099; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000021757: test rax, rax; setne al; movzx eax, al; ret; 
0x00000000000343c3: test rax, rdi; mov eax, 0; cmove eax, edx; ret; 
0x000000000002bd40: test rbx, rbx; je 0x2bd4c; xorps xmm0, xmmword ptr [rip + 0x67a14]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036df8: test rbx, rbx; je 0x36e04; xorps xmm0, xmmword ptr [rip + 0x5c95c]; add rsp, 0x10; pop rbx; ret; 
0x000000000004b8ca: test rbx, rbx; je 0x4b8d5; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000056d7c: test rbx, rbx; je 0x56dcc; mov rax, qword ptr [rbx]; test rax, rax; je 0x56d8b; call rax; 
0x000000000003d8f7: test rbx, rbx; jne 0x3d8ec; pop rbx; ret; 
0x0000000000044cb7: test rbx, rbx; jne 0x44cac; xor eax, eax; pop rbx; ret; 
0x0000000000045a5f: test rbx, rbx; jne 0x45a54; pop rbx; ret; 
0x000000000002e1da: test rcx, rcx; jne 0x2e41d; comisd xmm0, xmmword ptr [rip + 0x670d5]; jbe 0x2e23e; mulsd xmm0, qword ptr [rip + 0x66993]; ret; 
0x000000000003826b: test rdi, rdi; je 0x38277; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003827a: test rdi, rdi; je 0x38286; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003b88b: test rdi, rdi; je 0x3b898; xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x000000000003b55d: test rdi, rdi; jne 0x3b56c; test eax, eax; jne 0x3b5b4; mov eax, 1; ret; 
0x000000000003d8e5: test rdi, rdi; jne 0x3d8eb; ret; 
0x0000000000044ca3: test rdi, rdi; jne 0x44cab; xor eax, eax; ret; 
0x0000000000045a4d: test rdi, rdi; jne 0x45a53; ret; 
0x0000000000019f6c: test rdx, rdx; je 0x19f97; mov edx, dword ptr [rcx + rsi*4]; mov dword ptr [rax + rsi*4], edx; ret; 
0x00000000000266f4: test rdx, rdx; je 0x2677d; lea rax, [rdx + 0x10]; ret; 
0x000000000004b684: test rdx, rdx; je 0x4b68c; mov qword ptr [rdx], rax; ret; 
0x000000000004db1a: test rdx, rdx; je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000004f326: test rdx, rdx; je 0x4f333; mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000017954: test rdx, rdx; jne 0x17940; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000035ae6: test rdx, rdx; jns 0x35af2; xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x000000000002c258: test rdx, rdx; js 0x2c27b; movsd xmm0, qword ptr [rip + 0x688cb]; ret; 
0x000000000002e7de: test rdx, rdx; js 0x2e7fc; xorps xmm0, xmm0; ret; 
0x0000000000058bd9: test rsi, rsi; je 0x58be2; mov eax, dword ptr [rsi]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000004b641: test rsi, rsi; jne 0x4b656; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x0000000000039cf8: test rsi, rsi; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000018892: test sil, r8b; jne 0x18868; sub eax, edi; ret; 
0x0000000000018eba: test sil, sil; jne 0x18ec8; pop rbp; ret; 
0x000000000004bd32: wait; add al, 0; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd32: wait; add al, 0; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x00000000000532f8: wait; add byte ptr [rax], al; add byte ptr [rax + 0x745e017b], al; or byte ptr [rax - 1], cl; ret; 
0x000000000003486c: wait; add eax, 0x590ff200; ret; 
0x000000000002026e: wait; mov qword ptr [rdi + 0x18], rax; movabs rax, 0x5be0cd191f83d9ab; mov qword ptr [rdi + 0x20], rax; ret; 
0x000000000002e915: wait; ret 0x440f; 
0x0000000000034d0c: wait; ret 0x450f; 
0x000000000001dba5: wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x00000000000403be: xchg al, ah; movzx eax, ax; ret; 
0x000000000003e51c: xchg al, ah; ret; 
0x00000000000183b5: xchg byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000003e1d8: xchg byte ptr [rip + 0x450f4800], al; ret 0x8948; 
0x0000000000025b52: xchg byte ptr [rsi + 0x31fffffe], al; imul al; mov eax, 0x89fffffa; ret 0x3d; 
0x000000000002d408: xchg byte ptr [rsi], al; add bl, dh; subps xmm0, xmm1; ret; 
0x000000000002d3fe: xchg byte ptr [rsi], al; add byte ptr [rbp + rcx - 0xd], dh; movups xmm0, xmmword ptr [rip + 0x6867d]; subss xmm0, xmm1; ret; 
0x000000000002d3e9: xchg byte ptr [rsi], al; add byte ptr [rdx - 0xd], bl; subps xmm0, xmm1; ret; 
0x000000000005656d: xchg byte ptr [rsp + rdi*8 - 0x3b7cb701], bh; sub byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000005ac06: xchg dl, bl; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000050b5d: xchg dword ptr [rax + 0xa000000], edx; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; ret; 
0x0000000000026207: xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x0000000000057d30: xchg dword ptr [rax + rax - 0x3f7b0000], ecx; jns 0x57d43; mov dword ptr [rdi + 0x8c], 0; ret; 
0x0000000000057d3a: xchg dword ptr [rax + rax], ecx; add byte ptr [rax], al; ret; 
0x000000000002427f: xchg dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000053295: xchg dword ptr [rbx + 4], ecx; add byte ptr [rax], al; lea rcx, [rip + 0x42d8f]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000052622: xchg dword ptr [rbx + rax], esp; add byte ptr [rax], al; lea rdx, [rip + 0x438e2]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000537fc: xchg dword ptr [rcx + 1], esp; add byte ptr [rax], al; lea rdi, [rip + 0x428ac]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x000000000005143b: xchg dword ptr [rcx + 1], esp; add byte ptr [rax], al; lea rdi, [rip + 0x44a81]; movsxd rdx, dword ptr [rdi + rsi*4]; add rdx, rdi; jmp rdx; 
0x0000000000053e02: xchg dword ptr [rdi + 0x48fffffc], edi; lea edx, [rip + 0x422ee]; movsxd rax, dword ptr [rdx + r8*4]; add rax, rdx; jmp rax; 
0x000000000002ff11: xchg dword ptr [rdx + rax + 0x280f0000], ebp; ret 0xff3; 
0x000000000002b6a0: xchg dword ptr [rdx - 0x9000000], esp; ret 0; 
0x0000000000032384: xchg dword ptr [rip + 0x48000001], esi; lea edx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000002d2be: xchg dword ptr [rsi], eax; add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x664a4; pop rbx; ret; 
0x000000000001906d: xchg dword ptr [rsi], ebp; or byte ptr [rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000004cfb7: xchg eax, ebp; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x49], 0x8b; or byte ptr [rax - 0x77], cl; ret 0x3d48; 
0x0000000000053a40: xchg eax, ebp; ret 0x2041; 
0x0000000000019839: xchg eax, ebp; ret 0x3944; 
0x0000000000026a6b: xchg eax, ebp; ret 0x3948; 
0x00000000000493c2: xchg eax, ebp; ret 0x5389; 
0x0000000000037d0b: xchg eax, ebp; ret 0x8d48; 
0x000000000005c01e: xchg eax, ebp; ret 0xb60f; 
0x000000000004a38f: xchg eax, ebp; ret 0xbc8b; 
0x0000000000037e53: xchg eax, ebp; ret 0xc148; 
0x000000000004f252: xchg eax, ebp; ret 0xc2ff; 
0x0000000000051c5e: xchg eax, ebp; ret 0xca21; 
0x0000000000056ab7: xchg eax, ebp; ret 0xcabf; 
0x00000000000556ad: xchg eax, ebp; ret 0xd101; 
0x000000000003c5f9: xchg eax, ebp; ret 0xd184; 
0x000000000002ed8e: xchg eax, ebp; ret 0xe083; 
0x0000000000051c4a: xchg eax, ebp; ret 0xf41; 
0x000000000005a72a: xchg eax, ebp; ret 0xff85; 
0x0000000000026df9: xchg eax, ebp; ret; 
0x000000000001888c: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc1; add dword ptr [rsp + rax*4 - 0x3a], eax; jne 0x18868; sub eax, edi; ret; 
0x0000000000023ec3: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000005a429: xchg eax, ebp; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret; 
0x0000000000043260: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; add rsp, 0x10; pop rbx; ret; 
0x0000000000023e9e: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000026a9e: xchg eax, ebp; ror byte ptr [rdi], 0xb6; shl byte ptr [rcx], 0xd0; ret; 
0x0000000000022c10: xchg eax, ebp; sal bh, 0xd8; pop rdx; ret; 
0x000000000004884c: xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000004caea: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000023a91: xchg eax, ebx; add dword ptr [rdi], 0; pop rdx; ret; 
0x0000000000026e65: xchg eax, ebx; ret; 
0x000000000004d2cc: xchg eax, ecx; add byte ptr [rax], al; mov esi, 0x88000; mov rax, r13; mov rdi, r14; syscall; 
0x000000000001e6d4: xchg eax, ecx; add rax, rcx; jmp rax; 
0x000000000004448d: xchg eax, ecx; and al, 1; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000019f8a: xchg eax, ecx; mov dword ptr [rax + rdx*4], esi; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x000000000003f089: xchg eax, ecx; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000003c1cc: xchg eax, edi; and byte ptr [rax], 0xff; inc dword ptr [rbx + 0x4777ffa]; movzx eax, dil; ret; 
0x000000000001a172: xchg eax, edi; ret 0x2e0f; 
0x000000000001a406: xchg eax, edi; ret 0x4566; 
0x000000000002eaa2: xchg eax, edi; ret 0xacdb; 
0x000000000002ea63: xchg eax, edi; ret 0xc1d9; 
0x000000000001a12c: xchg eax, edi; ret 0xf44; 
0x000000000001a444: xchg eax, edi; ret 0xf66; 
0x0000000000026e75: xchg eax, edi; ret; 
0x000000000001ed70: xchg eax, edx; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004b215: xchg eax, edx; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; or eax, 0x5afffcc0; ret; 
0x000000000005d99a: xchg eax, edx; cwde; sti; lcall [rdx - 0x3d]; mov eax, 0x66; syscall; 
0x000000000002e5e6: xchg eax, edx; jb 0x2e5ef; add byte ptr [rdi], cl; sub cl, al; ret; 
0x00000000000295da: xchg eax, edx; movabs eax, dword ptr [0xfc244c110ff30006]; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000026e7d: xchg eax, edx; ret; 
0x000000000005df7c: xchg eax, edx; sti; lcall [rdx - 0x3d]; mov eax, 0xa2; syscall; 
0x0000000000034c29: xchg eax, esi; add eax, 0x580ff200; ret 0x4866; 
0x000000000005c5f1: xchg eax, esi; add rdx, r14; jmp rdx; 
0x000000000004c09e: xchg eax, esi; add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000000005fc96: xchg eax, esi; mov edi, ebx; inc dword ptr [rbp - 0x16248b40]; ret; 
0x000000000003457e: xchg eax, esi; ret 0x8141; 
0x000000000002c787: xchg eax, esi; ret 0xf981; 
0x0000000000026e6d: xchg eax, esi; ret; 
0x000000000002144c: xchg eax, esi; rol byte ptr [rbx - 0x6bf08001], 0xc2; or eax, edx; movzx eax, al; ret; 
0x00000000000214ca: xchg eax, esi; rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x00000000000406cf: xchg eax, esp; and al, 0x10; add al, 0; add byte ptr [rax + 1], cl; ret 0x8948; 
0x00000000000426ff: xchg eax, esp; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x117e; 
0x00000000000427cd: xchg eax, esp; and al, 0x84; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xa97e; 
0x0000000000045306: xchg eax, esp; ret 0x213c; 
0x0000000000045dd5: xchg eax, esp; ret 0x4c89; 
0x00000000000527ea: xchg eax, esp; ret 0x8545; 
0x0000000000046834: xchg eax, esp; ret 0x8548; 
0x0000000000026d53: xchg eax, esp; ret 0x8948; 
0x000000000005574c: xchg eax, esp; ret 0x940f; 
0x0000000000025b72: xchg eax, esp; ret 0xb60f; 
0x00000000000173d1: xchg eax, esp; ret 0xd008; 
0x000000000002143b: xchg eax, esp; ret 0xd009; 
0x0000000000024071: xchg eax, esp; ret 0xd184; 
0x0000000000050aeb: xchg eax, esp; ret 0xd201; 
0x000000000004365a: xchg eax, esp; ret 0xf883; 
0x000000000001eea4: xchg eax, esp; ret; 
0x000000000002142e: xchg eax, esp; rol bl, 0x83; jmp qword ptr [rax]; 
0x0000000000021435: xchg eax, esp; rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x0000000000015ecd: xchg eax, esp; rol byte ptr [rcx - 0x7d], 0xc6; add dword ptr [rcx], ecx; ret 0x8941; 
0x0000000000026432: xchg eax, esp; rol byte ptr [rcx - 0x7f], 0xf8; and byte ptr ds:[rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd008; 
0x0000000000019840: xchg eax, esp; rol dword ptr [rbp - 0x7c], 0xca; jne 0x19820; sub eax, r8d; ret; 
0x0000000000028360: xchg eax, esp; sbb eax, dword ptr [rdi]; add byte ptr [rax - 0x7f], cl; ret; 
0x000000000005dd83: xchg eax, esp; sti; lcall [rdx - 0x3d]; push rax; mov eax, 0x54; syscall; 
0x0000000000035138: xchg eax, esp; test byte ptr [rip + 0x24148900], 0xd9; ret; 
0x0000000000044780: xchg ecx, eax; add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; add al, 0x82; add rax, r10; jmp rax; 
0x0000000000057da1: xlatb; add al, 0; ret; 
0x000000000003b586: xlatb; add byte ptr [rax], al; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x0000000000037882: xlatb; add eax, 0xd0f74800; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x00000000000373cf: xlatb; add eax, 0xf486600; outsb dx, byte ptr [rsi]; ret; 
0x000000000004c7b4: xlatb; call 0x17230; pop rbx; pop rbp; pop r12; ret; 
0x0000000000042e05: xlatb; je 0x42e0d; add al, ch; ret 0; 
0x0000000000019f94: xlatb; jne 0x19f88; ret; 
0x0000000000024499: xlatb; mov edi, 0xfee1dead; push rax; mov esi, 0x28121969; mov eax, 0xa9; syscall; 
0x000000000004d6b4: xlatb; mov rax, r13; mov rsi, rbp; syscall; 
0x000000000002f172: xlatb; or rdi, rax; movq xmm0, rdi; ret; 
0x000000000005668c: xlatb; ret; 
0x000000000005cd76: xlatb; syscall; 
0x0000000000021631: xlatb; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000003e04b: xor al, 0; add byte ptr [rax], al; syscall; 
0x0000000000025647: xor al, 0x37; shl edx, 8; shl esi, 0x10; or eax, esi; or eax, edx; ret; 
0x0000000000039144: xor al, 0x48; lea esi, [rsp + 8]; mov eax, 0x61; mov rdi, rbp; syscall; 
0x0000000000035e64: xor al, 0x66; movd mm2, rax; mulsd xmm0, xmm2; ret; 
0x000000000002ae20: xor al, 0x89; ret 0xe281; 
0x0000000000019f8c: xor al, 0x90; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x0000000000019f89: xor al, 0x91; mov dword ptr [rax + rdx*4], esi; add rdx, 1; cmp rdi, rdx; jne 0x19f88; ret; 
0x0000000000024e88: xor al, 0xff; dec dword ptr [rax - 0x77]; ret 0x8949; 
0x00000000000245e8: xor al, 1; add byte ptr [rax], al; syscall; 
0x00000000000170ff: xor al, 8; mov esi, ecx; mov ecx, eax; cmp esi, 9; ja 0x170e0; ret; 
0x0000000000052d45: xor al, byte ptr [rax + rax]; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000003f003: xor al, byte ptr [rax]; add byte ptr [rax], al; xor edx, edx; syscall; 
0x00000000000229d6: xor al, byte ptr [rbp + 0x31]; leave; mov rax, r8; mov rdx, r9; syscall; 
0x00000000000359ab: xor al, byte ptr [rbp - 0x7b]; leave; je 0x359b8; xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x000000000003bf3f: xor al, byte ptr [rcx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000024772: xor al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000000241f3: xor bh, bh; lcall [rdx - 0x3d]; mov esi, esi; push rax; mov eax, 0xb0; syscall; 
0x0000000000024207: xor bh, bh; lcall [rdx - 0x3d]; mov r10, rcx; push rax; mov eax, 0xa5; syscall; 
0x0000000000023ffb: xor bh, bh; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0xac; syscall; 
0x0000000000023fe6: xor bh, bh; lcall [rdx - 0x3d]; movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x00000000000241e1: xor bh, bh; lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x000000000002421c: xor bh, bh; lcall [rdx - 0x3d]; xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x000000000003aed6: xor bh, bh; sldt word ptr [rax]; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x00000000000586d7: xor bh, dh; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002f92f: xor bl, 0xf; adc dword ptr [rsp - 0xc], eax; ret; 
0x000000000002f85b: xor bl, 0xf; adc dword ptr [rsp - 4], eax; mov eax, r8d; ret; 
0x000000000002f8f3: xor bl, 0xf; pop rsi; sal bl, 0xf; adc dword ptr [rsp - 0x10], eax; ret; 
0x0000000000023f88: xor bl, al; movsxd rdi, edi; mov eax, 0x126; push rcx; mov rdx, rdi; syscall; 
0x000000000005a21c: xor byte ptr [rax + 0x39], cl; ret 0xe975; 
0x000000000004c8e8: xor byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000584fb: xor byte ptr [rax + 0x63], cl; je 0x58524; push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000001b8e3: xor byte ptr [rax + 0x81], bh; syscall; 
0x0000000000058752: xor byte ptr [rax + 0x91], bh; syscall; 
0x0000000000022692: xor byte ptr [rax + 0xc8], bh; syscall; 
0x000000000004b16f: xor byte ptr [rax + 0xcb], bh; syscall; 
0x000000000004b16f: xor byte ptr [rax + 0xcb], bh; syscall; neg eax; ret; 
0x0000000000017e09: xor byte ptr [rax - 0x73], cl; add rcx, qword ptr [rax + 1]; ret; 
0x000000000004bd19: xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000034179: xor byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0xf]; mov edx, 0x39483ff2; ret 0x676; 
0x0000000000053b17: xor byte ptr [rax - 0x77], cl; ret 0x4e8d; 
0x00000000000444c8: xor byte ptr [rax - 0x77], cl; ret; 
0x0000000000017111: xor byte ptr [rax], al; add byte ptr [rax], al; mov word ptr [r8 + 0xe], ax; ret; 
0x00000000000418ef: xor byte ptr [rax], al; add byte ptr [rax], al; xor edx, edx; syscall; 
0x0000000000043a4a: xor byte ptr [rax], al; add byte ptr [rcx - 0x3ee87630], cl; call 0xffffffff89d46b62; ret 0xe2c1; 
0x000000000004441d: xor byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x0000000000058b14: xor byte ptr [rbp + 0x481174c0], al; movsxd rdi, eax; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000058ba2: xor byte ptr [rbp + 0xc], dh; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000003b51c: xor byte ptr [rbp + 5], 0x40; movzx eax, bh; ret; 
0x0000000000058738: xor byte ptr [rbp - 0x47de8b01], al; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r14; syscall; 
0x0000000000019225: xor byte ptr [rbp - 0x49f02faf], cl; ror byte ptr [rdi], cl; mov dh, 0xc0; sub eax, edx; ret; 
0x000000000001923e: xor byte ptr [rbx + 0x327609f8], al; movzx edx, cl; mov eax, r8d; sub eax, edx; ret; 
0x00000000000569e7: xor byte ptr [rbx + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000057d59: xor byte ptr [rbx + 0x4429005], cl; add byte ptr [rcx], bh; ret; 
0x0000000000045cc9: xor byte ptr [rbx + 0x4a7402fe], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, r13; mov r14d, 2; call rax; 
0x00000000000361f2: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000047bf1: xor byte ptr [rbx + 0x87709fa], al; cmp ecx, 0xff; jle 0x47bdd; ret; 
0x00000000000191e6: xor byte ptr [rbx - 0x1b89f608], al; mov eax, 1; ret; 
0x000000000001be73: xor byte ptr [rbx - 0x27], bl; leave; ret; 
0x0000000000045d92: xor byte ptr [rcx + rcx*4 - 0x11], cl; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000005bbfa: xor byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000004d64b: xor byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000024121: xor byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005cdd5: xor byte ptr [rcx - 0x47dfdbbc], cl; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000032740: xor byte ptr [rcx - 0xffff1d], al; jg 0x32751; ret; 
0x00000000000387e6: xor byte ptr [rcx], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000002426d: xor byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000021405: xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x000000000002db0c: xor byte ptr [rdi + 6], 0; ret; 
0x000000000005ce89: xor byte ptr [rsi + 0x20], bh; syscall; 
0x000000000005ce89: xor byte ptr [rsi + 0x20], bh; syscall; xor eax, eax; ret; 
0x000000000005749d: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; 
0x000000000005749d: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; ret; 
0x000000000005a26e: xor byte ptr [rsi + 0x22], bh; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005a26d: xor byte ptr [rsi + 0x22], dil; mov dword ptr [rip + 0x41e0e], eax; movsxd rdi, dword ptr [rdx + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000039d01: xor byte ptr [rsp + rax - 0x80], dl; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000035826: xor cl, byte ptr [rbp - 0x7b]; leave; je 0x35833; xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x0000000000019243: xor cl, byte ptr [rdi]; mov dh, 0xd1; mov eax, r8d; sub eax, edx; ret; 
0x0000000000018bdf: xor cl, byte ptr [rdi]; xor dword ptr [rdx + 0x48000001], 0xffffff89; ret; 
0x000000000004862a: xor cl, dl; cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000001c185: xor dh, bl; ret 0xc9d9; 
0x0000000000030e55: xor dh, byte ptr [rdi + 0xd]; movss xmm0, dword ptr [rip + 0x64e5c]; divss xmm0, xmm1; ret; 
0x00000000000599b4: xor dh, byte ptr [rdi + rax + 0x48]; mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000241e0: xor dil, r15b; lcall [rdx - 0x3d]; push rax; mov eax, 0xaf; syscall; 
0x00000000000380ff: xor dl, byte ptr [rsp + 0x21]; jns 0x38107; neg eax; mov dword ptr [rdi], eax; ret; 
0x000000000005d32b: xor dword ptr [rax + 0x48c3fffb], esi; movsxd rdi, edi; push rax; mov eax, 0x20; syscall; 
0x000000000003c2df: xor dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000023d3a: xor dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000002d48b: xor dword ptr [rdi + 6], esp; add al, bl; ret 0xcad8; 
0x000000000005d3a5: xor dword ptr [rdx + 0x21], edi; mov rax, rdx; mov rsi, r8; syscall; 
0x0000000000018be1: xor dword ptr [rdx + 0x48000001], 0xffffff89; ret; 
0x0000000000023cfb: xor dword ptr [rip - 0x3ca50001], esi; push rax; mov eax, 0x7d; syscall; 
0x0000000000044adb: xor dword ptr [rip - 0x76b70003], eax; ret; 
0x0000000000032d2b: xor dword ptr [rip - 0xda60000], ebp; cvttps2pi mm0, xmm0; ret; 
0x0000000000049e69: xor dword ptr [rsi - 3], 0xfc085ff; xchg eax, ebp; ret; 
0x0000000000021a95: xor eax, 0x448bffff; and al, 0xc; add rsp, 0x10; pop rbp; ret; 
0x0000000000032385: xor eax, 0x48000001; lea edx, [rip + 0x63974]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000004b2d3: xor eax, 0x48000001; mov edi, ebp; mov rsi, rdx; syscall; 
0x000000000003d4ab: xor eax, 0x4800018f; mov dword ptr [rbp], ebx; pop rax; pop rbx; pop rbp; ret; 
0x000000000004bd4a: xor eax, 0x49af1; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd4a: xor eax, 0x49af1; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004bd30: xor eax, 0x49b13; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd30: xor eax, 0x49b13; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000041a54: xor eax, 0x4c000000; mov edi, esp; mov rdx, r13; movsxd rsi, esi; syscall; 
0x00000000000439f7: xor eax, 0x55a2a; call 0x43946; pop rdx; shr rax, 0x10; cdqe; ret; 
0x00000000000439d8: xor eax, 0x55a49; call 0x43946; pop rdx; shr rax, 0x11; ret; 
0x000000000002f2f5: xor eax, 0x66c20948; movd mm0, rdx; pop rbx; ret; 
0x00000000000335c6: xor eax, 0x6e0f663f; ret 0xff3; 
0x0000000000021bbc: xor eax, 0x87f6348; mov eax, 0xd9; mov edx, 0x800; syscall; 
0x0000000000037dff: xor eax, 0x89486b74; ret 0xe083; 
0x0000000000024e51: xor eax, 0x8948ffff; ret 0x50eb; 
0x0000000000023cfc: xor eax, 0xc35affff; push rax; mov eax, 0x7d; syscall; 
0x0000000000023cea: xor eax, 0xc35affff; push rax; mov eax, 0x7e; syscall; 
0x0000000000023d0e: xor eax, 0xc35affff; push rax; mov eax, 0xa1; syscall; 
0x0000000000032375: xor eax, 0xff30006; pop rcx; ret; 
0x000000000005933f: xor eax, 0xffffff6f; mov rdi, r12; call 0x5767b; call rbx; 
0x000000000004dab3: xor eax, 1; and eax, 1; ret; 
0x000000000003e44e: xor eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000022ef9: xor eax, dword ptr [rbx - 1]; lcall [rdx - 0x3d]; movsxd rdi, edi; push rax; mov eax, 0x41; syscall; 
0x000000000002ab4a: xor eax, dword ptr [rcx]; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x6a472]; addsd xmm0, qword ptr [rip + 0x69fea]; ret; 
0x0000000000032a50: xor eax, dword ptr [rsi]; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000002950e: xor eax, eax; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x000000000005d474: xor eax, eax; add rsp, 0x18; ret; 
0x0000000000021428: xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000000592a6: xor eax, eax; and esi, 0xfffffffc; or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x0000000000056cd1: xor eax, eax; and esi, 1; mov ecx, 0xa; rep stosd dword ptr [rdi], eax; mov dword ptr [rdx], esi; ret; 
0x0000000000023a9d: xor eax, eax; call 0x228e3; pop rdx; sar eax, 0x1f; ret; 
0x000000000003e56b: xor eax, eax; call 0x392c9; movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x0000000000043820: xor eax, eax; call 0x4ea2e; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000001e5b4: xor eax, eax; call 0x50b6c; inc eax; cdqe; pop rdx; ret; 
0x000000000005f364: xor eax, eax; call rdx; 
0x000000000003f4da: xor eax, eax; cmp byte ptr [rbx], 0; sete al; pop rbx; ret; 
0x000000000003b890: xor eax, eax; cmp dword ptr [rdi], 0; sete al; ret; 
0x0000000000056ea7: xor eax, eax; cmp dword ptr [rdi], 0; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000021484: xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000021545: xor eax, eax; cmp edi, 0x2fffd; setbe al; ret; 
0x0000000000021473: xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x0000000000021495: xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x0000000000021a5a: xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x0000000000021583: xor eax, eax; cmp edi, 2; setbe al; ret; 
0x0000000000021406: xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000003b020: xor eax, eax; cmp edx, 4; je 0x3b033; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000004daa3: xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000004dad7: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; je 0x4dae8; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000004da8e: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000004c384: xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x0000000000058627: xor eax, eax; cmp rsi, rdi; sete al; ret; 
0x0000000000022d15: xor eax, eax; fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x0000000000022d1e: xor eax, eax; inc rdi; je 0x22d2d; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000005a521: xor eax, eax; mov al, 0x3c; syscall; 
0x000000000005a521: xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x00000000000567f7: xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000059a2c: xor eax, eax; mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x000000000005743c: xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000039123: xor eax, eax; mov eax, 0x12e; syscall; 
0x00000000000443ba: xor eax, eax; mov eax, 0x142; syscall; 
0x000000000004c8d3: xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000005d6a2: xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000002442f: xor eax, eax; mov eax, 0x65; syscall; 
0x000000000004df5a: xor eax, eax; mov eax, r8d; pop rbx; ret; 
0x0000000000044d09: xor eax, eax; mov ecx, 0x54; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000056c71: xor eax, eax; mov ecx, 0xc; rep stosd dword ptr [rdi], eax; ret; 
0x0000000000056d1f: xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x0000000000056cec: xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; test eax, eax; jne 0x56ce5; ret; 
0x0000000000059a20: xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000005d5b9: xor eax, eax; mov edx, 4; syscall; 
0x0000000000044b20: xor eax, eax; mov qword ptr [rbp + 8], rbx; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000056fb0: xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000004daf1: xor eax, eax; mov qword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000056fda: xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000001795a: xor eax, eax; mov rax, r8; ret; 
0x000000000005703a: xor eax, eax; mov rdi, r8; or edx, r9d; rep stosd dword ptr [rdi], eax; mov dword ptr [r8 + 8], edx; ret; 
0x000000000005d9c2: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000000028bec: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000181d9: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000018f60: xor eax, eax; pop rbp; ret; 
0x000000000005e561: xor eax, eax; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000003b24d: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000021632: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000019944: xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000017772: xor eax, eax; pop rbx; ret; 
0x000000000005db85: xor eax, eax; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000039c5b: xor eax, eax; pop rdx; pop rbx; pop rbp; ret; 
0x00000000000177c5: xor eax, eax; pop rdx; ret; 
0x0000000000044ced: xor eax, eax; rep movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000004cd9b: xor eax, eax; rep stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000004cdbf: xor eax, eax; rep stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000017a30: xor eax, eax; ret; 
0x00000000000294ba: xor eax, eax; shl eax, 9; sete r8b; mov eax, r8d; ret; 
0x000000000003b589: xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000002947c: xor eax, eax; shl rax, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000001834d: xor eax, eax; sub eax, ecx; ret; 
0x0000000000021417: xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x0000000000021790: xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000056e8f: xor eax, eax; sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000005bdb4: xor eax, eax; test edx, edx; sete al; ret; 
0x0000000000038269: xor eax, eax; test rdi, rdi; je 0x38277; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000038278: xor eax, eax; test rdi, rdi; je 0x38286; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000004db18: xor eax, eax; test rdx, rdx; je 0x4db26; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000041985: xor eax, eax; xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004195e: xor eax, eax; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000418e9: xor eax, eax; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d9: xor eax, eax; xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000003effd: xor eax, eax; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e448: xor eax, eax; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e045: xor eax, eax; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000043a6e: xor eax, edx; mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x0000000000043a75: xor eax, edx; shr eax, 1; ret; 
0x000000000003bfc8: xor ecx, dword ptr [rax - 0x75]; je 0x3bff1; or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000042654: xor ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000041988: xor ecx, ecx; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000041961: xor ecx, ecx; mov eax, 0x29; syscall; 
0x00000000000418ec: xor ecx, ecx; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2dc: xor ecx, ecx; mov eax, 0x31; syscall; 
0x000000000003f000: xor ecx, ecx; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e44b: xor ecx, ecx; mov eax, 0x33; syscall; 
0x000000000003e048: xor ecx, ecx; mov eax, 0x34; syscall; 
0x00000000000418cb: xor ecx, ecx; mov eax, 0x36; syscall; 
0x000000000003e46c: xor ecx, ecx; mov eax, 0x37; syscall; 
0x000000000003bcea: xor ecx, ecx; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x3ba2e; add rsp, 0x18; ret; 
0x00000000000229d8: xor ecx, ecx; mov rax, r8; mov rdx, r9; syscall; 
0x000000000005e4b2: xor ecx, ecx; pop rbx; mov rax, r9; pop rbp; pop r12; ret; 
0x0000000000024551: xor edi, edi; call 0x4bd25; mov eax, 0x27; syscall; 
0x000000000005cf25: xor edi, edi; call 0x5b884; pop rdx; not eax; shr eax, 0x1f; ret; 
0x000000000005a4e7: xor edi, edi; mov eax, 0x3c; syscall; 
0x000000000004bd35: xor edi, edi; mov eax, 0xe; syscall; 
0x000000000004bd35: xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000057fea: xor edi, edi; mov esi, 0x18; syscall; 
0x000000000005804b: xor edi, edi; mov rax, rdx; syscall; 
0x00000000000446b8: xor edi, edi; syscall; 
0x000000000005d976: xor edi, edi; syscall; ret; 
0x0000000000053651: xor edi, esp; dec dword ptr [rax - 0x77]; ret 0x8b49; 
0x0000000000018939: xor edx, edx; add rax, rbx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x000000000003c1e1: xor edx, edx; call 0x3be2f; pop rdx; ret; 
0x0000000000055f95: xor edx, edx; call 0x55ef2; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000005620f: xor edx, edx; call 0x56119; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000018218: xor edx, edx; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x00000000000591b8: xor edx, edx; mov dword ptr [rsp + 4], 0; mov esi, 6; syscall; 
0x000000000004c968: xor edx, edx; mov eax, 0x10c; syscall; 
0x000000000005d43a: xor edx, edx; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004b2d0: xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000004bd67: xor edx, edx; mov edi, 2; syscall; 
0x000000000004bd67: xor edx, edx; mov edi, 2; syscall; ret; 
0x0000000000057b65: xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000004c73a: xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x00000000000580b4: xor edx, edx; mov r10d, 8; syscall; 
0x00000000000580b4: xor edx, edx; mov r10d, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000004c9fc: xor edx, edx; mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x00000000000572c6: xor edx, edx; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000005027f: xor edx, edx; mov rax, r8; syscall; 
0x000000000005699e: xor edx, edx; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000056c3b: xor edx, edx; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000004d3d1: xor edx, edx; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000005d5d5: xor edx, edx; mov rsi, rsp; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000003b431: xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000058c9d: xor edx, edx; or esi, 6; mov r10, rbx; mov rax, r13; syscall; 
0x000000000004bfac: xor edx, edx; shl rax, 0x20; mov qword ptr [rsp + 0x28], rax; mov eax, 0xe; syscall; 
0x000000000003f007: xor edx, edx; syscall; 
0x000000000003f007: xor edx, edx; syscall; mov rdi, rax; call 0x17230; pop rdx; ret; 
0x0000000000059a42: xor edx, edx; test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005027d: xor edx, edx; xor edx, edx; mov rax, r8; syscall; 
0x000000000003b42f: xor edx, edx; xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004d7f1: xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000004d3e2: xor edx, edx; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004d50f: xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004b2be: xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000004f1a9: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004195b: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000418e6: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d6: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000003effa: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e445: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e042: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000019887: xor esi, esi; call 0x1a050; mov rax, r12; pop r12; ret; 
0x000000000001b539: xor esi, esi; call 0x1b3f7; mov eax, r12d; pop r12; ret; 
0x0000000000017807: xor esi, esi; call 0x5643b; add rsp, 8; ret; 
0x000000000004b1d2: xor esi, esi; call 0x5643b; mov eax, ebx; pop rbx; neg eax; ret; 
0x000000000001805c: xor esi, esi; call 0x5643b; mov rax, r12; pop r12; ret; 
0x000000000004d7f3: xor esi, esi; call qword ptr [rdi + 0x48]; 
0x0000000000056c4b: xor esi, esi; mov rax, r12; syscall; 
0x00000000000569ae: xor esi, esi; mov rax, r9; syscall; 
0x00000000000572d9: xor esi, esi; mov rax, rbp; mov rdx, r12; syscall; 
0x000000000004d3e4: xor esi, esi; mov rax, rbx; syscall; 
0x000000000004aff8: xor esi, esi; mov rdi, r12; call 0x5643b; mov rax, r12; pop r12; ret; 
0x000000000004d511: xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000004b2c0: xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005b8cf: xor esi, esi; mov rdi, rbp; syscall; 
0x000000000004f1ab: xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004f256: xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000022bc9: xor esi, esi; mov rdx, r8; syscall; 
0x0000000000022bc9: xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x0000000000024221: xor esi, esi; push rax; mov eax, 0xa6; syscall; 
0x00000000000241b0: xor esi, esi; syscall; 
0x00000000000241b0: xor esi, esi; syscall; ret; 
0x00000000000190a4: xor esp, esp; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004b913: xor esp, esp; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c967: xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000005d439: xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004c9fb: xor r10d, r10d; mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x00000000000572c5: xor r10d, r10d; mov rax, r8; mov rsi, r9; mov rdx, rbx; syscall; 
0x000000000005699d: xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000056c3a: xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000004d3d0: xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000005d5d4: xor r10d, r10d; mov rsi, rsp; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000005027c: xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000003b42e: xor r10d, r10d; xor edx, edx; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004d3e1: xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004195a: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000418e5: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d5: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000003eff9: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e444: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e041: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x00000000000190a3: xor r12d, r12d; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004b912: xor r12d, r12d; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000586d6: xor r15b, r14b; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000023fe5: xor r15b, r15b; lcall [rdx - 0x3d]; movsxd rdx, edx; push rax; mov eax, 0xad; syscall; 
0x00000000000214df: xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000002950d: xor r8d, r8d; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x00000000000592a5: xor r8d, r8d; and esi, 0xfffffffc; or esi, eax; mov dword ptr [rdi], esi; mov eax, r8d; ret; 
0x000000000002442e: xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000004df59: xor r8d, r8d; mov eax, r8d; pop rbx; ret; 
0x0000000000017959: xor r8d, r8d; mov rax, r8; ret; 
0x000000000005e560: xor r8d, r8d; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000005db84: xor r8d, r8d; pop rdx; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000294b9: xor r8d, r8d; shl eax, 9; sete r8b; mov eax, r8d; ret; 
0x000000000002947b: xor r8d, r8d; shl rax, 0xc; sete r8b; mov eax, r8d; ret; 
0x0000000000056e8e: xor r8d, r8d; sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000041984: xor r8d, r8d; xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004195d: xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000418e8: xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2d8: xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000003effc: xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e447: xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e044: xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000041987: xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000041960: xor r9d, r9d; mov eax, 0x29; syscall; 
0x00000000000418eb: xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x000000000003c2db: xor r9d, r9d; mov eax, 0x31; syscall; 
0x000000000003efff: xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x000000000003e44a: xor r9d, r9d; mov eax, 0x33; syscall; 
0x000000000003e047: xor r9d, r9d; mov eax, 0x34; syscall; 
0x00000000000418ca: xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000003e46b: xor r9d, r9d; mov eax, 0x37; syscall; 
0x00000000000229d7: xor r9d, r9d; mov rax, r8; mov rdx, r9; syscall; 
0x000000000005e4b1: xor r9d, r9d; pop rbx; mov rax, r9; pop rbp; pop r12; ret; 
0x000000000005a4e6: xor rdi, rdi; mov eax, 0x3c; syscall; 
0x000000000003153b: xorps xmm0, xmm0; add rsp, 0x10; pop rbx; pop rbp; pop r14; ret; 
0x000000000002fd96: xorps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002ab63: xorps xmm0, xmm0; divsd xmm0, xmm4; ret; 
0x0000000000030316: xorps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002b238: xorps xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000002f8ec: xorps xmm0, xmm0; mov eax, 0x80000000; divss xmm0, xmm0; movss dword ptr [rsp - 0x10], xmm0; ret; 
0x000000000001cdc2: xorps xmm0, xmm0; movaps xmm1, xmm0; add rsp, 0x10; pop rbx; ret; 
0x000000000002dba5: xorps xmm0, xmm0; ret; 
0x000000000001bd73: xorps xmm0, xmm1; movaps xmm1, xmm2; pop rbx; ret; 
0x0000000000036ec8: xorps xmm0, xmmword ptr [rip + 0x5c8a1]; add rsp, 0x10; pop rbx; ret; 
0x0000000000036dfd: xorps xmm0, xmmword ptr [rip + 0x5c95c]; add rsp, 0x10; pop rbx; ret; 
0x0000000000035b73: xorps xmm0, xmmword ptr [rip + 0x5dbf6]; ret; 
0x0000000000035aeb: xorps xmm0, xmmword ptr [rip + 0x5dc6e]; ret; 
0x00000000000359b1: xorps xmm0, xmmword ptr [rip + 0x5ddb8]; ret; 
0x000000000003582c: xorps xmm0, xmmword ptr [rip + 0x5df2d]; ret; 
0x000000000002d2c5: xorps xmm0, xmmword ptr [rip + 0x664a4]; pop rbx; ret; 
0x000000000002cd4a: xorps xmm0, xmmword ptr [rip + 0x66a0f]; pop rbx; ret; 
0x000000000002bde4: xorps xmm0, xmmword ptr [rip + 0x67985]; add rsp, 0x10; pop rbx; ret; 
0x000000000002bd45: xorps xmm0, xmmword ptr [rip + 0x67a14]; add rsp, 0x10; pop rbx; ret; 
0x000000000002bc9c: xorps xmm0, xmmword ptr [rip + 0x67acd]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002b810: xorps xmm0, xmmword ptr [rip + 0x67f49]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002b338: xorps xmm0, xmmword ptr [rip + 0x68431]; add rsp, 0x10; pop rbx; ret; 
0x000000000002a82d: xorps xmm0, xmmword ptr [rip + 0x68f2c]; ret; 
0x000000000002a82c: xorps xmm0, xmmword ptr fs:[rip + 0x68f2c]; ret; 
0x000000000002953b: xorps xmm1, xmm1; divsd xmm0, xmm1; ret; 
0x0000000000029563: xorps xmm1, xmm1; divss xmm0, xmm1; ret; 
0x000000000002f07a: xorps xmm1, xmm1; mulsd xmm0, xmm1; ret; 
0x000000000002f1c4: xorps xmm1, xmm1; mulss xmm0, xmm1; ret; 
0x000000000001c080: xorps xmm1, xmm3; movaps xmm0, xmm2; ret; 
0x000000000002b54a: xorps xmm1, xmmword ptr [rip + 0x6821f]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002b449: xorps xmm1, xmmword ptr [rip + 0x68310]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000295d7: xorps xmm1, xmmword ptr [rip + 0x6a192]; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x00000000000295b8: xorps xmm1, xmmword ptr [rip + 0x6a1a1]; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000001d0dc: xorps xmm1, xmmword ptr [rip + 0x7667d]; ret; 
0x000000000003336b: xorps xmm2, xmm2; movaps xmm0, xmm1; divsd xmm0, xmm2; ret; 
0x000000000003351f: xorps xmm2, xmm2; movaps xmm0, xmm1; divss xmm0, xmm2; ret; 

15010 gadgets found

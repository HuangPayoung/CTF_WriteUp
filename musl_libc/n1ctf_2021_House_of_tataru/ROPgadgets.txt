


Gadgets
=======


0x0000000000026791: adc al, 0; add byte ptr [rax - 0x75], cl; add byte ptr [r14 - 0x3f], r12b; ret 0x4908; 
0x000000000004b967: adc al, 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000005dc5a: adc al, 0; add byte ptr [rbp + 0x5d0775c0], al; ret; 
0x000000000006a585: adc al, 0; add rax, 4; test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000002cea8: adc al, 0x11; or byte ptr [rax], al; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000007af36: adc al, 0x24; add rsp, 0x28; ret; 
0x0000000000016904: adc al, 0x24; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001683b: adc al, 0x24; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000007b21e: adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000007aef5: adc al, 0x24; pop rcx; ret; 
0x000000000001eef7: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f09b: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f437: adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000022a97: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b0f: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22b1c; add rsp, 0x28; ret; 
0x000000000002332e: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023e9a: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000024068: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x24075; add rsp, 0x28; ret; 
0x000000000002a0f9: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000003fabb: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb1b: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3fb28; add rsp, 0x18; ret; 
0x0000000000043a9e: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000048456: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004c677: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6db: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d156: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d4: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df6e: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff5: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e053: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000005aa89: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005fd10: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5fd27; add rsp, 0x18; ret; 
0x0000000000060e85: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x60e95; add rsp, 0xd8; ret; 
0x00000000000671e5: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a5: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x672b5; add rsp, 0xd8; ret; 
0x0000000000075300: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075365: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75372; add rsp, 0x28; ret; 
0x0000000000050268: adc al, 0x39; cli; je 0x502c3; movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000050229: adc al, 0x39; ret 0x840f; 
0x0000000000060bab: adc al, 0x48; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f813: adc al, 0x48; lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000007446d: adc al, 0x48; lea esi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000075d6b: adc al, 0x48; lea esi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x000000000005b1a3: adc al, 0x48; mov eax, 0xfffffffe; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000016300: adc al, 0x48; mov eax, dword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000045183: adc al, 0x48; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000005c4d5: adc al, 0x48; movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005014b: adc al, 0x4c; mov eax, edi; syscall; 
0x0000000000050293: adc al, 0x4c; mov eax, edx; syscall; 
0x000000000006b464: adc al, 0x54; add byte ptr [rax], al; syscall; 
0x000000000006ae1d: adc al, 0x80; add rax, 1; cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006ae5d: adc al, 0x80; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x000000000006ae59: adc al, 0x86; mov dword ptr [r8 + rax*4], edx; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x0000000000046ad5: adc al, 0x89; ret 0xe283; 
0x0000000000055f65: adc al, 0x89; sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x000000000002b26b: adc al, 0x96; or byte ptr [rax], al; test al, al; jne 0x2b278; ret; 
0x0000000000015a6e: adc al, 0xa; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000007620c: adc al, 0xc6; mov rcx, qword ptr [rdi + 0x10]; add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x000000000002465f: adc al, 0xe8; add dword ptr [rax], eax; xor eax, eax; add rsp, 8; ret; 
0x0000000000016fbb: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d7e: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f8f: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x0000000000016bdb: adc al, 0xf3; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x000000000004cde8: adc al, 0xf; test dword ptr [rdi - 0x14000003], ebx; mov gs, eax; sub ah, byte ptr [rcx]; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000002413e: adc al, 1; add byte ptr [rax], al; syscall; 
0x000000000003ba75: adc al, 7; add bl, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; movd xmm0, edx; addss xmm0, xmm1; ret; 
0x0000000000075da8: adc al, byte ptr [rax + rax]; add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x00000000000484e7: adc al, byte ptr [rcx + rcx*8 - 0x7cb7cb8c]; ret; 
0x000000000006ec6c: adc al, byte ptr [rcx]; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000006de88: adc bh, byte ptr [rax + 0x8f]; mov rsi, r13; syscall; 
0x000000000006b20a: adc bh, byte ptr [rip - 0x6f990005]; endbr64; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x00000000000337d4: adc bl, bl; int1; jbe 0x337e0; fsubrp st(1); add rsp, 8; ret; 
0x00000000000253b5: adc bl, dh; movq mm2, qword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x00000000000197ab: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d78: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000016bd5: adc bl, dh; movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000253b4: adc bl, sil; movq mm2, qword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x000000000006d50d: adc byte ptr [r13 - 0x47e28b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000005d5c6: adc byte ptr [r14 + r10 + 0x48], r14b; lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000253b0: adc byte ptr [r15], cl; adc dword ptr [rax + 0x10], ecx; movdqu xmm2, xmmword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x000000000006f24e: adc byte ptr [r15], cl; adc dword ptr [rbx + 0x20], eax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000006b8cf: adc byte ptr [r15], r9b; adc dword ptr [rdi + 0x20], eax; ret; 
0x0000000000042fb2: adc byte ptr [r8 + 1], r9b; fmul dword ptr [rax - 0x7d]; ret; 
0x000000000002d26d: adc byte ptr [r8 - 0x7d], r9b; ret 0xdb02; 
0x000000000006be21: adc byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x000000000005d16a: adc byte ptr [r9 + 0x39], r9b; sal byte ptr [rdi + rcx + 0x4c], 0x29; ror byte ptr [rax - 0x77], 6; mov rax, r8; ret; 
0x0000000000056fdc: adc byte ptr [r9], sil; rol byte ptr [rbp - 0x7b], cl; ror byte ptr [rdi], 0x95; ret 0x8941; 
0x000000000004148d: adc byte ptr [rax + 0x10], bh; syscall; 
0x000000000006ec6a: adc byte ptr [rax + 0x112], bh; xor edi, edi; syscall; 
0x000000000005de62: adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x000000000004232b: adc byte ptr [rax + 0x39], cl; ret 0x840f; 
0x000000000005866a: adc byte ptr [rax + 0x39], cl; ret 0xf075; 
0x00000000000210d5: adc byte ptr [rax + 0x39], cl; ret; 
0x00000000000661ac: adc byte ptr [rax + 0x39], r9b; ret 0x840f; 
0x000000000005c5c7: adc byte ptr [rax + 0x4be04cc], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x0000000000034b48: adc byte ptr [rax + 0x5a], bl; add rsp, 0x48; fmulp st(1); ret; 
0x000000000004278d: adc byte ptr [rax + 0x63], cl; jg 0x427a2; mov eax, 0xa0; syscall; 
0x000000000005b5c7: adc byte ptr [rax + 0x81], bh; syscall; 
0x0000000000023b5c: adc byte ptr [rax + 0x9d], bh; syscall; 
0x0000000000042791: adc byte ptr [rax + 0xa0], bh; syscall; 
0x0000000000042791: adc byte ptr [rax + 0xa0], bh; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000006ff96: adc byte ptr [rax + 0xba], bh; syscall; 
0x0000000000042fb3: adc byte ptr [rax + 1], cl; fmul dword ptr [rax - 0x7d]; ret; 
0x0000000000061a5a: adc byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x1dd0442], cl; fstp xword ptr [rdi]; ret; 
0x00000000000754ac: adc byte ptr [rax + rax], al; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x000000000006d5b7: adc byte ptr [rax + rcx*2 - 0x75], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000002b851: adc byte ptr [rax - 0x39], cl; ret 0xffec; 
0x000000000006e3c7: adc byte ptr [rax - 0x40000001], bh; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000004ef8b: adc byte ptr [rax - 0x68], cl; ret; 
0x0000000000060bef: adc byte ptr [rax - 0x73], cl; add qword ptr [rax - 0x77], rcx; or eax, 0x536ad; mov byte ptr [rdx], dil; ret; 
0x000000000005f7df: adc byte ptr [rax - 0x73], cl; push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x5499d; movzx eax, byte ptr [rax]; ret; 
0x000000000006d2c2: adc byte ptr [rax - 0x75], cl; js 0x6d2cf; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x00000000000527bb: adc byte ptr [rax - 0x75], cl; or byte ptr [r8 + 1], r9b; fimul dword ptr [rax - 0x7d]; ret; 
0x0000000000047ff9: adc byte ptr [rax - 0x77], cl; in eax, 0x89; ret; 
0x000000000006d5a4: adc byte ptr [rax - 0x77], cl; js 0x6d621; ret; 
0x0000000000076215: adc byte ptr [rax - 0x7b], cl; leave; jne 0x761f0; ret; 
0x0000000000040537: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rdx + 0x48], cl; cmp edi, edx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000005595a: adc byte ptr [rax - 0x7d], cl; ret 0x4104; 
0x0000000000057b47: adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000007a02c: adc byte ptr [rax - 0x7d], cl; ret 0x7401; 
0x000000000002d26e: adc byte ptr [rax - 0x7d], cl; ret 0xdb02; 
0x00000000000482f0: adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000069817: adc byte ptr [rax - 0xc8affc8], al; sub rax, rdi; ret; 
0x000000000005bcb8: adc byte ptr [rax], al; add byte ptr [rax + 0x106], bh; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000007b37a: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; 
0x000000000007b37a: adc byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x000000000002b4f4: adc byte ptr [rax], al; add byte ptr [rax + 0xc], bh; mov rdi, rbp; syscall; 
0x000000000002b4ba: adc byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret; 
0x0000000000067b6a: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000073b61: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x44893040], cl; and al, 0x20; mov eax, 0xde; syscall; 
0x000000000006be22: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x000000000006e8ec: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006b9fd: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f647: adc byte ptr [rax], al; add byte ptr [rax], al; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000006e7d0: adc byte ptr [rax], al; add byte ptr [rax], al; mov eax, r8d; pop rbx; ret; 
0x000000000005c52a: adc byte ptr [rax], al; add byte ptr [rax], al; mov esi, 0x5413; syscall; 
0x000000000006b45f: adc byte ptr [rax], al; add byte ptr [rax], al; mov esi, 0x5414; syscall; 
0x000000000001f97c: adc byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000006e049: adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004148f: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006f020: adc byte ptr [rax], al; add byte ptr [rax], al; test eax, eax; cmovne eax, edx; ret; 
0x00000000000238ea: adc byte ptr [rax], al; add byte ptr [rax], al; xor esi, esi; syscall; 
0x00000000000238ea: adc byte ptr [rax], al; add byte ptr [rax], al; xor esi, esi; syscall; ret; 
0x000000000005d0a3: adc byte ptr [rax], al; setne al; ret; 
0x000000000005299b: adc byte ptr [rbp + 0x394f75c9], al; ret; 
0x0000000000042e58: adc byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000004bc52: adc byte ptr [rbp + 0x480974c0], al; add esp, 0x28; ret; 
0x00000000000337a9: adc byte ptr [rbp + 0x480a75c0], al; add esp, 8; ret; 
0x000000000006a8a3: adc byte ptr [rbp + 0xbad2], al; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000075998: adc byte ptr [rbp + rcx*4 + 0x24], cl; ret; 
0x000000000006d50e: adc byte ptr [rbp - 0x47e28b40], al; fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x00000000000553af: adc byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x4c7; 
0x000000000006bdb9: adc byte ptr [rbx + 0x16b801fe], al; add byte ptr [rax], al; add byte ptr [rdx + 0x5f], bh; cmove eax, edx; ret; 
0x000000000006d0df: adc byte ptr [rbx + 0x2507], cl; add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x0000000000053438: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000004e30d: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000049ec2: adc byte ptr [rbx + 0x71891872], cl; sbb byte ptr [rbx - 0x7cb7fe40], al; ret 0x441c; 
0x0000000000016c5c: adc byte ptr [rbx + 9], ah; add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x0000000000057396: adc byte ptr [rbx + rcx*4 + 0x40], al; cmp byte ptr [rax - 0x7d], cl; sar byte ptr [rax], 0x83; ret 0x4501; 
0x000000000005c9ac: adc byte ptr [rbx + rdi*8 - 0x79cb701], 0xb8; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000003a8f3: adc byte ptr [rbx - 0x22], bl; ret 0xc9d9; 
0x000000000006cba1: adc byte ptr [rbx - 0x72b3fbbf], cl; add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000052225: adc byte ptr [rbx - 0x76b7fe1d], al; out dx, eax; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000051561: adc byte ptr [rbx - 0x76f7dbb4], cl; ret 0xd1e9; 
0x0000000000061a83: adc byte ptr [rcx + 0x1634802], cl; mov qword ptr [rdi], rax; ret; 
0x00000000000619df: adc byte ptr [rcx + 0x18b4802], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061abf: adc byte ptr [rcx + 0x1b60f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a3b: adc byte ptr [rcx + 0x1b70f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a5e: adc byte ptr [rcx + 0x1dd0442], cl; fstp xword ptr [rdi]; ret; 
0x000000000001b22b: adc byte ptr [rcx + 0x348d42ea], cl; xor byte ptr [rcx], dh; ret 0xf231; 
0x000000000005d16b: adc byte ptr [rcx + 0x39], cl; sal byte ptr [rdi + rcx + 0x4c], 0x29; ror byte ptr [rax - 0x77], 6; mov rax, r8; ret; 
0x0000000000061aa3: adc byte ptr [rcx + 0x48018b02], cl; mov dword ptr [rdi], eax; ret; 
0x0000000000073a18: adc byte ptr [rcx + 0x48182454], cl; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x00000000000704aa: adc byte ptr [rcx + 1], 0; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000007b3f0: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; 
0x000000000007b3f0: adc byte ptr [rcx + rcx*4 + 0x5c], cl; and al, 8; syscall; ret; 
0x00000000000406b0: adc byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000002b314: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000001b2dc: adc byte ptr [rcx - 0x3f], al; ret 0x890a; 
0x000000000001b303: adc byte ptr [rcx - 0x3f], al; ret; 
0x000000000007444f: adc byte ptr [rcx - 0x75], cl; jo 0x7445c; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005e329: adc byte ptr [rcx - 0x75], cl; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000005cc16: adc byte ptr [rcx - 0x75], cl; push rbp; or byte ptr [rax + 0x63], cl; fisttp qword ptr [rax + 0x29]; ret 0x149; 
0x000000000005e328: adc byte ptr [rcx - 0x75], r9b; mov rdx, r12; mov rsi, r13; call rax; 
0x0000000000016fb7: adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000017f8b: adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x0000000000063461: adc byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rbp - 0x77], al; ret 0x5e9; 
0x00000000000241dc: adc byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x0000000000048612: adc byte ptr [rcx], cl; clc; ret; 
0x000000000006010a: adc byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000001b03b: adc byte ptr [rcx], dh; ret 0xfa21; 
0x0000000000056fdd: adc byte ptr [rcx], dh; rol byte ptr [rbp - 0x7b], cl; ror byte ptr [rdi], 0x95; ret 0x8941; 
0x000000000005d147: adc byte ptr [rcx], dh; ror byte ptr [rax - 0x7b], 0xd2; je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x00000000000253b1: adc byte ptr [rdi], cl; adc dword ptr [rax + 0x10], ecx; movdqu xmm2, xmmword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x000000000006f24f: adc byte ptr [rdi], cl; adc dword ptr [rbx + 0x20], eax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000006b8d0: adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], eax; ret; 
0x0000000000033e28: adc byte ptr [rdi], cl; xchg eax, ebp; ret 0xe083; 
0x00000000000697d1: adc byte ptr [rdx + rdx*8 - 0x76b7158b], al; ret; 
0x0000000000039fbf: adc byte ptr [rdx], al; add byte ptr [rax + 1], cl; ret 0xc148; 
0x0000000000019b6e: adc byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000002efb4: adc byte ptr [rip + 0x280f0008], al; ret; 
0x000000000003cb44: adc byte ptr [rip + 0x71886], al; test rax, rax; je 0x3cb60; ret; 
0x000000000003ba3f: adc byte ptr [rip + 0x73a7b], al; ret; 
0x000000000003a423: adc byte ptr [rip + 0x73bdf], al; divsd xmm0, xmm1; ret; 
0x000000000003cbac: adc byte ptr [rip + 0x73eea], al; test eax, eax; je 0x3cbd0; ret; 
0x00000000000399d2: adc byte ptr [rip + 0x74630], al; divsd xmm0, xmm1; ret; 
0x000000000003a956: adc byte ptr [rip + 0x7464c], al; ret; 
0x000000000003a966: adc byte ptr [rip + 0x74be4], al; ret; 
0x000000000003a492: adc byte ptr [rip + 0x76574], al; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b91: adc byte ptr [rip + 0x76e75], al; divss xmm0, xmm1; ret; 
0x00000000000366fa: adc byte ptr [rip + 0x77700], al; divsd xmm0, xmm1; ret; 
0x000000000003655a: adc byte ptr [rip + 0x778a0], al; add rsp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x00000000000365e2: adc byte ptr [rip + 0x77a20], al; divsd xmm0, qword ptr [rip + 0x77830]; ret; 
0x0000000000036f9a: adc byte ptr [rip + 0x78520], al; divss xmm0, xmm1; ret; 
0x0000000000036e09: adc byte ptr [rip + 0x786b1], al; add rsp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x00000000000365d5: adc byte ptr [rip + 0x78715], al; divsd xmm0, xmm1; ret; 
0x0000000000035602: adc byte ptr [rip + 0x787f8], al; divsd xmm0, xmm1; ret; 
0x00000000000354fa: adc byte ptr [rip + 0x78b08], al; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000035e5a: adc byte ptr [rip + 0x79660], al; divss xmm0, xmm1; ret; 
0x0000000000036e8a: adc byte ptr [rip + 0x79b7c], al; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000036e79: adc byte ptr [rip + 0x7a099], al; divss xmm0, xmm1; ret; 
0x00000000000338cd: adc byte ptr [rip + 0x7a735], al; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000035d5a: adc byte ptr [rip + 0x7acac], al; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x00000000000319ea: adc byte ptr [rip + 0x7c410], dl; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003192e: adc byte ptr [rip + 0x7c4dc], dl; subsd xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000319cf: adc byte ptr [rip + 0x7c93b], dl; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000031956: adc byte ptr [rip + 0x7c9b4], dl; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031992: adc byte ptr [rip + 0x7cc18], dl; mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x00000000000316c7: adc byte ptr [rip + 0x7cd8b], cl; add rsp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003100b: adc byte ptr [rip + 0x7cdef], al; add rsp, 0x18; ret; 
0x000000000003397a: adc byte ptr [rip + 0x7d08c], al; ret; 
0x0000000000030af2: adc byte ptr [rip + 0x7d308], al; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000003201a: adc byte ptr [rip + 0x7d4a0], dl; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f76: adc byte ptr [rip + 0x7d54c], dl; subss xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000030acd: adc byte ptr [rip + 0x7d8fd], al; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000310d9: adc byte ptr [rip + 0x7e3e1], al; add rsp, 0x28; ret; 
0x000000000002fe0c: adc byte ptr [rip + 0x7e566], dl; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000030b7a: adc byte ptr [rip + 0x7e940], al; ret; 
0x0000000000031fd2: adc byte ptr [rip + 0x7ea50], dl; mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000031fff: adc byte ptr [rip + 0x7ea7b], dl; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f9e: adc byte ptr [rip + 0x7eadc], dl; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x0000000000031d16: adc byte ptr [rip + 0x7edb8], cl; add rsp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ee92: adc byte ptr [rip + 0x7f458], al; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002eb2a: adc byte ptr [rip + 0x7f4d8], cl; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002edd8: adc byte ptr [rip + 0x7f512], al; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x0000000000030b60: adc byte ptr [rip + 0x7ff36], al; test eax, eax; jns 0x30b70; ret; 
0x000000000002ffd6: adc byte ptr [rip + 0x80a70], cl; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002d112: adc byte ptr [rip + 0x80ce8], al; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002f0ca: adc byte ptr [rip + 0x81958], al; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002f0b4: adc byte ptr [rip + 0x81972], al; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000002ef84: adc byte ptr [rip + 0x81a9e], al; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002d142: adc byte ptr [rip + 0x82378], al; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x00000000000167bb: adc byte ptr [rip + 0x97637], al; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000048674: adc byte ptr [rip + 0xbf], bh; mov eax, edx; cmova eax, edi; ret; 
0x000000000002544c: adc byte ptr [rip - 0x48f0fff8], al; add al, 0x50; ret; 
0x000000000005d5c7: adc byte ptr [rsi + rdx + 0x48], dh; lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000002e708: adc byte ptr [rsi - 0x3f], ah; call 0xffffffffc0b9f61f; ret; 
0x000000000003aa12: adc byte ptr [rsp + 0xc], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000068105: adc byte ptr [rsp + 0xc], al; add rsp, 0x18; ret; 
0x000000000003af1f: adc byte ptr [rsp + 0xc], cl; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b006: adc byte ptr [rsp + 0xc], cl; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x00000000000349f9: adc byte ptr [rsp + 0xc], dl; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x000000000003a9c2: adc byte ptr [rsp + 8], al; add rsp, 0x10; pop rbx; ret; 
0x0000000000068128: adc byte ptr [rsp + 8], al; add rsp, 0x18; ret; 
0x000000000003adb6: adc byte ptr [rsp + 8], al; add rsp, 0x20; pop rbx; ret; 
0x00000000000348fe: adc byte ptr [rsp + 8], bh; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000017edb: adc byte ptr [rsp + 8], cl; add rsp, 0x28; ret; 
0x000000000003285c: adc byte ptr [rsp - 0x18], cl; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003ba38: adc byte ptr [rsp - 0xc], al; ret; 
0x000000000002d150: adc byte ptr [rsp - 4], al; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000017e6c: adc byte ptr [rsp - 4], al; ret; 
0x000000000002d24a: adc byte ptr [rsp - 4], cl; mulss xmm0, xmm1; ret; 
0x000000000002d120: adc byte ptr [rsp - 8], al; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000001846c: adc byte ptr [rsp - 8], al; ret; 
0x000000000002d21c: adc byte ptr [rsp - 8], cl; mulsd xmm0, xmm1; ret; 
0x0000000000017bc4: adc byte ptr [rsp], cl; add rsp, 0x10; pop rbx; ret; 
0x00000000000175a5: adc byte ptr [rsp], cl; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x000000000004de91: adc ch, bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000023d08: adc ch, byte ptr [rax]; syscall; 
0x0000000000023d08: adc ch, byte ptr [rax]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004860f: adc cl, al; out 0x10, eax; or eax, edi; ret; 
0x000000000001ea5a: adc cl, bl; add al, 0; nop; endbr64; mov rax, qword ptr [rdi]; ret; 
0x00000000000171f4: adc cl, bl; and al, 0x10; add rsp, 0x48; fxch st(1); ret; 
0x00000000000311df: adc cl, bl; call 0x28c7952e; ret; 
0x00000000000394cd: adc cl, bl; insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000002087e: adc cl, bl; rcr bl, 0x3c; and al, 0xdb; jl 0x208ab; xor al, ch; ret; 
0x0000000000034ae8: adc cl, bl; ret 0xc9d8; 
0x0000000000023162: adc cl, byte ptr [rax + 0x29]; ret 0x6948; 
0x000000000005ab01: adc cl, byte ptr [rax + 0x29]; ret 0xb848; 
0x000000000006f535: adc cl, byte ptr [rax - 0x73]; je 0x6f55e; or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000059bad: adc cl, byte ptr [rax - 0x77]; out dx, eax; call 0x21bc0; pop rbp; ret; 
0x000000000005f18d: adc cl, byte ptr [rax - 0x7d]; rol byte ptr [rcx], 0x48; mov dword ptr [rdi + 0x80], eax; xor eax, eax; ret; 
0x000000000005dc05: adc cl, byte ptr [rbx - 0x3f7a87b9]; js 0x5dc3a; add rsp, 0x10; pop rbp; ret; 
0x000000000002a10a: adc cl, byte ptr [rsi - 1]; jmp qword ptr [rsi - 0x70]; 
0x000000000004f652: adc cl, cl; ret; 
0x000000000006c3e3: adc dh, al; add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000003a887: adc dh, bl; rcr ebx, 0x3f; pop rbx; ret; 
0x000000000001fc40: adc dh, byte ptr [rcx]; rol byte ptr [rcx + 0x400fa], 0; sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x0000000000059d47: adc dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call rax; 
0x0000000000034ba3: adc dl, bl; leave; fstp st(1); add rsp, 0x48; ret; 
0x000000000006b8aa: adc dl, byte ptr [rsi]; add byte ptr [rax], al; nop; endbr64; ret; 
0x00000000000253b3: adc dword ptr [rax + 0x10], ecx; movdqu xmm2, xmmword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x00000000000253bc: adc dword ptr [rax + 0x20], edx; pop rbx; ret; 
0x0000000000070cf2: adc dword ptr [rax + 0x29], ecx; ret 0x6948; 
0x000000000006aa2f: adc dword ptr [rax + 0x39], ecx; ret; 
0x0000000000023fbb: adc dword ptr [rax + 0x48], edi; mov esi, 2; mov edx, 1; syscall; 
0x0000000000036f13: adc dword ptr [rax + 0xff30007], esp; pop rcx; ret; 
0x000000000004c2be: adc dword ptr [rax + 1], ecx; ret 0x28b; 
0x00000000000786ae: adc dword ptr [rax + 3], ecx; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000007097d: adc dword ptr [rax - 0x7d], ecx; ret 0x8d01; 
0x0000000000026a6e: adc dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; add byte ptr [r14 - 0x3f], r12b; ret 0x4908; 
0x000000000002cea9: adc dword ptr [rax], ecx; add dl, dh; mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000754ab: adc dword ptr [rax], edx; add al, 0; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x0000000000037b9e: adc dword ptr [rbp + 0x660d74c0], eax; pxor mm0, mm0; divss xmm0, xmm0; ret; 
0x0000000000025442: adc dword ptr [rbp - 0xff70], ecx; dec dword ptr [rax - 0x73]; add eax, 0x80510; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000006f24d: adc dword ptr [rbx + 0x10], eax; movups xmmword ptr [rbx + 0x20], xmm0; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000006f251: adc dword ptr [rbx + 0x20], eax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000002bbcd: adc dword ptr [rbx + rcx*4 + 0x57], ecx; and byte ptr [rcx - 9], cl; ret 0xf000; 
0x00000000000547c1: adc dword ptr [rbx - 0x41f0df36], eax; ret 0x508d; 
0x00000000000704a4: adc dword ptr [rbx - 0x6f72fe01], eax; adc byte ptr [rcx + 1], 0; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000071d5b: adc dword ptr [rcx + rcx*4 - 0x38], eax; add rsp, 0x28; ret; 
0x000000000006e76a: adc dword ptr [rcx], eax; add byte ptr [rax], al; mov esi, 0x18; lea rdi, [r9 + 0x88]; syscall; 
0x000000000006d44b: adc dword ptr [rcx], eax; add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000005ed9f: adc dword ptr [rcx], esi; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000006be9c: adc dword ptr [rdi + 0x10], eax; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b989: adc dword ptr [rdi + 0x10], eax; mov dword ptr [rdi], esi; ret; 
0x000000000006b8ce: adc dword ptr [rdi + 0x10], eax; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x000000000006b8d2: adc dword ptr [rdi + 0x20], eax; ret; 
0x000000000005097e: adc dword ptr [rdi + 0x48], esp; movups xmmword ptr [rdi + 0x58], xmm5; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000050982: adc dword ptr [rdi + 0x58], ebp; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000050986: adc dword ptr [rdi + 0x68], esi; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x000000000005098a: adc dword ptr [rdi + 0x78], edi; ret; 
0x00000000000509da: adc dword ptr [rdi + 0xc8], esp; movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e1: adc dword ptr [rdi + 0xd8], ebp; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e8: adc dword ptr [rdi + 0xe8], esi; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509ef: adc dword ptr [rdi + 0xf8], edi; ret; 
0x000000000003cc3d: adc dword ptr [rdi], eax; add byte ptr [rax - 0x7b], cl; sar byte ptr [rax + 0x46], cl; ret; 
0x000000000003cc83: adc dword ptr [rdi], eax; add byte ptr [rax - 0x7b], cl; sar byte ptr [rcx - 0x46], cl; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cc65: adc dword ptr [rdi], eax; add dl, dh; movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000003a7e2: adc dword ptr [rdi], eax; and edx, 0x80000000; movd xmm0, edx; ret; 
0x000000000003a7d0: adc dword ptr [rdi], eax; cmp ecx, 0x80; jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x000000000003a742: adc dword ptr [rdi], eax; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000006be99: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b986: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi], esi; ret; 
0x000000000006b8cb: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x0000000000015e3c: adc dword ptr [rdx], ecx; add byte ptr [rbp + 0x440d75c0], al; mov eax, esp; pop r12; ret; 
0x000000000005083e: adc dword ptr [rsi + 0x40], esp; movups xmmword ptr [rsi + 0x50], xmm5; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000050842: adc dword ptr [rsi + 0x50], ebp; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000050846: adc dword ptr [rsi + 0x60], esi; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000005084a: adc dword ptr [rsi + 0x70], edi; ret; 
0x000000000004b10b: adc dword ptr [rsi], edi; std; call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; 
0x000000000004b10b: adc dword ptr [rsi], edi; std; call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; ret; 
0x0000000000016bd2: adc dword ptr [rsp + 0x10], ecx; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000197ae: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d7b: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000016bd8: adc dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000003ae60: adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x000000000003afb7: adc dword ptr [rsp + 0x1c], eax; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000177cb: adc dword ptr [rsp + 0x1c], eax; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000310d3: adc dword ptr [rsp + 0x1c], eax; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000019bfe: adc dword ptr [rsp + 0x1d0], eax; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c06: adc dword ptr [rsp + 0x1e0], eax; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c0e: adc dword ptr [rsp + 0x1f0], eax; syscall; 
0x000000000001f549: adc dword ptr [rsp + 0x20], eax; mov rdi, r8; syscall; 
0x00000000000190ef: adc dword ptr [rsp + 0x20], eax; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000190f5: adc dword ptr [rsp + 0x24], ebx; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000003a9b7: adc dword ptr [rsp + 8], eax; call 0x7ae8e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000031005: adc dword ptr [rsp + 8], eax; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000017ac5: adc dword ptr [rsp + 8], ecx; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000032866: adc dword ptr [rsp - 0x10], ecx; ret; 
0x000000000003ab56: adc dword ptr [rsp - 0x10], edx; ret; 
0x0000000000032856: adc dword ptr [rsp - 0x18], edx; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000034d68: adc dword ptr [rsp - 0xc], eax; ret; 
0x000000000003ba32: adc dword ptr [rsp - 0xc], ecx; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000003abf2: adc dword ptr [rsp - 4], eax; movaps xmm0, xmm1; ret; 
0x000000000003f39e: adc dword ptr [rsp - 4], eax; movd xmm0, eax; ret; 
0x0000000000030b5a: adc dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d14a: adc dword ptr [rsp - 4], eax; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000003395a: adc dword ptr [rsp - 4], eax; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x0000000000034c5e: adc dword ptr [rsp - 4], eax; ret; 
0x000000000007a6f9: adc dword ptr [rsp - 4], ebp; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000002d244: adc dword ptr [rsp - 4], ecx; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000003326e: adc dword ptr [rsp - 4], ecx; ret; 
0x000000000003cd1a: adc dword ptr [rsp - 4], edx; ret; 
0x0000000000030b44: adc dword ptr [rsp - 8], eax; movd xmm0, ecx; ret; 
0x000000000003f353: adc dword ptr [rsp - 8], eax; movq xmm0, rax; ret; 
0x000000000002d11a: adc dword ptr [rsp - 8], eax; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000338f2: adc dword ptr [rsp - 8], ecx; movapd xmm0, xmm2; ret; 
0x000000000002d216: adc dword ptr [rsp - 8], ecx; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000030ad5: adc dword ptr [rsp - 8], ecx; ret; 
0x000000000003ab01: adc dword ptr [rsp - 8], edx; ret; 
0x000000000007a6f3: adc dword ptr [rsp - 8], esp; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001836e: adc dword ptr [rsp], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000017bba: adc dword ptr [rsp], ecx; call 0x32690; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000006e8ea: adc eax, 0x10ba; add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000045c56: adc eax, 0x28c48348; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000003ac2a: adc eax, 0x30246cdb; fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x000000000006b822: adc eax, 0x3944178b; retf 0xe674; ret; 
0x000000000005103d: adc eax, 0x48000002; add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000075272: adc eax, 0x48106b89; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000006d205: adc eax, 0x49d46; test edx, edx; jne 0x6d210; ret; 
0x000000000006a1f4: adc eax, 0x4cc5f; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000060be9: adc eax, 0x536b2; je 0x60c00; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060ba5: adc eax, 0x536f6; je 0x60bc0; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f81a: adc eax, 0x54969; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e6: adc eax, 0x5499d; movzx eax, byte ptr [rax]; ret; 
0x0000000000039bf5: adc eax, 0x74226; movapd xmm0, xmm2; ret; 
0x0000000000039e0e: adc eax, 0x756bd; movaps xmm0, xmm2; ret; 
0x00000000000432f8: adc eax, 0x75c08400; ret 0x58e9; 
0x0000000000033593: adc eax, 0x7bf40; movaps xmm0, xmm2; ret; 
0x00000000000319eb: adc eax, 0x7c410; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003192f: adc eax, 0x7c4dc; subsd xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031810: adc eax, 0x7c5eb; divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x00000000000319d0: adc eax, 0x7c93b; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000031957: adc eax, 0x7c9b4; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031993: adc eax, 0x7cc18; mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x000000000003195f: adc eax, 0x7cc4c; movapd xmm0, xmm2; ret; 
0x000000000002fc4f: adc eax, 0x7d30c; add rsp, 0x18; movapd xmm0, xmm2; pop rbx; pop rbp; ret; 
0x000000000003201b: adc eax, 0x7d4a0; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f77: adc eax, 0x7d54c; subss xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031e5f: adc eax, 0x7d65c; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002fe0d: adc eax, 0x7e566; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000031fd3: adc eax, 0x7ea50; mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000032000: adc eax, 0x7ea7b; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031fa7: adc eax, 0x7ea7c; movaps xmm0, xmm2; ret; 
0x0000000000031f9f: adc eax, 0x7eadc; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x000000000002f6be: adc eax, 0x7fdfd; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002cea7: adc eax, 0x81114; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000005ef4a: adc eax, 0x8538b48; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000002a24d: adc eax, 0x87e4c; test rax, rax; cmove rax, rdx; ret; 
0x000000000001ad94: adc eax, 0x89138800; ret 0xeac1; 
0x0000000000022224: adc eax, 0x8bce7; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000016883: adc eax, 0x966d8; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000001b2e6: adc eax, 0x9d2f700; ret 0x3144; 
0x000000000003f8f2: adc eax, 0xc0ef0f66; add rsp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x000000000002ff47: adc eax, 0xe90007d0; ret 0xfffe; 
0x00000000000365d7: adc eax, 0xf2000787; divps xmm0, xmm1; ret; 
0x000000000005d37a: adc eax, 0xf631d231; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000043f3a: adc eax, 0xffbe0f40; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000005cae8: adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x000000000006a54c: adc eax, dword ptr [rbp - 0x7b]; sal byte ptr [rbp - 0x1a], 0xf7; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x00000000000724f4: adc eax, dword ptr [rbx - 0x77cfe40]; xor eax, 0xa7840f; add byte ptr [rax], al; ret; 
0x0000000000024021: adc eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000067b03: adc eax, esi; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000067b02: adc eax, r14d; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000024e68: adc ebp, ecx; ret 0; 
0x000000000004dd33: adc ebp, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000000604bc: adc ebx, dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000003475b: adc ebx, ebx; insb byte ptr [rdi], dx; and al, 0x30; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x000000000006aa8f: adc ecx, dword ptr [rax + 0x39]; ret; 
0x000000000004053c: adc ecx, dword ptr [rax + 0x39]; xlatb; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000006c3cc: adc ecx, dword ptr [rax + 0x63]; js 0x6c401; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000006c3cc: adc ecx, dword ptr [rax + 0x63]; js 0x6c401; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000006f487: adc ecx, dword ptr [rax + 0x63]; mov eax, 0x90; mov rdx, rbp; syscall; 
0x000000000003fccc: adc ecx, dword ptr [rax - 0x77]; ret 0x8348; 
0x0000000000076788: adc ecx, dword ptr [rax - 0x77]; ret 0xe281; 
0x000000000005c107: adc ecx, dword ptr [rax - 0x7b]; ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x0000000000075abc: adc ecx, dword ptr [rax - 0x7d]; ret 0x4501; 
0x00000000000743a4: adc ecx, dword ptr [rcx + 0x63]; stc; call 0x21bc0; add rsp, 8; ret; 
0x000000000004863c: adc ecx, dword ptr [rdi]; mov bh, 0xc7; cmp edx, 0xbf; movzx edi, dil; cmova eax, edi; ret; 
0x0000000000039489: adc edi, dword ptr [rax]; add byte ptr [rax], al; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x000000000003d413: adc edi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000003db60: adc edi, esi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c52f: adc edx, dword ptr [rax + rax]; syscall; 
0x000000000003ddc7: adc esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000006be6d: adc esi, edi; ret 0xffff; 
0x0000000000062124: add ah, bl; ret; 
0x0000000000062ff8: add ah, byte ptr [rdi + rcx]; test byte ptr [rax], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000021623: add al, 0; add bl, ch; ret; 
0x000000000004761a: add al, 0; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x000000000006ebe2: add al, 0; add byte ptr [rax], al; add byte ptr [rsi + 6], bh; syscall; 
0x000000000002cfdb: add al, 0; add byte ptr [rax], al; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d038: add al, 0; add byte ptr [rax], al; cmp eax, 0xff; je 0x2d050; mov eax, r8d; ret; 
0x000000000001f9b0: add al, 0; add byte ptr [rax], al; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000004c5e7: add al, 0; add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074db6: add al, 0; add byte ptr [rax], al; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000023ff6: add al, 0; add byte ptr [rax], al; mov edx, 0x800; syscall; 
0x0000000000050122: add al, 0; add byte ptr [rax], al; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000005be21: add al, 0; add byte ptr [rax], al; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005bcee: add al, 0; add byte ptr [rax], al; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000005c5cc: add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005ec4f: add al, 0; add byte ptr [rax], al; movsxd rdx, ebx; syscall; 
0x00000000000745fc: add al, 0; add byte ptr [rax], al; syscall; 
0x000000000003a72a: add al, 0; add byte ptr [rbp + 0x15], dh; movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000004c310: add al, 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000001f92c: add al, 0; add byte ptr [rcx + rcx*4 - 0x2e], cl; mov rax, r8; syscall; 
0x000000000003b497: add al, 0; add byte ptr [rcx], ch; ror dword ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000060eab: add al, 0; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x000000000002f195: add al, 0; add byte ptr [rsi + 0x16], dh; call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x0000000000037ea8: add al, 0; add byte ptr [rsi + 0xf], ah; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x0000000000075da9: add al, 0; add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000002f336: add al, 0; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x00000000000199dd: add al, 0; add rsp, 8; add eax, 1; cdqe; ret; 
0x000000000001f677: add al, 0; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000006a1f7: add al, 0; add rsp, 8; pop rbp; pop r12; ret; 
0x00000000000719f0: add al, 0; call 0x6b570; mov rax, r12; pop r12; ret; 
0x000000000006fc05: add al, 0; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x0000000000070118: add al, 0; call rax; 
0x0000000000070376: add al, 0; cmp eax, 1; je 0x70380; ret; 
0x000000000003aa5b: add al, 0; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000070369: add al, 0; mov eax, 0xffffffff; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x00000000000762ef: add al, 0; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000006bd21: add al, 0; mov qword ptr [rbx + 8], rax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x00000000000762e8: add al, 0; mov qword ptr [rip + 0x40c1f], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000006d1d3: add al, 0; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000021ff4: add al, 0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000003a9be: add al, 0; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000003aa0e: add al, 0; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000001ea5c: add al, 0; nop; endbr64; mov rax, qword ptr [rdi]; ret; 
0x000000000006767c: add al, 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000006d1ef: add al, 0; ret; 
0x000000000006ff91: add al, 0; test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x00000000000754ad: add al, 0; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x000000000006d208: add al, 0; test edx, edx; jne 0x6d210; ret; 
0x0000000000071e14: add al, 0; test rax, rax; je 0x71e26; call rax; 
0x000000000001e0f0: add al, 0; test rax, rax; setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000001f7d9: add al, 0; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000488d5: add al, 0x10; cmp cl, byte ptr [rax + 0x63]; ret 0x518d; 
0x000000000003fcdc: add al, 0x13; pop rbx; ret; 
0x0000000000069a74: add al, 0x1c; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018374: add al, 0x24; add rsp, 0x18; ret; 
0x000000000001690d: add al, 0x24; add rsp, 0x20; pop rbx; ret; 
0x0000000000016844: add al, 0x24; add rsp, 0x28; ret; 
0x0000000000070111: add al, 0x24; lea r12, [rip + 0x462a6]; call rax; 
0x0000000000045ace: add al, 0x24; lea rdx, [r14 + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x0000000000041aca: add al, 0x24; mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x0000000000015b5f: add al, 0x24; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000006ffa9: add al, 0x24; mov rdi, r12; call rax; 
0x000000000001836f: add al, 0x24; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x00000000000428c3: add al, 0x24; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000069453: add al, 0x24; test al, al; jne 0x69448; mov rax, r12; pop r12; ret; 
0x000000000001f467: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x000000000006fe5d: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x00000000000235e7: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006d5bb: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005ada3: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000007af79: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000006f117: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000022465: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22475; add rsp, 0xd8; ret; 
0x00000000000227f5: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b5: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000030c82: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dc0: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312ae: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032945: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a08: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032afa: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5ea: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c62a: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d373: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbcb: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e184: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a3: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e36b: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8a8: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000042cd7: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f50: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42f60; add rsp, 0xd8; ret; 
0x000000000004f3c8: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f3d5; add rsp, 0x18; ret; 
0x000000000002374c: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x00000000000746af: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000703ca: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000007440e: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000040695: add al, 0x31; imul al; ret; 
0x0000000000072593: add al, 0x31; rol byte ptr [rcx - 0x5c28f401], 0; setb al; add eax, 0x34; ret; 
0x00000000000528a2: add al, 0x39; ret 0x397d; 
0x000000000002fe4b: add al, 0x39; ret 0x5872; 
0x00000000000354d8: add al, 0x40; add byte ptr [rax], al; mulsd xmm0, qword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000036f8f: add al, 0x48; add esp, 0x18; ret; 
0x000000000005a34d: add al, 0x48; mov dword ptr [rax + 8], edi; ret; 
0x000000000005a37f: add al, 0x48; mov dword ptr [rdx + 8], eax; test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x000000000007525b: add al, 0x48; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x000000000004eef1: add al, 0x48; or eax, edx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000002abf6: add al, 0x48; sub edx, 1; cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x0000000000074469: add al, 0x49; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000004c5cd: add al, 0x4c; mov eax, eax; syscall; 
0x0000000000074da0: add al, 0x4c; mov eax, ecx; syscall; 
0x0000000000025452: add al, 0x50; ret; 
0x0000000000070717: add al, 0x5b; pop rbp; ret; 
0x000000000002a912: add al, 0x66; mov dword ptr [rdx - 2], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000034006: add al, 0x66; movaps xmm0, xmm1; ret; 
0x0000000000034156: add al, 0x66; movaps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000019a46: add al, 0x70; ret; 
0x000000000004068f: add al, 0x74; int 0x8b; jl 0x406b9; add al, 0x31; imul al; ret; 
0x00000000000438f8: add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000006e82d: add al, 0x74; sahf; mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000005c5c5: add al, 0x75; adc byte ptr [rax + 0x4be04cc], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000005d07b: add al, 0x75; or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x000000000004213f: add al, 0x80; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000070a20: add al, 0x80; cmp byte ptr [rdi], ch; je 0x70b1a; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x000000000006a483: add al, 0x83; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a453: add al, 0x83; pop rbx; pop rbp; ret; 
0x000000000006a517: add al, 0x83; pop rbx; ret; 
0x000000000002db2f: add al, 0x83; ret 0x4501; 
0x000000000002aa5b: add al, 0x84; ret 0x840f; 
0x00000000000607aa: add al, 0x85; ror byte ptr [rcx - 0x7477f03e], 0; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000006a696: add al, 0x85; sal byte ptr [rbp - 0xb], cl; sub rax, rdi; sar rax, 2; ret; 
0x000000000006a58a: add al, 0x85; sal byte ptr [rbp - 0xf], cl; mov rax, r8; ret; 
0x000000000006cba8: add al, 0x85; sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x000000000006e9d3: add al, 0x85; test byte ptr [rdi], 0x95; ret; 
0x000000000001bcb9: add al, 0x89; ret 0xc189; 
0x000000000006e528: add al, 0x89; ret 0xe281; 
0x00000000000276c0: add al, 0xa; add byte ptr [rax - 0x7d], cl; ret 0xc604; 
0x0000000000074472: add al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000073a24: add al, 0xb8; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000025ae1: add al, 0xbb; ret; 
0x000000000005c5ca: add al, 0xbe; add al, 0; add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000004213b: add al, 0xbe; xor byte ptr [rsp + rax - 0x80], dl; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000006ba05: add al, 0xc1; call 0x1e73d10; ret; 
0x000000000007af73: add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006b7ea: add al, 0xca; ret; 
0x000000000002a2a0: add al, 0xcb; or byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000559fa: add al, 0xeb; fiadd word ptr [rbp - 0x7b]; in al, 0xf; xchg eax, ebp; ret 0xd3e9; 
0x000000000006b874: add al, 0xf0; dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000016909: add al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000016840: add al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x28; ret; 
0x000000000001836b: add al, 0xf3; movups xmmword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000006df08: add al, 0xf8; ret; 
0x000000000004bd99: add al, 0xf; xchg eax, esi; ret 0xf980; 
0x000000000001dce9: add al, 0xf; xchg eax, esi; rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000006e98c: add al, 0xf; xchg eax, esp; ret 0xc085; 
0x0000000000063302: add al, 1; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000747e4: add al, 1; add byte ptr [rax], al; syscall; 
0x000000000001ddb4: add al, 1; mov ecx, edi; sar eax, cl; and eax, 1; ret; 
0x000000000003aa5a: add al, 4; add bl, bl; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x000000000003aa0d: add al, 4; add bl, dh; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000003a9bd: add al, 4; add dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000001e550: add al, 6; sar eax, cl; and eax, 1; add eax, 1; ret; 
0x000000000005206d: add al, 9; ret 0xc883; 
0x000000000003221d: add al, bl; ret 0xcad8; 
0x0000000000039073: add al, bl; ret; 
0x0000000000021a9a: add al, byte ptr [r9 - 0x3a]; add dh, byte ptr [rax]; mov byte ptr [r8 + rax], 0; ret; 
0x000000000004593f: add al, byte ptr [rax + rax*8 + 0x2948dc75]; cli; lea eax, [rdx + 1]; ret; 
0x000000000001ed08: add al, byte ptr [rax - 0x72b80000]; cmp eax, 0x93499; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x0000000000050b15: add al, byte ptr [rax]; add al, ch; ret; 
0x000000000004c993: add al, byte ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x00000000000296ec: add al, byte ptr [rax]; add byte ptr [rax - 0x76b7d6c8], al; ret 0x850f; 
0x000000000002a679: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000002509e: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000432ed: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x00000000000757d2: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x00000000000469f7: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x46710; add rsp, 0x18; ret; 
0x000000000001ece6: add al, byte ptr [rax]; add byte ptr [rax], al; mov dword ptr [rsp + 8], 1; syscall; 
0x0000000000045188: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000001eab0: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xda; lea rdi, [rip + 0x98490]; syscall; 
0x000000000001fa0b: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x0000000000074d8f: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r9; syscall; 
0x0000000000050168: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743be: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb26: add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; syscall; 
0x0000000000048fa5: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000002d06a: add al, byte ptr [rax]; add byte ptr [rax], al; sbb r8d, -1; mov eax, r8d; ret; 
0x000000000005abf5: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005b813: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x000000000005abf5: add al, byte ptr [rax]; add byte ptr [rax], al; syscall; ret; 
0x00000000000702ae: add al, byte ptr [rax]; add byte ptr [rax], al; test eax, eax; cmovne eax, edx; add rsp, 8; ret; 
0x000000000004055b: add al, byte ptr [rax]; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x000000000006d53a: add al, byte ptr [rax]; add byte ptr [rax], al; xor edx, edx; mov r10d, 8; syscall; 
0x000000000004710e: add al, byte ptr [rax]; add byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x000000000005b7ae: add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004c8e3: add al, byte ptr [rax]; add byte ptr [rbx - 0x7aabdb8c], cl; test byte ptr [rdi], 0x84; ret 2; 
0x0000000000066f71: add al, byte ptr [rax]; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000038027: add al, byte ptr [rax]; add byte ptr [rcx - 0x7f], al; cld; ret; 
0x0000000000042c54: add al, byte ptr [rax]; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004f382: add al, byte ptr [rax]; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000003fc76: add al, byte ptr [rax]; lea rax, [rip + 0x7739f]; ret; 
0x00000000000438c3: add al, byte ptr [rax]; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000059c1f: add al, byte ptr [rax]; mov eax, r12d; pop r12; ret; 
0x00000000000599c2: add al, byte ptr [rax]; mov rax, r12; pop r12; ret; 
0x0000000000043861: add al, byte ptr [rax]; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000059bcf: add al, byte ptr [rax]; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x0000000000017ed7: add al, byte ptr [rax]; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000043d10: add al, byte ptr [rax]; movsxd rdi, r13d; mov eax, 3; syscall; 
0x0000000000050142: add al, byte ptr [rax]; nop dword ptr [rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r15; syscall; 
0x000000000001dd7a: add al, byte ptr [rax]; setbe al; cmp edi, 0x1ffff; jbe 0x1dd90; ret; 
0x000000000006bcb8: add al, byte ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x000000000001a3ec: add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x000000000006a622: add al, byte ptr [rcx + 0x5c]; ret; 
0x000000000002d00d: add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x0000000000021a9b: add al, byte ptr [rcx - 0x3a]; add dh, byte ptr [rax]; mov byte ptr [r8 + rax], 0; ret; 
0x0000000000029648: add al, byte ptr [rcx]; add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000005bf7e: add al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000006aff9: add al, byte ptr [rcx]; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000004ace0: add al, byte ptr [rcx]; add eax, 0x6c2d1; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x00000000000450d3: add al, byte ptr fs:[rax]; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000005d1c9: add al, ch; add dword ptr [rcx], 0x89480000; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000003e5d7: add al, ch; add ecx, dword ptr [rdx - 1]; jmp qword ptr [rsi + 0xf]; 
0x0000000000042057: add al, ch; add edx, esp; std; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x0000000000071ed2: add al, ch; call 0x5b071e6f; pop rcx; neg eax; add rsp, 8; ret; 
0x0000000000031827: add al, ch; cmp ebx, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000006a50f: add al, ch; imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x00000000000677ab: add al, ch; jmp qword ptr [rbx]; 
0x000000000005a9fd: add al, ch; mov ebp, 0x4800010b; mov edi, eax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000006fc06: add al, ch; mov ecx, 0xc031ffff; pop rbp; ret; 
0x00000000000754b7: add al, ch; movabs dword ptr [0x5bc0311889fffa9f], eax; ret; 
0x0000000000044251: add al, ch; or dword ptr [rdx - 0x38b60003], esi; ret; 
0x000000000001e0ec: add al, ch; out dx, al; ret; 
0x00000000000799fd: add al, ch; pop rbp; ret 0xffff; 
0x000000000004f41b: add al, ch; pop rdi; rol byte ptr [rcx], 0; mov eax, 0x39; syscall; 
0x000000000006aff6: add al, ch; pop rsi; add al, byte ptr [rcx]; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000004f30c: add al, ch; pop rsi; ret 1; 
0x0000000000033d48: add al, ch; ret 0x6e; 
0x0000000000032987: add al, ch; ret; 
0x0000000000030d50: add al, ch; retf 0xffd9; jmp qword ptr [rsi + 0xf]; 
0x000000000002ff30: add al, ch; retf 0xfffb; jmp qword ptr [rsi + 0xf]; 
0x00000000000697de: add al, ch; sbb al, 0; add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x000000000005fd5e: add al, ch; sbb al, 0xb7; add byte ptr [rax], al; lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x0000000000074cfa: add al, ch; shr byte ptr [rax - 1], 0xff; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000006e6f0: add al, ch; sub cl, byte ptr [rax]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000060c71: add al, ch; sub dword ptr [rdi + rdi*8 - 0x1f76bb01], edi; pop rbx; pop rbp; pop r12; ret; 
0x000000000002510f: add al, ch; sub edx, dword ptr [rcx]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000022e25: add al, ch; test dword ptr [rax - 0x76b7fffd], esi; add eax, 0x93f46; add rsp, 8; ret; 
0x000000000006dd0d: add al, dh; cmpxchg dword ptr [rdi + 0x38], edx; cmp eax, 2; jne 0x6dd20; xor eax, eax; ret; 
0x000000000006e8ef: add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006ba00: add al, dh; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f64a: add al, dh; cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000343ba: add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x00000000000376a4: add al, dh; jmp qword ptr [rsi + 0x48]; 
0x0000000000032da7: add al, dh; jmp qword ptr [rsi + 0xf]; 
0x0000000000073cab: add al, dh; or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000003d24c: add ax, 0x3fff; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000015c78: add bh, al; add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000001ece9: add bh, al; and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005790a: add bh, bh; call qword ptr [rax]; 
0x0000000000022e76: add bh, bh; cmp byte ptr [rax], 0xa; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x0000000000038db0: add bh, bh; je 0x38dd8; js 0x38db5; je 0x38ddc; js 0x38da2; jmp qword ptr [rbx]; 
0x0000000000033d41: add bh, bh; mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x0000000000060da2: add bh, bl; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000060b06: add bh, byte ptr [rax]; add eax, 0xc8894c00; syscall; 
0x000000000004162c: add bh, byte ptr [rdi + 0x11]; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000006f21a: add bh, ch; cli; jmp qword ptr [rsi - 0x70]; 
0x0000000000067730: add bh, dh; fdivr dword ptr [rcx]; ret; 
0x000000000002fccf: add bh, dh; ret 0; 
0x000000000002b3e0: add bh, dh; ret; 
0x0000000000019e97: add bh, dh; rol byte ptr [rcx + 0x21], 1; ret; 
0x000000000001b2e7: add bh, dh; ror byte ptr [rcx], cl; ret 0x3144; 
0x000000000003f397: add bh, dh; shl byte ptr [rcx], 1; sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x00000000000742ee: add bl, al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x20; syscall; 
0x0000000000023e1f: add bl, al; nop dword ptr [rax]; xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000006d1f0: add bl, al; nop word ptr [rax + rax]; mov rax, r8; syscall; 
0x00000000000337ef: add bl, bl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 8; ret; 
0x00000000000311db: add bl, bl; jl 0x31203; adc cl, bl; call 0x28c7952e; ret; 
0x000000000003bf27: add bl, bl; lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x000000000003aa5c: add bl, bl; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x000000000001800b: add bl, bl; sub al, 0x24; jne 0x18018; add rsp, 0x58; fxch st(1); ret; 
0x000000000003f0e2: add bl, bl; sub eax, 0x6eb17; add rsp, 0x48; fmulp st(1); ret; 
0x000000000006a5f1: add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000002931a: add bl, byte ptr [rdi + rdi*8 - 1]; nop; endbr64; lea rax, [rip + 0x8a875]; ret; 
0x000000000003ba77: add bl, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; movd xmm0, edx; addss xmm0, xmm1; ret; 
0x00000000000649f3: add bl, ch; fmul dword ptr [rax + 1]; ret; 
0x000000000003cc57: add bl, ch; lodsd eax, dword ptr [rsi]; nop word ptr [rax + rax]; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000002037b: add bl, ch; ret 0x9066; 
0x0000000000021625: add bl, ch; ret; 
0x0000000000042dfd: add bl, ch; test al, ch; sbb eax, ecx; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000032ecf: add bl, dh; addps xmm0, xmm0; ret; 
0x0000000000034a0f: add bl, dh; addps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000031d9c: add bl, dh; addps xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000002f26c: add bl, dh; addps xmm0, xmmword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x000000000002f0cf: add bl, dh; addps xmm0, xmmword ptr [rip + 0x8194c]; ret; 
0x000000000002ef89: add bl, dh; addps xmm0, xmmword ptr [rip + 0x81a9a]; ret; 
0x0000000000036f89: add bl, dh; addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000003abc7: add bl, dh; addps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000335d0: add bl, dh; addps xmm2, xmm3; subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000002f6ba: add bl, dh; addps xmm2, xmmword ptr [rip + 0x7fdfd]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000035e5f: add bl, dh; divps xmm0, xmm1; ret; 
0x0000000000036e8f: add bl, dh; divps xmm0, xmmword ptr [rip + 0x78638]; ret; 
0x0000000000035d5f: add bl, dh; divps xmm0, xmmword ptr [rip + 0x79768]; ret; 
0x000000000003ba2b: add bl, dh; divps xmm1, xmm0; movss dword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000002f6c2: add bl, dh; divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000039e0a: add bl, dh; divps xmm2, xmmword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x000000000003406f: add bl, dh; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000036f97: add bl, dh; movups xmm0, xmmword ptr [rip + 0x78520]; divss xmm0, xmm1; ret; 
0x0000000000035e57: add bl, dh; movups xmm0, xmmword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x0000000000036e87: add bl, dh; movups xmm0, xmmword ptr [rip + 0x79b7c]; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000035d57: add bl, dh; movups xmm0, xmmword ptr [rip + 0x7acac]; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x000000000002f0c7: add bl, dh; movups xmm0, xmmword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002ef81: add bl, dh; movups xmm0, xmmword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000003aa0f: add bl, dh; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000032017: add bl, dh; movups xmm2, xmmword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000349f6: add bl, dh; movups xmm2, xmmword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x0000000000016bcf: add bl, dh; movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000310d0: add bl, dh; movups xmmword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000030b57: add bl, dh; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d147: add bl, dh; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000033957: add bl, dh; movups xmmword ptr [rsp - 4], xmm0; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x000000000002d241: add bl, dh; movups xmmword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000003cd17: add bl, dh; movups xmmword ptr [rsp - 4], xmm2; ret; 
0x000000000003a4bf: add bl, dh; mulps xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003ca1f: add bl, dh; mulps xmm0, xmm1; movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003cd0f: add bl, dh; mulps xmm0, xmmword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000035d3f: add bl, dh; mulps xmm0, xmmword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x000000000003cf47: add bl, dh; mulps xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000031fd7: add bl, dh; mulps xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000061417: add bl, dh; stosq qword ptr [rdi], rax; mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000508ca: add bl, dh; stosq qword ptr [rdi], rax; ret; 
0x0000000000039b9f: add bl, dh; subps xmm0, xmm0; divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x0000000000031f7b: add bl, dh; subps xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000035d47: add bl, dh; subps xmm0, xmmword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x000000000002f0b9: add bl, dh; subps xmm1, xmm2; subss xmm0, xmm1; ret; 
0x0000000000033697: add bl, dh; subps xmm2, xmm0; addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x000000000003201f: add bl, dh; subps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031fa3: add bl, dh; subps xmm2, xmmword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x000000000003406e: add bl, sil; maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000036e86: add bl, sil; movups xmm0, xmmword ptr [rip + 0x79b7c]; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x000000000003ca1e: add bl, sil; mulps xmm0, xmm1; movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000039b9e: add bl, sil; subps xmm0, xmm0; divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x0000000000033696: add bl, sil; subps xmm2, xmm0; addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000026796: add byte ptr [r14 - 0x3f], r12b; ret 0x4908; 
0x000000000005003b: add byte ptr [r8 + 0x481c7402], r13b; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x0000000000070434: add byte ptr [r8 + 3], r15b; syscall; 
0x0000000000050021: add byte ptr [r8 - 0x47e98b80], r13b; jo 0x5002a; add byte ptr [rax], al; syscall; 
0x00000000000281fa: add byte ptr [r8 - 0x7d], r9b; mov byte ptr [rdx], 0xbb; ret 0xffff; 
0x000000000006fc4e: add byte ptr [r8], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000006a2be: add byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x00000000000748b4: add byte ptr [r8], r8b; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x0000000000065f9b: add byte ptr [r9], r15b; ret; 
0x0000000000065c76: add byte ptr [r9], r9b; ret; 
0x000000000005badd: add byte ptr [rax + 0x101], bh; mov edx, 0x2a0100; syscall; 
0x000000000005bcba: add byte ptr [rax + 0x106], bh; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000006e047: add byte ptr [rax + 0x10], bh; ret; 
0x00000000000233f6: add byte ptr [rax + 0x119], bh; syscall; 
0x0000000000023f92: add byte ptr [rax + 0x121], bh; syscall; 
0x0000000000023759: add byte ptr [rax + 0x144], bh; syscall; 
0x000000000006bea7: add byte ptr [rax + 0x16], bh; ret; 
0x000000000006fc7e: add byte ptr [rax + 0x19], cl; test byte ptr [rcx + rcx*4 - 0x40], 0x48; and esi, 0xffffff80; add rsi, 0x81; syscall; 
0x0000000000023e2e: add byte ptr [rax + 0x27], bh; syscall; 
0x0000000000021ac2: add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000042366: add byte ptr [rax + 0x29], cl; ret 0x894c; 
0x0000000000052ed5: add byte ptr [rax + 0x29], cl; ret 0x8b48; 
0x0000000000055c12: add byte ptr [rax + 0x29], cl; ret; 
0x000000000006aa28: add byte ptr [rax + 0x29], cl; test dword ptr [rax - 0x73], 0x39481104; ret; 
0x00000000000603ee: add byte ptr [rax + 0x31d23145], dl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000004f420: add byte ptr [rax + 0x39], bh; syscall; 
0x00000000000719dc: add byte ptr [rax + 0x39], cl; ret 0x8d48; 
0x00000000000252c5: add byte ptr [rax + 0x39], cl; ret 0xe575; 
0x000000000004077a: add byte ptr [rax + 0x39], cl; ret; 
0x000000000002a35e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x000000000002936d: add byte ptr [rax + 0x39], cl; xlatb; setne dl; movzx edx, dl; and eax, edx; ret; 
0x0000000000074497: add byte ptr [rax + 0x3c], bh; mov edi, 1; syscall; 
0x000000000005003c: add byte ptr [rax + 0x481c7402], ch; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000004518b: add byte ptr [rax + 0x48], bh; mov edx, 1; syscall; 
0x000000000005bc98: add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000743b7: add byte ptr [rax + 0x48], bh; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb1f: add byte ptr [rax + 0x48], bh; mov esi, 2; mov edx, 1; syscall; 
0x0000000000023fef: add byte ptr [rax + 0x48], bh; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000001f9b3: add byte ptr [rax + 0x48], bh; mov rdx, r10; syscall; 
0x000000000005e177: add byte ptr [rax + 0x48], bh; mov rsi, r12; syscall; 
0x000000000005c750: add byte ptr [rax + 0x48], bh; mov rsi, r14; syscall; 
0x000000000003a798: add byte ptr [rax + 0x48c22148], al; mov dword ptr [rdi], edx; ret; 
0x000000000001f9ab: add byte ptr [rax + 0x4be0000], al; add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rdx, r10; syscall; 
0x00000000000748b2: add byte ptr [rax + 0x4f], bh; mov rdi, r12; syscall; 
0x0000000000071e6f: add byte ptr [rax + 0x60], bh; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000005e16f: add byte ptr [rax + 0x63], cl; clc; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000001e767: add byte ptr [rax + 0x63], cl; jg 0x1e774; mov eax, 0xd9; mov edx, 0x800; mov rsi, r9; syscall; 
0x0000000000059bea: add byte ptr [rax + 0x63], cl; jg 0x59c1f; syscall; 
0x0000000000073cb5: add byte ptr [rax + 0x63], cl; jg 0x73cea; mov esi, 0x20; syscall; 
0x0000000000073cb5: add byte ptr [rax + 0x63], cl; jg 0x73cea; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000004c5b6: add byte ptr [rax + 0x63], cl; jge 0x4c5bb; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000004c5e1: add byte ptr [rax + 0x63], cl; jge 0x4c5e6; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000070087: add byte ptr [rax + 0x63], cl; jge 0x700bc; mov rax, r15; syscall; 
0x0000000000074d89: add byte ptr [rax + 0x63], cl; jge 0x74d8e; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x0000000000074db0: add byte ptr [rax + 0x63], cl; jge 0x74db5; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x00000000000745da: add byte ptr [rax + 0x63], cl; jl 0x74603; sub al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000006ded7: add byte ptr [rax + 0x63], cl; jnp 0x6df0c; mov eax, 0x91; syscall; 
0x0000000000023877: add byte ptr [rax + 0x63], cl; jp 0x238ac; mov rax, r8; syscall; 
0x000000000005ada8: add byte ptr [rax + 0x63], cl; js 0x5addd; mov eax, 0xc8; syscall; 
0x000000000005bc7c: add byte ptr [rax + 0x63], cl; out dx, eax; mov eax, 5; mov rsi, rdx; mov rdi, rbp; syscall; 
0x0000000000061fc5: add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x000000000002048f: add byte ptr [rax + 0x63], cl; ret; 
0x000000000006f091: add byte ptr [rax + 0x63], cl; rol byte ptr [rcx - 0x48], cl; retf 0; add byte ptr [rcx + 0xf], cl; mov rax, r8; syscall; 
0x000000000002b81f: add byte ptr [rax + 0x63], cl; ror byte ptr [rax + 0x39], cl; ret 0x876; 
0x0000000000043670: add byte ptr [rax + 0x63], cl; ror byte ptr [rbx - 0x2d], cl; movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x000000000005c5cf: add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000001e71f: add byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x000000000005c5b5: add byte ptr [rax + 0x63], cl; sti; mov esi, 3; mov rax, r8; syscall; 
0x000000000005007d: add byte ptr [rax + 0x66], bh; syscall; 
0x000000000003a74c: add byte ptr [rax + 0x66c22148], al; movd mm0, rdx; ret; 
0x000000000001ef0e: add byte ptr [rax + 0x69], cl; ret 0x4e6d; 
0x0000000000018398: add byte ptr [rax + 0x6e0f667f], al; ror byte ptr [rax - 0x3f], 0xe8; and bl, ch; ret; 
0x000000000007b37c: add byte ptr [rax + 0x9e], bh; syscall; 
0x000000000007b37c: add byte ptr [rax + 0x9e], bh; syscall; ret; 
0x00000000000232b7: add byte ptr [rax + 0x9f], bh; mov rdi, rsi; syscall; 
0x000000000004373c: add byte ptr [rax + 0xa], bh; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x00000000000438c4: add byte ptr [rax + 0xb], bh; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000006efff: add byte ptr [rax + 0xb], bh; ret; 
0x000000000005bbbc: add byte ptr [rax + 0xc740000], ah; mov edx, ebx; mov eax, 0x10c; syscall; 
0x0000000000073cb0: add byte ptr [rax + 0xc8], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000006c3d5: add byte ptr [rax + 0xc8], bh; syscall; 
0x000000000006c3d5: add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x000000000002b4f6: add byte ptr [rax + 0xc], bh; mov rdi, rbp; syscall; 
0x000000000006d4a7: add byte ptr [rax + 0xca], bh; mov rdx, rsi; syscall; 
0x000000000005af1d: add byte ptr [rax + 0xd], bh; syscall; 
0x000000000001eab3: add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x98490]; syscall; 
0x00000000000738b0: add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000005b80c: add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; 
0x000000000005b80c: add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000073b08: add byte ptr [rax + 0xe], bh; mov rdi, rdx; syscall; 
0x000000000006f5cb: add byte ptr [rax + 0xe], bh; syscall; 
0x000000000005abec: add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; 
0x000000000005abec: add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000002f636: add byte ptr [rax + 0xf2d743f], al; sub al, cl; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000043ce7: add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000005403f: add byte ptr [rax + 0xf5d017b], al; test byte ptr [rdi*8 - 0x74b70001], dl; jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000048645: add byte ptr [rax + 0xf], al; mov dh, 0xff; cmova eax, edi; ret; 
0x0000000000029d2d: add byte ptr [rax + 0xf], cl; call 0x1891f; jmp qword ptr [rsi + 0xf]; 
0x000000000006f1c4: add byte ptr [rax + 0xf], cl; or byte ptr [r8 - 0x77], cl; ret; 
0x000000000005af10: add byte ptr [rax + 0xf], cl; ror byte ptr [rax + 0x63], 1; sti; mov r10d, 8; mov eax, 0xd; syscall; 
0x0000000000039f72: add byte ptr [rax + 0xfb2757f], al; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000041681: add byte ptr [rax + 1], bh; add rsp, 8; ret; 
0x000000000001e04f: add byte ptr [rax + 1], bh; ret; 
0x0000000000069ad1: add byte ptr [rax + 1], cl; fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000079fb8: add byte ptr [rax + 1], cl; ret 0x148; 
0x0000000000046de1: add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000004542f: add byte ptr [rax + 1], cl; ret 0xb60f; 
0x0000000000039501: add byte ptr [rax + 1], cl; ret 0xc148; 
0x000000000002b482: add byte ptr [rax + 1], cl; ret; 
0x000000000004168e: add byte ptr [rax + 1], dil; ret; 
0x0000000000061fc2: add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x00000000000703d7: add byte ptr [rax + 2], bh; syscall; 
0x000000000007046f: add byte ptr [rax + 3], bh; mov rdi, r12; syscall; 
0x0000000000070435: add byte ptr [rax + 3], bh; syscall; 
0x000000000002af08: add byte ptr [rax + 3], dh; add byte ptr [rax], al; movsxd rcx, dword ptr [rdi]; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000005be1f: add byte ptr [rax + 4], bh; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005be37: add byte ptr [rax + 6], bh; mov rdi, r9; mov rsi, rdx; syscall; 
0x0000000000076277: add byte ptr [rax + 9], cl; ret 0x2374; 
0x0000000000055722: add byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000003a729: add byte ptr [rax + rax], al; add byte ptr [rbp + 0x15], dh; movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x0000000000060eaa: add byte ptr [rax + rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x000000000002cda7: add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000005d0fa: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005f097: add byte ptr [rax + rcx*2 - 0x75], ah; adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f433: add byte ptr [rax + rcx*2 - 0x75], ah; adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000060bed: add byte ptr [rax + rdx + 0x48], dh; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f7dd: add byte ptr [rax + rdx + 0x48], dh; lea edx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000006883c: add byte ptr [rax - 0x13217], al; jmp qword ptr [rsi + 0x2e]; 
0x000000000006886c: add byte ptr [rax - 0x16217], al; jmp qword ptr [rsi + 0x2e]; 
0x0000000000044986: add byte ptr [rax - 0x1a07af1], 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000000757cf: add byte ptr [rax - 0x39], cl; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000004df0f: add byte ptr [rax - 0x39], cl; add eax, 0x68f0d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004def8: add byte ptr [rax - 0x39], cl; add eax, 0x68f24; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000004d02f: add byte ptr [rax - 0x39], cl; add eax, 0x69dd5; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004d018: add byte ptr [rax - 0x39], cl; add eax, 0x69dec; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000022dcf: add byte ptr [rax - 0x39], cl; add eax, 0x93f9d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000022db8: add byte ptr [rax - 0x39], cl; add eax, 0x93fb4; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000001f577: add byte ptr [rax - 0x39], cl; and al, 8; and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005ede6: add byte ptr [rax - 0x39], cl; or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005410f: add byte ptr [rax - 0x39], cl; or dil, dil; call qword ptr [rax]; 
0x0000000000055587: add byte ptr [rax - 0x39], cl; ret 0xfffc; 
0x0000000000049f24: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x00000000000223a7: add byte ptr [rax - 0x39], cl; ret; 
0x000000000003a7e8: add byte ptr [rax - 0x3d91f09a], al; ret; 
0x000000000003f5b7: add byte ptr [rax - 0x3f], cl; jmp qword ptr [rax]; 
0x000000000003d0dd: add byte ptr [rax - 0x3f], cl; out 0x34, eax; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000006d0e5: add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x000000000006c375: add byte ptr [rax - 0x3fcef877], al; ret; 
0x000000000006b58c: add byte ptr [rax - 0x47be158c], al; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000050022: add byte ptr [rax - 0x47e98b80], ch; jo 0x5002a; add byte ptr [rax], al; syscall; 
0x000000000005d18e: add byte ptr [rax - 0x5e1f00d], dl; add qword ptr [rdi + 8], rsi; ret; 
0x000000000007498e: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x6c; syscall; 
0x000000000007498e: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x6c; syscall; ret; 
0x000000000002429e: add byte ptr [rax - 0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000000023bbe: add byte ptr [rax - 0x5e1f00d], dl; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x000000000001845e: add byte ptr [rax - 0x5e1f00d], dl; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000023cce: add byte ptr [rax - 0x5e1f00d], dl; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x000000000001f76e: add byte ptr [rax - 0x5e1f00d], dl; ret; 
0x0000000000042f6e: add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x3f; syscall; 
0x000000000007546e: add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x4c; syscall; 
0x00000000000750be: add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x54; syscall; 
0x00000000000243ee: add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0xc5; syscall; 
0x00000000000241ae: add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x0000000000023d4e: add byte ptr [rax - 0x5e1f00d], dl; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; 
0x000000000002302e: add byte ptr [rax - 0x5e1f00d], dl; xor eax, eax; ret; 
0x000000000002a24a: add byte ptr [rax - 0x73], cl; adc eax, 0x87e4c; test rax, rax; cmove rax, rdx; ret; 
0x0000000000022221: add byte ptr [rax - 0x73], cl; adc eax, 0x8bce7; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000006a480: add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a514: add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x00000000000742e7: add byte ptr [rax - 0x73], cl; add eax, 0x3dced; ret; 
0x000000000005fd63: add byte ptr [rax - 0x73], cl; add eax, 0x570dd; add rsp, 8; ret; 
0x000000000004f383: add byte ptr [rax - 0x73], cl; add eax, 0x67c8d; pop rbp; ret; 
0x00000000000486bc: add byte ptr [rax - 0x73], cl; add eax, 0x6e55c; add rsp, 0x18; ret; 
0x000000000003fc77: add byte ptr [rax - 0x73], cl; add eax, 0x7739f; ret; 
0x0000000000028f43: add byte ptr [rax - 0x73], cl; add eax, 0x89118; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x000000000001f263: add byte ptr [rax - 0x73], cl; add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000002c20f: add byte ptr [rax - 0x73], cl; add r9d, dword ptr [r8 - 0x77]; ret 0xc148; 
0x000000000006fbff: add byte ptr [rax - 0x73], cl; cmp eax, 0x473dd; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x000000000006d23d: add byte ptr [rax - 0x73], cl; cmp eax, 0x49d0b; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1cd: add byte ptr [rax - 0x73], cl; cmp eax, 0x49d7b; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b02: add byte ptr [rax - 0x73], cl; cmp eax, 0x53802; mov rax, r9; syscall; 
0x000000000005f744: add byte ptr [rax - 0x73], cl; cmp eax, 0x54ac0; mov rax, r9; syscall; 
0x000000000004f377: add byte ptr [rax - 0x73], cl; cmp eax, 0x65001; call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004f305: add byte ptr [rax - 0x73], cl; cmp eax, 0x67caf; call 0x6b570; mov rax, r12; pop r12; ret; 
0x0000000000022e1e: add byte ptr [rax - 0x73], cl; cmp eax, 0x8a2ca; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x000000000001ed0b: add byte ptr [rax - 0x73], cl; cmp eax, 0x93499; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001eab8: add byte ptr [rax - 0x73], cl; cmp eax, 0x98490; syscall; 
0x0000000000015a69: add byte ptr [rax - 0x73], cl; cmp eax, 0xa14d7; mov rax, r8; syscall; 
0x000000000001f56d: add byte ptr [rax - 0x73], cl; je 0x1f596; or byte ptr [rdi + 1], bh; mov qword ptr [rsp + 8], 0x20; syscall; 
0x0000000000043cdf: add byte ptr [rax - 0x73], cl; mov ah, 0x24; add byte ptr [rax], 0; add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000005253f: add byte ptr [rax - 0x73], cl; or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000003ae14: add byte ptr [rax - 0x73], cl; push rbx; dec dword ptr [rax - 0x7d]; ret; 
0x000000000001f975: add byte ptr [rax - 0x73], cl; push rsp; and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000007002e: add byte ptr [rax - 0x73], cl; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005abcc: add byte ptr [rax - 0x73], cl; xor eax, 0x5451c; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abcc: add byte ptr [rax - 0x73], cl; xor eax, 0x5451c; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005abac: add byte ptr [rax - 0x73], cl; xor eax, 0x54544; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abac: add byte ptr [rax - 0x73], cl; xor eax, 0x54544; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000006d2bf: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x75], cl; js 0x6d2cf; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000007624f: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000026793: add byte ptr [rax - 0x75], cl; add byte ptr [r14 - 0x3f], r12b; ret 0x4908; 
0x000000000006defc: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000047ecf: add byte ptr [rax - 0x75], cl; add eax, 0x6c0d9; ret; 
0x000000000002a29c: add byte ptr [rax - 0x75], cl; add eax, 0x8cb04; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000079328: add byte ptr [rax - 0x75], cl; and al, 0x68; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000067b09: add byte ptr [rax - 0x75], cl; and al, 8; mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000067b22: add byte ptr [rax - 0x75], cl; and al, 8; mov rsi, r15; mov rdi, r8; call rax; 
0x0000000000058427: add byte ptr [rax - 0x75], cl; and byte ptr [r8 - 0x7d], r9b; ret 0x4c04; 
0x000000000006b7dc: add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000001ef5a: add byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x7b]; push qword ptr [rbp - 0x13]; xor eax, eax; pop rbx; ret; 
0x000000000001f6fc: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; ret 0xe808; 
0x0000000000042644: add byte ptr [rax - 0x75], cl; je 0x4266d; and byte ptr [rax - 0x77], cl; ret; 
0x000000000004f643: add byte ptr [rax - 0x75], cl; jge 0x4f610; sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7dd: add byte ptr [rax - 0x75], cl; jge 0x4f7aa; sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f973: add byte ptr [rax - 0x75], cl; jge 0x4f940; sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x0000000000053cef: add byte ptr [rax - 0x75], cl; jl 0x53d18; or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000006ce23: add byte ptr [rax - 0x75], cl; jl 0x6ce4c; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x00000000000501b0: add byte ptr [rax - 0x75], cl; mov cl, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ecx, 0x88; call rax; 
0x00000000000501b7: add byte ptr [rax - 0x75], cl; mov ecx, 0x88; call rax; 
0x0000000000075848: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000006d59c: add byte ptr [rax - 0x75], cl; push rax; js 0x6d5ea; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x00000000000527b7: add byte ptr [rax - 0x75], cl; push rbp; adc byte ptr [rax - 0x75], cl; or byte ptr [r8 + 1], r9b; fimul dword ptr [rax - 0x7d]; ret; 
0x000000000005f04a: add byte ptr [rax - 0x75], cl; sbb al, 0; add byte ptr [rax], al; test rax, rax; jne 0x5f040; ret; 
0x000000000006e186: add byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x39], cl; ret; 
0x0000000000075f26: add byte ptr [rax - 0x75], cl; sbb byte ptr [rcx - 0x77], cl; fisttp qword ptr [rax - 0x7d]; ret; 
0x000000000007a0cf: add byte ptr [rax - 0x75], cl; test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000030c15: add byte ptr [rax - 0x76992ff7], al; and al, 0xf0; fld xword ptr [rsp - 0x18]; ret; 
0x00000000000296ee: add byte ptr [rax - 0x76b7d6c8], al; ret 0x850f; 
0x0000000000018363: add byte ptr [rax - 0x76e78b81], al; and al, 4; movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000006deff: add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000022e2a: add byte ptr [rax - 0x77], cl; add eax, 0x93f46; add rsp, 8; ret; 
0x0000000000041255: add byte ptr [rax - 0x77], cl; and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005afa6: add byte ptr [rax - 0x77], cl; and al, 0x20; mov eax, 0xe; syscall; 
0x00000000000746b4: add byte ptr [rax - 0x77], cl; and al, 0x28; mov eax, 0x51; syscall; 
0x000000000004fcd1: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9ea: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074751: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000006db0d: add byte ptr [rax - 0x77], cl; and al, 0x70; mov eax, 0xe; syscall; 
0x000000000004147e: add byte ptr [rax - 0x77], cl; and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b4d: add byte ptr [rax - 0x77], cl; and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000074413: add byte ptr [rax - 0x77], cl; and al, 8; mov eax, 0x6c; syscall; 
0x0000000000074b98: add byte ptr [rax - 0x77], cl; and al, 8; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000002a52d: add byte ptr [rax - 0x77], cl; call 0x5c440290; ret; 
0x000000000002a62d: add byte ptr [rax - 0x77], cl; call 0x5c440390; ret; 
0x000000000002336f: add byte ptr [rax - 0x77], cl; cli; syscall; 
0x000000000004399a: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000562bb: add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x00000000000438c9: add byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000006c111: add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006bfaf: add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; syscall; 
0x00000000000762f0: add byte ptr [rax - 0x77], cl; jo 0x7633e; add esp, 0x100; pop rbx; ret; 
0x000000000004ea2f: add byte ptr [rax - 0x77], cl; lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add al, ch; ret; 
0x000000000001f7c7: add byte ptr [rax - 0x77], cl; lodsb al, byte ptr [rsi]; ret 0x108; 
0x000000000005f159: add byte ptr [rax - 0x77], cl; mov ecx, 0xc0; ret; 
0x000000000005f0e3: add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x0000000000050664: add byte ptr [rax - 0x77], cl; or byte ptr [r11 + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000071d34: add byte ptr [rax - 0x77], cl; out 0xb8, al; in eax, 0; add byte ptr [rax], al; movsxd rdi, r8d; syscall; 
0x0000000000071e2d: add byte ptr [rax - 0x77], cl; out dx, al; syscall; 
0x0000000000059bd0: add byte ptr [rax - 0x77], cl; out dx, eax; call 0x21bc0; pop rbp; ret; 
0x0000000000073912: add byte ptr [rax - 0x77], cl; out dx, eax; call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000005d3a4: add byte ptr [rax - 0x77], cl; out dx, eax; call qword ptr [rbp + 0x50]; 
0x000000000005d1ce: add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000006edff: add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; syscall; 
0x000000000005d537: add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r9; syscall; 
0x000000000005bcbf: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, r9; syscall; 
0x000000000005ba23: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x0000000000059d60: add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x000000000002b496: add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000004472f: add byte ptr [rax - 0x77], cl; rcr byte ptr [rbx + 0x5d], 1; sub rax, rcx; pop r12; ret; 
0x000000000006a869: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000002b0b7: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000003aacf: add byte ptr [rax - 0x77], cl; ret 0x4866; 
0x0000000000025c5c: add byte ptr [rax - 0x77], cl; ret 0x6be8; 
0x0000000000041c10: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000001f7f6: add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000029667: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000042d50: add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000004d35f: add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000007980f: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000003fd14: add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000076c06: add byte ptr [rax - 0x77], cl; ret 0xc031; 
0x000000000001ba0b: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000059a47: add byte ptr [rax - 0x77], cl; ret 0xe283; 
0x00000000000152da: add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x0000000000042374: add byte ptr [rax - 0x77], cl; ret 0xfe8; 
0x0000000000015ce2: add byte ptr [rax - 0x77], cl; ret; 
0x000000000007438f: add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000001f277: add byte ptr [rax - 0x77], cl; sbb byte ptr [rbx - 0x17], bl; fistp word ptr [rbp - 1]; jmp qword ptr [rsi + 0x2e]; 
0x00000000000762e9: add byte ptr [rax - 0x77], cl; sbb eax, 0x40c1f; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000002b48f: add byte ptr [rax - 0x77], cl; sbb eax, 0x899c1; mov rdi, rbp; syscall; 
0x0000000000021e47: add byte ptr [rax - 0x77], cl; shr ecx, 1; ret 0xfffe; 
0x00000000000703cf: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000023751: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000043028: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rcx*8], ah; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; ret 2; 
0x0000000000077227: add byte ptr [rax - 0x77], cl; test dword ptr [rcx - 0x77], 0x340de8f6; sti; dec dword ptr [rax - 0x77]; ret; 
0x00000000000232bc: add byte ptr [rax - 0x77], cl; test dword ptr [rdi], 0xc7894805; call 0x21bc0; add rsp, 8; ret; 
0x0000000000073b0d: add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x0000000000049d13: add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x0000000000054859: add byte ptr [rax - 0x7b], cl; dec dword ptr [rbx - 0x6bf0f3ba]; ret 0x8548; 
0x00000000000760e2: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000003fff5: add byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi + rcx + 0x45]; ret; 
0x0000000000068a1f: add byte ptr [rax - 0x7b], cl; leave; jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x000000000002a251: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x44; ret 0x66c3; 
0x0000000000040120: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x44; ret 0x8949; 
0x0000000000025097: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001e0f1: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x000000000007654f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rbx + 0x48], 0x8b; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x00000000000607ed: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rbx*2 + 0x4a], 0x63; jl 0x607ab; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000022eab: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x5d], cl; xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x000000000003fd9f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax*8 + 0x48], 0x89; ret 0x8348; 
0x000000000005f087: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x000000000003fcc7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rdx + 0x48], 0x89; ret 0x8348; 
0x0000000000066cd9: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx + 0x48], 0x89; ret; 
0x000000000005f0d7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000005f14d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], cl; mov dword ptr [rdx + 0xd0], edi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000003cc3f: add byte ptr [rax - 0x7b], cl; sar byte ptr [rax + 0x46], cl; ret; 
0x000000000005d70c: add byte ptr [rax - 0x7b], cl; sar byte ptr [rax + 7], 0x48; mov dword ptr [rbx], eax; xor eax, eax; pop rbx; ret; 
0x000000000003cc85: add byte ptr [rax - 0x7b], cl; sar byte ptr [rcx - 0x46], cl; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000005bad4: add byte ptr [rax - 0x7bf10000], ah; xchg eax, edx; add byte ptr [rax], al; add byte ptr [rax + 0x101], bh; mov edx, 0x2a0100; syscall; 
0x000000000004e81b: add byte ptr [rax - 0x7bf10000], al; ret; 
0x0000000000022254: add byte ptr [rax - 0x7d], cl; call 0xfffffffff8856a5d; std; jbe 0x22268; pop rbx; ret; 
0x000000000002a6bc: add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000005f1ba: add byte ptr [rax - 0x7d], cl; clc; add dword ptr [rdi + rcx + 0x48], esi; sub eax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000001db03: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000034ae4: add byte ptr [rax - 0x7d], cl; in al, dx; adc cl, bl; ret 0xc9d8; 
0x0000000000047ebc: add byte ptr [rax - 0x7d], cl; js 0x47f19; add byte ptr [rsp + rcx + 0x48], dh; add eax, 0xa0; ret; 
0x00000000000281fb: add byte ptr [rax - 0x7d], cl; mov byte ptr [rdx], 0xbb; ret 0xffff; 
0x00000000000672ef: add byte ptr [rax - 0x7d], cl; mov dword ptr [rcx], 0x8907be0f; ret 0xe883; 
0x0000000000022b9b: add byte ptr [rax - 0x7d], cl; ret 0x3901; 
0x00000000000432ef: add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x000000000004332d: add byte ptr [rax - 0x7d], cl; ret 0x4102; 
0x0000000000029e2f: add byte ptr [rax - 0x7d], cl; ret 0x4301; 
0x000000000001ce65: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000059007: add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000004564f: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000002bdb2: add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000041174: add byte ptr [rax - 0x7d], cl; ret 0x8302; 
0x00000000000276c2: add byte ptr [rax - 0x7d], cl; ret 0xc604; 
0x000000000007a357: add byte ptr [rax - 0x7d], cl; ret 0xf601; 
0x00000000000293e7: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000004efc5: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x48; mov dword ptr [rip + 0x67e67], eax; shr rax, 0x21; ret; 
0x000000000006986f: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x80; cmp byte ptr [rax], al; jne 0x69870; sub rax, rdi; ret; 
0x00000000000452e2: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x83; ret 0x8901; 
0x000000000004acdc: add byte ptr [rax - 0x7d], cl; rol byte ptr [rdx], 1; add eax, 0x6c2d1; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000007904b: add byte ptr [rax - 0x7f], cl; call qword ptr [rax + 1]; 
0x000000000002b4bc: add byte ptr [rax - 0x7f], cl; ret; 
0x0000000000030015: add byte ptr [rax - 0x9a98b81], al; ret; 
0x00000000000225a9: add byte ptr [rax - 1], bh; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000015c7e: add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000004505d: add byte ptr [rax - 1], bh; cmovb eax, edi; ret; 
0x000000000007036a: add byte ptr [rax - 1], bh; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x000000000004e5af: add byte ptr [rax - 1], bh; pop rbx; ret; 
0x0000000000043f4f: add byte ptr [rax - 1], bh; ret; 
0x000000000005f19e: add byte ptr [rax - 1], dil; ret; 
0x000000000003f34a: add byte ptr [rax - 9], cl; ror byte ptr [rax + 0x21], 1; sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000004ea34: add byte ptr [rax], 0; add al, ch; ret; 
0x0000000000043ce4: add byte ptr [rax], 0; add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000004542c: add byte ptr [rax], 0; add byte ptr [rax + 1], cl; ret 0xb60f; 
0x000000000005588f: add byte ptr [rax], 0; add byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000004505a: add byte ptr [rax], 0; add byte ptr [rax - 1], bh; cmovb eax, edi; ret; 
0x000000000003abc3: add byte ptr [rax], 0; add byte ptr [rax], al; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003fb9b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbcb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000007034b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000005092b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x00000000000242fb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x0000000000015c9b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000004901b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000001e19b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000000047f9b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov eax, edi; rol ax, 8; ret; 
0x0000000000015c8b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x78]; ret; 
0x0000000000017e5b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001f4cb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000005d19b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; or dword ptr [rdi], 0x20; ret; 
0x000000000001eb8b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; ret; 
0x000000000003fbbb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; sqrtss xmm0, xmm0; ret; 
0x0000000000059e3b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x000000000002322b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000006c33b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x00000000000501db: add byte ptr [rax], 0; add byte ptr [rax], al; lea rdi, [r8 + 0x24]; mov eax, 0x50; syscall; 
0x0000000000074493: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000001fb1b: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004e5ab: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000015c0b: add byte ptr [rax], 0; add byte ptr [rax], al; mov esi, 1; mov rax, r8; syscall; 
0x000000000004df0b: add byte ptr [rax], 0; add byte ptr [rax], al; mov qword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004d02b: add byte ptr [rax], 0; add byte ptr [rax], al; mov qword ptr [rip + 0x69dd5], 0; ret; 
0x0000000000022dcb: add byte ptr [rax], 0; add byte ptr [rax], al; mov qword ptr [rip + 0x93f9d], 0; ret; 
0x000000000006e5e3: add byte ptr [rax], 0; add byte ptr [rax], al; mov r10, rbx; mov rax, r8; syscall; 
0x000000000005c8db: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8db: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005012b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000006c83b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000060b4b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000003086b: add byte ptr [rax], 0; add byte ptr [rax], al; movaps xmm2, xmm0; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002ffe3: add byte ptr [rax], 0; add byte ptr [rax], al; movd xmm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000338eb: add byte ptr [rax], 0; add byte ptr [rax], al; movsd qword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x00000000000366f3: add byte ptr [rax], 0; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000354f3: add byte ptr [rax], 0; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030aeb: add byte ptr [rax], 0; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000032013: add byte ptr [rax], 0; add byte ptr [rax], al; movss xmm2, dword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000070083: add byte ptr [rax], 0; add byte ptr [rax], al; movsxd rdi, dword ptr [rbp + 0x30]; mov rax, r15; syscall; 
0x000000000001e71b: add byte ptr [rax], 0; add byte ptr [rax], al; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000003cd0b: add byte ptr [rax], 0; add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000006b55b: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbx; ret; 
0x000000000003550b: add byte ptr [rax], 0; add byte ptr [rax], al; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035d6b: add byte ptr [rax], 0; add byte ptr [rax], al; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000033773: add byte ptr [rax], 0; add byte ptr [rax], al; pxor xmm0, xmm0; ret; 
0x000000000002b183: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x000000000004509b: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000023e23: add byte ptr [rax], 0; add byte ptr [rax], al; xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000003a7d4: add byte ptr [rax], 0; add byte ptr [rbp + 0xa], dh; shl eax, 9; je 0x3a7e4; ret; 
0x000000000006d48a: add byte ptr [rax], 0; add byte ptr [rbx - 0x76b3fe32], al; clc; mov rdx, r10; syscall; 
0x000000000006df00: add byte ptr [rax], 0; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x000000000006e74a: add byte ptr [rax], 0; add byte ptr [rcx - 0xa], al; ret 0x7480; 
0x000000000006e3e6: add byte ptr [rax], 0; add byte ptr [rdi + 4], bh; xor eax, eax; ret; 
0x0000000000033edf: add byte ptr [rax], 0; add byte ptr [rdi], cl; xchg eax, edi; ret 0xf1df; 
0x000000000003bf2b: add byte ptr [rax], 0; add dh, bl; ret; 
0x000000000001ed09: add byte ptr [rax], 0; lea rdi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001f9ac: add byte ptr [rax], 0; mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x00000000000614e3: add byte ptr [rax], 0; mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x0000000000050212: add byte ptr [rax], 0; movsxd rsi, esi; syscall; 
0x000000000002b48c: add byte ptr [rax], ah; add byte ptr [rax], al; mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x000000000002fe49: add byte ptr [rax], al; add al, 0x39; ret 0x5872; 
0x000000000005d1c7: add byte ptr [rax], al; add al, ch; add dword ptr [rcx], 0x89480000; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000004424f: add byte ptr [rax], al; add al, ch; or dword ptr [rdx - 0x38b60003], esi; ret; 
0x00000000000799fb: add byte ptr [rax], al; add al, ch; pop rbp; ret 0xffff; 
0x0000000000033d46: add byte ptr [rax], al; add al, ch; ret 0x6e; 
0x000000000004ea35: add byte ptr [rax], al; add al, ch; ret; 
0x0000000000030d4e: add byte ptr [rax], al; add al, ch; retf 0xffd9; jmp qword ptr [rsi + 0xf]; 
0x000000000002510d: add byte ptr [rax], al; add al, ch; sub edx, dword ptr [rcx]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000006e8ed: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006b9fe: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f648: add byte ptr [rax], al; add al, dh; cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000343b8: add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032da5: add byte ptr [rax], al; add al, dh; jmp qword ptr [rsi + 0xf]; 
0x000000000001ece7: add byte ptr [rax], al; add bh, al; and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000057908: add byte ptr [rax], al; add bh, bh; call qword ptr [rax]; 
0x0000000000033d3f: add byte ptr [rax], al; add bh, bh; mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x000000000002fccd: add byte ptr [rax], al; add bh, dh; ret 0; 
0x0000000000036494: add byte ptr [rax], al; add bh, dh; ret; 
0x0000000000032ecd: add byte ptr [rax], al; add bl, dh; addps xmm0, xmm0; ret; 
0x0000000000034a0d: add byte ptr [rax], al; add bl, dh; addps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003abc5: add byte ptr [rax], al; add bl, dh; addps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000335ce: add byte ptr [rax], al; add bl, dh; addps xmm2, xmm3; subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000002ef7f: add byte ptr [rax], al; add bl, dh; movups xmm0, xmmword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x0000000000032015: add byte ptr [rax], al; add bl, dh; movups xmm2, xmmword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003cd0d: add byte ptr [rax], al; add bl, dh; mulps xmm0, xmmword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x00000000000508c8: add byte ptr [rax], al; add bl, dh; stosq qword ptr [rdi], rax; ret; 
0x000000000005badb: add byte ptr [rax], al; add byte ptr [rax + 0x101], bh; mov edx, 0x2a0100; syscall; 
0x00000000000233f4: add byte ptr [rax], al; add byte ptr [rax + 0x119], bh; syscall; 
0x0000000000023f90: add byte ptr [rax], al; add byte ptr [rax + 0x121], bh; syscall; 
0x000000000006fc7c: add byte ptr [rax], al; add byte ptr [rax + 0x19], cl; test byte ptr [rcx + rcx*4 - 0x40], 0x48; and esi, 0xffffff80; add rsi, 0x81; syscall; 
0x0000000000021ac0: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000052ed3: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8b48; 
0x0000000000055c10: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000006aa26: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; test dword ptr [rax - 0x73], 0x39481104; ret; 
0x00000000000603ec: add byte ptr [rax], al; add byte ptr [rax + 0x31d23145], dl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000002a35c: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000074495: add byte ptr [rax], al; add byte ptr [rax + 0x3c], bh; mov edi, 1; syscall; 
0x0000000000045189: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov edx, 1; syscall; 
0x000000000005bc96: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x000000000001fb1d: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 2; mov edx, 1; syscall; 
0x000000000001f9b1: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rdx, r10; syscall; 
0x000000000005e175: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r12; syscall; 
0x000000000005c74e: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov rsi, r14; syscall; 
0x000000000003a796: add byte ptr [rax], al; add byte ptr [rax + 0x48c22148], al; mov dword ptr [rdi], edx; ret; 
0x00000000000748b0: add byte ptr [rax], al; add byte ptr [rax + 0x4f], bh; mov rdi, r12; syscall; 
0x0000000000071e6d: add byte ptr [rax], al; add byte ptr [rax + 0x60], bh; xor esi, esi; mov rdi, rbp; syscall; 
0x0000000000059be8: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x59c1f; syscall; 
0x0000000000073cb3: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jg 0x73cea; mov esi, 0x20; syscall; 
0x0000000000070085: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; jge 0x700bc; mov rax, r15; syscall; 
0x000000000005ada6: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; js 0x5addd; mov eax, 0xc8; syscall; 
0x000000000002048d: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000002b81d: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rax + 0x39], cl; ret 0x876; 
0x000000000005c5cd: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000001e71d: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x000000000005c5b3: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; sti; mov esi, 3; mov rax, r8; syscall; 
0x000000000005007b: add byte ptr [rax], al; add byte ptr [rax + 0x66], bh; syscall; 
0x000000000003a74a: add byte ptr [rax], al; add byte ptr [rax + 0x66c22148], al; movd mm0, rdx; ret; 
0x000000000006effd: add byte ptr [rax], al; add byte ptr [rax + 0xb], bh; ret; 
0x000000000006c3d3: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; 
0x000000000006c3d3: add byte ptr [rax], al; add byte ptr [rax + 0xc8], bh; syscall; ret; 
0x000000000006d4a5: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; mov rdx, rsi; syscall; 
0x000000000005af1b: add byte ptr [rax], al; add byte ptr [rax + 0xd], bh; syscall; 
0x000000000001eab1: add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x98490]; syscall; 
0x00000000000738ae: add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x000000000005b80a: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; 
0x000000000005b80a: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000073b06: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; mov rdi, rdx; syscall; 
0x000000000006f5c9: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; 
0x000000000005abea: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; 
0x000000000005abea: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; xor edx, edx; mov edi, 2; syscall; ret; 
0x0000000000043ce5: add byte ptr [rax], al; add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000005403d: add byte ptr [rax], al; add byte ptr [rax + 0xf5d017b], al; test byte ptr [rdi*8 - 0x74b70001], dl; jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000048643: add byte ptr [rax], al; add byte ptr [rax + 0xf], al; mov dh, 0xff; cmova eax, edi; ret; 
0x000000000001e04d: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000069acf: add byte ptr [rax], al; add byte ptr [rax + 1], cl; fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000066e7b: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000004542d: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb60f; 
0x0000000000044e71: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x00000000000703d5: add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000076275: add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x2374; 
0x0000000000055720: add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000004f431: add byte ptr [rax], al; add byte ptr [rax + rcx*2 - 0x75], ah; adc al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006883a: add byte ptr [rax], al; add byte ptr [rax - 0x13217], al; jmp qword ptr [rsi + 0x2e]; 
0x000000000006886a: add byte ptr [rax], al; add byte ptr [rax - 0x16217], al; jmp qword ptr [rsi + 0x2e]; 
0x00000000000757cd: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000004df0d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add eax, 0x68f0d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004d02d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add eax, 0x69dd5; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000022dcd: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add eax, 0x93f9d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001f575: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; and al, 8; and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005410d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; or dil, dil; call qword ptr [rax]; 
0x000000000003a7e6: add byte ptr [rax], al; add byte ptr [rax - 0x3d91f09a], al; ret; 
0x000000000003f5b5: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; jmp qword ptr [rax]; 
0x000000000006d0e3: add byte ptr [rax], al; add byte ptr [rax - 0x3fce39f7], al; mov dword ptr [rdi], esi; ret; 
0x000000000006c373: add byte ptr [rax], al; add byte ptr [rax - 0x3fcef877], al; ret; 
0x000000000005d18c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; add qword ptr [rdi + 8], rsi; ret; 
0x000000000007498c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x6c; syscall; 
0x000000000007498c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x6c; syscall; ret; 
0x000000000002429c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbf; syscall; 
0x000000000001845c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000023ccc: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x000000000001f76c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; ret; 
0x0000000000042f6c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x3f; syscall; 
0x000000000007546c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x4c; syscall; 
0x00000000000750bc: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0x54; syscall; 
0x00000000000243ec: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; sub rsp, 8; mov eax, 0xc5; syscall; 
0x000000000002302c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; xor eax, eax; ret; 
0x000000000002221f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0x8bce7; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000006d23b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x49d0b; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1cb: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x49d7b; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b00: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x53802; mov rax, r9; syscall; 
0x000000000005f742: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x54ac0; mov rax, r9; syscall; 
0x000000000001eab6: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x98490; syscall; 
0x0000000000015a67: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa14d7; mov rax, r8; syscall; 
0x000000000001f56b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; je 0x1f596; or byte ptr [rdi + 1], bh; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000005253d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000003ae12: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; push rbx; dec dword ptr [rax - 0x7d]; ret; 
0x000000000005abca: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x5451c; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abaa: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x54544; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000007624d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000006defa: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77000000], 0xff; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000079326: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x68; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000067b20: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 8; mov rsi, r15; mov rdi, r8; call rax; 
0x000000000006b7da: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000006ce21: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; jl 0x6ce4c; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x00000000000501b5: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ecx, 0x88; call rax; 
0x0000000000075846: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000006e184: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x39], cl; ret; 
0x0000000000075f24: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sbb byte ptr [rcx - 0x77], cl; fisttp qword ptr [rax - 0x7d]; ret; 
0x0000000000041253: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005afa4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x20; mov eax, 0xe; syscall; 
0x00000000000746b2: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; mov eax, 0x51; syscall; 
0x000000000004fccf: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9e8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000007474f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000006db0b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x70; mov eax, 0xe; syscall; 
0x0000000000074411: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; mov eax, 0x6c; syscall; 
0x000000000002a52b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c440290; ret; 
0x000000000002a62b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c440390; ret; 
0x00000000000438c7: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000006c10f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006bfad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fisttp word ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000005f157: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov ecx, 0xc0; ret; 
0x000000000005f0e1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov esi, 0xc0; ret; 
0x0000000000071e2b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, al; syscall; 
0x000000000005d3a2: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; call qword ptr [rbp + 0x50]; 
0x000000000005d255: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000006edfd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r8; syscall; 
0x000000000005d535: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rax, r9; syscall; 
0x000000000005ba21: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000005bcef: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x000000000002b4f9: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000006abab: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000025c5a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x6be8; 
0x000000000005e72b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000004d35d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000007980d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000002568f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000003f6bc: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000007438d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x0000000000021e45: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; shr ecx, 1; ret 0xfffe; 
0x00000000000703cd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x000000000002374f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000073b0b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xlatb; syscall; 
0x0000000000049d11: add byte ptr [rax], al; add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x000000000007654d: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rbx + 0x48], 0x8b; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000003fd9d: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rax*8 + 0x48], 0x89; ret 0x8348; 
0x000000000005f085: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x000000000005f0d5: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000005f14b: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rax + 0x48], cl; mov dword ptr [rdx + 0xd0], edi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x0000000000047eba: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; js 0x47f19; add byte ptr [rsp + rcx + 0x48], dh; add eax, 0xa0; ret; 
0x00000000000672ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; mov dword ptr [rcx], 0x8907be0f; ret 0xe883; 
0x0000000000049157: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3901; 
0x0000000000029e2d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4301; 
0x000000000003ad45: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000000757d4: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x00000000000293e5: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000452e0: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x83; ret 0x8901; 
0x0000000000015c7c: add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000004505b: add byte ptr [rax], al; add byte ptr [rax - 1], bh; cmovb eax, edi; ret; 
0x000000000004e5ad: add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbx; ret; 
0x0000000000043f4d: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000004424d: add byte ptr [rax], al; add byte ptr [rax], al; add al, ch; or dword ptr [rdx - 0x38b60003], esi; ret; 
0x00000000000799f9: add byte ptr [rax], al; add byte ptr [rax], al; add al, ch; pop rbp; ret 0xffff; 
0x00000000000343b6: add byte ptr [rax], al; add byte ptr [rax], al; add al, dh; dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000032da3: add byte ptr [rax], al; add byte ptr [rax], al; add al, dh; jmp qword ptr [rsi + 0xf]; 
0x000000000002fccb: add byte ptr [rax], al; add byte ptr [rax], al; add bh, dh; ret 0; 
0x0000000000032ecb: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; addps xmm0, xmm0; ret; 
0x0000000000034a0b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; addps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003a794: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48c22148], al; mov dword ptr [rdi], edx; ret; 
0x0000000000071e6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x60], bh; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000003a748: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x66c22148], al; movd mm0, rdx; ret; 
0x000000000006effb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0xb], bh; ret; 
0x000000000001e04b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000068838: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x13217], al; jmp qword ptr [rsi + 0x2e]; 
0x0000000000068868: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x16217], al; jmp qword ptr [rsi + 0x2e]; 
0x000000000005410b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; or dil, dil; call qword ptr [rax]; 
0x000000000005d18a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; add qword ptr [rdi + 8], rsi; ret; 
0x000000000007498a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x6c; syscall; 
0x000000000001f76a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; ret; 
0x000000000002302a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; xor eax, eax; ret; 
0x000000000005253b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000007624b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000004d35b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000007980b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000007438b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000007654b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rbx + 0x48], 0x8b; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x00000000000672eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; mov dword ptr [rcx], 0x8907be0f; ret 0xe883; 
0x0000000000029e2b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4301; 
0x00000000000295fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000043f4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000003a792: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48c22148], al; mov dword ptr [rdi], edx; ret; 
0x000000000003a746: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x66c22148], al; movd mm0, rdx; ret; 
0x0000000000068836: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x13217], al; jmp qword ptr [rsi + 0x2e]; 
0x0000000000068866: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x16217], al; jmp qword ptr [rsi + 0x2e]; 
0x00000000000343b5: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000003a793: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; mov qword ptr [rdi], rdx; ret; 
0x000000000003a747: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; movq xmm0, rdx; ret; 
0x000000000004d2ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp - 0x7cb776f4], cl; ret 0x8d01; 
0x000000000001f75b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000060f5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000005028b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; js 0x502a8; mov rax, r10; syscall; 
0x000000000006a2bf: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x000000000006d25b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000002c3bb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 5; mov esp, 0x83000884; ret; 
0x00000000000251db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov esi, 0x83480143; ret; 
0x000000000006e260: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, ebp; ret 0x3948; 
0x000000000002f94b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x5489; 
0x0000000000015b9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov rax, r8; syscall; 
0x000000000001db19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x0000000000017e49: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; movapd xmm0, xmm1; ret; 
0x000000000004861b: add byte ptr [rax], al; add byte ptr [rax], al; add cl, al; out 8, eax; or eax, edi; ret; 
0x000000000005f6ab: add byte ptr [rax], al; add byte ptr [rax], al; add cl, ch; imul edx, edi, -1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000074134: add byte ptr [rax], al; add byte ptr [rax], al; add cl, ch; ret 0xfffe; 
0x000000000003ab0b: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; addps xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4b: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; addps xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x00000000000355fb: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x000000000003a44b: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; mulps xmm0, xmm0; ret; 
0x0000000000039a0b: add byte ptr [rax], al; add byte ptr [rax], al; add dl, dh; subps xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x000000000001f469: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 0x34; ret; 
0x0000000000034762: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x28; ret; 
0x000000000005a026: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000042fdf: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000022dc0: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000003ab0c: add byte ptr [rax], al; add byte ptr [rax], al; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4c: add byte ptr [rax], al; add byte ptr [rax], al; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000032ecc: add byte ptr [rax], al; add byte ptr [rax], al; addss xmm0, xmm0; ret; 
0x0000000000034a0c: add byte ptr [rax], al; add byte ptr [rax], al; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003abc4: add byte ptr [rax], al; add byte ptr [rax], al; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005edce: add byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rbx + 0x50]; 
0x000000000006a8a7: add byte ptr [rax], al; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000006936d: add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000006fe5f: add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x0000000000047eb9: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x47ed0; add rax, 0xa0; ret; 
0x000000000002d0aa: add byte ptr [rax], al; add byte ptr [rax], al; cmp si, 0x7fff; je 0x2d0c0; mov eax, r8d; ret; 
0x000000000003fb9c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbcc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000004bc6c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; lea rax, [rip + 0x692a5]; ret; 
0x000000000007034c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000005092c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000006c34c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000022bfc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0x1000; ret; 
0x0000000000073d6c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0x64; syscall; 
0x0000000000073d6c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0x64; syscall; ret; 
0x00000000000242fc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x0000000000015c9c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000004901c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000001e19c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000000047f9c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, edi; rol ax, 8; ret; 
0x000000000006f0dc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x00000000000242bc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000000015c8c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x78]; ret; 
0x0000000000017e5c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e6dc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movq rax, xmm0; shr rax, 0x3f; ret; 
0x00000000000414bc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x000000000001f4cc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000005d19c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; or dword ptr [rdi], 0x20; ret; 
0x000000000001eb8c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000003fbbc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; sqrtss xmm0, xmm0; ret; 
0x0000000000059e3c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x000000000007537c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x58; syscall; 
0x000000000002322c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000002303c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x000000000003263c: add byte ptr [rax], al; add byte ptr [rax], al; fmul st(0); add rsp, 0x28; ret; 
0x000000000003f0fc: add byte ptr [rax], al; add byte ptr [rax], al; fstp st(0); fstp st(0); add rsp, 0x48; ret; 
0x00000000000780e4: add byte ptr [rax], al; add byte ptr [rax], al; je 0x780f0; ret; 
0x000000000003acfc: add byte ptr [rax], al; add byte ptr [rax], al; jne 0x3ac65; fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x00000000000501dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rdi, [r8 + 0x24]; mov eax, 0x50; syscall; 
0x00000000000343b7: add byte ptr [rax], al; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000004f09c: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [r8], edi; ret; 
0x0000000000074494: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000001fb1c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000071e6c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000006effc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xb; ret; 
0x000000000004e5ac: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000043f4c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000001e04c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x0000000000073b62: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x00000000000235e9: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000004506c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x0000000000015b9c: add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ebe3: add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000006d5bd: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005edc6: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000005d12a: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005d122: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005d132: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005a35c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x000000000001eef9: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f09d: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004df0c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004d02c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rip + 0x69dd5], 0; ret; 
0x0000000000022dcc: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rip + 0x93f9d], 0; ret; 
0x000000000006e5e4: add byte ptr [rax], al; add byte ptr [rax], al; mov r10, rbx; mov rax, r8; syscall; 
0x000000000006def9: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x0000000000079325: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x68]; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x000000000006a2c0: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r12; pop r12; pop r13; ret; 
0x000000000005c8dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005012c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000006c83c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000060b4c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000028ffc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000007438c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000001f557: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000002fe1c: add byte ptr [rax], al; add byte ptr [rax], al; movapd xmm2, xmm1; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003086c: add byte ptr [rax], al; add byte ptr [rax], al; movaps xmm2, xmm0; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002ffe4: add byte ptr [rax], al; add byte ptr [rax], al; movd xmm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000338ec: add byte ptr [rax], al; add byte ptr [rax], al; movsd qword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x00000000000366f4: add byte ptr [rax], al; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000355fc: add byte ptr [rax], al; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f4: add byte ptr [rax], al; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030aec: add byte ptr [rax], al; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000032014: add byte ptr [rax], al; add byte ptr [rax], al; movss xmm2, dword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000004056c: add byte ptr [rax], al; add byte ptr [rax], al; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x000000000005028c: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x000000000005ada5: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000070084: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [rbp + 0x30]; mov rax, r15; syscall; 
0x000000000001e71c: add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000048fec: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003a44c: add byte ptr [rax], al; add byte ptr [rax], al; mulsd xmm0, xmm0; ret; 
0x000000000003cd0c: add byte ptr [rax], al; add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000017e77: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x0000000000018477: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000006e467: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; mov eax, 0x16; ret; 
0x000000000003a947: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x0000000000018447: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; ret; 
0x00000000000406d7: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x0000000000018027: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x00000000000780d8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; cmp qword ptr [rdi + 0xb0], 0; je 0x780f0; ret; 
0x000000000006fca8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; lock dec dword ptr [rdi]; ret; 
0x0000000000024319: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov eax, 0xc3; syscall; 
0x000000000006f109: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov rax, qword ptr fs:[0]; ret; 
0x0000000000023009: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; ret; 
0x000000000004e979: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; xor eax, eax; ret; 
0x000000000005d18b: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; add qword ptr [rdi + 8], rsi; ret; 
0x000000000001db1a: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x000000000007498b: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; mov eax, 0x6c; syscall; 
0x0000000000017e4a: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; movapd xmm0, xmm1; ret; 
0x000000000001f76b: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; ret; 
0x000000000002302b: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; xor eax, eax; ret; 
0x000000000003a795: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; mov qword ptr [rdi], rdx; ret; 
0x000000000003a749: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; movq xmm0, rdx; ret; 
0x0000000000060f5c: add byte ptr [rax], al; add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000005ca2c: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000001f75c: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a103: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000007af7b: add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000003550c: add byte ptr [rax], al; add byte ptr [rax], al; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035d6c: add byte ptr [rax], al; add byte ptr [rax], al; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000033774: add byte ptr [rax], al; add byte ptr [rax], al; pxor xmm0, xmm0; ret; 
0x0000000000022dd7: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000006f6b4: add byte ptr [rax], al; add byte ptr [rax], al; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000004861c: add byte ptr [rax], al; add byte ptr [rax], al; shl edi, 8; or eax, edi; ret; 
0x0000000000039a0c: add byte ptr [rax], al; add byte ptr [rax], al; subsd xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x000000000004f439: add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006be23: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000004509c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000023e24: add byte ptr [rax], al; add byte ptr [rax], al; xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000006936e: add byte ptr [rax], al; add byte ptr [rax], bh; sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x000000000005b8f5: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; add rsp, 0x90; pop rbx; ret; 
0x0000000000021f12: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x000000000004f64e: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; leave; ret; 
0x0000000000060414: add byte ptr [rax], al; add byte ptr [rbp + 0x11], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000000071d57: add byte ptr [rax], al; add byte ptr [rbp + 0x11], dh; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071cea: add byte ptr [rax], al; add byte ptr [rbp + 0x12], dh; add rsp, 0x28; ret; 
0x000000000005c16c: add byte ptr [rax], al; add byte ptr [rbp + 0x16], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000004f4b6: add byte ptr [rax], al; add byte ptr [rbp + 0x16], dh; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000005ce6b: add byte ptr [rax], al; add byte ptr [rbp + 0x17], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000000074f90: add byte ptr [rax], al; add byte ptr [rbp + 0x17], dh; add rsp, 0x18; ret; 
0x000000000005bee2: add byte ptr [rax], al; add byte ptr [rbp + 0x17], dh; add rsp, 0x38; ret; 
0x000000000005cd20: add byte ptr [rax], al; add byte ptr [rbp + 0x18], dh; add rsp, 0x18; ret; 
0x0000000000059d7c: add byte ptr [rax], al; add byte ptr [rbp + 0x19], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000005b669: add byte ptr [rax], al; add byte ptr [rbp + 0x19], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x0000000000041428: add byte ptr [rax], al; add byte ptr [rbp + 0x1a], dh; add rsp, 0xa0; pop rbp; ret; 
0x000000000005ff34: add byte ptr [rax], al; add byte ptr [rbp + 0x1b], dh; add rsp, 0x28; ret; 
0x0000000000050a67: add byte ptr [rax], al; add byte ptr [rbp + 0x1c], dh; add rsp, 0x160; pop r12; ret; 
0x000000000005b266: add byte ptr [rax], al; add byte ptr [rbp + 0x1c], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x0000000000074485: add byte ptr [rax], al; add byte ptr [rbp + 0x1c], dh; xor eax, eax; add rsp, 0x18; ret; 
0x0000000000023f51: add byte ptr [rax], al; add byte ptr [rbp + 0x1e], dh; add rsp, 0x28; ret; 
0x000000000004f7e8: add byte ptr [rax], al; add byte ptr [rbp + 0x1e], dh; leave; ret; 
0x0000000000016991: add byte ptr [rax], al; add byte ptr [rbp + 0x1f], dh; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000247d2: add byte ptr [rax], al; add byte ptr [rbp + 0x20], dh; add rsp, 0x18; ret; 
0x0000000000047105: add byte ptr [rax], al; add byte ptr [rbp + 0x22], dh; add rsp, 0x238; pop rbx; pop r12; ret; 
0x000000000005de7c: add byte ptr [rax], al; add byte ptr [rbp + 0x23], dh; add rsp, 0x28; ret; 
0x0000000000022a9a: add byte ptr [rax], al; add byte ptr [rbp + 0x24], dh; add rsp, 0x38; ret; 
0x0000000000064077: add byte ptr [rax], al; add byte ptr [rbp + 0x29], dh; add rsp, 0x28; ret; 
0x0000000000043dd5: add byte ptr [rax], al; add byte ptr [rbp + 0x29], dh; add rsp, 0x58; ret; 
0x000000000004df71: add byte ptr [rax], al; add byte ptr [rbp + 0x2b], dh; add rsp, 0x18; ret; 
0x000000000004d0b9: add byte ptr [rax], al; add byte ptr [rbp + 0x2b], dh; add rsp, 0x28; ret; 
0x000000000001fbaa: add byte ptr [rax], al; add byte ptr [rbp + 0x2b], dh; add rsp, 0x58; ret; 
0x0000000000075009: add byte ptr [rax], al; add byte ptr [rbp + 0x2e], dh; add rsp, 0x18; ret; 
0x000000000001f93d: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; leave; mov rax, r8; mov rdx, r9; syscall; 
0x000000000006c2fd: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rcx + rcx*4 - 0x32]; mov rdx, r8; syscall; 
0x000000000005ab57: add byte ptr [rax], al; add byte ptr [rbp + 0x37], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000022069: add byte ptr [rax], al; add byte ptr [rbp + 0x37], dh; add rsp, 0x58; ret; 
0x000000000005c92b: add byte ptr [rax], al; add byte ptr [rbp + 0x38], dh; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003e8ab: add byte ptr [rax], al; add byte ptr [rbp + 0x39], dh; add rsp, 0x58; ret; 
0x000000000005c956: add byte ptr [rax], al; add byte ptr [rbp + 0x3c], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000000059f80: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x00000000000505b3: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000032948: add byte ptr [rax], al; add byte ptr [rbp + 0x42], dh; add rsp, 0x28; ret; 
0x0000000000023189: add byte ptr [rax], al; add byte ptr [rbp + 0x43], dh; add rsp, 0xe0; pop rbx; ret; 
0x000000000001faea: add byte ptr [rax], al; add byte ptr [rbp + 0x44], dh; add rsp, 0x50; pop rbx; ret; 
0x000000000001f951: add byte ptr [rax], al; add byte ptr [rbp + 0x480a78c0], al; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000006f52f: add byte ptr [rax], al; add byte ptr [rbp + 0x481274ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x0000000000032a0b: add byte ptr [rax], al; add byte ptr [rbp + 0x4b], dh; add rsp, 0x28; ret; 
0x0000000000022fa9: add byte ptr [rax], al; add byte ptr [rbp + 0x50], dh; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000004049f: add byte ptr [rax], al; add byte ptr [rbp + 0x5a], dh; add rsp, 0x130; pop rbp; ret; 
0x000000000003e2a6: add byte ptr [rax], al; add byte ptr [rbp + 0x5c], dh; add rsp, 0x38; ret; 
0x000000000006eb9e: add byte ptr [rax], al; add byte ptr [rbp + 0x5e], dh; add rsp, 0x18; ret; 
0x0000000000069c16: add byte ptr [rax], al; add byte ptr [rbp + 0x60], dh; add rsp, 0x38; ret; 
0x00000000000427ea: add byte ptr [rax], al; add byte ptr [rbp + 0x61], dh; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000005af6b: add byte ptr [rax], al; add byte ptr [rbp + 0x61], dh; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000005bde6: add byte ptr [rax], al; add byte ptr [rbp + 0x62], dh; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x00000000000738cc: add byte ptr [rax], al; add byte ptr [rbp + 0x68], dh; add rsp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x00000000000440da: add byte ptr [rax], al; add byte ptr [rbp + 0x69], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000044b35: add byte ptr [rax], al; add byte ptr [rbp + 0x72], dh; add rsp, 0x18; ret; 
0x00000000000437b6: add byte ptr [rax], al; add byte ptr [rbp + 0x74], dh; add rsp, 0x70; pop rbp; ret; 
0x000000000002fe43: add byte ptr [rax], al; add byte ptr [rbp + 0x91], cl; add al, 0x39; ret 0x5872; 
0x000000000004c779: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000003a7d5: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; shl eax, 9; je 0x3a7e4; ret; 
0x000000000005b4d4: add byte ptr [rax], al; add byte ptr [rbp + 0xb], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b2ed: add byte ptr [rax], al; add byte ptr [rbp + 0xb], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000000180a7: add byte ptr [rax], al; add byte ptr [rbp + 0xb], dh; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000004c44a: add byte ptr [rax], al; add byte ptr [rbp + 0xc], dh; add rsp, 0x18; ret; 
0x0000000000043aa1: add byte ptr [rax], al; add byte ptr [rbp + 0xf], dh; add rsp, 0x128; ret; 
0x000000000005fd13: add byte ptr [rax], al; add byte ptr [rbp + 0xf], dh; add rsp, 0x18; ret; 
0x000000000003c5ed: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x0000000000022b12: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x0000000000022f4d: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x0000000000023331: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x58; ret; 
0x000000000001d972: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000000441bc: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000007376d: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000074713: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x30; pop rbp; ret; 
0x0000000000071faf: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x40; pop rbp; ret; 
0x000000000004aedc: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000000023c85: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x60; pop rbx; ret; 
0x000000000005ba53: add byte ptr [rax], al; add byte ptr [rbp + 7], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000007023a: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005b453: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0x148; ret; 
0x00000000000670e7: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0x208; ret; 
0x0000000000072043: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000000022468: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x000000000006199e: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0xf8; ret; 
0x0000000000074bdb: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000022546: add byte ptr [rax], al; add byte ptr [rbp + 9], dh; add rsp, 0x850; pop rbx; ret; 
0x0000000000016d01: add byte ptr [rax], al; add byte ptr [rbp + 9], dh; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000002d03e: add byte ptr [rax], al; add byte ptr [rbp + rcx + 0x44], dh; mov eax, eax; ret; 
0x000000000001ab80: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x2d], cl; sub byte ptr ss:[rsi], al; add byte ptr [rcx + 9], al; ret 0x8b48; 
0x00000000000482c7: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x60], al; dec dword ptr [rax - 0x7d]; ret; 
0x000000000006f688: add byte ptr [rax], al; add byte ptr [rbp - 0x3db7f040], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000702af: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbaf040], al; add rsp, 8; ret; 
0x000000000006f021: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbaf040], al; ret; 
0x000000000001dd4e: add byte ptr [rax], al; add byte ptr [rbp - 0x3f6af040], al; add rsp, 8; movzx eax, al; ret; 
0x000000000006e734: add byte ptr [rax], al; add byte ptr [rbp - 0x707af040], al; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; sal byte ptr [rdx + rcx + 0x41], 0xf6; ret 0xf04; 
0x0000000000063463: add byte ptr [rax], al; add byte ptr [rbp - 0x77], al; ret 0x5e9; 
0x000000000005517a: add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x000000000001e409: add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; sal byte ptr [rbp + 7], 0x5d; ret; 
0x000000000006e73c: add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; sal byte ptr [rdx + rcx + 0x41], 0xf6; ret 0xf04; 
0x0000000000029905: add byte ptr [rax], al; add byte ptr [rbp - 0x7b], cl; in al, 0xf; xchg eax, ebp; ret 0xc031; 
0x000000000004d2ad: add byte ptr [rax], al; add byte ptr [rbp - 0x7cb776f4], cl; ret 0x8d01; 
0x0000000000050057: add byte ptr [rax], al; add byte ptr [rbx + 0x1a80045], cl; je 0x50097; mov eax, 0x68; syscall; 
0x000000000003787a: add byte ptr [rax], al; add byte ptr [rbx + 0x280f02c5], al; ret; 
0x000000000005e508: add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000059294: add byte ptr [rax], al; add byte ptr [rbx + 0x31e8f7e2], al; call 0x634e92a0; ret; 
0x0000000000073b63: add byte ptr [rax], al; add byte ptr [rbx + 0x44893040], cl; and al, 0x20; mov eax, 0xde; syscall; 
0x000000000006e833: add byte ptr [rax], al; add byte ptr [rbx + 0x44], bl; mov eax, eax; ret; 
0x000000000006f0f6: add byte ptr [rax], al; add byte ptr [rbx + 0x47701fe], al; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006bd36: add byte ptr [rax], al; add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd76: add byte ptr [rax], al; add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005c883: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; mov eax, r8d; ret; 
0x000000000003bb27: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000001f75d: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004f4bf: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000060f5d: add byte ptr [rax], al; add byte ptr [rbx - 0x3fcebff1], al; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000001e565: add byte ptr [rax], al; add byte ptr [rbx - 0x57c801e], al; and byte ptr [rsi + 8], bh; ret; 
0x000000000006d48b: add byte ptr [rax], al; add byte ptr [rbx - 0x76b3fe32], al; clc; mov rdx, r10; syscall; 
0x000000000005001d: add byte ptr [rax], al; add byte ptr [rbx - 0x7f57ffbb], cl; je 0x5003d; mov eax, 0x70; syscall; 
0x0000000000074d42: add byte ptr [rax], al; add byte ptr [rcx + 0x125b8f3], cl; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x000000000006df01: add byte ptr [rax], al; add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x0000000000074463: add byte ptr [rax], al; add byte ptr [rcx + 0x49042444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000075bc3: add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000071d3a: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; clc; syscall; 
0x000000000005028d: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; js 0x502a8; mov rax, r10; syscall; 
0x0000000000053255: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; ret 0x8349; 
0x000000000001e4ef: add byte ptr [rax], al; add byte ptr [rcx + 0xe0100ef], al; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000075ab5: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov dh, 0xc; adc ecx, dword ptr [rax - 0x7d]; ret 0x4501; 
0x000000000006f098: add byte ptr [rax], al; add byte ptr [rcx + 0xf], cl; mov rax, r8; syscall; 
0x000000000002be21: add byte ptr [rax], al; add byte ptr [rcx + 0xf], cl; scasd eax, dword ptr [rdi]; dec dword ptr [rax - 0x39]; ret 0xfff0; 
0x000000000006cdcd: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; mov rax, r8; syscall; 
0x000000000006de8b: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x000000000006d3f5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rax, r8; syscall; 
0x000000000004c58c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; movsxd rsi, esi; syscall; 
0x0000000000074788: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000004367c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x000000000006e9b3: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1a], al; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005e17a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x1a], cl; syscall; 
0x00000000000420a5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000006f56f: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; pop r13; ret; 
0x000000000006a2c1: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x000000000006a284: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000001c91a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x000000000001e69d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x00000000000255d7: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000044275: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x28], cl; add rsp, 0x18; ret; 
0x000000000001f9b6: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000006dc7d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x30], cl; syscall; 
0x000000000005be22: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000005c2e8: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x0000000000060b4d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; 
0x0000000000015bd9: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000005c05a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x0000000000074f69: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0x59; syscall; 
0x000000000001f558: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000006e7d1: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; ret; 
0x000000000002c640: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; ret; 
0x000000000001fa52: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x000000000005c8dd: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000005c8dd: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; ret; 
0x0000000000070462: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000015a3c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005c8ca: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006ed0d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x000000000006c83d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x000000000005c753: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000006ce5c: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 1], cl; mov rax, r8; syscall; 
0x0000000000050123: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 9], cl; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000005016e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 9], cl; syscall; 
0x000000000002fe48: add byte ptr [rax], al; add byte ptr [rcx + rdi], al; ret 0x5872; 
0x0000000000073ce3: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x73ca5; loope 0x73cef; add byte ptr [rax], al; syscall; 
0x0000000000073d46: add byte ptr [rax], al; add byte ptr [rcx - 0x19], al; jg 0x73d98; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x0000000000048677: add byte ptr [rax], al; add byte ptr [rcx - 0x38b8f030], cl; ret; 
0x000000000006e9f5: add byte ptr [rax], al; add byte ptr [rcx - 0x47], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000002b147: add byte ptr [rax], al; add byte ptr [rcx - 0x4ef00f30], cl; sbb al, 0x39; ret 0xc375; 
0x00000000000501dd: add byte ptr [rax], al; add byte ptr [rcx - 0x73], cl; js 0x50208; mov eax, 0x50; syscall; 
0x000000000006e770: add byte ptr [rax], al; add byte ptr [rcx - 0x73], cl; mov ecx, 0x88; syscall; 
0x000000000006e5e5: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x40]; syscall; 
0x0000000000034c1d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; call 0xffffffffc0049428; jns 0x34c20; mov eax, r8d; ret; 
0x000000000002d06b: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; fdivr st(7); mov eax, r8d; ret; 
0x000000000002af11: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; ret 0x4901; 
0x000000000005818c: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000051406: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4d01; 
0x000000000006abf5: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000006e7dd: add byte ptr [rax], al; add byte ptr [rcx - 0xa], al; ret 0x7408; 
0x000000000006e74b: add byte ptr [rax], al; add byte ptr [rcx - 0xa], al; ret 0x7480; 
0x000000000006e875: add byte ptr [rax], al; add byte ptr [rcx - 0xa], al; ret 0xf08; 
0x000000000002784d: add byte ptr [rax], al; add byte ptr [rcx], al; ret 0xc281; 
0x000000000002587a: add byte ptr [rax], al; add byte ptr [rcx], al; ret 0xc889; 
0x0000000000075bce: add byte ptr [rax], al; add byte ptr [rcx], al; ret; 
0x0000000000072ce3: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8d44; 
0x00000000000411de: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0xc085; 
0x0000000000072498: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0xc889; 
0x0000000000067785: add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000006c607: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000043966: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000766d1: add byte ptr [rax], al; add byte ptr [rcx], dh; ret; 
0x000000000006d53b: add byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006be24: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x000000000002a818: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000005abef: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; 
0x000000000005abef: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; ret; 
0x000000000006cc28: add byte ptr [rax], al; add byte ptr [rcx], dh; sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x000000000004302e: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; ret 2; 
0x00000000000435ac: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0xa; ret; 
0x0000000000071e72: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; syscall; 
0x00000000000238eb: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rdi], 5; ret; 
0x00000000000485f9: add byte ptr [rax], al; add byte ptr [rdi + 0xa], dh; shl edi, 0x18; or eax, edi; ret; 
0x0000000000023383: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; syscall; 
0x000000000005b80f: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; 
0x000000000005b80f: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x000000000006d536: add byte ptr [rax], al; add byte ptr [rdi + 2], bh; xor edx, edx; mov r10d, 8; syscall; 
0x000000000006e3e7: add byte ptr [rax], al; add byte ptr [rdi + 4], bh; xor eax, eax; ret; 
0x0000000000046f8d: add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x49], al; ret 0x8349; 
0x0000000000060ab7: add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x4a], al; ret; 
0x0000000000023cfd: add byte ptr [rax], al; add byte ptr [rdi - 0x11e2153], bh; mov esi, 0x28121969; syscall; 
0x00000000000346aa: add byte ptr [rax], al; add byte ptr [rdi], bh; movd xmm0, edx; ret; 
0x00000000000509dd: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rdi + 0xd8], ebp; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e4: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rdi + 0xe8], esi; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509eb: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rdi + 0xf8], edi; ret; 
0x000000000001f545: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x20], eax; mov rdi, r8; syscall; 
0x0000000000043ee1: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x178c085; ret; 
0x000000000006d543: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x00000000000220cb: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x490220d3; add esp, 8; ret; 
0x00000000000411fa: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x48fffe09; add esp, 8; ret; 
0x00000000000243fa: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x48ffffd7; add esp, 8; ret; 
0x000000000005ac30: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sub dword ptr [rdi - 4], -1; add rsp, 8; ret; 
0x000000000007520a: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x48fffac9; add esp, 8; ret; 
0x000000000004360a: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x48fffde5; add esp, 8; ret; 
0x0000000000024306: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xe9c78948; lodsd eax, dword ptr [rsi]; fdivr st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000051a35: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000002c3bd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 5; mov esp, 0x83000884; ret; 
0x00000000000251dd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esi, 0x83480143; ret; 
0x000000000003086d: add byte ptr [rax], al; add byte ptr [rdi], cl; sub al, dl; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001f9d1: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ecx; add esp, 0x68; ret; 
0x000000000003e187: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ebx; add esp, 0x58; ret; 
0x0000000000066bdc: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ecx; add esp, 0x118; ret; 
0x0000000000032afd: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], eax; add esp, 0x48; ret; 
0x0000000000071ac1: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], edi; add esp, 0x18; ret; 
0x0000000000041534: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], edx; add esp, 0x30; pop rbx; ret; 
0x000000000003e36e: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rsi + 1], esi; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000006e262: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, ebp; ret 0x3948; 
0x0000000000033ee0: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xf1df; 
0x000000000005f86b: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000006bdbf: add byte ptr [rax], al; add byte ptr [rdx + 0x5f], bh; cmove eax, edx; ret; 
0x00000000000607b2: add byte ptr [rax], al; add byte ptr [rdx + 0x63], cl; jl 0x6076d; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000015a5d: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a32: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf3: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006c6f5: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x000000000006c200: add byte ptr [rax], al; add byte ptr [rdx + 0x7fffffff], bh; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004c5e8: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x0000000000074db7: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rax, r9; syscall; 
0x000000000001e76e: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; mov rsi, r9; syscall; 
0x0000000000023ff7: add byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; syscall; 
0x000000000002b467: add byte ptr [rax], al; add byte ptr [rdx + 0xc], bh; mov rdi, rbx; mov rax, rdx; syscall; 
0x000000000006d236: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c6: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060af6: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f738: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc73: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c0: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3eb: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc3: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce52: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52b: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa3: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c820: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fa0c: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x000000000006e9fb: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x0000000000050169: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, r14; syscall; 
0x00000000000743bf: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, r8; syscall; 
0x000000000006c10a: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fb27: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; syscall; 
0x000000000005cae9: add byte ptr [rax], al; add byte ptr [rdx + 2], bh; syscall; 
0x000000000005011e: add byte ptr [rax], al; add byte ptr [rdx + 4], bh; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000074629: add byte ptr [rax], al; add byte ptr [rdx - 0x80000000], bh; syscall; 
0x0000000000069369: add byte ptr [rax], al; add byte ptr [rdx], bh; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000002cfdc: add byte ptr [rax], al; add byte ptr [rip + 0x7ff], bh; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d039: add byte ptr [rax], al; add byte ptr [rip + 0xff], bh; je 0x2d050; mov eax, r8d; ret; 
0x000000000002543e: add byte ptr [rax], al; add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002386c: add byte ptr [rax], al; add byte ptr [rsi + 0x22], bh; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000001f927: add byte ptr [rax], al; add byte ptr [rsi + 0x406], bh; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000032c5b: add byte ptr [rax], al; add byte ptr [rsi + 0x48], ah; movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000005c52b: add byte ptr [rax], al; add byte ptr [rsi + 0x5413], bh; syscall; 
0x000000000006b460: add byte ptr [rax], al; add byte ptr [rsi + 0x5414], bh; syscall; 
0x0000000000060afb: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73d: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc78: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r10; syscall; 
0x000000000005c8c5: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x000000000006d3f0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc8: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce57: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d530: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa8: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000002ef60: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; out dx, eax; rol byte ptr [rbp + 0x59880fd2], 1; add byte ptr [rax], al; ret; 
0x000000000002edae: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; out dx, eax; rol byte ptr [rbp - 0x2c77f02e], 0; add byte ptr [rax], al; ret; 
0x000000000002f94d: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x5489; 
0x000000000002fe1d: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; sub cl, dl; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000006c6f0: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1fb: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000015b9d: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov rax, r8; syscall; 
0x00000000000502c5: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; syscall; 
0x0000000000050164: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743ba: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb22: add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x0000000000023ff2: add byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000005ec4b: add byte ptr [rax], al; add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x000000000006ebe4: add byte ptr [rax], al; add byte ptr [rsi + 6], bh; syscall; 
0x0000000000049305: add byte ptr [rax], al; add byte ptr [rsi + 6], dh; xor eax, eax; pop rbx; ret; 
0x000000000005b4fa: add byte ptr [rax], al; add byte ptr [rsi + 8], bh; syscall; 
0x000000000001db1b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x00000000000507bb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x0000000000017e4b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; movapd xmm0, xmm1; ret; 
0x00000000000751fb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; mov eax, 0x70; syscall; 
0x000000000002420b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; mov eax, 0x99; syscall; 
0x000000000002720f: add byte ptr [rax], al; add byte ptr [rsp + rdi + 0x3d], dh; ret 0; 
0x000000000003d1eb: add byte ptr [rax], al; add cl, al; out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000004861d: add byte ptr [rax], al; add cl, al; out 8, eax; or eax, edi; ret; 
0x000000000003264d: add byte ptr [rax], al; add cl, bl; call 0x48275331; add esp, 0x28; fsubp st(1); ret; 
0x00000000000397aa: add byte ptr [rax], al; add cl, ch; cmp rdi, r15; jmp qword ptr [rsi + 0x2e]; 
0x000000000005f6ad: add byte ptr [rax], al; add cl, ch; imul edx, edi, -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000003670c: add byte ptr [rax], al; add cl, ch; insb byte ptr [rdi], dx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005999f: add byte ptr [rax], al; add cl, ch; jns 0x5995b; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000074136: add byte ptr [rax], al; add cl, ch; ret 0xfffe; 
0x000000000006e6bd: add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000035e6a: add byte ptr [rax], al; add cl, ch; scasb al, byte ptr [rdi]; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000003bf2c: add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000041a60: add byte ptr [rax], al; add dh, dh; ret; 
0x000000000003ab0d: add byte ptr [rax], al; add dl, dh; addps xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4d: add byte ptr [rax], al; add dl, dh; addps xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x00000000000366f5: add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000355fd: add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f5: add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030aed: add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000002edd3: add byte ptr [rax], al; add dl, dh; movups xmm0, xmmword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x00000000000338ed: add byte ptr [rax], al; add dl, dh; movups xmmword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x000000000003a44d: add byte ptr [rax], al; add dl, dh; mulps xmm0, xmm0; ret; 
0x0000000000039a0d: add byte ptr [rax], al; add dl, dh; subps xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x000000000006d18e: add byte ptr [rax], al; add dword ptr [rip + 0x49e45], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005afa1: add byte ptr [rax], al; add eax, dword ptr [rax]; add byte ptr [rax], al; mov qword ptr [rsp + 0x20], rax; mov eax, 0xe; syscall; 
0x000000000006db08: add byte ptr [rax], al; add eax, dword ptr [rax]; add byte ptr [rax], al; mov qword ptr [rsp + 0x70], rax; mov eax, 0xe; syscall; 
0x0000000000030b6e: add byte ptr [rax], al; add edx, edx; movd xmm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x000000000003396e: add byte ptr [rax], al; add edx, edx; movd xmm0, eax; je 0x33966; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x0000000000069463: add byte ptr [rax], al; add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000001f46b: add byte ptr [rax], al; add rax, 0x34; ret; 
0x000000000006986e: add byte ptr [rax], al; add rax, 1; cmp byte ptr [rax], 0; jne 0x69870; sub rax, rdi; ret; 
0x0000000000069ad0: add byte ptr [rax], al; add rax, rbx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x00000000000697e2: add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x0000000000015bcc: add byte ptr [rax], al; add rdi, 0x28; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000068a0e: add byte ptr [rax], al; add rdi, 1; mov rax, rdi; ret; 
0x000000000004968c: add byte ptr [rax], al; add rsp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000066be3: add byte ptr [rax], al; add rsp, 0x118; ret; 
0x000000000005103f: add byte ptr [rax], al; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000002fb4e: add byte ptr [rax], al; add rsp, 0x18; movapd xmm0, xmm2; pop rbx; pop rbp; ret; 
0x000000000002964a: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000030dca: add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000019b69: add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x0000000000016d6c: add byte ptr [rax], al; add rsp, 0x28; fchs; fxch st(1); ret; 
0x00000000000436b9: add byte ptr [rax], al; add rsp, 0x28; mov rax, -1; pop rbx; pop r12; ret; 
0x000000000002e268: add byte ptr [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000034764: add byte ptr [rax], al; add rsp, 0x28; ret; 
0x000000000004ed22: add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004153b: add byte ptr [rax], al; add rsp, 0x30; pop rbx; ret; 
0x000000000002d386: add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000030c8c: add byte ptr [rax], al; add rsp, 0x38; ret; 
0x000000000003d50d: add byte ptr [rax], al; add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x00000000000312b8: add byte ptr [rax], al; add rsp, 0x48; ret; 
0x000000000003e18e: add byte ptr [rax], al; add rsp, 0x58; ret; 
0x0000000000033a8b: add byte ptr [rax], al; add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x000000000002e50c: add byte ptr [rax], al; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000001f9d8: add byte ptr [rax], al; add rsp, 0x68; ret; 
0x0000000000075dad: add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000003946b: add byte ptr [rax], al; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003948b: add byte ptr [rax], al; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x000000000006a44b: add byte ptr [rax], al; add rsp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x000000000006e0f2: add byte ptr [rax], al; add rsp, 8; mov eax, 0xb; pop rbx; pop rbp; ret; 
0x000000000005c6ae: add byte ptr [rax], al; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000069350: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000072304: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005a028: add byte ptr [rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000042fe1: add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000019a80: add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000000695ee: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000002a2e9: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000032d8e: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x7b068]; ret; 
0x000000000003286e: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x7b588]; ret; 
0x0000000000030ade: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x7d318]; ret; 
0x000000000002f19d: add byte ptr [rax], al; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x00000000000319a6: add byte ptr [rax], al; addsd xmm1, xmm0; subsd xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x000000000003ab0e: add byte ptr [rax], al; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4e: add byte ptr [rax], al; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x000000000002f26b: add byte ptr [rax], al; addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x0000000000032ece: add byte ptr [rax], al; addss xmm0, xmm0; ret; 
0x0000000000034a0e: add byte ptr [rax], al; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003abc6: add byte ptr [rax], al; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000335cf: add byte ptr [rax], al; addss xmm2, xmm3; subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000003a7e7: add byte ptr [rax], al; and byte ptr [rsi + 0xf], 0x6e; ret 0x90c3; 
0x0000000000073d14: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x0000000000073ce4: add byte ptr [rax], al; and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x0000000000073d47: add byte ptr [rax], al; and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x00000000000738b4: add byte ptr [rax], al; and edi, 0x7fffffff; syscall; 
0x000000000001e566: add byte ptr [rax], al; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x000000000004eebe: add byte ptr [rax], al; and rax, rdx; ret; 
0x0000000000043740: add byte ptr [rax], al; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x0000000000019a7b: add byte ptr [rax], al; call 0x19ae0; add rsp, 8; ret; 
0x0000000000043fe0: add byte ptr [rax], al; call 0x1f460; mov dword ptr [rax], 0x54; mov rax, -1; add rsp, 8; ret; 
0x000000000002cd5e: add byte ptr [rax], al; call 0x1f460; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000006fbee: add byte ptr [rax], al; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x00000000000469f9: add byte ptr [rax], al; call 0x46710; add rsp, 0x18; ret; 
0x0000000000070105: add byte ptr [rax], al; call 0x5ae30; mov rdi, r12; mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x000000000005d1c8: add byte ptr [rax], al; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x00000000000677d8: add byte ptr [rax], al; call 0x61030; mov rax, r12; pop r12; ret; 
0x000000000006811b: add byte ptr [rax], al; call 0x68050; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000006861b: add byte ptr [rax], al; call 0x684f0; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000697dd: add byte ptr [rax], al; call 0x69800; add rax, rbx; pop rbx; ret; 
0x0000000000021fef: add byte ptr [rax], al; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000001fcb0: add byte ptr [rax], al; call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x000000000005edd0: add byte ptr [rax], al; call qword ptr [rbx + 0x50]; 
0x00000000000501bd: add byte ptr [rax], al; call rax; 
0x0000000000072633: add byte ptr [rax], al; cmovae eax, edx; ret; 
0x000000000006bdc5: add byte ptr [rax], al; cmove eax, edx; ret; 
0x000000000006a8a9: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000005af0f: add byte ptr [rax], al; cmove rdx, rax; movsxd rdi, ebx; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000006f099: add byte ptr [rax], al; cmove rsi, r10; mov rax, r8; syscall; 
0x000000000006f2ed: add byte ptr [rax], al; cmovne eax, edx; ret; 
0x000000000006936f: add byte ptr [rax], al; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x0000000000018397: add byte ptr [rax], al; cmp byte ptr [rdi + 0x66], 0xf; outsb dx, byte ptr [rsi]; ror byte ptr [rax - 0x3f], 0xe8; and bl, ch; ret; 
0x0000000000039f71: add byte ptr [rax], al; cmp byte ptr [rdi + 0x75], 0xb2; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000006fe61: add byte ptr [rax], al; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x000000000002cfdd: add byte ptr [rax], al; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x000000000005bad1: add byte ptr [rax], al; cmp eax, 0xa000; je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbb9: add byte ptr [rax], al; cmp eax, 0xa000; je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000002d03a: add byte ptr [rax], al; cmp eax, 0xff; je 0x2d050; mov eax, r8d; ret; 
0x000000000001dfca: add byte ptr [rax], al; cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x0000000000036e6d: add byte ptr [rax], al; cmp edi, 0x32ffffff; ja 0x36eb0; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x00000000000365c9: add byte ptr [rax], al; cmp edi, 0x3c8fffff; ja 0x36608; movsd xmm0, qword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x000000000006bd37: add byte ptr [rax], al; cmp esi, 1; ja 0x6bd43; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd77: add byte ptr [rax], al; cmp esi, 1; ja 0x6bd83; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000006f0f7: add byte ptr [rax], al; cmp esi, 1; ja 0x6f102; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000047ebb: add byte ptr [rax], al; cmp qword ptr [rax + 0x58], 0; je 0x47ed0; add rax, 0xa0; ret; 
0x000000000001db02: add byte ptr [rax], al; cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000005c2db: add byte ptr [rax], al; cmp qword ptr [rdx + 8], 0x3fffffff; je 0x5c3c0; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005f1b9: add byte ptr [rax], al; cmp rax, 1; je 0x5f1d0; sub rax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000002a35d: add byte ptr [rax], al; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000006bd61: add byte ptr [rax], al; cmp rsi, rdx; ja 0x6bd6e; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000002d0ac: add byte ptr [rax], al; cmp si, 0x7fff; je 0x2d0c0; mov eax, r8d; ret; 
0x0000000000039bf0: add byte ptr [rax], al; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x0000000000039e09: add byte ptr [rax], al; divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x000000000006e3de: add byte ptr [rax], al; endbr64; cmp dword ptr [rdi], 0x80; jg 0x6e3f0; xor eax, eax; ret; 
0x000000000004713e: add byte ptr [rax], al; endbr64; cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x000000000003fa7e: add byte ptr [rax], al; endbr64; cvtss2si rax, xmm0; ret; 
0x0000000000017e7e: add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3ee: add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000003fb9e: add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbce: add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000001847e: add byte ptr [rax], al; endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000001ef1e: add byte ptr [rax], al; endbr64; hlt; ret; 
0x000000000004bc6e: add byte ptr [rax], al; endbr64; lea rax, [rip + 0x692a5]; ret; 
0x000000000001dade: add byte ptr [rax], al; endbr64; lea rax, [rip + 0x96245]; ret; 
0x000000000007034e: add byte ptr [rax], al; endbr64; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000005092e: add byte ptr [rax], al; endbr64; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000006c34e: add byte ptr [rax], al; endbr64; mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000022bfe: add byte ptr [rax], al; endbr64; mov eax, 0x1000; ret; 
0x00000000000238de: add byte ptr [rax], al; endbr64; mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; 
0x000000000006e46e: add byte ptr [rax], al; endbr64; mov eax, 0x16; ret; 
0x000000000007028e: add byte ptr [rax], al; endbr64; mov eax, 0x18; syscall; 
0x000000000007028e: add byte ptr [rax], al; endbr64; mov eax, 0x18; syscall; ret; 
0x000000000005b69e: add byte ptr [rax], al; endbr64; mov eax, 0x23; ret; 
0x00000000000508de: add byte ptr [rax], al; endbr64; mov eax, 0x26; ret; 
0x0000000000073d6e: add byte ptr [rax], al; endbr64; mov eax, 0x64; syscall; 
0x0000000000073d6e: add byte ptr [rax], al; endbr64; mov eax, 0x64; syscall; ret; 
0x00000000000242fe: add byte ptr [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x0000000000045d1e: add byte ptr [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x000000000006bb8e: add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000015c9e: add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x00000000000507de: add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000004901e: add byte ptr [rax], al; endbr64; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000001e19e: add byte ptr [rax], al; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x000000000004ac4e: add byte ptr [rax], al; endbr64; mov eax, edi; bswap eax; ret; 
0x0000000000047f9e: add byte ptr [rax], al; endbr64; mov eax, edi; rol ax, 8; ret; 
0x000000000005b1de: add byte ptr [rax], al; endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x00000000000242be: add byte ptr [rax], al; endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000000023bde: add byte ptr [rax], al; endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x00000000000242de: add byte ptr [rax], al; endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000015c8e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x78]; ret; 
0x000000000006bc1e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000017e5e: add byte ptr [rax], al; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000002e6de: add byte ptr [rax], al; endbr64; movq rax, xmm0; shr rax, 0x3f; ret; 
0x000000000003a94e: add byte ptr [rax], al; endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x00000000000414be: add byte ptr [rax], al; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x000000000001f4ce: add byte ptr [rax], al; endbr64; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x0000000000074c5e: add byte ptr [rax], al; endbr64; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000004a7ce: add byte ptr [rax], al; endbr64; movzx eax, word ptr [rdi]; rol ax, 8; movzx eax, ax; ret; 
0x000000000005d19e: add byte ptr [rax], al; endbr64; or dword ptr [rdi], 0x20; ret; 
0x000000000003f3ce: add byte ptr [rax], al; endbr64; pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3ae: add byte ptr [rax], al; endbr64; pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000059bde: add byte ptr [rax], al; endbr64; push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000001844e: add byte ptr [rax], al; endbr64; ret; 
0x000000000004a7ee: add byte ptr [rax], al; endbr64; rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000003fbae: add byte ptr [rax], al; endbr64; sqrtsd xmm0, xmm0; ret; 
0x000000000003fbbe: add byte ptr [rax], al; endbr64; sqrtss xmm0, xmm0; ret; 
0x0000000000059e3e: add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x000000000007537e: add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x58; syscall; 
0x000000000002322e: add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000005b4ee: add byte ptr [rax], al; endbr64; sub rsp, 8; mov eax, 0x7f; mov esi, 8; syscall; 
0x000000000005bf4e: add byte ptr [rax], al; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005adee: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x00000000000220fe: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x00000000000412de: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x62; syscall; 
0x0000000000059c7e: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059dde: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000059b4e: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000071f1e: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000043abe: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x00000000000435be: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000002407e: add byte ptr [rax], al; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x000000000001e0ce: add byte ptr [rax], al; endbr64; test edi, edi; jne 0x1e0e0; xor eax, eax; ret; 
0x000000000006b29e: add byte ptr [rax], al; endbr64; test esi, esi; jne 0x6b2b0; xor eax, eax; ret; 
0x000000000001dbae: add byte ptr [rax], al; endbr64; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x000000000001e07e: add byte ptr [rax], al; endbr64; xor eax, eax; cmp edi, 0x1ffff; jbe 0x1e090; ret; 
0x000000000006dd2e: add byte ptr [rax], al; endbr64; xor eax, eax; cmp rsi, rdi; sete al; ret; 
0x00000000000508be: add byte ptr [rax], al; endbr64; xor eax, eax; mov ecx, 0x2a; rep stosq qword ptr [rdi], rax; ret; 
0x000000000006f63e: add byte ptr [rax], al; endbr64; xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000002303e: add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x000000000001802e: add byte ptr [rax], al; endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000034b56: add byte ptr [rax], al; faddp st(1); add rsp, 0x48; ret; 
0x000000000003f0e1: add byte ptr [rax], al; fld xword ptr [rip + 0x6eb17]; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000337ee: add byte ptr [rax], al; fld xword ptr [rsp + 0x20]; add rsp, 8; ret; 
0x000000000001800a: add byte ptr [rax], al; fld xword ptr [rsp]; jne 0x18018; add rsp, 0x58; fxch st(1); ret; 
0x000000000003264e: add byte ptr [rax], al; fld1; fld xword ptr [rsp]; add rsp, 0x28; fsubp st(1); ret; 
0x000000000003a52e: add byte ptr [rax], al; fmul st(0); add rsp, 0x18; ret; 
0x000000000003263e: add byte ptr [rax], al; fmul st(0); add rsp, 0x28; ret; 
0x000000000003f0fe: add byte ptr [rax], al; fstp st(0); fstp st(0); add rsp, 0x48; ret; 
0x00000000000485fa: add byte ptr [rax], al; ja 0x48608; shl edi, 0x18; or eax, edi; ret; 
0x000000000004860c: add byte ptr [rax], al; ja 0x48620; shl edi, 0x10; or eax, edi; ret; 
0x000000000002f196: add byte ptr [rax], al; jbe 0x2f1b0; call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x0000000000049306: add byte ptr [rax], al; jbe 0x49310; xor eax, eax; pop rbx; ret; 
0x0000000000022dea: add byte ptr [rax], al; je 0x22df0; ret; 
0x000000000002cfe2: add byte ptr [rax], al; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d03f: add byte ptr [rax], al; je 0x2d050; mov eax, r8d; ret; 
0x000000000005bad6: add byte ptr [rax], al; je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbbe: add byte ptr [rax], al; je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000006d446: add byte ptr [rax], al; je 0x6d458; mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x00000000000780e6: add byte ptr [rax], al; je 0x780f0; ret; 
0x0000000000030ac7: add byte ptr [rax], al; jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338c7: add byte ptr [rax], al; jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000006e3e8: add byte ptr [rax], al; jg 0x6e3f0; xor eax, eax; ret; 
0x000000000002543f: add byte ptr [rax], al; jle 0x25454; lea edx, [rax - 0x100]; lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000030aa4: add byte ptr [rax], al; jle 0x30af0; comisd xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x00000000000338a4: add byte ptr [rax], al; jle 0x338f0; comisd xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000075939: add byte ptr [rax], al; jmp rax; 
0x0000000000016992: add byte ptr [rax], al; jne 0x169b5; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x0000000000016d02: add byte ptr [rax], al; jne 0x16d0f; fchs; add rsp, 0x58; fxch st(1); ret; 
0x00000000000170f2: add byte ptr [rax], al; jne 0x170ff; fchs; add rsp, 0x58; fxch st(1); ret; 
0x00000000000180a8: add byte ptr [rax], al; jne 0x180b7; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x0000000000018df2: add byte ptr [rax], al; jne 0x18dff; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000019982: add byte ptr [rax], al; jne 0x1998f; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000019b63: add byte ptr [rax], al; jne 0x19cd1; add rsp, 0x210; pop rbx; ret; 
0x000000000001d973: add byte ptr [rax], al; jne 0x1d97d; add rsp, 0x10; pop rbp; ret; 
0x000000000001f9d2: add byte ptr [rax], al; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001faeb: add byte ptr [rax], al; jne 0x1fb33; add rsp, 0x50; pop rbx; ret; 
0x000000000001fbab: add byte ptr [rax], al; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000021f13: add byte ptr [rax], al; jne 0x21f27; add rsp, 0xa0; pop rbx; ret; 
0x000000000002206a: add byte ptr [rax], al; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022469: add byte ptr [rax], al; jne 0x22475; add rsp, 0xd8; ret; 
0x0000000000022547: add byte ptr [rax], al; jne 0x22554; add rsp, 0x850; pop rbx; ret; 
0x00000000000227f9: add byte ptr [rax], al; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b9: add byte ptr [rax], al; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000022a9b: add byte ptr [rax], al; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b13: add byte ptr [rax], al; jne 0x22b1c; add rsp, 0x28; ret; 
0x0000000000022f4e: add byte ptr [rax], al; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000022faa: add byte ptr [rax], al; jne 0x22ffe; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002318a: add byte ptr [rax], al; jne 0x231d1; add rsp, 0xe0; pop rbx; ret; 
0x0000000000023332: add byte ptr [rax], al; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023afd: add byte ptr [rax], al; jne 0x23b06; add rsp, 0x28; ret; 
0x0000000000023b78: add byte ptr [rax], al; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023c86: add byte ptr [rax], al; jne 0x23c90; add rsp, 0x60; pop rbx; ret; 
0x0000000000023e9e: add byte ptr [rax], al; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000023f52: add byte ptr [rax], al; jne 0x23f74; add rsp, 0x28; ret; 
0x0000000000023fd2: add byte ptr [rax], al; jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x000000000002406c: add byte ptr [rax], al; jne 0x24075; add rsp, 0x28; ret; 
0x00000000000247d3: add byte ptr [rax], al; jne 0x247f7; add rsp, 0x18; ret; 
0x0000000000029644: add byte ptr [rax], al; jne 0x2974e; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002a0fd: add byte ptr [rax], al; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000002a1af: add byte ptr [rax], al; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x000000000002e262: add byte ptr [rax], al; jne 0x2e38d; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002e506: add byte ptr [rax], al; jne 0x2e6d3; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000030c86: add byte ptr [rax], al; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dc4: add byte ptr [rax], al; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312b2: add byte ptr [rax], al; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032949: add byte ptr [rax], al; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a0c: add byte ptr [rax], al; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032afe: add byte ptr [rax], al; jne 0x32b8d; add rsp, 0x48; ret; 
0x0000000000034bde: add byte ptr [rax], al; jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x0000000000039bea: add byte ptr [rax], al; jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x0000000000039e03: add byte ptr [rax], al; jne 0x39f58; divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x000000000003a72b: add byte ptr [rax], al; jne 0x3a744; movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000003a7d6: add byte ptr [rax], al; jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x000000000003acfe: add byte ptr [rax], al; jne 0x3ac65; fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x000000000003c5ee: add byte ptr [rax], al; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c62e: add byte ptr [rax], al; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d377: add byte ptr [rax], al; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbcf: add byte ptr [rax], al; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e188: add byte ptr [rax], al; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a7: add byte ptr [rax], al; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e36f: add byte ptr [rax], al; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8ac: add byte ptr [rax], al; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000003fabf: add byte ptr [rax], al; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb1f: add byte ptr [rax], al; jne 0x3fb28; add rsp, 0x18; ret; 
0x00000000000404a0: add byte ptr [rax], al; jne 0x404fe; add rsp, 0x130; pop rbp; ret; 
0x0000000000041429: add byte ptr [rax], al; jne 0x41447; add rsp, 0xa0; pop rbp; ret; 
0x00000000000414a9: add byte ptr [rax], al; jne 0x414b2; add rsp, 0x58; ret; 
0x0000000000041535: add byte ptr [rax], al; jne 0x415d4; add rsp, 0x30; pop rbx; ret; 
0x00000000000420fb: add byte ptr [rax], al; jne 0x42104; add rsp, 0x18; ret; 
0x00000000000427eb: add byte ptr [rax], al; jne 0x42850; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x00000000000428df: add byte ptr [rax], al; jne 0x428e8; add rsp, 0x58; ret; 
0x0000000000042cdb: add byte ptr [rax], al; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f54: add byte ptr [rax], al; jne 0x42f60; add rsp, 0xd8; ret; 
0x00000000000437b7: add byte ptr [rax], al; jne 0x4382f; add rsp, 0x70; pop rbp; ret; 
0x0000000000043aa2: add byte ptr [rax], al; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000043dd6: add byte ptr [rax], al; jne 0x43e03; add rsp, 0x58; ret; 
0x00000000000440db: add byte ptr [rax], al; jne 0x44148; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000441bd: add byte ptr [rax], al; jne 0x441c7; add rsp, 0x10; pop rbx; ret; 
0x0000000000044270: add byte ptr [rax], al; jne 0x44346; mov rax, r11; add rsp, 0x18; ret; 
0x0000000000044b36: add byte ptr [rax], al; jne 0x44bac; add rsp, 0x18; ret; 
0x0000000000045022: add byte ptr [rax], al; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047106: add byte ptr [rax], al; jne 0x4712c; add rsp, 0x238; pop rbx; pop r12; ret; 
0x0000000000047a42: add byte ptr [rax], al; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c22: add byte ptr [rax], al; jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004845a: add byte ptr [rax], al; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004aedd: add byte ptr [rax], al; jne 0x4aee7; add rsp, 0x40; pop rbx; ret; 
0x000000000004c44b: add byte ptr [rax], al; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000004c67b: add byte ptr [rax], al; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6df: add byte ptr [rax], al; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004c77a: add byte ptr [rax], al; jne 0x4c788; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000004d0ba: add byte ptr [rax], al; jne 0x4d0e9; add rsp, 0x28; ret; 
0x000000000004d15a: add byte ptr [rax], al; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d8: add byte ptr [rax], al; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df72: add byte ptr [rax], al; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff9: add byte ptr [rax], al; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e057: add byte ptr [rax], al; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000004f3cc: add byte ptr [rax], al; jne 0x4f3d5; add rsp, 0x18; ret; 
0x000000000004f4b7: add byte ptr [rax], al; jne 0x4f4d1; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000004f64f: add byte ptr [rax], al; jne 0x4f663; leave; ret; 
0x000000000004f7e9: add byte ptr [rax], al; jne 0x4f80b; leave; ret; 
0x000000000004f97f: add byte ptr [rax], al; jne 0x4f993; leave; ret; 
0x0000000000050a68: add byte ptr [rax], al; jne 0x50a88; add rsp, 0x160; pop r12; ret; 
0x0000000000059d7d: add byte ptr [rax], al; jne 0x59d9a; add rsp, 0x10; pop rbp; ret; 
0x000000000005a317: add byte ptr [rax], al; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005aa8d: add byte ptr [rax], al; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005ab58: add byte ptr [rax], al; jne 0x5ab93; add rsp, 0x20; pop rbx; ret; 
0x000000000005af6c: add byte ptr [rax], al; jne 0x5afd1; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000005b267: add byte ptr [rax], al; jne 0x5b287; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b2ee: add byte ptr [rax], al; jne 0x5b2fd; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000005b454: add byte ptr [rax], al; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005b4d5: add byte ptr [rax], al; jne 0x5b4e4; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b66a: add byte ptr [rax], al; jne 0x5b687; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b8f6: add byte ptr [rax], al; jne 0x5b90a; add rsp, 0x90; pop rbx; ret; 
0x000000000005ba54: add byte ptr [rax], al; jne 0x5ba5f; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000005bde7: add byte ptr [rax], al; jne 0x5be4d; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000005bee3: add byte ptr [rax], al; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005c16d: add byte ptr [rax], al; jne 0x5c187; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005c25d: add byte ptr [rax], al; jne 0x5c277; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005c3b0: add byte ptr [rax], al; jne 0x5c439; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000005c92c: add byte ptr [rax], al; jne 0x5c968; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005c957: add byte ptr [rax], al; jne 0x5c997; add rsp, 0x10; pop rbx; ret; 
0x000000000005cd21: add byte ptr [rax], al; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005ce6c: add byte ptr [rax], al; jne 0x5ce87; add rsp, 0x10; pop rbx; ret; 
0x000000000005cf34: add byte ptr [rax], al; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d034: add byte ptr [rax], al; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005de7d: add byte ptr [rax], al; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005e5d4: add byte ptr [rax], al; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed64: add byte ptr [rax], al; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f354: add byte ptr [rax], al; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f594: add byte ptr [rax], al; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x000000000005fd14: add byte ptr [rax], al; jne 0x5fd27; add rsp, 0x18; ret; 
0x000000000005ff35: add byte ptr [rax], al; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000060415: add byte ptr [rax], al; jne 0x6042a; add rsp, 0x10; pop rbx; ret; 
0x0000000000060926: add byte ptr [rax], al; jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000060e89: add byte ptr [rax], al; jne 0x60e95; add rsp, 0xd8; ret; 
0x000000000006101f: add byte ptr [rax], al; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610d4: add byte ptr [rax], al; jne 0x610e0; add rsp, 0xd8; ret; 
0x0000000000061194: add byte ptr [rax], al; jne 0x611a0; add rsp, 0xd8; ret; 
0x000000000006124f: add byte ptr [rax], al; jne 0x6125b; add rsp, 0xd8; ret; 
0x0000000000061304: add byte ptr [rax], al; jne 0x61310; add rsp, 0xd8; ret; 
0x000000000006199f: add byte ptr [rax], al; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064078: add byte ptr [rax], al; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc8: add byte ptr [rax], al; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bdd: add byte ptr [rax], al; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d97: add byte ptr [rax], al; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e8: add byte ptr [rax], al; jne 0x670f4; add rsp, 0x208; ret; 
0x00000000000671e9: add byte ptr [rax], al; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a9: add byte ptr [rax], al; jne 0x672b5; add rsp, 0xd8; ret; 
0x0000000000069515: add byte ptr [rax], al; jne 0x695a2; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000069c17: add byte ptr [rax], al; jne 0x69c7b; add rsp, 0x38; ret; 
0x000000000006b3ab: add byte ptr [rax], al; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb9f: add byte ptr [rax], al; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec94: add byte ptr [rax], al; jne 0x6ecb6; add rsp, 0x28; ret; 
0x000000000007023b: add byte ptr [rax], al; jne 0x70247; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000071ac2: add byte ptr [rax], al; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000071ceb: add byte ptr [rax], al; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000071d58: add byte ptr [rax], al; jne 0x71d6d; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071fb0: add byte ptr [rax], al; jne 0x71fba; add rsp, 0x40; pop rbp; ret; 
0x0000000000072044: add byte ptr [rax], al; jne 0x72050; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000007220c: add byte ptr [rax], al; jne 0x72218; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000007376e: add byte ptr [rax], al; jne 0x73778; add rsp, 0x20; pop rbx; ret; 
0x00000000000738cd: add byte ptr [rax], al; jne 0x73939; add rsp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x0000000000073e13: add byte ptr [rax], al; jne 0x73e1c; add rsp, 0x38; ret; 
0x0000000000074230: add byte ptr [rax], al; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074486: add byte ptr [rax], al; jne 0x744a6; xor eax, eax; add rsp, 0x18; ret; 
0x0000000000074714: add byte ptr [rax], al; jne 0x7471e; add rsp, 0x30; pop rbp; ret; 
0x0000000000074bdc: add byte ptr [rax], al; jne 0x74be8; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000074f91: add byte ptr [rax], al; jne 0x74fac; add rsp, 0x18; ret; 
0x000000000007500a: add byte ptr [rax], al; jne 0x7503c; add rsp, 0x18; ret; 
0x0000000000075304: add byte ptr [rax], al; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075369: add byte ptr [rax], al; jne 0x75372; add rsp, 0x28; ret; 
0x000000000007540b: add byte ptr [rax], al; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075457: add byte ptr [rax], al; jne 0x75460; add rsp, 0x18; ret; 
0x000000000007562e: add byte ptr [rax], al; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e5: add byte ptr [rax], al; jne 0x756ee; add rsp, 0x28; ret; 
0x000000000007af32: add byte ptr [rax], al; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000021a96: add byte ptr [rax], al; lea eax, [r9 + 2]; mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x000000000003fd66: add byte ptr [rax], al; lea r8, [rip + 0x7289e]; pop rbx; mov rax, r8; ret; 
0x000000000001efde: add byte ptr [rax], al; lea rax, [rax + r12 + 1]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a47f: add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a513: add byte ptr [rax], al; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000005fd62: add byte ptr [rax], al; lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x00000000000501de: add byte ptr [rax], al; lea rdi, [r8 + 0x24]; mov eax, 0x50; syscall; 
0x000000000006e771: add byte ptr [rax], al; lea rdi, [r9 + 0x88]; syscall; 
0x000000000006fbfe: add byte ptr [rax], al; lea rdi, [rip + 0x473dd]; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x000000000006d23c: add byte ptr [rax], al; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1cc: add byte ptr [rax], al; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b01: add byte ptr [rax], al; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f743: add byte ptr [rax], al; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000004f376: add byte ptr [rax], al; lea rdi, [rip + 0x65001]; call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x0000000000022e1d: add byte ptr [rax], al; lea rdi, [rip + 0x8a2ca]; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x000000000001ed0a: add byte ptr [rax], al; lea rdi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001eab7: add byte ptr [rax], al; lea rdi, [rip + 0x98490]; syscall; 
0x0000000000015a68: add byte ptr [rax], al; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000022220: add byte ptr [rax], al; lea rdx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000001f974: add byte ptr [rax], al; lea rdx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000005abcb: add byte ptr [rax], al; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abcb: add byte ptr [rax], al; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005abab: add byte ptr [rax], al; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abab: add byte ptr [rax], al; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x0000000000043cde: add byte ptr [rax], al; lea rsi, [rsp + 0x80]; mov eax, 0xf4; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000001f56c: add byte ptr [rax], al; lea rsi, [rsp + 8]; mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000006dd0c: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 0x38], edx; cmp eax, 2; jne 0x6dd20; xor eax, eax; ret; 
0x000000000006e8ee: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006b9ff: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f649: add byte ptr [rax], al; lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000343b9: add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x0000000000073caa: add byte ptr [rax], al; lock or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000004f09e: add byte ptr [rax], al; mov dword ptr [r8], edi; ret; 
0x0000000000015c77: add byte ptr [rax], al; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000019a57: add byte ptr [rax], al; mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x0000000000019a13: add byte ptr [rax], al; mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x0000000000070a28: add byte ptr [rax], al; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x000000000006de1e: add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000043ceb: add byte ptr [rax], al; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x0000000000074464: add byte ptr [rax], al; mov dword ptr [rsp + 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000001ece8: add byte ptr [rax], al; mov dword ptr [rsp + 8], 1; syscall; 
0x000000000005badc: add byte ptr [rax], al; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bcb9: add byte ptr [rax], al; mov eax, 0x106; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000006e046: add byte ptr [rax], al; mov eax, 0x10; ret; 
0x00000000000233f5: add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000023f91: add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x0000000000023758: add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x000000000006bea6: add byte ptr [rax], al; mov eax, 0x16; ret; 
0x0000000000074496: add byte ptr [rax], al; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000004518a: add byte ptr [rax], al; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000005bc97: add byte ptr [rax], al; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000743b6: add byte ptr [rax], al; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb1e: add byte ptr [rax], al; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000001f9b2: add byte ptr [rax], al; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000005e176: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c74f: add byte ptr [rax], al; mov eax, 0x48; mov rsi, r14; syscall; 
0x00000000000748b1: add byte ptr [rax], al; mov eax, 0x4f; mov rdi, r12; syscall; 
0x0000000000071e6e: add byte ptr [rax], al; mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000005007c: add byte ptr [rax], al; mov eax, 0x66; syscall; 
0x000000000007b37b: add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x000000000007b37b: add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x00000000000232b6: add byte ptr [rax], al; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000004373b: add byte ptr [rax], al; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000006effe: add byte ptr [rax], al; mov eax, 0xb; ret; 
0x000000000006c3d4: add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x000000000006c3d4: add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x000000000002b4f5: add byte ptr [rax], al; mov eax, 0xc; mov rdi, rbp; syscall; 
0x000000000006d4a6: add byte ptr [rax], al; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000005af1c: add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000001eab2: add byte ptr [rax], al; mov eax, 0xda; lea rdi, [rip + 0x98490]; syscall; 
0x00000000000738af: add byte ptr [rax], al; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000005b80b: add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005b80b: add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x0000000000073b07: add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000006f5ca: add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000005abeb: add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000005abeb: add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; ret; 
0x0000000000043ce6: add byte ptr [rax], al; mov eax, 0xf4; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x0000000000015c7d: add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000004505c: add byte ptr [rax], al; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x000000000004e5ae: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000043f4e: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000001e04e: add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000000703d6: add byte ptr [rax], al; mov eax, 2; syscall; 
0x0000000000073b64: add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x00000000000235eb: add byte ptr [rax], al; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000005001e: add byte ptr [rax], al; mov eax, dword ptr [rbp]; test al, 0x80; je 0x5003d; mov eax, 0x70; syscall; 
0x0000000000050058: add byte ptr [rax], al; mov eax, dword ptr [rbp]; test al, 1; je 0x50097; mov eax, 0x68; syscall; 
0x000000000006f2cb: add byte ptr [rax], al; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000005addf: add byte ptr [rax], al; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000004506e: add byte ptr [rax], al; mov eax, edi; ret; 
0x0000000000048678: add byte ptr [rax], al; mov eax, edx; cmova eax, edi; ret; 
0x00000000000420a6: add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000006f570: add byte ptr [rax], al; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000049693: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000040379: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074a60: add byte ptr [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000006e7d2: add byte ptr [rax], al; mov eax, r8d; pop rbx; ret; 
0x000000000002c641: add byte ptr [rax], al; mov eax, r8d; ret; 
0x0000000000074d43: add byte ptr [rax], al; mov ebx, esi; mov eax, 0x125; movsxd rsi, esi; syscall; 
0x00000000000238e7: add byte ptr [rax], al; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000238e7: add byte ptr [rax], al; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x0000000000023cfe: add byte ptr [rax], al; mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x0000000000023384: add byte ptr [rax], al; mov edi, 1; syscall; 
0x000000000005b810: add byte ptr [rax], al; mov edi, 2; syscall; 
0x000000000005b810: add byte ptr [rax], al; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000006d537: add byte ptr [rax], al; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000006df02: add byte ptr [rax], al; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000006936a: add byte ptr [rax], al; mov edx, 0; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000005bae1: add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000006bdc0: add byte ptr [rax], al; mov edx, 0x5f; cmove eax, edx; ret; 
0x0000000000015a5e: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a33: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf4: add byte ptr [rax], al; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006c6f6: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c201: add byte ptr [rax], al; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000007462a: add byte ptr [rax], al; mov edx, 0x80000000; syscall; 
0x000000000004c5e9: add byte ptr [rax], al; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074db8: add byte ptr [rax], al; mov edx, 0x800; mov rax, r9; syscall; 
0x000000000001e76f: add byte ptr [rax], al; mov edx, 0x800; mov rsi, r9; syscall; 
0x0000000000023ff8: add byte ptr [rax], al; mov edx, 0x800; syscall; 
0x000000000002b468: add byte ptr [rax], al; mov edx, 0xc; mov rdi, rbx; mov rax, rdx; syscall; 
0x000000000006d237: add byte ptr [rax], al; mov edx, 1; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c7: add byte ptr [rax], al; mov edx, 1; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060af7: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f739: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc74: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c1: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3ec: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc4: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce53: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52c: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa4: add byte ptr [rax], al; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c821: add byte ptr [rax], al; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fa0d: add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x000000000006e9fc: add byte ptr [rax], al; mov edx, 1; mov rax, r9; syscall; 
0x000000000005016a: add byte ptr [rax], al; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743c0: add byte ptr [rax], al; mov edx, 1; mov rdi, r8; syscall; 
0x000000000006c10b: add byte ptr [rax], al; mov edx, 1; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fb28: add byte ptr [rax], al; mov edx, 1; syscall; 
0x000000000005caea: add byte ptr [rax], al; mov edx, 2; syscall; 
0x000000000005011f: add byte ptr [rax], al; mov edx, 4; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000005bb3e: add byte ptr [rax], al; mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000006e76c: add byte ptr [rax], al; mov esi, 0x18; lea rdi, [r9 + 0x88]; syscall; 
0x000000000002386d: add byte ptr [rax], al; mov esi, 0x22; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000001f928: add byte ptr [rax], al; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000005c52c: add byte ptr [rax], al; mov esi, 0x5413; syscall; 
0x000000000006b461: add byte ptr [rax], al; mov esi, 0x5414; syscall; 
0x00000000000614df: add byte ptr [rax], al; mov esi, 0x80c2; mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x0000000000060afc: add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73e: add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006e9f1: add byte ptr [rax], al; mov esi, 0x81; mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x000000000006dc79: add byte ptr [rax], al; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c6: add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3f1: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc9: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce58: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d531: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa9: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c6f1: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1fc: add byte ptr [rax], al; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000015b9e: add byte ptr [rax], al; mov esi, 1; mov rax, r8; syscall; 
0x00000000000502c6: add byte ptr [rax], al; mov esi, 1; syscall; 
0x0000000000050165: add byte ptr [rax], al; mov esi, 2; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743bb: add byte ptr [rax], al; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb23: add byte ptr [rax], al; mov esi, 2; mov edx, 1; syscall; 
0x000000000001f9ad: add byte ptr [rax], al; mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x0000000000023ff3: add byte ptr [rax], al; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000005ec4c: add byte ptr [rax], al; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000006ebe5: add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000005b4fb: add byte ptr [rax], al; mov esi, 8; syscall; 
0x000000000006e9b4: add byte ptr [rax], al; mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006d5bf: add byte ptr [rax], al; mov qword ptr [rax + 0x78], rdx; ret; 
0x00000000000527e9: add byte ptr [rax], al; mov qword ptr [rbp + 8], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000042fd9: add byte ptr [rax], al; mov qword ptr [rbp], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000052af0: add byte ptr [rax], al; mov qword ptr [rbp], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005edc8: add byte ptr [rax], al; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000072250: add byte ptr [rax], al; mov qword ptr [rbx + 0x30], rax; mov rax, rbx; mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x000000000005ede5: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005f158: add byte ptr [rax], al; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005d12c: add byte ptr [rax], al; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005d124: add byte ptr [rax], al; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005a356: add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000005d134: add byte ptr [rax], al; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005a35e: add byte ptr [rax], al; mov qword ptr [rdi], 0; ret; 
0x000000000001eefb: add byte ptr [rax], al; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000006c3e5: add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000005f09f: add byte ptr [rax], al; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004df0e: add byte ptr [rax], al; mov qword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004def7: add byte ptr [rax], al; mov qword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x000000000004d02e: add byte ptr [rax], al; mov qword ptr [rip + 0x69dd5], 0; ret; 
0x000000000002b48e: add byte ptr [rax], al; mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x0000000000022dce: add byte ptr [rax], al; mov qword ptr [rip + 0x93f9d], 0; ret; 
0x000000000005f0e2: add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000023750: add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x0000000000041254: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005afa5: add byte ptr [rax], al; mov qword ptr [rsp + 0x20], rax; mov eax, 0xe; syscall; 
0x00000000000746b3: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000004fcd0: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9e9: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074750: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x000000000006db0c: add byte ptr [rax], al; mov qword ptr [rsp + 0x70], rax; mov eax, 0xe; syscall; 
0x00000000000703ce: add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000001f576: add byte ptr [rax], al; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000004147d: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b4c: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000074412: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000074b97: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000006e5e6: add byte ptr [rax], al; mov r10, rbx; mov rax, r8; syscall; 
0x000000000001f540: add byte ptr [rax], al; mov r10d, 8; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x0000000000022e89: add byte ptr [rax], al; mov r8, qword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x000000000001f922: add byte ptr [rax], al; mov r8d, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000006d026: add byte ptr [rax], al; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006cd8e: add byte ptr [rax], al; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006e9f6: add byte ptr [rax], al; mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x0000000000019a5d: add byte ptr [rax], al; mov rax, -1; add rsp, 8; ret; 
0x000000000006defb: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005e379: add byte ptr [rax], al; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x0000000000047ece: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x6c0d9]; ret; 
0x0000000000079327: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x68]; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000067b21: add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; mov rsi, r15; mov rdi, r8; call rax; 
0x000000000006dc7e: add byte ptr [rax], al; mov rax, r10; syscall; 
0x0000000000044276: add byte ptr [rax], al; mov rax, r11; add rsp, 0x18; ret; 
0x00000000000614e4: add byte ptr [rax], al; mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x000000000005bab8: add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006a2c2: add byte ptr [rax], al; mov rax, r12; pop r12; pop r13; ret; 
0x000000000006a83c: add byte ptr [rax], al; mov rax, r12; pop r12; ret; 
0x000000000006a285: add byte ptr [rax], al; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000001c91b: add byte ptr [rax], al; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001e69e: add byte ptr [rax], al; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000000255d8: add byte ptr [rax], al; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000001fa53: add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x000000000001f9f6: add byte ptr [rax], al; mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000005c8de: add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8de: add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000070463: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000015a3d: add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000005c8cb: add byte ptr [rax], al; mov rax, r8; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006d1f6: add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x000000000006c70e: add byte ptr [rax], al; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000007436e: add byte ptr [rax], al; mov rax, r9; mov rsi, r8; syscall; 
0x000000000005e68e: add byte ptr [rax], al; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000015bda: add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000002a52c: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000028ffe: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000006cc30: add byte ptr [rax], al; mov rax, rbx; syscall; 
0x000000000007438e: add byte ptr [rax], al; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000001f4e6: add byte ptr [rax], al; mov rax, rdx; syscall; 
0x000000000006b7db: add byte ptr [rax], al; mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000004f642: add byte ptr [rax], al; mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7dc: add byte ptr [rax], al; mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f972: add byte ptr [rax], al; mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x00000000000501b6: add byte ptr [rax], al; mov rdi, qword ptr [rcx + 0x88]; call rax; 
0x000000000006ce22: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3f6: add byte ptr [rax], al; mov rdi, r12; mov rax, r8; syscall; 
0x000000000004c58d: add byte ptr [rax], al; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x0000000000074789: add byte ptr [rax], al; mov rdi, r12; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000004367d: add byte ptr [rax], al; mov rdi, r12; syscall; 
0x000000000006cdce: add byte ptr [rax], al; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000074539: add byte ptr [rax], al; mov rdi, r13; mov rdx, r14; syscall; 
0x00000000000744e8: add byte ptr [rax], al; mov rdi, r13; mov rsi, rbx; mov rdx, r14; syscall; 
0x0000000000050124: add byte ptr [rax], al; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000005016f: add byte ptr [rax], al; mov rdi, r14; syscall; 
0x000000000006ce5d: add byte ptr [rax], al; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005c05b: add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000005be23: add byte ptr [rax], al; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005b842: add byte ptr [rax], al; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000023e39: add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000073911: add byte ptr [rax], al; mov rdi, rbp; call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000005d3a3: add byte ptr [rax], al; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005d1cd: add byte ptr [rax], al; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000006edfe: add byte ptr [rax], al; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000005d536: add byte ptr [rax], al; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000005bcbe: add byte ptr [rax], al; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000005ba22: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000059d5f: add byte ptr [rax], al; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000002b4fa: add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000005ce4d: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c938: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000006c110: add byte ptr [rax], al; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006bfae: add byte ptr [rax], al; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000002b46d: add byte ptr [rax], al; mov rdi, rbx; mov rax, rdx; syscall; 
0x00000000000438c8: add byte ptr [rax], al; mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000073b0c: add byte ptr [rax], al; mov rdi, rdx; syscall; 
0x00000000000232bb: add byte ptr [rax], al; mov rdi, rsi; syscall; 
0x000000000006d59b: add byte ptr [rax], al; mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006d2be: add byte ptr [rax], al; mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000004f432: add byte ptr [rax], al; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000001f92d: add byte ptr [rax], al; mov rdx, r10; mov rax, r8; syscall; 
0x000000000001f9b7: add byte ptr [rax], al; mov rdx, r10; syscall; 
0x000000000006f48e: add byte ptr [rax], al; mov rdx, rbp; syscall; 
0x000000000002336e: add byte ptr [rax], al; mov rdx, rdi; syscall; 
0x000000000006d4ab: add byte ptr [rax], al; mov rdx, rsi; syscall; 
0x00000000000501af: add byte ptr [rax], al; mov rsi, qword ptr [rcx + 0xa0]; mov rdi, qword ptr [rcx + 0x88]; call rax; 
0x000000000005e17b: add byte ptr [rax], al; mov rsi, r12; syscall; 
0x000000000006de8c: add byte ptr [rax], al; mov rsi, r13; syscall; 
0x000000000005c754: add byte ptr [rax], al; mov rsi, r14; syscall; 
0x0000000000074f6a: add byte ptr [rax], al; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000007592c: add byte ptr [rax], al; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000001f559: add byte ptr [rax], al; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005c2e9: add byte ptr [rax], al; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000001e774: add byte ptr [rax], al; mov rsi, r9; syscall; 
0x0000000000071e2c: add byte ptr [rax], al; mov rsi, rbp; syscall; 
0x0000000000043bd8: add byte ptr [rax], al; mov rsi, rbx; syscall; 
0x000000000005bc83: add byte ptr [rax], al; mov rsi, rdx; mov rdi, rbp; syscall; 
0x0000000000071d33: add byte ptr [rax], al; mov rsi, rsp; mov eax, 0xe5; movsxd rdi, r8d; syscall; 
0x000000000006b259: add byte ptr [rax], al; mov word ptr [rdi + 0x16], ax; ret; 
0x00000000000399c6: add byte ptr [rax], al; movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x000000000002fe1e: add byte ptr [rax], al; movapd xmm2, xmm1; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000034066: add byte ptr [rax], al; movaps xmm0, xmm1; ret; 
0x000000000002f04e: add byte ptr [rax], al; movaps xmm1, xmm0; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000003086e: add byte ptr [rax], al; movaps xmm2, xmm0; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000341b6: add byte ptr [rax], al; movd xmm0, eax; ret; 
0x000000000002ffe6: add byte ptr [rax], al; movd xmm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003490e: add byte ptr [rax], al; movq xmm0, rdx; add rsp, 0x18; ret; 
0x0000000000032c5c: add byte ptr [rax], al; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003a73e: add byte ptr [rax], al; movsd qword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000000338ee: add byte ptr [rax], al; movsd qword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x00000000000366f6: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000355fe: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f6: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030aee: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000002edd4: add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x00000000000319e6: add byte ptr [rax], al; movsd xmm2, qword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000348fa: add byte ptr [rax], al; movsd xmm7, qword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000035e56: add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x000000000002f0c6: add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002ef80: add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x0000000000032016: add byte ptr [rax], al; movss xmm2, dword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000349f5: add byte ptr [rax], al; movss xmm2, dword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x000000000004056e: add byte ptr [rax], al; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x000000000005bc7b: add byte ptr [rax], al; movsxd rbp, edi; mov eax, 5; mov rsi, rdx; mov rdi, rbp; syscall; 
0x000000000002af0b: add byte ptr [rax], al; movsxd rcx, dword ptr [rdi]; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000005028e: add byte ptr [rax], al; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x000000000007445a: add byte ptr [rax], al; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005ada7: add byte ptr [rax], al; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000070086: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp + 0x30]; mov rax, r15; syscall; 
0x000000000004c5b5: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000074d88: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000004c5e0: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074daf: add byte ptr [rax], al; movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x000000000006ded6: add byte ptr [rax], al; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x0000000000073cb4: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000073cb4: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x0000000000059be9: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000001e766: add byte ptr [rax], al; movsxd rdi, dword ptr [rdi + 8]; mov eax, 0xd9; mov edx, 0x800; mov rsi, r9; syscall; 
0x000000000006081b: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x00000000000745d9: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x00000000000607b3: add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000001e71e: add byte ptr [rax], al; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000005c5b4: add byte ptr [rax], al; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000005bd1c: add byte ptr [rax], al; movsxd rdi, r8d; movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x0000000000071d3b: add byte ptr [rax], al; movsxd rdi, r8d; syscall; 
0x000000000005c5ce: add byte ptr [rax], al; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005ec51: add byte ptr [rax], al; movsxd rdx, ebx; syscall; 
0x000000000006f090: add byte ptr [rax], al; movsxd rdx, edx; mov r8d, 0xca; cmove rsi, r10; mov rax, r8; syscall; 
0x000000000004c4c4: add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x00000000000509d7: add byte ptr [rax], al; movups xmmword ptr [rdi + 0xc8], xmm4; movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509de: add byte ptr [rax], al; movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e5: add byte ptr [rax], al; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509ec: add byte ptr [rax], al; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x0000000000019bfb: add byte ptr [rax], al; movups xmmword ptr [rsp + 0x1d0], xmm0; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c03: add byte ptr [rax], al; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c0b: add byte ptr [rax], al; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x000000000001f546: add byte ptr [rax], al; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x0000000000048fee: add byte ptr [rax], al; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x00000000000694a6: add byte ptr [rax], al; movzx eax, dl; sub eax, ecx; ret; 
0x0000000000048644: add byte ptr [rax], al; movzx edi, dil; cmova eax, edi; ret; 
0x000000000003cc5e: add byte ptr [rax], al; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x00000000000354da: add byte ptr [rax], al; mulsd xmm0, qword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x000000000003a44e: add byte ptr [rax], al; mulsd xmm0, xmm0; ret; 
0x0000000000034366: add byte ptr [rax], al; mulsd xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000019451: add byte ptr [rax], al; mulsd xmm3, xmm4; add rsp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x000000000003322e: add byte ptr [rax], al; mulsd xmm4, qword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x000000000003cd0e: add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000035d3e: add byte ptr [rax], al; mulss xmm0, dword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x000000000003a4be: add byte ptr [rax], al; mulss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003cf46: add byte ptr [rax], al; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000017e79: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3e9: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 8]; fabs; ret; 
0x0000000000018479: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000006e469: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; mov eax, 0x16; ret; 
0x000000000005b1d9: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x000000000003a949: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x0000000000018449: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; ret; 
0x00000000000406d9: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x0000000000018029: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000074369: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov rax, r9; mov rsi, r8; syscall; 
0x000000000001f4e1: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov rax, rdx; syscall; 
0x0000000000033089: add byte ptr [rax], al; nop dword ptr [rax + rax]; ret; 
0x00000000000780da: add byte ptr [rax], al; nop dword ptr [rax]; cmp qword ptr [rdi + 0xb0], 0; je 0x780f0; ret; 
0x000000000006fcaa: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; lock dec dword ptr [rdi]; ret; 
0x000000000002431b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov eax, 0xc3; syscall; 
0x000000000001f45b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x000000000006f10b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov rax, qword ptr fs:[0]; ret; 
0x000000000002433b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x000000000002300b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; ret; 
0x000000000004f9bb: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x3b; syscall; 
0x000000000002219a: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x43; syscall; 
0x0000000000023a4a: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x87; syscall; 
0x000000000004272b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xab; syscall; 
0x000000000004e97b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; xor eax, eax; ret; 
0x0000000000074322: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000023872: add byte ptr [rax], al; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x00000000000333e7: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000074385: add byte ptr [rax], al; nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000002c768: add byte ptr [rax], al; nop word ptr [rax + rax]; ret; 
0x0000000000043fc0: add byte ptr [rax], al; nop word ptr [rax + rax]; test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000001843f: add byte ptr [rax], al; nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000005d18d: add byte ptr [rax], al; nop; endbr64; add qword ptr [rdi + 8], rsi; ret; 
0x000000000001db1c: add byte ptr [rax], al; nop; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x000000000007498d: add byte ptr [rax], al; nop; endbr64; mov eax, 0x6c; syscall; 
0x000000000007498d: add byte ptr [rax], al; nop; endbr64; mov eax, 0x6c; syscall; ret; 
0x00000000000507bc: add byte ptr [rax], al; nop; endbr64; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000002429d: add byte ptr [rax], al; nop; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000000017e4c: add byte ptr [rax], al; nop; endbr64; movapd xmm0, xmm1; ret; 
0x000000000001845d: add byte ptr [rax], al; nop; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000023ccd: add byte ptr [rax], al; nop; endbr64; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x000000000001f76d: add byte ptr [rax], al; nop; endbr64; ret; 
0x0000000000042f6d: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0x3f; syscall; 
0x000000000007546d: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0x4c; syscall; 
0x00000000000750bd: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0x54; syscall; 
0x00000000000751fc: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0x70; syscall; 
0x000000000002420c: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0x99; syscall; 
0x00000000000243ed: add byte ptr [rax], al; nop; endbr64; sub rsp, 8; mov eax, 0xc5; syscall; 
0x000000000002302d: add byte ptr [rax], al; nop; endbr64; xor eax, eax; ret; 
0x00000000000603ed: add byte ptr [rax], al; nop; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000005d0d8: add byte ptr [rax], al; not eax; shr eax, 0x1f; ret; 
0x000000000006e810: add byte ptr [rax], al; not esi; and esi, 0x80; or esi, 7; syscall; 
0x0000000000060f50: add byte ptr [rax], al; or al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000003a797: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; mov qword ptr [rdi], rdx; ret; 
0x000000000003a74b: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xc2; movq xmm0, rdx; ret; 
0x000000000006d0e4: add byte ptr [rax], al; or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000030bda: add byte ptr [rax], al; or byte ptr [rcx], 0xd0; movd xmm0, eax; ret; 
0x0000000000060f5e: add byte ptr [rax], al; or dword ptr [rdi], 0x40; xor eax, eax; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000005ce06: add byte ptr [rax], al; or eax, 0x20; mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x000000000006d48c: add byte ptr [rax], al; or esi, 1; mov rax, r15; mov rdx, r10; syscall; 
0x000000000006e62d: add byte ptr [rax], al; or esi, 7; syscall; 
0x0000000000076276: add byte ptr [rax], al; or rdx, rax; je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x0000000000075bc4: add byte ptr [rax], al; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000050a71: add byte ptr [rax], al; pop r12; ret; 
0x000000000007afef: add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x000000000005ca11: add byte ptr [rax], al; pop rbp; jmp rax; 
0x0000000000059f81: add byte ptr [rax], al; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000505b4: add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x00000000000404a9: add byte ptr [rax], al; pop rbp; ret; 
0x000000000001df95: add byte ptr [rax], al; pop rbp; test eax, eax; setne al; movzx eax, al; ret; 
0x00000000000505ae: add byte ptr [rax], al; pop rbx; mov eax, 0xc; pop rbp; pop r12; ret; 
0x0000000000074ae6: add byte ptr [rax], al; pop rbx; mov eax, 6; pop rbp; pop r12; ret; 
0x000000000006e834: add byte ptr [rax], al; pop rbx; mov eax, r8d; ret; 
0x000000000004710f: add byte ptr [rax], al; pop rbx; pop r12; ret; 
0x000000000005c884: add byte ptr [rax], al; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000003bb28: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001f75e: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f4c0: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000019b70: add byte ptr [rax], al; pop rbx; ret; 
0x000000000005e509: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000007af7d: add byte ptr [rax], al; pop rdx; ret; 
0x000000000003550e: add byte ptr [rax], al; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035d6e: add byte ptr [rax], al; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000033716: add byte ptr [rax], al; pxor xmm0, xmm0; ret; 
0x000000000002edaf: add byte ptr [rax], al; pxor xmm0, xmm0; test edx, edx; js 0x2ee90; ret; 
0x000000000002ef61: add byte ptr [rax], al; pxor xmm0, xmm0; test edx, edx; js 0x2f0c8; ret; 
0x0000000000061416: add byte ptr [rax], al; rep stosq qword ptr [rdi], rax; mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000508c9: add byte ptr [rax], al; rep stosq qword ptr [rdi], rax; ret; 
0x000000000001dd3f: add byte ptr [rax], al; ret; 
0x000000000002d06c: add byte ptr [rax], al; sbb r8d, -1; mov eax, r8d; ret; 
0x000000000006fc7d: add byte ptr [rax], al; sbb rsi, rsi; mov rax, r8; and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x000000000001e4fe: add byte ptr [rax], al; seta al; ret; 
0x000000000001fc47: add byte ptr [rax], al; sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x000000000001fc66: add byte ptr [rax], al; setne al; add rsp, 8; neg eax; ret; 
0x000000000001e040: add byte ptr [rax], al; setne al; ret; 
0x000000000006f6b6: add byte ptr [rax], al; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000003d1ec: add byte ptr [rax], al; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000004861e: add byte ptr [rax], al; shl edi, 8; or eax, edi; ret; 
0x000000000005b0e7: add byte ptr [rax], al; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000003d0dc: add byte ptr [rax], al; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000001e4f0: add byte ptr [rax], al; sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x00000000000411df: add byte ptr [rax], al; sub edx, eax; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000043ffe: add byte ptr [rax], al; sub esi, 0xd7c0; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x0000000000034c1e: add byte ptr [rax], al; sub r8d, 1; add rax, rax; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d26: add byte ptr [rax], al; sub r8d, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000006a55e: add byte ptr [rax], al; sub r8d, edx; mov eax, r8d; ret; 
0x0000000000022253: add byte ptr [rax], al; sub rax, 1; cmp rax, -3; jbe 0x22268; pop rbx; ret; 
0x000000000006a176: add byte ptr [rax], al; sub rax, 2; pop rbp; ret; 
0x000000000004c47e: add byte ptr [rax], al; sub rsp, 8; syscall; 
0x00000000000338de: add byte ptr [rax], al; subsd xmm0, qword ptr [rip + 0x7a518]; ret; 
0x0000000000039a0e: add byte ptr [rax], al; subsd xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x0000000000017b84: add byte ptr [rax], al; subsd xmm1, xmm1; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000039d76: add byte ptr [rax], al; subsd xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x0000000000015b69: add byte ptr [rax], al; syscall; 
0x000000000005b815: add byte ptr [rax], al; syscall; mov eax, r8d; ret; 
0x000000000006d544: add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000021f71: add byte ptr [rax], al; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f41: add byte ptr [rax], al; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000042795: add byte ptr [rax], al; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000001fbed: add byte ptr [rax], al; syscall; neg eax; ret; 
0x0000000000023d5c: add byte ptr [rax], al; syscall; ret; 
0x0000000000043ee2: add byte ptr [rax], al; syscall; test eax, eax; js 0x43eeb; ret; 
0x0000000000073cbd: add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x00000000000702b0: add byte ptr [rax], al; test eax, eax; cmovne eax, edx; add rsp, 8; ret; 
0x000000000006f022: add byte ptr [rax], al; test eax, eax; cmovne eax, edx; ret; 
0x000000000006f689: add byte ptr [rax], al; test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000253db: add byte ptr [rax], al; test eax, eax; jne 0x253e8; pop rbp; ret; 
0x0000000000043fc6: add byte ptr [rax], al; test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000005dc5b: add byte ptr [rax], al; test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x000000000001f952: add byte ptr [rax], al; test eax, eax; js 0x1f962; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000001dd4f: add byte ptr [rax], al; test eax, eax; setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000003a9a4: add byte ptr [rax], al; test ebx, ebx; je 0x3a9b0; add rsp, 0x10; pop rbx; ret; 
0x000000000003a9f4: add byte ptr [rax], al; test ebx, ebx; je 0x3aa00; add rsp, 0x10; pop rbx; ret; 
0x000000000006f530: add byte ptr [rax], al; test edi, edi; je 0x6f548; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000005091a: add byte ptr [rax], al; test esi, 0xffffff00; jne 0x50928; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001e40a: add byte ptr [rax], al; test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x000000000005f0d6: add byte ptr [rax], al; test rax, rax; je 0x5f0e4; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000607ec: add byte ptr [rax], al; test rax, rax; je 0x60850; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000005f050: add byte ptr [rax], al; test rax, rax; jne 0x5f040; ret; 
0x0000000000068a1e: add byte ptr [rax], al; test rcx, rcx; jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x000000000005f086: add byte ptr [rax], al; test rdx, rdx; je 0x5f098; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000005f14c: add byte ptr [rax], al; test rdx, rdx; je 0x5f15a; mov qword ptr [rdx + 0xd0], rdi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x00000000000306c8: add byte ptr [rax], al; xor dl, 0xf; pop rsi; ret; 
0x000000000002a819: add byte ptr [rax], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000019a19: add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x0000000000022ecb: add byte ptr [rax], al; xor eax, eax; call 0x1f8c0; add rsp, 8; sar eax, 0x1f; ret; 
0x000000000001e038: add byte ptr [rax], al; xor eax, eax; cmp edi, 0xfffe; setne al; ret; 
0x000000000001de15: add byte ptr [rax], al; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x000000000006be25: add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000006b981: add byte ptr [rax], al; xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi], esi; ret; 
0x000000000006c608: add byte ptr [rax], al; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000000738d6: add byte ptr [rax], al; xor eax, eax; pop rbp; ret; 
0x0000000000043967: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000000162bd: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006be79: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000002cdaa: add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000001dec3: add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000044004: add byte ptr [rax], al; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000001e576: add byte ptr [rax], al; xor eax, eax; test edi, edi; setne al; neg eax; ret; 
0x0000000000023e26: add byte ptr [rax], al; xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000006d44d: add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000006d418: add byte ptr [rax], al; xor edi, edi; nop dword ptr [rax]; mov rax, rdx; syscall; 
0x0000000000050048: add byte ptr [rax], al; xor edi, edi; syscall; 
0x0000000000074b27: add byte ptr [rax], al; xor edi, edi; syscall; ret; 
0x000000000005abf0: add byte ptr [rax], al; xor edx, edx; mov edi, 2; syscall; 
0x000000000005abf0: add byte ptr [rax], al; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000006cc29: add byte ptr [rax], al; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000006d53c: add byte ptr [rax], al; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000048d7a: add byte ptr [rax], al; xor edx, edx; syscall; 
0x0000000000015e4e: add byte ptr [rax], al; xor esi, esi; call 0x15cb0; mov eax, r12d; pop r12; ret; 
0x0000000000071e73: add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; syscall; 
0x000000000001fc10: add byte ptr [rax], al; xor esi, esi; mov rdx, r8; syscall; 
0x000000000001fc10: add byte ptr [rax], al; xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x00000000000238ec: add byte ptr [rax], al; xor esi, esi; syscall; 
0x00000000000238ec: add byte ptr [rax], al; xor esi, esi; syscall; ret; 
0x000000000006b856: add byte ptr [rax], al; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000006c2fe: add byte ptr [rax], al; xor r10d, r10d; mov rax, rbx; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000002d04e: add byte ptr [rax], al; xor r8d, r8d; shl edx, 9; sete r8b; mov eax, r8d; ret; 
0x000000000002cfee: add byte ptr [rax], al; xor r8d, r8d; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000001f93e: add byte ptr [rax], al; xor r9d, r9d; mov rax, r8; mov rdx, r9; syscall; 
0x0000000000069370: add byte ptr [rax], bh; sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x0000000000035d3c: add byte ptr [rax], cl; add bl, dh; mulps xmm0, xmmword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000023fd0: add byte ptr [rax], cl; add byte ptr [rax], al; jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x000000000004c5ec: add byte ptr [rax], cl; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000074dbb: add byte ptr [rax], cl; add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000001e772: add byte ptr [rax], cl; add byte ptr [rax], al; mov rsi, r9; syscall; 
0x0000000000023ffb: add byte ptr [rax], cl; add byte ptr [rax], al; syscall; 
0x0000000000023fb7: add byte ptr [rax], cl; add byte ptr [rcx + rdx - 0x48], dh; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000005ec28: add byte ptr [rax], cl; add byte ptr [rsi + rdx - 0x48], dh; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000006f1c2: add byte ptr [rax], dl; add byte ptr [rax + 0xf], cl; or byte ptr [r8 - 0x77], cl; ret; 
0x000000000005bcb7: add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0x106; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000002b4f3: add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0xc; mov rdi, rbp; syscall; 
0x0000000000022c05: add byte ptr [rax], dl; add byte ptr [rax], al; ret; 
0x0000000000030b6d: add byte ptr [rax], r8b; add edx, edx; movd xmm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000068a0d: add byte ptr [rax], r8b; add rdi, 1; mov rax, rdi; ret; 
0x0000000000032d8d: add byte ptr [rax], r8b; addsd xmm0, qword ptr [rip + 0x7b068]; ret; 
0x000000000003286d: add byte ptr [rax], r8b; addsd xmm0, qword ptr [rip + 0x7b588]; ret; 
0x0000000000030add: add byte ptr [rax], r8b; addsd xmm0, qword ptr [rip + 0x7d318]; ret; 
0x000000000002cd5d: add byte ptr [rax], r8b; call 0x1f460; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000004713d: add byte ptr [rax], r8b; endbr64; cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x000000000003fa7d: add byte ptr [rax], r8b; endbr64; cvtss2si rax, xmm0; ret; 
0x0000000000017e7d: add byte ptr [rax], r8b; endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3ed: add byte ptr [rax], r8b; endbr64; fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000001847d: add byte ptr [rax], r8b; endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000001ef1d: add byte ptr [rax], r8b; endbr64; hlt; ret; 
0x000000000006e46d: add byte ptr [rax], r8b; endbr64; mov eax, 0x16; ret; 
0x000000000007028d: add byte ptr [rax], r8b; endbr64; mov eax, 0x18; syscall; 
0x000000000007028d: add byte ptr [rax], r8b; endbr64; mov eax, 0x18; syscall; ret; 
0x000000000005b69d: add byte ptr [rax], r8b; endbr64; mov eax, 0x23; ret; 
0x00000000000508dd: add byte ptr [rax], r8b; endbr64; mov eax, 0x26; ret; 
0x0000000000045d1d: add byte ptr [rax], r8b; endbr64; mov eax, 0xffffffff; ret; 
0x000000000004ac4d: add byte ptr [rax], r8b; endbr64; mov eax, edi; bswap eax; ret; 
0x000000000005b1dd: add byte ptr [rax], r8b; endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x000000000003a94d: add byte ptr [rax], r8b; endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x000000000003f3cd: add byte ptr [rax], r8b; endbr64; pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000059bdd: add byte ptr [rax], r8b; endbr64; push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000001844d: add byte ptr [rax], r8b; endbr64; ret; 
0x000000000004a7ed: add byte ptr [rax], r8b; endbr64; rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000003fbad: add byte ptr [rax], r8b; endbr64; sqrtsd xmm0, xmm0; ret; 
0x000000000005aded: add byte ptr [rax], r8b; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x00000000000220fd: add byte ptr [rax], r8b; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000043abd: add byte ptr [rax], r8b; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x000000000002407d: add byte ptr [rax], r8b; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x000000000006f63d: add byte ptr [rax], r8b; endbr64; xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000406dd: add byte ptr [rax], r8b; endbr64; xor eax, eax; ret; 
0x000000000001802d: add byte ptr [rax], r8b; endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000034b55: add byte ptr [rax], r8b; faddp st(1); add rsp, 0x48; ret; 
0x00000000000337ed: add byte ptr [rax], r8b; fld xword ptr [rsp + 0x20]; add rsp, 8; ret; 
0x000000000003a52d: add byte ptr [rax], r8b; fmul st(0); add rsp, 0x18; ret; 
0x0000000000034bdd: add byte ptr [rax], r8b; jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x0000000000021a95: add byte ptr [rax], r8b; lea eax, [r9 + 2]; mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x000000000006e045: add byte ptr [rax], r8b; mov eax, 0x10; ret; 
0x000000000006bea5: add byte ptr [rax], r8b; mov eax, 0x16; ret; 
0x00000000000743b5: add byte ptr [rax], r8b; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x00000000000232b5: add byte ptr [rax], r8b; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000007027d: add byte ptr [rax], r8b; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000045075: add byte ptr [rax], r8b; mov eax, 0xffffffff; ret; 
0x0000000000057ac5: add byte ptr [rax], r8b; mov eax, 1; ret; 
0x000000000005bb3d: add byte ptr [rax], r8b; mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000005a355: add byte ptr [rax], r8b; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000006d025: add byte ptr [rax], r8b; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000047ecd: add byte ptr [rax], r8b; mov rax, qword ptr [rip + 0x6c0d9]; ret; 
0x000000000001f9f5: add byte ptr [rax], r8b; mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000006c70d: add byte ptr [rax], r8b; mov rax, r8; syscall; 
0x000000000006d1f5: add byte ptr [rax], r8b; mov rax, r8; syscall; ret; 
0x000000000006c70d: add byte ptr [rax], r8b; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000007436d: add byte ptr [rax], r8b; mov rax, r9; mov rsi, r8; syscall; 
0x000000000005e68d: add byte ptr [rax], r8b; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006a505: add byte ptr [rax], r8b; mov rax, rbx; pop rbx; ret; 
0x000000000001f4e5: add byte ptr [rax], r8b; mov rax, rdx; syscall; 
0x00000000000399c5: add byte ptr [rax], r8b; movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x0000000000034065: add byte ptr [rax], r8b; movaps xmm0, xmm1; ret; 
0x00000000000341b5: add byte ptr [rax], r8b; movd xmm0, eax; ret; 
0x000000000003490d: add byte ptr [rax], r8b; movq xmm0, rdx; add rsp, 0x18; ret; 
0x000000000003a73d: add byte ptr [rax], r8b; movsd qword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000000319e5: add byte ptr [rax], r8b; movsd xmm2, qword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000035e55: add byte ptr [rax], r8b; movss xmm0, dword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x000000000002f0c5: add byte ptr [rax], r8b; movss xmm0, dword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000006ded5: add byte ptr [rax], r8b; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x00000000000694a5: add byte ptr [rax], r8b; movzx eax, dl; sub eax, ecx; ret; 
0x000000000003cc5d: add byte ptr [rax], r8b; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000034365: add byte ptr [rax], r8b; mulsd xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003322d: add byte ptr [rax], r8b; mulsd xmm4, qword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x000000000003a4bd: add byte ptr [rax], r8b; mulss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003cf45: add byte ptr [rax], r8b; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000005ce05: add byte ptr [rax], r8b; or eax, 0x20; mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x0000000000074ae5: add byte ptr [rax], r8b; pop rbx; mov eax, 6; pop rbp; pop r12; ret; 
0x0000000000069325: add byte ptr [rax], r8b; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000033715: add byte ptr [rax], r8b; pxor xmm0, xmm0; ret; 
0x0000000000023e1d: add byte ptr [rax], r8b; ret; 
0x0000000000034d25: add byte ptr [rax], r8b; sub r8d, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000006a55d: add byte ptr [rax], r8b; sub r8d, edx; mov eax, r8d; ret; 
0x000000000006a175: add byte ptr [rax], r8b; sub rax, 2; pop rbp; ret; 
0x00000000000338dd: add byte ptr [rax], r8b; subsd xmm0, qword ptr [rip + 0x7a518]; ret; 
0x0000000000039d75: add byte ptr [rax], r8b; subsd xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000005c3ed: add byte ptr [rax], r8b; syscall; 
0x0000000000043fc5: add byte ptr [rax], r8b; test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000006be78: add byte ptr [rax], r8b; xor eax, eax; pop rbx; ret; 
0x000000000001e585: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x000000000006b855: add byte ptr [rax], r8b; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000002cfed: add byte ptr [rax], r8b; xor r8d, r8d; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000005b8f7: add byte ptr [rbp + 0x10], dh; add rsp, 0x90; pop rbx; ret; 
0x0000000000021f14: add byte ptr [rbp + 0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x000000000004f650: add byte ptr [rbp + 0x10], dh; leave; ret; 
0x0000000000060416: add byte ptr [rbp + 0x11], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000000071d59: add byte ptr [rbp + 0x11], dh; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071cec: add byte ptr [rbp + 0x12], dh; add rsp, 0x28; ret; 
0x0000000000070852: add byte ptr [rbp + 0x13], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a72c: add byte ptr [rbp + 0x15], dh; movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000005c16e: add byte ptr [rbp + 0x16], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000004f4b8: add byte ptr [rbp + 0x16], dh; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000005b376: add byte ptr [rbp + 0x16], dh; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ce6d: add byte ptr [rbp + 0x17], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000000074f92: add byte ptr [rbp + 0x17], dh; add rsp, 0x18; ret; 
0x000000000005bee4: add byte ptr [rbp + 0x17], dh; add rsp, 0x38; ret; 
0x000000000005cd22: add byte ptr [rbp + 0x18], dh; add rsp, 0x18; ret; 
0x0000000000059d7e: add byte ptr [rbp + 0x19], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000005b66b: add byte ptr [rbp + 0x19], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004142a: add byte ptr [rbp + 0x1a], dh; add rsp, 0xa0; pop rbp; ret; 
0x0000000000023fd3: add byte ptr [rbp + 0x1a], dh; call 0x21bc0; add rsp, 8; ret; 
0x000000000001e55f: add byte ptr [rbp + 0x1b80157], cl; add byte ptr [rax], al; add byte ptr [rbx - 0x57c801e], al; and byte ptr [rsi + 8], bh; ret; 
0x000000000005ff36: add byte ptr [rbp + 0x1b], dh; add rsp, 0x28; ret; 
0x0000000000050a69: add byte ptr [rbp + 0x1c], dh; add rsp, 0x160; pop r12; ret; 
0x000000000005b268: add byte ptr [rbp + 0x1c], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x0000000000074487: add byte ptr [rbp + 0x1c], dh; xor eax, eax; add rsp, 0x18; ret; 
0x0000000000023f53: add byte ptr [rbp + 0x1e], dh; add rsp, 0x28; ret; 
0x000000000004f7ea: add byte ptr [rbp + 0x1e], dh; leave; ret; 
0x0000000000060242: add byte ptr [rbp + 0x1f], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000016993: add byte ptr [rbp + 0x1f], dh; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x00000000000737f8: add byte ptr [rbp + 0x1f], dh; add rsp, 0x48; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000000247d4: add byte ptr [rbp + 0x20], dh; add rsp, 0x18; ret; 
0x0000000000047107: add byte ptr [rbp + 0x22], dh; add rsp, 0x238; pop rbx; pop r12; ret; 
0x000000000005de7e: add byte ptr [rbp + 0x23], dh; add rsp, 0x28; ret; 
0x0000000000061fbf: add byte ptr [rbp + 0x2400090], cl; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x0000000000074a58: add byte ptr [rbp + 0x24], dh; add rsp, 0x198; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000004803d: add byte ptr [rbp + 0x24], dh; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022a9c: add byte ptr [rbp + 0x24], dh; add rsp, 0x38; ret; 
0x000000000004e307: add byte ptr [rbp + 0x26], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b099: add byte ptr [rbp + 0x27], dh; add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000000405e7: add byte ptr [rbp + 0x28], dh; add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000000064079: add byte ptr [rbp + 0x29], dh; add rsp, 0x28; ret; 
0x0000000000043dd7: add byte ptr [rbp + 0x29], dh; add rsp, 0x58; ret; 
0x000000000004df73: add byte ptr [rbp + 0x2b], dh; add rsp, 0x18; ret; 
0x000000000004d0bb: add byte ptr [rbp + 0x2b], dh; add rsp, 0x28; ret; 
0x000000000005cb43: add byte ptr [rbp + 0x2b], dh; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000001fbac: add byte ptr [rbp + 0x2b], dh; add rsp, 0x58; ret; 
0x000000000004c309: add byte ptr [rbp + 0x2c], dh; add rsp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c913: add byte ptr [rbp + 0x2c], dh; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001bb8a: add byte ptr [rbp + 0x2d], dh; add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000007500b: add byte ptr [rbp + 0x2e], dh; add rsp, 0x18; ret; 
0x000000000005a6b7: add byte ptr [rbp + 0x31], al; in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000001f93f: add byte ptr [rbp + 0x31], al; leave; mov rax, r8; mov rdx, r9; syscall; 
0x000000000002cfef: add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x3f], 0xe2; or al, 0x41; sete al; mov eax, r8d; ret; 
0x000000000006c2ff: add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rcx + rcx*4 - 0x32]; mov rdx, r8; syscall; 
0x0000000000022043: add byte ptr [rbp + 0x32], dh; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x000000000001e696: add byte ptr [rbp + 0x34], dh; add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005ab59: add byte ptr [rbp + 0x37], dh; add rsp, 0x20; pop rbx; ret; 
0x000000000002206b: add byte ptr [rbp + 0x37], dh; add rsp, 0x58; ret; 
0x000000000005c92d: add byte ptr [rbp + 0x38], dh; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000003e8ad: add byte ptr [rbp + 0x39], dh; add rsp, 0x58; ret; 
0x0000000000042163: add byte ptr [rbp + 0x3a], dh; add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000022bb4: add byte ptr [rbp + 0x3b], dh; add rsp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x000000000005c958: add byte ptr [rbp + 0x3c], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000001aa1c: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000059f82: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x00000000000505b5: add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000003294a: add byte ptr [rbp + 0x42], dh; add rsp, 0x28; ret; 
0x000000000002318b: add byte ptr [rbp + 0x43], dh; add rsp, 0xe0; pop rbx; ret; 
0x0000000000015e3e: add byte ptr [rbp + 0x440d75c0], al; mov eax, esp; pop r12; ret; 
0x000000000001faec: add byte ptr [rbp + 0x44], dh; add rsp, 0x50; pop rbx; ret; 
0x000000000006fc5f: add byte ptr [rbp + 0x450c75f6], al; test al, al; jne 0x6fc70; xor eax, eax; ret; 
0x000000000003a9a5: add byte ptr [rbp + 0x480674db], al; add esp, 0x10; pop rbx; ret; 
0x000000000001f953: add byte ptr [rbp + 0x480a78c0], al; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000006f531: add byte ptr [rbp + 0x481274ff], al; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000006f483: add byte ptr [rbp + 0x481374ff], al; movsxd rsi, ebx; mov eax, 0x90; mov rdx, rbp; syscall; 
0x0000000000075d67: add byte ptr [rbp + 0x481474c0], al; lea esi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x000000000004fcfa: add byte ptr [rbp + 0x48], dh; add rsp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x0000000000070336: add byte ptr [rbp + 0x48e575d2], al; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000075bbd: add byte ptr [rbp + 0x49], bl; mov dword ptr [rax + 0x88], edi; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000029ac4: add byte ptr [rbp + 0x49], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000032a0d: add byte ptr [rbp + 0x4b], dh; add rsp, 0x28; ret; 
0x0000000000022fab: add byte ptr [rbp + 0x50], dh; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000000042e52: add byte ptr [rbp + 0x52], dh; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000000404a1: add byte ptr [rbp + 0x5a], dh; add rsp, 0x130; pop rbp; ret; 
0x00000000000162b5: add byte ptr [rbp + 0x5a], dh; add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000004204e: add byte ptr [rbp + 0x5b0575db], al; ret; 
0x000000000001f626: add byte ptr [rbp + 0x5bd57fc0], al; pop rbp; pop r12; ret; 
0x000000000003e2a8: add byte ptr [rbp + 0x5c], dh; add rsp, 0x38; ret; 
0x00000000000253dc: add byte ptr [rbp + 0x5d0775c0], al; ret; 
0x000000000006eba0: add byte ptr [rbp + 0x5e], dh; add rsp, 0x18; ret; 
0x0000000000069c18: add byte ptr [rbp + 0x60], dh; add rsp, 0x38; ret; 
0x00000000000427ec: add byte ptr [rbp + 0x61], dh; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000005af6d: add byte ptr [rbp + 0x61], dh; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000005bde8: add byte ptr [rbp + 0x62], dh; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000006c600: add byte ptr [rbp + 0x65], dh; add rsp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000031724: add byte ptr [rbp + 0x660874db], al; xorps xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x00000000000738ce: add byte ptr [rbp + 0x68], dh; add rsp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x00000000000440dc: add byte ptr [rbp + 0x69], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000048f9b: add byte ptr [rbp + 0x6a], dh; cmp byte ptr [rdi + 0xf], 1; jne 0x49008; mov eax, 2; ret; 
0x0000000000044b37: add byte ptr [rbp + 0x72], dh; add rsp, 0x18; ret; 
0x00000000000437b8: add byte ptr [rbp + 0x74], dh; add rsp, 0x70; pop rbp; ret; 
0x0000000000060ab1: add byte ptr [rbp + 0x7e850fc0], al; add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x4a], al; ret; 
0x000000000002fe45: add byte ptr [rbp + 0x91], cl; add al, 0x39; ret 0x5872; 
0x000000000004c77b: add byte ptr [rbp + 0xa], dh; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000003a7d7: add byte ptr [rbp + 0xa], dh; shl eax, 9; je 0x3a7e4; ret; 
0x000000000006af4b: add byte ptr [rbp + 0xb], dh; add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005b4d6: add byte ptr [rbp + 0xb], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b2ef: add byte ptr [rbp + 0xb], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000000180a9: add byte ptr [rbp + 0xb], dh; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x0000000000016a06: add byte ptr [rbp + 0xb], dh; fxch st(1); fchs; add rsp, 0x38; fxch st(1); ret; 
0x000000000004c44c: add byte ptr [rbp + 0xc], dh; add rsp, 0x18; ret; 
0x000000000005add7: add byte ptr [rbp + 0xc], dh; add rsp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000031d71: add byte ptr [rbp + 0xf0774db], al; push rdi; add eax, 0x7b1f3; pop rbx; ret; 
0x0000000000043aa3: add byte ptr [rbp + 0xf], dh; add rsp, 0x128; ret; 
0x000000000005fd15: add byte ptr [rbp + 0xf], dh; add rsp, 0x18; ret; 
0x000000000003cd34: add byte ptr [rbp + 0xfbf79d2], al; push rdi; add eax, 0x70230; ret; 
0x000000000003c5ef: add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x0000000000022b14: add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x0000000000022f4f: add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x0000000000023333: add byte ptr [rbp + 5], dh; add rsp, 0x58; ret; 
0x000000000001d974: add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000000441be: add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000007376f: add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000074715: add byte ptr [rbp + 6], dh; add rsp, 0x30; pop rbp; ret; 
0x0000000000071fb1: add byte ptr [rbp + 6], dh; add rsp, 0x40; pop rbp; ret; 
0x000000000004aede: add byte ptr [rbp + 6], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000000023c87: add byte ptr [rbp + 6], dh; add rsp, 0x60; pop rbx; ret; 
0x000000000005ba55: add byte ptr [rbp + 7], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000007023c: add byte ptr [rbp + 8], dh; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000005b455: add byte ptr [rbp + 8], dh; add rsp, 0x148; ret; 
0x00000000000670e9: add byte ptr [rbp + 8], dh; add rsp, 0x208; ret; 
0x0000000000072045: add byte ptr [rbp + 8], dh; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000002246a: add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x00000000000619a0: add byte ptr [rbp + 8], dh; add rsp, 0xf8; ret; 
0x0000000000074bdd: add byte ptr [rbp + 8], dh; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000067057: add byte ptr [rbp + 9], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004840f: add byte ptr [rbp + 9], dh; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022548: add byte ptr [rbp + 9], dh; add rsp, 0x850; pop rbx; ret; 
0x0000000000016d03: add byte ptr [rbp + 9], dh; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000006d486: add byte ptr [rbp + rax - 0x42], dh; add byte ptr [rax], 0; add byte ptr [rbx - 0x76b3fe32], al; clc; mov rdx, r10; syscall; 
0x000000000002d040: add byte ptr [rbp + rcx + 0x44], dh; mov eax, eax; ret; 
0x0000000000033660: add byte ptr [rbp + rcx*2 + 0x66], dh; movd mm7, eax; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000001ab82: add byte ptr [rbp + rcx*4 + 0x2d], cl; sub byte ptr ss:[rsi], al; add byte ptr [rcx + 9], al; ret 0x8b48; 
0x00000000000482c9: add byte ptr [rbp + rcx*4 + 0x60], al; dec dword ptr [rax - 0x7d]; ret; 
0x000000000003fd67: add byte ptr [rbp + rcx*4 + 5], cl; sahf; sub byte ptr [rdi], al; add byte ptr [rbx + 0x4c], bl; mov eax, eax; ret; 
0x000000000007b1a4: add byte ptr [rbp + rdi*8 - 0x26fc88c1], dl; stc; ret; 
0x000000000002e889: add byte ptr [rbp - 0x26dd8b01], al; ret; 
0x000000000003a917: add byte ptr [rbp - 0x3a], dh; fstp st(1); fld xword ptr [rsp + 0x10]; pop rbx; fstp xword ptr [rdi]; ret; 
0x000000000006f68a: add byte ptr [rbp - 0x3db7f040], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000702b1: add byte ptr [rbp - 0x3dbaf040], al; add rsp, 8; ret; 
0x000000000006f023: add byte ptr [rbp - 0x3dbaf040], al; ret; 
0x000000000001dd50: add byte ptr [rbp - 0x3f6af040], al; add rsp, 8; movzx eax, al; ret; 
0x0000000000043fc7: add byte ptr [rbp - 0x47f38a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000006e736: add byte ptr [rbp - 0x707af040], al; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; sal byte ptr [rdx + rcx + 0x41], 0xf6; ret 0xf04; 
0x00000000000738a6: add byte ptr [rbp - 0x74328640], al; mov ecx, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000070977: add byte ptr [rbp - 0x76b676f4], cl; adc dword ptr [rax - 0x7d], ecx; ret 0x8d01; 
0x000000000001f7b8: add byte ptr [rbp - 0x76b7feb8], cl; pop rsp; ret 0x4808; 
0x0000000000063465: add byte ptr [rbp - 0x77], al; ret 0x5e9; 
0x000000000006c4d7: add byte ptr [rbp - 0x77], cl; ret 0x894c; 
0x000000000005517c: add byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x000000000002a6b3: add byte ptr [rbp - 0x7b], al; ror byte ptr [rdi], 0x84; push rbx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000001e40b: add byte ptr [rbp - 0x7b], al; sal byte ptr [rbp + 7], 0x5d; ret; 
0x000000000006e73e: add byte ptr [rbp - 0x7b], al; sal byte ptr [rdx + rcx + 0x41], 0xf6; ret 0xf04; 
0x000000000001e426: add byte ptr [rbp - 0x7b], bl; ror byte ptr [rdi], 0x94; ror byte ptr [rdi], 0xb6; ror byte ptr [rax + 1], 0xc0; ret; 
0x0000000000029907: add byte ptr [rbp - 0x7b], cl; in al, 0xf; xchg eax, ebp; ret 0xc031; 
0x000000000004d2af: add byte ptr [rbp - 0x7cb776f4], cl; ret 0x8d01; 
0x000000000004e15f: add byte ptr [rbp - 0x7cb77ffc], cl; ret 0x8d01; 
0x000000000006981a: add byte ptr [rbp - 0xd], dh; sub rax, rdi; ret; 
0x0000000000069876: add byte ptr [rbp - 9], dh; sub rax, rdi; ret; 
0x0000000000052cf7: add byte ptr [rbx + 0x14898614], cl; or dword ptr [rax - 0x7d], 0x394801c0; ret; 
0x0000000000050059: add byte ptr [rbx + 0x1a80045], cl; je 0x50097; mov eax, 0x68; syscall; 
0x0000000000028ee3: add byte ptr [rbx + 0x1f7e31fa], al; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000006f5bd: add byte ptr [rbx + 0x267702ff], al; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000003787c: add byte ptr [rbx + 0x280f02c5], al; ret; 
0x000000000001df1f: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000059296: add byte ptr [rbx + 0x31e8f7e2], al; call 0x634e92a0; ret; 
0x0000000000070377: add byte ptr [rbx + 0x37401f8], al; ret; 
0x0000000000047110: add byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x0000000000073b65: add byte ptr [rbx + 0x44893040], cl; and al, 0x20; mov eax, 0xde; syscall; 
0x000000000006e835: add byte ptr [rbx + 0x44], bl; mov eax, eax; ret; 
0x000000000006f0f8: add byte ptr [rbx + 0x47701fe], al; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006f2cc: add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x000000000003fc92: add byte ptr [rbx + 0x48], dl; mov ebx, edi; jne 0x3fca0; pop rbx; ret; 
0x0000000000023df0: add byte ptr [rbx + 0x48], dl; mov ebx, edi; sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000006d18f: add byte ptr [rbx + 0x49e4505], al; add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000003fd6e: add byte ptr [rbx + 0x4c], bl; mov eax, eax; ret; 
0x000000000006bd38: add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd78: add byte ptr [rbx + 0x57701fe], al; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005c885: add byte ptr [rbx + 0x5d], bl; mov eax, r8d; ret; 
0x000000000001dad1: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000029a31: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000001f75f: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000004f4c1: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000001686f: add byte ptr [rbx + 0x66], bl; movaps xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000005ce07: add byte ptr [rbx + 0x78920c8], al; mov eax, 0xffffffff; ret; 
0x0000000000017de7: add byte ptr [rbx + 0x976e215], cl; add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x81eb; 
0x000000000007626c: add byte ptr [rbx + 0xb4808e2], al; xchg eax, esp; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x2374; 
0x000000000002af0c: add byte ptr [rbx + 0xf], ah; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000003ed10: add byte ptr [rbx + 0xff202f8], al; pop rsp; ret; 
0x0000000000060542: add byte ptr [rbx + rcx*4 + 0x35], al; mov esi, 0x8900053b; ret; 
0x000000000005acd2: add byte ptr [rbx + rcx*4 + 0x35], al; xchg eax, esp; add eax, 0xd8d4800; sal dword ptr [rbx + 5], 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000022e8a: add byte ptr [rbx + rcx*4 + 5], cl; idiv byte ptr [rsi]; or dword ptr [rax], eax; add rsp, 8; mov rax, r8; ret; 
0x0000000000046bdf: add byte ptr [rbx - 0x3dafc40], al; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret; 
0x0000000000055f59: add byte ptr [rbx - 0x3f7ce7bb], cl; add dword ptr [rbp + 0x7d8944db], eax; adc al, 0x89; sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x0000000000060f5f: add byte ptr [rbx - 0x3fcebff1], al; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000001de87: add byte ptr [rbx - 0x3fcecf11], al; cmp edi, 9; setbe al; ret; 
0x000000000001e05f: add byte ptr [rbx - 0x3fcefe39], al; and edi, 0x7f; cmp edi, 0x20; seta al; ret; 
0x00000000000505af: add byte ptr [rbx - 0x48], bl; or al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000001e567: add byte ptr [rbx - 0x57c801e], al; and byte ptr [rsi + 8], bh; ret; 
0x000000000006d48d: add byte ptr [rbx - 0x76b3fe32], al; clc; mov rdx, r10; syscall; 
0x000000000006ae57: add byte ptr [rbx - 0x76be79ec], cl; adc al, 0x80; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x0000000000050427: add byte ptr [rbx - 0x76dbdb84], cl; ret; 
0x000000000004c8e5: add byte ptr [rbx - 0x7aabdb8c], cl; test byte ptr [rdi], 0x84; ret 2; 
0x0000000000054e37: add byte ptr [rbx - 0x7af0fc06], al; syscall; 
0x000000000002c2c6: add byte ptr [rbx - 0x7bf0f905], al; push -0x9ffffff; ret; 
0x000000000006a5cf: add byte ptr [rbx - 0x7cb7fb8d], cl; ret; 
0x0000000000065137: add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x0000000000021e27: add byte ptr [rbx - 0x7cb7fbbf], cl; ret; 
0x000000000005001f: add byte ptr [rbx - 0x7f57ffbb], cl; je 0x5003d; mov eax, 0x70; syscall; 
0x0000000000031d8f: add byte ptr [rbx - 0xd], bl; mulps xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x0000000000031747: add byte ptr [rbx - 0xe], bl; mulps xmm1, xmm0; mulsd xmm0, qword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000005afa2: add byte ptr [rbx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x20; mov eax, 0xe; syscall; 
0x000000000006db09: add byte ptr [rbx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x70; mov eax, 0xe; syscall; 
0x000000000006fdfe: add byte ptr [rbx], cl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x00000000000420a3: add byte ptr [rbx], cl; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000006fc4d: add byte ptr [rbx], cl; add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000007226e: add byte ptr [rbx], cl; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000000074d44: add byte ptr [rcx + 0x125b8f3], cl; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x000000000002b6df: add byte ptr [rcx + 0x21d8f7d0], cl; shr byte ptr [rcx], 1; ret 0xc189; 
0x000000000006a55f: add byte ptr [rcx + 0x29], al; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000004c9cc: add byte ptr [rcx + 0x2a8ce8c5], cl; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000005b5fb: add byte ptr [rcx + 0x415d5bd8], cl; pop rsp; pop r13; ret; 
0x000000000006df03: add byte ptr [rcx + 0x48b48ff], cl; clc; ret; 
0x0000000000074465: add byte ptr [rcx + 0x49042444], cl; movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x00000000000605a0: add byte ptr [rcx + 0x5c], al; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x0000000000075bc5: add byte ptr [rcx + 0x5c], al; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000006a29e: add byte ptr [rcx + 0x5c], al; pop r13; ret; 
0x0000000000050a72: add byte ptr [rcx + 0x5c], al; ret; 
0x00000000000605a9: add byte ptr [rcx + 0x5d], al; pop r14; ret; 
0x000000000005bd1d: add byte ptr [rcx + 0x63], cl; clc; movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x0000000000071d3c: add byte ptr [rcx + 0x63], cl; clc; syscall; 
0x0000000000050147: add byte ptr [rcx + 0x63], cl; js 0x50160; mov rax, r15; syscall; 
0x000000000005028f: add byte ptr [rcx + 0x63], cl; js 0x502a8; mov rax, r10; syscall; 
0x0000000000024edc: add byte ptr [rcx + 0x63], cl; push rsi; and byte ptr [rax + 0x39], cl; ret 0x820f; 
0x0000000000053257: add byte ptr [rcx + 0x63], cl; ret 0x8349; 
0x0000000000043d11: add byte ptr [rcx + 0x63], cl; std; mov eax, 3; syscall; 
0x00000000000655c7: add byte ptr [rcx + 0x6b], al; ret 0x5f6; 
0x0000000000063387: add byte ptr [rcx + 0x6b], al; ret 0x83f6; 
0x000000000003d13f: add byte ptr [rcx + 0x7c8c7], al; add byte ptr [rax - 0x3f], cl; out 0x34, eax; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000039f6f: add byte ptr [rcx + 0x7f800000], ch; jne 0x39f29; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000001e4f1: add byte ptr [rcx + 0xe0100ef], al; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x000000000003d1e7: add byte ptr [rcx + 0xe5c7], al; add cl, al; out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x0000000000077d2d: add byte ptr [rcx + 0xf], al; mov dh, 0x55; add byte ptr [rcx - 0x77], cl; ret 0xf631; 
0x0000000000075ab7: add byte ptr [rcx + 0xf], al; mov dh, 0xc; adc ecx, dword ptr [rax - 0x7d]; ret 0x4501; 
0x000000000006f09a: add byte ptr [rcx + 0xf], cl; mov rax, r8; syscall; 
0x000000000002be23: add byte ptr [rcx + 0xf], cl; scasd eax, dword ptr [rdi]; dec dword ptr [rax - 0x39]; ret 0xfff0; 
0x0000000000048607: add byte ptr [rcx + 0xffffff], al; add byte ptr [rdi + 0x10], dh; shl edi, 0x10; or eax, edi; ret; 
0x000000000001ab89: add byte ptr [rcx + 9], al; ret 0x8b48; 
0x000000000002b8d6: add byte ptr [rcx + 9], cl; ret 0xf0b8; 
0x000000000002c835: add byte ptr [rcx + rax - 0xc], dh; sub rax, rdi; ret; 
0x000000000005c731: add byte ptr [rcx + rcx*4 - 0x10], cl; mov rdi, r13; syscall; 
0x000000000006cdcf: add byte ptr [rcx + rcx*4 - 0x11], cl; mov rax, r8; syscall; 
0x000000000007453a: add byte ptr [rcx + rcx*4 - 0x11], cl; mov rdx, r14; syscall; 
0x00000000000744e9: add byte ptr [rcx + rcx*4 - 0x11], cl; mov rsi, rbx; mov rdx, r14; syscall; 
0x000000000006de8d: add byte ptr [rcx + rcx*4 - 0x12], cl; syscall; 
0x0000000000022d56: add byte ptr [rcx + rcx*4 - 0x18], cl; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000006d3f7: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rax, r8; syscall; 
0x000000000004c58e: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000007478a: add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000004367e: add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x000000000006e9b5: add byte ptr [rcx + rcx*4 - 0x1a], al; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005e17c: add byte ptr [rcx + rcx*4 - 0x1a], cl; syscall; 
0x000000000005edb8: add byte ptr [rcx + rcx*4 - 0x1e], al; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000006f210: add byte ptr [rcx + rcx*4 - 0x20], 0x5b; pop rbp; pop r12; ret; 
0x00000000000420a7: add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000006f571: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000049694: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x000000000006e36a: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004037a: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a1ee: add byte ptr [rcx + rcx*4 - 0x20], cl; mov qword ptr [rip + 0x4cc5f], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x00000000000614e5: add byte ptr [rcx + rcx*4 - 0x20], cl; mov rdi, rbp; mov edx, 0x180; syscall; 
0x000000000005bab9: add byte ptr [rcx + rcx*4 - 0x20], cl; mov rdx, r13; syscall; 
0x000000000006a2c3: add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; pop r13; ret; 
0x000000000004f311: add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000006a296: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000006a286: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000001c91c: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x000000000001e69f: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000006b17f: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000255d9: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000044277: add byte ptr [rcx + rcx*4 - 0x28], cl; add rsp, 0x18; ret; 
0x000000000001f92e: add byte ptr [rcx + rcx*4 - 0x2e], cl; mov rax, r8; syscall; 
0x000000000001f9b8: add byte ptr [rcx + rcx*4 - 0x2e], cl; syscall; 
0x000000000006dc7f: add byte ptr [rcx + rcx*4 - 0x30], cl; syscall; 
0x000000000005be24: add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000006e626: add byte ptr [rcx + rcx*4 - 0x32], al; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005c2ea: add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x000000000001e775: add byte ptr [rcx + rcx*4 - 0x32], cl; syscall; 
0x000000000007436f: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, r8; syscall; 
0x000000000005d56f: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; 
0x000000000005f78f: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b4f: add byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000001e75b: add byte ptr [rcx + rcx*4 - 0x38], cl; pop rbx; ret; 
0x0000000000015bdb: add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000005c05c: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x000000000005c05c: add byte ptr [rcx + rcx*4 - 0x39], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074f6b: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0x59; syscall; 
0x000000000007592d: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000001f55a: add byte ptr [rcx + rcx*4 - 0x3a], cl; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000074a61: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000006e7d3: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; ret; 
0x000000000002c642: add byte ptr [rcx + rcx*4 - 0x40], al; ret; 
0x000000000001fa54: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rdx, r10; syscall; 
0x000000000001f9f7: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000005c8df: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000006d1d4: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000005c8df: add byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; ret; 
0x0000000000070464: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000003fd08: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000028eef: add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000015a3e: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005c8cc: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006d1f7: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; ret; 
0x000000000006c70f: add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; xor eax, eax; ret; 
0x000000000005c755: add byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000006ce5e: add byte ptr [rcx + rcx*4 - 1], cl; mov rax, r8; syscall; 
0x0000000000050125: add byte ptr [rcx + rcx*4 - 9], cl; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000050170: add byte ptr [rcx + rcx*4 - 9], cl; syscall; 
0x000000000002fe4a: add byte ptr [rcx + rdi], al; ret 0x5872; 
0x0000000000023fb9: add byte ptr [rcx + rdx - 0x48], dh; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000001edf3: add byte ptr [rcx - 0x1576b311], cl; mov rsi, r12; call rbx; 
0x0000000000073ce5: add byte ptr [rcx - 0x19], al; jg 0x73ca5; loope 0x73cef; add byte ptr [rax], al; syscall; 
0x0000000000073d48: add byte ptr [rcx - 0x19], al; jg 0x73d98; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x0000000000048679: add byte ptr [rcx - 0x38b8f030], cl; ret; 
0x000000000002b82f: add byte ptr [rcx - 0x39], cl; ret 0xfff0; 
0x00000000000442f6: add byte ptr [rcx - 0x39], cl; ret; 
0x000000000001d642: add byte ptr [rcx - 0x3a], al; push rsi; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000004efef: add byte ptr [rcx - 0x3ee87630], cl; call 0xffffffff89d52105; ret 0xe2c1; 
0x000000000001f541: add byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x000000000006dc6f: add byte ptr [rcx - 0x46], al; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000006e9f7: add byte ptr [rcx - 0x47], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000001f923: add byte ptr [rcx - 0x48], al; add byte ptr [rax], al; add byte ptr [rsi + 0x406], bh; mov rdx, r10; mov rax, r8; syscall; 
0x000000000005c88f: add byte ptr [rcx - 0x48], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, r8d; ret; 
0x000000000006d027: add byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006cd8f: add byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000002b149: add byte ptr [rcx - 0x4ef00f30], cl; sbb al, 0x39; ret 0xc375; 
0x00000000000365ca: add byte ptr [rcx - 0x70000001], al; cmp al, 0x77; xor eax, 0x5100ff2; adc eax, 0xf2000787; divps xmm0, xmm1; ret; 
0x0000000000021a97: add byte ptr [rcx - 0x73], al; add al, byte ptr [r9 - 0x3a]; add dh, byte ptr [rax]; mov byte ptr [r8 + rax], 0; ret; 
0x000000000001f2f7: add byte ptr [rcx - 0x73], cl; jl 0x1f302; add cl, byte ptr [rax - 0x77]; ret; 
0x00000000000501df: add byte ptr [rcx - 0x73], cl; js 0x50208; mov eax, 0x50; syscall; 
0x000000000006e772: add byte ptr [rcx - 0x73], cl; mov ecx, 0x88; syscall; 
0x0000000000058b6b: add byte ptr [rcx - 0x73], cl; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000006553a: add byte ptr [rcx - 0x73], cl; push rcx; call qword ptr [rdi + 0x4c]; 
0x0000000000057035: add byte ptr [rcx - 0x75], al; or al, 0x39; ret; 
0x00000000000281f7: add byte ptr [rcx - 0x75], cl; add byte ptr [r8 - 0x7d], r9b; mov byte ptr [rdx], 0xbb; ret 0xffff; 
0x0000000000040cc2: add byte ptr [rcx - 0x77], al; ret; 
0x000000000001df7b: add byte ptr [rcx - 0x77], al; sal byte ptr [rcx], 0xc0; test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x000000000001e403: add byte ptr [rcx - 0x77], al; sar byte ptr [rax + 1], 0x45; test eax, eax; jne 0x1e418; pop rbp; ret; 
0x000000000006e5e7: add byte ptr [rcx - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x40]; syscall; 
0x0000000000077d32: add byte ptr [rcx - 0x77], cl; ret 0xf631; 
0x0000000000047588: add byte ptr [rcx - 0x77], cl; ror byte ptr [rdi], 0xb7; ret; 
0x0000000000055957: add byte ptr [rcx - 0x7cb7efcc], cl; ret 0x4104; 
0x0000000000034ca7: add byte ptr [rcx - 0x7d], al; call 0x79c34db0; clc; mov eax, r8d; ret; 
0x0000000000034c1f: add byte ptr [rcx - 0x7d], al; call 0xffffffffc0049428; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d27: add byte ptr [rcx - 0x7d], al; call 0xffffffffc0049530; jns 0x34d28; mov eax, r8d; ret; 
0x000000000002d06d: add byte ptr [rcx - 0x7d], al; fdivr st(7); mov eax, r8d; ret; 
0x000000000002af13: add byte ptr [rcx - 0x7d], al; ret 0x4901; 
0x000000000002ad43: add byte ptr [rcx - 0x7d], al; ret 0x4d01; 
0x000000000007188f: add byte ptr [rcx - 0x7d], cl; ret 0x4801; 
0x000000000005818e: add byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000051408: add byte ptr [rcx - 0x7d], cl; ret 0x4d01; 
0x0000000000059107: add byte ptr [rcx - 0x7d], cl; ret 0x4d04; 
0x000000000006abf7: add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000003801c: add byte ptr [rcx - 0x7f], al; cld; ret 0xfbb4; 
0x0000000000038029: add byte ptr [rcx - 0x7f], al; cld; ret; 
0x000000000005bb3f: add byte ptr [rcx - 0x9cb72e], cl; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000006e7df: add byte ptr [rcx - 0xa], al; ret 0x7408; 
0x000000000006e74d: add byte ptr [rcx - 0xa], al; ret 0x7480; 
0x000000000006e877: add byte ptr [rcx - 0xa], al; ret 0xf08; 
0x0000000000036e6e: add byte ptr [rcx - 1], al; xor dh, byte ptr [rdi + 0x39]; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x0000000000071d67: add byte ptr [rcx - 9], al; fldpi; fucomip st(0); scasb al, byte ptr [rdi]; sar edx, 1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000022bba: add byte ptr [rcx], 0; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005bab6: add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006b257: add byte ptr [rcx], al; add byte ptr [rax], al; mov word ptr [rdi + 0x16], ax; ret; 
0x0000000000076280: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000076570: add byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000001ed32: add byte ptr [rcx], al; add rsp, 0x158; ret; 
0x000000000006d195: add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002ea5f: add byte ptr [rcx], al; jmp qword ptr [rsi + 0xf]; 
0x000000000001eaab: add byte ptr [rcx], al; mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x98490]; syscall; 
0x000000000002784f: add byte ptr [rcx], al; ret 0xc281; 
0x000000000002587c: add byte ptr [rcx], al; ret 0xc889; 
0x0000000000075bd0: add byte ptr [rcx], al; ret; 
0x0000000000030b6f: add byte ptr [rcx], al; shl byte ptr [rsi + 0xf], cl; outsb dx, byte ptr [rsi]; sal byte ptr [rdx + rsi*8 - 0xd], 0xf; adc byte ptr [rip + 0x7e940], al; ret; 
0x000000000003396f: add byte ptr [rcx], al; shl byte ptr [rsi + 0xf], cl; outsb dx, byte ptr [rsi]; sal byte ptr [rsi + rbp*8 - 0xd], 0xf; adc byte ptr [rip + 0x7d08c], al; ret; 
0x000000000005bae4: add byte ptr [rcx], al; sub al, byte ptr [rax]; syscall; 
0x000000000006417c: add byte ptr [rcx], bh; ret 0x840f; 
0x0000000000041575: add byte ptr [rcx], bh; ret; 
0x000000000006e3c2: add byte ptr [rcx], bh; xor byte ptr [rbp + 0x10], sil; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x0000000000072ce5: add byte ptr [rcx], ch; ret 0x8d44; 
0x00000000000411e0: add byte ptr [rcx], ch; ret 0xc085; 
0x000000000007249a: add byte ptr [rcx], ch; ret 0xc889; 
0x0000000000067787: add byte ptr [rcx], ch; ret; 
0x000000000003b499: add byte ptr [rcx], ch; ror dword ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000045454: add byte ptr [rcx], cl; ret 0x6348; 
0x0000000000065c77: add byte ptr [rcx], cl; ret; 
0x000000000004ec60: add byte ptr [rcx], dh; fisttp dword ptr [rbp + rcx*4 + 0x35]; ret; 
0x0000000000037e8b: add byte ptr [rcx], dh; jmp qword ptr [rsi + 0xf]; 
0x000000000006c609: add byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000043968: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000001b211: add byte ptr [rcx], dh; ret 0xd601; 
0x00000000000766d3: add byte ptr [rcx], dh; ret; 
0x000000000001de16: add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000001fc5f: add byte ptr [rcx], dh; rol byte ptr [rcx + 0xc00fa], 0; setne al; add rsp, 8; neg eax; ret; 
0x000000000001e4f7: add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x000000000001e039: add byte ptr [rcx], dh; rol byte ptr [rcx + 0xfffeff], 0; setne al; ret; 
0x000000000006d53d: add byte ptr [rcx], dh; rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006be26: add byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0x37; ret; 
0x000000000001f7da: add byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000004c3fb: add byte ptr [rcx], dh; ror byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x48fffd57; add esp, 8; ret; 
0x000000000005abf1: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; 
0x000000000005abf1: add byte ptr [rcx], dh; sar byte ptr [rdi + 2], cl; syscall; ret; 
0x000000000006cc2a: add byte ptr [rcx], dh; sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x0000000000043030: add byte ptr [rcx], dh; shr al, 0x28; ret 2; 
0x00000000000435ae: add byte ptr [rcx], dh; shr al, 0xa; ret; 
0x00000000000799ec: add byte ptr [rcx], dh; shr al, 0xec; ret 0xffff; 
0x0000000000071e74: add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; syscall; 
0x00000000000239bc: add byte ptr [rcx], dh; test byte ptr [rdi], 5; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000238ed: add byte ptr [rcx], dh; test byte ptr [rdi], 5; ret; 
0x00000000000238e8: add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000238e8: add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x000000000004860d: add byte ptr [rdi + 0x10], dh; shl edi, 0x10; or eax, edi; ret; 
0x00000000000220bd: add byte ptr [rdi + 0x20], bh; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000001e031: add byte ptr [rdi + 0x21], dh; and edi, 0xfffe; xor eax, eax; cmp edi, 0xfffe; setne al; ret; 
0x000000000001fcac: add byte ptr [rdi + 0x3f], bh; call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x000000000002cfd6: add byte ptr [rdi + 0x41], dh; mov eax, 4; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x00000000000485fb: add byte ptr [rdi + 0xa], dh; shl edi, 0x18; or eax, edi; ret; 
0x0000000000023385: add byte ptr [rdi + 1], bh; syscall; 
0x000000000005b811: add byte ptr [rdi + 2], bh; syscall; 
0x000000000005b811: add byte ptr [rdi + 2], bh; syscall; mov eax, r8d; ret; 
0x000000000006d538: add byte ptr [rdi + 2], bh; xor edx, edx; mov r10d, 8; syscall; 
0x000000000006e3e9: add byte ptr [rdi + 4], bh; xor eax, eax; ret; 
0x00000000000366fc: add byte ptr [rdi + 7], dh; add dl, dh; divps xmm0, xmm1; ret; 
0x000000000007a5d2: add byte ptr [rdi + rcx + 0x28], al; ret 0xf44; 
0x000000000007a556: add byte ptr [rdi + rcx + 0x54], al; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x0000000000034d37: add byte ptr [rdi + rcx - 0x49], al; ret 0x8141; 
0x0000000000046f8f: add byte ptr [rdi + rcx - 0x49], al; ret 0x8349; 
0x0000000000060ab9: add byte ptr [rdi + rcx - 0x4a], al; ret; 
0x0000000000023cff: add byte ptr [rdi - 0x11e2153], bh; mov esi, 0x28121969; syscall; 
0x00000000000338c8: add byte ptr [rdi - 0x23], bh; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030ac8: add byte ptr [rdi - 0x23], bh; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000004f40a: add byte ptr [rdi - 1], bh; call 0x15e60; lea rdi, [rip + 0x67b38]; call 0x6b480; mov eax, 0x39; syscall; 
0x00000000000346ac: add byte ptr [rdi], bh; movd xmm0, edx; ret; 
0x000000000002308e: add byte ptr [rdi], bl; add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x00000000000509d8: add byte ptr [rdi], cl; adc dword ptr [rdi + 0xc8], esp; movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509df: add byte ptr [rdi], cl; adc dword ptr [rdi + 0xd8], ebp; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e6: add byte ptr [rdi], cl; adc dword ptr [rdi + 0xe8], esi; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509ed: add byte ptr [rdi], cl; adc dword ptr [rdi + 0xf8], edi; ret; 
0x0000000000019bfc: add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1d0], eax; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c04: add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1e0], eax; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c0c: add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1f0], eax; syscall; 
0x000000000001f547: add byte ptr [rdi], cl; adc dword ptr [rsp + 0x20], eax; mov rdi, r8; syscall; 
0x0000000000043ee3: add byte ptr [rdi], cl; add eax, 0x178c085; ret; 
0x0000000000074fec: add byte ptr [rdi], cl; add eax, 0x394cc789; ret 0x3a74; 
0x0000000000023e42: add byte ptr [rdi], cl; add eax, 0x48106b89; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000002340e: add byte ptr [rdi], cl; add eax, 0x6348c189; stc; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023453: add byte ptr [rdi], cl; add eax, 0x6348c289; cli; call 0x21bc0; add rsp, 8; ret; 
0x000000000006d545: add byte ptr [rdi], cl; add eax, 0x87b8b48; call qword ptr [rbx]; 
0x00000000000220cd: add byte ptr [rdi], cl; add eax, 0xe8c78948; call 0x490220d3; add esp, 8; ret; 
0x00000000000411fc: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x48fffe09; add esp, 8; ret; 
0x00000000000243fc: add byte ptr [rdi], cl; add eax, 0xe8c78948; mov ecx, 0x48ffffd7; add esp, 8; ret; 
0x0000000000059b5f: add byte ptr [rdi], cl; add eax, 0xe8c78948; push rsi; cmp ah, 0xff; add rsp, 8; ret; 
0x000000000005ac32: add byte ptr [rdi], cl; add eax, 0xe8c78948; sub dword ptr [rdi - 4], -1; add rsp, 8; ret; 
0x000000000007520c: add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x48fffac9; add esp, 8; ret; 
0x000000000004360c: add byte ptr [rdi], cl; add eax, 0xe8c78948; test eax, 0x48fffde5; add esp, 8; ret; 
0x0000000000024308: add byte ptr [rdi], cl; add eax, 0xe9c78948; lodsd eax, dword ptr [rsi]; fdivr st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000037874: add byte ptr [rdi], cl; call 0x37b34; add byte ptr [rbx + 0x280f02c5], al; ret; 
0x00000000000760b0: add byte ptr [rdi], cl; mov bh, 0x47; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000007703f: add byte ptr [rdi], cl; mov bh, 0x84; and al, 0x86; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000002544f: add byte ptr [rdi], cl; mov bh, 4; push rax; ret; 
0x000000000005f7ea: add byte ptr [rdi], cl; mov dh, 0; ret; 
0x0000000000051a37: add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000069577: add byte ptr [rdi], cl; mov dh, 0x4a; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x00000000000694a7: add byte ptr [rdi], cl; mov dh, 0xc2; sub eax, ecx; ret; 
0x000000000001a3e8: add byte ptr [rdi], cl; mov dh, 4; add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x000000000002c3bf: add byte ptr [rdi], cl; mov dh, 5; mov esp, 0x83000884; ret; 
0x000000000006307f: add byte ptr [rdi], cl; mov esi, 0x53be0fc8; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000000251df: add byte ptr [rdi], cl; mov esi, 0x83480143; ret; 
0x000000000004bec7: add byte ptr [rdi], cl; mov esi, 0x83480146; mov byte ptr [rcx], 0x89; ret 0xe883; 
0x000000000002981a: add byte ptr [rdi], cl; mov esi, 0x89480714; ret; 
0x000000000003d815: add byte ptr [rdi], cl; push rdi; ret 0xff3; 
0x0000000000016c5f: add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000007af33: add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x0000000000039b87: add byte ptr [rdi], cl; sub al, cl; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x000000000002f04f: add byte ptr [rdi], cl; sub al, cl; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000003086f: add byte ptr [rdi], cl; sub al, dl; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002ffdb: add byte ptr [rdi], cl; sub cl, al; pop rbx; ret; 
0x0000000000034067: add byte ptr [rdi], cl; sub cl, al; ret; 
0x0000000000031fab: add byte ptr [rdi], cl; sub dl, al; ret; 
0x000000000005bad7: add byte ptr [rdi], cl; test byte ptr [rdx - 0x48000000], dl; add dword ptr [rcx], eax; add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000001f9d3: add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ecx; add esp, 0x68; ret; 
0x000000000002b0b1: add byte ptr [rdi], cl; test dword ptr [rax], ecx; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000069516: add byte ptr [rdi], cl; test dword ptr [rbp + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000039e04: add byte ptr [rdi], cl; test dword ptr [rbp + 1], ecx; add byte ptr [rax], al; divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x000000000005c3b1: add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x000000000003e189: add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ebx; add esp, 0x58; ret; 
0x0000000000066bde: add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ecx; add esp, 0x118; ret; 
0x0000000000032aff: add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], eax; add esp, 0x48; ret; 
0x0000000000071ac3: add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], edi; add esp, 0x18; ret; 
0x0000000000041536: add byte ptr [rdi], cl; test dword ptr [rdi + 0x48000000], edx; add esp, 0x30; pop rbx; ret; 
0x000000000003e370: add byte ptr [rdi], cl; test dword ptr [rsi + 1], esi; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000019b64: add byte ptr [rdi], cl; test dword ptr [rsi + 1], esp; add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x0000000000039beb: add byte ptr [rdi], cl; test dword ptr [rsi - 0xdffffff], eax; divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x0000000000052322: add byte ptr [rdi], cl; test edi, edi; add byte ptr [rax], al; add dh, dh; ret; 
0x0000000000044271: add byte ptr [rdi], cl; test esi, ecx; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x28], cl; add rsp, 0x18; ret; 
0x00000000000258fc: add byte ptr [rdi], cl; xchg byte ptr [rcx + rax - 0x49f10000], dl; ret; 
0x000000000006e264: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x3948; 
0x000000000006612a: add byte ptr [rdi], cl; xchg eax, ebp; ror byte ptr [rcx + 0x49282444], 0x8d; or byte ptr [r9 - 0x77], r9b; fisttp qword ptr [rax - 0x77]; ret; 
0x000000000007a824: add byte ptr [rdi], cl; xchg eax, edi; ret 0x4566; 
0x0000000000033ee2: add byte ptr [rdi], cl; xchg eax, edi; ret 0xf1df; 
0x000000000001dd7b: add byte ptr [rdi], cl; xchg eax, esi; rol byte ptr [rcx + 0x1ffffff], 0; jbe 0x1dd90; ret; 
0x0000000000029741: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000060ead: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd201; 
0x0000000000029c8c: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd501; 
0x000000000005f86d: add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000005bae2: add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x000000000006bdc1: add byte ptr [rdx + 0x5f], bh; cmove eax, edx; ret; 
0x00000000000607b4: add byte ptr [rdx + 0x63], cl; jl 0x6076d; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000015a5f: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a34: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf5: add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006c6f7: add byte ptr [rdx + 0x7fffffff], bh; mov rax, r8; syscall; 
0x000000000006c202: add byte ptr [rdx + 0x7fffffff], bh; mov rdi, r13; mov rax, r8; syscall; 
0x000000000004c5ea: add byte ptr [rdx + 0x800], bh; mov rax, r8; syscall; 
0x0000000000074db9: add byte ptr [rdx + 0x800], bh; mov rax, r9; syscall; 
0x000000000001e770: add byte ptr [rdx + 0x800], bh; mov rsi, r9; syscall; 
0x0000000000023ff9: add byte ptr [rdx + 0x800], bh; syscall; 
0x000000000002b469: add byte ptr [rdx + 0xc], bh; mov rdi, rbx; mov rax, rdx; syscall; 
0x0000000000075ccb: add byte ptr [rdx + 0xd], dh; mov r8, qword ptr [r8 + 0x18]; test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x000000000007262f: add byte ptr [rdx + 1], bh; cmovae eax, edx; ret; 
0x000000000006d238: add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c8: add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060af8: add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73a: add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc75: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c2: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3ed: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc5: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce54: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52d: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa5: add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c822: add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fa0e: add byte ptr [rdx + 1], bh; mov rax, r8; syscall; 
0x000000000006e9fd: add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000005016b: add byte ptr [rdx + 1], bh; mov rdi, r14; syscall; 
0x00000000000743c1: add byte ptr [rdx + 1], bh; mov rdi, r8; syscall; 
0x000000000006c10c: add byte ptr [rdx + 1], bh; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fb29: add byte ptr [rdx + 1], bh; syscall; 
0x000000000005caeb: add byte ptr [rdx + 2], bh; syscall; 
0x0000000000060817: add byte ptr [rdx + 3], bh; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000060816: add byte ptr [rdx + 3], dil; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000050120: add byte ptr [rdx + 4], bh; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000002cfe3: add byte ptr [rdx + rcx + 0x44], dh; mov eax, eax; ret; 
0x000000000001efdf: add byte ptr [rdx - 0x73], cl; and byte ptr [rcx], r8b; pop rbx; pop rbp; pop r12; ret; 
0x000000000007462b: add byte ptr [rdx - 0x80000000], bh; syscall; 
0x000000000006b90c: add byte ptr [rdx], al; add rsp, 8; ret; 
0x000000000006936b: add byte ptr [rdx], bh; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000004a9e8: add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000006b90b: add byte ptr [rdx], r8b; add rsp, 8; ret; 
0x000000000002f65b: add byte ptr [rip + 0x38ffffff], bh; ja 0x2f688; ret; 
0x000000000002f64f: add byte ptr [rip + 0x3effffff], bh; ja 0x2f6d0; sub eax, 0x800000; cmp eax, 0x38ffffff; ja 0x2f688; ret; 
0x000000000002cfde: add byte ptr [rip + 0x7ff], bh; je 0x2cff0; mov eax, r8d; ret; 
0x000000000005bad2: add byte ptr [rip + 0xa000], bh; je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbba: add byte ptr [rip + 0xa000], bh; je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000002d03b: add byte ptr [rip + 0xff], bh; je 0x2d050; mov eax, r8d; ret; 
0x0000000000025440: add byte ptr [rsi + 0x11], bh; lea edx, [rax - 0x100]; lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002f197: add byte ptr [rsi + 0x16], dh; call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x000000000006e76d: add byte ptr [rsi + 0x18], bh; lea rdi, [r9 + 0x88]; syscall; 
0x000000000002386e: add byte ptr [rsi + 0x22], bh; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000018440: add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000001f929: add byte ptr [rsi + 0x406], bh; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000044c1b: add byte ptr [rsi + 0x42], dh; call 0x1f460; mov dword ptr [rax], 0x54; mov rax, -1; add rsp, 8; ret; 
0x000000000003490f: add byte ptr [rsi + 0x48], ah; movd mm0, edx; add rsp, 0x18; ret; 
0x0000000000032c5d: add byte ptr [rsi + 0x48], ah; movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x00000000000338a5: add byte ptr [rsi + 0x48], bh; comisd xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000030aa5: add byte ptr [rsi + 0x48], bh; comisd xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x000000000005c52d: add byte ptr [rsi + 0x5413], bh; syscall; 
0x000000000006b462: add byte ptr [rsi + 0x5414], bh; syscall; 
0x000000000003cf3f: add byte ptr [rsi + 0x6e], dh; nop word ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001ed06: add byte ptr [rsi + 0x8002], bh; lea rdi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x00000000000614e0: add byte ptr [rsi + 0x80c2], bh; mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x0000000000060afd: add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73f: add byte ptr [rsi + 0x81], bh; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006e9f2: add byte ptr [rsi + 0x81], bh; mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x000000000006dc7a: add byte ptr [rsi + 0x81], bh; mov rax, r10; syscall; 
0x000000000005c8c7: add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; 
0x000000000005c8c7: add byte ptr [rsi + 0x81], bh; mov rax, r8; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006d3f2: add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdca: add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce59: add byte ptr [rsi + 0x81], bh; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d532: add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfaa: add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000005c72c: add byte ptr [rsi + 0x88000], bh; mov rax, r14; mov rdi, r13; syscall; 
0x0000000000037eaa: add byte ptr [rsi + 0xf], ah; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000002ef62: add byte ptr [rsi + 0xf], ah; out dx, eax; rol byte ptr [rbp + 0x59880fd2], 1; add byte ptr [rax], al; ret; 
0x000000000002edb0: add byte ptr [rsi + 0xf], ah; out dx, eax; rol byte ptr [rbp - 0x2c77f02e], 0; add byte ptr [rax], al; ret; 
0x000000000002f94f: add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x5489; 
0x0000000000017ded: add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x81eb; 
0x000000000002f997: add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x9fe8; 
0x00000000000341bf: add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; sal bl, 1; minps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000033237: add byte ptr [rsi + 0xf], ah; sub ah, al; ret; 
0x000000000003438d: add byte ptr [rsi + 0xf], ah; sub al, cl; movapd xmm0, xmm1; ret; 
0x00000000000399c7: add byte ptr [rsi + 0xf], ah; sub al, cl; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x0000000000016887: add byte ptr [rsi + 0xf], ah; sub al, cl; pop rbx; movapd xmm0, xmm2; ret; 
0x00000000000167b4: add byte ptr [rsi + 0xf], ah; sub al, dl; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000002fe1f: add byte ptr [rsi + 0xf], ah; sub cl, dl; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002fe11: add byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; ret; 
0x0000000000031963: add byte ptr [rsi + 0xf], ah; sub dl, al; ret; 
0x000000000002f996: add byte ptr [rsi + 0xf], spl; outsb dx, byte ptr [rsi]; ret 0x9fe8; 
0x000000000006c6f2: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1fd: add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000015b9f: add byte ptr [rsi + 1], bh; mov rax, r8; syscall; 
0x00000000000502c7: add byte ptr [rsi + 1], bh; syscall; 
0x000000000004c5ba: add byte ptr [rsi + 2], bh; mov edx, 1; mov rax, r8; syscall; 
0x0000000000074d8d: add byte ptr [rsi + 2], bh; mov edx, 1; mov rax, r9; syscall; 
0x0000000000050166: add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743bc: add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb24: add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x000000000001e08b: add byte ptr [rsi + 2], dh; ret; 
0x000000000001f9ae: add byte ptr [rsi + 4], bh; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000004c5e5: add byte ptr [rsi + 4], bh; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074db4: add byte ptr [rsi + 4], bh; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000023ff4: add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000005ec4d: add byte ptr [rsi + 4], bh; movsxd rdx, ebx; syscall; 
0x000000000006ebe6: add byte ptr [rsi + 6], bh; syscall; 
0x0000000000049307: add byte ptr [rsi + 6], dh; xor eax, eax; pop rbx; ret; 
0x000000000005b4fc: add byte ptr [rsi + 8], bh; syscall; 
0x000000000001dd84: add byte ptr [rsi + 9], dh; ret; 
0x000000000001e914: add byte ptr [rsi + rcx + 0x48], dh; mov eax, dword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x000000000006d447: add byte ptr [rsi + rcx - 0x48], dh; adc dword ptr [rcx], eax; add byte ptr [rax], al; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000005ec2a: add byte ptr [rsi + rdx - 0x48], dh; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; syscall; 
0x0000000000026797: add byte ptr [rsi - 0x3f], ah; ret 0x4908; 
0x000000000006a66d: add byte ptr [rsi - 0x70], ah; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001db1d: add byte ptr [rsi - 0x70], ah; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x000000000006bd8d: add byte ptr [rsi - 0x70], ah; endbr64; mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x00000000000507bd: add byte ptr [rsi - 0x70], ah; endbr64; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000001ea5d: add byte ptr [rsi - 0x70], ah; endbr64; mov rax, qword ptr [rdi]; ret; 
0x0000000000017e4d: add byte ptr [rsi - 0x70], ah; endbr64; movapd xmm0, xmm1; ret; 
0x000000000006b8ad: add byte ptr [rsi - 0x70], ah; endbr64; ret; 
0x00000000000751fd: add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; mov eax, 0x70; syscall; 
0x000000000002420d: add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; mov eax, 0x99; syscall; 
0x000000000005bfcd: add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x00000000000231ed: add byte ptr [rsi - 0x70], ah; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x000000000005b39d: add byte ptr [rsi - 0x70], ah; endbr64; xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x0000000000015c7a: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000005e506: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000000439b4: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000001fc31: add byte ptr [rsp + rax*2 - 0x77], dh; ret 0x287f; 
0x0000000000047ec1: add byte ptr [rsp + rcx + 0x48], dh; add eax, 0xa0; ret; 
0x000000000005bbbf: add byte ptr [rsp + rcx - 0x77], dh; fidivr dword ptr [rax + 0x10c]; syscall; 
0x0000000000027211: add byte ptr [rsp + rdi + 0x3d], dh; ret 0; 
0x0000000000060ba9: add byte ptr [rsp + rdx + 0x48], dh; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f811: add byte ptr [rsp + rdx + 0x48], dh; lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000045181: add byte ptr [rsp + rdx + 0x48], dh; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000007592b: add byte ptr cs:[rax], al; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x0000000000028f42: add byte ptr ds:[rax - 0x73], cl; add eax, 0x89118; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x000000000005ac2f: add byte ptr ds:[rax], al; add byte ptr [rdi], cl; add eax, 0xe8c78948; sub dword ptr [rdi - 4], -1; add rsp, 8; ret; 
0x000000000006b95d: add byte ptr ss:[rax], al; endbr64; ret; 
0x000000000007371a: add ch, byte ptr [rcx]; ret 0x428d; 
0x000000000003d1ed: add cl, al; out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000004861f: add cl, al; out 8, eax; or eax, edi; ret; 
0x000000000003264f: add cl, bl; call 0x48275331; add esp, 0x28; fsubp st(1); ret; 
0x000000000002e56a: add cl, bl; ret 0xc9d8; 
0x000000000007ad17: add cl, bl; ret 0xcad8; 
0x000000000002e5bc: add cl, bl; ret 0xe1d8; 
0x000000000002ec5b: add cl, bl; ret; 
0x0000000000045744: add cl, byte ptr [rax + 0x39]; ret 0x820f; 
0x0000000000061b01: add cl, byte ptr [rax + 0xf]; mov edi, 0x7894801; ret; 
0x0000000000061ae1: add cl, byte ptr [rax + 0xf]; mov esi, 0x7894801; ret; 
0x000000000006a41b: add cl, byte ptr [rax - 0x49f001ba]; dec byte ptr [r8 + 0x3948ff46]; xlatb; jne 0x6a410; ret; 
0x0000000000045df5: add cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000001f2fc: add cl, byte ptr [rax - 0x77]; ret; 
0x0000000000059c16: add cl, byte ptr [rax - 0x77]; xor esi, esi; call 0x7b2b1; mov eax, r12d; pop r12; ret; 
0x000000000001afc7: add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x00000000000772a2: add cl, byte ptr [rax - 0x7d]; ret 0x4810; 
0x000000000005455a: add cl, byte ptr [rax - 0x7d]; ret 0x8310; 
0x0000000000048c66: add cl, byte ptr [rax - 0x7d]; ret 0x8902; 
0x00000000000760b4: add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000002bc4b: add cl, byte ptr [rbp + 9]; fmul dword ptr [rbp - 0x77]; ret; 
0x0000000000061aa5: add cl, byte ptr [rbx + 0x7894801]; ret; 
0x0000000000061a3d: add cl, byte ptr [rdi]; mov bh, 1; mov qword ptr [rdi], rax; ret; 
0x000000000001bc72: add cl, byte ptr [rdi]; mov dh, 0x7a; add dword ptr [rax - 0x7d], ecx; rol dword ptr [rax + rcx*2], 0x83; ret 0xc104; 
0x0000000000061ac1: add cl, byte ptr [rdi]; mov dh, 1; mov qword ptr [rdi], rax; ret; 
0x000000000001ff20: add cl, ch; cmp esi, -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000397ac: add cl, ch; cmp rdi, r15; jmp qword ptr [rsi + 0x2e]; 
0x000000000005f6af: add cl, ch; imul edx, edi, -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000003670e: add cl, ch; insb byte ptr [rdi], dx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000000599a1: add cl, ch; jns 0x5995b; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000003e4e7: add cl, ch; mov esp, 0xe8fffffe; or bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x000000000001fd07: add cl, ch; ret 0x5b1; 
0x000000000002c3e0: add cl, ch; ret 0xfffe; 
0x000000000001de67: add cl, ch; ret; 
0x0000000000067130: add cl, ch; retf 0xffec; jmp qword ptr [rsi + 0x2e]; 
0x000000000006b95a: add cl, ch; sal byte ptr [rsi], 1; add byte ptr [rax], al; endbr64; ret; 
0x000000000003f82d: add cl, ch; sar esp, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000035e6c: add cl, ch; scasb al, byte ptr [rdi]; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000022e87: add dh, al; add byte ptr [rax], al; mov r8, qword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x0000000000047177: add dh, al; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x000000000003eeb5: add dh, bl; leave; fld xword ptr [rsp]; add rsp, 0x28; fmulp st(1); ret; 
0x0000000000032485: add dh, bl; rcr ebx, 0x2d; mov dl, 7; add al, bl; ret 0xcad8; 
0x000000000003920f: add dh, bl; ret 0xc1de; 
0x0000000000032259: add dh, bl; ret 0xc9d9; 
0x00000000000393a7: add dh, bl; ret 0xc9dc; 
0x0000000000032308: add dh, bl; ret 0xf1de; 
0x000000000002ec21: add dh, bl; ret; 
0x000000000002e8a7: add dh, bl; retf 0xe1de; fsubp st(1); ret; 
0x0000000000021a9e: add dh, byte ptr [rax]; mov byte ptr [r8 + rax], 0; ret; 
0x000000000002249b: add dh, byte ptr [rbp + 0x19]; mov qword ptr [r12], rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043796: add dh, byte ptr [rbp + 0x2f]; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x000000000001629c: add dh, byte ptr [rbp + 6]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000006dd15: add dh, byte ptr [rbp + 8]; xor eax, eax; ret; 
0x0000000000046dd7: add dh, byte ptr [rbp - 0x7d]; rol byte ptr [rbx], 0x25; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000070bae: add dh, byte ptr [rcx]; ror byte ptr [rcx - 0x77], 0x38; add r9, rax; mov byte ptr [r9], 0; ret; 
0x00000000000724f2: add dh, byte ptr [rdi + 0x13]; add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x000000000006f5c0: add dh, byte ptr [rdi + 0x26]; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000004b5ee: add dh, byte ptr [rdi + rdx*2 + 0x3c]; add esi, dword ptr [rax + rcx - 0x7c]; ror byte ptr [rdi], 0x85; ret; 
0x000000000005b1a1: add dh, byte ptr [rsi + 0x14]; mov rax, -2; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000043bcf: add dh, byte ptr [rsi + rax*2 + 0x48]; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x000000000005003e: add dh, byte ptr [rsp + rbx + 0x48]; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005b131: add dh, byte ptr [rsp + rbx - 0x58]; add dword ptr [rbp + 0x34], esi; mov eax, 0x83; syscall; 
0x000000000006767a: add dh, dh; add al, 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000065d05: add dh, dh; ret 0x4420; 
0x00000000000589af: add dh, dh; ret 0x7401; 
0x00000000000589c8: add dh, dh; ret 0x7402; 
0x0000000000051a17: add dh, dh; ret 0xf08; 
0x00000000000589ea: add dh, dh; ret 0xf10; 
0x000000000002c2cf: add dh, dh; ret; 
0x0000000000022e75: add dil, r15b; cmp byte ptr [rax], 0xa; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x000000000007b379: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x000000000007b379: add dl, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; ret; 
0x000000000003493f: add dl, dh; addps xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000031754: add dl, dh; addps xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000007a9c3: add dl, dh; addps xmm0, xmm2; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000032d8f: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7b068]; ret; 
0x000000000003286f: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7b588]; ret; 
0x0000000000030adf: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7d318]; ret; 
0x000000000002f673: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ee97: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7ef78]; ret; 
0x000000000002eddd: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000002f19e: add dl, dh; addps xmm0, xmmword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x00000000000366e5: add dl, dh; addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000319a7: add dl, dh; addps xmm1, xmm0; subsd xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x000000000002ea4b: add dl, dh; addps xmm1, xmm4; mulsd xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003ab0f: add dl, dh; addps xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4f: add dl, dh; addps xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x000000000002eb3f: add dl, dh; cvtps2pd xmm0, xmm0; ret; 
0x0000000000035607: add dl, dh; divps xmm0, xmm1; ret; 
0x00000000000365e7: add dl, dh; divps xmm0, xmmword ptr [rip + 0x77830]; ret; 
0x00000000000354ff: add dl, dh; divps xmm0, xmmword ptr [rip + 0x78918]; ret; 
0x000000000002eb2f: add dl, dh; divps xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000031814: add dl, dh; divps xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000039bf1: add dl, dh; divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000003400f: add dl, dh; maxps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000366f7: add dl, dh; movups xmm0, xmmword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000355ff: add dl, dh; movups xmm0, xmmword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f7: add dl, dh; movups xmm0, xmmword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030aef: add dl, dh; movups xmm0, xmmword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000002ee8f: add dl, dh; movups xmm0, xmmword ptr [rip + 0x7f458]; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002edd5: add dl, dh; movups xmm0, xmmword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000003a9bf: add dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000017ed8: add dl, dh; movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000017bc1: add dl, dh; movups xmm1, xmmword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000319e7: add dl, dh; movups xmm2, xmmword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000348fb: add dl, dh; movups xmm7, xmmword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000003a73f: add dl, dh; movups xmmword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x0000000000031002: add dl, dh; movups xmmword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x000000000002d117: add dl, dh; movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000338ef: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x000000000002d213: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000030ad2: add dl, dh; movups xmmword ptr [rsp - 8], xmm1; ret; 
0x000000000003cc67: add dl, dh; movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000003a44f: add dl, dh; mulps xmm0, xmm0; ret; 
0x0000000000034367: add dl, dh; mulps xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003c7cf: add dl, dh; mulps xmm0, xmm1; movapd xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002f433: add dl, dh; mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ed63: add dl, dh; mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ceab: add dl, dh; mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ed6f: add dl, dh; mulps xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000003cc5f: add dl, dh; mulps xmm0, xmmword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x00000000000354db: add dl, dh; mulps xmm0, xmmword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000039605: add dl, dh; mulps xmm1, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x0000000000031997: add dl, dh; mulps xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x0000000000019452: add dl, dh; mulps xmm3, xmm4; add rsp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x000000000003322f: add dl, dh; mulps xmm4, xmmword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x0000000000039a0f: add dl, dh; subps xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x0000000000031933: add dl, dh; subps xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000354e3: add dl, dh; subps xmm0, xmmword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x00000000000338df: add dl, dh; subps xmm0, xmmword ptr [rip + 0x7a518]; ret; 
0x0000000000017b85: add dl, dh; subps xmm1, xmm1; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x00000000000319ef: add dl, dh; subps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003195b: add dl, dh; subps xmm2, xmmword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000039d77: add dl, dh; subps xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000003400e: add dl, sil; maxps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000006aaa8: add dword ptr [eax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000025537: add dword ptr [r8 + 0x29], r9d; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000251e2: add dword ptr [r8 - 0x7d], ecx; ret; 
0x0000000000069e1a: add dword ptr [r8 - 0x7d], r9d; ret; 
0x000000000006bdbc: add dword ptr [rax + 0x16], edi; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000001db07: add dword ptr [rax + 0x19], ecx; ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x0000000000025538: add dword ptr [rax + 0x29], ecx; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000068ad3: add dword ptr [rax + 0x39], ecx; ret 0x8274; 
0x000000000004d6f4: add dword ptr [rax + 0x39], ecx; ret 0xde7f; 
0x0000000000057f11: add dword ptr [rax + 0x39], ecx; ret 0xe175; 
0x000000000004d6b5: add dword ptr [rax + 0x39], ecx; ret 0xe57f; 
0x0000000000058505: add dword ptr [rax + 0x39], ecx; ret 0xe975; 
0x00000000000458a6: add dword ptr [rax + 0x39], ecx; ret 0xec75; 
0x000000000006ae8a: add dword ptr [rax + 0x39], ecx; ret 0xf075; 
0x000000000002c406: add dword ptr [rax + 0x39], ecx; ret 0xf475; 
0x0000000000052d01: add dword ptr [rax + 0x39], ecx; ret; 
0x000000000006aeb7: add dword ptr [rax + 0x39], ecx; sal byte ptr [rbp - 0xd], 1; mov rax, r8; ret; 
0x000000000002abfa: add dword ptr [rax + 0x39], ecx; sal dword ptr [rsi + 1], 1; hlt; ret; 
0x0000000000029995: add dword ptr [rax + 0x63], ecx; ret; 
0x000000000003fcd3: add dword ptr [rax + 0x752f033c], eax; out dx, al; lea rax, [rbx + rdx]; pop rbx; ret; 
0x00000000000690eb: add dword ptr [rax + 0x75d28410], ecx; out dx, al; ret; 
0x0000000000059f4e: add dword ptr [rax + 1], ecx; ret 0x8948; 
0x0000000000034c23: add dword ptr [rax + 1], ecx; sar byte ptr [rcx - 9], 0x44; mov eax, eax; ret; 
0x000000000001e562: add dword ptr [rax + 1], edi; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x00000000000600f4: add dword ptr [rax + 9], ecx; ret; 
0x0000000000054052: add dword ptr [rax - 0x39], ecx; ret 0xffff; 
0x00000000000199e5: add dword ptr [rax - 0x68], ecx; ret; 
0x0000000000051f55: add dword ptr [rax - 0x75], ecx; and al, 8; mov rdi, rbp; call rax; 
0x000000000005f817: add dword ptr [rax - 0x77], ecx; adc eax, 0x54969; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e3: add dword ptr [rax - 0x77], ecx; adc eax, 0x5499d; movzx eax, byte ptr [rax]; ret; 
0x000000000004efc9: add dword ptr [rax - 0x77], ecx; add eax, 0x67e67; shr rax, 0x21; ret; 
0x0000000000068a13: add dword ptr [rax - 0x77], ecx; clc; ret; 
0x00000000000684b4: add dword ptr [rax - 0x77], ecx; or byte ptr [r15], r9b; mov dh, 6; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000060bf3: add dword ptr [rax - 0x77], ecx; or eax, 0x536ad; mov byte ptr [rdx], dil; ret; 
0x0000000000060baf: add dword ptr [rax - 0x77], ecx; or eax, 0x536f1; mov byte ptr [rdx], dil; ret; 
0x0000000000052228: add dword ptr [rax - 0x77], ecx; out dx, eax; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000001f7bb: add dword ptr [rax - 0x77], ecx; pop rsp; ret 0x4808; 
0x000000000005d5cd: add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000005d66e: add dword ptr [rax - 0x77], ecx; ret 0x294c; 
0x00000000000459fe: add dword ptr [rax - 0x77], ecx; ret 0xb60f; 
0x000000000001a3ef: add dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x000000000002d89c: add dword ptr [rax - 0x77], ecx; ret 0xf748; 
0x0000000000069a53: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000001f267: add dword ptr [rax - 0x77], ecx; sbb al, 0xd0; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x00000000000684b3: add dword ptr [rax - 0x77], r9d; or byte ptr [r15], r9b; mov dh, 6; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000044e9d: add dword ptr [rax - 0x78], eax; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000022258: add dword ptr [rax - 0x7d], ecx; clc; std; jbe 0x22268; pop rbx; ret; 
0x000000000004becb: add dword ptr [rax - 0x7d], ecx; mov byte ptr [rcx], 0x89; ret 0xe883; 
0x0000000000079207: add dword ptr [rax - 0x7d], ecx; ret 0x3801; 
0x00000000000499df: add dword ptr [rax - 0x7d], ecx; ret 0x411c; 
0x0000000000049ecb: add dword ptr [rax - 0x7d], ecx; ret 0x441c; 
0x0000000000021a1b: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x0000000000021e2e: add dword ptr [rax - 0x7d], ecx; ret 0x4818; 
0x000000000006957b: add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000064037: add dword ptr [rax - 0x7d], ecx; ret 0xbf08; 
0x00000000000251e3: add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000001bc76: add dword ptr [rax - 0x7d], ecx; rol dword ptr [rax + rcx*2], 0x83; ret 0xc104; 
0x000000000004beca: add dword ptr [rax - 0x7d], r9d; mov byte ptr [rcx], 0x89; ret 0xe883; 
0x000000000006b652: add dword ptr [rax - 0x7f], ecx; ret 0xca00; 
0x0000000000069813: add dword ptr [rax - 0x7fef8bf9], ebp; cmp byte ptr [rax], al; jne 0x69810; sub rax, rdi; ret; 
0x0000000000069873: add dword ptr [rax - 0x88affc8], eax; sub rax, rdi; ret; 
0x0000000000068a4f: add dword ptr [rax - 0xa], eax; mov dword ptr [rdi], 0x85480a74; sal byte ptr [rbp - 0x1b], cl; xor eax, eax; ret; 
0x000000000006e832: add dword ptr [rax], 0; add byte ptr [rbx + 0x44], bl; mov eax, eax; ret; 
0x000000000006bfac: add dword ptr [rax], 0x89480000; fisttp word ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000006edfc: add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r8; syscall; 
0x000000000005d534: add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r9; syscall; 
0x000000000006ce5b: add dword ptr [rax], 0x894c0000; dec dword ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000006d3f4: add dword ptr [rax], 0x894c0000; out 0x4c, eax; mov eax, eax; syscall; 
0x000000000006cdcc: add dword ptr [rax], 0x894c0000; out dx, eax; mov rax, r8; syscall; 
0x000000000005c8c9: add dword ptr [rax], 0x894c0000; ror byte ptr [rdi], 5; cmp rax, -0x26; je 0x5c8e0; ret; 
0x0000000000060aff: add dword ptr [rax], 0x8d480000; cmp eax, 0x53802; mov rax, r9; syscall; 
0x000000000005f741: add dword ptr [rax], 0x8d480000; cmp eax, 0x54ac0; mov rax, r9; syscall; 
0x0000000000015a66: add dword ptr [rax], 0x8d480000; cmp eax, 0xa14d7; mov rax, r8; syscall; 
0x000000000006e9f4: add dword ptr [rax], 0xb9410000; retf 0; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000006e6ee: add dword ptr [rax], eax; add al, ch; sub cl, byte ptr [rax]; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000003f0e0: add dword ptr [rax], eax; add bl, bl; sub eax, 0x6eb17; add rsp, 0x48; fmulp st(1); ret; 
0x0000000000039e08: add dword ptr [rax], eax; add bl, dh; divps xmm2, xmmword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x0000000000023757: add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000042364: add dword ptr [rax], eax; add byte ptr [rax + 0x29], cl; ret 0x894c; 
0x0000000000079fb6: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret 0x148; 
0x0000000000049f22: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000006a512: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x000000000001f6fa: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; ret 0xe808; 
0x000000000002336d: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; cli; syscall; 
0x000000000005d1cc: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005bcbd: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, r9; syscall; 
0x0000000000059d5e: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rdx; syscall; 
0x000000000002b0b5: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000041c0e: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000004e2da: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x0000000000069d63: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000054857: add dword ptr [rax], eax; add byte ptr [rax - 0x7b], cl; dec dword ptr [rbx - 0x6bf0f3ba]; ret 0x8548; 
0x000000000002a6ba: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000004332b: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4102; 
0x0000000000069da1: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000006aaa9: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000078eb6: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000075dab: add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000041683: add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000001e564: add dword ptr [rax], eax; add byte ptr [rax], al; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x00000000000677d6: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x61030; mov rax, r12; pop r12; ret; 
0x0000000000072631: add dword ptr [rax], eax; add byte ptr [rax], al; cmovae eax, edx; ret; 
0x000000000006d23a: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1ca: add dword ptr [rax], eax; add byte ptr [rax], al; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005e174: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c74d: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000006d4a4: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000002c63f: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, r8d; ret; 
0x000000000006c6f4: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1ff: add dword ptr [rax], eax; add byte ptr [rax], al; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000060afa: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73c: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc77: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c4: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3ef: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc7: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce56: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52f: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa7: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000001f574: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000006c824: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000015ba1: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000006ed0c: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; syscall; ret; 
0x0000000000015bec: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r9; syscall; 
0x000000000005016d: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r14; syscall; 
0x00000000000743c3: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000005d3a1: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005ce4b: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c936: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000006c10e: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000074f68: add dword ptr [rax], eax; add byte ptr [rax], al; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000005ca0f: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; jmp rax; 
0x000000000005c882: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000001dd3d: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000005b0e5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000001ecee: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000001e408: add dword ptr [rax], eax; add byte ptr [rax], al; test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x000000000006cc27: add dword ptr [rax], eax; add byte ptr [rax], al; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000004bace: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000022bbb: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000076d40: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000002c2c4: add dword ptr [rax], eax; add byte ptr [rbx - 0x7bf0f905], al; push -0x9ffffff; ret; 
0x0000000000050a70: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; ret; 
0x0000000000074538: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x11], cl; mov rdx, r14; syscall; 
0x00000000000744e7: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x11], cl; mov rsi, rbx; mov rdx, r14; syscall; 
0x0000000000049692: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000040378: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000005bab7: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], cl; mov rdx, r13; syscall; 
0x000000000005bd26: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x32], cl; syscall; 
0x0000000000074a5f: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000001d640: add dword ptr [rax], eax; add byte ptr [rcx - 0x3a], al; push rsi; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000036e6c: add dword ptr [rax], eax; add byte ptr [rcx - 1], al; xor dh, byte ptr [rdi + 0x39]; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x00000000000238e6: add dword ptr [rax], eax; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000238e6: add dword ptr [rax], eax; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x000000000007a5d0: add dword ptr [rax], eax; add byte ptr [rdi + rcx + 0x28], al; ret 0xf44; 
0x0000000000019bfa: add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1d0], eax; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c02: add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1e0], eax; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c0a: add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1f0], eax; syscall; 
0x0000000000074fea: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x394cc789; ret 0x3a74; 
0x00000000000760ae: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x47; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000001a3e6: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 4; add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x000000000006307d: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov esi, 0x53be0fc8; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000039be9: add dword ptr [rax], eax; add byte ptr [rdi], cl; test dword ptr [rsi - 0xdffffff], eax; divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000005bae0: add dword ptr [rax], eax; add byte ptr [rdx + 0x2a0100], bh; syscall; 
0x000000000006e76b: add dword ptr [rax], eax; add byte ptr [rsi + 0x18], bh; lea rdi, [r9 + 0x88]; syscall; 
0x000000000006e9f0: add dword ptr [rax], eax; add byte ptr [rsi + 0x81], bh; mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x00000000000589ad: add dword ptr [rax], eax; add dh, dh; ret 0x7401; 
0x0000000000051a15: add dword ptr [rax], eax; add dh, dh; ret 0xf08; 
0x00000000000589e8: add dword ptr [rax], eax; add dh, dh; ret 0xf10; 
0x000000000002c2cd: add dword ptr [rax], eax; add dh, dh; ret; 
0x0000000000039bef: add dword ptr [rax], eax; add dl, dh; divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000004acdb: add dword ptr [rax], eax; add rax, 2; add dword ptr [rip + 0x6c2d1], eax; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000006905b: add dword ptr [rax], eax; add rax, rbx; pop rbx; ret; 
0x000000000004f284: add dword ptr [rax], eax; add rsp, 8; lea rax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x00000000000688f0: add dword ptr [rax], eax; add rsp, 8; ret; 
0x000000000001dd83: add dword ptr [rax], eax; jbe 0x1dd90; ret; 
0x000000000001e08a: add dword ptr [rax], eax; jbe 0x1e090; ret; 
0x00000000000486bb: add dword ptr [rax], eax; lea rax, [rip + 0x6e55c]; add rsp, 0x18; ret; 
0x000000000004f41f: add dword ptr [rax], eax; mov eax, 0x39; syscall; 
0x0000000000041680: add dword ptr [rax], eax; mov eax, 1; add rsp, 8; ret; 
0x000000000005c72b: add dword ptr [rax], eax; mov esi, 0x88000; mov rax, r14; mov rdi, r13; syscall; 
0x000000000004d017: add dword ptr [rax], eax; mov qword ptr [rip + 0x69dec], 0; add rsp, 8; ret; 
0x000000000004f310: add dword ptr [rax], eax; mov rax, r12; pop r12; ret; 
0x0000000000050d22: add dword ptr [rax], eax; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000017bc0: add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000002394b: add dword ptr [rax], eax; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xaf; syscall; 
0x000000000006affa: add dword ptr [rax], eax; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000070ba3: add dword ptr [rax], eax; ret; 
0x00000000000704ac: add dword ptr [rax], eax; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000024663: add dword ptr [rax], eax; xor eax, eax; add rsp, 8; ret; 
0x0000000000033e2e: add dword ptr [rax], edi; ret 0x2874; 
0x00000000000238e5: add dword ptr [rax], r8d; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; 
0x00000000000238e5: add dword ptr [rax], r8d; add byte ptr [rdi + 0x10], bh; xor esi, esi; syscall; ret; 
0x000000000005b135: add dword ptr [rbp + 0x34], esi; mov eax, 0x83; syscall; 
0x0000000000048fa1: add dword ptr [rbp + 0x64], esi; mov eax, 2; ret; 
0x0000000000055f5f: add dword ptr [rbp + 0x7d8944db], eax; adc al, 0x89; sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x0000000000054042: add dword ptr [rbp + 0xf], ebx; test byte ptr [rdi*8 - 0x74b70001], dl; jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000063376: add dword ptr [rbp - 0x77], eax; ret 0x428d; 
0x0000000000055533: add dword ptr [rbp - 0x7b], eax; in al, 0xf; xchg eax, ebp; ret 0x45c7; 
0x0000000000057a6b: add dword ptr [rbx + 0x5d], ebx; cdqe; pop r12; pop r13; ret; 
0x000000000001efe4: add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x000000000005217b: add dword ptr [rbx - 0x1076b7d0], ecx; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000044f9b: add dword ptr [rbx - 0x7cb7fb8d], ecx; ret; 
0x000000000006ae62: add dword ptr [rbx - 0xd], esi; mov rax, r8; ret; 
0x000000000007a1d8: add dword ptr [rbx], 0; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x000000000002e13e: add dword ptr [rcx + 0x39], eax; ret 0xf17d; 
0x0000000000051fe3: add dword ptr [rcx + 0x39], ecx; ret; 
0x000000000006d1ea: add dword ptr [rcx + 0x49deb05], ecx; add bl, al; nop word ptr [rax + rax]; mov rax, r8; syscall; 
0x000000000002af17: add dword ptr [rcx + 0x63], ecx; ret 0x8d48; 
0x00000000000432f3: add dword ptr [rcx + 0xf], eax; mov dh, 0x44; adc eax, 0x75c08400; ret 0x58e9; 
0x000000000006d490: add dword ptr [rcx + rcx*4 - 8], ecx; mov rdx, r10; syscall; 
0x0000000000059c6b: add dword ptr [rcx + rdi - 0x39], ecx; jne 0x59c48; mov eax, edx; ret; 
0x000000000002d067: add dword ptr [rcx - 0x48], eax; add al, byte ptr [rax]; add byte ptr [rax], al; sbb r8d, -1; mov eax, r8d; ret; 
0x0000000000034cd7: add dword ptr [rcx - 0x7d], eax; fdivr st(7); mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000029d28: add dword ptr [rcx - 0x80], eax; cmp al, 0x24; add byte ptr [rax + 0xf], cl; call 0x1891f; jmp qword ptr [rsi + 0xf]; 
0x000000000005d1cb: add dword ptr [rcx], 0x89480000; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005badf: add dword ptr [rcx], eax; add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x0000000000034cab: add dword ptr [rcx], eax; sar byte ptr [rcx - 8], 0x44; mov eax, eax; ret; 
0x000000000002b62d: add dword ptr [rcx], edi; ret 0x840f; 
0x0000000000070690: add dword ptr [rcx], edi; ret 0xeb7e; 
0x000000000001e062: add dword ptr [rcx], esi; rol byte ptr [rbx - 0x7c8019], 0x20; seta al; ret; 
0x000000000005ef35: add dword ptr [rcx], esi; test byte ptr [rax - 0x77], 0xdf; call rax; 
0x000000000007aeed: add dword ptr [rdi + 0x1246c08], ebx; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000006f0fb: add dword ptr [rdi + 4], esi; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006bd3b: add dword ptr [rdi + 5], esi; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd7b: add dword ptr [rdi + 5], esi; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005d195: add dword ptr [rdi + 8], esi; ret; 
0x000000000005d1de: add dword ptr [rdi + rcx + 0x44], esi; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000005f1be: add dword ptr [rdi + rcx + 0x48], esi; sub eax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000001afc3: add dword ptr [rdi], ecx; mov dh, 0x4e; add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x000000000007aef2: add dword ptr [rdi], ecx; scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x00000000000589c2: add dword ptr [rdi], ecx; test dword ptr [rdi], ecx; or al, byte ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000001afc2: add dword ptr [rdi], r9d; mov dh, 0x4e; add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x000000000006d190: add dword ptr [rip + 0x49e45], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004ace1: add dword ptr [rip + 0x6c2d1], eax; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000003fa03: add dword ptr [rsi + 0x48], esp; movd mm0, eax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000001e4f5: add dword ptr [rsi], ecx; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000069a08: add dword ptr [rsp + rax*4 - 0x3f], eax; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000001e449: add dword ptr [rsp + rcx + 0x48], esi; cmp esi, 2; je 0x1e460; ret; 
0x000000000002360c: add dword ptr es:[rax], eax; add byte ptr [rax - 0x77], cl; cli; syscall; 
0x0000000000061a58: add eax, 0x10; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx + 4], eax; fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x000000000006c54f: add eax, 0x14040c6; ret; 
0x0000000000043ee5: add eax, 0x178c085; ret; 
0x000000000003c5f1: add eax, 0x18c48348; ret; 
0x00000000000502ce: add eax, 0x1c244489; and eax, 0xfffffffe; mov rsi, r13; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000050071: add eax, 0x1c244489; test eax, eax; jne 0x50112; mov eax, 0x66; syscall; 
0x00000000000502a7: add eax, 0x1c244489; test eax, eax; js 0x5010f; mov rax, r10; syscall; 
0x000000000005023c: add eax, 0x1c244489; test eax, eax; js 0x50112; mov rax, r10; syscall; 
0x000000000005d30e: add eax, 0x1e48341; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005e181: add eax, 0x1f0fc9eb; add byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x0000000000060826: add eax, 0x247c6348; sbb al, 0x48; mov eax, edx; syscall; 
0x000000000002efb5: add eax, 0x280f0008; ret; 
0x0000000000022b16: add eax, 0x28c48348; ret; 
0x0000000000075929: add eax, 0x2eb2; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000006ff9d: add eax, 0x30556349; cmp rdx, rax; je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000001f46e: add eax, 0x34; ret; 
0x0000000000060541: add eax, 0x358b4400; mov esi, 0x8900053b; ret; 
0x000000000005acd1: add eax, 0x358b4400; xchg eax, esp; add eax, 0xd8d4800; sal dword ptr [rbx + 5], 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001fc8d: add eax, 0x3896600; xor eax, eax; pop rbx; ret; 
0x0000000000022f51: add eax, 0x38c48348; ret; 
0x0000000000074fee: add eax, 0x394cc789; ret 0x3a74; 
0x0000000000060bb5: add eax, 0x3a884000; ret; 
0x00000000000742ea: add eax, 0x3dced; ret; 
0x0000000000078a35: add eax, 0x3dec6; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000007896d: add eax, 0x3df8e; call rax; 
0x00000000000787b8: add eax, 0x3e707; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000001fcab: add eax, 0x3fbf00; add byte ptr [rax], al; call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x00000000000754aa: add eax, 0x41011; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x0000000000075da6: add eax, 0x4125d; add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x00000000000605a8: add eax, 0x415d4100; pop rsi; ret; 
0x0000000000071e11: add eax, 0x425ba; test rax, rax; je 0x71e26; call rax; 
0x0000000000067b08: add eax, 0x448b4800; and al, 8; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000006ff8e: add eax, 0x448f1; test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x0000000000070373: add eax, 0x46b08; cmp eax, 1; je 0x70380; ret; 
0x0000000000070356: add eax, 0x46b25; ret; 
0x000000000004c5c9: add eax, 0x47d6348; mov rax, r8; syscall; 
0x0000000000074d9c: add eax, 0x47d6348; mov rax, r9; syscall; 
0x000000000005bc81: add eax, 0x48000000; mov esi, edx; mov rdi, rbp; syscall; 
0x000000000004968a: add eax, 0x48000001; add esp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000023e44: add eax, 0x48106b89; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000060bec: add eax, 0x48107400; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f7dc: add eax, 0x48107400; lea edx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000060ba8: add eax, 0x48147400; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f810: add eax, 0x48147400; lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000001fcb5: add eax, 0x48c03100; add esp, 8; ret; 
0x000000000005f797: add eax, 0x48c08944; add esp, 8; ret; 
0x000000000005bbca: add eax, 0x48d0634c; movsxd rdi, ebp; mov eax, 3; syscall; 
0x000000000006d1ec: add eax, 0x49deb; ret; 
0x00000000000703f5: add eax, 0x4c000000; mov edi, esp; syscall; 
0x000000000005c37c: add eax, 0x4c000001; mov esi, ecx; syscall; 
0x000000000006059f: add eax, 0x4c5c4100; mov dword ptr [rip + 0x53bb6], ebp; pop r13; pop r14; ret; 
0x000000000001edf2: add eax, 0x4cef8900; mov edx, ebp; mov rsi, r12; call rbx; 
0x0000000000067679: add eax, 0x4f602; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074601: add eax, 0x4f88348; je 0x74610; mov dword ptr [rsp + 0xc], 0xfffffff0; movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x000000000005f80d: add eax, 0x5497e; je 0x5f828; lea rdx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7d9: add eax, 0x549b2; je 0x5f7f0; lea rdx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005fd66: add eax, 0x570dd; add rsp, 8; ret; 
0x0000000000023335: add eax, 0x58c48348; ret; 
0x0000000000060b57: add eax, 0x5bc08944; ret; 
0x000000000005a06a: add eax, 0x5cbdd; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000004eefd: add eax, 0x5eefe; add rsp, 8; ret; 
0x0000000000019a3e: add eax, 0x625bd; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000023410: add eax, 0x6348c189; stc; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023455: add eax, 0x6348c289; cli; call 0x21bc0; add rsp, 8; ret; 
0x0000000000034bd6: add eax, 0x66ffffff; nop dword ptr [rax + rax]; jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x000000000004f386: add eax, 0x67c8d; pop rbp; ret; 
0x000000000004efcc: add eax, 0x67e67; shr rax, 0x21; ret; 
0x000000000004efc1: add eax, 0x67e72; add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x000000000004efa9: add eax, 0x67e8a; ret; 
0x000000000004df12: add eax, 0x68f0d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004defb: add eax, 0x68f24; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000004bc76: add eax, 0x692a5; ret; 
0x000000000004d032: add eax, 0x69dd5; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004d01b: add eax, 0x69dec; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000004aced: add eax, 0x6bf3e; ret; 
0x0000000000047ed2: add eax, 0x6c0d9; ret; 
0x000000000004ace2: add eax, 0x6c2d1; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x00000000000486bf: add eax, 0x6e55c; add rsp, 0x18; ret; 
0x000000000003e64b: add eax, 0x6e920; add rsp, 0x10; pop rbx; ret; 
0x000000000003e551: add eax, 0x6ea0a; add rsp, 0x10; pop rbx; ret; 
0x000000000003f346: add eax, 0x6efbd; not rax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000003cd3b: add eax, 0x70230; ret; 
0x000000000003cc8e: add eax, 0x702cd; ret; 
0x000000000003cc81: add eax, 0x7117a; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cc63: add eax, 0x711b8; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003cc3b: add eax, 0x711c0; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003f393: add eax, 0x716b0; not eax; and eax, edx; movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x000000000003cb45: add eax, 0x71886; test rax, rax; je 0x3cb60; ret; 
0x000000000003fd7a: add eax, 0x72311; mov rax, r8; ret; 
0x000000000003fd04: add eax, 0x72387; mov rax, r8; pop rbx; ret; 
0x000000000003cd30: add eax, 0x7278b; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x000000000003cd13: add eax, 0x727b8; movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000003ccef: add eax, 0x727cc; test edx, edx; js 0x3cd39; ret; 
0x000000000003fd6a: add eax, 0x7289e; pop rbx; mov rax, r8; ret; 
0x00000000000414c6: add eax, 0x733b7; ret; 
0x000000000003ba40: add eax, 0x73a7b; ret; 
0x000000000003a424: add eax, 0x73bdf; divsd xmm0, xmm1; ret; 
0x000000000003cbad: add eax, 0x73eea; test eax, eax; je 0x3cbd0; ret; 
0x000000000004c4ed: add eax, 0x7408e780; test al, 0xb8; add byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x0000000000039d83: add eax, 0x74098; ret; 
0x0000000000040573: add eax, 0x7430a; ret; 
0x0000000000039a17: add eax, 0x74404; ret; 
0x00000000000399d3: add eax, 0x74630; divsd xmm0, xmm1; ret; 
0x000000000003a957: add eax, 0x7464c; ret; 
0x000000000004204a: add eax, 0x74b81; test ebx, ebx; jne 0x42058; pop rbx; ret; 
0x000000000003a975: add eax, 0x74bd6; ret; 
0x000000000003a967: add eax, 0x74be4; ret; 
0x000000000002b500: add eax, 0x74e83948; ret; 
0x000000000004c485: add eax, 0x74eaf883; add eax, 0x75a3f883; or bh, dh; ret; 
0x000000000007432c: add eax, 0x74f0f883; test byte ptr [rax + 0x63], 0xf8; call 0x21bc0; add rsp, 8; ret; 
0x0000000000037c77: add eax, 0x752f4; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000039f62: add eax, 0x75569; ret; 
0x000000000004c56b: add eax, 0x755df883; fcomip st(7); ret; 
0x00000000000378b2: add eax, 0x756b9; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000039ba7: add eax, 0x75924; ret; 
0x0000000000037605: add eax, 0x75956; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004c48a: add eax, 0x75a3f883; or bh, dh; ret; 
0x000000000007b285: add eax, 0x75caffa4; sti; ret; 
0x0000000000023f99: add eax, 0x75daf883; mov r8d, 0x11a; syscall; 
0x000000000003a493: add eax, 0x76574; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b92: add eax, 0x76e75; divss xmm0, xmm1; ret; 
0x000000000003fc7a: add eax, 0x7739f; ret; 
0x00000000000366fb: add eax, 0x77700; divsd xmm0, xmm1; ret; 
0x00000000000365eb: add eax, 0x77830; ret; 
0x000000000003655b: add eax, 0x778a0; add rsp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x00000000000366e1: add eax, 0x7797a; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000365e3: add eax, 0x77a20; divsd xmm0, qword ptr [rip + 0x77830]; ret; 
0x0000000000036f9b: add eax, 0x78520; divss xmm0, xmm1; ret; 
0x0000000000036e93: add eax, 0x78638; ret; 
0x0000000000036e0a: add eax, 0x786b1; add rsp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x00000000000365d6: add eax, 0x78715; divsd xmm0, xmm1; ret; 
0x0000000000035603: add eax, 0x787f8; divsd xmm0, xmm1; ret; 
0x0000000000035503: add eax, 0x78918; ret; 
0x00000000000354fb: add eax, 0x78b08; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x00000000000354df: add eax, 0x78b7c; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x00000000000354e7: add eax, 0x794bc; add rsp, 0x28; ret; 
0x0000000000035e5b: add eax, 0x79660; divss xmm0, xmm1; ret; 
0x0000000000035d63: add eax, 0x79768; ret; 
0x0000000000034389: add eax, 0x79a92; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034df9: add eax, 0x79b32; add rsp, 0x28; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000036e8b: add eax, 0x79b7c; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000036f85: add eax, 0x79dfe; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x0000000000036e7a: add eax, 0x7a099; divss xmm0, xmm1; ret; 
0x00000000000338e3: add eax, 0x7a518; ret; 
0x00000000000338ce: add eax, 0x7a735; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000033225: add eax, 0x7abde; ret; 
0x0000000000035d5b: add eax, 0x7acac; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x0000000000035d4b: add eax, 0x7b024; add rsp, 0x18; ret; 
0x0000000000035d43: add eax, 0x7b040; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000032d93: add eax, 0x7b068; ret; 
0x0000000000031d78: add eax, 0x7b1f3; pop rbx; ret; 
0x0000000000032873: add eax, 0x7b588; ret; 
0x0000000000035684: add eax, 0x7b6af; add rsp, 0x18; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x000000000003172c: add eax, 0x7b82f; pop rbx; ret; 
0x00000000000327f8: add eax, 0x7bdb3; ret; 
0x00000000000335dc: add eax, 0x7bee3; ret; 
0x000000000003175c: add eax, 0x7c957; ret; 
0x00000000000304fd: add eax, 0x7ca6e; add rsp, 0x10; pop rbx; ret; 
0x000000000003043a: add eax, 0x7cb21; add rsp, 0x10; pop rbx; ret; 
0x0000000000030252: add eax, 0x7cd19; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000031060: add eax, 0x7cdab; add rsp, 0x18; ret; 
0x000000000003d24d: add eax, 0x7cdb3fff; and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000003100c: add eax, 0x7cdef; add rsp, 0x18; ret; 
0x0000000000031750: add eax, 0x7ce03; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x0000000000031720: add eax, 0x7ce8b; test ebx, ebx; je 0x31731; xorpd xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x000000000003397b: add eax, 0x7d08c; ret; 
0x0000000000030ffe: add eax, 0x7d305; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030af3: add eax, 0x7d308; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030ae3: add eax, 0x7d318; ret; 
0x0000000000030ace: add eax, 0x7d8fd; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000028edf: add eax, 0x7e27c; cmp edx, 0x31; jle 0x28f08; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000003111e: add eax, 0x7e3a5; add rsp, 0x28; ret; 
0x00000000000310da: add eax, 0x7e3e1; add rsp, 0x28; ret; 
0x000000000002ea9c: add eax, 0x7e4bf; ret; 
0x000000000002f66f: add eax, 0x7e784; addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030b7b: add eax, 0x7e940; ret; 
0x000000000002f677: add eax, 0x7ec74; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000031d6d: add eax, 0x7ecb6; test ebx, ebx; je 0x31d7d; xorps xmm0, xmmword ptr [rip + 0x7b1f3]; pop rbx; ret; 
0x0000000000031da4: add eax, 0x7edb3; ret; 
0x0000000000031d98: add eax, 0x7edbb; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000002f43b: add eax, 0x7ee88; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ee9b: add eax, 0x7ef78; ret; 
0x000000000002ede1: add eax, 0x7f012; add rsp, 0x18; ret; 
0x000000000002f1a2: add eax, 0x7f159; add rsp, 0x18; ret; 
0x000000000002ee93: add eax, 0x7f458; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002edd9: add eax, 0x7f512; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000002ed6b: add eax, 0x7f558; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000311d7: add eax, 0x7f86c; fstp xword ptr [rsp + 0x10]; fld1; add rsp, 0x28; ret; 
0x00000000000310cc: add eax, 0x7f977; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000030b61: add eax, 0x7ff36; test eax, eax; jns 0x30b70; ret; 
0x0000000000034d5d: add eax, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c53: add eax, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002544b: add eax, 0x80510; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000006d488: add eax, 0x80be; add byte ptr [rbx - 0x76b3fe32], al; clc; mov rdx, r10; syscall; 
0x000000000002d113: add eax, 0x80ce8; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d127: add eax, 0x80cf4; ret; 
0x000000000002f270: add eax, 0x817cf; add rsp, 0x18; ret; 
0x000000000002f0d3: add eax, 0x8194c; ret; 
0x000000000002f0cb: add eax, 0x81958; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002f0b5: add eax, 0x81972; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000002ef8d: add eax, 0x81a9a; ret; 
0x000000000002ef85: add eax, 0x81a9e; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002d157: add eax, 0x82374; ret; 
0x000000000002d143: add eax, 0x82378; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000070b9a: add eax, 0x8349177e; rol dword ptr [rsi], 0x41; mov byte ptr [rcx], 0; ret; 
0x000000000007475f: add eax, 0x83c08949; clc; div dword ptr [rbp + 0x38]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005bc8c: add eax, 0x83c28941; clc; test dword ptr [rdi], 0x9885; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000746c0: add eax, 0x83c28948; clc; div dword ptr [rbp + 0x37]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005b9f8: add eax, 0x83c28948; clc; div dword ptr [rbp + 0x3f]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000004f427: add eax, 0x85c38948; sal byte ptr [rbp + 0x50], 0xb8; mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x000000000006d547: add eax, 0x87b8b48; call qword ptr [rbx]; 
0x0000000000029a2d: add eax, 0x8894b; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029a02: add eax, 0x88976; ret; 
0x000000000001ac1e: add eax, 0x8906b60f; ret 0xf883; 
0x0000000000028f46: add eax, 0x89118; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028f4d: add eax, 0x8911e; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028eb5: add eax, 0x891af; cmove r8, rax; mov rax, r8; ret; 
0x000000000006a867: add eax, 0x89480000; ret 0x2948; 
0x0000000000028eeb: add eax, 0x8948d; mov rax, r8; ret; 
0x000000000006d424: add eax, 0x894cf9eb; ror byte ptr [rax - 0x77], 0xd6; syscall; 
0x000000000002b26a: add eax, 0x89614; test al, al; jne 0x2b278; ret; 
0x0000000000029326: add eax, 0x8a875; ret; 
0x000000000002b24b: add eax, 0x8bd28; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000005d577: add eax, 0x8c48348; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000006c4ed: add eax, 0x8c48348; pop rbx; pop r12; pop r13; pop r14; ret; 
0x000000000002a29f: add eax, 0x8cb04; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000743cb: add eax, 0x9066d7eb; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000061fbd: add eax, 0x908d0000; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x0000000000022e8d: add eax, 0x93ef6; add rsp, 8; mov rax, r8; ret; 
0x0000000000022e2d: add eax, 0x93f46; add rsp, 8; ret; 
0x0000000000022dd2: add eax, 0x93f9d; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000022dbb: add eax, 0x93fb4; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000001db36: add eax, 0x96205; ret; 
0x000000000001db26: add eax, 0x9620d; ret; 
0x000000000001dae6: add eax, 0x96245; ret; 
0x000000000001686b: add eax, 0x966f0; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000167bc: add eax, 0x97637; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000047ec5: add eax, 0xa0; ret; 
0x0000000000015e3a: add eax, 0xa110d; test eax, eax; jne 0x15e50; mov eax, r12d; pop r12; ret; 
0x000000000005f7e9: add eax, 0xb60f00; ret; 
0x000000000002544d: add eax, 0xb70f0008; add al, 0x50; ret; 
0x000000000005fd5d: add eax, 0xb71ce800; add byte ptr [rax], al; lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x000000000007443c: add eax, 0xb8c78948; jno 0x74443; add byte ptr [rax], al; syscall; 
0x0000000000050067: add eax, 0xb8c78948; push 0; add byte ptr [rax], al; syscall; 
0x000000000007b38b: add eax, 0xb8ff3148; cmp al, 0; add byte ptr [rax], al; syscall; 
0x000000000007b383: add eax, 0xbb8c3; add byte ptr [rax], al; syscall; 
0x000000000005e697: add eax, 0xc089445b; pop rbp; pop r12; ret; 
0x000000000001fd37: add eax, 0xc4834800; or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000002b82d: add eax, 0xc7490000; ret 0xfff0; 
0x000000000005f74a: add eax, 0xc8894c00; syscall; 
0x000000000005acd8: add eax, 0xd8d4800; sal dword ptr [rbx + 5], 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000007b0ab: add eax, 0xd9ddfdd9; ret; 
0x000000000005c8d1: add eax, 0xdaf88348; je 0x5c8e0; ret; 
0x000000000005f750: add eax, 0xdaf88348; je 0x5f790; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b0e: add eax, 0xdaf88348; je 0x60b50; mov eax, r8d; pop rbx; ret; 
0x000000000006c701: add eax, 0xdaf88348; je 0x6c710; xor eax, eax; ret; 
0x000000000006c82f: add eax, 0xdaf88348; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1dc: add eax, 0xdaf88348; je 0x6d1f8; ret; 
0x000000000006d24c: add eax, 0xdaf88348; je 0x6d260; add rsp, 8; ret; 
0x0000000000015be0: add eax, 0xdaf88348; jne 0x15a1f; mov esi, 1; mov rax, r9; syscall; 
0x000000000005c865: add eax, 0xdaf88348; jne 0x5c83a; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000006b542: add eax, 0xdaf88348; jne 0x6b550; xor esi, esi; mov rax, r9; syscall; 
0x000000000006b5a4: add eax, 0xdaf88348; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a4: add eax, 0xdaf88348; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000006bfb7: add eax, 0xdaf88348; jne 0x6bf48; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c03f: add eax, 0xdaf88348; jne 0x6bf5e; mov esi, 1; mov rax, r8; syscall; 
0x000000000006c088: add eax, 0xdaf88348; jne 0x6bf72; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c11c: add eax, 0xdaf88348; jne 0x6c130; mov rax, r8; syscall; 
0x000000000006c20f: add eax, 0xdaf88348; jne 0x6c18c; mov rax, r8; syscall; 
0x000000000006c1d1: add eax, 0xdaf88348; jne 0x6c1dd; mov rax, r8; syscall; 
0x000000000006c24c: add eax, 0xdaf88348; jne 0x6c258; mov rax, r8; syscall; 
0x000000000006c2a6: add eax, 0xdaf88348; jne 0x6c2b5; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c773: add eax, 0xdaf88348; jne 0x6c79c; mov rax, r8; syscall; 
0x000000000006cdd7: add eax, 0xdaf88348; jne 0x6ca68; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ce37: add eax, 0xdaf88348; jne 0x6ca88; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006cda2: add eax, 0xdaf88348; jne 0x6cb0e; mov rax, r8; syscall; 
0x000000000006cc36: add eax, 0xdaf88348; jne 0x6cc00; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006cbf1: add eax, 0xdaf88348; jne 0x6cc00; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d067: add eax, 0xdaf88348; jne 0x6cfc6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d03c: add eax, 0xdaf88348; jne 0x6d005; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d498: add eax, 0xdaf88348; jne 0x6d391; mov esi, 1; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006dc84: add eax, 0xdaf88348; jne 0x6d8af; mov rax, r10; mov rsi, rdx; syscall; 
0x000000000006d908: add eax, 0xdaf88348; jne 0x6d918; mov rax, r8; syscall; 
0x000000000006ea07: add eax, 0xdaf88348; jne 0x6e9cb; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006ed04: add eax, 0xdaf88348; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed04: add eax, 0xdaf88348; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006ee07: add eax, 0xdaf88348; jne 0x6edcf; mov esi, 1; mov rax, r8; syscall; 
0x000000000006f0a3: add eax, 0xdaf88348; jne 0x6f07d; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006fc91: add eax, 0xdaf88348; jne 0x6fc69; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000007039e: add eax, 0xdaf88348; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; 
0x000000000007039e: add eax, 0xdaf88348; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000023fcc: add eax, 0xe08141; or byte ptr [rax], al; add byte ptr [rbp + 0x1a], dh; call 0x21bc0; add rsp, 8; ret; 
0x000000000007afd8: add eax, 0xe0d9d9dd; ret; 
0x00000000000220cf: add eax, 0xe8c78948; call 0x490220d3; add esp, 8; ret; 
0x000000000005e134: add eax, 0xe8c78948; cmp dword ptr [rdx], -4; dec dword ptr [rax - 0x77]; ret; 
0x000000000004c3ff: add eax, 0xe8c78948; mov eax, 0x48fffd57; add esp, 8; ret; 
0x00000000000411fe: add eax, 0xe8c78948; mov ecx, 0x48fffe09; add esp, 8; ret; 
0x00000000000243fe: add eax, 0xe8c78948; mov ecx, 0x48ffffd7; add esp, 8; ret; 
0x0000000000059b61: add eax, 0xe8c78948; push rsi; cmp ah, 0xff; add rsp, 8; ret; 
0x00000000000744f4: add eax, 0xe8c78948; ret; 
0x000000000005ac34: add eax, 0xe8c78948; sub dword ptr [rdi - 4], -1; add rsp, 8; ret; 
0x000000000007520e: add eax, 0xe8c78948; test eax, 0x48fffac9; add esp, 8; ret; 
0x000000000004360e: add eax, 0xe8c78948; test eax, 0x48fffde5; add esp, 8; ret; 
0x000000000002430a: add eax, 0xe9c78948; lodsd eax, dword ptr [rsi]; fdivr st(7); jmp qword ptr [rsi + 0x2e]; 
0x000000000001f568: add eax, 0xeb8; add byte ptr [rax - 0x73], cl; je 0x1f596; or byte ptr [rdi + 1], bh; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000006c3e2: add eax, 0xf012; mov qword ptr [rdx + 0xa8], rax; ret; 
0x0000000000030fff: add eax, 0xf20007d3; movups xmmword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x00000000000589e7: add eax, 0xf6000001; ret 0xf10; 
0x000000000006c77e: add eax, 0xf70c538b; ret 0xffff; 
0x000000000002bfe0: add eax, 0xfffcf9e9; jmp qword ptr [rsi + 0x2e]; 
0x000000000002c4a4: add eax, 0xfffd4be9; jmp qword ptr [rsi + 0xf]; 
0x000000000006cdb1: add eax, 0xfffd57e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000015bf4: add eax, 0xfffe25e9; jmp qword ptr [rsi + 0xf]; 
0x000000000002cd14: add eax, 0xfffe3ae9; jmp qword ptr [rsi + 0xf]; 
0x0000000000050298: add eax, 0xfffebbe9; jmp qword ptr [rsi - 0x70]; 
0x0000000000060830: add eax, 0xfffef2e9; jmp qword ptr [rsi + 0x2e]; 
0x00000000000718c8: add eax, 0xfffefde9; jmp qword ptr [rsi - 0x70]; 
0x000000000004c5fd: add eax, 0xffff4de9; jmp qword ptr [rsi + 0x2e]; 
0x000000000001ee3c: add eax, 0xffffff8f; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000006ba26: add eax, 1; add rsp, 8; ret; 
0x00000000000199e3: add eax, 1; cdqe; ret; 
0x0000000000069871: add eax, 1; cmp byte ptr [rax], 0; jne 0x69870; sub rax, rdi; ret; 
0x00000000000724f5: add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x000000000006ae20: add eax, 1; cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006aeb5: add eax, 1; cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006ae88: add eax, 1; cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x00000000000690e9: add eax, 1; mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x000000000005f18f: add eax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000070b1b: add eax, 1; mov qword ptr [rdi], rax; call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x000000000004efc7: add eax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x000000000003fa01: add eax, 1; movq xmm0, rax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000001e557: add eax, 1; ret; 
0x0000000000069a06: add eax, 1; test cl, r8b; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000004acde: add eax, 2; add dword ptr [rip + 0x6c2d1], eax; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x00000000000701d7: add eax, 2; add rsp, 8; ret; 
0x000000000002d00b: add eax, 2; mov eax, r8d; ret; 
0x000000000001db10: add eax, 4; ret; 
0x000000000006a588: add eax, 4; test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000006a694: add eax, 4; test edx, edx; jne 0x6a690; sub rax, rdi; sar rax, 2; ret; 
0x0000000000061a9d: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000619d9: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061ad9: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061af9: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a7d: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061ab9: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a35: add eax, 8; add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000007aee9: add eax, dword ptr [rax - 0x60fedb9c]; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000038875: add eax, dword ptr [rax]; add al, ch; ret; 
0x000000000006969c: add eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000003d0db: add eax, dword ptr [rax]; add byte ptr [rax - 0x3f], cl; out 0x34, eax; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x00000000000573dc: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000787bb: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000005a0d5: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005afa3: add eax, dword ptr [rax]; add byte ptr [rax], al; mov qword ptr [rsp + 0x20], rax; mov eax, 0xe; syscall; 
0x000000000006db0a: add eax, dword ptr [rax]; add byte ptr [rax], al; mov qword ptr [rsp + 0x70], rax; mov eax, 0xe; syscall; 
0x000000000005c5ba: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000006cc3e: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; syscall; 
0x0000000000070471: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x0000000000060819: add eax, dword ptr [rax]; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x000000000001e724: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004b115: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; ret; 
0x000000000006f2ca: add eax, dword ptr [rax]; add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x000000000002af0a: add eax, dword ptr [rax]; add byte ptr [rbx + 0xf], ah; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000002b6dd: add eax, dword ptr [rax]; add byte ptr [rcx + 0x21d8f7d0], cl; shr byte ptr [rcx], 1; ret 0xc189; 
0x000000000003801a: add eax, dword ptr [rax]; add byte ptr [rcx - 0x7f], al; cld; ret 0xfbb4; 
0x00000000000338c6: add eax, dword ptr [rax]; add byte ptr [rdi - 0x23], bh; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030ac6: add eax, dword ptr [rax]; add byte ptr [rdi - 0x23], bh; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338a3: add eax, dword ptr [rax]; add byte ptr [rsi + 0x48], bh; comisd xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000030aa3: add eax, dword ptr [rax]; add byte ptr [rsi + 0x48], bh; comisd xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x0000000000041645: add eax, dword ptr [rax]; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000078a38: add eax, dword ptr [rax]; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000007a9c2: add eax, dword ptr [rax]; addsd xmm0, xmm2; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000007a1d9: add eax, dword ptr [rax]; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x0000000000078970: add eax, dword ptr [rax]; call rax; 
0x0000000000023e2d: add eax, dword ptr [rax]; mov eax, 0x27; syscall; 
0x0000000000046a4e: add eax, dword ptr [rax]; mov qword ptr [rbp], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000022e29: add eax, dword ptr [rax]; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x0000000000022db7: add eax, dword ptr [rax]; mov qword ptr [rip + 0x93fb4], 0; add rsp, 8; ret; 
0x0000000000043999: add eax, dword ptr [rax]; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000742ed: add eax, dword ptr [rax]; ret; 
0x0000000000047179: add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x00000000000573d6: add eax, dword ptr [rbp - 0x4577f040]; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000006eede: add eax, dword ptr [rbp - 0x76128b40]; ret 0xe281; 
0x000000000004a6af: add eax, dword ptr [rbx + 0x148fce0]; ret; 
0x000000000006bc78: add eax, dword ptr [rbx + 0x68901e0]; xor eax, eax; ret; 
0x00000000000786b0: add eax, dword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005c001: add eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000005cdf8: add eax, dword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000007af72: add eax, dword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006b7e9: add eax, dword ptr [rdx + rcx*8]; ret; 
0x000000000001efc1: add eax, dword ptr [rdx - 0x80]; cmp al, 0x20; cmp eax, 0x83481774; ret; 
0x0000000000078a34: add eax, dword ptr [rip + 0x3dec6]; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000007896c: add eax, dword ptr [rip + 0x3df8e]; call rax; 
0x0000000000074220: add eax, dword ptr [rsp + 0x30]; mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x000000000007561e: add eax, dword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x0000000000034c25: add eax, eax; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034cac: add eax, eax; jns 0x34ca8; mov eax, r8d; ret; 
0x0000000000034d2d: add eax, eax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000001e431: add eax, eax; ret; 
0x000000000002d0cc: add eax, eax; sete r8b; mov eax, r8d; ret; 
0x00000000000696bf: add eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000000021105: add eax, ebx; loope 0x210e7; ret 0x8348; 
0x0000000000069ad3: add eax, ebx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x00000000000696dd: add eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000006905e: add eax, ebx; pop rbx; ret; 
0x0000000000032897: add eax, edx; movq xmm2, rax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000001ddb0: add eax, edx; movzx eax, byte ptr [rcx + rax]; mov ecx, edi; sar eax, cl; and eax, 1; ret; 
0x000000000005ef53: add eax, edx; pop rbx; ret; 
0x000000000005ef72: add eax, edx; ret; 
0x0000000000021add: add eax, esi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000003fcd6: add ebp, dword ptr [rdi]; jne 0x3fcc8; lea rax, [rbx + rdx]; pop rbx; ret; 
0x000000000004f179: add ebp, eax; int1; ret; 
0x0000000000052abb: add ebp, eax; outsd dx, dword ptr [rsi]; and eax, 0x8948fffc; ret 0x8548; 
0x000000000001e2b8: add ebx, ebp; pop rbx; mov eax, r11d; pop rbp; pop r12; ret; 
0x000000000007b1a9: add ebx, ecx; stc; ret; 
0x0000000000070b9e: add ecx, 6; mov byte ptr [r9], 0; ret; 
0x00000000000456a2: add ecx, dword ptr [rax + 0x39]; ret 0x820f; 
0x00000000000721e6: add ecx, dword ptr [rax + 0x63]; ret 0xfac1; 
0x0000000000068f1e: add ecx, dword ptr [rax + 1]; ret; 
0x0000000000016303: add ecx, dword ptr [rax - 0x77]; and al, 0x18; mov eax, 0x81; syscall; 
0x00000000000786b1: add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000002c213: add ecx, dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000001aa7a: add ecx, dword ptr [rax - 0x7d]; ret 0x8d01; 
0x000000000004feed: add ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000000278ac: add ecx, dword ptr [rcx - 0x7f]; ret; 
0x0000000000071b67: add ecx, dword ptr [rdi]; xchg eax, esp; ret 0xe9c1; 
0x0000000000061a5c: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx + 4], eax; fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x0000000000061aa1: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000619dd: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061add: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061afd: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a81: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061abd: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a39: add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000003e5d9: add ecx, dword ptr [rdx - 1]; jmp qword ptr [rsi + 0xf]; 
0x0000000000070bb5: add ecx, eax; mov byte ptr [r9], 0; ret; 
0x0000000000076213: add edi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x0000000000015bcf: add edi, 0x28; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000003d0d8: add edi, 0x3ff; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d140: add edi, 0x7c8; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d192: add edi, 0x7f; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000003d1e8: add edi, 0xe5; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x0000000000059c69: add edi, 1; cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x0000000000068941: add edi, 1; mov byte ptr [rdi - 1], al; cmp eax, r9d; jne 0x68930; mov rax, rdi; ret; 
0x0000000000068a11: add edi, 1; mov rax, rdi; ret; 
0x000000000001e060: add edi, 1; xor eax, eax; and edi, 0x7f; cmp edi, 0x20; seta al; ret; 
0x0000000000070bac: add edi, 2; xor eax, eax; mov qword ptr [r8], rdi; add r9, rax; mov byte ptr [r9], 0; ret; 
0x00000000000684be: add edi, dword ptr [rax + 1]; ret; 
0x000000000005cdb4: add edi, dword ptr [rax - 1]; pop rbx; ret; 
0x0000000000076566: add edi, dword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x000000000001eaac: add edi, eax; cmp byte ptr [r10], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x98490]; syscall; 
0x0000000000043edd: add edi, eax; mov eax, 0xf1; syscall; 
0x0000000000043edd: add edi, eax; mov eax, 0xf1; syscall; test eax, eax; js 0x43eeb; ret; 
0x0000000000043db0: add edi, eax; test sil, 0x40; jne 0x43de0; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004ec03: add edi, ebp; jmp qword ptr [rsi + 0x2e]; 
0x0000000000067afe: add edi, ebp; sub rax, qword ptr [rcx + rdx - 0x10]; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000006ec03: add edi, ebx; jmp qword ptr [rsi + 0x2e]; 
0x0000000000073d0e: add edi, edi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000005ef33: add edx, 1; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000001ed25: add edx, 8; cmp r8, rdx; jne 0x1ed13; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x000000000007647a: add edx, dword ptr [rbx]; call rdx; 
0x0000000000030b70: add edx, edx; movd xmm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000033970: add edx, edx; movd xmm0, eax; je 0x33966; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x000000000002d004: add edx, edx; setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x0000000000042059: add edx, esp; std; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x000000000006fc8a: add esi, 0x81; syscall; 
0x00000000000690e5: add esi, 1; add rax, 1; mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x000000000004b5f2: add esi, dword ptr [rax + rcx - 0x7c]; ror byte ptr [rdi], 0x85; ret; 
0x000000000002fe07: add esi, dword ptr [rbp + 8]; movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000002ffd1: add esi, dword ptr [rbp + 8]; movss xmm1, dword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000725e0: add esi, dword ptr [rbp + rcx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000002e6cc: add esi, ebx; ret; 
0x000000000007b357: add esi, ebx; stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000006bdf0: add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000007627e: add esp, 0x100; pop rbx; ret; 
0x000000000007656e: add esp, 0x100; ret; 
0x0000000000076d3d: add esp, 0x108; pop rbx; pop rbp; ret; 
0x00000000000406ae: add esp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000002b312: add esp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000042e56: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x000000000001d978: add esp, 0x10; pop rbp; ret; 
0x000000000004e30b: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017b8f: add esp, 0x10; pop rbx; ret; 
0x000000000007b05b: add esp, 0x10; ret; 
0x0000000000060108: add esp, 0x10; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000070240: add esp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000004968f: add esp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000066be6: add esp, 0x118; ret; 
0x0000000000043aa7: add esp, 0x128; ret; 
0x00000000000404a5: add esp, 0x130; pop rbp; ret; 
0x000000000005b459: add esp, 0x148; ret; 
0x0000000000075524: add esp, 0x158; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001ed35: add esp, 0x158; ret; 
0x0000000000050a6d: add esp, 0x160; pop r12; ret; 
0x0000000000022bb8: add esp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a4b2: add esp, 0x18; cvtsi2ss xmm0, eax; ret; 
0x000000000003a499: add esp, 0x18; divss xmm0, xmm1; ret; 
0x00000000000324c1: add esp, 0x18; faddp st(2); fdivrp st(1); fmul st(1); faddp st(1); ret; 
0x000000000003243b: add esp, 0x18; fdivp st(1); faddp st(1); ret; 
0x000000000003a4fe: add esp, 0x18; fld1; fchs; fdivrp st(1); ret; 
0x0000000000017ace: add esp, 0x18; fxch st(1); ret; 
0x0000000000042167: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000051042: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000072a04: add esp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002fb51: add esp, 0x18; movapd xmm0, xmm2; pop rbx; pop rbp; ret; 
0x0000000000016aed: add esp, 0x18; movapd xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000018317: add esp, 0x18; movq rax, xmm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x00000000000234c4: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000000349fe: add esp, 0x18; mulss xmm0, xmm2; ret; 
0x0000000000072b87: add esp, 0x18; pop rbx; mov rax, r12; pop r12; ret; 
0x000000000003568a: add esp, 0x18; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000024752: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002964d: add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000016e7f: add esp, 0x18; ret; 
0x0000000000060d04: add esp, 0x18; sub eax, 1; ret; 
0x0000000000075935: add esp, 0x190; jmp rax; 
0x00000000000405eb: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074a5c: add esp, 0x198; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000738d2: add esp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x00000000000670ed: add esp, 0x208; ret; 
0x00000000000321ab: add esp, 0x20; add rsp, 0x60; pop rbx; fdivp st(1); ret; 
0x00000000000427f0: add esp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000041284: add esp, 0x20; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c77f: add esp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000002f7ff: add esp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000018ee5: add esp, 0x20; movapd xmm0, xmm2; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000001738e: add esp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000017347: add esp, 0x20; movapd xmm1, xmm0; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000018760: add esp, 0x20; movapd xmm4, xmm0; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x000000000002f93f: add esp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000001870a: add esp, 0x20; movq xmm1, rbx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000019458: add esp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x000000000003b00b: add esp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x000000000001742f: add esp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000031b7c: add esp, 0x20; pop rbx; mulss xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000029ac8: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000016910: add esp, 0x20; pop rbx; ret; 
0x0000000000031d1d: add esp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000072049: add esp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000000019b6c: add esp, 0x210; pop rbx; ret; 
0x000000000004710b: add esp, 0x238; pop rbx; pop r12; ret; 
0x000000000005b7ab: add esp, 0x248; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000325cb: add esp, 0x28; faddp st(1); fld1; fsubrp st(1); ret; 
0x0000000000016d6f: add esp, 0x28; fchs; fxch st(1); ret; 
0x000000000002f339: add esp, 0x28; fldln2; faddp st(1); ret; 
0x000000000003eebc: add esp, 0x28; fmulp st(1); ret; 
0x000000000003262c: add esp, 0x28; fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x0000000000032656: add esp, 0x28; fsubp st(1); ret; 
0x000000000005b09d: add esp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000000436bc: add esp, 0x28; mov rax, -1; pop rbx; pop r12; ret; 
0x000000000006af4f: add esp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000034dff: add esp, 0x28; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000016751: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000003d6b0: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r14; ret; 
0x000000000002e26b: add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000016847: add esp, 0x28; ret; 
0x000000000004ed25: add esp, 0x28; sar eax, 0x1f; ret; 
0x000000000003fa0a: add esp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000003f8f8: add esp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x0000000000067674: add esp, 0x30; lea rax, [rip + 0x4f602]; pop rbx; pop rbp; pop r12; ret; 
0x000000000003e89d: add esp, 0x30; mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000004fcfe: add esp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x0000000000074719: add esp, 0x30; pop rbp; ret; 
0x0000000000016997: add esp, 0x30; pop rbx; fxch st(1); ret; 
0x000000000003152e: add esp, 0x30; pop rbx; mulsd xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x000000000003e000: add esp, 0x30; pop rbx; pop r12; pop r13; fmulp st(1); ret; 
0x000000000003e033: add esp, 0x30; pop rbx; pop r12; pop r13; ret; 
0x0000000000048041: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000000177d6: add esp, 0x30; pop rbx; ret; 
0x00000000000316ce: add esp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000007b155: add esp, 0x30; ret; 
0x0000000000016a0e: add esp, 0x38; fxch st(1); ret; 
0x000000000003703f: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002d389: add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000017f97: add esp, 0x38; ret; 
0x0000000000071fb5: add esp, 0x40; pop rbp; ret; 
0x000000000003d510: add esp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000002fa59: add esp, 0x40; pop rbx; ret; 
0x000000000004c30d: add esp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x0000000000034b4c: add esp, 0x48; fmulp st(1); ret; 
0x00000000000171fa: add esp, 0x48; fxch st(1); ret; 
0x00000000000737fc: add esp, 0x48; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000038dc3: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000016be3: add esp, 0x48; ret; 
0x000000000001faf0: add esp, 0x50; pop rbx; ret; 
0x0000000000016d09: add esp, 0x58; fxch st(1); ret; 
0x000000000001bb8e: add esp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003e92e: add esp, 0x58; pop rbx; pop rbp; ret; 
0x000000000001fbb0: add esp, 0x58; ret; 
0x00000000000321af: add esp, 0x60; pop rbx; fdivp st(1); ret; 
0x0000000000033a8e: add esp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023c8b: add esp, 0x60; pop rbx; ret; 
0x0000000000022faf: add esp, 0x68; pop rbx; pop rbp; ret; 
0x000000000001f9db: add esp, 0x68; ret; 
0x00000000000437bc: add esp, 0x70; pop rbp; ret; 
0x000000000002254c: add esp, 0x850; pop rbx; ret; 
0x000000000005c172: add esp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005b8fb: add esp, 0x90; pop rbx; ret; 
0x000000000006e1cc: add esp, 0x90; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005addb: add esp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000001c917: add esp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000005b26c: add esp, 0x98; pop rbp; pop r12; ret; 
0x000000000004f4bc: add esp, 0x98; pop rbx; pop rbp; ret; 
0x00000000000162b9: add esp, 0x98; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006f56c: add esp, 0xa0; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000007045f: add esp, 0xa0; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000004142e: add esp, 0xa0; pop rbp; ret; 
0x000000000005b37a: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021f18: add esp, 0xa0; pop rbx; ret; 
0x000000000001e69a: add esp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005b2f3: add esp, 0xa8; pop rbp; pop r12; ret; 
0x000000000006c604: add esp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005bdec: add esp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000002246e: add esp, 0xd8; ret; 
0x000000000002318f: add esp, 0xe0; pop rbx; ret; 
0x00000000000680db: add esp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000619a4: add esp, 0xf8; ret; 
0x00000000000199e0: add esp, 8; add eax, 1; cdqe; ret; 
0x000000000003ee02: add esp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a43e: add esp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000003946e: add esp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003948e: add esp, 8; cvttss2si rax, xmm0; ret; 
0x000000000006a44e: add esp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x000000000004f287: add esp, 8; lea rax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x000000000004ace8: add esp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000006e0f5: add esp, 8; mov eax, 0xb; pop rbx; pop rbp; ret; 
0x0000000000050611: add esp, 8; mov eax, 0xc; pop rbx; pop rbp; ret; 
0x0000000000071dea: add esp, 8; mov eax, 0xffffffda; pop rbp; pop r12; ret; 
0x000000000001e5e2: add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000001f67a: add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005d547: add esp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000069353: add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004ad35: add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000022e93: add esp, 8; mov rax, r8; ret; 
0x0000000000071ddc: add esp, 8; mov rsi, r12; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x0000000000016c1e: add esp, 8; movapd xmm2, xmm1; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000002348a: add esp, 8; movzx eax, al; neg eax; ret; 
0x000000000001dcbf: add esp, 8; movzx eax, al; ret; 
0x000000000001fc6c: add esp, 8; neg eax; ret; 
0x0000000000073d9f: add esp, 8; not eax; shr eax, 0x1f; ret; 
0x0000000000078a3b: add esp, 8; pop rbp; pop r12; jmp rax; 
0x000000000005a02b: add esp, 8; pop rbp; pop r12; ret; 
0x000000000006c4c7: add esp, 8; pop rbx; pop r12; pop r13; pop r14; ret; 
0x0000000000036561: add esp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000035370: add esp, 8; pop rbx; pop rbp; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000036e10: add esp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000035be9: add esp, 8; pop rbx; pop rbp; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000006c6b0: add esp, 8; pop rbx; pop rbp; jmp rax; 
0x00000000000364b8: add esp, 8; pop rbx; pop rbp; mulsd xmm0, xmm1; ret; 
0x000000000001eb7f: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001f7de: add esp, 8; pop rbx; pop rbp; ret; 
0x00000000000353ba: add esp, 8; pop rbx; pop rbp; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035c3e: add esp, 8; pop rbx; pop rbp; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000015c85: add esp, 8; ret; 
0x0000000000022ed5: add esp, 8; sar eax, 0x1f; ret; 
0x000000000004ef85: add esp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef55: add esp, 8; shr rax, 0x11; ret; 
0x00000000000167c2: add esp, 8; subsd xmm0, xmm2; ret; 
0x00000000000319d6: add esp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000032006: add esp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001fd3a: add esp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001fce7: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000074df1: add esp, 8; xor r8d, r8d; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000007af01: add esp, dword ptr [rip + 0xc00]; ret; 
0x0000000000069466: add esp, eax; mov rax, r12; pop r12; ret; 
0x0000000000067568: add esp, ebp; mov rsi, r12; call rax; 
0x000000000005ed72: add esp, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000002c831: add esp, esi; cmp byte ptr [rdx], 0; je 0x2c839; hlt; sub rax, rdi; ret; 
0x000000000002abff: add esp, esi; ret; 
0x000000000002c837: add esp, esi; sub rax, rdi; ret; 
0x0000000000039e07: add qword ptr [r8], r8; add bl, dh; divps xmm2, xmmword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x0000000000060bf2: add qword ptr [rax - 0x77], rcx; or eax, 0x536ad; mov byte ptr [rdx], dil; ret; 
0x0000000000060bae: add qword ptr [rax - 0x77], rcx; or eax, 0x536f1; mov byte ptr [rdx], dil; ret; 
0x000000000001f7ba: add qword ptr [rax - 0x77], rcx; pop rsp; ret 0x4808; 
0x000000000001f266: add qword ptr [rax - 0x77], rcx; sbb al, 0xd0; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000006957a: add qword ptr [rax - 0x7d], rcx; ret 0x8401; 
0x000000000005d194: add qword ptr [rdi + 8], rsi; ret; 
0x000000000001e2b7: add r11d, ebp; pop rbx; mov eax, r11d; pop rbp; pop r12; ret; 
0x0000000000067567: add r12, r13; mov rsi, r12; call rax; 
0x0000000000069465: add r12, rax; mov rax, r12; pop r12; ret; 
0x0000000000038026: add r8b, byte ptr [rax]; add byte ptr [rcx - 0x7f], al; cld; ret; 
0x0000000000034d5c: add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c52: add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d00a: add r8d, 2; mov eax, r8d; ret; 
0x0000000000070b9d: add r9, 6; mov byte ptr [r9], 0; ret; 
0x0000000000070bb4: add r9, rax; mov byte ptr [r9], 0; ret; 
0x00000000000760b3: add r9b, byte ptr [r8 - 0x7d]; ret; 
0x000000000001afc6: add r9b, byte ptr [rax - 0x7d]; ret 0x4804; 
0x000000000002c212: add r9d, dword ptr [r8 - 0x77]; ret 0xc148; 
0x000000000005f749: add rax, -0x3776b400; syscall; 
0x000000000001f46d: add rax, 0x34; ret; 
0x000000000005f7db: add rax, 0x48107400; lea edx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f80f: add rax, 0x48147400; lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000047ec4: add rax, 0xa0; ret; 
0x000000000005f7e8: add rax, 0xb60f00; ret; 
0x0000000000069870: add rax, 1; cmp byte ptr [rax], 0; jne 0x69870; sub rax, rdi; ret; 
0x000000000006ae1f: add rax, 1; cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006aeb4: add rax, 1; cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006ae87: add rax, 1; cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x00000000000690e8: add rax, 1; mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x000000000005f18e: add rax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000070b1a: add rax, 1; mov qword ptr [rdi], rax; call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x000000000004efc6: add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x000000000003fa00: add rax, 1; movq xmm0, rax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x0000000000069a05: add rax, 1; test cl, r8b; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000004acdd: add rax, 2; add dword ptr [rip + 0x6c2d1], eax; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000001db0f: add rax, 4; ret; 
0x000000000006a587: add rax, 4; test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000006a693: add rax, 4; test edx, edx; jne 0x6a690; sub rax, rdi; sar rax, 2; ret; 
0x0000000000046a4d: add rax, qword ptr [rax]; mov qword ptr [rbp], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000786af: add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000005cdf7: add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000007af71: add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006b7e8: add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000078a33: add rax, qword ptr [rip + 0x3dec6]; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000007896b: add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x0000000000034c24: add rax, rax; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d2c: add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000001e430: add rax, rax; ret; 
0x000000000002d0cb: add rax, rax; sete r8b; mov eax, r8d; ret; 
0x00000000000696be: add rax, rbp; pop rbp; pop r12; pop r13; ret; 
0x0000000000069ad2: add rax, rbx; pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x00000000000696dc: add rax, rbx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000006905d: add rax, rbx; pop rbx; ret; 
0x0000000000032896: add rax, rdx; movq xmm2, rax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000005ef52: add rax, rdx; pop rbx; ret; 
0x000000000005ef71: add rax, rdx; ret; 
0x0000000000021adc: add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000068f1d: add rcx, qword ptr [rax + 1]; ret; 
0x0000000000061a5b: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx + 4], eax; fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x0000000000061aa0: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000619dc: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061adc: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061afc: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a80: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061abc: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a38: add rcx, qword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000076212: add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x0000000000015bce: add rdi, 0x28; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000059c68: add rdi, 1; cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x0000000000068940: add rdi, 1; mov byte ptr [rdi - 1], al; cmp eax, r9d; jne 0x68930; mov rax, rdi; ret; 
0x0000000000068a10: add rdi, 1; mov rax, rdi; ret; 
0x0000000000070bab: add rdi, 2; xor eax, eax; mov qword ptr [r8], rdi; add r9, rax; mov byte ptr [r9], 0; ret; 
0x0000000000076565: add rdi, qword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000067afd: add rdi, r13; sub rax, qword ptr [rcx + rdx - 0x10]; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000043edc: add rdi, rax; mov eax, 0xf1; syscall; 
0x0000000000043edc: add rdi, rax; mov eax, 0xf1; syscall; test eax, eax; js 0x43eeb; ret; 
0x0000000000043daf: add rdi, rax; test sil, 0x40; jne 0x43de0; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000073d0d: add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000001ed24: add rdx, 8; cmp r8, rdx; jne 0x1ed13; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x0000000000076479: add rdx, qword ptr [rbx]; call rdx; 
0x000000000002d003: add rdx, rdx; setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x000000000006fc89: add rsi, 0x81; syscall; 
0x00000000000690e4: add rsi, 1; add rax, 1; mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x000000000006bdef: add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000007627d: add rsp, 0x100; pop rbx; ret; 
0x000000000007656d: add rsp, 0x100; ret; 
0x0000000000076d3c: add rsp, 0x108; pop rbx; pop rbp; ret; 
0x00000000000406ad: add rsp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000002b311: add rsp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000042e55: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x000000000001d977: add rsp, 0x10; pop rbp; ret; 
0x000000000004e30a: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000017b8e: add rsp, 0x10; pop rbx; ret; 
0x000000000007b05a: add rsp, 0x10; ret; 
0x0000000000060107: add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000007023f: add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x000000000004968e: add rsp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000066be5: add rsp, 0x118; ret; 
0x0000000000043aa6: add rsp, 0x128; ret; 
0x00000000000404a4: add rsp, 0x130; pop rbp; ret; 
0x000000000005b458: add rsp, 0x148; ret; 
0x0000000000075523: add rsp, 0x158; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001ed34: add rsp, 0x158; ret; 
0x0000000000050a6c: add rsp, 0x160; pop r12; ret; 
0x0000000000022bb7: add rsp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a4b1: add rsp, 0x18; cvtsi2ss xmm0, eax; ret; 
0x000000000003a498: add rsp, 0x18; divss xmm0, xmm1; ret; 
0x00000000000324c0: add rsp, 0x18; faddp st(2); fdivrp st(1); fmul st(1); faddp st(1); ret; 
0x000000000003243a: add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x000000000003a4fd: add rsp, 0x18; fld1; fchs; fdivrp st(1); ret; 
0x0000000000017acd: add rsp, 0x18; fxch st(1); ret; 
0x0000000000042166: add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000051041: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000072a03: add rsp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002fb50: add rsp, 0x18; movapd xmm0, xmm2; pop rbx; pop rbp; ret; 
0x0000000000016aec: add rsp, 0x18; movapd xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000018316: add rsp, 0x18; movq rax, xmm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x00000000000234c3: add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000000349fd: add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x0000000000072b86: add rsp, 0x18; pop rbx; mov rax, r12; pop r12; ret; 
0x0000000000035689: add rsp, 0x18; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000024751: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002964c: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000016e7e: add rsp, 0x18; ret; 
0x0000000000060d03: add rsp, 0x18; sub eax, 1; ret; 
0x0000000000075934: add rsp, 0x190; jmp rax; 
0x00000000000405ea: add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074a5b: add rsp, 0x198; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000738d1: add rsp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x00000000000670ec: add rsp, 0x208; ret; 
0x00000000000321aa: add rsp, 0x20; add rsp, 0x60; pop rbx; fdivp st(1); ret; 
0x00000000000427ef: add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000041283: add rsp, 0x20; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c77e: add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000002f7fe: add rsp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000018ee4: add rsp, 0x20; movapd xmm0, xmm2; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000001738d: add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000017346: add rsp, 0x20; movapd xmm1, xmm0; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x000000000001875f: add rsp, 0x20; movapd xmm4, xmm0; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x000000000002f93e: add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x0000000000018709: add rsp, 0x20; movq xmm1, rbx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000019457: add rsp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x000000000003b00a: add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x000000000001742e: add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000031b7b: add rsp, 0x20; pop rbx; mulss xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000029ac7: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000001690f: add rsp, 0x20; pop rbx; ret; 
0x0000000000031d1c: add rsp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000072048: add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000000019b6b: add rsp, 0x210; pop rbx; ret; 
0x000000000004710a: add rsp, 0x238; pop rbx; pop r12; ret; 
0x000000000005b7aa: add rsp, 0x248; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000325ca: add rsp, 0x28; faddp st(1); fld1; fsubrp st(1); ret; 
0x0000000000016d6e: add rsp, 0x28; fchs; fxch st(1); ret; 
0x000000000002f338: add rsp, 0x28; fldln2; faddp st(1); ret; 
0x000000000003eebb: add rsp, 0x28; fmulp st(1); ret; 
0x000000000003262b: add rsp, 0x28; fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x0000000000032655: add rsp, 0x28; fsubp st(1); ret; 
0x000000000005b09c: add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000000436bb: add rsp, 0x28; mov rax, -1; pop rbx; pop r12; ret; 
0x000000000006af4e: add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000034dfe: add rsp, 0x28; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000016750: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000003d6af: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r14; ret; 
0x000000000002e26a: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000016846: add rsp, 0x28; ret; 
0x000000000004ed24: add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000003fa09: add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000003f8f7: add rsp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x0000000000067673: add rsp, 0x30; lea rax, [rip + 0x4f602]; pop rbx; pop rbp; pop r12; ret; 
0x000000000003e89c: add rsp, 0x30; mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000004fcfd: add rsp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x0000000000074718: add rsp, 0x30; pop rbp; ret; 
0x0000000000016996: add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x000000000003152d: add rsp, 0x30; pop rbx; mulsd xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x000000000003dfff: add rsp, 0x30; pop rbx; pop r12; pop r13; fmulp st(1); ret; 
0x000000000003e032: add rsp, 0x30; pop rbx; pop r12; pop r13; ret; 
0x0000000000048040: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000000177d5: add rsp, 0x30; pop rbx; ret; 
0x00000000000316cd: add rsp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000007b154: add rsp, 0x30; ret; 
0x0000000000016a0d: add rsp, 0x38; fxch st(1); ret; 
0x000000000003703e: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002d388: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000017f96: add rsp, 0x38; ret; 
0x0000000000071fb4: add rsp, 0x40; pop rbp; ret; 
0x000000000003d50f: add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000002fa58: add rsp, 0x40; pop rbx; ret; 
0x000000000004c30c: add rsp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x0000000000034b4b: add rsp, 0x48; fmulp st(1); ret; 
0x00000000000171f9: add rsp, 0x48; fxch st(1); ret; 
0x00000000000737fb: add rsp, 0x48; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000038dc2: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000016be2: add rsp, 0x48; ret; 
0x000000000001faef: add rsp, 0x50; pop rbx; ret; 
0x0000000000016d08: add rsp, 0x58; fxch st(1); ret; 
0x000000000001bb8d: add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003e92d: add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000001fbaf: add rsp, 0x58; ret; 
0x00000000000321ae: add rsp, 0x60; pop rbx; fdivp st(1); ret; 
0x0000000000033a8d: add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000023c8a: add rsp, 0x60; pop rbx; ret; 
0x0000000000022fae: add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000001f9da: add rsp, 0x68; ret; 
0x00000000000437bb: add rsp, 0x70; pop rbp; ret; 
0x000000000002254b: add rsp, 0x850; pop rbx; ret; 
0x000000000005c171: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005b8fa: add rsp, 0x90; pop rbx; ret; 
0x000000000006e1cb: add rsp, 0x90; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000005adda: add rsp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000001c916: add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000005b26b: add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000004f4bb: add rsp, 0x98; pop rbx; pop rbp; ret; 
0x00000000000162b8: add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006f56b: add rsp, 0xa0; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000007045e: add rsp, 0xa0; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000004142d: add rsp, 0xa0; pop rbp; ret; 
0x000000000005b379: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000021f17: add rsp, 0xa0; pop rbx; ret; 
0x000000000001e699: add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005b2f2: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000006c603: add rsp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005bdeb: add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000002246d: add rsp, 0xd8; ret; 
0x000000000002318e: add rsp, 0xe0; pop rbx; ret; 
0x00000000000680da: add rsp, 0xf8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000619a3: add rsp, 0xf8; ret; 
0x00000000000199df: add rsp, 8; add eax, 1; cdqe; ret; 
0x000000000003ee01: add rsp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a43d: add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000003946d: add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003948d: add rsp, 8; cvttss2si rax, xmm0; ret; 
0x000000000006a44d: add rsp, 8; lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x000000000004f286: add rsp, 8; lea rax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x000000000004ace7: add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x000000000006e0f4: add rsp, 8; mov eax, 0xb; pop rbx; pop rbp; ret; 
0x0000000000050610: add rsp, 8; mov eax, 0xc; pop rbx; pop rbp; ret; 
0x0000000000071de9: add rsp, 8; mov eax, 0xffffffda; pop rbp; pop r12; ret; 
0x000000000001e5e1: add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000001f679: add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005d546: add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000069352: add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004ad34: add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000022e92: add rsp, 8; mov rax, r8; ret; 
0x0000000000071ddb: add rsp, 8; mov rsi, r12; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x0000000000016c1d: add rsp, 8; movapd xmm2, xmm1; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000023489: add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000001dcbe: add rsp, 8; movzx eax, al; ret; 
0x000000000001fc6b: add rsp, 8; neg eax; ret; 
0x0000000000073d9e: add rsp, 8; not eax; shr eax, 0x1f; ret; 
0x0000000000078a3a: add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000005a02a: add rsp, 8; pop rbp; pop r12; ret; 
0x000000000006c4c6: add rsp, 8; pop rbx; pop r12; pop r13; pop r14; ret; 
0x0000000000036560: add rsp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x000000000003536f: add rsp, 8; pop rbx; pop rbp; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000036e0f: add rsp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000035be8: add rsp, 8; pop rbx; pop rbp; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000006c6af: add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x00000000000364b7: add rsp, 8; pop rbx; pop rbp; mulsd xmm0, xmm1; ret; 
0x000000000001eb7e: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001f7dd: add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000353b9: add rsp, 8; pop rbx; pop rbp; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035c3d: add rsp, 8; pop rbx; pop rbp; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000015c84: add rsp, 8; ret; 
0x0000000000022ed4: add rsp, 8; sar eax, 0x1f; ret; 
0x000000000004ef84: add rsp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef54: add rsp, 8; shr rax, 0x11; ret; 
0x00000000000167c1: add rsp, 8; subsd xmm0, xmm2; ret; 
0x00000000000319d5: add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000032005: add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000001fd39: add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001fce6: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000074df0: add rsp, 8; xor r8d, r8d; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000047176: add sil, al; add eax, dword ptr [rax]; xor eax, eax; pop rbx; ret; 
0x0000000000045eee: add sil, sil; ret; 
0x000000000002ee6f: addps xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000032ed1: addps xmm0, xmm0; ret; 
0x0000000000034941: addps xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003a373: addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a110: addps xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x000000000003960f: addps xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x000000000002f03b: addps xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x00000000000327ec: addps xmm0, xmm1; comisd xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x000000000002ceb1: addps xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030aad: addps xmm0, xmm1; ja 0x30ae0; ret; 
0x00000000000338ad: addps xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000031756: addps xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000003a227: addps xmm0, xmm1; mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000031d9e: addps xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000002f6cc: addps xmm0, xmm1; ret; 
0x000000000003a108: addps xmm0, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x0000000000039960: addps xmm0, xmm2; addsd xmm0, xmm5; addsd xmm0, xmm1; ret; 
0x000000000002ce51: addps xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003a377: addps xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003afb2: addps xmm0, xmm2; movss dword ptr [rsp + 0x1c], xmm0; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003abed: addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003105a: addps xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000003de77: addps xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000007a9c5: addps xmm0, xmm2; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000031118: addps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x000000000003df47: addps xmm0, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000033587: addps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x000000000003f4f1: addps xmm0, xmm2; pop rbx; pop rbp; pop r12; ret; 
0x000000000002ea59: addps xmm0, xmm2; ret; 
0x000000000003a10c: addps xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x000000000003960b: addps xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x0000000000039d41: addps xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x00000000000331aa: addps xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000002e799: addps xmm0, xmm4; ret; 
0x0000000000039964: addps xmm0, xmm5; addsd xmm0, xmm1; ret; 
0x0000000000039d45: addps xmm0, xmm5; ret; 
0x000000000002ce55: addps xmm0, xmm6; ret; 
0x000000000003cc7f: addps xmm0, xmmword ptr [rip + 0x7117a]; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cd2e: addps xmm0, xmmword ptr [rip + 0x7278b]; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x0000000000032d91: addps xmm0, xmmword ptr [rip + 0x7b068]; ret; 
0x0000000000032871: addps xmm0, xmmword ptr [rip + 0x7b588]; ret; 
0x0000000000030ffc: addps xmm0, xmmword ptr [rip + 0x7d305]; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030ae1: addps xmm0, xmmword ptr [rip + 0x7d318]; ret; 
0x000000000002f675: addps xmm0, xmmword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002f439: addps xmm0, xmmword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ee99: addps xmm0, xmmword ptr [rip + 0x7ef78]; ret; 
0x000000000002eddf: addps xmm0, xmmword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000002f1a0: addps xmm0, xmmword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x000000000002ed69: addps xmm0, xmmword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000310ca: addps xmm0, xmmword ptr [rip + 0x7f977]; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x000000000002f26e: addps xmm0, xmmword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x000000000002f0d1: addps xmm0, xmmword ptr [rip + 0x8194c]; ret; 
0x000000000002ef8b: addps xmm0, xmmword ptr [rip + 0x81a9a]; ret; 
0x0000000000036f8b: addps xmm0, xmmword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x00000000000366e7: addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002ffed: addps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000032e7b: addps xmm1, xmm0; pxor xmm0, xmm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000031939: addps xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000319a9: addps xmm1, xmm0; subsd xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000039f17: addps xmm1, xmm0; subss xmm1, xmm5; addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000031f81: addps xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031fe1: addps xmm1, xmm0; subss xmm3, xmm1; movaps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000003108e: addps xmm1, xmm1; divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003114d: addps xmm1, xmm1; divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002f037: addps xmm1, xmm2; addss xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000039b5b: addps xmm1, xmm2; addss xmm0, xmm1; ret; 
0x0000000000032dbb: addps xmm1, xmm2; movapd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000031787: addps xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000031dcf: addps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003ae5b: addps xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000328a3: addps xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000039f1f: addps xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x000000000003546b: addps xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035ce9: addps xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x000000000003b8de: addps xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ea4d: addps xmm1, xmm4; mulsd xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000039734: addps xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000039f16: addps xmm1, xmm8; subss xmm1, xmm5; addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x000000000002fe25: addps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000030874: addps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000039738: addps xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000031987: addps xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031fc7: addps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003aafc: addps xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003369d: addps xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x000000000003ab51: addps xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000039b57: addps xmm2, xmm3; addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x00000000000335d2: addps xmm2, xmm3; subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x00000000000336a1: addps xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000033685: addps xmm2, xmm4; movd xmm4, eax; movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x000000000003180e: addps xmm2, xmmword ptr [rip + 0x7c5eb]; divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000031e5d: addps xmm2, xmmword ptr [rip + 0x7d65c]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002f6bc: addps xmm2, xmmword ptr [rip + 0x7fdfd]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000030754: addps xmm3, xmm2; subsd xmm1, xmm0; divsd xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000033335: addps xmm4, xmm4; addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x0000000000033339: addps xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003331e: addps xmm4, xmm5; movq xmm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000039730: addps xmm5, xmm6; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003cc7e: addsd xmm0, qword ptr [rip + 0x7117a]; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x0000000000032d90: addsd xmm0, qword ptr [rip + 0x7b068]; ret; 
0x0000000000032870: addsd xmm0, qword ptr [rip + 0x7b588]; ret; 
0x0000000000030ffb: addsd xmm0, qword ptr [rip + 0x7d305]; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030ae0: addsd xmm0, qword ptr [rip + 0x7d318]; ret; 
0x000000000002f674: addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002f438: addsd xmm0, qword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ee98: addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002edde: addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000002f19f: addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x000000000002ed68: addsd xmm0, qword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000366e6: addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000002ee6e: addsd xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000034940: addsd xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003a372: addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a10f: addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x000000000003960e: addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x00000000000327eb: addsd xmm0, xmm1; comisd xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x000000000002ceb0: addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030aac: addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x00000000000338ac: addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000031755: addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000003a226: addsd xmm0, xmm1; mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000030763: addsd xmm0, xmm1; ret; 
0x000000000003a107: addsd xmm0, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x000000000003995f: addsd xmm0, xmm2; addsd xmm0, xmm5; addsd xmm0, xmm1; ret; 
0x000000000002ce50: addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003a376: addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000031059: addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000003de76: addsd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000007a9c4: addsd xmm0, xmm2; mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000003f4f0: addsd xmm0, xmm2; pop rbx; pop rbp; pop r12; ret; 
0x000000000002ea58: addsd xmm0, xmm2; ret; 
0x000000000003a10b: addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x000000000003960a: addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x0000000000039d40: addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x00000000000331a9: addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000002e798: addsd xmm0, xmm4; ret; 
0x0000000000039963: addsd xmm0, xmm5; addsd xmm0, xmm1; ret; 
0x0000000000039d44: addsd xmm0, xmm5; ret; 
0x000000000002ce54: addsd xmm0, xmm6; ret; 
0x0000000000032e7a: addsd xmm1, xmm0; pxor xmm0, xmm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000031938: addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000319a8: addsd xmm1, xmm0; subsd xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x000000000003108d: addsd xmm1, xmm1; divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000032dba: addsd xmm1, xmm2; movapd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000031786: addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000003ae5a: addsd xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x00000000000328a2: addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003546a: addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x000000000003b8dd: addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002ea4c: addsd xmm1, xmm4; mulsd xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000039733: addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003180d: addsd xmm2, qword ptr [rip + 0x7c5eb]; divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x000000000002fe24: addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000039737: addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000031986: addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003aafb: addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003ab50: addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000030753: addsd xmm3, xmm2; subsd xmm1, xmm0; divsd xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000033334: addsd xmm4, xmm4; addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x0000000000033338: addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003331d: addsd xmm4, xmm5; movq xmm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000003972f: addsd xmm5, xmm6; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x00000000000310c8: addss xmm0, dword ptr [eip + 0x7f977]; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x000000000003cd2d: addss xmm0, dword ptr [rip + 0x7278b]; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x00000000000310c9: addss xmm0, dword ptr [rip + 0x7f977]; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x000000000002f26d: addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x000000000002f0d0: addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002ef8a: addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x0000000000036f8a: addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000002f03e: addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000032ed0: addss xmm0, xmm0; ret; 
0x0000000000034a10: addss xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000002f03a: addss xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000031d9d: addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000002f6cb: addss xmm0, xmm1; ret; 
0x000000000003afb1: addss xmm0, xmm2; movss dword ptr [rsp + 0x1c], xmm0; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003abec: addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000031117: addss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x000000000003df46: addss xmm0, xmm2; mulss xmm0, xmm1; ret; 
0x0000000000033586: addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000031154: addss xmm0, xmm2; ret; 
0x0000000000039f25: addss xmm0, xmm6; ret; 
0x000000000002ffec: addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000031f80: addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031fe0: addss xmm1, xmm0; subss xmm3, xmm1; movaps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000003114c: addss xmm1, xmm1; divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002f036: addss xmm1, xmm2; addss xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000039b5a: addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x0000000000031dce: addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000039f1e: addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000035ce8: addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000039f15: addss xmm1, xmm8; subss xmm1, xmm5; addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000031e5c: addss xmm2, dword ptr [rip + 0x7d65c]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002f6bb: addss xmm2, dword ptr [rip + 0x7fdfd]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000030873: addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031fc6: addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003369c: addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000039b56: addss xmm2, xmm3; addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x00000000000335d1: addss xmm2, xmm3; subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x00000000000336a0: addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000033684: addss xmm2, xmm4; movd xmm4, eax; movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000020802: and ah, bl; ret 0xe889; 
0x000000000005ac0c: and al, 0; add byte ptr [rax], al; syscall; 
0x0000000000073caf: and al, 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000006e625: and al, 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005f049: and al, 0; mov rax, qword ptr [rax + 0xd8]; test rax, rax; jne 0x5f040; ret; 
0x000000000006f65b: and al, 0; ret; 
0x0000000000016fc0: and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x0000000000034749: and al, 0x10; add rsp, 0x28; ret; 
0x0000000000017d83: and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f94: and al, 0x10; add rsp, 0x38; ret; 
0x00000000000171f7: and al, 0x10; add rsp, 0x48; fxch st(1); ret; 
0x0000000000016be0: and al, 0x10; add rsp, 0x48; ret; 
0x0000000000052224: and al, 0x10; and ebx, 1; mov rdi, rbp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000067b12: and al, 0x10; call rax; 
0x000000000003a886: and al, 0x10; faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x0000000000034ba2: and al, 0x10; fcmove st(0), st(1); fstp st(1); add rsp, 0x48; ret; 
0x00000000000337d3: and al, 0x10; fcomi st(1); jbe 0x337e0; fsubrp st(1); add rsp, 8; ret; 
0x00000000000171f3: and al, 0x10; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x00000000000311de: and al, 0x10; fld1; add rsp, 0x28; ret; 
0x00000000000394cc: and al, 0x10; fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000016fb6: and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017f8a: and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000073a17: and al, 0x10; mov dword ptr [rsp + 0x18], edx; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x000000000004148c: and al, 0x10; mov eax, 0x10; syscall; 
0x000000000006ec69: and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000005b5c6: and al, 0x10; mov eax, 0x81; syscall; 
0x0000000000023b5b: and al, 0x10; mov eax, 0x9d; syscall; 
0x000000000007b3ef: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3ef: and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x00000000000197aa: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d77: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000016bd4: and al, 0x10; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000034b47: and al, 0x10; pop rax; pop rdx; add rsp, 0x48; fmulp st(1); ret; 
0x000000000003a8f2: and al, 0x10; pop rbx; faddp st(2); fxch st(1); fstp xword ptr [rdi]; ret; 
0x000000000003a91e: and al, 0x10; pop rbx; fstp xword ptr [rdi]; ret; 
0x00000000000340e7: and al, 0x10; pop rbx; ret; 
0x000000000002e707: and al, 0x10; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000004bc51: and al, 0x10; test eax, eax; je 0x4bc60; add rsp, 0x28; ret; 
0x00000000000337a8: and al, 0x10; test eax, eax; jne 0x337b8; add rsp, 8; ret; 
0x00000000000162ff: and al, 0x14; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000016fba: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d7d: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f8e: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000016bda: and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x0000000000023755: and al, 0x18; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x000000000003ae62: and al, 0x18; add rsp, 0x20; pop rbx; ret; 
0x00000000000177d3: and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x0000000000034745: and al, 0x18; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000007afb1: and al, 0x18; fpatan; ret; 
0x000000000005c379: and al, 0x18; mov eax, 0x105; mov rsi, r9; syscall; 
0x0000000000016307: and al, 0x18; mov eax, 0x81; syscall; 
0x0000000000060820: and al, 0x18; mov rax, rdx; syscall; 
0x00000000000177c7: and al, 0x18; movss dword ptr [rsp + 0x1c], xmm0; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x0000000000073a1b: and al, 0x18; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000017e86: and al, 0x18; ret; 
0x000000000003478d: and al, 0x18; sub dword ptr [rdi], 0x78; pop rax; pop rdx; add rsp, 0x28; ret; 
0x0000000000067ac3: and al, 0x18; sub r15, qword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000041259: and al, 0x18; xor eax, eax; mov eax, 0x12e; syscall; 
0x0000000000055531: and al, 0x1c; add dword ptr [rbp - 0x7b], eax; in al, 0xf; xchg eax, ebp; ret 0x45c7; 
0x000000000003afb9: and al, 0x1c; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000502d1: and al, 0x1c; and eax, 0xfffffffe; mov rsi, r13; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000003a51e: and al, 0x1c; fild dword ptr [rsp + 0x1c]; pop rax; pop rdx; add rsp, 0x18; ret; 
0x000000000003260b: and al, 0x1c; fld1; fdivrp st(2); faddp st(1); add rsp, 0x28; ret; 
0x000000000006082a: and al, 0x1c; mov rax, rdx; syscall; 
0x00000000000177cd: and al, 0x1c; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000310d5: and al, 0x1c; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x000000000003a522: and al, 0x1c; pop rax; pop rdx; add rsp, 0x18; ret; 
0x0000000000050074: and al, 0x1c; test eax, eax; jne 0x50112; mov eax, 0x66; syscall; 
0x00000000000502aa: and al, 0x1c; test eax, eax; js 0x5010f; mov rax, r10; syscall; 
0x000000000005023f: and al, 0x1c; test eax, eax; js 0x50112; mov rax, r10; syscall; 
0x00000000000394d0: and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000032438: and al, 0x20; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x00000000000321a8: and al, 0x20; add rsp, 0x20; add rsp, 0x60; pop rbx; fdivp st(1); ret; 
0x00000000000190fd: and al, 0x20; add rsp, 0x38; ret; 
0x00000000000337f2: and al, 0x20; add rsp, 8; ret; 
0x000000000003240a: and al, 0x20; fmulp st(1); faddp st(1); fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x0000000000073b6b: and al, 0x20; mov eax, 0xde; syscall; 
0x000000000005afaa: and al, 0x20; mov eax, 0xe; syscall; 
0x0000000000041487: and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b56: and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x000000000007391e: and al, 0x20; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000001f54b: and al, 0x20; mov rdi, r8; syscall; 
0x00000000000190f1: and al, 0x20; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000003409c: and al, 0x20; pop rbx; ret; 
0x0000000000023c58: and al, 0x20; xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000003fb91: and al, 0x21; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x00000000000190f7: and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000073923: and al, 0x28; call rax; 
0x00000000000745f2: and al, 0x28; lea rsi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x00000000000746b8: and al, 0x28; mov eax, 0x51; syscall; 
0x0000000000074613: and al, 0x28; mov eax, 3; syscall; 
0x0000000000073afc: and al, 0x28; mov qword ptr [rsp + 0x28], rax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x0000000000073b01: and al, 0x28; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000004fcd5: and al, 0x28; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9ee: and al, 0x28; xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074755: and al, 0x28; xor eax, eax; mov eax, 0x5d; syscall; 
0x00000000000745de: and al, 0x2c; mov r8d, eax; mov eax, 3; syscall; 
0x000000000003ac2d: and al, 0x30; fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x000000000003475e: and al, 0x30; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x0000000000070430: and al, 0x30; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x0000000000074222: and al, 0x30; mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x000000000006c4e7: and al, 0x30; mov rsi, r14; syscall; 
0x0000000000041ad5: and al, 0x38; call rax; 
0x0000000000075620: and al, 0x38; mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x000000000003ad08: and al, 0x40; add rsp, 0x28; ret; 
0x00000000000180b0: and al, 0x40; add rsp, 0x38; ret; 
0x000000000003ac31: and al, 0x40; faddp st(1); add rsp, 0x28; ret; 
0x0000000000018402: and al, 0x40; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x0000000000015b57: and al, 0x40; mov dword ptr [rsp + 0x54], eax; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000001a3e4: and al, 0x42; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 4; add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x0000000000041acb: and al, 0x44; mov edx, ebp; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x0000000000017bc6: and al, 0x48; add esp, 0x10; pop rbx; ret; 
0x0000000000018375: and al, 0x48; add esp, 0x18; ret; 
0x0000000000074a5a: and al, 0x48; add esp, 0x198; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000175a7: and al, 0x48; add esp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x000000000001690e: and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x000000000003eeba: and al, 0x48; add esp, 0x28; fmulp st(1); ret; 
0x000000000003262a: and al, 0x48; add esp, 0x28; fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x0000000000032654: and al, 0x48; add esp, 0x28; fsubp st(1); ret; 
0x0000000000016845: and al, 0x48; add esp, 0x28; ret; 
0x000000000004803f: and al, 0x48; add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022a9e: and al, 0x48; add esp, 0x38; ret; 
0x000000000007b21f: and al, 0x48; mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x0000000000015b60: and al, 0x48; mov dword ptr [rsp + 0x58], eax; mov eax, 0x81; syscall; 
0x00000000000446ce: and al, 0x48; mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000006ce27: and al, 0x48; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003e17f: and al, 0x48; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e8a3: and al, 0x48; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000074227: and al, 0x48; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000075625: and al, 0x48; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x0000000000045acf: and al, 0x49; lea edx, [rsi + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x0000000000070112: and al, 0x4c; lea esp, [rip + 0x462a6]; call rax; 
0x000000000005020b: and al, 0x4c; mov eax, ebp; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000006ffaa: and al, 0x4c; mov edi, esp; call rax; 
0x0000000000018038: and al, 0x4f; or dword ptr [rax], eax; ret; 
0x0000000000018406: and al, 0x50; add rsp, 0x38; fxch st(1); ret; 
0x000000000006d87e: and al, 0x50; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x00000000000589c0: and al, 0x54; add dword ptr [rdi], ecx; test dword ptr [rdi], ecx; or al, byte ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000006d883: and al, 0x54; mov eax, 0x90; syscall; 
0x0000000000015b5b: and al, 0x54; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x0000000000015b64: and al, 0x58; mov eax, 0x81; syscall; 
0x000000000007aefd: and al, 0x58; shr eax, 3; and eax, 0xc00; ret; 
0x000000000007aef6: and al, 0x59; ret; 
0x00000000000447c3: and al, 0x5b; mov rax, rdx; pop rbp; pop r12; ret; 
0x00000000000224a1: and al, 0x5b; pop rbp; pop r12; ret; 
0x000000000007af44: and al, 0x5e; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000007932c: and al, 0x68; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000050b13: and al, 0x70; add al, byte ptr [rax]; add al, ch; ret; 
0x000000000006db11: and al, 0x70; mov eax, 0xe; syscall; 
0x000000000005ec41: and al, 0x78; and ebx, 0xfff7ff3f; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000006ec23: and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000004ea33: and al, 0x80; add byte ptr [rax], al; add al, ch; ret; 
0x0000000000043ce3: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000005588e: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000033ede: and al, 0x80; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xf1df; 
0x000000000003bf2a: and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x0000000000069454: and al, 0x84; sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x0000000000077043: and al, 0x86; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000005818a: and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000016905: and al, 0x89; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001683c: and al, 0x89; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000001bd18: and al, 0x89; ret 0x8b41; 
0x000000000005042b: and al, 0x89; ret; 
0x0000000000045e81: and al, 0x8b; or byte ptr [rcx - 0x8f7dbbc], cl; ret; 
0x000000000001d63e: and al, 0x8f; add dword ptr [rax], eax; add byte ptr [rcx - 0x3a], al; push rsi; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000007a0d3: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000055178: and al, 0x90; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x00000000000703d3: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000059292: and al, 0x98; add byte ptr [rax], al; add byte ptr [rbx + 0x31e8f7e2], al; call 0x634e92a0; ret; 
0x000000000007ad5a: and al, 0x98; ret; 
0x0000000000070032: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000025c58: and al, 0xa4; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x6be8; 
0x0000000000033d44: and al, 0xb8; add byte ptr [rax], al; add al, ch; ret 0x6e; 
0x0000000000033d3d: and al, 0xb8; add byte ptr [rax], al; add bh, bh; mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x0000000000076273: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x2374; 
0x000000000004302c: and al, 0xc8; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; ret 2; 
0x000000000003aa14: and al, 0xc; add rsp, 0x10; pop rbx; ret; 
0x00000000000349fb: and al, 0xc; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x0000000000068107: and al, 0xc; add rsp, 0x18; ret; 
0x000000000003af21: and al, 0xc; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b008: and al, 0xc; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x0000000000060cfc: and al, 0xc; call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x000000000006f2c6: and al, 0xc; call 0x6f660; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000060cf7: and al, 0xc; lea rdi, [rsp + 0xc]; call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x000000000006f539: and al, 0xc; mov eax, 0x8e; syscall; 
0x0000000000016cb0: and al, 0xc; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000068101: and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000003af1b: and al, 0xc; movss xmm1, dword ptr [rsp + 0xc]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b002: and al, 0xc; movss xmm1, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x00000000000745f7: and al, 0xc; xor eax, eax; mov edx, 4; syscall; 
0x000000000005571e: and al, 0xd0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000019c00: and al, 0xd0; add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1e0], eax; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000077933: and al, 0xd8; add byte ptr [rax], al; add al, ch; ret; 
0x000000000003cdd3: and al, 0xd8; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000003cdcb: and al, 0xd8; mov dword ptr [rsp - 0x20], edx; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000007b10d: and al, 0xd9; ret 0xc9d8; 
0x0000000000020883: and al, 0xdb; jl 0x208ab; xor al, ch; ret; 
0x000000000007b086: and al, 0xde; leave; add rsp, 0x10; ret; 
0x000000000007794a: and al, 0xe0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000019c08: and al, 0xe0; add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1f0], eax; syscall; 
0x000000000003cdcf: and al, 0xe0; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x0000000000056ced: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000070e53: and al, 0xe8; cmpsd dword ptr [rsi], dword ptr [rdi]; mov edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000030a26: and al, 0xe8; fmulp st(1); ret; 
0x000000000003cdc6: and al, 0xe8; mov qword ptr [rsp - 0x28], rax; mov dword ptr [rsp - 0x20], edx; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000003d252: and al, 0xe8; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000032858: and al, 0xe8; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003285e: and al, 0xe8; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003f975: and al, 0xe8; ret 0x3b5; 
0x0000000000030c20: and al, 0xe8; ret; 
0x000000000003d257: and al, 0xf0; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000030c1c: and al, 0xf0; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000018071: and al, 0xf0; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001807b: and al, 0xf0; ret; 
0x00000000000190f8: and al, 0xf3; movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x0000000000018370: and al, 0xf3; movd dword ptr [rsp], mm0; add rsp, 0x18; ret; 
0x0000000000018075: and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000003ba34: and al, 0xf4; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x0000000000034d6a: and al, 0xf4; ret; 
0x000000000002d122: and al, 0xf8; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000007aeb1: and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x00000000000338f4: and al, 0xf8; movapd xmm0, xmm2; ret; 
0x0000000000030b46: and al, 0xf8; movd xmm0, ecx; ret; 
0x000000000003f355: and al, 0xf8; movq xmm0, rax; ret; 
0x000000000002d11c: and al, 0xf8; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d218: and al, 0xf8; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000007a6f5: and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000017e68: and al, 0xf8; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000018468: and al, 0xf8; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000002d21e: and al, 0xf8; mulsd xmm0, xmm1; ret; 
0x000000000007aec1: and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000001846e: and al, 0xf8; ret; 
0x000000000007aeb6: and al, 0xf8; xor eax, eax; ret; 
0x0000000000062ff9: and al, 0xf; test byte ptr [rax], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000003f161: and al, 0xf; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000030bd5: and al, 0xfc; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x0000000000033841: and al, 0xfc; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002d152: and al, 0xfc; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000003abf4: and al, 0xfc; movaps xmm0, xmm1; ret; 
0x000000000003f3a0: and al, 0xfc; movd xmm0, eax; ret; 
0x000000000007a6fb: and al, 0xfc; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000030b5c: and al, 0xfc; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d14c: and al, 0xfc; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002d246: and al, 0xfc; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002d24c: and al, 0xfc; mulss xmm0, xmm1; ret; 
0x000000000003395c: and al, 0xfc; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x0000000000017e6e: and al, 0xfc; ret; 
0x0000000000033e3f: and al, 0xff; je 0x33e67; sub bh, bh; je 0x33e6b; sub al, ch; ret; 
0x0000000000074367: and al, 1; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov rax, r9; mov rsi, r8; syscall; 
0x000000000007aeec: and al, 1; lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000007aef1: and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000006ebe1: and al, 4; add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x0000000000036f8e: and al, 4; add rsp, 0x18; ret; 
0x0000000000073a23: and al, 4; mov eax, 0xde; syscall; 
0x0000000000074471: and al, 4; mov eax, 1; syscall; 
0x000000000004213a: and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000016908: and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001683f: and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000001836a: and al, 4; movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000074468: and al, 4; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005ce48: and al, 7; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c933: and al, 7; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000074f65: and al, 7; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000074fe3: and al, 7; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000001e912: and al, 8; add byte ptr [rsi + rcx + 0x48], dh; mov eax, dword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x000000000001ecec: and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000003a9c4: and al, 8; add rsp, 0x10; pop rbx; ret; 
0x0000000000017acb: and al, 8; add rsp, 0x18; fxch st(1); ret; 
0x0000000000018314: and al, 8; add rsp, 0x18; movq rax, xmm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x000000000005e3d8: and al, 8; add rsp, 0x18; ret; 
0x000000000003adb8: and al, 8; add rsp, 0x20; pop rbx; ret; 
0x0000000000016cb6: and al, 8; add rsp, 0x28; ret; 
0x000000000001f57b: and al, 8; and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000075d6f: and al, 8; call 0x222a0; add rsp, 0xd8; ret; 
0x000000000003465f: and al, 8; call 0x345e0; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x00000000000346e7: and al, 8; call 0x34680; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x0000000000044a32: and al, 8; call 0x445c0; add rsp, 0x18; ret; 
0x0000000000043d0b: and al, 8; call 0x6c560; movsxd rdi, r13d; mov eax, 3; syscall; 
0x000000000003a9b9: and al, 8; call 0x7ae8e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000002f331: and al, 8; call 0x7b1bd; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000052184: and al, 8; call rax; 
0x000000000005e3c8: and al, 8; call rcx; 
0x000000000007b1a1: and al, 8; cmp eax, 0x3ffd9400; ja 0x7b1ad; fyl2xp1; ret; 
0x000000000003f3f6: and al, 8; fabs; ret; 
0x0000000000017ac7: and al, 8; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x000000000007afad: and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000007afb8: and al, 8; fld1; fpatan; ret; 
0x000000000007b16e: and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003fba6: and al, 8; frndint; ret; 
0x000000000003fbd6: and al, 8; fsqrt; ret; 
0x000000000007b18f: and al, 8; fyl2x; ret; 
0x0000000000041482: and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b51: and al, 8; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x000000000006ec64: and al, 8; lea rdx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000044a2d: and al, 8; lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x0000000000016cac: and al, 8; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000074417: and al, 8; mov eax, 0x6c; syscall; 
0x000000000005bceb: and al, 8; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000001f571: and al, 8; mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000001f979: and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x0000000000067b0d: and al, 8; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000007b3ea: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3ea: and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000007b3a9: and al, 8; mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000041ac6: and al, 8; mov rax, qword ptr [rsp]; mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x000000000001e91a: and al, 8; mov rdi, r14; call rax; 
0x0000000000067acc: and al, 8; mov rdi, r15; call rax; 
0x0000000000051f59: and al, 8; mov rdi, rbp; call rax; 
0x0000000000067b26: and al, 8; mov rsi, r15; mov rdi, r8; call rax; 
0x0000000000017ac1: and al, 8; movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000031007: and al, 8; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000068124: and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb2: and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x0000000000074622: and al, 8; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x0000000000034900: and al, 8; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000021be9: and al, 8; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x000000000005059f: and al, 8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000018486: and al, 8; ret; 
0x0000000000034669: and al, 8; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x000000000007b3f4: and al, 8; syscall; 
0x000000000007b3f4: and al, 8; syscall; ret; 
0x0000000000074b9c: and al, 8; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000007b174: and al, 9; fldcw word ptr [rsp + 8]; ret; 
0x0000000000023870: and al, byte ptr [rax]; add byte ptr [rax], al; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000002343e: and al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000001c6de: and al, ch; idiv rdi; inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x000000000006f253: and al, ch; test esi, 0xc031ffff; pop rbx; ret; 
0x0000000000030c0e: and ax, 0x7fff; and dx, 0x8000; or eax, edx; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000004c4ee: and bh, 8; je 0x4c49b; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000005ccb0: and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x0000000000061c86: and bl, ch; mov bh, 0xe8; xchg eax, edx; sar bl, cl; jmp qword ptr [rsi - 0x70]; 
0x00000000000183a2: and bl, ch; ret; 
0x000000000002e88d: and bl, cl; ret; 
0x00000000000190f2: and bl, dh; movups xmmword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000005842a: and byte ptr [r8 - 0x7d], r9b; ret 0x4c04; 
0x000000000005571a: and byte ptr [rax + 0x23], cl; xchg eax, esp; and al, 0xd0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000073185: and byte ptr [rax + 0x38], dh; ret 0x850f; 
0x0000000000024ee0: and byte ptr [rax + 0x39], cl; ret 0x820f; 
0x00000000000376b3: and byte ptr [rax + 0x39], cl; ret 0x840f; 
0x00000000000220bf: and byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x000000000004a75f: and byte ptr [rax + 0x63], cl; sti; mov eax, 3; syscall; 
0x0000000000073b6c: and byte ptr [rax + 0xde], bh; syscall; 
0x000000000005afab: and byte ptr [rax + 0xe], bh; syscall; 
0x0000000000019540: and byte ptr [rax + 0xf], cl; mov edx, 0x9483ff2; ret; 
0x000000000001780d: and byte ptr [rax + 9], cl; ret 0x4866; 
0x000000000007391f: and byte ptr [rax - 0x75], cl; and al, 0x28; call rax; 
0x0000000000041488: and byte ptr [rax - 0x77], cl; and al, 0x10; mov eax, 0x10; syscall; 
0x0000000000023b57: and byte ptr [rax - 0x77], cl; and al, 0x10; mov eax, 0x9d; syscall; 
0x0000000000072484: and byte ptr [rax - 0x77], cl; ret 0x8944; 
0x0000000000072cd0: and byte ptr [rax - 0x77], cl; ret 0xc889; 
0x0000000000016c66: and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000003de06: and byte ptr [rax - 0x77], cl; ret; 
0x000000000002fa16: and byte ptr [rax - 0x77], cl; ror byte ptr [rcx - 0x76d7dbac], 1; ret; 
0x0000000000023927: and byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rcx + 0x145b8d2], cl; add byte ptr [rax], al; syscall; 
0x000000000005842b: and byte ptr [rax - 0x7d], cl; ret 0x4c04; 
0x000000000002abe2: and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000002b48d: and byte ptr [rax], al; add byte ptr [rax - 0x77], cl; sbb eax, 0x899c1; mov rdi, rbp; syscall; 
0x000000000006fbec: and byte ptr [rax], al; add byte ptr [rax], al; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x000000000006e45c: and byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001f57d: and byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000073cbb: and byte ptr [rax], al; add byte ptr [rax], al; syscall; xor eax, eax; ret; 
0x0000000000065538: and byte ptr [rax], al; add byte ptr [rcx - 0x73], cl; push rcx; call qword ptr [rdi + 0x4c]; 
0x000000000005d0f9: and byte ptr [rax], al; je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d083: and byte ptr [rax], al; setne al; ret; 
0x000000000003f533: and byte ptr [rbp + 1], cl; rol byte ptr [rcx + 0xf], 1; xchg eax, edx; ret 0xc148; 
0x000000000001e1bd: and byte ptr [rbx + 0x420f1af9], al; ret 0x66c3; 
0x0000000000035f08: and byte ptr [rbx + 0x5d], bl; pop r12; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000022399: and byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000029aca: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000001945a: and byte ptr [rbx + 0x66], bl; movaps xmm1, xmm3; ret; 
0x000000000003b00d: and byte ptr [rbx + 0xf], bl; sub cl, al; ret; 
0x000000000001ed16: and byte ptr [rbx + rcx + 0x4c], dh; mov eax, ecx; syscall; 
0x00000000000585d7: and byte ptr [rbx - 0x76b7f820], al; jl 0x58603; sub byte ptr [rax - 0x77], cl; ret 0xf74; 
0x0000000000051889: and byte ptr [rbx - 0x76f7db8c], cl; ret 0xa1e9; 
0x0000000000031b7e: and byte ptr [rbx - 0xd], bl; mulps xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000031d1f: and byte ptr [rbx - 0xd], bl; subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000017431: and byte ptr [rbx - 0xe], bl; mulps xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000173c5: and byte ptr [rbx - 0xe], bl; mulps xmm2, xmm3; movapd xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000016902: and byte ptr [rcx + 0x44892414], cl; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x0000000000016839: and byte ptr [rcx + 0x44892414], cl; and al, 4; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x00000000000427f2: and byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000041286: and byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c781: and byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000001f54c: and byte ptr [rcx + rcx*4 - 0x39], cl; syscall; 
0x000000000005e6e4: and byte ptr [rcx + rdx + 0x48], dh; lea ecx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000049d0e: and byte ptr [rcx - 0x48], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x0000000000050207: and byte ptr [rcx - 0x73], cl; js 0x50230; mov rax, r13; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000001806e: and byte ptr [rcx - 0x760fdbac], cl; and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000017f87: and byte ptr [rcx - 0x76efdbac], cl; and al, 0x14; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000016ca9: and byte ptr [rcx - 0x76f7dbac], cl; and al, 0xc; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000040e16: and byte ptr [rcx - 0x7d], al; ret 0x4801; 
0x000000000002bbd1: and byte ptr [rcx - 9], cl; ret 0xf000; 
0x00000000000691b0: and byte ptr [rcx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000001efe3: and byte ptr [rcx], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000070601: and byte ptr [rcx], al; ret 0xfac1; 
0x0000000000020b9f: and byte ptr [rcx], bh; ret 0x3975; 
0x0000000000020d19: and byte ptr [rcx], bh; ret 0x3b75; 
0x0000000000020d54: and byte ptr [rcx], bh; ret 0xc574; 
0x0000000000020bd8: and byte ptr [rcx], bh; ret 0xcb74; 
0x00000000000340d2: and byte ptr [rcx], bh; ret; 
0x000000000001ab7e: and byte ptr [rcx], bl; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x2d], cl; sub byte ptr ss:[rsi], al; add byte ptr [rcx + 9], al; ret 0x8b48; 
0x0000000000072523: and byte ptr [rcx], ch; ret 0xead1; 
0x000000000001dc86: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x000000000001db86: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x000000000001e153: and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x000000000001efe2: and byte ptr [rcx], r8b; pop rbx; pop rbp; pop r12; ret; 
0x000000000001704c: and byte ptr [rdi + 9], bl; add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x00000000000253ba: and byte ptr [rdi], cl; adc dword ptr [rax + 0x20], edx; pop rbx; ret; 
0x000000000002f941: and byte ptr [rdi], cl; sub cl, al; pop rbx; ret; 
0x000000000001dcef: and byte ptr [rdi], cl; xchg eax, esp; ret 0xd009; 
0x000000000001dbc6: and byte ptr [rdi], cl; xchg eax, esp; rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x00000000000365e4: and byte ptr [rdx + 7], bh; add dl, dh; divps xmm0, xmmword ptr [rip + 0x77830]; ret; 
0x0000000000060a7b: and byte ptr [rdx + rdx + 0x48], dh; lea ecx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000001efc5: and byte ptr [rip - 0x7cb7e88c], bh; ret; 
0x000000000001870c: and byte ptr [rsi + 0x48], ah; movd mm1, ebx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x000000000003a7e9: and byte ptr [rsi + 0xf], 0x6e; ret 0x90c3; 
0x0000000000017390: and byte ptr [rsi + 0xf], ah; sub ah, al; pop rbx; ret; 
0x0000000000018762: and byte ptr [rsi + 0xf], ah; sub al, ah; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x0000000000017349: and byte ptr [rsi + 0xf], ah; sub al, cl; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x000000000002f801: and byte ptr [rsi + 0xf], ah; sub cl, al; pop rbx; ret; 
0x0000000000018ee7: and byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000001e56d: and byte ptr [rsi + 8], bh; ret; 
0x000000000002b247: and byte ptr [rsi + rcx - 0x39], dh; add eax, 0x8bd28; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000007aeea: and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000001bcd2: and cl, al; ror dword ptr [rsi], 1; ret 0xf889; 
0x000000000006c779: and cl, byte ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000001bcd1: and cl, r8b; ror dword ptr [rsi], 1; ret 0xf889; 
0x000000000003240b: and dh, bl; leave; faddp st(1); fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x00000000000163bd: and dword ptr [rax - 0x7d], ecx; ret; 
0x000000000006c3d2: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; 
0x000000000006c3d2: and dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0xc8; syscall; ret; 
0x0000000000074320: and dword ptr [rax], eax; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000074383: and dword ptr [rax], eax; add byte ptr [rax], al; nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000003a9a3: and dword ptr [rax], eax; add byte ptr [rbp + 0x480674db], al; add esp, 0x10; pop rbx; ret; 
0x0000000000060da0: and dword ptr [rbp], 0xffffffdf; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001e033: and dword ptr [rcx + 0xfffee7], eax; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xfffeff], 0; setne al; ret; 
0x0000000000023f94: and dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x00000000000202f3: and dword ptr [rcx], ebp; ret; 
0x000000000001dc46: and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x000000000006e3ce: and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000005cf62: and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x0000000000042d4e: and dword ptr [rdi], eax; add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000005b1af: and dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000006f5e7: and dword ptr [rdx], ecx; ret; 
0x000000000007aeaf: and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000030c12: and dx, 0x8000; or eax, edx; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000001f468: and eax, 0; add rax, 0x34; ret; 
0x000000000006fe5e: and eax, 0; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x0000000000047eb8: and eax, 0; cmp qword ptr [rax + 0x58], 0; je 0x47ed0; add rax, 0xa0; ret; 
0x00000000000235e8: and eax, 0; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006d5bc: and eax, 0; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000001eef8: and eax, 0; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f09c: and eax, 0; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000006def8: and eax, 0; mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000001f556: and eax, 0; mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005ada4: and eax, 0; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000007af7a: and eax, 0; pop rdx; ret; 
0x000000000006f118: and eax, 0; ret; 
0x000000000004f438: and eax, 0; syscall; 
0x000000000006b217: and eax, 0x100f; ret; 
0x000000000006e8f5: and eax, 0x10; ret; 
0x0000000000046dd9: and eax, 0x2503c083; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000001d970: and eax, 0x28; jne 0x1d97d; add rsp, 0x10; pop rbp; ret; 
0x000000000001f9cf: and eax, 0x28; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fae8: and eax, 0x28; jne 0x1fb33; add rsp, 0x50; pop rbx; ret; 
0x000000000001fba8: and eax, 0x28; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000021f10: and eax, 0x28; jne 0x21f27; add rsp, 0xa0; pop rbx; ret; 
0x0000000000022067: and eax, 0x28; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022466: and eax, 0x28; jne 0x22475; add rsp, 0xd8; ret; 
0x0000000000022544: and eax, 0x28; jne 0x22554; add rsp, 0x850; pop rbx; ret; 
0x00000000000227f6: and eax, 0x28; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b6: and eax, 0x28; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000022a98: and eax, 0x28; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b10: and eax, 0x28; jne 0x22b1c; add rsp, 0x28; ret; 
0x0000000000022f4b: and eax, 0x28; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023187: and eax, 0x28; jne 0x231d1; add rsp, 0xe0; pop rbx; ret; 
0x000000000002332f: and eax, 0x28; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023afa: and eax, 0x28; jne 0x23b06; add rsp, 0x28; ret; 
0x0000000000023b75: and eax, 0x28; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023c83: and eax, 0x28; jne 0x23c90; add rsp, 0x60; pop rbx; ret; 
0x0000000000023e9b: and eax, 0x28; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000023f4f: and eax, 0x28; jne 0x23f74; add rsp, 0x28; ret; 
0x0000000000024069: and eax, 0x28; jne 0x24075; add rsp, 0x28; ret; 
0x00000000000247d0: and eax, 0x28; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a0fa: and eax, 0x28; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000002a1ac: and eax, 0x28; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x0000000000030c83: and eax, 0x28; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dc1: and eax, 0x28; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312af: and eax, 0x28; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032946: and eax, 0x28; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a09: and eax, 0x28; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032afb: and eax, 0x28; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5eb: and eax, 0x28; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c62b: and eax, 0x28; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d374: and eax, 0x28; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbcc: and eax, 0x28; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e185: and eax, 0x28; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a4: and eax, 0x28; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e36c: and eax, 0x28; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8a9: and eax, 0x28; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000003fabc: and eax, 0x28; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb1c: and eax, 0x28; jne 0x3fb28; add rsp, 0x18; ret; 
0x000000000004049d: and eax, 0x28; jne 0x404fe; add rsp, 0x130; pop rbp; ret; 
0x0000000000041426: and eax, 0x28; jne 0x41447; add rsp, 0xa0; pop rbp; ret; 
0x00000000000414a6: and eax, 0x28; jne 0x414b2; add rsp, 0x58; ret; 
0x0000000000041532: and eax, 0x28; jne 0x415d4; add rsp, 0x30; pop rbx; ret; 
0x00000000000420f8: and eax, 0x28; jne 0x42104; add rsp, 0x18; ret; 
0x00000000000428dc: and eax, 0x28; jne 0x428e8; add rsp, 0x58; ret; 
0x0000000000042cd8: and eax, 0x28; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f51: and eax, 0x28; jne 0x42f60; add rsp, 0xd8; ret; 
0x00000000000437b4: and eax, 0x28; jne 0x4382f; add rsp, 0x70; pop rbp; ret; 
0x0000000000043a9f: and eax, 0x28; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000043dd3: and eax, 0x28; jne 0x43e03; add rsp, 0x58; ret; 
0x00000000000441ba: and eax, 0x28; jne 0x441c7; add rsp, 0x10; pop rbx; ret; 
0x0000000000044b33: and eax, 0x28; jne 0x44bac; add rsp, 0x18; ret; 
0x000000000004501f: and eax, 0x28; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a3f: and eax, 0x28; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c1f: and eax, 0x28; jne 0x47c2b; add rsp, 0x18; ret; 
0x0000000000048457: and eax, 0x28; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004aeda: and eax, 0x28; jne 0x4aee7; add rsp, 0x40; pop rbx; ret; 
0x000000000004c448: and eax, 0x28; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000004c678: and eax, 0x28; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6dc: and eax, 0x28; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d0b7: and eax, 0x28; jne 0x4d0e9; add rsp, 0x28; ret; 
0x000000000004d157: and eax, 0x28; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d5: and eax, 0x28; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df6f: and eax, 0x28; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff6: and eax, 0x28; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e054: and eax, 0x28; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000004f3c9: and eax, 0x28; jne 0x4f3d5; add rsp, 0x18; ret; 
0x000000000004f64c: and eax, 0x28; jne 0x4f663; leave; ret; 
0x000000000004f7e6: and eax, 0x28; jne 0x4f80b; leave; ret; 
0x000000000004f97c: and eax, 0x28; jne 0x4f993; leave; ret; 
0x0000000000050a65: and eax, 0x28; jne 0x50a88; add rsp, 0x160; pop r12; ret; 
0x0000000000059d7a: and eax, 0x28; jne 0x59d9a; add rsp, 0x10; pop rbp; ret; 
0x000000000005a314: and eax, 0x28; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005aa8a: and eax, 0x28; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005ab55: and eax, 0x28; jne 0x5ab93; add rsp, 0x20; pop rbx; ret; 
0x000000000005b451: and eax, 0x28; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005b8f3: and eax, 0x28; jne 0x5b90a; add rsp, 0x90; pop rbx; ret; 
0x000000000005bee0: and eax, 0x28; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005c954: and eax, 0x28; jne 0x5c997; add rsp, 0x10; pop rbx; ret; 
0x000000000005cd1e: and eax, 0x28; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005ce69: and eax, 0x28; jne 0x5ce87; add rsp, 0x10; pop rbx; ret; 
0x000000000005cf31: and eax, 0x28; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d031: and eax, 0x28; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005de7a: and eax, 0x28; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005e5d1: and eax, 0x28; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed61: and eax, 0x28; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f351: and eax, 0x28; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f591: and eax, 0x28; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x000000000005fd11: and eax, 0x28; jne 0x5fd27; add rsp, 0x18; ret; 
0x000000000005ff32: and eax, 0x28; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000060412: and eax, 0x28; jne 0x6042a; add rsp, 0x10; pop rbx; ret; 
0x0000000000060923: and eax, 0x28; jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000060e86: and eax, 0x28; jne 0x60e95; add rsp, 0xd8; ret; 
0x000000000006101c: and eax, 0x28; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610d1: and eax, 0x28; jne 0x610e0; add rsp, 0xd8; ret; 
0x0000000000061191: and eax, 0x28; jne 0x611a0; add rsp, 0xd8; ret; 
0x000000000006124c: and eax, 0x28; jne 0x6125b; add rsp, 0xd8; ret; 
0x0000000000061301: and eax, 0x28; jne 0x61310; add rsp, 0xd8; ret; 
0x000000000006199c: and eax, 0x28; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064075: and eax, 0x28; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc5: and eax, 0x28; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bda: and eax, 0x28; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d94: and eax, 0x28; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e5: and eax, 0x28; jne 0x670f4; add rsp, 0x208; ret; 
0x00000000000671e6: and eax, 0x28; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a6: and eax, 0x28; jne 0x672b5; add rsp, 0xd8; ret; 
0x0000000000069c14: and eax, 0x28; jne 0x69c7b; add rsp, 0x38; ret; 
0x000000000006b3a8: and eax, 0x28; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb9c: and eax, 0x28; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec91: and eax, 0x28; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000071abf: and eax, 0x28; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000071ce8: and eax, 0x28; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000071d55: and eax, 0x28; jne 0x71d6d; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071fad: and eax, 0x28; jne 0x71fba; add rsp, 0x40; pop rbp; ret; 
0x000000000007376b: and eax, 0x28; jne 0x73778; add rsp, 0x20; pop rbx; ret; 
0x0000000000073e10: and eax, 0x28; jne 0x73e1c; add rsp, 0x38; ret; 
0x000000000007422d: and eax, 0x28; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074483: and eax, 0x28; jne 0x744a6; xor eax, eax; add rsp, 0x18; ret; 
0x0000000000074711: and eax, 0x28; jne 0x7471e; add rsp, 0x30; pop rbp; ret; 
0x0000000000074bd9: and eax, 0x28; jne 0x74be8; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000074f8e: and eax, 0x28; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075007: and eax, 0x28; jne 0x7503c; add rsp, 0x18; ret; 
0x0000000000075301: and eax, 0x28; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075366: and eax, 0x28; jne 0x75372; add rsp, 0x28; ret; 
0x0000000000075408: and eax, 0x28; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075454: and eax, 0x28; jne 0x75460; add rsp, 0x18; ret; 
0x000000000007562b: and eax, 0x28; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e2: and eax, 0x28; jne 0x756ee; add rsp, 0x28; ret; 
0x000000000002374d: and eax, 0x28; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x0000000000041251: and eax, 0x28; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x00000000000746b0: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000004fccd: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9e6: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000007474d: and eax, 0x28; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x00000000000703cb: and eax, 0x28; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000007440f: and eax, 0x28; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000070115: and eax, 0x462a6; call rax; 
0x0000000000074d48: and eax, 0x48000001; movsxd rsi, esi; syscall; 
0x000000000007a407: and eax, 0x4cffff4c; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000003cf3d: and eax, 0x6e760007; nop word ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000033233: and eax, 0x7ac28; movapd xmm0, xmm4; ret; 
0x000000000002ea47: and eax, 0x7f3b4; addsd xmm1, xmm4; mulsd xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000001e1a6: and eax, 0x7f; ret; 
0x000000000006bc56: and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006d113: and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000015ca7: and eax, 0x7fffffff; ret; 
0x000000000006c372: and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000006d0e2: and eax, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000023fce: and eax, 0x800; jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x0000000000048cba: and eax, 0x83fffffe; ret; 
0x0000000000052abe: and eax, 0x8948fffc; ret 0x8548; 
0x0000000000062f6e: and eax, 0x894cef75; ret; 
0x000000000007af02: and eax, 0xc00; ret; 
0x0000000000043f41: and eax, 0xdfff; ret; 
0x000000000006e8e6: and eax, 0xf; jne 0x6e900; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x0000000000048ff4: and eax, 0xf; ret; 
0x000000000006b24b: and eax, 0xfffffecf; or eax, 0x30; mov dword ptr [rdi + 8], eax; mov eax, 0x100; mov word ptr [rdi + 0x16], ax; ret; 
0x0000000000048652: and eax, 0xffffff; ret; 
0x0000000000048fd6: and eax, 0xffffffc0; cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x00000000000619f9: and eax, 0xfffffff0; lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000006ecd0: and eax, 0xfffffffc; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000001db0c: and eax, 0xfffffffd; add rax, 4; ret; 
0x00000000000502d3: and eax, 0xfffffffe; mov rsi, r13; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000001e554: and eax, 1; add eax, 1; ret; 
0x000000000006bc79: and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001ddba: and eax, 1; ret; 
0x000000000006bcd6: and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000042dfb: and eax, dword ptr [rax]; add bl, ch; test al, ch; sbb eax, ecx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000005b6a5: and eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000002e266: and eax, dword ptr [rcx]; add byte ptr [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002336c: and eax, dword ptr [rcx]; add byte ptr [rax], al; mov rdx, rdi; syscall; 
0x000000000003fff3: and eax, dword ptr [rdi]; add byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi + rcx + 0x45]; ret; 
0x000000000003fd06: and eax, dword ptr [rdi]; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x000000000003fd7c: and eax, dword ptr [rdi]; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000005b188: and eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000030bd3: and eax, dword ptr [rsp - 4]; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000003383f: and eax, dword ptr [rsp - 4]; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000007af4a: and eax, edi; ret; 
0x000000000003a77a: and eax, edx; movq xmm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000003f34f: and eax, edx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000003f39a: and eax, edx; movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000029377: and eax, edx; ret; 
0x000000000004cdf3: and ebp, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005ec43: and ebx, 0xfff7ff3f; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x0000000000052179: and ebx, 1; mov esi, dword ptr [rax]; mov rdi, rbp; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000051f53: and ebx, 1; mov rax, qword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x0000000000052226: and ebx, 1; mov rdi, rbp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000002d145: and ecx, dword ptr [rax]; add bl, dh; movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x00000000000182de: and ecx, eax; cmp rcx, rsi; je 0x182f0; ret; 
0x000000000003a803: and ecx, eax; movd xmm1, ecx; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x0000000000030b40: and ecx, edx; movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000001e065: and edi, 0x7f; cmp edi, 0x20; seta al; ret; 
0x0000000000073d16: and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x0000000000073ce6: and edi, 0x7fffffff; mov eax, 0xe1; syscall; 
0x0000000000073d49: and edi, 0x7fffffff; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x00000000000738b6: and edi, 0x7fffffff; syscall; 
0x000000000001e034: and edi, 0xfffe; xor eax, eax; cmp edi, 0xfffe; setne al; ret; 
0x000000000001dbb6: and edi, 0xffffff80; sete al; ret; 
0x000000000005cb73: and edi, esp; jmp qword ptr [rsi + 0x2e]; 
0x000000000002c631: and edx, 0x3f; cmp dl, 0x2f; jbe 0x2c5a9; mov r8d, 1; mov eax, r8d; ret; 
0x000000000001e1eb: and edx, 0x5f; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x000000000001e568: and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x000000000006c7dc: and edx, 0x7fffffff; mov dword ptr [rdi + 0x10], edx; test eax, eax; js 0x6c7f0; xor eax, eax; ret; 
0x000000000003a810: and edx, 0x80000000; mov dword ptr [rdi], edx; ret; 
0x000000000003a7e4: and edx, 0x80000000; movd xmm0, edx; ret; 
0x0000000000030bd7: and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x00000000000346a0: and edx, 0x807fffff; mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; ret; 
0x0000000000030c13: and edx, 0xd0098000; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000006e82b: and edx, 4; je 0x6e7ce; mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000007b281: and edx, 7; je 0x7b28b; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x7b286; ret; 
0x000000000003a79b: and edx, eax; mov qword ptr [rdi], rdx; ret; 
0x000000000003a74f: and edx, eax; movq xmm0, rdx; ret; 
0x0000000000030bae: and edx, ecx; or rax, rdx; movq xmm0, rax; ret; 
0x000000000006e814: and esi, 0x80; or esi, 7; syscall; 
0x000000000004c4bb: and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000006b270: and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000043743: and esi, 0xfffff000; sub rsi, rdi; syscall; 
0x000000000006fc86: and esi, 0xffffff80; add rsi, 0x81; syscall; 
0x000000000007b3af: and esi, 0xfffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000005d2b0: and esp, 1; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005cd3f: and esp, edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000042d4d: and qword ptr [r15], r8; add byte ptr [rax - 0x77], cl; ret 0x8949; 
0x000000000005b1ae: and qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000006f5e6: and qword ptr [rdx], rcx; ret; 
0x000000000006e82a: and r10d, 4; je 0x6e7ce; mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000005d2af: and r12d, 1; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000006f252: and r8b, bpl; test esi, 0xc031ffff; pop rbx; ret; 
0x0000000000023fcd: and r8d, 0x800; jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x00000000000619f8: and rax, 0xfffffffffffffff0; lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000001db0b: and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000005b187: and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000003a779: and rax, rdx; movq xmm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000003f34e: and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000004eec0: and rax, rdx; ret; 
0x00000000000182dd: and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x000000000003a79a: and rdx, rax; mov qword ptr [rdi], rdx; ret; 
0x000000000003a74e: and rdx, rax; movq xmm0, rdx; ret; 
0x0000000000030bad: and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x0000000000043742: and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000006fc85: and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x000000000007b3ae: and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000003f3bd: andps xmm0, xmm1; ret; 
0x0000000000034150: bnd je 0x34160; test edx, edx; je 0x3415b; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000069094: bnd je 0x6909f; cmp rax, rdi; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x000000000003fdcc: bsf eax, eax; add eax, 1; ret; 
0x000000000003fdec: bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x000000000003fdcb: bsf rax, rax; add eax, 1; ret; 
0x000000000003fdeb: bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000002465b: bswap eax; lea esi, [rax + 0x14]; call 0x438b0; xor eax, eax; add rsp, 8; ret; 
0x000000000004a7e6: bswap eax; mov eax, eax; ret; 
0x0000000000047f96: bswap eax; ret; 
0x000000000004a804: bswap edi; mov dword ptr [rsi], edi; ret; 
0x0000000000030ba9: btr eax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x0000000000033814: btr eax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x0000000000030ba8: btr rax, 0x3f; and rdx, rcx; or rax, rdx; movq xmm0, rax; ret; 
0x0000000000033813: btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000003f465: bts eax, 0x35; shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x000000000003f464: bts r8, 0x35; shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x000000000001e5dc: call 0x15060; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005d234: call 0x15060; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000005a0fb: call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000005a0f3: call 0x15060; mov rdi, qword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000047086: call 0x15060; test rbx, rbx; jne 0x47080; pop rbx; ret; 
0x00000000000507a6: call 0x15060; test rbx, rbx; jne 0x507a0; xor eax, eax; pop rbx; ret; 
0x0000000000028e74: call 0x15060; xor eax, eax; add rsp, 8; ret; 
0x0000000000015e52: call 0x15cb0; mov eax, r12d; pop r12; ret; 
0x000000000005c9ab: call 0x15e30; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000004f410: call 0x15e60; lea rdi, [rip + 0x67b38]; call 0x6b480; mov eax, 0x39; syscall; 
0x0000000000016d69: call 0x17fa0; add rsp, 0x28; fchs; fxch st(1); ret; 
0x0000000000029d31: call 0x1891f; jmp qword ptr [rsi + 0xf]; 
0x0000000000019a7d: call 0x19ae0; add rsp, 8; ret; 
0x0000000000059c67: call 0x1cd1fb4; cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x000000000001dcb4: call 0x1db40; test eax, eax; sete al; add rsp, 8; movzx eax, al; ret; 
0x000000000001dd4c: call 0x1dd70; test eax, eax; setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000001df92: call 0x1dff0; pop rbp; test eax, eax; setne al; movzx eax, al; ret; 
0x000000000001dfc7: call 0x1e360; cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x000000000006ba07: call 0x1e73d10; ret; 
0x000000000006bc77: call 0x1e73f7f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bc97: call 0x1e73fa3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bcb7: call 0x1e73fbe; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001dadb: call 0x1ef20; endbr64; lea rax, [rip + 0x96245]; ret; 
0x0000000000051bab: call 0x1ef20; endbr64; xor eax, eax; ret; 
0x000000000003fac8: call 0x1ef20; nop dword ptr [rax]; endbr64; cvtsd2si rax, xmm0; ret; 
0x000000000005b687: call 0x1ef20; nop dword ptr [rax]; endbr64; mov eax, 0x40; ret; 
0x000000000004e267: call 0x1ef20; nop dword ptr [rax]; endbr64; ret; 
0x0000000000075637: call 0x1ef20; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x57; syscall; 
0x0000000000023ea7: call 0x1ef20; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xaa; syscall; 
0x000000000004aee7: call 0x1ef20; nop dword ptr [rax]; endbr64; xor eax, eax; ret; 
0x00000000000414b2: call 0x1ef20; nop word ptr [rax + rax]; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x000000000001843c: call 0x1ef20; nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000022ffe: call 0x1ef20; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x0000000000029319: call 0x1ef20; nop; endbr64; lea rax, [rip + 0x8a875]; ret; 
0x000000000004b10a: call 0x1ef20; nop; endbr64; mov eax, 3; syscall; 
0x000000000004b10a: call 0x1ef20; nop; endbr64; mov eax, 3; syscall; ret; 
0x000000000006b209: call 0x1ef20; nop; endbr64; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x0000000000074239: call 0x1ef20; nop; endbr64; sub rsp, 8; mov eax, 0x50; syscall; 
0x0000000000015c74: call 0x1f460; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000019a54: call 0x1f460; mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x0000000000019a10: call 0x1f460; mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x0000000000043fe2: call 0x1f460; mov dword ptr [rax], 0x54; mov rax, -1; add rsp, 8; ret; 
0x000000000002cda1: call 0x1f460; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x0000000000040554: call 0x1f460; mov dword ptr [rax], 2; xor eax, eax; add rsp, 8; ret; 
0x0000000000042058: call 0x1f460; mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x0000000000043efb: call 0x1f460; mov r8d, 0xffffffff; mov dword ptr [rax], ebx; mov eax, r8d; pop rbx; ret; 
0x000000000002cd60: call 0x1f460; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000005d0b7: call 0x1f653be; and eax, 1; ret; 
0x000000000005d0c7: call 0x1f653cf; and eax, 1; ret; 
0x0000000000022ecf: call 0x1f8c0; add rsp, 8; sar eax, 0x1f; ret; 
0x0000000000032435: call 0x20279115; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x00000000000746e2: call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000005ba1a: call 0x219f0; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000074781: call 0x219f0; mov eax, 0x5c; mov rdi, r12; mov rsi, rbx; mov rdx, rbp; syscall; 
0x0000000000021ff9: call 0x21bc0; add rsp, 0x18; ret; 
0x00000000000438d5: call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000021f48: call 0x21bc0; add rsp, 8; ret; 
0x0000000000059bb1: call 0x21bc0; pop rbp; ret; 
0x000000000005b8a4: call 0x21bc0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075d71: call 0x222a0; add rsp, 0xd8; ret; 
0x0000000000016838: call 0x2415f15d; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000016901: call 0x2415f226; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x0000000000028fea: call 0x24480; test rax, rax; je 0x29000; pop rbx; ret; 
0x000000000003cdc7: call 0x24485714; fmul dword ptr [rcx - 0x241fdbac]; insb byte ptr [rdi], dx; and al, 0xd8; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000006316d: call 0x244aba91; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000016ca8: call 0x2455f5cd; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x0000000000017098: call 0x2455f9bd; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x0000000000017f86: call 0x245608ab; adc byte ptr [rcx - 0xcebdbbc], cl; movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x0000000000018548: call 0x24560e6d; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x00000000000193e8: call 0x24561d0d; or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x00000000000311e1: call 0x28c7952e; ret; 
0x00000000000253d8: call 0x29330; test eax, eax; jne 0x253e8; pop rbp; ret; 
0x000000000006990e: call 0x294af66e; rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x000000000006a734: call 0x294b0494; rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x000000000007b081: call 0x2ce37264; and al, 0xde; leave; add rsp, 0x10; ret; 
0x00000000000319c8: call 0x313b0; movsd xmm2, qword ptr [rip + 0x7c93b]; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000031ff8: call 0x31a10; movss xmm2, dword ptr [rip + 0x7ea7b]; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000017bbd: call 0x32690; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x0000000000034661: call 0x345e0; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x00000000000346e9: call 0x34680; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x000000000003a434: call 0x34bf0; pxor xmm0, xmm0; add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000003a4a8: call 0x34c80; pxor xmm0, xmm0; add rsp, 0x18; cvtsi2ss xmm0, eax; ret; 
0x0000000000037877: call 0x37b34; add byte ptr [rbx + 0x280f02c5], al; ret; 
0x000000000002f19a: call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x0000000000017ed4: call 0x394e0; movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000354d7: call 0x394e0; mulsd xmm0, qword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x000000000002f268: call 0x3a540; addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x0000000000035d3b: call 0x3a540; mulss xmm0, dword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x000000000003a9a1: call 0x3cb00; test ebx, ebx; je 0x3a9b0; add rsp, 0x10; pop rbx; ret; 
0x0000000000039468: call 0x3cbe0; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x0000000000039488: call 0x3cca0; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x000000000003edfc: call 0x3e8f0; add rsp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000348f7: call 0x3fbb0; movsd xmm7, qword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000003d24b: call 0x4002d7b6; fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000004800b: call 0x41450; movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x0000000000022d59: call 0x415e6ebb; pop rbp; pop r14; ret; 
0x0000000000029ef8: call 0x415ee05a; pop rbp; pop r14; pop r15; ret; 
0x0000000000029f6f: call 0x415ee0d1; pop rbp; pop r14; pop r15; ret; 
0x000000000005fc97: call 0x41623df9; pop rbp; pop r14; ret; 
0x000000000005fcb6: call 0x41623e18; pop rbp; pop r14; ret; 
0x00000000000696c0: call 0x4162d822; pop rbp; ret; 
0x0000000000024660: call 0x438b0; xor eax, eax; add rsp, 8; ret; 
0x000000000006fbf0: call 0x438b0; xor eax, eax; pop rbp; ret; 
0x0000000000044a34: call 0x445c0; add rsp, 0x18; ret; 
0x00000000000692ba: call 0x4462d41c; sub eax, eax; ret; 
0x000000000004508f: call 0x44bc0; add rsp, 8; ret; 
0x0000000000047167: call 0x457a0; test eax, eax; jle 0x47178; xor eax, eax; pop rbx; ret; 
0x00000000000469fb: call 0x46710; add rsp, 0x18; ret; 
0x0000000000032651: call 0x48275331; add esp, 0x28; fsubp st(1); ret; 
0x00000000000220d4: call 0x490220d3; add esp, 8; ret; 
0x00000000000743d4: call 0x49073eb0; add esp, 8; ret; 
0x000000000004ad55: call 0x4ac90; test rax, rax; jne 0x4ad50; pop rbx; ret; 
0x0000000000032859: call 0x4c133850; and al, 0xe8; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000032d79: call 0x4c133d70; and al, 0xe8; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000006ae61: call 0x4cfa2167; mov eax, eax; ret; 
0x000000000004ef7f: call 0x4ee80; add rsp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef4f: call 0x4ee80; add rsp, 8; shr rax, 0x11; ret; 
0x00000000000528d3: call 0x52870; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005a645: call 0x5a620; test rbx, rbx; je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000023e2a: call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000005ad98: call 0x5abc0; movsxd rsi, ebx; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000070107: call 0x5ae30; mov rdi, r12; mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x0000000000071ed4: call 0x5b071e6f; pop rcx; neg eax; add rsp, 8; ret; 
0x00000000000689ff: call 0x5bff134c; ret; 
0x000000000002a530: call 0x5c440290; ret; 
0x000000000002a630: call 0x5c440390; ret; 
0x0000000000048361: call 0x5c45e0c1; pop r13; pop r14; ret; 
0x000000000005d697: call 0x5c4733f7; pop r13; ret; 
0x000000000005f3c3: call 0x5c475123; pop r13; pop r14; ret; 
0x000000000005fe75: call 0x5c475bd5; pop r13; ret; 
0x0000000000069641: call 0x5c47f3a1; pop r13; ret; 
0x0000000000069676: call 0x5c47f3d6; pop r13; ret; 
0x000000000006afca: call 0x5c480d2a; ret; 
0x000000000005d338: call 0x5c8a0; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005d3f6: call 0x5c8a0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000005efb9: call 0x5c8a0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000004167d: call 0x5d1b0; mov eax, 1; add rsp, 8; ret; 
0x000000000004def4: call 0x5d1b0; mov qword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x0000000000022db4: call 0x5d1b0; mov qword ptr [rip + 0x93fb4], 0; add rsp, 8; ret; 
0x0000000000060711: call 0x5d1b0; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000005d1ca: call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x00000000000216cb: call 0x5d437311; pop r14; pop r15; ret; 
0x0000000000078977: call 0x5d48e5bd; pop r14; pop rbp; ret; 
0x0000000000022e26: call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x000000000004ed1f: call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000060d9b: call 0x5ed80; and dword ptr [rbp], 0xffffffdf; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005dc58: call 0x5f0f0; test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x0000000000060cfe: call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x000000000005d4ac: call 0x5fd70; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000005fda2: call 0x5fd70; mov rax, r12; pop r12; ret; 
0x00000000000199da: call 0x60f80; add rsp, 8; add eax, 1; cdqe; ret; 
0x00000000000677da: call 0x61030; mov rax, r12; pop r12; ret; 
0x000000000005929c: call 0x634e92a0; ret; 
0x0000000000070d34: call 0x63722; jmp qword ptr [rsi + 0xf]; 
0x000000000007a6f0: call 0x6418b6e8; and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x00000000000680fa: call 0x68050; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000006811d: call 0x68050; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000685fa: call 0x684f0; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000006861d: call 0x684f0; fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000694b9: call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a29: call 0x69170; mov rax, r12; pop r12; ret; 
0x000000000006934d: call 0x694b0; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000074ad6: call 0x694b0; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000069460: call 0x69800; add r12, rax; mov rax, r12; pop r12; ret; 
0x00000000000697df: call 0x69800; add rax, rbx; pop rbx; ret; 
0x000000000006a4cd: call 0x6a570; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000006a510: call 0x6a680; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000006a839: call 0x6aea0; mov rax, r12; pop r12; ret; 
0x000000000005fd5f: call 0x6b480; lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x000000000004f41c: call 0x6b480; mov eax, 0x39; syscall; 
0x000000000004f281: call 0x6b570; add rsp, 8; lea rax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x000000000001f674: call 0x6b570; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000006d410: call 0x6b570; mov edx, 0x3c; xor edi, edi; nop dword ptr [rax]; mov rax, rdx; syscall; 
0x000000000004f30d: call 0x6b570; mov rax, r12; pop r12; ret; 
0x000000000001f7d6: call 0x6b570; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006fc07: call 0x6b570; xor eax, eax; pop rbp; ret; 
0x0000000000021ff1: call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000071ed3: call 0x6b5c0; pop rdx; pop rcx; neg eax; add rsp, 8; ret; 
0x0000000000071f01: call 0x6b5c0; pop rsi; pop rdi; neg eax; add rsp, 8; ret; 
0x000000000006bd27: call 0x6b950; xor eax, eax; pop rbx; ret; 
0x0000000000043d0d: call 0x6c560; movsxd rdi, r13d; mov eax, 3; syscall; 
0x0000000000073916: call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000000702a8: call 0x6e060; mov edx, 2; test eax, eax; cmovne eax, edx; add rsp, 8; ret; 
0x000000000007a406: call 0x6f030; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000006f2c8: call 0x6f660; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000006ff88: call 0x6f6a0; mov eax, dword ptr [rip + 0x448f1]; test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x000000000006fec4: call 0x6fc10; mov dword ptr [rbx], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000438c0: call 0x70300; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000006e3f4: call 0x70300; xor eax, eax; add rsp, 8; ret; 
0x000000000006be76: call 0x70300; xor eax, eax; pop rbx; ret; 
0x0000000000070b21: call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x0000000000073d99: call 0x71e00; add rsp, 8; not eax; shr eax, 0x1f; ret; 
0x0000000000072452: call 0x71ea0; neg eax; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005013f: call 0x74180; nop dword ptr [rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r15; syscall; 
0x0000000000041642: call 0x74280; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000000225a5: call 0x74280; mov eax, 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000007a1db: call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x000000000007895c: call 0x76590; mov rsi, r12; mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000001edef: call 0x78780; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000034caa: call 0x79c34db0; clc; mov eax, r8d; ret; 
0x000000000003aa58: call 0x7ae8e; fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003a9bb: call 0x7ae8e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x000000000003aa0b: call 0x7ae8e; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x000000000001fcb2: call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x000000000001fd34: call 0x7aebb; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001fce1: call 0x7aebb; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000001fc8a: call 0x7af3d; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000007afec: call 0x7affb; pop rax; fld1; fsubp st(1); ret; 
0x000000000002f333: call 0x7b1bd; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000069058: call 0x7b25a; add rax, rbx; pop rbx; ret; 
0x000000000004f37f: call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x0000000000046a4b: call 0x7b25a; mov qword ptr [rbp], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000043996: call 0x7b25a; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000006aff7: call 0x7b25a; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000000688ed: call 0x7b2b1; add rsp, 8; ret; 
0x0000000000059c1c: call 0x7b2b1; mov eax, r12d; pop r12; ret; 
0x000000000005c728: call 0x7b2b1; mov esi, 0x88000; mov rax, r14; mov rdi, r13; syscall; 
0x00000000000599bf: call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x0000000000059bcc: call 0x7b2b1; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x00000000000745d6: call 0x7b396; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000007b1b5: call 0x82c1e95; fyl2x; ret; 
0x00000000000276bd: call 0xa073d02; add byte ptr [rax - 0x7d], cl; ret 0xc604; 
0x000000000007af00: call 0xc07d408; add byte ptr [rax], al; ret; 
0x00000000000509ea: call 0xf0509ef; adc dword ptr [rdi + 0xf8], edi; ret; 
0x000000000005020e: call 0xffffffff8005d094; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x000000000003cded: call 0xffffffff856a8fd0; leave; jns 0x3cdb0; fchs; ret; 
0x000000000003cda8: call 0xffffffff856ab78b; leave; js 0x3cdf5; ret; 
0x000000000003e765: call 0xffffffff856ac948; fstp xword ptr [rax + 0x27]; add rsp, 0x10; pop rbx; ret; 
0x0000000000045ad6: call 0xffffffff89513464; out dx, eax; call rax; 
0x000000000002c234: call 0xffffffff89d2cb3b; ret 0xeac1; 
0x000000000004eff5: call 0xffffffff89d52105; ret 0xe2c1; 
0x000000000005e323: call 0xffffffff8b4fc29a; adc byte ptr [rcx - 0x75], r9b; mov rdx, r12; mov rsi, r13; call rax; 
0x0000000000034c22: call 0xffffffffc0049428; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d2a: call 0xffffffffc0049530; jns 0x34d28; mov eax, r8d; ret; 
0x000000000002e70b: call 0xffffffffc0b9f61f; ret; 
0x000000000006a61c: call 0xffffffffc14f037c; clc; add al, byte ptr [rcx + 0x5c]; ret; 
0x0000000000031213: call 0xffffffffc1e204f6; fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x000000000003260e: call 0xffffffffc1e218f1; add rsp, 0x28; ret; 
0x000000000007af9f: call 0xffffffffc2e09180; fmulp st(1); fsqrt; fpatan; ret; 
0x00000000000418f4: call 0xffffffffc4876118; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000003fc71: call 0xffffffffc6ef717c; add al, byte ptr [rax]; lea rax, [rip + 0x7739f]; ret; 
0x000000000003285f: call 0xffffffffca5c3856; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000032d7f: call 0xffffffffca5c3d76; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x00000000000311c2: call 0xffffffffcadcd4a3; fadd st(0); fdivp st(1); faddp st(1); ret; 
0x000000000002c5dd: call 0xffffffffd03c0df2; setb r8b; mov eax, r8d; ret; 
0x000000000006a3c7: call 0xffffffffd05830fc; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000007afd6: call 0xffffffffd9e4b54d; fchs; ret; 
0x000000000002e6c9: call 0xffffffffde04a751; ret; 
0x000000000004c49a: call 0xffffffffe8f44de7; sbb eax, 0x48fffd57; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000006d1e9: call 0xffffffffeb0c5aef; popfq; add al, 0; ret; 
0x000000000007b1ae: call 0xfffffffff1e17391; ret; 
0x000000000003a502: call 0xfffffffff1e285e0; ret; 
0x000000000002d114: call 0xfffffffff202d925; movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x0000000000022257: call 0xfffffffff8856a5d; std; jbe 0x22268; pop rbx; ret; 
0x000000000007b0a9: call 0xfffffffffde0b626; fstp st(1); ret; 
0x0000000000018c81: call 0xffffffffffff206f; jmp qword ptr [rsi + 0xf]; 
0x0000000000055d1e: call qword ptr [rax + 0x5c415d5b]; ret; 
0x00000000000490c5: call qword ptr [rax + 0x6a]; 
0x000000000002bb15: call qword ptr [rax + 0xf000000]; 
0x000000000007904e: call qword ptr [rax + 1]; 
0x000000000002cd9f: call qword ptr [rax - 0x18]; 
0x00000000000491ba: call qword ptr [rax - 0x46]; 
0x000000000004b10e: call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; 
0x000000000004b10e: call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; ret; 
0x000000000001fbde: call qword ptr [rax - 0x5e1f00d]; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x0000000000071fbe: call qword ptr [rax - 0x5e1f00d]; sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000007418e: call qword ptr [rax - 0x5e1f00d]; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x0000000000025b5e: call qword ptr [rax]; 
0x000000000005d1d5: call qword ptr [rbp + 0x18]; 
0x000000000005b48c: call qword ptr [rbp + 0x48]; 
0x000000000005d3a8: call qword ptr [rbp + 0x50]; 
0x0000000000074738: call qword ptr [rbp - 0x77]; 
0x0000000000078715: call qword ptr [rbp]; 
0x00000000000162a2: call qword ptr [rbx + 0x10]; 
0x000000000005ce52: call qword ptr [rbx + 0x40]; 
0x000000000004c46d: call qword ptr [rbx + 0x45]; 
0x000000000001e39d: call qword ptr [rbx + 0x48]; 
0x000000000005edd2: call qword ptr [rbx + 0x50]; 
0x000000000005b9d7: call qword ptr [rbx - 0x77]; 
0x000000000006d54c: call qword ptr [rbx]; 
0x00000000000202b7: call qword ptr [rcx]; 
0x0000000000031d51: call qword ptr [rdi + 0x3f]; 
0x000000000005eada: call qword ptr [rdi + 0x40]; 
0x000000000005cd77: call qword ptr [rdi + 0x48]; 
0x000000000006553e: call qword ptr [rdi + 0x4c]; 
0x000000000003170c: call qword ptr [rdi]; 
0x000000000005e24b: call qword ptr [rsi + 8]; 
0x000000000007646d: call qword ptr [rsi - 8]; 
0x000000000007b3c2: call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x000000000001e91f: call rax; 
0x000000000001edfc: call rbx; 
0x000000000005e3ca: call rcx; 
0x000000000007b3c3: call rcx; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x00000000000323c1: call rdi; 
0x000000000006d2cf: call rdx; 
0x0000000000043b73: call rsp; 
0x000000000001edf1: cdq; add eax, 0x4cef8900; mov edx, ebp; mov rsi, r12; call rbx; 
0x0000000000067596: cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x0000000000067808: cdq; idiv rsi; ret; 
0x000000000005f78c: cdq; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000002b494: cdq; or byte ptr [rax], al; mov rdi, rbp; syscall; 
0x00000000000672c6: cdq; xor eax, edx; sub eax, edx; ret; 
0x00000000000677f8: cdq; xor rax, rdx; sub rax, rdx; ret; 
0x000000000001e54c: cdqe; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; add eax, 1; ret; 
0x0000000000057a6e: cdqe; pop r12; pop r13; ret; 
0x00000000000199e6: cdqe; ret; 
0x000000000004bd98: clc; add al, 0xf; xchg eax, esi; ret 0xf980; 
0x000000000006a621: clc; add al, byte ptr [rcx + 0x5c]; ret; 
0x000000000006a5f0: clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000005d254: clc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x00000000000680dd: clc; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004ed21: clc; add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000001629b: clc; add dh, byte ptr [rbp + 6]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000006dd14: clc; add dh, byte ptr [rbp + 8]; xor eax, eax; ret; 
0x00000000000724f1: clc; add dh, byte ptr [rdi + 0x13]; add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x0000000000034cd6: clc; add dword ptr [rcx - 0x7d], eax; fdivr st(7); mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000005f1bd: clc; add dword ptr [rdi + rcx + 0x48], esi; sub eax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000003d0d7: clc; add edi, 0x3ff; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d191: clc; add edi, 0x7f; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000001e1a5: clc; and eax, 0x7f; ret; 
0x0000000000043f40: clc; and eax, 0xdfff; ret; 
0x0000000000048651: clc; and eax, 0xffffff; ret; 
0x000000000001e553: clc; and eax, 1; add eax, 1; ret; 
0x000000000001ddb9: clc; and eax, 1; ret; 
0x000000000001e1ea: clc; and edx, 0x5f; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000047f95: clc; bswap eax; ret; 
0x0000000000021f47: clc; call 0x21bc0; add rsp, 8; ret; 
0x0000000000067595: clc; cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x00000000000672c5: clc; cdq; xor eax, edx; sub eax, edx; ret; 
0x000000000001e445: clc; cmp rsi, 1; je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x0000000000067806: clc; cqo; idiv rsi; ret; 
0x00000000000677f6: clc; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000044e6c: clc; dec dword ptr [rdi]; test ah, bh; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000077780: clc; dec dword ptr [rdi]; xchg eax, esp; ret 0x8b4d; 
0x00000000000746c5: clc; div dword ptr [rbp + 0x37]; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000074764: clc; div dword ptr [rbp + 0x38]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005b9fd: clc; div dword ptr [rbp + 0x3f]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000002d123: clc; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000005c8d4: clc; fidiv dword ptr [rax + rcx - 0x3d]; nop dword ptr [rax]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c776: clc; fidiv dword ptr [rbp + 0x22]; mov rax, r8; syscall; 
0x0000000000023f9b: clc; fidiv dword ptr [rbp + 0x41]; mov eax, 0x11a; syscall; 
0x000000000006c11f: clc; fidiv dword ptr [rbp + 0xd]; mov rax, r8; syscall; 
0x0000000000023447: clc; fidiv dword ptr [rbp + 0xd]; test esi, esi; jne 0x23458; mov eax, 0x11c; syscall; 
0x0000000000023619: clc; fidiv dword ptr [rbp + 0xe]; test edx, edx; jne 0x2362b; mov eax, 0xfd; syscall; 
0x0000000000023401: clc; fidiv dword ptr [rbp + 0xe]; test r8, r8; jne 0x23413; mov eax, 0xe8; syscall; 
0x000000000006c1d4: clc; fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x000000000006b545: clc; fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000006c2a9: clc; fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d90b: clc; fidiv dword ptr [rbp + 9]; mov rax, r8; syscall; 
0x000000000005e65f: clc; fidiv dword ptr [rbp + rbp + 0x5b]; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000006d24f: clc; fidiv dword ptr [rbp + rcx + 0x48]; add esp, 8; ret; 
0x000000000006ed07: clc; fidiv dword ptr [rbp - 0x1e]; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed07: clc; fidiv dword ptr [rbp - 0x1e]; mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000703a1: clc; fidiv dword ptr [rbp - 0x28]; mov esi, 1; mov rax, r8; syscall; 
0x00000000000703a1: clc; fidiv dword ptr [rbp - 0x28]; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006f0a6: clc; fidiv dword ptr [rbp - 0x2d]; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006fc94: clc; fidiv dword ptr [rbp - 0x2f]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a7: clc; fidiv dword ptr [rbp - 0x31]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a7: clc; fidiv dword ptr [rbp - 0x31]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005c868: clc; fidiv dword ptr [rbp - 0x32]; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000006cc39: clc; fidiv dword ptr [rbp - 0x3d]; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006d03f: clc; fidiv dword ptr [rbp - 0x3e]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ee0a: clc; fidiv dword ptr [rbp - 0x3f]; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ea0a: clc; fidiv dword ptr [rbp - 0x43]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006bfba: clc; fidiv dword ptr [rbp - 0x76]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b11: clc; fidiv dword ptr [rbx + rdi + 0x44]; mov eax, eax; pop rbx; ret; 
0x000000000005f753: clc; fidiv dword ptr [rcx + rdi + 0x44]; mov eax, eax; add rsp, 8; ret; 
0x000000000006d06a: clc; fimul dword ptr [rdi]; test dword ptr [rdi + rdi*8 - 1], edx; dec dword ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006cdda: clc; fimul dword ptr [rdi]; test dword ptr [rsi + 0x4cfffffc], eax; mov eax, eax; mov rsi, rdx; syscall; 
0x000000000003fa61: clc; fnstsw ax; test ah, 4; jne 0x3fa60; fstp st(1); ret; 
0x0000000000038494: clc; imul eax, dword ptr [rdi], 0x590ff200; retf 0xff2; pop rcx; ret 0xff2; 
0x000000000002d28d: clc; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2cd: clc; jne 0x2d2c0; fstp st(1); ret; 
0x0000000000069099: clc; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x000000000007aeb2: clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000006f627: clc; lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x0000000000019d87: clc; mov dword ptr [r10 - 4], edx; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x0000000000074626: clc; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000005c08a: clc; mov eax, 0x8a; syscall; 
0x000000000001f95a: clc; mov eax, 3; syscall; 
0x0000000000034caf: clc; mov eax, r8d; ret; 
0x000000000005e172: clc; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c74b: clc; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x0000000000045186: clc; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x00000000000328b4: clc; mov esp, 0xff20007; pop rcx; ret 0x96eb; 
0x000000000007440a: clc; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000006d493: clc; mov rdx, r10; syscall; 
0x00000000000338f5: clc; movapd xmm0, xmm2; ret; 
0x0000000000030b47: clc; movd xmm0, ecx; ret; 
0x000000000003f356: clc; movq xmm0, rax; ret; 
0x000000000002d11d: clc; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d219: clc; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000007a6f6: clc; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000017e69: clc; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000018469: clc; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000005bd20: clc; movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x0000000000050234: clc; movsxd rsi, edx; mov rax, r12; syscall; 
0x000000000002d21f: clc; mulsd xmm0, xmm1; ret; 
0x0000000000033666: clc; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x0000000000067367: clc; or dword ptr [rsi - 0x4a], esi; xor r8d, r8d; mov eax, r8d; ret; 
0x000000000007aec2: clc; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000001e1ba: clc; or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000068ef6: clc; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000068a02: clc; pop rbx; ret; 
0x0000000000058744: clc; ret 0xfffe; 
0x000000000001846f: clc; ret; 
0x0000000000047fa5: clc; rol ax, 8; ret; 
0x000000000006a69d: clc; sar rax, 2; ret; 
0x000000000002225b: clc; std; jbe 0x22268; pop rbx; ret; 
0x000000000006d578: clc; sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000005014e: clc; syscall; 
0x000000000005bc91: clc; test dword ptr [rdi], 0x9885; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x000000000006f2e5: clc; test edi, edi; js 0x6f2f8; mov edx, 0xb; cmovne eax, edx; ret; 
0x000000000006a03d: clc; test sil, sil; jne 0x6a048; pop rbp; ret; 
0x0000000000035604: clc; xchg dword ptr [rdi], eax; add dl, dh; divps xmm0, xmm1; ret; 
0x00000000000724f9: clc; xor eax, 0xa7840f; add byte ptr [rax], al; ret; 
0x000000000007aeb7: clc; xor eax, eax; ret; 
0x0000000000044e70: cld; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000030bd6: cld; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x00000000000694b8: cld; call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a28: cld; call 0x69170; mov rax, r12; pop r12; ret; 
0x00000000000742b3: cld; cmove eax, edi; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000033842: cld; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x0000000000019d8b: cld; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x000000000004f085: cld; cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000004f413: cld; dec dword ptr [rax - 0x73]; cmp eax, 0x67b38; call 0x6b480; mov eax, 0x39; syscall; 
0x0000000000052abf: cld; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x00000000000614f9: cld; dec dword ptr [rax - 0x77]; ret 0x8941; 
0x000000000004fd2e: cld; dec dword ptr [rax - 0x77]; ret 0xffb8; 
0x000000000004fa17: cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000051bf1: cld; dec dword ptr [rax - 0x7b]; sal byte ptr [rsi + rdx*2 + 0x48], 0x89; ret; 
0x000000000005055d: cld; dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rcx*2 + 0x48], 0x89; ret; 
0x000000000002d153: cld; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000046dde: cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000046be4: cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret; 
0x000000000004f4d4: cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000045da5: cld; jmp qword ptr [rsi + 0xf]; 
0x000000000005c43c: cld; jmp qword ptr [rsi - 0x70]; 
0x000000000005b8a7: cld; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000007b2ab: cld; lea rax, [rdi + 1]; ret; 
0x000000000007b171: cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003abf5: cld; movaps xmm0, xmm1; ret; 
0x000000000003f3a1: cld; movd xmm0, eax; ret; 
0x000000000007a6fc: cld; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000030b5d: cld; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d14d: cld; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002d247: cld; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000006e330: cld; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000002d24d: cld; mulss xmm0, xmm1; ret; 
0x000000000006ecd2: cld; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000004f28d: cld; pop rbx; pop rbp; ret; 
0x000000000003395d: cld; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x000000000003801f: cld; ret 0xfbb4; 
0x0000000000017e6f: cld; ret; 
0x0000000000052858: cld; test edx, edx; jns 0x5283d; mov dword ptr [r8], 0xffffffff; ret; 
0x0000000000023161: cli; adc cl, byte ptr [rax + 0x29]; ret 0x6948; 
0x000000000005ab00: cli; adc cl, byte ptr [rax + 0x29]; ret 0xb848; 
0x0000000000070cf1: cli; adc dword ptr [rax + 0x29], ecx; ret 0x6948; 
0x00000000000438f7: cli; add al, 0x74; or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000070b99: cli; add eax, 0x8349177e; rol dword ptr [rsi], 0x41; mov byte ptr [rcx], 0; ret; 
0x000000000005d193: cli; add qword ptr [rdi + 8], rsi; ret; 
0x000000000001e56c: cli; and byte ptr [rsi + 8], bh; ret; 
0x000000000004a803: cli; bswap edi; mov dword ptr [rsi], edi; ret; 
0x000000000002345a: cli; call 0x21bc0; add rsp, 8; ret; 
0x0000000000071fbd: cli; call qword ptr [rax - 0x5e1f00d]; sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000007418d: cli; call qword ptr [rax - 0x5e1f00d]; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x000000000004f4d3: cli; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000006f4d3: cli; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007057e: cli; cmovs ebp, dword ptr [rcx]; ret 0x8948; 
0x000000000006e3e3: cli; cmp dword ptr [rdi], 0x80; jg 0x6e3f0; xor eax, eax; ret; 
0x0000000000047143: cli; cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x0000000000073d83: cli; cmp esi, 1; je 0x73d90; xor eax, eax; ret; 
0x0000000000022de3: cli; cmp qword ptr [rip + 0x93f8c], 0; je 0x22df0; ret; 
0x0000000000021bc3: cli; cmp rdi, -0x1000; ja 0x21bd8; mov rax, rdi; ret; 
0x000000000003fa73: cli; cvtsd2si rax, xmm0; ret; 
0x000000000003fa83: cli; cvtss2si rax, xmm0; ret; 
0x0000000000071dc1: cli; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x00000000000754bb: cli; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x000000000007af90: cli; fabs; fxch st(1); fpatan; ret; 
0x000000000003a973: cli; fld dword ptr [rip + 0x74bd6]; ret; 
0x0000000000017e83: cli; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3f3: cli; fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000003fba3: cli; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbd3: cli; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x0000000000018483: cli; fld xword ptr [rsp + 8]; ret; 
0x000000000007afa7: cli; fpatan; ret; 
0x000000000001ef23: cli; hlt; ret; 
0x000000000005026a: cli; je 0x502c3; movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000028a9f: cli; jg 0x28ab1; xchg dword ptr [rdi + rdx*8 - 0x76bb0001], eax; ret; 
0x0000000000044e92: cli; jle 0x44f0c; ret 0x8348; 
0x000000000005c443: cli; jmp qword ptr [rdi + 0x18]; 
0x000000000006d4d4: cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000075375: cli; jmp qword ptr [rsi + 0xf]; 
0x000000000006f21c: cli; jmp qword ptr [rsi - 0x70]; 
0x000000000001f693: cli; jmp rdi; 
0x000000000004efa3: cli; lea eax, [rdi - 1]; mov qword ptr [rip + 0x67e8a], rax; ret; 
0x0000000000045946: cli; lea eax, [rdx + 1]; ret; 
0x0000000000045966: cli; lea eax, [rdx + 2]; cmp rsi, rcx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000001dca3: cli; lea edx, [rdi - 0x21]; cmp edx, 0x5d; jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000001dd33: cli; lea edx, [rdi - 0x30]; cmp edx, 9; ja 0x1dd48; mov eax, 1; ret; 
0x000000000004bc73: cli; lea rax, [rip + 0x692a5]; ret; 
0x0000000000029323: cli; lea rax, [rip + 0x8a875]; ret; 
0x000000000001db33: cli; lea rax, [rip + 0x96205]; ret; 
0x000000000001db23: cli; lea rax, [rip + 0x9620d]; ret; 
0x000000000001dae3: cli; lea rax, [rip + 0x96245]; ret; 
0x000000000006fcb3: cli; lock dec dword ptr [rdi]; ret; 
0x0000000000070353: cli; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000006bda3: cli; mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x0000000000050933: cli; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000006c353: cli; mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x000000000006bbe3: cli; mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x0000000000022c03: cli; mov eax, 0x1000; ret; 
0x00000000000238e3: cli; mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000238e3: cli; mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x000000000006e403: cli; mov eax, 0x16; ret; 
0x0000000000070293: cli; mov eax, 0x18; syscall; 
0x0000000000070293: cli; mov eax, 0x18; syscall; ret; 
0x000000000005b6a3: cli; mov eax, 0x23; ret; 
0x00000000000508d3: cli; mov eax, 0x26; ret; 
0x0000000000074b33: cli; mov eax, 0x27; syscall; 
0x0000000000074b33: cli; mov eax, 0x27; syscall; ret; 
0x000000000005b693: cli; mov eax, 0x40; ret; 
0x0000000000073d73: cli; mov eax, 0x64; syscall; 
0x0000000000073d73: cli; mov eax, 0x64; syscall; ret; 
0x0000000000074b73: cli; mov eax, 0x66; syscall; 
0x0000000000074b73: cli; mov eax, 0x66; syscall; ret; 
0x00000000000749b3: cli; mov eax, 0x68; syscall; 
0x00000000000749b3: cli; mov eax, 0x68; syscall; ret; 
0x00000000000749a3: cli; mov eax, 0x6b; syscall; 
0x00000000000749a3: cli; mov eax, 0x6b; syscall; ret; 
0x0000000000074993: cli; mov eax, 0x6c; syscall; 
0x0000000000074993: cli; mov eax, 0x6c; syscall; ret; 
0x0000000000074b43: cli; mov eax, 0x6e; syscall; 
0x0000000000074b43: cli; mov eax, 0x6e; syscall; ret; 
0x0000000000074b23: cli; mov eax, 0x79; xor edi, edi; syscall; 
0x0000000000074b23: cli; mov eax, 0x79; xor edi, edi; syscall; ret; 
0x00000000000753c3: cli; mov eax, 0xa2; syscall; 
0x00000000000753c3: cli; mov eax, 0xa2; syscall; ret; 
0x0000000000024303: cli; mov eax, 0xc2; syscall; 
0x0000000000024323: cli; mov eax, 0xc3; syscall; 
0x0000000000045d13: cli; mov eax, 0xffffffff; ret; 
0x000000000004b113: cli; mov eax, 3; syscall; 
0x000000000004b113: cli; mov eax, 3; syscall; ret; 
0x000000000006bb93: cli; mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbb3: cli; mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbd3: cli; mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbc3: cli; mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000015ca3: cli; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000005d0d3: cli; mov eax, dword ptr [rdi + 0x90]; not eax; shr eax, 0x1f; ret; 
0x00000000000507f3: cli; mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006b213: cli; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000001e5f3: cli; mov eax, dword ptr [rdi + 8]; ret; 
0x000000000006be33: cli; mov eax, dword ptr [rdi + 8]; test eax, eax; js 0x6be40; xor eax, eax; ret; 
0x000000000006bc53: cli; mov eax, dword ptr [rdi]; and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bcd3: cli; mov eax, dword ptr [rdi]; and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004a7e3: cli; mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x000000000006bce3: cli; mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000507e3: cli; mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000006bc63: cli; mov eax, dword ptr [rdi]; shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0b3: cli; mov eax, dword ptr [rdi]; shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x000000000005d0c3: cli; mov eax, dword ptr [rdi]; shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x000000000006b573: cli; mov eax, dword ptr [rdi]; test eax, eax; js 0x6b580; ret; 
0x0000000000049023: cli; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000006bd93: cli; mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000001e1a3: cli; mov eax, edi; and eax, 0x7f; ret; 
0x000000000001e1e8: cli; mov eax, edi; and edx, 0x5f; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000047f93: cli; mov eax, edi; bswap eax; ret; 
0x00000000000672c3: cli; mov eax, edi; cdq; xor eax, edx; sub eax, edx; ret; 
0x000000000001e1b8: cli; mov eax, edi; or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000047fa3: cli; mov eax, edi; rol ax, 8; ret; 
0x0000000000048641: cli; mov edi, 0x40000000; movzx edi, bh; cmova eax, edi; ret; 
0x000000000006d203: cli; mov edx, dword ptr [rip + 0x49d46]; test edx, edx; jne 0x6d210; ret; 
0x000000000002a357: cli; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x00000000000507c3: cli; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000005b1e3: cli; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x00000000000242a3: cli; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000000242c3: cli; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000000023be3: cli; mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023bc3: cli; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000242e3: cli; mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000023d83: cli; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000005abc6: cli; mov r10d, 8; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba6: cli; mov r10d, 8; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005d0e3: cli; mov rax, qword ptr [rdi + 0x60]; ret; 
0x0000000000015c93: cli; mov rax, qword ptr [rdi + 0x78]; ret; 
0x000000000006bba3: cli; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000006bc23: cli; mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000052803: cli; mov rax, qword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000001ea63: cli; mov rax, qword ptr [rdi]; ret; 
0x000000000005b183: cli; mov rax, qword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005b473: cli; mov rax, qword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000001f463: cli; mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x00000000000235e3: cli; mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006f113: cli; mov rax, qword ptr fs:[0]; ret; 
0x0000000000067803: cli; mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000000677f3: cli; mov rax, rdi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000017e53: cli; movapd xmm0, xmm1; ret; 
0x000000000003366a: cli; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000002e6f3: cli; movd eax, xmm0; shr eax, 0x1f; ret; 
0x0000000000017e63: cli; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000018463: cli; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000002e6e3: cli; movq rax, xmm0; shr rax, 0x3f; ret; 
0x000000000003a953: cli; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x000000000003a963: cli; movss xmm0, dword ptr [rip + 0x74be4]; ret; 
0x00000000000414c3: cli; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x0000000000059b73: cli; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000059b73: cli; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000023cd3: cli; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000024343: cli; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x000000000001f4d3: cli; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x0000000000024233: cli; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x000000000001fbe3: cli; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x0000000000022153: cli; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x0000000000074c63: cli; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x0000000000023363: cli; movsxd rdi, edi; sub rsp, 8; mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000023603: cli; movsxd rdi, edi; sub rsp, 8; mov eax, 0x126; mov rdx, rdi; syscall; 
0x0000000000024133: cli; movsxd rsi, esi; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x000000000004a7d3: cli; movzx eax, word ptr [rdi]; rol ax, 8; movzx eax, ax; ret; 
0x000000000002e703: cli; movzx eax, word ptr [rsp + 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000071a67: cli; or byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000072bf8: cli; or cl, byte ptr [rax + 0x29]; ret 0x8d48; 
0x000000000001dd38: cli; or dword ptr [rdi + 0xc], esi; mov eax, 1; ret; 
0x000000000005d1a3: cli; or dword ptr [rdi], 0x20; ret; 
0x000000000006741f: cli; or dword ptr [rsi - 0x52], esi; xor r8d, r8d; mov rax, r8; ret; 
0x000000000003f3d3: cli; pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b3: cli; pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000001dca8: cli; pop rbp; jbe 0x1dcb0; xor eax, eax; ret; 
0x0000000000059be3: cli; push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000059b93: cli; push rbp; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000018453: cli; ret; 
0x000000000004a7f3: cli; rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000003fbb3: cli; sqrtsd xmm0, xmm0; ret; 
0x000000000003fbc3: cli; sqrtss xmm0, xmm0; ret; 
0x000000000006a022: cli; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000001dc83: cli; sub edi, 0x20; xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x000000000001dc43: cli; sub edi, 0x21; xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x000000000001dc23: cli; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000001dd13: cli; sub edi, 0x41; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000001dc63: cli; sub edi, 0x61; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000071fc3: cli; sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000003a683: cli; sub rsp, 8; call 0x3cbe0; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003a6a3: cli; sub rsp, 8; call 0x3cca0; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x0000000000074d13: cli; sub rsp, 8; mov eax, 0x16; syscall; 
0x0000000000059e43: cli; sub rsp, 8; mov eax, 0x18; syscall; 
0x00000000000435e3: cli; sub rsp, 8; mov eax, 0x1b; syscall; 
0x000000000004f9c3: cli; sub rsp, 8; mov eax, 0x3b; syscall; 
0x0000000000042f73: cli; sub rsp, 8; mov eax, 0x3f; syscall; 
0x00000000000221a3: cli; sub rsp, 8; mov eax, 0x43; syscall; 
0x0000000000075473: cli; sub rsp, 8; mov eax, 0x4c; syscall; 
0x0000000000074243: cli; sub rsp, 8; mov eax, 0x50; syscall; 
0x0000000000060d63: cli; sub rsp, 8; mov eax, 0x52; syscall; 
0x00000000000750c3: cli; sub rsp, 8; mov eax, 0x54; syscall; 
0x0000000000074c13: cli; sub rsp, 8; mov eax, 0x56; syscall; 
0x0000000000060d33: cli; sub rsp, 8; mov eax, 0x57; syscall; 
0x0000000000075383: cli; sub rsp, 8; mov eax, 0x58; syscall; 
0x0000000000024113: cli; sub rsp, 8; mov eax, 0x63; syscall; 
0x0000000000075203: cli; sub rsp, 8; mov eax, 0x70; syscall; 
0x0000000000041213: cli; sub rsp, 8; mov eax, 0x76; syscall; 
0x00000000000411f3: cli; sub rsp, 8; mov eax, 0x78; syscall; 
0x0000000000023253: cli; sub rsp, 8; mov eax, 0x7d; syscall; 
0x0000000000023233: cli; sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000005b4f3: cli; sub rsp, 8; mov eax, 0x7f; mov esi, 8; syscall; 
0x0000000000023a53: cli; sub rsp, 8; mov eax, 0x87; syscall; 
0x0000000000043603: cli; sub rsp, 8; mov eax, 0x95; syscall; 
0x0000000000043873: cli; sub rsp, 8; mov eax, 0x96; syscall; 
0x0000000000043893: cli; sub rsp, 8; mov eax, 0x98; syscall; 
0x0000000000024213: cli; sub rsp, 8; mov eax, 0x99; syscall; 
0x0000000000023a73: cli; sub rsp, 8; mov eax, 0x9b; syscall; 
0x0000000000023273: cli; sub rsp, 8; mov eax, 0xa1; syscall; 
0x00000000000741b3: cli; sub rsp, 8; mov eax, 0xa3; syscall; 
0x00000000000239b3: cli; sub rsp, 8; mov eax, 0xa6; xor esi, esi; syscall; 
0x00000000000240a3: cli; sub rsp, 8; mov eax, 0xa8; syscall; 
0x0000000000023eb3: cli; sub rsp, 8; mov eax, 0xaa; syscall; 
0x0000000000042733: cli; sub rsp, 8; mov eax, 0xab; syscall; 
0x0000000000023953: cli; sub rsp, 8; mov eax, 0xaf; syscall; 
0x00000000000243f3: cli; sub rsp, 8; mov eax, 0xc5; syscall; 
0x0000000000024413: cli; sub rsp, 8; mov eax, 0xc6; syscall; 
0x0000000000019a73: cli; sub rsp, 8; mov edi, 0x53; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a93: cli; sub rsp, 8; mov edi, 0x54; call 0x19ae0; add rsp, 8; ret; 
0x000000000005c283: cli; sub rsp, 8; mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023dc3: cli; sub rsp, 8; mov edi, edi; mov eax, 0x7a; syscall; 
0x0000000000023da3: cli; sub rsp, 8; mov edi, edi; mov eax, 0x7b; syscall; 
0x0000000000023503: cli; sub rsp, 8; mov edi, edi; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023903: cli; sub rsp, 8; mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005bf53: cli; sub rsp, 8; mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005b9b3: cli; sub rsp, 8; mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000005bfd3: cli; sub rsp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x0000000000023973: cli; sub rsp, 8; mov esi, esi; mov eax, 0xb0; syscall; 
0x0000000000074263: cli; sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bf3: cli; sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023993: cli; sub rsp, 8; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000000024363: cli; sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024393: cli; sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022123: cli; sub rsp, 8; mov r10, rcx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x0000000000059da3: cli; sub rsp, 8; mov rdi, -0x26; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023213: cli; sub rsp, 8; mov rdi, -0xc; call 0x21bc0; add rsp, 8; ret; 
0x00000000000241d3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000241b3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x00000000000240f3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x132; syscall; 
0x00000000000742f3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000005ac03: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x24; syscall; 
0x000000000005adf3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x0000000000022103: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000074863: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x00000000000412e3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x62; syscall; 
0x00000000000749c3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074b03: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b53: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x0000000000059c83: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059ca3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x93; syscall; 
0x0000000000059de3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000043623: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x97; syscall; 
0x00000000000231f3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236d3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xac; syscall; 
0x0000000000024433: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000059b53: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000071f23: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000071d83: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x0000000000043e33: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x0000000000043ac3: cli; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x000000000005bf73: cli; sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023653: cli; sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000411c3: cli; sub rsp, 8; movsxd rdi, edi; mov esi, esi; mov eax, 0x8c; syscall; 
0x00000000000240c3: cli; sub rsp, 8; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000075663: cli; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a23: cli; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000236f3: cli; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000024153: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023ed3: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022173: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac23: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f63: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f33: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023553: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000075143: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023683: cli; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000435c3: cli; sub rsp, 8; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000236b3: cli; sub rsp, 8; movsxd rdx, edx; mov eax, 0xad; syscall; 
0x00000000000753a3: cli; sub rsp, 8; movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x0000000000074193: cli; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x00000000000239d3: cli; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000024083: cli; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000023433: cli; sub rsp, 8; movsxd rsi, esi; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000002d163: cli; subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002d173: cli; subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000023372: cli; syscall; 
0x0000000000043f13: cli; test dil, 0x80; jne 0x43f20; movzx eax, dil; ret; 
0x0000000000028e63: cli; test dil, 1; je 0x28e70; xor eax, eax; ret; 
0x000000000001fcf3: cli; test edi, 0xfffff3ff; je 0x1fd08; mov eax, 0xffffffff; ret; 
0x000000000001e0d3: cli; test edi, edi; jne 0x1e0e0; xor eax, eax; ret; 
0x000000000002b243: cli; test edi, edi; js 0x2b268; je 0x2b258; mov dword ptr [rip + 0x8bd28], 0; ret; 
0x000000000006b2a3: cli; test esi, esi; jne 0x6b2b0; xor eax, eax; ret; 
0x0000000000023d53: cli; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; 
0x0000000000023d53: cli; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; ret; 
0x0000000000073c83: cli; test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; 
0x0000000000073c83: cli; test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; ret; 
0x0000000000028ee5: cli; xor dword ptr [rsi + 0x1f], edi; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000001dbb3: cli; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x000000000001e083: cli; xor eax, eax; cmp edi, 0x1ffff; jbe 0x1e090; ret; 
0x000000000005b3a3: cli; xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000006dd33: cli; xor eax, eax; cmp rsi, rdi; sete al; ret; 
0x000000000006f653: cli; xor eax, eax; mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x00000000000508c3: cli; xor eax, eax; mov ecx, 0x2a; rep stosq qword ptr [rdi], rax; ret; 
0x000000000006f643: cli; xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000023033: cli; xor eax, eax; ret; 
0x000000000006ece3: cli; xor eax, eax; xchg dword ptr [rdi], eax; cmp eax, 3; je 0x6ecf0; ret; 
0x0000000000018033: cli; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x000000000004fa16: cmc; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000003fb41: cmc; fnstsw ax; test ah, 4; jne 0x3fb40; fstp st(1); ret; 
0x000000000006a69a: cmc; sub rax, rdi; sar rax, 2; ret; 
0x000000000005e217: cmc; test r12, r12; je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000004864a: cmova eax, edi; ret; 
0x0000000000024689: cmova eax, edx; ret; 
0x0000000000023598: cmova edx, eax; mov eax, 0xd9; syscall; 
0x0000000000023597: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000072635: cmovae eax, edx; ret; 
0x0000000000023c4e: cmovae edx, ecx; movsxd rsi, dword ptr [rax + 8]; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x0000000000023c4d: cmovae r10, rcx; movsxd rsi, dword ptr [rax + 8]; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x0000000000045063: cmovb eax, edi; ret; 
0x000000000001e1c1: cmovb eax, edx; ret; 
0x0000000000045972: cmovbe eax, edx; ret; 
0x0000000000028ebb: cmove eax, eax; mov rax, r8; ret; 
0x00000000000742b4: cmove eax, edi; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002222e: cmove eax, edx; ret; 
0x000000000006734c: cmove eax, esi; mov eax, r8d; ret; 
0x0000000000042142: cmove ebx, eax; mov eax, 0x10; syscall; 
0x000000000005d1e0: cmove ecx, dword ptr [rcx + 0x5c415de0]; pop r13; ret; 
0x000000000002a355: cmove edi, edx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000005af12: cmove edx, eax; movsxd rdi, ebx; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000006f09c: cmove esi, edx; mov rax, r8; syscall; 
0x0000000000072b83: cmove esp, eax; add rsp, 0x18; pop rbx; mov rax, r12; pop r12; ret; 
0x0000000000072b82: cmove r12, rax; add rsp, 0x18; pop rbx; mov rax, r12; pop r12; ret; 
0x0000000000028eba: cmove r8, rax; mov rax, r8; ret; 
0x000000000006734b: cmove r8d, esi; mov eax, r8d; ret; 
0x000000000002222d: cmove rax, rdx; ret; 
0x0000000000042141: cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000002a354: cmove rdi, rdx; mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000005af11: cmove rdx, rax; movsxd rdi, ebx; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000006f09b: cmove rsi, r10; mov rax, r8; syscall; 
0x000000000003d0d5: cmovg edi, eax; add edi, 0x3ff; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d18f: cmovg edi, eax; add edi, 0x7f; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x0000000000021ae3: cmovg edx, eax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005a788: cmovg edx, edi; mov dword ptr [rax + 0x18], edx; mov eax, edx; sub eax, r8d; ret; 
0x0000000000021ae2: cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000001a7f5: cmovl eax, dword ptr [rcx]; inc dword ptr [rcx - 0x77]; test dword ptr [rcx - 0x73], 0x83410872; ret 0x4101; 
0x000000000005d170: cmovl ebp, dword ptr [rcx]; ror byte ptr [rax - 0x77], 6; mov rax, r8; ret; 
0x000000000003d126: cmovl edi, eax; add edi, 0x3ff; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d1d3: cmovl edi, eax; add edi, 0x7f; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x00000000000708d6: cmovne eax, eax; mov eax, r8d; ret; 
0x0000000000070273: cmovne eax, edx; add rsp, 8; ret; 
0x0000000000069375: cmovne eax, edx; ret; 
0x0000000000069aa7: cmovne eax, esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006bc05: cmovne esi, dword ptr [rcx]; ror byte ptr [rax + 0x29], 0xc8; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000074cbf: cmovne esp, eax; mov eax, r12d; pop r12; ret; 
0x0000000000074cbe: cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x00000000000708d5: cmovne r8d, eax; mov eax, r8d; ret; 
0x0000000000069374: cmovne rax, rdx; ret; 
0x0000000000069aa6: cmovne rax, rsi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001b129: cmovno eax, ecx; ret 0x309; 
0x000000000001b14c: cmovno eax, ecx; ret; 
0x000000000005e3d5: cmovns eax, dword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x00000000000411e5: cmovns eax, edx; add rsp, 8; ret; 
0x0000000000030b3d: cmovns edx, eax; and ecx, edx; movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000005e3d4: cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003fb93: cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x000000000006f68d: cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000007057f: cmovs ebp, dword ptr [rcx]; ret 0x8948; 
0x0000000000032935: cmovs ebx, dword ptr [rax + 0x4100ff2]; ret 0x8b48; 
0x0000000000032974: cmovs ebx, dword ptr [rax + 0x4590ff2]; ret 0xbfeb; 
0x000000000006b7df: cmovs ecx, dword ptr [rbx - 0x74b7f7b0]; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000003393d: cmovs edx, eax; and ecx, edx; movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x00000000000221d6: cmovs esi, eax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x00000000000221d5: cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000059b67: cmp ah, 0xff; add rsp, 8; ret; 
0x0000000000059bb3: cmp ah, 0xff; pop rbp; ret; 
0x000000000001b076: cmp ah, byte ptr [rcx]; ret 0xfa31; 
0x0000000000074499: cmp al, 0; add byte ptr [rax], al; mov edi, 1; syscall; 
0x000000000001f4df: cmp al, 0; add byte ptr [rax], al; nop dword ptr [rax + rax]; mov rax, rdx; syscall; 
0x000000000007b390: cmp al, 0; add byte ptr [rax], al; syscall; 
0x000000000006d416: cmp al, 0; add byte ptr [rax], al; xor edi, edi; nop dword ptr [rax]; mov rax, rdx; syscall; 
0x000000000001efc4: cmp al, 0x20; cmp eax, 0x83481774; ret; 
0x0000000000029d2b: cmp al, 0x24; add byte ptr [rax + 0xf], cl; call 0x1891f; jmp qword ptr [rsi + 0xf]; 
0x000000000004f64b: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f663; leave; ret; 
0x000000000004f7e5: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f80b; leave; ret; 
0x000000000004f97b: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f993; leave; ret; 
0x000000000005de79: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005ff31: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000069c13: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x69c7b; add rsp, 0x38; ret; 
0x0000000000071ce7: cmp al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000063eb7: cmp al, 0x31; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005b7e0: cmp al, 0x37; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000027213: cmp al, 0x3d; ret 0; 
0x0000000000050140: cmp al, 0x40; add al, byte ptr [rax]; nop dword ptr [rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r15; syscall; 
0x000000000005c95a: cmp al, 0x48; add esp, 0x10; pop rbx; ret; 
0x00000000000365d0: cmp al, 0x77; xor eax, 0x5100ff2; adc eax, 0xf2000787; divps xmm0, xmm1; ret; 
0x000000000006c52f: cmp al, 0x85; sal byte ptr [rax + rcx + 0xf], cl; mov dh, 0x50; test dl, dl; je 0x6c540; ret; 
0x000000000001a34e: cmp al, 0x89; ret 0x394c; 
0x0000000000048fd9: cmp al, 0xc0; setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x0000000000062ee0: cmp al, 0xc0; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000067ac7: cmp al, 0xc2; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000031953: cmp al, 0xf2; movups xmm2, xmmword ptr [rip + 0x7c9b4]; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x000000000005b2ff: cmp al, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x0000000000060540: cmp al, 5; add byte ptr [rbx + rcx*4 + 0x35], al; mov esi, 0x8900053b; ret; 
0x000000000007b1c8: cmp al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000002c834: cmp al, byte ptr [rax]; je 0x2c839; hlt; sub rax, rdi; ret; 
0x000000000003ba29: cmp al, byte ptr [rdi]; add bl, dh; divps xmm1, xmm0; movss dword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000003ba05: cmp al, dh; je 0x3ba0a; ret; 
0x000000000003ba04: cmp al, sil; je 0x3ba0a; ret; 
0x000000000005e13a: cmp bh, ah; dec dword ptr [rax - 0x77]; ret; 
0x000000000005b462: cmp bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x0000000000041b53: cmp bh, bh; rol byte ptr [rcx - 0x77], 1; ret 0x79e9; 
0x0000000000041ad6: cmp bh, bh; rol byte ptr [rcx - 0x77], 1; ret 0xc085; 
0x000000000001eaae: cmp byte ptr [r10], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x98490]; syscall; 
0x000000000005ed98: cmp byte ptr [r8 + 0x39], cl; sub byte ptr [r9 + r10 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000005c9e5: cmp byte ptr [r8 + 0x39], r9b; sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005d373: cmp byte ptr [r8 + 0x39], r9b; sub byte ptr [r13 + rdx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005c9e6: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005d374: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r13 + rdx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005ed99: cmp byte ptr [rax + 0x39], cl; sub byte ptr [r9 + r10 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000074767: cmp byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x0000000000019c7d: cmp byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0xc148; 
0x0000000000054d49: cmp byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000075621: cmp byte ptr [rax - 0x75], cl; and al, 0x48; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x0000000000042924: cmp byte ptr [rax - 0x77], cl; ret; 
0x000000000005739a: cmp byte ptr [rax - 0x7d], cl; sar byte ptr [rax], 0x83; ret 0x4501; 
0x0000000000069ad6: cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x0000000000069818: cmp byte ptr [rax], 0; jne 0x69810; sub rax, rdi; ret; 
0x0000000000069874: cmp byte ptr [rax], 0; jne 0x69870; sub rax, rdi; ret; 
0x0000000000070a21: cmp byte ptr [rax], 0x2f; je 0x70b1a; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x0000000000022e78: cmp byte ptr [rax], 0xa; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x0000000000069ad7: cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000069819: cmp byte ptr [rax], al; jne 0x69810; sub rax, rdi; ret; 
0x0000000000069875: cmp byte ptr [rax], al; jne 0x69870; sub rax, rdi; ret; 
0x0000000000069371: cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x00000000000589a7: cmp byte ptr [rbp - 0x77], al; out 0xe9, eax; push rax; add dword ptr [rax], eax; add dh, dh; ret 0x7401; 
0x0000000000037041: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000002d38b: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x000000000006dd12: cmp byte ptr [rbx + 0x87502f8], al; xor eax, eax; ret; 
0x000000000004f418: cmp byte ptr [rbx + 6], bh; add al, ch; pop rdi; rol byte ptr [rcx], 0; mov eax, 0x39; syscall; 
0x000000000003fcd4: cmp byte ptr [rbx + rax], 0x2f; jne 0x3fcc8; lea rax, [rbx + rdx]; pop rbx; ret; 
0x0000000000052db7: cmp byte ptr [rbx - 0x7cb7fe3b], al; ret; 
0x0000000000049346: cmp byte ptr [rbx], 0; pop rbx; sete al; ret; 
0x000000000001db06: cmp byte ptr [rcx], al; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x0000000000043b58: cmp byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000007b223: cmp byte ptr [rcx], dh; rol bl, 0x90; mov rax, 0xf; syscall; 
0x000000000002f660: cmp byte ptr [rdi + 0x25], dh; ret; 
0x0000000000035d38: cmp byte ptr [rdi + 0x45], dh; call 0x3a540; mulss xmm0, dword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000018399: cmp byte ptr [rdi + 0x66], 0xf; outsb dx, byte ptr [rsi]; ror byte ptr [rax - 0x3f], 0xe8; and bl, ch; ret; 
0x0000000000018364: cmp byte ptr [rdi + 0x74], 0x18; mov dword ptr [rsp + 4], eax; movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000039f73: cmp byte ptr [rdi + 0x75], 0xb2; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000033760: cmp byte ptr [rdi + 0x77], 0x18; comiss xmm2, xmm1; jbe 0x33778; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000048f98: cmp byte ptr [rdi + 0xe], 0; jne 0x49008; cmp byte ptr [rdi + 0xf], 1; jne 0x49008; mov eax, 2; ret; 
0x0000000000048f9e: cmp byte ptr [rdi + 0xf], 1; jne 0x49008; mov eax, 2; ret; 
0x000000000003fc90: cmp byte ptr [rdi], 0; push rbx; mov rbx, rdi; jne 0x3fca0; pop rbx; ret; 
0x0000000000043ed6: cmp byte ptr [rdi], 0x2f; sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000002f637: cmp byte ptr [rdi], 0x74; sub eax, 0xf3c8280f; subps xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000070a22: cmp byte ptr [rdi], ch; je 0x70b1a; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x000000000005097c: cmp byte ptr [rdi], cl; adc dword ptr [rdi + 0x48], esp; movups xmmword ptr [rdi + 0x58], xmm5; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x000000000002c833: cmp byte ptr [rdx], 0; je 0x2c839; hlt; sub rax, rdi; ret; 
0x000000000001eaaf: cmp byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax + 0xda], bh; lea rdi, [rip + 0x98490]; syscall; 
0x000000000004710d: cmp byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; pop r12; ret; 
0x0000000000022e79: cmp byte ptr [rdx], cl; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x000000000002720c: cmp byte ptr [rip + 0xc0], 0x74; cmp al, 0x3d; ret 0; 
0x0000000000060b07: cmp byte ptr [rip - 0x3776b400], al; syscall; 
0x0000000000034a87: cmp byte ptr [rsi + 0x39], ah; ret 0x830f; 
0x000000000004209e: cmp byte ptr [rsi*2 + 0xb00c7eb], bl; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000004e59f: cmp byte ptr [rsi], 0xa; setne al; pop rbx; neg eax; ret; 
0x0000000000041299: cmp byte ptr [rsi], ah; jne 0x41273; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000004068e: cmp byte ptr [rsp + rsi*2], al; int 0x8b; jl 0x406b9; add al, 0x31; imul al; ret; 
0x000000000002af43: cmp ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000685e2: cmp ch, byte ptr [rcx - 5]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000016a10: cmp cl, bl; leave; ret; 
0x000000000007aa83: cmp cl, bl; ret; 
0x00000000000488d7: cmp cl, byte ptr [rax + 0x63]; ret 0x518d; 
0x00000000000390a2: cmp cl, byte ptr [rax + 7]; add dh, bl; ret; 
0x000000000001ce5f: cmp cl, byte ptr [rdi]; test byte ptr [rsi + rax - 0x7cb80000], bh; ret 0x4801; 
0x0000000000074e82: cmp cl, ch; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000002c634: cmp dl, 0x2f; jbe 0x2c5a9; mov r8d, 1; mov eax, r8d; ret; 
0x0000000000068b22: cmp dl, cl; je 0x68b10; movzx eax, dl; sub eax, ecx; ret; 
0x000000000003cc37: cmp dl, dh; subps xmm0, xmmword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000006fe63: cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x0000000000047ebe: cmp dword ptr [rax + 0x58], 0; je 0x47ed0; add rax, 0xa0; ret; 
0x0000000000036ee3: cmp dword ptr [rax + 0xff30007], esp; pop rcx; ret; 
0x000000000004209d: cmp dword ptr [rax], 0x1c; jne 0x4208d; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x0000000000041298: cmp dword ptr [rax], 0x26; jne 0x41273; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000001db05: cmp dword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000004f422: cmp dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000005c9e8: cmp dword ptr [rbp + 0x28], eax; je 0x5c9f7; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005d376: cmp dword ptr [rbp + 0x28], eax; je 0x5d390; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005ed9b: cmp dword ptr [rbx + 0x28], eax; je 0x5edb1; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000007a553: cmp dword ptr [rcx + 3], 0x540f4400; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000005f756: cmp dword ptr [rcx + rcx*4 - 0x40], eax; add rsp, 8; ret; 
0x000000000005d0a1: cmp dword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000005d0f7: cmp dword ptr [rdi + 0x20], 0; je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d081: cmp dword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000005cd6e: cmp dword ptr [rdi + 0x28], eax; je 0x5cd7a; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005ef2d: cmp dword ptr [rdi + 0x28], esi; setne dl; add edx, 1; xor esi, esi; mov rdi, rbx; call rax; 
0x000000000003df0d: cmp dword ptr [rdi + 0x40], esi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000060f41: cmp dword ptr [rdi + 0x60], 0; je 0x60f38; or dword ptr [rdi], 0x40; xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x00000000000310c6: cmp dword ptr [rdi + 0x67], esi; addss xmm0, dword ptr [rip + 0x7f977]; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x00000000000780e1: cmp dword ptr [rdi + 0xb0], 0; je 0x780f0; ret; 
0x000000000005b3a7: cmp dword ptr [rdi], 0; sete al; ret; 
0x000000000006e3e4: cmp dword ptr [rdi], 0x80; jg 0x6e3f0; xor eax, eax; ret; 
0x000000000006ad9a: cmp dword ptr [rdi], esi; jne 0x6ad90; mov rax, rdi; ret; 
0x000000000005c3c1: cmp dword ptr [rdx + 0x18], 0x3fffffff; jne 0x5c2eb; xor edx, edx; syscall; 
0x000000000006e3c3: cmp dword ptr [rdx + 0x30], ecx; jne 0x6e3d8; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000005c2de: cmp dword ptr [rdx + 8], 0x3fffffff; je 0x5c3c0; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005e139: cmp dword ptr [rdx], -4; dec dword ptr [rax - 0x77]; ret; 
0x000000000006f59b: cmp dword ptr [rdx], esi; je 0x6f5a6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000702eb: cmp dword ptr [rdx], esi; je 0x702f6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000022de5: cmp dword ptr [rip + 0x93f8c], 0; je 0x22df0; ret; 
0x0000000000043bcc: cmp dword ptr [rsi + 0xc], 2; je 0x43c18; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000076c03: cmp dword ptr [rsi - 0x76b7fffd], eax; ret 0xc031; 
0x0000000000028f41: cmp dword ptr [rsi], 0; lea rax, [rip + 0x89118]; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x000000000001e910: cmp dword ptr [rsp + 8], 0; je 0x1e925; mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x000000000006a115: cmp dx, r8w; jne 0x6a100; pop rbp; ret; 
0x000000000007432d: cmp eax, -0x10; je 0x74328; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000060d41: cmp eax, -0x15; jne 0x60d4f; mov eax, 0x54; syscall; 
0x0000000000071e21: cmp eax, -0x16; je 0x71e58; movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000005c8d3: cmp eax, -0x26; je 0x5c8e0; ret; 
0x000000000005f752: cmp eax, -0x26; je 0x5f790; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b10: cmp eax, -0x26; je 0x60b50; mov eax, r8d; pop rbx; ret; 
0x000000000006c703: cmp eax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006c831: cmp eax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1de: cmp eax, -0x26; je 0x6d1f8; ret; 
0x000000000006d24e: cmp eax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x0000000000015be2: cmp eax, -0x26; jne 0x15a1f; mov esi, 1; mov rax, r9; syscall; 
0x0000000000023400: cmp eax, -0x26; jne 0x23413; test r8, r8; jne 0x23413; mov eax, 0xe8; syscall; 
0x0000000000023446: cmp eax, -0x26; jne 0x23458; test esi, esi; jne 0x23458; mov eax, 0x11c; syscall; 
0x0000000000023618: cmp eax, -0x26; jne 0x2362b; test edx, edx; jne 0x2362b; mov eax, 0xfd; syscall; 
0x0000000000023f9a: cmp eax, -0x26; jne 0x23fe0; mov eax, 0x11a; syscall; 
0x000000000005c867: cmp eax, -0x26; jne 0x5c83a; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000006b544: cmp eax, -0x26; jne 0x6b550; xor esi, esi; mov rax, r9; syscall; 
0x000000000006b5a6: cmp eax, -0x26; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a6: cmp eax, -0x26; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000006bfb9: cmp eax, -0x26; jne 0x6bf48; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c041: cmp eax, -0x26; jne 0x6bf5e; mov esi, 1; mov rax, r8; syscall; 
0x000000000006c08a: cmp eax, -0x26; jne 0x6bf72; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c11e: cmp eax, -0x26; jne 0x6c130; mov rax, r8; syscall; 
0x000000000006c211: cmp eax, -0x26; jne 0x6c18c; mov rax, r8; syscall; 
0x000000000006c1d3: cmp eax, -0x26; jne 0x6c1dd; mov rax, r8; syscall; 
0x000000000006c24e: cmp eax, -0x26; jne 0x6c258; mov rax, r8; syscall; 
0x000000000006c2a8: cmp eax, -0x26; jne 0x6c2b5; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c775: cmp eax, -0x26; jne 0x6c79c; mov rax, r8; syscall; 
0x000000000006cdd9: cmp eax, -0x26; jne 0x6ca68; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ce39: cmp eax, -0x26; jne 0x6ca88; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006cda4: cmp eax, -0x26; jne 0x6cb0e; mov rax, r8; syscall; 
0x000000000006cc38: cmp eax, -0x26; jne 0x6cc00; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006cbf3: cmp eax, -0x26; jne 0x6cc00; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d069: cmp eax, -0x26; jne 0x6cfc6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d03e: cmp eax, -0x26; jne 0x6d005; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d49a: cmp eax, -0x26; jne 0x6d391; mov esi, 1; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006dc86: cmp eax, -0x26; jne 0x6d8af; mov rax, r10; mov rsi, rdx; syscall; 
0x000000000006d90a: cmp eax, -0x26; jne 0x6d918; mov rax, r8; syscall; 
0x000000000006ea09: cmp eax, -0x26; jne 0x6e9cb; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006ed06: cmp eax, -0x26; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed06: cmp eax, -0x26; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006ee09: cmp eax, -0x26; jne 0x6edcf; mov esi, 1; mov rax, r8; syscall; 
0x000000000006f0a5: cmp eax, -0x26; jne 0x6f07d; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006fc93: cmp eax, -0x26; jne 0x6fc69; mov rax, r8; mov rsi, rdx; syscall; 
0x00000000000703a0: cmp eax, -0x26; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; 
0x00000000000703a0: cmp eax, -0x26; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000002222a: cmp eax, -1; cmove rax, rdx; ret; 
0x000000000002225a: cmp eax, -3; jbe 0x22268; pop rbx; ret; 
0x000000000005b9fc: cmp eax, -9; jne 0x5ba40; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005bc90: cmp eax, -9; jne 0x5bd31; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000746c4: cmp eax, -9; jne 0x74700; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000074763: cmp eax, -9; jne 0x747a0; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000006ba1d: cmp eax, 0x10; setne al; movzx eax, al; add eax, 1; add rsp, 8; ret; 
0x00000000000724f8: cmp eax, 0x35; je 0x725a8; ret; 
0x000000000007a1d6: cmp eax, 0x383e3; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x000000000002f65c: cmp eax, 0x38ffffff; ja 0x2f688; ret; 
0x000000000002f650: cmp eax, 0x3effffff; ja 0x2f6d0; sub eax, 0x800000; cmp eax, 0x38ffffff; ja 0x2f688; ret; 
0x0000000000030ac4: cmp eax, 0x3fe; jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338c4: cmp eax, 0x3fe; jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000007b1a3: cmp eax, 0x3ffd9400; ja 0x7b1ad; fyl2xp1; ret; 
0x0000000000070366: cmp eax, 0x46b15; mov eax, 0xffffffff; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x000000000006fc02: cmp eax, 0x473dd; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x000000000006d240: cmp eax, 0x49d0b; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1d0: cmp eax, 0x49d7b; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b05: cmp eax, 0x53802; mov rax, r9; syscall; 
0x000000000005f747: cmp eax, 0x54ac0; mov rax, r9; syscall; 
0x000000000004f37a: cmp eax, 0x65001; call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004f417: cmp eax, 0x67b38; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000004f308: cmp eax, 0x67caf; call 0x6b570; mov rax, r12; pop r12; ret; 
0x000000000007655e: cmp eax, 0x6ffffff0; jne 0x76550; add rdi, qword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000033843: cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x000000000002cfdf: cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x0000000000045059: cmp eax, 0x80; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x000000000001efc6: cmp eax, 0x83481774; ret; 
0x0000000000022e21: cmp eax, 0x8a2ca; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x00000000000603eb: cmp eax, 0x90000000; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000006b20b: cmp eax, 0x9066fffb; endbr64; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000001ed0e: cmp eax, 0x93499; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001eabb: cmp eax, 0x98490; syscall; 
0x000000000005bad3: cmp eax, 0xa000; je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbbb: cmp eax, 0xa000; je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x0000000000015a6c: cmp eax, 0xa14d7; mov rax, r8; syscall; 
0x00000000000701ce: cmp eax, 0xb; sete al; movzx eax, al; add eax, 2; add rsp, 8; ret; 
0x0000000000048675: cmp eax, 0xbf; mov eax, edx; cmova eax, edi; ret; 
0x0000000000049303: cmp eax, 0xfd; jbe 0x49310; xor eax, eax; pop rbx; ret; 
0x000000000002d03c: cmp eax, 0xff; je 0x2d050; mov eax, r8d; ret; 
0x00000000000745d1: cmp eax, 0xfffffe2a; call 0x7b396; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005f1bc: cmp eax, 1; je 0x5f1d0; sub rax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x0000000000070378: cmp eax, 1; je 0x70380; ret; 
0x0000000000034cd5: cmp eax, 1; sbb r8d, -1; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x00000000000724f0: cmp eax, 2; ja 0x72508; add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x000000000001629a: cmp eax, 2; jne 0x162a5; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000006dd13: cmp eax, 2; jne 0x6dd20; xor eax, eax; ret; 
0x000000000006ece8: cmp eax, 3; je 0x6ecf0; ret; 
0x0000000000074603: cmp eax, 4; je 0x74610; mov dword ptr [rsp + 0xc], 0xfffffff0; movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x0000000000067366: cmp eax, 9; jbe 0x67321; xor r8d, r8d; mov eax, r8d; ret; 
0x000000000006059d: cmp eax, dword ptr [eip + 0x4c5c4100]; mov dword ptr [rip + 0x53bb6], ebp; pop r13; pop r14; ret; 
0x000000000004f9c9: cmp eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000049347: cmp eax, dword ptr [rax]; pop rbx; sete al; ret; 
0x00000000000708cc: cmp eax, dword ptr [rcx + rcx*4 - 0x40]; neg eax; test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x0000000000060b14: cmp eax, dword ptr [rcx + rcx*4 - 0x40]; pop rbx; ret; 
0x000000000005d5c5: cmp eax, dword ptr [rdi + 0x10]; je 0x5d5e0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f695: cmp eax, dword ptr [rdi + 0x10]; je 0x5f6b0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000003a426: cmp eax, dword ptr [rdi]; add dl, dh; divps xmm0, xmm1; ret; 
0x00000000000605a7: cmp eax, dword ptr [rip + 0x415d4100]; pop rsi; ret; 
0x000000000006059e: cmp eax, dword ptr [rip + 0x4c5c4100]; mov dword ptr [rip + 0x53bb6], ebp; pop r13; pop r14; ret; 
0x000000000005f80c: cmp eax, dword ptr [rip + 0x5497e]; je 0x5f828; lea rdx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7d8: cmp eax, dword ptr [rip + 0x549b2]; je 0x5f7f0; lea rdx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005d16d: cmp eax, eax; je 0x5d180; sub rax, r8; mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x000000000001dfcc: cmp eax, ebx; pop rbx; setne al; movzx eax, al; ret; 
0x000000000003405a: cmp eax, ecx; je 0x34070; test edx, edx; js 0x34068; ret; 
0x0000000000068948: cmp eax, ecx; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689fc: cmp eax, ecx; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x000000000006ae24: cmp eax, ecx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000002d28c: cmp eax, edi; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2cc: cmp eax, edi; jne 0x2d2c0; fstp st(1); ret; 
0x0000000000069098: cmp eax, edi; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000019d8d: cmp eax, edx; ja 0x19d00; pop rbx; ret; 
0x000000000005f18a: cmp eax, edx; je 0x5f1a0; add rax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x000000000001ed29: cmp eax, edx; jne 0x1ed13; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x000000000006aeb9: cmp eax, edx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000002a360: cmp eax, edx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000002c5e0: cmp eax, edx; setb r8b; mov eax, r8d; ret; 
0x0000000000033819: cmp eax, edx; setbe al; movzx eax, al; ret; 
0x0000000000068947: cmp eax, r9d; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689fb: cmp eax, r9d; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x000000000003df08: cmp ebp, 0x397fffff; ja 0x3df50; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000031829: cmp ebx, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000003de35: cmp ebx, 0x3e4fffff; ja 0x3de80; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002fe05: cmp ebx, 3; jne 0x2fe12; movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000002ffcf: cmp ebx, 3; jne 0x2ffdc; movss xmm1, dword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003cda4: cmp ebx, ebp; fcomp st(1); call 0xffffffff856ab78b; leave; js 0x3cdf5; ret; 
0x0000000000036e76: cmp ebx, esi; movups xmm0, xmmword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x00000000000610e1: cmp ebx, esi; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000001e1be: cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x000000000005b3b9: cmp ecx, 0x3f; ja 0x5b3c7; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000003a7d2: cmp ecx, 0x80; jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x0000000000021a8d: cmp ecx, 9; ja 0x21a68; ret; 
0x000000000001ef5d: cmp ecx, dword ptr [rax - 0x7b]; push qword ptr [rbp - 0x13]; xor eax, eax; pop rbx; ret; 
0x0000000000015fdb: cmp ecx, dword ptr [rax - 0x7d]; ret 0x4801; 
0x00000000000678d1: cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000074fdc: cmp ecx, dword ptr [rcx - 0x77]; retf 0x8d4c; and al, 7; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000001939d: cmp ecx, dword ptr [rcx]; add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000005e5e1: cmp ecx, dword ptr [rcx]; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000033fff: cmp ecx, edi; je 0x34010; test ecx, ecx; je 0x3400b; movapd xmm0, xmm1; ret; 
0x00000000000438c1: cmp ecx, edx; add al, byte ptr [rax]; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000006be1b: cmp ecx, edx; ja 0x6be2c; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000002abfc: cmp ecx, edx; jbe 0x2ac01; hlt; ret; 
0x0000000000057ab9: cmp ecx, edx; jg 0x57ac8; jge 0x57a9f; xor eax, eax; ret; 
0x0000000000068add: cmp ecx, edx; jne 0x68ad0; ret; 
0x0000000000021ae0: cmp ecx, esi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000182e1: cmp ecx, esi; je 0x182f0; ret; 
0x0000000000068adc: cmp ecx, r10d; jne 0x68ad0; ret; 
0x0000000000043f36: cmp edi, -1; je 0x43f50; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000001db8c: cmp edi, 0x19; setbe al; ret; 
0x000000000001dd7f: cmp edi, 0x1ffff; jbe 0x1dd90; ret; 
0x000000000001e086: cmp edi, 0x1ffff; jbe 0x1e090; ret; 
0x000000000001e068: cmp edi, 0x20; seta al; ret; 
0x000000000001dced: cmp edi, 0x20; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000036e6f: cmp edi, 0x32ffffff; ja 0x36eb0; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x00000000000365cb: cmp edi, 0x3c8fffff; ja 0x36608; movsd xmm0, qword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x000000000001dc49: cmp edi, 0x5d; setbe al; ret; 
0x000000000001dc89: cmp edi, 0x5e; setbe al; ret; 
0x000000000001dbfa: cmp edi, 0x7f; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000072596: cmp edi, 0xa3d70b; setb al; add eax, 0x34; ret; 
0x000000000001e4fa: cmp edi, 0xee; seta al; ret; 
0x00000000000485f6: cmp edi, 0xff; ja 0x48608; shl edi, 0x18; or eax, edi; ret; 
0x000000000001e03c: cmp edi, 0xfffe; setne al; ret; 
0x0000000000048608: cmp edi, 0xffff; ja 0x48620; shl edi, 0x10; or eax, edi; ret; 
0x0000000000021bc5: cmp edi, 0xfffff000; ja 0x21bd8; mov rax, rdi; ret; 
0x00000000000704a5: cmp edi, 1; lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000006f5be: cmp edi, 2; ja 0x6f5e9; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000001de19: cmp edi, 2; setbe al; ret; 
0x000000000001e159: cmp edi, 5; setbe al; ret; 
0x000000000006a3a4: cmp edi, 9; jbe 0x6a3c6; mov eax, edx; sub eax, esi; ret; 
0x000000000001dc29: cmp edi, 9; setbe al; ret; 
0x000000000001db5d: cmp edi, 9; setbe r8b; mov eax, r8d; ret; 
0x000000000001dbca: cmp edi, 9; sete dl; or eax, edx; movzx eax, al; ret; 
0x0000000000059c6d: cmp edi, eax; jne 0x59c48; mov eax, edx; ret; 
0x000000000002b5be: cmp edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000004053e: cmp edi, edx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000006a427: cmp edi, edx; jne 0x6a410; ret; 
0x000000000002936f: cmp edi, edx; setne dl; movzx edx, dl; and eax, edx; ret; 
0x000000000005b391: cmp edi, esp; jmp qword ptr [rsi + 0x2e]; 
0x000000000001b4cf: cmp edi, esp; jne 0x1b4a9; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bf66: cmp edi, esp; jne 0x1bf40; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e56b: cmp edx, 0x20; jle 0x1e578; ret; 
0x0000000000028ee4: cmp edx, 0x31; jle 0x28f08; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000001fc43: cmp edx, 0x400; sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x000000000002f260: cmp edx, 0x457fffff; jbe 0x2f280; call 0x3a540; addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x000000000001dca7: cmp edx, 0x5d; jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000002358e: cmp edx, 0x7fffffff; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000007262a: cmp edx, 0xa3d70b; mov edx, 1; cmovae eax, edx; ret; 
0x0000000000048640: cmp edx, 0xbf; movzx edi, dil; cmova eax, edi; ret; 
0x000000000001fc62: cmp edx, 0xc00; setne al; add rsp, 8; neg eax; ret; 
0x0000000000060f33: cmp edx, 1; je 0x60f40; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x00000000000438f6: cmp edx, 4; je 0x43907; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x0000000000070b98: cmp edx, 5; jle 0x70bb4; add r9, 6; mov byte ptr [r9], 0; ret; 
0x000000000001dd37: cmp edx, 9; ja 0x1dd48; mov eax, 1; ret; 
0x000000000006741e: cmp edx, 9; jbe 0x673d1; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000674de: cmp edx, 9; jbe 0x67491; xor r8d, r8d; mov rax, r8; ret; 
0x000000000005e6e2: cmp edx, dword ptr [rax + 0x20]; je 0x5e6f8; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060a32: cmp edx, dword ptr [rax + 0x20]; je 0x60a48; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000035539: cmp edx, dword ptr [rdi + rax + 0x590ff200]; ret; 
0x0000000000060be8: cmp edx, dword ptr [rip + 0x536b2]; je 0x60c00; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060ba4: cmp edx, dword ptr [rip + 0x536f6]; je 0x60bc0; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005022a: cmp edx, eax; je 0x50159; movsxd rdi, eax; movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000068ad5: cmp edx, eax; je 0x68a5b; movzx ecx, byte ptr [rax]; cmp ecx, r10d; jne 0x68ad0; ret; 
0x000000000006ffa3: cmp edx, eax; je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000006a117: cmp edx, eax; jne 0x6a100; pop rbp; ret; 
0x000000000006ae8c: cmp edx, eax; jne 0x6ae80; mov rax, r8; ret; 
0x000000000006efe8: cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x000000000002467c: cmp edx, eax; mov edx, 0xffffffff; setb al; movzx eax, al; cmova eax, edx; ret; 
0x000000000006ade0: cmp edx, ecx; je 0x6add0; mov eax, edx; sub eax, ecx; ret; 
0x000000000006b826: cmp edx, ecx; je 0x6b810; ret; 
0x0000000000050269: cmp edx, edi; je 0x502c3; movsxd rsi, edx; mov rax, r12; syscall; 
0x000000000006a116: cmp edx, r8d; jne 0x6a100; pop rbp; ret; 
0x000000000006b825: cmp edx, r9d; je 0x6b810; ret; 
0x000000000001ff22: cmp esi, -1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000019a34: cmp esi, 0x14; ja 0x19a50; movsxd rsi, esi; lea rax, [rip + 0x625bd]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000002d0af: cmp esi, 0xb747fff; mov eax, r8d; ret; 
0x0000000000047144: cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x000000000006bd39: cmp esi, 1; ja 0x6bd43; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd79: cmp esi, 1; ja 0x6bd83; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000006f0f9: cmp esi, 1; ja 0x6f102; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001e447: cmp esi, 1; je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x0000000000073d84: cmp esi, 1; je 0x73d90; xor eax, eax; ret; 
0x000000000006bdba: cmp esi, 1; mov eax, 0x16; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000001e44d: cmp esi, 2; je 0x1e460; ret; 
0x0000000000051f4a: cmp esi, 2; je 0x51e0b; and ebx, 1; mov rax, qword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x00000000000725de: cmp esi, 3; je 0x725f0; mov eax, 1; ret; 
0x00000000000725d5: cmp esi, 4; je 0x72501; cmp esi, 3; je 0x725f0; mov eax, 1; ret; 
0x0000000000025231: cmp esi, dword ptr [rsp + rcx + 0xf]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000059baa: cmp esi, eax; ja 0x59bc0; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x0000000000059c00: cmp esi, eax; ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000005d399: cmp esi, eax; je 0x5d3ab; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004f087: cmp esi, eax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000005a786: cmp esi, ecx; cmovg edx, edi; mov dword ptr [rax + 0x18], edx; mov eax, edx; sub eax, r8d; ret; 
0x000000000006c3c9: cmp esi, ecx; jb 0x6c3e0; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x00000000000341a9: cmp esi, ecx; je 0x341c0; test eax, eax; js 0x341b8; ret; 
0x000000000004596b: cmp esi, ecx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000006dd37: cmp esi, edi; sete al; ret; 
0x000000000006bd64: cmp esi, edx; ja 0x6bd6e; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000001cd3c: cmp esi, edx; jne 0x1cce0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b607: cmp esp, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000047ebd: cmp qword ptr [rax + 0x58], 0; je 0x47ed0; add rax, 0xa0; ret; 
0x000000000001db04: cmp qword ptr [rax], 1; sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000005c9e7: cmp qword ptr [rbp + 0x28], rax; je 0x5c9f7; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005d375: cmp qword ptr [rbp + 0x28], rax; je 0x5d390; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005ed9a: cmp qword ptr [rbx + 0x28], rax; je 0x5edb1; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005d0a0: cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000005d0f6: cmp qword ptr [rdi + 0x20], 0; je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d080: cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000005cd6d: cmp qword ptr [rdi + 0x28], rax; je 0x5cd7a; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005ef2c: cmp qword ptr [rdi + 0x28], rsi; setne dl; add edx, 1; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000060f40: cmp qword ptr [rdi + 0x60], 0; je 0x60f38; or dword ptr [rdi], 0x40; xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x00000000000780e0: cmp qword ptr [rdi + 0xb0], 0; je 0x780f0; ret; 
0x000000000005b3a6: cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000005c3c0: cmp qword ptr [rdx + 0x18], 0x3fffffff; jne 0x5c2eb; xor edx, edx; syscall; 
0x000000000005c2dd: cmp qword ptr [rdx + 8], 0x3fffffff; je 0x5c3c0; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000006f59a: cmp qword ptr [rdx], rsi; je 0x6f5a6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000702ea: cmp qword ptr [rdx], rsi; je 0x702f6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000022de4: cmp qword ptr [rip + 0x93f8c], 0; je 0x22df0; ret; 
0x0000000000028f40: cmp qword ptr [rsi], 0; lea rax, [rip + 0x89118]; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x000000000001e90f: cmp qword ptr [rsp + 8], 0; je 0x1e925; mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x0000000000070b97: cmp r10d, 5; jle 0x70bb4; add r9, 6; mov byte ptr [r9], 0; ret; 
0x0000000000019d8c: cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x000000000005d16c: cmp r8, rax; je 0x5d180; sub rax, r8; mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x000000000001ed28: cmp r8, rdx; jne 0x1ed13; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x00000000000724ef: cmp r8d, 2; ja 0x72508; add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x000000000005c8d2: cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000005f751: cmp rax, -0x26; je 0x5f790; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b0f: cmp rax, -0x26; je 0x60b50; mov eax, r8d; pop rbx; ret; 
0x000000000006c702: cmp rax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006c830: cmp rax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1dd: cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000006d24d: cmp rax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x0000000000015be1: cmp rax, -0x26; jne 0x15a1f; mov esi, 1; mov rax, r9; syscall; 
0x000000000005c866: cmp rax, -0x26; jne 0x5c83a; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000006b543: cmp rax, -0x26; jne 0x6b550; xor esi, esi; mov rax, r9; syscall; 
0x000000000006b5a5: cmp rax, -0x26; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a5: cmp rax, -0x26; jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000006bfb8: cmp rax, -0x26; jne 0x6bf48; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c040: cmp rax, -0x26; jne 0x6bf5e; mov esi, 1; mov rax, r8; syscall; 
0x000000000006c089: cmp rax, -0x26; jne 0x6bf72; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c11d: cmp rax, -0x26; jne 0x6c130; mov rax, r8; syscall; 
0x000000000006c210: cmp rax, -0x26; jne 0x6c18c; mov rax, r8; syscall; 
0x000000000006c1d2: cmp rax, -0x26; jne 0x6c1dd; mov rax, r8; syscall; 
0x000000000006c24d: cmp rax, -0x26; jne 0x6c258; mov rax, r8; syscall; 
0x000000000006c2a7: cmp rax, -0x26; jne 0x6c2b5; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c774: cmp rax, -0x26; jne 0x6c79c; mov rax, r8; syscall; 
0x000000000006cdd8: cmp rax, -0x26; jne 0x6ca68; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ce38: cmp rax, -0x26; jne 0x6ca88; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006cda3: cmp rax, -0x26; jne 0x6cb0e; mov rax, r8; syscall; 
0x000000000006cc37: cmp rax, -0x26; jne 0x6cc00; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006cbf2: cmp rax, -0x26; jne 0x6cc00; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d068: cmp rax, -0x26; jne 0x6cfc6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d03d: cmp rax, -0x26; jne 0x6d005; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d499: cmp rax, -0x26; jne 0x6d391; mov esi, 1; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006dc85: cmp rax, -0x26; jne 0x6d8af; mov rax, r10; mov rsi, rdx; syscall; 
0x000000000006d909: cmp rax, -0x26; jne 0x6d918; mov rax, r8; syscall; 
0x000000000006ea08: cmp rax, -0x26; jne 0x6e9cb; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006ed05: cmp rax, -0x26; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed05: cmp rax, -0x26; jne 0x6eced; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006ee08: cmp rax, -0x26; jne 0x6edcf; mov esi, 1; mov rax, r8; syscall; 
0x000000000006f0a4: cmp rax, -0x26; jne 0x6f07d; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006fc92: cmp rax, -0x26; jne 0x6fc69; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000007039f: cmp rax, -0x26; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; 
0x000000000007039f: cmp rax, -0x26; jne 0x7037d; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000022229: cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000022259: cmp rax, -3; jbe 0x22268; pop rbx; ret; 
0x000000000007655d: cmp rax, 0x6ffffff0; jne 0x76550; add rdi, qword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000049302: cmp rax, 0xfd; jbe 0x49310; xor eax, eax; pop rbx; ret; 
0x000000000005f1bb: cmp rax, 1; je 0x5f1d0; sub rax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x0000000000074602: cmp rax, 4; je 0x74610; mov dword ptr [rsp + 0xc], 0xfffffff0; movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x000000000005d5c4: cmp rax, qword ptr [rdi + 0x10]; je 0x5d5e0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f694: cmp rax, qword ptr [rdi + 0x10]; je 0x5f6b0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f80b: cmp rax, qword ptr [rip + 0x5497e]; je 0x5f828; lea rdx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7d7: cmp rax, qword ptr [rip + 0x549b2]; je 0x5f7f0; lea rdx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000006ae23: cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000002d28b: cmp rax, rdi; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2cb: cmp rax, rdi; jne 0x2d2c0; fstp st(1); ret; 
0x0000000000069097: cmp rax, rdi; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x000000000005f189: cmp rax, rdx; je 0x5f1a0; add rax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x000000000006aeb8: cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000002a35f: cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000002c5df: cmp rax, rdx; setb r8b; mov eax, r8d; ret; 
0x0000000000033818: cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000006be1a: cmp rcx, rdx; ja 0x6be2c; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000002abfb: cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x0000000000057ab8: cmp rcx, rdx; jg 0x57ac8; jge 0x57a9f; xor eax, eax; ret; 
0x0000000000021adf: cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000182e0: cmp rcx, rsi; je 0x182f0; ret; 
0x0000000000021bc4: cmp rdi, -0x1000; ja 0x21bd8; mov rax, rdi; ret; 
0x000000000001b4ce: cmp rdi, r12; jne 0x1b4a9; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bf65: cmp rdi, r12; jne 0x1bf40; pop rbx; pop rbp; pop r12; ret; 
0x00000000000397ae: cmp rdi, r15; jmp qword ptr [rsi + 0x2e]; 
0x0000000000059c6c: cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x000000000004053d: cmp rdi, rdx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000006a426: cmp rdi, rdx; jne 0x6a410; ret; 
0x000000000002936e: cmp rdi, rdx; setne dl; movzx edx, dl; and eax, edx; ret; 
0x000000000002358d: cmp rdx, 0x7fffffff; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000005e6e1: cmp rdx, qword ptr [r8 + 0x20]; je 0x5e6f8; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060a31: cmp rdx, qword ptr [r8 + 0x20]; je 0x60a48; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060be7: cmp rdx, qword ptr [rip + 0x536b2]; je 0x60c00; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060ba3: cmp rdx, qword ptr [rip + 0x536f6]; je 0x60bc0; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000068ad4: cmp rdx, rax; je 0x68a5b; movzx ecx, byte ptr [rax]; cmp ecx, r10d; jne 0x68ad0; ret; 
0x000000000006ffa2: cmp rdx, rax; je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000006ae8b: cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x000000000001e446: cmp rsi, 1; je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x000000000001e44c: cmp rsi, 2; je 0x1e460; ret; 
0x0000000000059ba9: cmp rsi, rax; ja 0x59bc0; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x0000000000059bff: cmp rsi, rax; ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000005d398: cmp rsi, rax; je 0x5d3ab; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000004f086: cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000006c3c8: cmp rsi, rcx; jb 0x6c3e0; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000004596a: cmp rsi, rcx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000006dd36: cmp rsi, rdi; sete al; ret; 
0x000000000006bd63: cmp rsi, rdx; ja 0x6bd6e; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000001cd3b: cmp rsi, rdx; jne 0x1cce0; pop rbx; pop rbp; pop r12; ret; 
0x000000000002d0ae: cmp si, 0x7fff; je 0x2d0c0; mov eax, r8d; ret; 
0x0000000000054832: cmpsb byte ptr [rsi], byte ptr [rdi]; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000759d1: cmpsb byte ptr [rsi], byte ptr [rdi]; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000003ba79: cmpsb byte ptr [rsi], byte ptr [rdi]; movd xmm0, edx; addss xmm0, xmm1; ret; 
0x0000000000076476: cmpsb byte ptr [rsi], byte ptr [rdi]; xor eax, eax; add rdx, qword ptr [rbx]; call rdx; 
0x0000000000074720: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000070e55: cmpsd dword ptr [rsi], dword ptr [rdi]; mov edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x000000000006dd0f: cmpxchg dword ptr [rdi + 0x38], edx; cmp eax, 2; jne 0x6dd20; xor eax, eax; ret; 
0x000000000006e8f1: cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006ba02: cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006efe5: cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x000000000006f01c: cmpxchg dword ptr [rdi], edx; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x000000000006f64c: cmpxchg dword ptr [rdi], edx; ret; 
0x000000000006f629: cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x0000000000034642: comisd xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000338a8: comisd xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000030aa8: comisd xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x00000000000327ef: comisd xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000034643: comiss xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000346c9: comiss xmm0, xmm1; jne 0x346d8; mov dword ptr [rdi], 0; ret; 
0x00000000000338a9: comiss xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x0000000000030aa9: comiss xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x0000000000033764: comiss xmm2, xmm1; jbe 0x33778; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000327f0: comiss xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000067807: cqo; idiv rsi; ret; 
0x00000000000677f7: cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000040730: cvtdq2ps xmm3, xmmword ptr [rbp + 0x41]; pop rsp; pop r13; pop r14; ret; 
0x000000000003a442: cvtpi2ps xmm0, mm0; ret; 
0x0000000000071fcd: cvtpi2ps xmm0, mm7; ret; 
0x0000000000031783: cvtpi2ps xmm1, mm0; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000031dcb: cvtpi2ps xmm1, mm0; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003197f: cvtpi2ps xmm2, mm0; divsd xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031fbf: cvtpi2ps xmm2, mm0; divss xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003edf9: cvtps2pd xmm0, xmm0; call 0x3e8f0; add rsp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003fa0e: cvtps2pd xmm0, xmm0; pop rbx; ret; 
0x000000000002ceb5: cvtps2pd xmm0, xmm0; ret; 
0x000000000002f768: cvtps2pd xmm0, xmm0; test ebx, ebx; js 0x2f778; add rsp, 0x10; pop rbx; ret; 
0x000000000003f8fc: cvtps2pd xmm0, xmm1; pop rbx; ret; 
0x000000000002eb39: cvtps2pd xmm0, xmm1; ret; 
0x0000000000033269: cvtps2pd xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000030824: cvtps2pd xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x000000000003fa76: cvtps2pi mm0, xmm0; ret; 
0x000000000003fa74: cvtsd2si rax, xmm0; ret; 
0x000000000003fa0d: cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000002ceb4: cvtsd2ss xmm0, xmm0; ret; 
0x000000000002f767: cvtsd2ss xmm0, xmm0; test ebx, ebx; js 0x2f778; add rsp, 0x10; pop rbx; ret; 
0x000000000003f8fb: cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x000000000002eb38: cvtsd2ss xmm0, xmm1; ret; 
0x0000000000033268: cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000030823: cvtsd2ss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x000000000003a441: cvtsi2sd xmm0, eax; ret; 
0x0000000000071fcb: cvtsi2sd xmm0, rdi; ret; 
0x0000000000031782: cvtsi2sd xmm1, eax; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000003197e: cvtsi2sd xmm2, eax; divsd xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003a4b5: cvtsi2ss xmm0, eax; ret; 
0x0000000000031dca: cvtsi2ss xmm1, eax; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000031fbe: cvtsi2ss xmm2, eax; divss xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003edf8: cvtss2sd xmm0, xmm0; call 0x3e8f0; add rsp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003fa84: cvtss2si rax, xmm0; ret; 
0x0000000000039473: cvttps2pi mm0, xmm0; ret; 
0x0000000000039471: cvttsd2si rax, xmm0; ret; 
0x0000000000039491: cvttss2si rax, xmm0; ret; 
0x000000000005bc95: cwde; add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000703d4: cwde; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x000000000005b26e: cwde; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000059293: cwde; add byte ptr [rax], al; add byte ptr [rbx + 0x31e8f7e2], al; call 0x634e92a0; ret; 
0x000000000004f4be: cwde; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000001c919: cwde; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x0000000000074a5e: cwde; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x00000000000756f0: cwde; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000001f7c4: cwde; ja 0x1f7d0; add byte ptr [rax - 0x77], cl; lodsb al, byte ptr [rsi]; ret 0x108; 
0x000000000001e54d: cwde; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; add eax, 1; ret; 
0x0000000000057a6f: cwde; pop r12; pop r13; ret; 
0x00000000000199e7: cwde; ret; 
0x0000000000074ebe: dec ah; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000006a421: dec byte ptr [r8 + 0x3948ff46]; xlatb; jne 0x6a410; ret; 
0x000000000006a422: dec byte ptr [rax + 0x3948ff46]; xlatb; jne 0x6a410; ret; 
0x00000000000627d8: dec byte ptr [rax + 0x39]; ret 0xc748; 
0x000000000002d2aa: dec byte ptr [rax - 0x73]; adc byte ptr [r8 - 0x7d], r9b; ret 0xdb02; 
0x00000000000746de: dec byte ptr [rax - 0x77]; out dx, eax; call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000004135f: dec byte ptr [rax - 0x77]; ret 0x8948; 
0x0000000000050721: dec byte ptr [rax - 0x77]; ret; 
0x00000000000502d5: dec byte ptr [rcx + rcx*4 - 0x12]; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000067b2a: dec byte ptr [rcx + rcx*4 - 0x39]; call rax; 
0x000000000006a41e: dec byte ptr [rdi]; mov dh, 0x47; dec byte ptr [rax + 0x3948ff46]; xlatb; jne 0x6a410; ret; 
0x000000000004efa5: dec dword ptr [r8 - 0x77]; add eax, 0x67e8a; ret; 
0x000000000006b876: dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005588a: dec dword ptr [rax + 0x23]; xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000006228d: dec dword ptr [rax + 0x39]; ret 0x8d0f; 
0x0000000000065b2e: dec dword ptr [rax + 0x39]; ret 0xec75; 
0x00000000000773e4: dec dword ptr [rax + 0x39]; ret 0xf72; 
0x000000000006f346: dec dword ptr [rax + 0x39]; ret; 
0x000000000006a425: dec dword ptr [rax + 0x39]; xlatb; jne 0x6a410; ret; 
0x000000000005c9af: dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x0000000000050231: dec dword ptr [rax + 0x63]; clc; movsxd rsi, edx; mov rax, r12; syscall; 
0x000000000002415a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x11b]; syscall; 
0x0000000000023eda: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x134]; syscall; 
0x000000000002217a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x1f]; syscall; 
0x000000000005ac2a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x3e]; syscall; 
0x0000000000021f6a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x44]; syscall; 
0x0000000000021f3a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x47]; syscall; 
0x000000000002355a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x49]; syscall; 
0x000000000007514a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x6d]; syscall; 
0x000000000002368a: dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0xff]; syscall; 
0x000000000007460f: dec dword ptr [rax + 0x63]; jl 0x74638; sub byte ptr [rax + 3], bh; syscall; 
0x000000000005ad9c: dec dword ptr [rax + 0x63]; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005929e: dec dword ptr [rax + 0x63]; ret; 
0x000000000007566a: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x107], cl; syscall; 
0x0000000000023a2a: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x130], cl; syscall; 
0x0000000000022156: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x1e], cl; syscall; 
0x00000000000236fa: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x67], cl; syscall; 
0x0000000000074c66: dec dword ptr [rax + 0x63]; sar byte ptr [rax + 8], cl; syscall; 
0x000000000004800f: dec dword ptr [rax + 0x63]; sti; mov edx, eax; mov eax, 3; syscall; 
0x00000000000220c2: dec dword ptr [rax + 0x63]; test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x0000000000023596: dec dword ptr [rax + 0xf]; sar byte ptr [r8 + 0xd9], 1; syscall; 
0x0000000000077092: dec dword ptr [rax + 1]; ret 0x294c; 
0x000000000003b0c3: dec dword ptr [rax + 1]; ret 0x8148; 
0x00000000000343bc: dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000005b1aa: dec dword ptr [rax - 0x2d]; ror byte ptr [rax + 0x21], 7; xor eax, eax; ret; 
0x0000000000054108: dec dword ptr [rax - 0x39]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; or dil, dil; call qword ptr [rax]; 
0x00000000000787b5: dec dword ptr [rax - 0x39]; add eax, 0x3e707; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000005a067: dec dword ptr [rax - 0x39]; add eax, 0x5cbdd; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000002be27: dec dword ptr [rax - 0x39]; ret 0xfff0; 
0x000000000004e5c2: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000025448: dec dword ptr [rax - 0x73]; add eax, 0x80510; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000041ad1: dec dword ptr [rax - 0x73]; and al, 0x38; call rax; 
0x000000000004f414: dec dword ptr [rax - 0x73]; cmp eax, 0x67b38; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000006df05: dec dword ptr [rax - 0x75]; add al, 0xf8; ret; 
0x0000000000034789: dec dword ptr [rax - 0x75]; jl 0x347b2; sbb byte ptr [rbx + 0x5a58782f], al; add rsp, 0x28; ret; 
0x0000000000054049: dec dword ptr [rax - 0x75]; jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000007391a: dec dword ptr [rax - 0x75]; jl 0x73943; and byte ptr [rax - 0x75], cl; and al, 0x28; call rax; 
0x000000000004efa6: dec dword ptr [rax - 0x77]; add eax, 0x67e8a; ret; 
0x0000000000049b73: dec dword ptr [rax - 0x77]; fisttp word ptr [rcx - 0x77]; ret 0xe1e8; 
0x0000000000052ac0: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x00000000000614fa: dec dword ptr [rax - 0x77]; ret 0x8941; 
0x00000000000538ee: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000056b34: dec dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000071dc2: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x000000000003f792: dec dword ptr [rax - 0x77]; ret 0xe083; 
0x000000000004fd2f: dec dword ptr [rax - 0x77]; ret 0xffb8; 
0x000000000001e950: dec dword ptr [rax - 0x77]; ret; 
0x000000000004ad59: dec dword ptr [rax - 0x7b]; sal byte ptr [rbp - 0xf], 0x5b; ret; 
0x0000000000051bf2: dec dword ptr [rax - 0x7b]; sal byte ptr [rsi + rdx*2 + 0x48], 0x89; ret; 
0x000000000005055e: dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rcx*2 + 0x48], 0x89; ret; 
0x00000000000221ce: dec dword ptr [rax - 0x7b]; test byte ptr [rax + 0x63], 0xff; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000023366: dec dword ptr [rax - 0x7d]; in al, dx; or byte ptr [rax + 0x123], bh; mov rdx, rdi; syscall; 
0x0000000000023606: dec dword ptr [rax - 0x7d]; in al, dx; or byte ptr [rax + 0x126], bh; mov rdx, rdi; syscall; 
0x000000000007096e: dec dword ptr [rax - 0x7d]; ret 0x3102; 
0x00000000000510c5: dec dword ptr [rax - 0x7d]; ret 0x4101; 
0x0000000000043482: dec dword ptr [rax - 0x7d]; ret 0x4803; 
0x0000000000058b46: dec dword ptr [rax - 0x7d]; ret 0x4808; 
0x000000000003ae18: dec dword ptr [rax - 0x7d]; ret; 
0x000000000006b877: dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000062386: dec dword ptr [rbx + 0x39282444]; ret; 
0x000000000002352c: dec dword ptr [rbx - 0x2f]; mov eax, 0x12d; syscall; 
0x000000000001fbe6: dec dword ptr [rbx - 0x2f]; mov eax, 0xdd; syscall; 
0x000000000001fbe6: dec dword ptr [rbx - 0x2f]; mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000005485c: dec dword ptr [rbx - 0x6bf0f3ba]; ret 0x8548; 
0x000000000001a52a: dec dword ptr [rbx - 0x76afdbbc]; ret 0xf281; 
0x0000000000064593: dec dword ptr [rbx - 0x76cfdbb4]; ret 0x8b49; 
0x0000000000026068: dec dword ptr [rbx - 0x76f7dbb4]; ret 0xf883; 
0x0000000000021d73: dec dword ptr [rbx - 0x7ab2fbbf]; dec dword ptr [rdi + rcx + 0x44]; ret; 
0x0000000000063d6c: dec dword ptr [rbx - 0x7cb7fbb6]; ret 0x8504; 
0x000000000005bf7a: dec dword ptr [rcx + 0x102b8d2]; add byte ptr [rax], al; syscall; 
0x0000000000023509: dec dword ptr [rcx + 0x12cb8f6]; add byte ptr [rax], al; syscall; 
0x000000000004205c: dec dword ptr [rcx + 0x5bc03118]; ret; 
0x000000000002df21: dec dword ptr [rcx + 0x63]; ret 0x8944; 
0x0000000000043d41: dec dword ptr [rcx + 0x63]; std; mov eax, 3; syscall; 
0x00000000000411ca: dec dword ptr [rcx + 0x8cb8f6]; add byte ptr [rax], al; syscall; 
0x000000000007792b: dec dword ptr [rcx + 0xf]; scasd eax, dword ptr [rdi]; fisttp word ptr [rcx - 0x75]; mov esp, 0xd824; add al, ch; ret; 
0x000000000002365a: dec dword ptr [rcx + 0xfeb8d2]; add byte ptr [rax], al; syscall; 
0x000000000001b4cc: dec dword ptr [rcx + r15 - 0x19]; jne 0x1b4a9; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bf63: dec dword ptr [rcx + r15 - 0x19]; jne 0x1bf40; pop rbx; pop rbp; pop r12; ret; 
0x000000000005bba1: dec dword ptr [rcx + rcx*4 - 0x16]; syscall; 
0x0000000000070426: dec dword ptr [rcx + rcx*4 - 0x19]; mov r8, rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000007010b: dec dword ptr [rcx + rcx*4 - 0x19]; mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x0000000000078960: dec dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000005fda6: dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000007a40a: dec dword ptr [rcx + rcx*4 - 0x20]; pop rbp; pop r12; pop r13; ret; 
0x000000000005efbd: dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006dc8e: dec dword ptr [rcx + rcx*4 - 0x30]; mov rsi, rdx; syscall; 
0x0000000000050248: dec dword ptr [rcx + rcx*4 - 0x30]; syscall; 
0x000000000006c092: dec dword ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006c219: dec dword ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000001b4cd: dec dword ptr [rcx + rdi - 0x19]; jne 0x1b4a9; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bf64: dec dword ptr [rcx + rdi - 0x19]; jne 0x1bf40; pop rbx; pop rbp; pop r12; ret; 
0x0000000000043f3e: dec dword ptr [rcx - 0x2000da08]; add byte ptr [rax], al; ret; 
0x000000000003a51b: dec dword ptr [rcx - 0x24e3dbbc]; and al, 0x1c; pop rax; pop rdx; add rsp, 0x18; ret; 
0x000000000004275a: dec dword ptr [rcx - 0x2d9cb70a]; mov eax, 0x8d; syscall; 
0x0000000000044256: dec dword ptr [rcx - 0x39]; ret; 
0x000000000006fec8: dec dword ptr [rcx - 0x3b7cb7d5]; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000043f05: dec dword ptr [rcx - 0x3f76bbe8]; pop rbx; ret; 
0x000000000002ae9a: dec dword ptr [rcx - 0x77]; ret 0xf66; 
0x0000000000077946: dec dword ptr [rcx - 0x77]; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000071911: dec dword ptr [rcx - 0x7d]; ret; 
0x000000000006a3a5: dec dword ptr [rcx]; jbe 0x6a3c6; mov eax, edx; sub eax, esi; ret; 
0x000000000001dc2a: dec dword ptr [rcx]; setbe al; ret; 
0x000000000001db5e: dec dword ptr [rcx]; setbe r8b; mov eax, r8d; ret; 
0x000000000001dbcb: dec dword ptr [rcx]; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000003de38: dec dword ptr [rdi + 0x3e]; ja 0x3de80; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000021d79: dec dword ptr [rdi + rcx + 0x44]; ret; 
0x00000000000365ce: dec dword ptr [rdi - 0xdca88c4]; movups xmm0, xmmword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x0000000000043739: dec dword ptr [rdi]; add byte ptr [rax], al; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000006fcb5: dec dword ptr [rdi]; ret; 
0x00000000000335ab: dec dword ptr [rdi]; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000044e6d: dec dword ptr [rdi]; test ah, bh; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000029408: dec dword ptr [rdi]; xchg eax, ebp; ret 0xd021; 
0x000000000001e57b: dec dword ptr [rdi]; xchg eax, ebp; sal bh, 0xd8; ret; 
0x0000000000024682: dec dword ptr [rdi]; xchg eax, edx; ror byte ptr [rdi], 0xb6; ror byte ptr [rdi], 0x47; ret 0xfc3; 
0x0000000000077781: dec dword ptr [rdi]; xchg eax, esp; ret 0x8b4d; 
0x0000000000060715: dec dword ptr [rdx + 0x63]; jl 0x606ce; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000007b287: dec edx; jne 0x7b286; ret; 
0x000000000006bdb7: div byte ptr [rax + rdx - 0x7d]; inc byte ptr [rcx]; mov eax, 0x16; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000006fc61: div byte ptr [rbp + 0xc]; test r8b, r8b; jne 0x6fc70; xor eax, eax; ret; 
0x000000000006a040: div byte ptr [rbp + 5]; pop rbp; ret; 
0x00000000000760e5: div byte ptr [rbp + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006b2a5: div byte ptr [rbp + 8]; xor eax, eax; ret; 
0x000000000002344c: div byte ptr [rbp + 9]; mov eax, 0x11c; syscall; 
0x000000000006f279: div byte ptr [rsi + rax + 0xf]; mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000060ba6: div byte ptr [rsi]; add eax, 0x48147400; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x00000000000182d5: div dword ptr [rax + rbx + 0x66]; movd rax, mm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x00000000000746c6: div dword ptr [rbp + 0x37]; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000074765: div dword ptr [rbp + 0x38]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005b9fe: div dword ptr [rbp + 0x3f]; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000006a7f3: div dword ptr [rbp - 0x26]; mov eax, edx; sub eax, ecx; ret; 
0x0000000000034cd2: divps xmm0, xmm0; cmp eax, 1; sbb r8d, -1; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d169: divps xmm0, xmm0; ret; 
0x0000000000034d55: divps xmm0, xmm0; setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c4b: divps xmm0, xmm0; setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000031092: divps xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000031151: divps xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002ed75: divps xmm0, xmm1; ret; 
0x0000000000039d81: divps xmm0, xmmword ptr [rip + 0x74098]; ret; 
0x0000000000039a15: divps xmm0, xmmword ptr [rip + 0x74404]; ret; 
0x0000000000039f60: divps xmm0, xmmword ptr [rip + 0x75569]; ret; 
0x0000000000039ba5: divps xmm0, xmmword ptr [rip + 0x75924]; ret; 
0x00000000000365e9: divps xmm0, xmmword ptr [rip + 0x77830]; ret; 
0x0000000000036e91: divps xmm0, xmmword ptr [rip + 0x78638]; ret; 
0x0000000000035501: divps xmm0, xmmword ptr [rip + 0x78918]; ret; 
0x0000000000035d61: divps xmm0, xmmword ptr [rip + 0x79768]; ret; 
0x000000000002d125: divps xmm0, xmmword ptr [rip + 0x80cf4]; ret; 
0x000000000002d155: divps xmm0, xmmword ptr [rip + 0x82374]; ret; 
0x0000000000031983: divps xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031fc3: divps xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031052: divps xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x0000000000034371: divps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000031111: divps xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x000000000003453c: divps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003ba2d: divps xmm1, xmm0; movss dword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000002eb31: divps xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000018eee: divps xmm1, xmm1; ret; 
0x0000000000031816: divps xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x000000000002f6c4: divps xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000031537: divps xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x0000000000031b85: divps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000003075c: divps xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x000000000002f033: divps xmm1, xmm4; addss xmm1, xmm2; addss xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000019519: divps xmm1, xmm4; movapd xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000030820: divps xmm2, xmm0; cvtsd2ss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x000000000003177f: divps xmm2, xmm0; cvtsi2sd xmm1, eax; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000031dc7: divps xmm2, xmm0; cvtsi2ss xmm1, eax; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003c7d9: divps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003ca28: divps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000019515: divps xmm2, xmm4; divsd xmm1, xmm4; movapd xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000039bf3: divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x0000000000039e0c: divps xmm2, xmmword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x0000000000039d80: divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x0000000000039a14: divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x00000000000365e8: divsd xmm0, qword ptr [rip + 0x77830]; ret; 
0x0000000000035500: divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x000000000002d124: divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d168: divsd xmm0, xmm0; ret; 
0x0000000000031091: divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002ed74: divsd xmm0, xmm1; ret; 
0x0000000000031982: divsd xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031051: divsd xmm1, xmm0; movapd xmm0, xmm1; addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x0000000000034370: divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002eb30: divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000018eed: divsd xmm1, xmm1; ret; 
0x0000000000031815: divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000031536: divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x000000000003075b: divsd xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000019518: divsd xmm1, xmm4; movapd xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000039bf2: divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000003081f: divsd xmm2, xmm0; cvtsd2ss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x000000000003177e: divsd xmm2, xmm0; cvtsi2sd xmm1, eax; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000003c7d8: divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000019514: divsd xmm2, xmm4; divsd xmm1, xmm4; movapd xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x0000000000039f5f: divss xmm0, dword ptr [rip + 0x75569]; ret; 
0x0000000000039ba4: divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x0000000000036e90: divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000035d60: divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x000000000002d154: divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000034cd1: divss xmm0, xmm0; cmp eax, 1; sbb r8d, -1; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d178: divss xmm0, xmm0; ret; 
0x0000000000034d54: divss xmm0, xmm0; setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c4a: divss xmm0, xmm0; setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000031150: divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000002f05b: divss xmm0, xmm1; ret; 
0x0000000000031fc2: divss xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031110: divss xmm1, xmm0; movaps xmm0, xmm1; addss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x000000000003453b: divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003ba2c: divss xmm1, xmm0; movss dword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000002f6c3: divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000031b84: divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000002f032: divss xmm1, xmm4; addss xmm1, xmm2; addss xmm0, xmm1; addss xmm0, xmm0; add rsp, 0x18; ret; 
0x0000000000039e0b: divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x0000000000031dc6: divss xmm2, xmm0; cvtsi2ss xmm1, eax; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003ca27: divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000005d190: endbr64; add qword ptr [rdi + 8], rsi; ret; 
0x000000000004a800: endbr64; bswap edi; mov dword ptr [rsi], edi; ret; 
0x000000000006e3e0: endbr64; cmp dword ptr [rdi], 0x80; jg 0x6e3f0; xor eax, eax; ret; 
0x0000000000047140: endbr64; cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x0000000000073d80: endbr64; cmp esi, 1; je 0x73d90; xor eax, eax; ret; 
0x0000000000022de0: endbr64; cmp qword ptr [rip + 0x93f8c], 0; je 0x22df0; ret; 
0x0000000000021bc0: endbr64; cmp rdi, -0x1000; ja 0x21bd8; mov rax, rdi; ret; 
0x000000000003fa70: endbr64; cvtsd2si rax, xmm0; ret; 
0x000000000003fa80: endbr64; cvtss2si rax, xmm0; ret; 
0x000000000003a970: endbr64; fld dword ptr [rip + 0x74bd6]; ret; 
0x0000000000017e80: endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3f0: endbr64; fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000003fba0: endbr64; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbd0: endbr64; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x0000000000018480: endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000001ef20: endbr64; hlt; ret; 
0x000000000005c440: endbr64; jmp qword ptr [rdi + 0x18]; 
0x000000000001f690: endbr64; jmp rdi; 
0x000000000004efa0: endbr64; lea eax, [rdi - 1]; mov qword ptr [rip + 0x67e8a], rax; ret; 
0x000000000001dca0: endbr64; lea edx, [rdi - 0x21]; cmp edx, 0x5d; jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000001dd30: endbr64; lea edx, [rdi - 0x30]; cmp edx, 9; ja 0x1dd48; mov eax, 1; ret; 
0x000000000004bc70: endbr64; lea rax, [rip + 0x692a5]; ret; 
0x0000000000029320: endbr64; lea rax, [rip + 0x8a875]; ret; 
0x000000000001db30: endbr64; lea rax, [rip + 0x96205]; ret; 
0x000000000001db20: endbr64; lea rax, [rip + 0x9620d]; ret; 
0x000000000001dae0: endbr64; lea rax, [rip + 0x96245]; ret; 
0x000000000006fcb0: endbr64; lock dec dword ptr [rdi]; ret; 
0x0000000000070350: endbr64; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000006bda0: endbr64; mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x0000000000050930: endbr64; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000006c350: endbr64; mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x000000000006bbe0: endbr64; mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x0000000000022c00: endbr64; mov eax, 0x1000; ret; 
0x00000000000238e0: endbr64; mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000238e0: endbr64; mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x000000000006e400: endbr64; mov eax, 0x16; ret; 
0x0000000000070290: endbr64; mov eax, 0x18; syscall; 
0x0000000000070290: endbr64; mov eax, 0x18; syscall; ret; 
0x000000000005b6a0: endbr64; mov eax, 0x23; ret; 
0x00000000000508d0: endbr64; mov eax, 0x26; ret; 
0x0000000000074b30: endbr64; mov eax, 0x27; syscall; 
0x0000000000074b30: endbr64; mov eax, 0x27; syscall; ret; 
0x000000000005b690: endbr64; mov eax, 0x40; ret; 
0x0000000000073d70: endbr64; mov eax, 0x64; syscall; 
0x0000000000073d70: endbr64; mov eax, 0x64; syscall; ret; 
0x0000000000074b70: endbr64; mov eax, 0x66; syscall; 
0x0000000000074b70: endbr64; mov eax, 0x66; syscall; ret; 
0x00000000000749b0: endbr64; mov eax, 0x68; syscall; 
0x00000000000749b0: endbr64; mov eax, 0x68; syscall; ret; 
0x00000000000749a0: endbr64; mov eax, 0x6b; syscall; 
0x00000000000749a0: endbr64; mov eax, 0x6b; syscall; ret; 
0x0000000000074990: endbr64; mov eax, 0x6c; syscall; 
0x0000000000074990: endbr64; mov eax, 0x6c; syscall; ret; 
0x0000000000074b40: endbr64; mov eax, 0x6e; syscall; 
0x0000000000074b40: endbr64; mov eax, 0x6e; syscall; ret; 
0x0000000000074b20: endbr64; mov eax, 0x79; xor edi, edi; syscall; 
0x0000000000074b20: endbr64; mov eax, 0x79; xor edi, edi; syscall; ret; 
0x00000000000753c0: endbr64; mov eax, 0xa2; syscall; 
0x00000000000753c0: endbr64; mov eax, 0xa2; syscall; ret; 
0x0000000000024300: endbr64; mov eax, 0xc2; syscall; 
0x0000000000024320: endbr64; mov eax, 0xc3; syscall; 
0x0000000000045d10: endbr64; mov eax, 0xffffffff; ret; 
0x000000000004b110: endbr64; mov eax, 3; syscall; 
0x000000000004b110: endbr64; mov eax, 3; syscall; ret; 
0x000000000006bb90: endbr64; mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbb0: endbr64; mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbd0: endbr64; mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbc0: endbr64; mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000015ca0: endbr64; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x000000000005d0d0: endbr64; mov eax, dword ptr [rdi + 0x90]; not eax; shr eax, 0x1f; ret; 
0x00000000000507f0: endbr64; mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006b210: endbr64; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000001e5f0: endbr64; mov eax, dword ptr [rdi + 8]; ret; 
0x000000000006be30: endbr64; mov eax, dword ptr [rdi + 8]; test eax, eax; js 0x6be40; xor eax, eax; ret; 
0x000000000006bc50: endbr64; mov eax, dword ptr [rdi]; and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bcd0: endbr64; mov eax, dword ptr [rdi]; and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004a7e0: endbr64; mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x000000000006bce0: endbr64; mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x00000000000507e0: endbr64; mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000006bc60: endbr64; mov eax, dword ptr [rdi]; shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0b0: endbr64; mov eax, dword ptr [rdi]; shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x000000000005d0c0: endbr64; mov eax, dword ptr [rdi]; shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x000000000006b570: endbr64; mov eax, dword ptr [rdi]; test eax, eax; js 0x6b580; ret; 
0x0000000000049020: endbr64; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000006bd90: endbr64; mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000001e1a0: endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000000047f90: endbr64; mov eax, edi; bswap eax; ret; 
0x00000000000672c0: endbr64; mov eax, edi; cdq; xor eax, edx; sub eax, edx; ret; 
0x0000000000047fa0: endbr64; mov eax, edi; rol ax, 8; ret; 
0x000000000006d200: endbr64; mov edx, dword ptr [rip + 0x49d46]; test edx, edx; jne 0x6d210; ret; 
0x00000000000507c0: endbr64; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000005b1e0: endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x00000000000242a0: endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000000242c0: endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000000023be0: endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023bc0: endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000242e0: endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000023d80: endbr64; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000005d0e0: endbr64; mov rax, qword ptr [rdi + 0x60]; ret; 
0x0000000000015c90: endbr64; mov rax, qword ptr [rdi + 0x78]; ret; 
0x000000000006bba0: endbr64; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000006bc20: endbr64; mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000052800: endbr64; mov rax, qword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000001ea60: endbr64; mov rax, qword ptr [rdi]; ret; 
0x000000000005b180: endbr64; mov rax, qword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005b470: endbr64; mov rax, qword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000001f460: endbr64; mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x00000000000235e0: endbr64; mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006f110: endbr64; mov rax, qword ptr fs:[0]; ret; 
0x0000000000067800: endbr64; mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000000677f0: endbr64; mov rax, rdi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000017e50: endbr64; movapd xmm0, xmm1; ret; 
0x000000000002e6f0: endbr64; movd eax, xmm0; shr eax, 0x1f; ret; 
0x0000000000017e60: endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000018460: endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000002e6e0: endbr64; movq rax, xmm0; shr rax, 0x3f; ret; 
0x000000000003a950: endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x000000000003a960: endbr64; movss xmm0, dword ptr [rip + 0x74be4]; ret; 
0x00000000000414c0: endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x0000000000059b70: endbr64; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000059b70: endbr64; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000023cd0: endbr64; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x0000000000024340: endbr64; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x000000000001f4d0: endbr64; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x0000000000024230: endbr64; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x000000000001fbe0: endbr64; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x0000000000022150: endbr64; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x0000000000074c60: endbr64; movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x0000000000023360: endbr64; movsxd rdi, edi; sub rsp, 8; mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000023600: endbr64; movsxd rdi, edi; sub rsp, 8; mov eax, 0x126; mov rdx, rdi; syscall; 
0x0000000000024130: endbr64; movsxd rsi, esi; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x000000000004a7d0: endbr64; movzx eax, word ptr [rdi]; rol ax, 8; movzx eax, ax; ret; 
0x000000000002e700: endbr64; movzx eax, word ptr [rsp + 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000005d1a0: endbr64; or dword ptr [rdi], 0x20; ret; 
0x000000000003f3d0: endbr64; pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b0: endbr64; pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000059be0: endbr64; push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000059b90: endbr64; push rbp; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x0000000000018450: endbr64; ret; 
0x000000000004a7f0: endbr64; rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000003fbb0: endbr64; sqrtsd xmm0, xmm0; ret; 
0x000000000003fbc0: endbr64; sqrtss xmm0, xmm0; ret; 
0x000000000001dc80: endbr64; sub edi, 0x20; xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x000000000001dc40: endbr64; sub edi, 0x21; xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x000000000001dc20: endbr64; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000001dd10: endbr64; sub edi, 0x41; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000001dc60: endbr64; sub edi, 0x61; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x0000000000071fc0: endbr64; sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000003a680: endbr64; sub rsp, 8; call 0x3cbe0; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003a6a0: endbr64; sub rsp, 8; call 0x3cca0; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x0000000000074d10: endbr64; sub rsp, 8; mov eax, 0x16; syscall; 
0x0000000000059e40: endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x00000000000435e0: endbr64; sub rsp, 8; mov eax, 0x1b; syscall; 
0x000000000004f9c0: endbr64; sub rsp, 8; mov eax, 0x3b; syscall; 
0x0000000000042f70: endbr64; sub rsp, 8; mov eax, 0x3f; syscall; 
0x00000000000221a0: endbr64; sub rsp, 8; mov eax, 0x43; syscall; 
0x0000000000075470: endbr64; sub rsp, 8; mov eax, 0x4c; syscall; 
0x0000000000074240: endbr64; sub rsp, 8; mov eax, 0x50; syscall; 
0x0000000000060d60: endbr64; sub rsp, 8; mov eax, 0x52; syscall; 
0x00000000000750c0: endbr64; sub rsp, 8; mov eax, 0x54; syscall; 
0x0000000000074c10: endbr64; sub rsp, 8; mov eax, 0x56; syscall; 
0x0000000000060d30: endbr64; sub rsp, 8; mov eax, 0x57; syscall; 
0x0000000000075380: endbr64; sub rsp, 8; mov eax, 0x58; syscall; 
0x0000000000024110: endbr64; sub rsp, 8; mov eax, 0x63; syscall; 
0x0000000000075200: endbr64; sub rsp, 8; mov eax, 0x70; syscall; 
0x0000000000041210: endbr64; sub rsp, 8; mov eax, 0x76; syscall; 
0x00000000000411f0: endbr64; sub rsp, 8; mov eax, 0x78; syscall; 
0x0000000000023250: endbr64; sub rsp, 8; mov eax, 0x7d; syscall; 
0x0000000000023230: endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000005b4f0: endbr64; sub rsp, 8; mov eax, 0x7f; mov esi, 8; syscall; 
0x0000000000023a50: endbr64; sub rsp, 8; mov eax, 0x87; syscall; 
0x0000000000043600: endbr64; sub rsp, 8; mov eax, 0x95; syscall; 
0x0000000000043870: endbr64; sub rsp, 8; mov eax, 0x96; syscall; 
0x0000000000043890: endbr64; sub rsp, 8; mov eax, 0x98; syscall; 
0x0000000000024210: endbr64; sub rsp, 8; mov eax, 0x99; syscall; 
0x0000000000023a70: endbr64; sub rsp, 8; mov eax, 0x9b; syscall; 
0x0000000000023270: endbr64; sub rsp, 8; mov eax, 0xa1; syscall; 
0x00000000000741b0: endbr64; sub rsp, 8; mov eax, 0xa3; syscall; 
0x00000000000239b0: endbr64; sub rsp, 8; mov eax, 0xa6; xor esi, esi; syscall; 
0x00000000000240a0: endbr64; sub rsp, 8; mov eax, 0xa8; syscall; 
0x0000000000023eb0: endbr64; sub rsp, 8; mov eax, 0xaa; syscall; 
0x0000000000042730: endbr64; sub rsp, 8; mov eax, 0xab; syscall; 
0x0000000000023950: endbr64; sub rsp, 8; mov eax, 0xaf; syscall; 
0x00000000000243f0: endbr64; sub rsp, 8; mov eax, 0xc5; syscall; 
0x0000000000024410: endbr64; sub rsp, 8; mov eax, 0xc6; syscall; 
0x0000000000019a70: endbr64; sub rsp, 8; mov edi, 0x53; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a90: endbr64; sub rsp, 8; mov edi, 0x54; call 0x19ae0; add rsp, 8; ret; 
0x000000000005c280: endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023dc0: endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x7a; syscall; 
0x0000000000023da0: endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x7b; syscall; 
0x0000000000023500: endbr64; sub rsp, 8; mov edi, edi; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023900: endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005bf50: endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005b9b0: endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000005bfd0: endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x0000000000023970: endbr64; sub rsp, 8; mov esi, esi; mov eax, 0xb0; syscall; 
0x0000000000074260: endbr64; sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bf0: endbr64; sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023990: endbr64; sub rsp, 8; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000000024360: endbr64; sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024390: endbr64; sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022120: endbr64; sub rsp, 8; mov r10, rcx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x0000000000059da0: endbr64; sub rsp, 8; mov rdi, -0x26; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023210: endbr64; sub rsp, 8; mov rdi, -0xc; call 0x21bc0; add rsp, 8; ret; 
0x00000000000241d0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000241b0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x00000000000240f0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x132; syscall; 
0x00000000000742f0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000005ac00: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x24; syscall; 
0x000000000005adf0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x0000000000022100: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000074860: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x00000000000412e0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x62; syscall; 
0x00000000000749c0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074b00: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b50: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x0000000000059c80: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059ca0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x93; syscall; 
0x0000000000059de0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000043620: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x97; syscall; 
0x00000000000231f0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236d0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xac; syscall; 
0x0000000000024430: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000059b50: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000071f20: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000071d80: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x0000000000043e30: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x0000000000043ac0: endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x000000000005bf70: endbr64; sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023650: endbr64; sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000411c0: endbr64; sub rsp, 8; movsxd rdi, edi; mov esi, esi; mov eax, 0x8c; syscall; 
0x00000000000240c0: endbr64; sub rsp, 8; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000075660: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a20: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000236f0: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000024150: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023ed0: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022170: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac20: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f60: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f30: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023550: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000075140: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023680: endbr64; sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000435c0: endbr64; sub rsp, 8; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000236b0: endbr64; sub rsp, 8; movsxd rdx, edx; mov eax, 0xad; syscall; 
0x00000000000753a0: endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x0000000000074190: endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x00000000000239d0: endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000024080: endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000023430: endbr64; sub rsp, 8; movsxd rsi, esi; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000002d160: endbr64; subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002d170: endbr64; subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000043f10: endbr64; test dil, 0x80; jne 0x43f20; movzx eax, dil; ret; 
0x0000000000028e60: endbr64; test dil, 1; je 0x28e70; xor eax, eax; ret; 
0x000000000001fcf0: endbr64; test edi, 0xfffff3ff; je 0x1fd08; mov eax, 0xffffffff; ret; 
0x000000000001e0d0: endbr64; test edi, edi; jne 0x1e0e0; xor eax, eax; ret; 
0x000000000002b240: endbr64; test edi, edi; js 0x2b268; je 0x2b258; mov dword ptr [rip + 0x8bd28], 0; ret; 
0x000000000006b2a0: endbr64; test esi, esi; jne 0x6b2b0; xor eax, eax; ret; 
0x0000000000023d50: endbr64; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; 
0x0000000000023d50: endbr64; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; ret; 
0x0000000000073c80: endbr64; test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; 
0x0000000000073c80: endbr64; test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; ret; 
0x000000000001dbb0: endbr64; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x000000000001e080: endbr64; xor eax, eax; cmp edi, 0x1ffff; jbe 0x1e090; ret; 
0x000000000005b3a0: endbr64; xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000006dd30: endbr64; xor eax, eax; cmp rsi, rdi; sete al; ret; 
0x000000000006f650: endbr64; xor eax, eax; mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x00000000000508c0: endbr64; xor eax, eax; mov ecx, 0x2a; rep stosq qword ptr [rdi], rax; ret; 
0x000000000006f640: endbr64; xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000023030: endbr64; xor eax, eax; ret; 
0x000000000006ece0: endbr64; xor eax, eax; xchg dword ptr [rdi], eax; cmp eax, 3; je 0x6ecf0; ret; 
0x0000000000018030: endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x000000000007b052: f2xm1; faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x000000000007b14e: f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000007afe8: f2xm1; ret; 
0x000000000007afe0: fabs; fucomip st(1); fstp st(0); ja 0x7afeb; f2xm1; ret; 
0x000000000007af91: fabs; fxch st(1); fpatan; ret; 
0x000000000003f3f8: fabs; ret; 
0x00000000000509e3: fadd dword ptr [rax]; add byte ptr [rax], al; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x000000000005bdee: fadd dword ptr [rax]; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000022470: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000023d32: fadd dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005f04e: fadd dword ptr [rax]; add byte ptr [rax], al; test rax, rax; jne 0x5f040; ret; 
0x000000000001e30d: fadd dword ptr [rbp + rcx*4 + 0x1c]; sbb byte ptr [rbx + 0x5d], bl; mov eax, r11d; pop r12; ret; 
0x000000000001e316: fadd dword ptr [rcx + 0x5c]; ret; 
0x0000000000030ad0: fadd dword ptr [rdi]; add dl, dh; movups xmmword ptr [rsp - 8], xmm1; ret; 
0x00000000000311d6: fadd dword ptr [rip + 0x7f86c]; fstp xword ptr [rsp + 0x10]; fld1; add rsp, 0x28; ret; 
0x000000000002212f: fadd qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000311c7: fadd st(0); fdivp st(1); faddp st(1); ret; 
0x00000000000311c3: fadd st(2), st(0); fxch st(2); fadd st(0); fdivp st(1); faddp st(1); ret; 
0x000000000007afa2: fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x0000000000032611: faddp st(1); add rsp, 0x28; ret; 
0x000000000007b152: faddp st(1); add rsp, 0x30; ret; 
0x0000000000034b58: faddp st(1); add rsp, 0x48; ret; 
0x000000000002d289: faddp st(1); cmp rax, rdi; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2c9: faddp st(1); cmp rax, rdi; jne 0x2d2c0; fstp st(1); ret; 
0x000000000007b14c: faddp st(1); f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x0000000000030a22: faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000007b082: faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x00000000000325ce: faddp st(1); fld1; fsubrp st(1); ret; 
0x0000000000031216: faddp st(1); fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x000000000003240e: faddp st(1); fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x000000000007b054: faddp st(1); fscale; fstp st(1); add rsp, 0x10; ret; 
0x000000000003a888: faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x000000000007b1af: faddp st(1); fyl2x; ret; 
0x000000000002cf26: faddp st(1); ret; 
0x000000000003cdee: faddp st(1); test cx, cx; jns 0x3cdb0; fchs; ret; 
0x000000000002cf24: faddp st(2); faddp st(1); ret; 
0x00000000000324c4: faddp st(2); fdivrp st(1); fmul st(1); faddp st(1); ret; 
0x0000000000032309: faddp st(2); fdivrp st(1); fsubr dword ptr [rip + 0x7e7c1]; add rsp, 0x60; pop rbx; ret; 
0x0000000000032631: faddp st(2); fsubrp st(1); ret; 
0x000000000003a8f5: faddp st(2); fxch st(1); fstp xword ptr [rdi]; ret; 
0x000000000001e94d: fbld tbyte ptr [rsi - 1]; dec dword ptr [rax - 0x77]; ret; 
0x000000000003e794: fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000002ece5: fchs; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000323e2: fchs; add rsp, 0x18; ret; 
0x00000000000305ca: fchs; add rsp, 0x30; pop rbx; ret; 
0x0000000000016a0b: fchs; add rsp, 0x38; fxch st(1); ret; 
0x000000000002fa56: fchs; add rsp, 0x40; pop rbx; ret; 
0x0000000000016d06: fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000003a503: fchs; fdivrp st(1); ret; 
0x000000000003a882: fchs; fld xword ptr [rsp + 0x10]; faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x00000000000180ac: fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000003a907: fchs; fstp xword ptr [rdi]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000016d72: fchs; fxch st(1); ret; 
0x000000000003a8b7: fchs; pop rbx; ret; 
0x000000000003cdf5: fchs; ret; 
0x0000000000034ba4: fcmove st(0), st(1); fstp st(1); add rsp, 0x48; ret; 
0x00000000000337d5: fcomi st(1); jbe 0x337e0; fsubrp st(1); add rsp, 8; ret; 
0x00000000000340df: fcomip st(1); fstp st(0); ja 0x3409a; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000003422f: fcomip st(1); fstp st(0); jbe 0x341ea; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000004c570: fcomip st(7); ret; 
0x000000000001e2bd: fcomp dword ptr [rbp + 0x41]; pop rsp; ret; 
0x000000000005b5fd: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x000000000002553b: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000005ade2: fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000069ad4: fcomp dword ptr [rbx - 0x80]; cmp byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000031dc4: fcomp dword ptr [rbx - 0xd]; divps xmm2, xmm0; cvtsi2ss xmm1, eax; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003177c: fcomp dword ptr [rbx - 0xe]; divps xmm2, xmm0; cvtsi2sd xmm1, eax; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x000000000003cdd4: fcomp st(0); or eax, 0x726f5; ret; 
0x000000000003cda6: fcomp st(1); call 0xffffffff856ab78b; leave; js 0x3cdf5; ret; 
0x00000000000337e3: fcomp st(1); out dx, al; add rsp, 8; ret; 
0x00000000000337e1: fcomp st(5); fcomp st(1); out dx, al; add rsp, 8; ret; 
0x000000000007ad53: fcomp st(5); fcomp st(5); fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000007ad55: fcomp st(5); fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x00000000000242b3: fcos; jmp qword ptr [rsi + 0x2e]; 
0x0000000000030d53: fcos; jmp qword ptr [rsi + 0xf]; 
0x0000000000034759: fdiv dword ptr [rbp + 0x13]; fld xword ptr [rsp + 0x30]; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x0000000000052cf2: fdiv dword ptr [rcx]; ror byte ptr [rdi], 0x1f; add byte ptr [rbx + 0x14898614], cl; or dword ptr [rax - 0x7d], 0x394801c0; ret; 
0x0000000000032dd4: fdiv dword ptr [rdi + 0xff20007]; pop rcx; ret 0x96eb; 
0x000000000007afe5: fdiv dword ptr [rdi + 3]; f2xm1; ret; 
0x00000000000340e2: fdiv dword ptr [rdi - 0x4b]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000034232: fdiv dword ptr [rsi - 0x4b]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000061312: fdiv st(3), st(0); jmp qword ptr [rsi + 0x2e]; 
0x0000000000033476: fdiv st(3); subps xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x00000000000412d3: fdiv st(5), st(0); jmp qword ptr [rsi + 0x2e]; 
0x000000000007895e: fdiv st(7), st(0); dec dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x00000000000311c9: fdivp st(1); faddp st(1); ret; 
0x00000000000321b3: fdivp st(1); ret; 
0x00000000000610e2: fdivp st(3); jmp qword ptr [rsi + 0x2e]; 
0x0000000000023ce3: fdivp st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000042144: fdivr dword ptr [rax + 0x10]; syscall; 
0x0000000000067732: fdivr dword ptr [rcx]; ret; 
0x00000000000703a4: fdivr dword ptr [rsi + 1]; mov rax, r8; syscall; 
0x00000000000703a4: fdivr dword ptr [rsi + 1]; mov rax, r8; syscall; ret; 
0x0000000000027e91: fdivr dword ptr [rsi]; jmp rax; 
0x0000000000039b51: fdivr st(3), st(0); mulps xmm1, xmm4; addss xmm2, xmm3; addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x000000000005efbb: fdivr st(7); dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000242d3: fdivr st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000034cda: fdivr st(7); mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d070: fdivr st(7); mov eax, r8d; ret; 
0x00000000000324c6: fdivrp st(1); fmul st(1); faddp st(1); ret; 
0x000000000003230b: fdivrp st(1); fsubr dword ptr [rip + 0x7e7c1]; add rsp, 0x60; pop rbx; ret; 
0x000000000003a505: fdivrp st(1); ret; 
0x000000000003260f: fdivrp st(2); faddp st(1); add rsp, 0x28; ret; 
0x0000000000031214: fdivrp st(2); faddp st(1); fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x0000000000030a1e: fdivrp st(2); fmul st(1), st(0); faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000001eab5: fiadd dword ptr [rax]; add byte ptr [rax], al; lea rdi, [rip + 0x98490]; syscall; 
0x000000000006d514: fiadd dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000003f68e: fiadd dword ptr [rbp + 0x450f48db]; ret 0x48f2; 
0x000000000006a553: fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000002ef7e: fiadd word ptr [rax]; add byte ptr [rax], al; movss xmm0, dword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x0000000000073a26: fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000559fc: fiadd word ptr [rbp - 0x7b]; in al, 0xf; xchg eax, ebp; ret 0xd3e9; 
0x000000000004bb84: fiadd word ptr [rcx]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000077dd2: ficomp dword ptr [rdi + 3]; add byte ptr [rax + 0x29], cl; ret; 
0x000000000005c8d5: fidiv dword ptr [rax + rcx - 0x3d]; nop dword ptr [rax]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000002337a: fidiv dword ptr [rbp + 0x13]; test edx, edx; jne 0x23390; mov eax, 0xd5; mov edi, 1; syscall; 
0x000000000006c777: fidiv dword ptr [rbp + 0x22]; mov rax, r8; syscall; 
0x0000000000059d57: fidiv dword ptr [rbp + 0x36]; xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000023f9c: fidiv dword ptr [rbp + 0x41]; mov eax, 0x11a; syscall; 
0x000000000007437f: fidiv dword ptr [rbp + 0x4e]; mov edx, 0x21; nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000006c120: fidiv dword ptr [rbp + 0xd]; mov rax, r8; syscall; 
0x0000000000023448: fidiv dword ptr [rbp + 0xd]; test esi, esi; jne 0x23458; mov eax, 0x11c; syscall; 
0x000000000002361a: fidiv dword ptr [rbp + 0xe]; test edx, edx; jne 0x2362b; mov eax, 0xfd; syscall; 
0x0000000000023402: fidiv dword ptr [rbp + 0xe]; test r8, r8; jne 0x23413; mov eax, 0xe8; syscall; 
0x000000000006c1d5: fidiv dword ptr [rbp + 5]; mov rax, r8; syscall; 
0x000000000006b546: fidiv dword ptr [rbp + 7]; xor esi, esi; mov rax, r9; syscall; 
0x000000000006c2aa: fidiv dword ptr [rbp + 8]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d90c: fidiv dword ptr [rbp + 9]; mov rax, r8; syscall; 
0x000000000005e660: fidiv dword ptr [rbp + rbp + 0x5b]; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000006d250: fidiv dword ptr [rbp + rcx + 0x48]; add esp, 8; ret; 
0x000000000006ed08: fidiv dword ptr [rbp - 0x1e]; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed08: fidiv dword ptr [rbp - 0x1e]; mov esi, 1; mov rax, r8; syscall; ret; 
0x00000000000703a2: fidiv dword ptr [rbp - 0x28]; mov esi, 1; mov rax, r8; syscall; 
0x00000000000703a2: fidiv dword ptr [rbp - 0x28]; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006f0a7: fidiv dword ptr [rbp - 0x2d]; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006fc95: fidiv dword ptr [rbp - 0x2f]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a8: fidiv dword ptr [rbp - 0x31]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a8: fidiv dword ptr [rbp - 0x31]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005c869: fidiv dword ptr [rbp - 0x32]; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000006cc3a: fidiv dword ptr [rbp - 0x3d]; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006d040: fidiv dword ptr [rbp - 0x3e]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ee0b: fidiv dword ptr [rbp - 0x3f]; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ea0b: fidiv dword ptr [rbp - 0x43]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006bfbb: fidiv dword ptr [rbp - 0x76]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b12: fidiv dword ptr [rbx + rdi + 0x44]; mov eax, eax; pop rbx; ret; 
0x000000000005f754: fidiv dword ptr [rcx + rdi + 0x44]; mov eax, eax; add rsp, 8; ret; 
0x000000000001b1d4: fidiv dword ptr [rcx]; ret 0x5403; 
0x000000000005d543: fidiv dword ptr [rdx + rbp + 0x48]; add esp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000003fb8e: fidiv dword ptr [rdx]; and al, 0x21; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x000000000005bbc3: fidivr dword ptr [rax + 0x10c]; syscall; 
0x000000000006141d: fidivr word ptr [rax + 6]; mov rdi, r12; syscall; 
0x000000000002b47c: fild dword ptr [rcx + 0xfffe3]; add byte ptr [rax + 1], cl; ret; 
0x0000000000055f61: fild dword ptr [rcx + rcx*4 + 0x7d]; adc al, 0x89; sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x0000000000032609: fild dword ptr [rsp + 0x1c]; fld1; fdivrp st(2); faddp st(1); add rsp, 0x28; ret; 
0x000000000003a520: fild dword ptr [rsp + 0x1c]; pop rax; pop rdx; add rsp, 0x18; ret; 
0x000000000001843d: fild qword ptr [rdx]; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000003d37b: fild word ptr [rax]; add byte ptr [rax], al; add rsp, 0x38; ret; 
0x0000000000073d53: fild word ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000000653f7: fild word ptr [rbx + 0x440f03f9]; ret 0xf883; 
0x000000000001dca6: fild word ptr [rbx + 0x4765dfa]; xor eax, eax; ret; 
0x000000000001bda1: fild word ptr [rcx + 1]; ret 0xc1c1; 
0x000000000001c6da: fild word ptr [rcx - 0x7d]; out dx, eax; and al, ch; idiv rdi; inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x000000000002235d: fild word ptr [rdx - 0x76b80000]; ret; 
0x00000000000527c2: fimul dword ptr [rax - 0x7d]; ret; 
0x000000000006e5ea: fimul dword ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000006d06b: fimul dword ptr [rdi]; test dword ptr [rdi + rdi*8 - 1], edx; dec dword ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006cddb: fimul dword ptr [rdi]; test dword ptr [rsi + 0x4cfffffc], eax; mov eax, eax; mov rsi, rdx; syscall; 
0x0000000000029fbe: fimul word ptr [rax - 0x7d]; ret; 
0x00000000000744ef: fimul word ptr [rcx + rcx*4 - 0xe]; syscall; 
0x000000000005cf41: fistp dword ptr [rdi]; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d041: fistp dword ptr [rsi]; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000025ea2: fistp qword ptr [rsi]; jmp rdi; 
0x000000000001f27d: fistp word ptr [rbp - 1]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000057c40: fistp word ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x000000000003f51e: fisttp dword ptr [rbp + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x000000000004ec62: fisttp dword ptr [rbp + rcx*4 + 0x35]; ret; 
0x000000000003f5fa: fisttp dword ptr [rcx + 0x29]; ret; 
0x000000000003fff8: fisttp dword ptr [rdi + rcx + 0x45]; ret; 
0x000000000004561e: fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xd184; 
0x000000000005cc1d: fisttp qword ptr [rax + 0x29]; ret 0x149; 
0x0000000000066138: fisttp qword ptr [rax - 0x77]; ret; 
0x0000000000075f2d: fisttp qword ptr [rax - 0x7d]; ret; 
0x00000000000438cc: fisttp word ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000001f6f4: fisttp word ptr [rbx + rcx*4 - 0x5c]; ret 0x108; 
0x000000000004cd18: fisttp word ptr [rcx + 0x63]; ror byte ptr [rax - 0x39], 4; ret 0; 
0x000000000001cb25: fisttp word ptr [rcx + 1]; ret 0xc148; 
0x000000000006c114: fisttp word ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000006bfb2: fisttp word ptr [rcx + rcx*4 - 0x40]; syscall; 
0x000000000005e121: fisttp word ptr [rcx - 0x3a76be3a]; mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000005e325: fisttp word ptr [rcx - 0x75]; adc byte ptr [rcx - 0x75], r9b; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000007792f: fisttp word ptr [rcx - 0x75]; mov esp, 0xd824; add al, ch; ret; 
0x0000000000049b76: fisttp word ptr [rcx - 0x77]; ret 0xe1e8; 
0x000000000002941f: fisttp word ptr [rdi]; xchg eax, ebp; ret 0xd084; 
0x000000000005cd3e: fisub word ptr [rcx]; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000001e76d: fld dword ptr [rax]; add byte ptr [rax], al; mov edx, 0x800; mov rsi, r9; syscall; 
0x000000000002359c: fld dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000006b2e3: fld dword ptr [rdx]; add byte ptr [rax], al; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000003a974: fld dword ptr [rip + 0x74bd6]; ret; 
0x00000000000171f5: fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x0000000000067b1f: fld qword ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; mov rsi, r15; mov rdi, r8; call rax; 
0x000000000001fbeb: fld qword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000001fbeb: fld qword ptr [rax]; add byte ptr [rax], al; syscall; neg eax; ret; 
0x0000000000061a62: fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x0000000000017ac9: fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000017abf: fld qword ptr [rsp + 8]; movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000030a40: fld st(0); faddp st(1); ret; 
0x000000000002d286: fld xword ptr [rax - 0x10]; faddp st(1); cmp rax, rdi; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2c6: fld xword ptr [rax - 0x10]; faddp st(1); cmp rax, rdi; jne 0x2d2c0; fstp st(1); ret; 
0x0000000000061a04: fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000003f0e3: fld xword ptr [rip + 0x6eb17]; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000325e4: fld xword ptr [rip + 0x7aaf6]; test ax, ax; je 0x32640; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x000000000002e8b8: fld xword ptr [rip + 0x7e932]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000002e8a2: fld xword ptr [rip + 0x7e958]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x0000000000034747: fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000003a884: fld xword ptr [rsp + 0x10]; faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x0000000000034ba0: fld xword ptr [rsp + 0x10]; fcmove st(0), st(1); fstp st(1); add rsp, 0x48; ret; 
0x000000000003a91c: fld xword ptr [rsp + 0x10]; pop rbx; fstp xword ptr [rdi]; ret; 
0x00000000000340e5: fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x00000000000337a6: fld xword ptr [rsp + 0x10]; test eax, eax; jne 0x337b8; add rsp, 8; ret; 
0x000000000007afaf: fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x0000000000017e84: fld xword ptr [rsp + 0x18]; ret; 
0x0000000000032436: fld xword ptr [rsp + 0x20]; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x00000000000337f0: fld xword ptr [rsp + 0x20]; add rsp, 8; ret; 
0x000000000003409a: fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000003ac2b: fld xword ptr [rsp + 0x30]; fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x000000000003475c: fld xword ptr [rsp + 0x30]; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x000000000003ad06: fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x00000000000180ae: fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x000000000003ac2f: fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x0000000000018400: fld xword ptr [rsp + 0x40]; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x0000000000018404: fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x000000000007b19f: fld xword ptr [rsp + 8]; cmp eax, 0x3ffd9400; ja 0x7b1ad; fyl2xp1; ret; 
0x000000000003f3f4: fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000007afab: fld xword ptr [rsp + 8]; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000007afb6: fld xword ptr [rsp + 8]; fld1; fpatan; ret; 
0x000000000003fba4: fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbd4: fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000007b18d: fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000018484: fld xword ptr [rsp + 8]; ret; 
0x0000000000030a24: fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000030c1e: fld xword ptr [rsp - 0x18]; ret; 
0x000000000003cdd1: fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000007ad58: fld xword ptr [rsp - 0x68]; ret; 
0x000000000003aa5d: fld xword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003eeb8: fld xword ptr [rsp]; add rsp, 0x28; fmulp st(1); ret; 
0x0000000000032628: fld xword ptr [rsp]; add rsp, 0x28; fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x0000000000032652: fld xword ptr [rsp]; add rsp, 0x28; fsubp st(1); ret; 
0x000000000007b084: fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x000000000001800c: fld xword ptr [rsp]; jne 0x18018; add rsp, 0x58; fxch st(1); ret; 
0x00000000000311e0: fld1; add rsp, 0x28; ret; 
0x000000000007b080: fld1; faddp st(1); fld xword ptr [rsp]; fmulp st(1); add rsp, 0x10; ret; 
0x000000000007b1ad: fld1; faddp st(1); fyl2x; ret; 
0x000000000003cdec: fld1; faddp st(1); test cx, cx; jns 0x3cdb0; fchs; ret; 
0x000000000003a501: fld1; fchs; fdivrp st(1); ret; 
0x000000000003260d: fld1; fdivrp st(2); faddp st(1); add rsp, 0x28; ret; 
0x0000000000031212: fld1; fdivrp st(2); faddp st(1); fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x0000000000032434: fld1; fld xword ptr [rsp + 0x20]; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x000000000007b1b4: fld1; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000032650: fld1; fld xword ptr [rsp]; add rsp, 0x28; fsubp st(1); ret; 
0x000000000007afba: fld1; fpatan; ret; 
0x000000000007aff2: fld1; fsubp st(1); ret; 
0x000000000003cda7: fld1; fsubp st(1); test cx, cx; js 0x3cdf5; ret; 
0x00000000000325d0: fld1; fsubrp st(1); ret; 
0x000000000007afd5: fld1; jb 0x7afde; fstp st(1); fchs; ret; 
0x000000000007b0a8: fld1; js 0x7b0b1; fscale; fstp st(1); ret; 
0x00000000000394ce: fldcw word ptr [rsp + 0x1e]; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000007b16c: fldcw word ptr [rsp + 8]; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000007b176: fldcw word ptr [rsp + 8]; ret; 
0x000000000007af18: fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x00000000000319af: fldenv [rsi + 0xf]; sub bl, dl; movapd xmm0, xmm2; ret; 
0x000000000007b18b: fldlg2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000002f33c: fldln2; faddp st(1); ret; 
0x000000000007b1bd: fldln2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000071d6a: fldpi; fucomip st(0); scasb al, byte ptr [rdi]; sar edx, 1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000337e4: fldz; add rsp, 8; ret; 
0x0000000000020c50: fldz; ret; 
0x000000000003a8b0: fldz; test bx, bx; je 0x3a88c; fchs; pop rbx; ret; 
0x0000000000072458: fmul dword ptr [rax + 0x63]; clc; call 0x21bc0; add rsp, 8; ret; 
0x000000000005c857: fmul dword ptr [rax + 0x63]; rol byte ptr [rbp + 0x31], cl; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x00000000000649f5: fmul dword ptr [rax + 1]; ret; 
0x000000000006a5ed: fmul dword ptr [rax - 0x3f]; clc; add bl, byte ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000000464bd: fmul dword ptr [rax - 0x73]; sbb byte ptr [r8 - 0x7d], cl; ret; 
0x000000000006afc7: fmul dword ptr [rax - 0x77]; call 0x5c480d2a; ret; 
0x000000000005c860: fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x0000000000018a69: fmul dword ptr [rax - 0x77]; ret 0xf66; 
0x0000000000042fb6: fmul dword ptr [rax - 0x7d]; ret; 
0x000000000002bc4e: fmul dword ptr [rbp - 0x77]; ret; 
0x000000000006c305: fmul dword ptr [rcx + rcx*4 - 0x32]; mov rdx, r8; syscall; 
0x000000000003cdcc: fmul dword ptr [rcx - 0x241fdbac]; insb byte ptr [rdi], dx; and al, 0xd8; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000003bc2a: fmul dword ptr [rdi]; wait; ret 0x440f; 
0x00000000000190e2: fmul dword ptr [rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000003cdd5: fmul dword ptr [rip + 0x726f5]; ret; 
0x0000000000031218: fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x0000000000032410: fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x00000000000190e1: fmul dword ptr cs:[rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000045943: fmul qword ptr [rax + 0x29]; cli; lea eax, [rdx + 1]; ret; 
0x000000000001df13: fmul qword ptr [rax + 0x63]; vminsd xmm8, xmm4, qword ptr [rcx + 0x5c]; ret; 
0x0000000000029c3a: fmul qword ptr [rax - 0x7d]; ret; 
0x000000000003a4fb: fmul st(0); add rsp, 0x18; fld1; fchs; fdivrp st(1); ret; 
0x000000000003a530: fmul st(0); add rsp, 0x18; ret; 
0x0000000000032640: fmul st(0); add rsp, 0x28; ret; 
0x0000000000038fec: fmul st(0); pop r13; ret; 
0x0000000000030a20: fmul st(1), st(0); faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000007b150: fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x00000000000324c8: fmul st(1); faddp st(1); ret; 
0x000000000007b087: fmulp st(1); add rsp, 0x10; ret; 
0x000000000003240c: fmulp st(1); faddp st(1); fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x000000000002e8c0: fmulp st(1); faddp st(1); ret; 
0x000000000003eeb6: fmulp st(1); fld xword ptr [rsp]; add rsp, 0x28; fmulp st(1); ret; 
0x000000000007af8d: fmulp st(1); fsqrt; fabs; fxch st(1); fpatan; ret; 
0x000000000007afa4: fmulp st(1); fsqrt; fpatan; ret; 
0x0000000000030a28: fmulp st(1); ret; 
0x000000000002e8b6: fmulp st(2); fld xword ptr [rip + 0x7e932]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000002e8a8: fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x000000000006fc03: fnsave dword ptr [rbx + 4]; add al, ch; mov ecx, 0xc031ffff; pop rbp; ret; 
0x000000000007af0a: fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000007af46: fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000003fa62: fnstsw ax; test ah, 4; jne 0x3fa60; fstp st(1); ret; 
0x000000000003fb42: fnstsw ax; test ah, 4; jne 0x3fb40; fstp st(1); ret; 
0x000000000007af95: fpatan; ret; 
0x000000000003347a: fpatan; subps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000003fb40: fprem1; fnstsw ax; test ah, 4; jne 0x3fb40; fstp st(1); ret; 
0x000000000003fa60: fprem; fnstsw ax; test ah, 4; jne 0x3fa60; fstp st(1); ret; 
0x000000000007b170: frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003fba8: frndint; ret; 
0x000000000007b056: fscale; fstp st(1); add rsp, 0x10; ret; 
0x000000000007b0ac: fscale; fstp st(1); ret; 
0x000000000006155f: fsincos; jmp qword ptr [rsi + 0x2e]; 
0x000000000007af8f: fsqrt; fabs; fxch st(1); fpatan; ret; 
0x000000000007afa6: fsqrt; fpatan; ret; 
0x000000000003fbd8: fsqrt; ret; 
0x00000000000171f1: fstp dword ptr [rsp + 0x10]; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x00000000000680ff: fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000068122: fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb0: fstp qword ptr [rsp + 8]; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x000000000002ec92: fstp st(0); add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000034be6: fstp st(0); add rsp, 0x48; ret; 
0x000000000003cda5: fstp st(0); fld1; fsubp st(1); test cx, cx; js 0x3cdf5; ret; 
0x00000000000337e2: fstp st(0); fldz; add rsp, 8; ret; 
0x000000000002ec90: fstp st(0); fstp st(0); add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003f100: fstp st(0); fstp st(0); add rsp, 0x48; ret; 
0x00000000000337e0: fstp st(0); fstp st(0); fldz; add rsp, 8; ret; 
0x000000000007ad52: fstp st(0); fstp st(0); fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x000000000007ad54: fstp st(0); fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x00000000000340e1: fstp st(0); ja 0x3409a; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000007afe4: fstp st(0); ja 0x7afeb; f2xm1; ret; 
0x0000000000034231: fstp st(0); jbe 0x341ea; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000034758: fstp st(0); jne 0x3476f; fld xword ptr [rsp + 0x30]; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x000000000007b058: fstp st(1); add rsp, 0x10; ret; 
0x000000000003e030: fstp st(1); add rsp, 0x30; pop rbx; pop r12; pop r13; ret; 
0x0000000000034ba6: fstp st(1); add rsp, 0x48; ret; 
0x000000000007afd9: fstp st(1); fchs; ret; 
0x000000000003a91a: fstp st(1); fld xword ptr [rsp + 0x10]; pop rbx; fstp xword ptr [rdi]; ret; 
0x000000000007ad56: fstp st(1); fld xword ptr [rsp - 0x68]; ret; 
0x000000000002d290: fstp st(1); ret; 
0x000000000003e76a: fstp xword ptr [rax + 0x27]; add rsp, 0x10; pop rbx; ret; 
0x000000000002f76c: fstp xword ptr [rax + 9]; add rsp, 0x10; pop rbx; ret; 
0x000000000003e791: fstp xword ptr [rcx - 0x27]; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000003a909: fstp xword ptr [rdi]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000003a88a: fstp xword ptr [rdi]; pop rbx; ret; 
0x000000000003a8f9: fstp xword ptr [rdi]; ret; 
0x00000000000311dc: fstp xword ptr [rsp + 0x10]; fld1; add rsp, 0x28; ret; 
0x000000000003d250: fstp xword ptr [rsp - 0x18]; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000003a91b: fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x10; pop rbx; fstp xword ptr [rdi]; ret; 
0x000000000007ad57: fstpnce st(3), st(0); insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000002b6e3: fsub dword ptr [rcx]; shr byte ptr [rcx], 1; ret 0xc189; 
0x000000000002ee83: fsub dword ptr [rsi + 0xf]; out dx, eax; sal dl, 0xf; pop rsi; ret; 
0x0000000000016884: fsub dword ptr [rsi + 9]; add byte ptr [rsi + 0xf], ah; sub al, cl; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000003262f: fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x000000000002cf20: fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x0000000000043ab4: fsubp st(0); mov ah, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x0000000000071d00: fsubp st(0); sbb dl, dl; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000002e8a0: fsubp st(1); fld xword ptr [rip + 0x7e958]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x000000000002e8ac: fsubp st(1); ret; 
0x00000000000323db: fsubp st(1); test ax, ax; je 0x323e4; fchs; add rsp, 0x18; ret; 
0x000000000003cda9: fsubp st(1); test cx, cx; js 0x3cdf5; ret; 
0x000000000002e8be: fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x00000000000325ef: fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x000000000003230d: fsubr dword ptr [rip + 0x7e7c1]; add rsp, 0x60; pop rbx; ret; 
0x00000000000685e0: fsubr st(0); cmp ch, byte ptr [rcx - 5]; jmp qword ptr [rsi + 0x2e]; 
0x000000000007afa0: fsubr st(1), st(0); fadd st(2); fmulp st(1); fsqrt; fpatan; ret; 
0x00000000000337d9: fsubrp st(1); add rsp, 8; ret; 
0x000000000002cf22: fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x000000000002e8aa: fsubrp st(1); fsubp st(1); ret; 
0x000000000003e17a: fsubrp st(1); mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x00000000000390d5: fsubrp st(1); pop r13; ret; 
0x00000000000325d2: fsubrp st(1); ret; 
0x000000000003e766: fsubrp st(1); test bx, bx; js 0x3e794; add rsp, 0x10; pop rbx; ret; 
0x000000000002cf1e: fsubrp st(4); fsub st(2); fsubrp st(1); faddp st(2); faddp st(1); ret; 
0x0000000000045c6b: fucomi st(0); scasd eax, dword ptr [rdi]; xchg eax, edx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000001ff1b: fucomip st(0); iretd; sbb eax, dword ptr [rax]; add cl, ch; cmp esi, -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000001d7a7: fucomip st(0); ret; 
0x0000000000071d6c: fucomip st(0); scasb al, byte ptr [rdi]; sar edx, 1; jmp qword ptr [rsi + 0x2e]; 
0x000000000007afd3: fucomip st(1); fld1; jb 0x7afde; fstp st(1); fchs; ret; 
0x000000000007afe2: fucomip st(1); fstp st(0); ja 0x7afeb; f2xm1; ret; 
0x0000000000016a09: fxch st(1); fchs; add rsp, 0x38; fxch st(1); ret; 
0x000000000007af93: fxch st(1); fpatan; ret; 
0x000000000003a8f7: fxch st(1); fstp xword ptr [rdi]; ret; 
0x000000000001699b: fxch st(1); ret; 
0x00000000000311c5: fxch st(2); fadd st(0); fdivp st(1); faddp st(1); ret; 
0x000000000007b191: fyl2x; ret; 
0x000000000007b1aa: fyl2xp1; ret; 
0x000000000002c832: hlt; cmp byte ptr [rdx], 0; je 0x2c839; hlt; sub rax, rdi; ret; 
0x0000000000067562: hlt; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x0000000000018076: hlt; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000003ba35: hlt; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000001ef24: hlt; ret; 
0x000000000002c838: hlt; sub rax, rdi; ret; 
0x00000000000796e2: idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000753aa: idiv byte ptr [rax + 0x10a]; syscall; 
0x000000000002415d: idiv byte ptr [rax + 0x11b]; syscall; 
0x000000000002350b: idiv byte ptr [rax + 0x12c]; syscall; 
0x0000000000023edd: idiv byte ptr [rax + 0x134]; syscall; 
0x0000000000023909: idiv byte ptr [rax + 0x13f]; syscall; 
0x0000000000023909: idiv byte ptr [rax + 0x13f]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007419a: idiv byte ptr [rax + 0x15]; syscall; 
0x000000000007419a: idiv byte ptr [rax + 0x15]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000050916: idiv byte ptr [rax + 0x16]; test esi, 0xffffff00; jne 0x50928; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000002217d: idiv byte ptr [rax + 0x1f]; syscall; 
0x000000000002217d: idiv byte ptr [rax + 0x1f]; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005ac2d: idiv byte ptr [rax + 0x3e]; syscall; 
0x000000000005ac2d: idiv byte ptr [rax + 0x3e]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f6d: idiv byte ptr [rax + 0x44]; syscall; 
0x0000000000021f6d: idiv byte ptr [rax + 0x44]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f3d: idiv byte ptr [rax + 0x47]; syscall; 
0x0000000000021f3d: idiv byte ptr [rax + 0x47]; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002355d: idiv byte ptr [rax + 0x49]; syscall; 
0x000000000002355d: idiv byte ptr [rax + 0x49]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bf59: idiv byte ptr [rax + 0x53]; syscall; 
0x000000000005bf59: idiv byte ptr [rax + 0x53]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005b9b9: idiv byte ptr [rax + 0x5a]; syscall; 
0x000000000005b9b9: idiv byte ptr [rax + 0x5a]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007514d: idiv byte ptr [rax + 0x6d]; syscall; 
0x000000000007514d: idiv byte ptr [rax + 0x6d]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bfd9: idiv byte ptr [rax + 0x85]; syscall; 
0x00000000000411cc: idiv byte ptr [rax + 0x8c]; syscall; 
0x00000000000239da: idiv byte ptr [rax + 0xa6]; syscall; 
0x00000000000239da: idiv byte ptr [rax + 0xa6]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002408a: idiv byte ptr [rax + 0xa7]; syscall; 
0x000000000002408a: idiv byte ptr [rax + 0xa7]; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023979: idiv byte ptr [rax + 0xb0]; syscall; 
0x0000000000073d51: idiv byte ptr [rax + 0xdf]; syscall; 
0x0000000000043dba: idiv byte ptr [rax + 0xf0]; syscall; 
0x000000000002368d: idiv byte ptr [rax + 0xff]; syscall; 
0x0000000000022e8e: idiv byte ptr [rsi]; or dword ptr [rax], eax; add rsp, 8; mov rax, r8; ret; 
0x0000000000049b71: idiv edi; dec dword ptr [rax - 0x77]; fisttp word ptr [rcx - 0x77]; ret 0xe1e8; 
0x0000000000063d6a: idiv edi; dec dword ptr [rbx - 0x7cb7fbb6]; ret 0x8504; 
0x0000000000069a2b: idiv edi; dec dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000001c6e1: idiv edi; inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x0000000000035e6f: idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000002bf57: idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000005534b: idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000004c4bf: idiv edi; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c588: idiv edi; mov eax, 0x35; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000005ec47: idiv edi; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000006780a: idiv esi; ret; 
0x0000000000067597: idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x000000000004fd2d: idiv esp; dec dword ptr [rax - 0x77]; ret 0xffb8; 
0x000000000001c6e0: idiv rdi; inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x0000000000067809: idiv rsi; ret; 
0x00000000000688ec: imul al; mov edi, 0x48000129; add esp, 8; ret; 
0x0000000000040697: imul al; ret; 
0x000000000006e45a: imul cl; and byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000006a511: imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; ret; 
0x0000000000038495: imul eax, dword ptr [rdi], 0x590ff200; retf 0xff2; pop rcx; ret 0xff2; 
0x000000000003cd03: imul eax, dword ptr [rdx], 0xb7eb0007; nop dword ptr [rax]; mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000004efbf: imul eax, dword ptr [rip + 0x67e72]; add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x0000000000052216: imul eax; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000066033: imul eax; neg dword ptr [rdi + rdi*8 - 0x76387601]; ret; 
0x0000000000061407: imul eax; ret; 
0x0000000000023d06: imul ebx, dword ptr [rcx], 0x50f2812; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000440de: imul ecx, dword ptr [rax - 0x7d], 0x5d5b18c4; ret; 
0x000000000005f81b: imul ecx, dword ptr [rcx + 5], 0xb60f00; ret; 
0x0000000000061404: imul ecx, dword ptr [rcx + rcx*4 - 9], -0x18; ret; 
0x0000000000023e11: imul edx, dword ptr [rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000053437: imul edx, dword ptr [rax], 0x5b; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005f6b1: imul edx, edi, -1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000067564: imul esp, ebp; add r12, r13; mov rsi, r12; call rax; 
0x000000000002fbf3: imul esp, edi, 0xff20007; pop rcx; ret; 
0x0000000000067563: imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x000000000004efbe: imul rax, qword ptr [rip + 0x67e72]; add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x0000000000071e2a: in al, 0; add byte ptr [rax], al; mov rsi, rbp; syscall; 
0x000000000001e3cb: in al, 0x44; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000072a02: in al, 0x48; add esp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000006a22d: in al, 0x48; add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000004ad33: in al, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000059bfe: in al, 0x48; cmp esi, eax; ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000006894b: in al, 0x48; mov eax, edi; ret; 
0x000000000005e1c6: in al, 0x5b; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000005a6ba: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000006a2ba: in al, 0x5d; mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000039d7b: in al, 0x66; movaps xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000006e32b: in al, 0x74; movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000005d3d5: in al, 0x75; sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000000483c6: in al, 0x89; ret; 
0x000000000006ad4a: in al, 0xeb; ret; 
0x0000000000033337: in al, 0xf2; addps xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x0000000000055536: in al, 0xf; xchg eax, ebp; ret 0x45c7; 
0x00000000000553b2: in al, 0xf; xchg eax, ebp; ret 0x4c7; 
0x000000000005517f: in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x000000000002990a: in al, 0xf; xchg eax, ebp; ret 0xc031; 
0x00000000000559ff: in al, 0xf; xchg eax, ebp; ret 0xd3e9; 
0x000000000007a5a0: in al, 0xf; xchg eax, edi; ret 0x2e0f; 
0x000000000005d2b1: in al, 1; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000034ae7: in al, dx; adc cl, bl; ret 0xc9d8; 
0x000000000002aa5a: in al, dx; add al, 0x84; ret 0x840f; 
0x000000000006f20f: in al, dx; add byte ptr [rcx + rcx*4 - 0x20], 0x5b; pop rbp; pop r12; ret; 
0x000000000007b18c: in al, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000043830: in al, dx; mov dh, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x000000000006ade3: in al, dx; mov eax, edx; sub eax, ecx; ret; 
0x000000000005ef68: in al, dx; mov rdx, qword ptr [rbx + 0x28]; pop rbx; sub rdx, rcx; add rax, rdx; ret; 
0x0000000000067569: in al, dx; mov rsi, r12; call rax; 
0x000000000001eded: in al, dx; or al, ch; mov word ptr [rcx - 0x1076fffb], ds; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000004f222: in al, dx; or al, ch; push rdi; ret 1; 
0x000000000005c053: in al, dx; or bl, dh; stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c083: in al, dx; or bl, dh; stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000023369: in al, dx; or byte ptr [rax + 0x123], bh; mov rdx, rdi; syscall; 
0x0000000000023609: in al, dx; or byte ptr [rax + 0x126], bh; mov rdx, rdi; syscall; 
0x0000000000074d16: in al, dx; or byte ptr [rax + 0x16], bh; syscall; 
0x0000000000059e46: in al, dx; or byte ptr [rax + 0x18], bh; syscall; 
0x00000000000435e6: in al, dx; or byte ptr [rax + 0x1b], bh; syscall; 
0x000000000004f9c6: in al, dx; or byte ptr [rax + 0x3b], bh; syscall; 
0x0000000000042f76: in al, dx; or byte ptr [rax + 0x3f], bh; syscall; 
0x00000000000221a6: in al, dx; or byte ptr [rax + 0x43], bh; syscall; 
0x0000000000075476: in al, dx; or byte ptr [rax + 0x4c], bh; syscall; 
0x0000000000074246: in al, dx; or byte ptr [rax + 0x50], bh; syscall; 
0x0000000000060d66: in al, dx; or byte ptr [rax + 0x52], bh; syscall; 
0x00000000000750c6: in al, dx; or byte ptr [rax + 0x54], bh; syscall; 
0x0000000000074c16: in al, dx; or byte ptr [rax + 0x56], bh; syscall; 
0x0000000000060d36: in al, dx; or byte ptr [rax + 0x57], bh; syscall; 
0x0000000000075386: in al, dx; or byte ptr [rax + 0x58], bh; syscall; 
0x0000000000024116: in al, dx; or byte ptr [rax + 0x63], bh; syscall; 
0x0000000000024156: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x11b]; syscall; 
0x0000000000023ed6: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x134]; syscall; 
0x0000000000022176: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x1f]; syscall; 
0x000000000005ac26: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x3e]; syscall; 
0x0000000000021f66: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x44]; syscall; 
0x0000000000021f36: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x47]; syscall; 
0x0000000000023556: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x49]; syscall; 
0x0000000000075146: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x6d]; syscall; 
0x0000000000023686: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0xff]; syscall; 
0x0000000000075666: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x107], cl; syscall; 
0x0000000000023a26: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x130], cl; syscall; 
0x00000000000236f6: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x67], cl; syscall; 
0x000000000005bf76: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0x102b8d2]; add byte ptr [rax], al; syscall; 
0x00000000000411c6: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0x8cb8f6]; add byte ptr [rax], al; syscall; 
0x0000000000023656: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0xfeb8d2]; add byte ptr [rax], al; syscall; 
0x0000000000042756: in al, dx; or byte ptr [rax + 0x63], cl; dec dword ptr [rcx - 0x2d9cb70a]; mov eax, 0x8d; syscall; 
0x00000000000753a6: in al, dx; or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0x10a]; syscall; 
0x0000000000074196: in al, dx; or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0x15]; syscall; 
0x00000000000239d6: in al, dx; or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xa6]; syscall; 
0x0000000000024086: in al, dx; or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xa7]; syscall; 
0x00000000000435c6: in al, dx; or byte ptr [rax + 0x63], cl; sar byte ptr [rax + 0x1c], cl; syscall; 
0x00000000000236b6: in al, dx; or byte ptr [rax + 0x63], cl; sar byte ptr [rax + 0xad], cl; syscall; 
0x0000000000075206: in al, dx; or byte ptr [rax + 0x70], bh; syscall; 
0x0000000000041216: in al, dx; or byte ptr [rax + 0x76], bh; syscall; 
0x00000000000411f6: in al, dx; or byte ptr [rax + 0x78], bh; syscall; 
0x0000000000023256: in al, dx; or byte ptr [rax + 0x7d], bh; syscall; 
0x0000000000023236: in al, dx; or byte ptr [rax + 0x7e], bh; syscall; 
0x000000000005b4f6: in al, dx; or byte ptr [rax + 0x7f], bh; mov esi, 8; syscall; 
0x0000000000023a56: in al, dx; or byte ptr [rax + 0x87], bh; syscall; 
0x0000000000043606: in al, dx; or byte ptr [rax + 0x95], bh; syscall; 
0x0000000000043876: in al, dx; or byte ptr [rax + 0x96], bh; syscall; 
0x0000000000043896: in al, dx; or byte ptr [rax + 0x98], bh; syscall; 
0x0000000000024216: in al, dx; or byte ptr [rax + 0x99], bh; syscall; 
0x0000000000023a76: in al, dx; or byte ptr [rax + 0x9b], bh; syscall; 
0x0000000000023276: in al, dx; or byte ptr [rax + 0xa1], bh; syscall; 
0x00000000000741b6: in al, dx; or byte ptr [rax + 0xa3], bh; syscall; 
0x00000000000239b6: in al, dx; or byte ptr [rax + 0xa6], bh; xor esi, esi; syscall; 
0x00000000000240a6: in al, dx; or byte ptr [rax + 0xa8], bh; syscall; 
0x0000000000023eb6: in al, dx; or byte ptr [rax + 0xaa], bh; syscall; 
0x0000000000042736: in al, dx; or byte ptr [rax + 0xab], bh; syscall; 
0x0000000000023956: in al, dx; or byte ptr [rax + 0xaf], bh; syscall; 
0x00000000000243f6: in al, dx; or byte ptr [rax + 0xc5], bh; syscall; 
0x0000000000024416: in al, dx; or byte ptr [rax + 0xc6], bh; syscall; 
0x0000000000071e0d: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x425ba; test rax, rax; je 0x71e26; call rax; 
0x000000000006d57b: in al, dx; or byte ptr [rax - 0x75], cl; jg 0x6d589; call qword ptr [rax]; 
0x000000000006b3c6: in al, dx; or byte ptr [rax - 0x77], cl; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b456: in al, dx; or byte ptr [rax - 0x77], cl; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x00000000000688e6: in al, dx; or byte ptr [rax - 0x77], cl; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x0000000000023296: in al, dx; or byte ptr [rbp + 0x481c74ff], al; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000023906: in al, dx; or byte ptr [rcx + 0x13fb8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000002392a: in al, dx; or byte ptr [rcx + 0x145b8d2], cl; add byte ptr [rax], al; syscall; 
0x000000000005bf56: in al, dx; or byte ptr [rcx + 0x53b8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000005b9b6: in al, dx; or byte ptr [rcx + 0x5ab8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000005c286: in al, dx; or byte ptr [rcx + 0x5fb8ff], cl; add byte ptr [rax], al; syscall; 
0x0000000000023dc6: in al, dx; or byte ptr [rcx + 0x7ab8ff], cl; add byte ptr [rax], al; syscall; 
0x0000000000023da6: in al, dx; or byte ptr [rcx + 0x7bb8ff], cl; add byte ptr [rax], al; syscall; 
0x000000000005bfd6: in al, dx; or byte ptr [rcx + 0x85b8f6], cl; add byte ptr [rax], al; syscall; 
0x0000000000023976: in al, dx; or byte ptr [rcx + 0xb0b8f6], cl; add byte ptr [rax], al; syscall; 
0x0000000000036489: in al, dx; or byte ptr [rcx - 0x10000003], al; jg 0x364a1; xchg dword ptr [rcx - 0x9000000], edi; ret; 
0x0000000000023506: in al, dx; or byte ptr [rcx - 0x47097601], cl; sub al, 1; add byte ptr [rax], al; syscall; 
0x00000000000234d6: in al, dx; or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11d; syscall; 
0x0000000000024186: in al, dx; or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11e; syscall; 
0x0000000000023b96: in al, dx; or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x12e; syscall; 
0x000000000005bff6: in al, dx; or byte ptr [rcx - 0x77], cl; retf 0xd289; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000023526: in al, dx; or byte ptr [rcx - 0x9cb70a], cl; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x00000000000747d6: in al, dx; or byte ptr [rcx - 0x9cb72e], cl; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x0000000000019a76: in al, dx; or byte ptr [rdi + 0x53], bh; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a96: in al, dx; or byte ptr [rdi + 0x54], bh; call 0x19ae0; add rsp, 8; ret; 
0x000000000004c482: in al, dx; or byte ptr [rdi], cl; add eax, 0x74eaf883; add eax, 0x75a3f883; or bh, dh; ret; 
0x0000000000077f90: in al, dx; ret 0xffff; 
0x000000000004ba30: in al, dx; xor al, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x000000000006909b: in al, dx; xor r8d, r8d; mov rax, r8; ret; 
0x000000000002fe0e: in ax, 7; add byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; ret; 
0x0000000000071d39: in eax, 0; add byte ptr [rax], al; movsxd rdi, r8d; syscall; 
0x000000000003d1ea: in eax, 0; add byte ptr [rax], al; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x0000000000071d8c: in eax, 0; add byte ptr [rax], al; syscall; 
0x000000000004f08a: in eax, 0x41; or dword ptr [rax], 1; ret; 
0x000000000007033a: in eax, 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000006931a: in eax, 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000067566: in eax, 0x4d; add esp, ebp; mov rsi, r12; call rax; 
0x000000000006a11a: in eax, 0x5d; ret; 
0x000000000002e7cb: in eax, 0x66; movaps xmm0, xmm4; ret; 
0x0000000000033320: in eax, 0x66; movd mm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000047ffc: in eax, 0x89; ret; 
0x000000000007a6ec: in eax, 0xf3; mulps xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000074d7b: in eax, 0xf7; ret; 
0x000000000003f5db: in eax, 0xf; xchg eax, edx; ret 0x2949; 
0x0000000000060934: in eax, 0xfb; jmp qword ptr [rsi + 0xf]; 
0x0000000000028347: in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000235db: in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000007aee8: in eax, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000002fe0f: in eax, 7; add byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; ret; 
0x0000000000044e9c: in eax, dx; add dword ptr [rax - 0x78], eax; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000002f33d: in eax, dx; faddp st(1); ret; 
0x000000000007b1be: in eax, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x000000000006ba61: in eax, dx; je 0x6ba98; mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000005e2f2: in eax, dx; jne 0x5e310; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000006e9af: in eax, dx; jne 0x6ea70; mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006a3bb: in eax, dx; nop dword ptr [rax]; mov eax, 1; ret; 
0x000000000005657f: in eax, dx; ret 0xffff; 
0x00000000000599c0: in eax, dx; sbb byte ptr [rdx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x00000000000606f5: in eax, dx; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000001ef62: in eax, dx; xor eax, eax; pop rbx; ret; 
0x000000000002d0c7: in eax, dx; xor r8d, r8d; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x000000000002365e: inc byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000042789: inc byte ptr [rbp + 0x48107fc0]; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000045421: inc byte ptr [rbx - 0x49f0fe3a]; shl byte ptr [rsi - 0x77], 0x8c; jl 0x453ad; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb60f; 
0x0000000000030ac5: inc byte ptr [rbx]; add byte ptr [rax], al; jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338c5: inc byte ptr [rbx]; add byte ptr [rax], al; jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000725df: inc byte ptr [rbx]; je 0x725f0; mov eax, 1; ret; 
0x0000000000030dc8: inc byte ptr [rcx]; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000006bd3a: inc byte ptr [rcx]; ja 0x6bd43; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd7a: inc byte ptr [rcx]; ja 0x6bd83; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000006f0fa: inc byte ptr [rcx]; ja 0x6f102; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001e448: inc byte ptr [rcx]; je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x0000000000073d85: inc byte ptr [rcx]; je 0x73d90; xor eax, eax; ret; 
0x000000000006bdbb: inc byte ptr [rcx]; mov eax, 0x16; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000001e44e: inc byte ptr [rdx]; je 0x1e460; ret; 
0x0000000000051f4b: inc byte ptr [rdx]; je 0x51e0b; and ebx, 1; mov rax, qword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x000000000006c819: inc dword ptr [r8 + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6e9: inc dword ptr [r8 + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000068945: inc dword ptr [r9 + r15 - 0x38]; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689f9: inc dword ptr [r9 + r15 - 0x38]; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x0000000000022e77: inc dword ptr [rax + 0xb740a38]; mov rax, r8; add rsp, 8; ret; 
0x0000000000045054: inc dword ptr [rax + 0xf]; mov dh, 0xff; cmp eax, 0x80; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x000000000006c81a: inc dword ptr [rax + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6ea: inc dword ptr [rax + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000054626: inc dword ptr [rax - 0x80]; jmp qword ptr [rdx + 0xf]; 
0x0000000000019e95: inc dword ptr [rax]; add bh, dh; rol byte ptr [rcx + 0x21], 1; ret; 
0x0000000000030013: inc dword ptr [rax]; add byte ptr [rax - 0x9a98b81], al; ret; 
0x00000000000485f8: inc dword ptr [rax]; add byte ptr [rax], al; ja 0x48608; shl edi, 0x18; or eax, edi; ret; 
0x000000000002d03d: inc dword ptr [rax]; add byte ptr [rax], al; je 0x2d050; mov eax, r8d; ret; 
0x000000000002368f: inc dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000001de14: inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000001e037: inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xfffeff], 0; setne al; ret; 
0x000000000004860b: inc dword ptr [rax]; add byte ptr [rdi + 0x10], dh; shl edi, 0x10; or eax, edi; ret; 
0x00000000000258fa: inc dword ptr [rax]; add byte ptr [rdi], cl; xchg byte ptr [rcx + rax - 0x49f10000], dl; ret; 
0x0000000000048655: inc dword ptr [rax]; ret; 
0x0000000000047e93: inc dword ptr [rbp + 0x31]; leave; mov eax, 0x37; syscall; 
0x000000000004c3ed: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451cc: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x0000000000048d6d: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5a: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x00000000000479ca: inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x000000000005bb91: inc dword ptr [rbp + 0x31]; ror byte ptr [rcx + rcx*4 - 0x20], cl; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000005bb44: inc dword ptr [rbp + 0x31]; sar byte ptr [rax + 0x10c], cl; syscall; 
0x000000000005ce40: inc dword ptr [rbp + 0x483b75c0]; lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000006b356: inc dword ptr [rbp - 0x3f6af040]; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000001dcb8: inc dword ptr [rbp - 0x3f6bf040]; add rsp, 8; movzx eax, al; ret; 
0x000000000002401c: inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x000000000002334c: inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x000000000004c3c3: inc dword ptr [rbp - 0x77]; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x36; syscall; 
0x0000000000052178: inc dword ptr [rbx + 0x308b01e3]; mov rdi, rbp; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000006b24f: inc dword ptr [rbx + 0x478930c8]; or byte ptr [rax + 0x100], bh; mov word ptr [rdi + 0x16], ax; ret; 
0x0000000000060d9f: inc dword ptr [rbx + 0x48df0065]; add esp, 8; pop rbx; pop rbp; ret; 
0x00000000000725dd: inc dword ptr [rbx + 0xd7403fe]; mov eax, 1; ret; 
0x000000000006c75c: inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000004209c: inc dword ptr [rbx - 0x148ae3c8]; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x0000000000041297: inc dword ptr [rbx - 0x298ad9c8]; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000007777e: inc dword ptr [rbx - 0x6bf00008]; ret 0x8b4d; 
0x0000000000051f52: inc dword ptr [rbx - 0x74b7fe1d]; and al, 8; mov rdi, rbp; call rax; 
0x000000000006638c: inc dword ptr [rbx - 0x7bf00008]; ret 0xfffe; 
0x000000000003d0da: inc dword ptr [rbx]; add byte ptr [rax], al; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000059d14: inc dword ptr [rcx + 0x5c]; pop r13; ret; 
0x000000000005a0cf: inc dword ptr [rcx + rcx*4 - 0x20]; mov qword ptr [rbx], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000015e56: inc dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000005d238: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbp; pop r12; pop r13; ret; 
0x000000000005d3fa: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000034cdb: inc dword ptr [rcx + rcx*4 - 0x40]; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d071: inc dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x00000000000546a5: inc dword ptr [rcx + rdi + 0x65]; xor byte ptr [rdi + rcx + 0x4d], al; xor byte ptr gs:[rax - 0x7d], cl; ret; 
0x0000000000068946: inc dword ptr [rcx + rdi - 0x38]; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689fa: inc dword ptr [rcx + rdi - 0x38]; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x000000000005bab3: inc dword ptr [rcx - 0x46]; add byte ptr [rcx], al; add byte ptr [rax], al; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006f5c5: inc dword ptr [rcx - 0x46]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x00000000000233f0: inc dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x000000000002c63c: inc dword ptr [rcx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, r8d; ret; 
0x000000000007431d: inc dword ptr [rcx - 0x48]; and dword ptr [rax], eax; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000006c02a: inc dword ptr [rcx - 0x48]; retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006c073: inc dword ptr [rcx - 0x48]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000050225: inc dword ptr [rcx - 0x75]; push rax; adc al, 0x39; ret 0x840f; 
0x000000000004a758: inc dword ptr [rcx - 0x77]; ret 0xc085; 
0x000000000004a799: inc dword ptr [rcx - 0x77]; ret 0xc1eb; 
0x000000000006344c: inc dword ptr [rcx - 0x77]; ret 0xd0f7; 
0x0000000000020338: inc dword ptr [rcx - 0x77]; ret; 
0x0000000000074d5d: inc dword ptr [rcx - 0x77]; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000005f787: inc dword ptr [rcx - 0x77]; shr bl, 0x99; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005d566: inc dword ptr [rcx - 0x77]; shr bl, 0xad; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000001a7f8: inc dword ptr [rcx - 0x77]; test dword ptr [rcx - 0x73], 0x83410872; ret 0x4101; 
0x000000000006f9e8: inc dword ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x000000000001c2cb: inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x0000000000046ddf: inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000046be5: inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret; 
0x000000000001e089: inc dword ptr [rcx]; add byte ptr [rsi + 2], dh; ret; 
0x000000000001dd82: inc dword ptr [rcx]; add byte ptr [rsi + 9], dh; ret; 
0x00000000000704a6: inc dword ptr [rcx]; lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000046efe: inc dword ptr [rdi + rcx - 0x49]; ret 0x8349; 
0x0000000000077887: inc dword ptr [rdi]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000002cfe0: inc dword ptr [rdi]; add byte ptr [rax], al; je 0x2cff0; mov eax, r8d; ret; 
0x000000000001dd79: inc dword ptr [rdx]; add byte ptr [rdi], cl; xchg eax, esi; rol byte ptr [rcx + 0x1ffffff], 0; jbe 0x1dd90; ret; 
0x000000000006f5bf: inc dword ptr [rdx]; ja 0x6f5e9; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000001de1a: inc dword ptr [rdx]; setbe al; ret; 
0x0000000000070355: inc dword ptr [rip + 0x46b25]; ret; 
0x000000000003e4e5: inc dword ptr [rsi]; add cl, ch; mov esp, 0xe8fffffe; or bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x000000000003fc6f: inc ecx; call 0xffffffffc6ef717c; add al, byte ptr [rax]; lea rax, [rip + 0x7739f]; ret; 
0x000000000002cda5: inc edi; add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000006fdfc: inc edi; add byte ptr [rbx], cl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000006fc4b: inc edi; add byte ptr [rbx], cl; add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000007226c: inc edi; add byte ptr [rbx], cl; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000002308c: inc edi; add byte ptr [rdi], bl; add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000004a9e6: inc edi; add byte ptr [rdx], bl; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000005ac68: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000005e504: inc edi; add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000075da4: inc edi; add eax, 0x4125d; add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000007af14: inc edi; je 0x7af20; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000003fc6e: inc rcx; call 0xffffffffc6ef717c; add al, byte ptr [rax]; lea rax, [rip + 0x7739f]; ret; 
0x000000000007af13: inc rdi; je 0x7af20; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000034748: insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x28; ret; 
0x000000000003a885: insb byte ptr [rdi], dx; and al, 0x10; faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x0000000000034ba1: insb byte ptr [rdi], dx; and al, 0x10; fcmove st(0), st(1); fstp st(1); add rsp, 0x48; ret; 
0x000000000003a91d: insb byte ptr [rdi], dx; and al, 0x10; pop rbx; fstp xword ptr [rdi]; ret; 
0x00000000000340e6: insb byte ptr [rdi], dx; and al, 0x10; pop rbx; ret; 
0x00000000000337a7: insb byte ptr [rdi], dx; and al, 0x10; test eax, eax; jne 0x337b8; add rsp, 8; ret; 
0x000000000007afb0: insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x0000000000017e85: insb byte ptr [rdi], dx; and al, 0x18; ret; 
0x00000000000394cf: insb byte ptr [rdi], dx; and al, 0x1e; mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000032437: insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x00000000000337f1: insb byte ptr [rdi], dx; and al, 0x20; add rsp, 8; ret; 
0x000000000003409b: insb byte ptr [rdi], dx; and al, 0x20; pop rbx; ret; 
0x000000000003ac2c: insb byte ptr [rdi], dx; and al, 0x30; fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x000000000003475d: insb byte ptr [rdi], dx; and al, 0x30; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x000000000003ad07: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x28; ret; 
0x00000000000180af: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x38; ret; 
0x000000000003ac30: insb byte ptr [rdi], dx; and al, 0x40; faddp st(1); add rsp, 0x28; ret; 
0x0000000000018401: insb byte ptr [rdi], dx; and al, 0x40; fld xword ptr [rsp + 0x50]; add rsp, 0x38; fxch st(1); ret; 
0x0000000000018405: insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x38; fxch st(1); ret; 
0x000000000007ad59: insb byte ptr [rdi], dx; and al, 0x98; ret; 
0x000000000003cdd2: insb byte ptr [rdi], dx; and al, 0xd8; fmul dword ptr [rip + 0x726f5]; ret; 
0x0000000000030a25: insb byte ptr [rdi], dx; and al, 0xe8; fmulp st(1); ret; 
0x0000000000030c1f: insb byte ptr [rdi], dx; and al, 0xe8; ret; 
0x000000000007a6fa: insb byte ptr [rdi], dx; and al, 0xfc; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000007aef0: insb byte ptr [rdi], dx; and al, 1; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000007b1a0: insb byte ptr [rdi], dx; and al, 8; cmp eax, 0x3ffd9400; ja 0x7b1ad; fyl2xp1; ret; 
0x000000000003f3f5: insb byte ptr [rdi], dx; and al, 8; fabs; ret; 
0x000000000007afac: insb byte ptr [rdi], dx; and al, 8; fld xword ptr [rsp + 0x18]; fpatan; ret; 
0x000000000007afb7: insb byte ptr [rdi], dx; and al, 8; fld1; fpatan; ret; 
0x000000000007b16d: insb byte ptr [rdi], dx; and al, 8; frndint; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003fba5: insb byte ptr [rdi], dx; and al, 8; frndint; ret; 
0x000000000003fbd5: insb byte ptr [rdi], dx; and al, 8; fsqrt; ret; 
0x000000000007b18e: insb byte ptr [rdi], dx; and al, 8; fyl2x; ret; 
0x0000000000018485: insb byte ptr [rdi], dx; and al, 8; ret; 
0x0000000000036710: insb byte ptr [rdi], dx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005cae3: insb byte ptr [rdi], dx; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000001eddd: insb byte ptr [rdi], dx; ret 0x4908; 
0x000000000001f6ff: insb byte ptr [rdi], dx; ret 0xe808; 
0x00000000000745d8: insd dword ptr [rdi], dx; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x0000000000023e2c: insd dword ptr [rdi], dx; add eax, dword ptr [rax]; mov eax, 0x27; syscall; 
0x000000000005ccaf: insd dword ptr [rdi], dx; and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x00000000000479af: insd dword ptr [rdi], dx; jne 0x479af; jmp qword ptr [rsi + 0x2e]; 
0x000000000004c53a: int 0x53; mov rbx, rsi; syscall; 
0x000000000002ea53: int 0x66; movaps xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000002884b: int 0x89; ret 0xbc41; 
0x0000000000040691: int 0x8b; jl 0x406b9; add al, 0x31; imul al; ret; 
0x00000000000738aa: int 0x8b; mov ecx, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000034b18: int 0xde; ret 0xccd9; 
0x00000000000381bc: int 0xe9; ret; 
0x0000000000039736: int 0xf2; addps xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000001964d: int 0xf2; mulps xmm1, xmm5; ret; 
0x0000000000016662: int 0xf2; mulps xmm1, xmm6; ret; 
0x0000000000039f1d: int 0xf3; addps xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x000000000004517b: int 0xf7; ret; 
0x0000000000074e3f: int 0xfa; jmp qword ptr [rsi + 0x2e]; 
0x00000000000421a2: int 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x000000000006ff8f: int1; add al, 0; test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x0000000000043ee0: int1; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x178c085; ret; 
0x0000000000060bb3: int1; add eax, 0x3a884000; ret; 
0x000000000003f463: int1; bts r8, 0x35; shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x000000000004fd47: int1; cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000021ae1: int1; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000324c7: int1; fmul st(1); faddp st(1); ret; 
0x00000000000340e0: int1; fstp st(0); ja 0x3409a; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x0000000000034230: int1; fstp st(0); jbe 0x341ea; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000003230c: int1; fsubr dword ptr [rip + 0x7e7c1]; add rsp, 0x60; pop rbx; ret; 
0x00000000000337d6: int1; jbe 0x337e0; fsubrp st(1); add rsp, 8; ret; 
0x00000000000182e2: int1; je 0x182f0; ret; 
0x000000000007a5e3: int1; js 0x7a5e9; add byte ptr [rdi + rcx + 0x54], al; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000006a373: int1; mov eax, edx; sub eax, esi; ret; 
0x0000000000021a8a: int1; mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x000000000005c375: int1; mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000006a58e: int1; mov rax, r8; ret; 
0x0000000000060f46: int1; or dword ptr [rdi], 0x40; xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x000000000004ad5e: int1; pop rbx; ret; 
0x000000000003a506: int1; ret; 
0x0000000000072592: iretd; add al, 0x31; rol byte ptr [rcx - 0x5c28f401], 0; setb al; add eax, 0x34; ret; 
0x0000000000075933: iretd; add rsp, 0x190; jmp rax; 
0x000000000001db85: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x000000000001e152: iretd; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x000000000004a805: iretd; mov dword ptr [rsi], edi; ret; 
0x00000000000458f6: iretd; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x000000000006b5aa: iretd; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5aa: iretd; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000005be27: iretd; mov rsi, rdx; syscall; 
0x000000000005cf64: iretd; pop rbp; ret; 
0x0000000000048f4d: iretd; pop rdi; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000034775: iretd; ret 7; 
0x000000000001ff1d: iretd; sbb eax, dword ptr [rax]; add cl, ch; cmp esi, -1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000039d37: iretd; subsd xmm1, xmm6; movapd xmm0, xmm1; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000019a37: ja 0x19a50; movsxd rsi, esi; lea rax, [rip + 0x625bd]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000019d8f: ja 0x19d00; pop rbx; ret; 
0x000000000001dd3a: ja 0x1dd48; mov eax, 1; ret; 
0x000000000001e032: ja 0x1e055; and edi, 0xfffe; xor eax, eax; cmp edi, 0xfffe; setne al; ret; 
0x000000000001f7c5: ja 0x1f7d0; add byte ptr [rax - 0x77], cl; lodsb al, byte ptr [rsi]; ret 0x108; 
0x0000000000021a90: ja 0x21a68; ret; 
0x0000000000021bcb: ja 0x21bd8; mov rax, rdi; ret; 
0x000000000002ef7c: ja 0x2f060; movss xmm0, dword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002f661: ja 0x2f688; ret; 
0x000000000002f655: ja 0x2f6d0; sub eax, 0x800000; cmp eax, 0x38ffffff; ja 0x2f688; ret; 
0x0000000000030ab0: ja 0x30ae0; ret; 
0x0000000000030ff9: ja 0x31070; addsd xmm0, qword ptr [rip + 0x7d305]; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x00000000000310c7: ja 0x31130; addss xmm0, dword ptr [rip + 0x7f977]; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x00000000000311d4: ja 0x311aa; fadd dword ptr [rip + 0x7f86c]; fstp xword ptr [rsp + 0x10]; fld1; add rsp, 0x28; ret; 
0x00000000000325c8: ja 0x32620; add rsp, 0x28; faddp st(1); fld1; fsubrp st(1); ret; 
0x00000000000327f3: ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000033762: ja 0x3377c; comiss xmm2, xmm1; jbe 0x33778; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000338b0: ja 0x338e0; ret; 
0x00000000000340e3: ja 0x3409a; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x00000000000354d5: ja 0x35520; call 0x394e0; mulsd xmm0, qword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000035d39: ja 0x35d80; call 0x3a540; mulss xmm0, dword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x00000000000365d1: ja 0x36608; movsd xmm0, qword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x00000000000366fd: ja 0x36706; add dl, dh; divps xmm0, xmm1; ret; 
0x0000000000036e75: ja 0x36eb0; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x000000000003de3b: ja 0x3de80; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003df0e: ja 0x3df50; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000044c51: ja 0x44c1e; mov byte ptr [rdi], sil; mov eax, 1; add rsp, 8; ret; 
0x00000000000485fc: ja 0x48608; shl edi, 0x18; or eax, edi; ret; 
0x000000000004860e: ja 0x48620; shl edi, 0x10; or eax, edi; ret; 
0x0000000000050935: ja 0x5093b; xor eax, eax; ret; 
0x0000000000050987: ja 0x509f1; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000059bac: ja 0x59bc0; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x0000000000059c02: ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000005b3bc: ja 0x5b3c7; mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000005d196: ja 0x5d1a0; ret; 
0x000000000005ef2e: ja 0x5ef58; setne dl; add edx, 1; xor esi, esi; mov rdi, rbx; call rax; 
0x00000000000684dc: ja 0x684e6; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x00000000000684e0: ja 0x684f2; mov qword ptr [rdi + 0x98], r9; ret; 
0x00000000000686fc: ja 0x68706; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x0000000000068700: ja 0x68712; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006a8e0: ja 0x6a8f0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006b26e: ja 0x6b278; and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x000000000006b27b: ja 0x6b285; ret; 
0x000000000006bd3c: ja 0x6bd43; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd3f: ja 0x6bd59; xor eax, eax; ret; 
0x000000000006bd66: ja 0x6bd6e; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000006bd6a: ja 0x6bd74; xor eax, eax; ret; 
0x000000000006bd7c: ja 0x6bd83; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000006bd7f: ja 0x6bd9d; xor eax, eax; ret; 
0x000000000006bda5: ja 0x6bdc7; xor eax, eax; ret; 
0x000000000006bded: ja 0x6bdfb; add rsi, rdx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000006bdf9: ja 0x6be0b; ret; 
0x000000000006be1d: ja 0x6be2c; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000006f0fc: ja 0x6f102; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006f5c1: ja 0x6f5e9; movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x0000000000072621: ja 0x72501; ror edx, 4; cmp edx, 0xa3d70b; mov edx, 1; cmovae eax, edx; ret; 
0x00000000000724f3: ja 0x72508; add eax, 1; cmp eax, 0x35; je 0x725a8; ret; 
0x000000000007afe6: ja 0x7afeb; f2xm1; ret; 
0x000000000007b1a8: ja 0x7b1ad; fyl2xp1; ret; 
0x000000000007b1ef: ja 0x7b211; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000023dfe: jae 0x23e08; syscall; 
0x000000000002acc9: jae 0x2ace7; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x0000000000039469: jae 0x394a2; add byte ptr [rax], al; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000005acde: jae 0x5ace5; add byte ptr [rax - 0x77], cl; ret; 
0x000000000006ae63: jae 0x6ae58; mov rax, r8; ret; 
0x000000000006d532: jae 0x6d54c; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000006fc04: jae 0x6fc0a; add al, ch; mov ecx, 0xc031ffff; pop rbp; ret; 
0x00000000000749cc: jae 0x749ce; add byte ptr [rax], al; syscall; 
0x000000000007525a: jae 0x75260; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000021b79: jb 0x21b7e; mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002f0b6: jb 0x2f0d1; or byte ptr [rax], al; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000003cc7c: jb 0x3cc40; addsd xmm0, qword ptr [rip + 0x7117a]; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cd2b: jb 0x3ccf4; addss xmm0, dword ptr [rip + 0x7278b]; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x0000000000044b39: jb 0x44b83; add esp, 0x18; ret; 
0x0000000000057c3f: jb 0x57c20; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005e324: jb 0x5e305; mov rax, qword ptr [r14 + 0x10]; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000006c3cb: jb 0x6c3e0; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000006c3cb: jb 0x6c3e0; movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000007442b: jb 0x7442d; add byte ptr [rax], al; syscall; 
0x0000000000075ccc: jb 0x75cdb; mov r8, qword ptr [r8 + 0x18]; test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x000000000007afd7: jb 0x7afde; fstp st(1); fchs; ret; 
0x0000000000017deb: jbe 0x17df6; add byte ptr [rsi + 0xf], ah; outsb dx, byte ptr [rsi]; ret 0x81eb; 
0x000000000001dcaa: jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000001dd85: jbe 0x1dd90; ret; 
0x000000000001e08c: jbe 0x1e090; ret; 
0x000000000002225d: jbe 0x22268; pop rbx; ret; 
0x0000000000029a03: jbe 0x2998e; or byte ptr [rax], al; ret; 
0x000000000002abfe: jbe 0x2ac01; hlt; ret; 
0x000000000002c637: jbe 0x2c5a9; mov r8d, 1; mov eax, r8d; ret; 
0x000000000002f198: jbe 0x2f1b0; call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x000000000002f266: jbe 0x2f280; call 0x3a540; addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x00000000000301a9: jbe 0x30238; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000033767: jbe 0x33778; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000337d7: jbe 0x337e0; fsubrp st(1); add rsp, 8; ret; 
0x0000000000034233: jbe 0x341ea; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000003cc36: jbe 0x3cc70; subsd xmm0, qword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003ccea: jbe 0x3cd20; subss xmm0, dword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x000000000003cf40: jbe 0x3cfb0; nop word ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000003e373: jbe 0x3e376; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000003f3b6: jbe 0x3f381; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3d6: jbe 0x3f3a1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f8f1: jbe 0x3f908; pxor xmm0, xmm0; add rsp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x0000000000041219: jbe 0x4121b; add byte ptr [rax], al; syscall; 
0x0000000000044c1c: jbe 0x44c60; call 0x1f460; mov dword ptr [rax], 0x54; mov rax, -1; add rsp, 8; ret; 
0x0000000000049308: jbe 0x49310; xor eax, eax; pop rbx; ret; 
0x0000000000050847: jbe 0x508a9; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x00000000000508af: jbe 0x50911; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000005b1a2: jbe 0x5b1b8; mov rax, -2; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000640a6: jbe 0x64056; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000067369: jbe 0x67321; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000000067344: jbe 0x67328; sub esi, eax; test r9d, r9d; cmove r8d, esi; mov eax, r8d; ret; 
0x0000000000067421: jbe 0x673d1; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000674e1: jbe 0x67491; xor r8d, r8d; mov rax, r8; ret; 
0x000000000006790f: jbe 0x6790c; jmp qword ptr [rsi + 0x2e]; 
0x000000000006a3a7: jbe 0x6a3c6; mov eax, edx; sub eax, esi; ret; 
0x000000000006a36c: jbe 0x6a3ea; movzx edx, al; movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x0000000000015a2d: je 0x15a4e; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000016298: je 0x162c8; cmp eax, 2; jne 0x162a5; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x0000000000017fc1: je 0x17fe7; js 0x17fc4; je 0x17feb; js 0x17fb1; ret; 
0x0000000000017fc5: je 0x17feb; js 0x17fb1; ret; 
0x00000000000182d6: je 0x182f0; movq rax, xmm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x00000000000182e3: je 0x182f0; ret; 
0x0000000000018366: je 0x18380; mov dword ptr [rsp + 4], eax; movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x00000000000190eb: je 0x19108; movss dword ptr [rsp + 0x20], xmm0; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000001b2da: je 0x1b270; adc byte ptr [rcx - 0x3f], al; ret 0x890a; 
0x000000000001df84: je 0x1df90; pop rbp; ret; 
0x000000000001e44a: je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x000000000001e450: je 0x1e460; ret; 
0x000000000001e70f: je 0x1e720; mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x000000000001e915: je 0x1e925; mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x000000000001ed17: je 0x1ed24; mov rax, r9; syscall; 
0x000000000001f570: je 0x1f596; or byte ptr [rdi + 1], bh; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000001f94e: je 0x1f9f8; test eax, eax; js 0x1f962; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000001fcfa: je 0x1fd08; mov eax, 0xffffffff; ret; 
0x0000000000022dec: je 0x22df0; ret; 
0x0000000000022e7b: je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x000000000002329a: je 0x232b8; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000023926: je 0x23948; sub rsp, 8; mov edx, edx; mov eax, 0x145; syscall; 
0x0000000000023e0e: je 0x23e28; mov dword ptr [rbx + 0x10], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000023fba: je 0x23fcd; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000002462e: je 0x2463b; call 0x1f460; mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x00000000000255ea: je 0x255a4; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000028e68: je 0x28e70; xor eax, eax; ret; 
0x0000000000028ff2: je 0x29000; pop rbx; ret; 
0x000000000002b248: je 0x2b258; mov dword ptr [rip + 0x8bd28], 0; ret; 
0x000000000002c836: je 0x2c839; hlt; sub rax, rdi; ret; 
0x000000000002cd51: je 0x2cd60; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000002cfe4: je 0x2cff0; mov eax, r8d; ret; 
0x000000000002cfd7: je 0x2d000; mov r8d, 4; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d041: je 0x2d050; mov eax, r8d; ret; 
0x000000000002d0c6: je 0x2d0b5; xor r8d, r8d; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x000000000002d0b3: je 0x2d0c0; mov eax, r8d; ret; 
0x000000000002d158: je 0x2d17d; or byte ptr [rax], al; ret; 
0x000000000002d239: je 0x2d242; xorps xmm1, xmmword ptr [rip + 0x7fd2e]; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002eb26: je 0x2eb40; movsd xmm1, qword ptr [rip + 0x7f4d8]; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ece3: je 0x2ec94; fchs; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002f639: je 0x2f668; movaps xmm1, xmm0; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000002f935: je 0x2f93e; xorps xmm1, xmmword ptr [rip + 0x7d632]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002fa54: je 0x2fa58; fchs; add rsp, 0x40; pop rbx; ret; 
0x0000000000030435: je 0x3043f; xorpd xmm0, xmmword ptr [rip + 0x7cb21]; add rsp, 0x10; pop rbx; ret; 
0x00000000000304f9: je 0x30502; xorps xmm0, xmmword ptr [rip + 0x7ca6e]; add rsp, 0x10; pop rbx; ret; 
0x00000000000305c8: je 0x305cc; fchs; add rsp, 0x30; pop rbx; ret; 
0x0000000000030b76: je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000031727: je 0x31731; xorpd xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x0000000000031952: je 0x31990; movsd xmm2, qword ptr [rip + 0x7c9b4]; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031d74: je 0x31d7d; xorps xmm0, xmmword ptr [rip + 0x7b1f3]; pop rbx; ret; 
0x0000000000069498: je 0x31f20a70; shr byte ptr [rcx], 0xc8; ret; 
0x0000000000031f9a: je 0x31fd0; movss xmm2, dword ptr [rip + 0x7eadc]; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x00000000000323e0: je 0x323e4; fchs; add rsp, 0x18; ret; 
0x00000000000325ed: je 0x32640; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x000000000003275c: je 0x327b8; movq xmm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x0000000000032c58: je 0x32ce0; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000033661: je 0x336b0; movd xmm7, eax; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x0000000000033976: je 0x33966; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x0000000000033e41: je 0x33e67; sub bh, bh; je 0x33e6b; sub al, ch; ret; 
0x0000000000033e45: je 0x33e6b; sub al, ch; ret; 
0x0000000000034005: je 0x3400b; movapd xmm0, xmm1; ret; 
0x0000000000034001: je 0x34010; test ecx, ecx; je 0x3400b; movapd xmm0, xmm1; ret; 
0x000000000003405c: je 0x34070; test edx, edx; js 0x34068; ret; 
0x0000000000034155: je 0x3415b; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034151: je 0x34160; test edx, edx; je 0x3415b; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000341ab: je 0x341c0; test eax, eax; js 0x341b8; ret; 
0x000000000003761e: je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000037ba1: je 0x37bb0; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000037c73: je 0x37c7c; xorps xmm0, xmmword ptr [rip + 0x752f4]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000038db2: je 0x38dd8; js 0x38db5; je 0x38ddc; js 0x38da2; jmp qword ptr [rbx]; 
0x0000000000038db6: je 0x38ddc; js 0x38da2; jmp qword ptr [rbx]; 
0x000000000003a738: je 0x3a744; ret; 
0x000000000003a7dd: je 0x3a7e4; ret; 
0x000000000003a8b5: je 0x3a88c; fchs; pop rbx; ret; 
0x000000000003a905: je 0x3a909; fchs; fstp xword ptr [rdi]; fld xword ptr [rsp + 0x10]; pop rbx; ret; 
0x000000000003a9a8: je 0x3a9b0; add rsp, 0x10; pop rbx; ret; 
0x000000000003a9f8: je 0x3aa00; add rsp, 0x10; pop rbx; ret; 
0x000000000003aa46: je 0x3aa50; add rsp, 0x10; pop rbx; ret; 
0x000000000003ba07: je 0x3ba0a; ret; 
0x000000000003cb4d: je 0x3cb60; ret; 
0x000000000003cbb4: je 0x3cbd0; ret; 
0x000000000003e54c: je 0x3e556; xorpd xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000003e647: je 0x3e650; xorps xmm0, xmmword ptr [rip + 0x6e920]; add rsp, 0x10; pop rbx; ret; 
0x000000000003fdc9: je 0x3fdd2; bsf rax, rax; add eax, 1; ret; 
0x000000000003fde9: je 0x3fdf2; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003fe09: je 0x3fe12; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000004053b: je 0x40550; cmp rdi, rdx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x0000000000041677: je 0x41690; sub rsp, 8; call 0x5d1b0; mov eax, 1; add rsp, 8; ret; 
0x0000000000042647: je 0x4266d; and byte ptr [rax - 0x77], cl; ret; 
0x00000000000437ba: je 0x43804; add esp, 0x70; pop rbp; ret; 
0x00000000000438f9: je 0x43907; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000438f9: je 0x43907; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000043bd0: je 0x43c18; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000043f39: je 0x43f50; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000004436c: je 0x44377; mov edx, dword ptr [rdi]; xor eax, eax; test edx, edx; sete al; ret; 
0x0000000000045087: je 0x450a0; sub rsp, 8; xor edx, edx; call 0x44bc0; add rsp, 8; ret; 
0x000000000004519b: je 0x45149; movsxd rdi, r14d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000045182: je 0x45198; movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x0000000000047147: je 0x47150; xor eax, eax; ret; 
0x0000000000047ec2: je 0x47ed0; add rax, 0xa0; ret; 
0x000000000004a75e: je 0x4a780; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004ad53: je 0x4ad5f; call 0x4ac90; test rax, rax; jne 0x4ad50; pop rbx; ret; 
0x000000000004b379: je 0x4b39f; js 0x4b3ae; jmp qword ptr [rsi + 0x44]; 
0x000000000004bc55: je 0x4bc60; add rsp, 0x28; ret; 
0x000000000004c4f1: je 0x4c49b; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004c4db: je 0x4c4ee; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000050025: je 0x5003d; mov eax, 0x70; syscall; 
0x000000000005003f: je 0x5005d; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005005f: je 0x50097; mov eax, 0x68; syscall; 
0x000000000005022c: je 0x50159; movsxd rdi, eax; movsxd rsi, edx; mov rax, r12; syscall; 
0x000000000005026b: je 0x502c3; movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000051f4d: je 0x51e0b; and ebx, 1; mov rax, qword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x0000000000052cf0: je 0x52d16; fdiv dword ptr [rcx]; ror byte ptr [rdi], 0x1f; add byte ptr [rbx + 0x14898614], cl; or dword ptr [rax - 0x7d], 0x394801c0; ret; 
0x0000000000057ab6: je 0x57a98; cmp rcx, rdx; jg 0x57ac8; jge 0x57a9f; xor eax, eax; ret; 
0x0000000000059d46: je 0x59d5a; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005a000: je 0x5a010; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005a0b8: je 0x5a0c8; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a34c: je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000005a37e: je 0x5a384; mov qword ptr [rdx + 8], rax; test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x000000000005a387: je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x000000000005a64d: je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000005b132: je 0x5b150; test al, 1; jne 0x5b16c; mov eax, 0x83; syscall; 
0x000000000005b8a2: je 0x5b878; call 0x21bc0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005bad8: je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbc0: je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000005c2e5: je 0x5c3c0; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005c4d4: je 0x5c4ea; movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005c856: je 0x5c830; movsxd rdx, edx; xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000005c8bb: je 0x5c8d8; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005c8d6: je 0x5c8e0; ret; 
0x000000000005c9eb: je 0x5c9f7; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005cae2: je 0x5cb50; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000005cd71: je 0x5cd7a; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005d0fb: je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d14d: je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000005d16f: je 0x5d180; sub rax, r8; mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x000000000005d1df: je 0x5d1f0; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000005d379: je 0x5d390; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005d39b: je 0x5d3ab; sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005d544: je 0x5d570; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000005d5c8: je 0x5d5e0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005e21b: je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000005e382: je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005e3c0: je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x000000000005e661: je 0x5e690; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000005e6e5: je 0x5e6f8; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005ec2b: je 0x5ec43; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005ed9e: je 0x5edb1; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005ef67: je 0x5ef55; mov rdx, qword ptr [rbx + 0x28]; pop rbx; sub rdx, rcx; add rax, rdx; ret; 
0x000000000005ef49: je 0x5ef60; mov rdx, qword ptr [rbx + 8]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000005f08b: je 0x5f098; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000005f0db: je 0x5f0e4; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000005f151: je 0x5f15a; mov qword ptr [rdx + 0xd0], rdi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005f18c: je 0x5f1a0; add rax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x000000000005f1bf: je 0x5f1d0; sub rax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000005f614: je 0x5f640; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000005f698: je 0x5f6b0; lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f755: je 0x5f790; mov eax, r8d; add rsp, 8; ret; 
0x000000000005f7de: je 0x5f7f0; lea rdx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f812: je 0x5f828; lea rdx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000607f1: je 0x60850; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000609b1: je 0x609e0; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000060a35: je 0x60a48; lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060a7c: je 0x60a90; lea rcx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x0000000000060b13: je 0x60b50; mov eax, r8d; pop rbx; ret; 
0x0000000000060baa: je 0x60bc0; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060bee: je 0x60c00; lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060f45: je 0x60f38; or dword ptr [rdi], 0x40; xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x0000000000060f36: je 0x60f40; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x0000000000063eb6: je 0x63ef4; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000068ad7: je 0x68a5b; movzx ecx, byte ptr [rax]; cmp ecx, r10d; jne 0x68ad0; ret; 
0x0000000000068a54: je 0x68a60; test rdx, rdx; jne 0x68a40; xor eax, eax; ret; 
0x0000000000068b24: je 0x68b10; movzx eax, dl; sub eax, ecx; ret; 
0x0000000000069095: je 0x6909f; cmp rax, rdi; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000069816: je 0x69828; cmp byte ptr [rax], 0; jne 0x69810; sub rax, rdi; ret; 
0x000000000006a113: je 0x6a0e0; cmp dx, r8w; jne 0x6a100; pop rbp; ret; 
0x000000000006ad98: je 0x6ada8; cmp dword ptr [rdi], esi; jne 0x6ad90; mov rax, rdi; ret; 
0x000000000006ade2: je 0x6add0; mov eax, edx; sub eax, ecx; ret; 
0x000000000006b58e: je 0x6b57a; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006b828: je 0x6b810; ret; 
0x000000000006b873: je 0x6b879; lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006ba6b: je 0x6ba6f; call rax; 
0x000000000006ba62: je 0x6ba98; mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000006bac6: je 0x6baca; call rax; 
0x000000000006babe: je 0x6bada; mov rax, qword ptr [rbx]; test rax, rax; je 0x6baca; call rax; 
0x000000000006bdb8: je 0x6bdca; cmp esi, 1; mov eax, 0x16; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000006c025: je 0x6bf5e; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006c06e: je 0x6bf72; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006c532: je 0x6c53c; movzx edx, byte ptr [rax + 0x40]; test dl, dl; je 0x6c540; ret; 
0x000000000006c53a: je 0x6c540; ret; 
0x000000000006c546: je 0x6c555; movzx edx, byte ptr [rax + 0x41]; test dl, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x000000000006c706: je 0x6c710; xor eax, eax; ret; 
0x000000000006c834: je 0x6c840; xor eax, eax; ret; 
0x000000000006cbdb: je 0x6cc20; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d1e1: je 0x6d1f8; ret; 
0x000000000006d251: je 0x6d260; add rsp, 8; ret; 
0x000000000006d448: je 0x6d458; mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000006d487: je 0x6d48e; mov esi, 0x80; or esi, 1; mov rax, r15; mov rdx, r10; syscall; 
0x000000000006d511: je 0x6d530; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000006d87d: je 0x6d8a3; push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000006d875: je 0x6d8b8; movsxd rdi, dword ptr [r14 + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000006de87: je 0x6de9b; mov eax, 0x8f; mov rsi, r13; syscall; 
0x000000000006e32c: je 0x6e378; movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000006e42a: je 0x6e430; mov eax, dword ptr [rsi]; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000006e82e: je 0x6e7ce; mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000006eceb: je 0x6ecf0; ret; 
0x000000000006ee6e: je 0x6ee78; mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000006ef21: je 0x6eed0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006efb1: je 0x6ef70; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006f27a: je 0x6f282; movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000006f486: je 0x6f49b; movsxd rsi, ebx; mov eax, 0x90; mov rdx, rbp; syscall; 
0x000000000006f534: je 0x6f548; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000006f538: je 0x6f55e; or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000006f59d: je 0x6f5a6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000006fe66: je 0x6fe70; ret; 
0x000000000006ff95: je 0x6ffa7; mov eax, 0xba; syscall; 
0x000000000006ffa5: je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000007026a: je 0x70280; test eax, eax; mov edx, 0xfffffffe; cmovne eax, edx; add rsp, 8; ret; 
0x00000000000702ed: je 0x702f6; mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x0000000000070388: je 0x7037d; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000007037b: je 0x70380; ret; 
0x0000000000070a24: je 0x70b1a; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x0000000000071e19: je 0x71e26; call rax; 
0x0000000000071e24: je 0x71e58; movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x0000000000071e41: je 0x71e70; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000725d8: je 0x72501; cmp esi, 3; je 0x725f0; mov eax, 1; ret; 
0x00000000000724fb: je 0x725a8; ret; 
0x00000000000725e1: je 0x725f0; mov eax, 1; ret; 
0x0000000000073a16: je 0x73a3c; adc byte ptr [rcx + 0x48182454], cl; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000073d87: je 0x73d90; xor eax, eax; ret; 
0x0000000000074330: je 0x74328; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074470: je 0x74496; add al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000074606: je 0x74610; mov dword ptr [rsp + 0xc], 0xfffffff0; movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x0000000000074621: je 0x74647; or byte ptr [rcx + 0x63], cl; clc; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000748ad: je 0x74948; mov eax, 0x4f; mov rdi, r12; syscall; 
0x0000000000074d3f: je 0x74de0; mov ebx, esi; mov eax, 0x125; movsxd rsi, esi; syscall; 
0x0000000000074fdb: je 0x75018; mov r10, rcx; lea r8, [rsp + 7]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000075271: je 0x75288; mov dword ptr [rbx + 0x10], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000075d6a: je 0x75d80; lea rsi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x000000000007627b: je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x00000000000780e8: je 0x780f0; ret; 
0x00000000000786ad: je 0x786c0; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000007aeab: je 0x7aeb8; not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000007af16: je 0x7af20; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000007b284: je 0x7b28b; movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x7b286; ret; 
0x0000000000015a64: jg 0x15a24; add dword ptr [rax], 0x8d480000; cmp eax, 0xa14d7; mov rax, r8; syscall; 
0x0000000000018365: jg 0x183db; sbb byte ptr [rcx - 0xcfbdbbc], cl; movups xmmword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000001dbfc: jg 0x1dc0d; xchg eax, esp; ret 0xd009; 
0x000000000001e067: jg 0x1dfec; jmp qword ptr [rax]; 
0x000000000001e56a: jg 0x1e4ef; cli; and byte ptr [rsi + 8], bh; ret; 
0x000000000001e76a: jg 0x1e774; mov eax, 0xd9; mov edx, 0x800; mov rsi, r9; syscall; 
0x000000000001f629: jg 0x1f600; pop rbx; pop rbp; pop r12; ret; 
0x00000000000220be: jg 0x220e0; movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000002358c: jg 0x235d6; cmp edx, 0x7fffffff; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000023593: jg 0x235dd; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000028aa0: jg 0x28ab1; xchg dword ptr [rdi + rdx*8 - 0x76bb0001], eax; ret; 
0x000000000002d0b2: jg 0x2d128; or eax, dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000002f264: jg 0x2f2ab; jbe 0x2f280; call 0x3a540; addss xmm0, dword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x000000000002fe3f: jg 0x2fe50; test byte ptr [rdx - 0x73000000], dl; xchg eax, ecx; add byte ptr [rax], al; add byte ptr [rcx + rdi], al; ret 0x5872; 
0x00000000000301a8: jg 0x301b9; xchg byte ptr [rcx + 0x48000000], cl; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000030ac9: jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030bd2: jg 0x30bf7; and al, 0xfc; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x0000000000030c11: jg 0x30c79; and edx, 0xd0098000; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000003383e: jg 0x33863; and al, 0xfc; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x00000000000338c9: jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000033846: jg 0x338c7; setbe al; movzx eax, al; ret; 
0x00000000000346a4: jg 0x34626; mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; ret; 
0x0000000000034c58: jg 0x34c9e; mov eax, eax; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000034d62: jg 0x34da8; mov eax, eax; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000036490: jg 0x364a1; xchg dword ptr [rcx - 0x9000000], edi; ret; 
0x0000000000039d94: jg 0x39e0b; mov cl, 0x66; pxor mm1, mm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000039f74: jg 0x39feb; mov dl, 0xf; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003d194: jg 0x3d157; out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000003d1d8: jg 0x3d19b; out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000003df0c: jg 0x3df47; ja 0x3df50; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000004162d: jg 0x41640; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000004278c: jg 0x4279e; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000042790: jg 0x427a2; mov eax, 0xa0; syscall; 
0x0000000000042790: jg 0x427a2; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000044c50: jg 0x44cc9; retf; mov byte ptr [rdi], sil; mov eax, 1; add rsp, 8; ret; 
0x0000000000048f99: jg 0x48fa9; add byte ptr [rbp + 0x6a], dh; cmp byte ptr [rdi + 0xf], 1; jne 0x49008; mov eax, 2; ret; 
0x0000000000048f9f: jg 0x48fb0; add dword ptr [rbp + 0x64], esi; mov eax, 2; ret; 
0x000000000005098b: jg 0x50a05; ret; 
0x0000000000057abb: jg 0x57ac8; jge 0x57a9f; xor eax, eax; ret; 
0x0000000000059b76: jg 0x59ba8; mov eax, 0xcb; syscall; 
0x0000000000059b76: jg 0x59ba8; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000059bed: jg 0x59c1f; syscall; 
0x000000000005b4f9: jg 0x5b4fb; add byte ptr [rax], al; mov esi, 8; syscall; 
0x000000000005c9a9: jg 0x5ca23; call 0x15e30; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000005cc2b: jg 0x5cca5; mov rax, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005ccf1: jg 0x5cd6b; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005d0f8: jg 0x5d11a; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000063393: jg 0x633ce; ret 0x207f; 
0x000000000006c207: jg 0x6c255; mov edi, ebp; mov rax, r8; syscall; 
0x000000000006c244: jg 0x6c292; mov edi, ebp; mov rax, r8; syscall; 
0x000000000006c6fc: jg 0x6c74a; mov eax, eax; syscall; 
0x000000000006c76e: jg 0x6c7bc; mov eax, eax; syscall; 
0x000000000006d57f: jg 0x6d589; call qword ptr [rax]; 
0x000000000006e3ea: jg 0x6e3f0; xor eax, eax; ret; 
0x000000000006edfa: jg 0x6edba; add dword ptr [rax], 0x89480000; out dx, eax; mov rax, r8; syscall; 
0x000000000006f01a: jg 0x6f00c; cmpxchg dword ptr [rdi], edx; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x0000000000073ceb: jg 0x73ca5; loope 0x73cef; add byte ptr [rax], al; syscall; 
0x0000000000073cb8: jg 0x73cea; mov esi, 0x20; syscall; 
0x0000000000073cb8: jg 0x73cea; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x0000000000073d4e: jg 0x73d98; movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x000000000007b1f3: jg 0x7b21d; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000023259: jge 0x2325b; add byte ptr [rax], al; syscall; 
0x000000000002973f: jge 0x29741; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x000000000004712e: jge 0x4712d; jmp qword ptr [rsi + 0x2e]; 
0x000000000004c5b9: jge 0x4c5bb; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000004c5cc: jge 0x4c5d2; mov rax, r8; syscall; 
0x000000000004c5e4: jge 0x4c5e6; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x000000000004c5f7: jge 0x4c5fd; mov rax, r8; syscall; 
0x000000000004f646: jge 0x4f610; sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7e0: jge 0x4f7aa; sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f976: jge 0x4f940; sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x0000000000052320: jge 0x52322; add byte ptr [rdi], cl; test edi, edi; add byte ptr [rax], al; add dh, dh; ret; 
0x0000000000057abd: jge 0x57a9f; xor eax, eax; ret; 
0x000000000005a651: jge 0x5a653; call rbx; 
0x00000000000671f7: jge 0x671f4; jmp qword ptr [rsi + 0xf]; 
0x000000000006e297: jge 0x6e29d; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000007008a: jge 0x700bc; mov rax, r15; syscall; 
0x0000000000074d8c: jge 0x74d8e; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x0000000000074d9f: jge 0x74da5; mov rax, r9; syscall; 
0x0000000000074db3: jge 0x74db5; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000074dc6: jge 0x74dcc; mov rax, r9; syscall; 
0x000000000001b301: jl 0x1b297; adc byte ptr [rcx - 0x3f], al; ret; 
0x000000000001e911: jl 0x1e937; or byte ptr [rax], al; je 0x1e925; mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x000000000001f2fa: jl 0x1f302; add cl, byte ptr [rax - 0x77]; ret; 
0x0000000000020885: jl 0x208ab; xor al, ch; ret; 
0x00000000000210d3: jl 0x210f9; adc byte ptr [rax + 0x39], cl; ret; 
0x00000000000311dd: jl 0x31203; adc cl, bl; call 0x28c7952e; ret; 
0x000000000003478c: jl 0x347b2; sbb byte ptr [rbx + 0x5a58782f], al; add rsp, 0x28; ret; 
0x00000000000348ff: jl 0x34925; or dl, dh; mulps xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000037872: jl 0x3787b; add byte ptr [rdi], cl; call 0x37b34; add byte ptr [rbx + 0x280f02c5], al; ret; 
0x0000000000040693: jl 0x406b9; add al, 0x31; imul al; ret; 
0x0000000000042372: jl 0x42389; add byte ptr [rax - 0x77], cl; ret 0xfe8; 
0x000000000004542b: jl 0x453ad; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb60f; 
0x000000000004f30a: jl 0x4f312; add al, ch; pop rsi; ret 1; 
0x0000000000050429: jl 0x5044f; and al, 0x89; ret; 
0x0000000000053cf2: jl 0x53d18; or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000005404c: jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000000585dd: jl 0x58603; sub byte ptr [rax - 0x77], cl; ret 0xf74; 
0x000000000005b840: jl 0x5b83f; add byte ptr [rax], al; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000005ec22: jl 0x5ec48; js 0x5ec1d; ret; 
0x0000000000060718: jl 0x606ce; sbb byte ptr [rax + 3], bh; syscall; 
0x00000000000607b7: jl 0x6076d; sbb byte ptr [rax + 3], bh; syscall; 
0x00000000000607f5: jl 0x607ab; sbb byte ptr [rax + 3], bh; syscall; 
0x0000000000060829: jl 0x6084f; sbb al, 0x48; mov eax, edx; syscall; 
0x00000000000672b7: jl 0x672b4; jmp qword ptr [rsi + 0xf]; 
0x0000000000069e27: jl 0x69e4d; or byte ptr [rax - 0x77], cl; ret; 
0x000000000006a36d: jl 0x6a37e; mov dh, 0xd0; movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x000000000006ce26: jl 0x6ce4c; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000007391d: jl 0x73943; and byte ptr [rax - 0x75], cl; and al, 0x28; call rax; 
0x00000000000745dd: jl 0x74603; sub al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x0000000000074612: jl 0x74638; sub byte ptr [rax + 3], bh; syscall; 
0x0000000000074b5c: jl 0x74b5e; add byte ptr [rax], al; syscall; 
0x000000000007aa8b: jl 0x7aab1; test al, 0xd9; ret; 
0x000000000007aec4: jl 0x7aeea; clc; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000016843: jle 0x16849; and al, 0x48; add esp, 0x28; ret; 
0x000000000001690c: jle 0x16912; and al, 0x48; add esp, 0x20; pop rbx; ret; 
0x0000000000016bde: jle 0x16c24; and al, 0x10; add rsp, 0x48; ret; 
0x0000000000016cb4: jle 0x16cfa; and al, 8; add rsp, 0x28; ret; 
0x0000000000016fbe: jle 0x17004; and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x00000000000170a4: jle 0x170ea; and al, 8; add rsp, 0x28; ret; 
0x00000000000177d1: jle 0x17817; and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x0000000000017d81: jle 0x17dc7; and al, 0x10; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f92: jle 0x17fd8; and al, 0x10; add rsp, 0x38; ret; 
0x0000000000018079: jle 0x180bf; and al, 0xf0; ret; 
0x00000000000182db: jle 0x182a5; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x000000000001831d: jle 0x182df; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x0000000000018373: jle 0x18379; and al, 0x48; add esp, 0x18; ret; 
0x0000000000018554: jle 0x1859a; and al, 8; add rsp, 0x28; ret; 
0x0000000000018a8e: jle 0x18ad4; and al, 0x18; add rsp, 0x30; pop rbx; ret; 
0x00000000000190fb: jle 0x19141; and al, 0x20; add rsp, 0x38; ret; 
0x00000000000193f4: jle 0x1943a; and al, 8; add rsp, 0x28; ret; 
0x00000000000197b4: jle 0x197fa; and al, 0x10; add rsp, 0x20; pop rbx; ret; 
0x000000000001e56e: jle 0x1e578; ret; 
0x0000000000023239: jle 0x2323b; add byte ptr [rax], al; syscall; 
0x0000000000025441: jle 0x25454; lea edx, [rax - 0x100]; lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000028ee7: jle 0x28f08; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000002a24f: jle 0x2a259; add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x44; ret 0x66c3; 
0x000000000002e6e7: jle 0x2e6a9; shr rax, 0x3f; ret; 
0x000000000002e6f6: jle 0x2e6b8; shr eax, 0x1f; ret; 
0x0000000000030aa6: jle 0x30af0; comisd xmm2, xmm1; addsd xmm0, xmm1; ja 0x30ae0; ret; 
0x0000000000033811: jle 0x337d3; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x00000000000338a6: jle 0x338f0; comisd xmm1, xmm2; addsd xmm0, xmm1; ja 0x338e0; ret; 
0x000000000003761a: jle 0x375dc; or eax, ecx; je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000003a732: jle 0x3a6f4; shl rax, 0xc; je 0x3a744; ret; 
0x000000000003aa0c: jle 0x3aa12; add al, 0; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000043bcd: jle 0x43bdb; add dh, byte ptr [rsi + rax*2 + 0x48]; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000044e93: jle 0x44f0c; ret 0x8348; 
0x000000000004706b: jle 0x4706a; jmp qword ptr [rsi - 0x70]; 
0x000000000004716e: jle 0x47178; xor eax, eax; pop rbx; ret; 
0x000000000004efc3: jle 0x4efcb; add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x48; mov dword ptr [rip + 0x67e67], eax; shr rax, 0x21; ret; 
0x000000000005084b: jle 0x508bd; ret; 
0x00000000000508b3: jle 0x50925; ret; 
0x000000000005d1c6: jle 0x5d1c8; add byte ptr [rax], al; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005d236: jle 0x5d233; inc dword ptr [rcx + rcx*4 - 0x20]; pop rbp; pop r12; pop r13; ret; 
0x000000000005f80e: jle 0x5f859; add eax, 0x48147400; lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005ff8e: jle 0x5ffe0; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000006a3a2: jle 0x6a374; cmp edi, 9; jbe 0x6a3c6; mov eax, edx; sub eax, esi; ret; 
0x000000000006d879: jle 0x6d8ab; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000070b9b: jle 0x70bb4; add r9, 6; mov byte ptr [r9], 0; ret; 
0x0000000000074e3e: jle 0x74e0d; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007a6ff: jle 0x7a745; and al, 0xf8; ret; 
0x000000000001c2ce: jmp qword ptr [rax]; 
0x0000000000038dba: jmp qword ptr [rbx]; 
0x00000000000199ca: jmp qword ptr [rcx]; 
0x000000000005c444: jmp qword ptr [rdi + 0x18]; 
0x000000000007b1f9: jmp qword ptr [rdi + 0x38]; 
0x0000000000018cc5: jmp qword ptr [rdi + 9]; 
0x000000000001e00a: jmp qword ptr [rdi]; 
0x0000000000054629: jmp qword ptr [rdx + 0xf]; 
0x0000000000015673: jmp qword ptr [rsi + 0x2e]; 
0x000000000003e983: jmp qword ptr [rsi + 0x40]; 
0x000000000003d8a7: jmp qword ptr [rsi + 0x41]; 
0x000000000004b37d: jmp qword ptr [rsi + 0x44]; 
0x000000000002ee2a: jmp qword ptr [rsi + 0x48]; 
0x0000000000037ee7: jmp qword ptr [rsi + 0x49]; 
0x0000000000039f37: jmp qword ptr [rsi + 0x76]; 
0x0000000000015775: jmp qword ptr [rsi + 0xf]; 
0x0000000000015c4d: jmp qword ptr [rsi - 0x70]; 
0x000000000004619b: jmp qword ptr [rsi - 0x77]; 
0x000000000003ad1d: jmp qword ptr [rsi - 0x7b]; 
0x0000000000046dcf: jmp qword ptr [rsi - 0x7d]; 
0x0000000000015b1b: jmp rax; 
0x0000000000025720: jmp rcx; 
0x000000000001f694: jmp rdi; 
0x00000000000297fb: jmp rdx; 
0x000000000002589e: jmp rsi; 
0x0000000000015be5: jne 0x15a1f; mov esi, 1; mov rax, r9; syscall; 
0x0000000000015e41: jne 0x15e50; mov eax, r12d; pop r12; ret; 
0x000000000001629d: jne 0x162a5; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x00000000000162b6: jne 0x16312; add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000016994: jne 0x169b5; add rsp, 0x30; pop rbx; fxch st(1); ret; 
0x0000000000016a07: jne 0x16a14; fxch st(1); fchs; add rsp, 0x38; fxch st(1); ret; 
0x0000000000016d04: jne 0x16d0f; fchs; add rsp, 0x58; fxch st(1); ret; 
0x00000000000170f4: jne 0x170ff; fchs; add rsp, 0x58; fxch st(1); ret; 
0x000000000001800f: jne 0x18018; add rsp, 0x58; fxch st(1); ret; 
0x00000000000180aa: jne 0x180b7; fchs; fld xword ptr [rsp + 0x40]; add rsp, 0x38; ret; 
0x0000000000018df4: jne 0x18dff; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000019984: jne 0x1998f; fchs; add rsp, 0x58; fxch st(1); ret; 
0x0000000000019b65: jne 0x19cd1; add rsp, 0x210; pop rbx; ret; 
0x000000000001b4d1: jne 0x1b4a9; pop rbx; pop rbp; pop r12; ret; 
0x000000000001bb8b: jne 0x1bbba; add rsp, 0x58; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001bf68: jne 0x1bf40; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c914: jne 0x1c942; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001cd3e: jne 0x1cce0; pop rbx; pop rbp; pop r12; ret; 
0x000000000001d8a4: jne 0x1d8d2; add rsp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001d975: jne 0x1d97d; add rsp, 0x10; pop rbp; ret; 
0x000000000001df12: jne 0x1def0; movsxd rax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e0d6: jne 0x1e0e0; xor eax, eax; ret; 
0x000000000001e3ca: jne 0x1e3b0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e40f: jne 0x1e418; pop rbp; ret; 
0x000000000001e697: jne 0x1e6cd; add rsp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000001ed2b: jne 0x1ed13; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x000000000001ef61: jne 0x1ef50; xor eax, eax; pop rbx; ret; 
0x000000000001ef9f: jne 0x1efcd; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000001f7b6: jne 0x1f7c1; add byte ptr [rbp - 0x76b7feb8], cl; pop rsp; ret 0x4808; 
0x000000000001f9d4: jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001faed: jne 0x1fb33; add rsp, 0x50; pop rbx; ret; 
0x000000000001fbad: jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000021f15: jne 0x21f27; add rsp, 0xa0; pop rbx; ret; 
0x0000000000022044: jne 0x22078; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x000000000002206c: jne 0x220a5; add rsp, 0x58; ret; 
0x000000000002246b: jne 0x22475; add rsp, 0xd8; ret; 
0x000000000002249c: jne 0x224b7; mov qword ptr [r12], rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022549: jne 0x22554; add rsp, 0x850; pop rbx; ret; 
0x00000000000227fb: jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228bb: jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000022a9d: jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b15: jne 0x22b1c; add rsp, 0x28; ret; 
0x0000000000022bb5: jne 0x22bf2; add rsp, 0x180; pop rbx; pop rbp; pop r12; ret; 
0x0000000000022eaf: jne 0x22e54; xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x0000000000022f50: jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000022fac: jne 0x22ffe; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002318c: jne 0x231d1; add rsp, 0xe0; pop rbx; ret; 
0x0000000000023334: jne 0x2333b; add rsp, 0x58; ret; 
0x000000000002337f: jne 0x23390; mov eax, 0xd5; mov edi, 1; syscall; 
0x000000000002337b: jne 0x23390; test edx, edx; jne 0x23390; mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000023408: jne 0x23413; mov eax, 0xe8; syscall; 
0x0000000000023403: jne 0x23413; test r8, r8; jne 0x23413; mov eax, 0xe8; syscall; 
0x000000000002344d: jne 0x23458; mov eax, 0x11c; syscall; 
0x0000000000023449: jne 0x23458; test esi, esi; jne 0x23458; mov eax, 0x11c; syscall; 
0x000000000002361f: jne 0x2362b; mov eax, 0xfd; syscall; 
0x000000000002361b: jne 0x2362b; test edx, edx; jne 0x2362b; mov eax, 0xfd; syscall; 
0x0000000000023aff: jne 0x23b06; add rsp, 0x28; ret; 
0x0000000000023b7a: jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023c88: jne 0x23c90; add rsp, 0x60; pop rbx; ret; 
0x0000000000023d57: jne 0x23d68; mov eax, 0xc; syscall; 
0x0000000000023d57: jne 0x23d68; mov eax, 0xc; syscall; ret; 
0x0000000000023ea0: jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000023f54: jne 0x23f74; add rsp, 0x28; ret; 
0x0000000000023f9d: jne 0x23fe0; mov eax, 0x11a; syscall; 
0x0000000000023fd4: jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x000000000002406e: jne 0x24075; add rsp, 0x28; ret; 
0x00000000000247d5: jne 0x247f7; add rsp, 0x18; ret; 
0x00000000000253df: jne 0x253e8; pop rbp; ret; 
0x0000000000025501: jne 0x25480; pop rbx; mov rax, -1; pop rbp; pop r12; ret; 
0x0000000000029327: jne 0x292d1; or byte ptr [rax], al; ret; 
0x0000000000029646: jne 0x2974e; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000029ac5: jne 0x29b10; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000002a0ff: jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000002a1b1: jne 0x2a1bb; add rsp, 0xd8; ret; 
0x000000000002b271: jne 0x2b278; ret; 
0x000000000002b464: jne 0x2b4f0; mov edx, 0xc; mov rdi, rbx; mov rax, rdx; syscall; 
0x000000000002d10e: jne 0x2d118; movsd xmm0, qword ptr [rip + 0x80ce8]; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d13e: jne 0x2d148; movss xmm0, dword ptr [rip + 0x82378]; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002d28e: jne 0x2d280; fstp st(1); ret; 
0x000000000002d2ce: jne 0x2d2c0; fstp st(1); ret; 
0x000000000002d382: jne 0x2d7e9; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000002e264: jne 0x2e38d; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000002e508: jne 0x2e6d3; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002fe08: jne 0x2fe12; movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000002ffd2: jne 0x2ffdc; movss xmm1, dword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x0000000000030c88: jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dc6: jne 0x30fca; add rsp, 0x18; ret; 
0x0000000000030ffa: jne 0x30fee; addps xmm0, xmmword ptr [rip + 0x7d305]; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x00000000000312b4: jne 0x313a0; add rsp, 0x48; ret; 
0x000000000003294b: jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a0e: jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032b00: jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003325e: jne 0x33090; pxor xmm1, xmm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000335a6: jne 0x333f0; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000337ac: jne 0x337b8; add rsp, 8; ret; 
0x0000000000033a87: jne 0x33fb6; add rsp, 0x60; pop rbx; pop rbp; pop r12; ret; 
0x0000000000034098: jne 0x340a0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000341e8: jne 0x341f0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x0000000000034384: jne 0x34374; mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003454b: jne 0x3453f; pxor xmm1, xmm1; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034646: jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000346cc: jne 0x346d8; mov dword ptr [rdi], 0; ret; 
0x000000000003475a: jne 0x3476f; fld xword ptr [rsp + 0x30]; mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x0000000000034be0: jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x0000000000039d95: jne 0x39d48; pxor xmm1, xmm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000039bec: jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x0000000000039f75: jne 0x39f29; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000039e05: jne 0x39f58; divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x000000000003a417: jne 0x3a430; movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x000000000003a72d: jne 0x3a744; movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000003a7d8: jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x000000000003a918: jne 0x3a8e0; fstp st(1); fld xword ptr [rsp + 0x10]; pop rbx; fstp xword ptr [rdi]; ret; 
0x000000000003ac29: jne 0x3ac40; fld xword ptr [rsp + 0x30]; fld xword ptr [rsp + 0x40]; faddp st(1); add rsp, 0x28; ret; 
0x000000000003ad00: jne 0x3ac65; fld xword ptr [rsp + 0x40]; add rsp, 0x28; ret; 
0x000000000003c5f0: jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c630: jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003cb40: jne 0x3cb4f; movsd xmm0, qword ptr [rip + 0x71886]; test rax, rax; je 0x3cb60; ret; 
0x000000000003cba8: jne 0x3cbb6; movss xmm0, dword ptr [rip + 0x73eea]; test eax, eax; je 0x3cbd0; ret; 
0x000000000003d379: jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003d509: jne 0x3d626; add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x000000000003dbd1: jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e18a: jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a9: jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e371: jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8ae: jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000003fa67: jne 0x3fa60; fstp st(1); ret; 
0x000000000003fac1: jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb21: jne 0x3fb28; add rsp, 0x18; ret; 
0x000000000003fb47: jne 0x3fb40; fstp st(1); ret; 
0x000000000003fc73: jne 0x3fc60; mov byte ptr [rdx], 0; lea rax, [rip + 0x7739f]; ret; 
0x000000000003fc97: jne 0x3fca0; pop rbx; ret; 
0x000000000003fcd8: jne 0x3fcc8; lea rax, [rbx + rdx]; pop rbx; ret; 
0x000000000003fd00: jne 0x3fd10; lea r8, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x00000000000404a2: jne 0x404fe; add rsp, 0x130; pop rbp; ret; 
0x0000000000040540: jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x00000000000405e8: jne 0x40612; add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000000004129b: jne 0x41273; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000004142b: jne 0x41447; add rsp, 0xa0; pop rbp; ret; 
0x00000000000414ab: jne 0x414b2; add rsp, 0x58; ret; 
0x0000000000041537: jne 0x415d4; add rsp, 0x30; pop rbx; ret; 
0x0000000000042051: jne 0x42058; pop rbx; ret; 
0x00000000000420a0: jne 0x4208d; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x00000000000420fd: jne 0x42104; add rsp, 0x18; ret; 
0x0000000000042164: jne 0x421a0; add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000000427ed: jne 0x42850; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x00000000000428e1: jne 0x428e8; add rsp, 0x58; ret; 
0x0000000000042cdd: jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042e53: jne 0x42ea7; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000042f56: jne 0x42f60; add rsp, 0xd8; ret; 
0x0000000000043797: jne 0x437c8; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x00000000000437b9: jne 0x4382f; add rsp, 0x70; pop rbp; ret; 
0x0000000000043aa4: jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000043db6: jne 0x43de0; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000043dd8: jne 0x43e03; add rsp, 0x58; ret; 
0x0000000000043f18: jne 0x43f20; movzx eax, dil; ret; 
0x0000000000043fca: jne 0x43fd8; mov eax, 1; ret; 
0x00000000000440dd: jne 0x44148; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000441bf: jne 0x441c7; add rsp, 0x10; pop rbx; ret; 
0x0000000000044272: jne 0x44346; mov rax, r11; add rsp, 0x18; ret; 
0x0000000000044b38: jne 0x44bac; add rsp, 0x18; ret; 
0x0000000000045024: jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000045942: jne 0x45920; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000004708e: jne 0x47080; pop rbx; ret; 
0x0000000000047108: jne 0x4712c; add rsp, 0x238; pop rbx; pop r12; ret; 
0x00000000000479b0: jne 0x479af; jmp qword ptr [rsi + 0x2e]; 
0x0000000000047a44: jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c24: jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004803e: jne 0x48064; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000048410: jne 0x4841b; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000004845c: jne 0x48463; add rsp, 0x18; ret; 
0x0000000000048f9c: jne 0x49008; cmp byte ptr [rdi + 0xf], 1; jne 0x49008; mov eax, 2; ret; 
0x0000000000048fa2: jne 0x49008; mov eax, 2; ret; 
0x0000000000049342: jne 0x49328; xor eax, eax; cmp byte ptr [rbx], 0; pop rbx; sete al; ret; 
0x0000000000049688: jne 0x49793; add rsp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000004ad32: jne 0x4ad18; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000004ad5d: jne 0x4ad50; pop rbx; ret; 
0x000000000004aedf: jne 0x4aee7; add rsp, 0x40; pop rbx; ret; 
0x000000000004c30a: jne 0x4c338; add rsp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x000000000004c44d: jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000004c67d: jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6e1: jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004c77c: jne 0x4c788; add rsp, 0x20; mov rax, r12; pop r12; ret; 
0x000000000004d0bc: jne 0x4d0e9; add rsp, 0x28; ret; 
0x000000000004d15c: jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1da: jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df74: jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dffb: jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e059: jne 0x4e060; add rsp, 0x18; ret; 
0x000000000004e308: jne 0x4e330; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000004f089: jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000004f3ce: jne 0x4f3d5; add rsp, 0x18; ret; 
0x000000000004f42d: jne 0x4f47f; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000004f4b9: jne 0x4f4d1; add rsp, 0x98; pop rbx; pop rbp; ret; 
0x000000000004f651: jne 0x4f663; leave; ret; 
0x000000000004f7eb: jne 0x4f80b; leave; ret; 
0x000000000004f981: jne 0x4f993; leave; ret; 
0x000000000004fcfb: jne 0x4fd45; add rsp, 0x30; pop rbp; pop r12; pop r13; ret; 
0x0000000000050043: jne 0x50049; mov eax, 0x6d; xor edi, edi; syscall; 
0x0000000000050160: jne 0x500f0; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r14; syscall; 
0x0000000000050078: jne 0x50112; mov eax, 0x66; syscall; 
0x0000000000050054: jne 0x50112; mov eax, dword ptr [rbp]; test al, 1; je 0x50097; mov eax, 0x68; syscall; 
0x00000000000507ae: jne 0x507a0; xor eax, eax; pop rbx; ret; 
0x0000000000050922: jne 0x50928; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000050a6a: jne 0x50a88; add rsp, 0x160; pop r12; ret; 
0x000000000005103b: jne 0x51256; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000059c6f: jne 0x59c48; mov eax, edx; ret; 
0x0000000000059c66: jne 0x59c50; add rdi, 1; cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x0000000000059d58: jne 0x59d90; xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000059d7f: jne 0x59d9a; add rsp, 0x10; pop rbp; ret; 
0x000000000005a319: jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005a6ab: jne 0x5a690; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000005aa8f: jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005ab5a: jne 0x5ab93; add rsp, 0x20; pop rbx; ret; 
0x000000000005add8: jne 0x5ade6; add rsp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000005af6e: jne 0x5afd1; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000005b09a: jne 0x5b0c3; add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000005b136: jne 0x5b16c; mov eax, 0x83; syscall; 
0x000000000005b269: jne 0x5b287; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b2f0: jne 0x5b2fd; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000005b377: jne 0x5b38f; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b456: jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005b4d7: jne 0x5b4e4; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b530: jne 0x5b540; mov eax, r12d; pop r12; ret; 
0x000000000005b66c: jne 0x5b687; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000005b8f8: jne 0x5b90a; add rsp, 0x90; pop rbx; ret; 
0x000000000005b9ff: jne 0x5ba40; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005ba56: jne 0x5ba5f; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000005bc93: jne 0x5bd31; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005bde9: jne 0x5be4d; add rsp, 0xd8; pop rbx; pop rbp; ret; 
0x000000000005bee5: jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005c16f: jne 0x5c187; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005c25f: jne 0x5c277; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000005c3c8: jne 0x5c2eb; xor edx, edx; syscall; 
0x000000000005c38d: jne 0x5c39c; mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005c3b2: jne 0x5c439; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000005c521: jne 0x5c53e; movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005c5c6: jne 0x5c5d8; or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005c86a: jne 0x5c83a; xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000005c92e: jne 0x5c968; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005c959: jne 0x5c997; add rsp, 0x10; pop rbx; ret; 
0x000000000005cb44: jne 0x5cb71; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000005cced: jne 0x5cd07; movsxd rdi, dword ptr [rdi + 0x78]; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005cd23: jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005ce43: jne 0x5ce80; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005ce6e: jne 0x5ce87; add rsp, 0x10; pop rbx; ret; 
0x000000000005cf36: jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d036: jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005d07c: jne 0x5d088; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000005d09c: jne 0x5d0a8; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000005d3d6: jne 0x5d3f0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000005dc5f: jne 0x5dc68; pop rbp; ret; 
0x000000000005de7f: jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005e2f3: jne 0x5e310; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000005e5d6: jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed66: jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f055: jne 0x5f040; ret; 
0x000000000005f356: jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f596: jne 0x5f5a0; add rsp, 0xd8; ret; 
0x000000000005fd16: jne 0x5fd27; add rsp, 0x18; ret; 
0x000000000005ff37: jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000060243: jne 0x60264; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000060417: jne 0x6042a; add rsp, 0x10; pop rbx; ret; 
0x0000000000060928: jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000060d44: jne 0x60d4f; mov eax, 0x54; syscall; 
0x0000000000060e8b: jne 0x60e95; add rsp, 0xd8; ret; 
0x0000000000061021: jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610d6: jne 0x610e0; add rsp, 0xd8; ret; 
0x0000000000061196: jne 0x611a0; add rsp, 0xd8; ret; 
0x0000000000061251: jne 0x6125b; add rsp, 0xd8; ret; 
0x0000000000061306: jne 0x61310; add rsp, 0xd8; ret; 
0x00000000000619a1: jne 0x619ab; add rsp, 0xf8; ret; 
0x000000000006407a: jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dca: jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bdf: jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d99: jne 0x66da3; add rsp, 0xf8; ret; 
0x0000000000067058: jne 0x67063; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000000670ea: jne 0x670f4; add rsp, 0x208; ret; 
0x00000000000671eb: jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672ab: jne 0x672b5; add rsp, 0xd8; ret; 
0x000000000006894a: jne 0x68930; mov rax, rdi; ret; 
0x0000000000068a23: jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x00000000000689fe: jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x0000000000068a59: jne 0x68a40; xor eax, eax; ret; 
0x0000000000068ae7: jne 0x68ac3; ret; 
0x0000000000068adf: jne 0x68ad0; ret; 
0x000000000006909a: jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000690f0: jne 0x690e0; ret; 
0x0000000000069319: jne 0x69300; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000069457: jne 0x69448; mov rax, r12; pop r12; ret; 
0x000000000006949b: jne 0x69488; xor eax, eax; sub eax, ecx; ret; 
0x0000000000069497: jne 0x694a8; test dl, dl; jne 0x69488; xor eax, eax; sub eax, ecx; ret; 
0x0000000000069517: jne 0x695a2; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000006981b: jne 0x69810; sub rax, rdi; ret; 
0x0000000000069877: jne 0x69870; sub rax, rdi; ret; 
0x0000000000069a0c: jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x0000000000069c19: jne 0x69c7b; add rsp, 0x38; ret; 
0x000000000006a041: jne 0x6a048; pop rbp; ret; 
0x000000000006a0dc: jne 0x6a0c0; nop; xor eax, eax; pop rbp; ret; 
0x000000000006a119: jne 0x6a100; pop rbp; ret; 
0x000000000006a429: jne 0x6a410; ret; 
0x000000000006a4fc: jne 0x6a4f0; xor eax, eax; pop rbx; ret; 
0x000000000006a550: jne 0x6a538; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x000000000006a58d: jne 0x6a580; mov rax, r8; ret; 
0x000000000006a699: jne 0x6a690; sub rax, rdi; sar rax, 2; ret; 
0x000000000006a7f4: jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x000000000006a835: jne 0x6a820; xor esi, esi; call 0x6aea0; mov rax, r12; pop r12; ret; 
0x000000000006ad9c: jne 0x6ad90; mov rax, rdi; ret; 
0x000000000006ae26: jne 0x6ae18; mov rax, r8; ret; 
0x000000000006ae8e: jne 0x6ae80; mov rax, r8; ret; 
0x000000000006aebb: jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006af4c: jne 0x6af59; add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000006afc6: jne 0x6afa0; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000006b2a6: jne 0x6b2b0; xor eax, eax; ret; 
0x000000000006b3ad: jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006b547: jne 0x6b550; xor esi, esi; mov rax, r9; syscall; 
0x000000000006b5a9: jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006b5a9: jne 0x6b57a; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000006b821: jne 0x6b838; mov edx, dword ptr [rdi]; cmp edx, r9d; je 0x6b810; ret; 
0x000000000006bad8: jne 0x6bac0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006be74: jne 0x6be60; call 0x70300; xor eax, eax; pop rbx; ret; 
0x000000000006bfbc: jne 0x6bf48; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c044: jne 0x6bf5e; mov esi, 1; mov rax, r8; syscall; 
0x000000000006c08d: jne 0x6bf72; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c121: jne 0x6c130; mov rax, r8; syscall; 
0x000000000006c214: jne 0x6c18c; mov rax, r8; syscall; 
0x000000000006c1d6: jne 0x6c1dd; mov rax, r8; syscall; 
0x000000000006c251: jne 0x6c258; mov rax, r8; syscall; 
0x000000000006c2ab: jne 0x6c2b5; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c40b: jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c54e: jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x000000000006c601: jne 0x6c668; add rsp, 0xa8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000006c7a5: jne 0x6c790; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006c778: jne 0x6c79c; mov rax, r8; syscall; 
0x000000000006cddc: jne 0x6ca68; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006ce3c: jne 0x6ca88; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006cda7: jne 0x6cb0e; mov rax, r8; syscall; 
0x000000000006cc3b: jne 0x6cc00; mov esi, 3; mov rax, rbx; syscall; 
0x000000000006cbf6: jne 0x6cc00; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d06c: jne 0x6cfc6; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d041: jne 0x6d005; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d17f: jne 0x6d160; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006d20c: jne 0x6d210; ret; 
0x000000000006d49d: jne 0x6d391; mov esi, 1; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006dc89: jne 0x6d8af; mov rax, r10; mov rsi, rdx; syscall; 
0x000000000006d90d: jne 0x6d918; mov rax, r8; syscall; 
0x000000000006dd16: jne 0x6dd20; xor eax, eax; ret; 
0x000000000006e3c6: jne 0x6e3d8; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000006e7cc: jne 0x6e830; mov r8d, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000006e8e9: jne 0x6e900; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006ea0c: jne 0x6e9cb; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006e9b0: jne 0x6ea70; mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006eba1: jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec96: jne 0x6ecb6; add rsp, 0x28; ret; 
0x000000000006ed09: jne 0x6eced; mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed09: jne 0x6eced; mov esi, 1; mov rax, r8; syscall; ret; 
0x000000000006ee0c: jne 0x6edcf; mov esi, 1; mov rax, r8; syscall; 
0x000000000006efea: jne 0x6efc8; xor eax, eax; ret; 
0x000000000006f0a8: jne 0x6f07d; mov rax, r8; mov rsi, r10; syscall; 
0x000000000006f077: jne 0x6f080; test ecx, ecx; js 0x6f080; xor eax, eax; ret; 
0x000000000006f2ba: jne 0x6f2c0; ret; 
0x000000000006f626: jne 0x6f620; lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x000000000006f62e: jne 0x6f620; ret; 
0x000000000006fc96: jne 0x6fc69; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006fc62: jne 0x6fc70; test r8b, r8b; jne 0x6fc70; xor eax, eax; ret; 
0x000000000006fc67: jne 0x6fc70; xor eax, eax; ret; 
0x000000000007023d: jne 0x70247; add rsp, 0x10; xor eax, eax; pop rbx; ret; 
0x0000000000070339: jne 0x70320; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000703a3: jne 0x7037d; mov esi, 1; mov rax, r8; syscall; 
0x00000000000703a3: jne 0x7037d; mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000070853: jne 0x70868; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000071ac4: jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000071ced: jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000071d5a: jne 0x71d6d; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071fb2: jne 0x71fba; add rsp, 0x40; pop rbp; ret; 
0x0000000000072046: jne 0x72050; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000007220e: jne 0x72218; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000000073770: jne 0x73778; add rsp, 0x20; pop rbx; ret; 
0x00000000000737f9: jne 0x7381a; add rsp, 0x48; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000000738cf: jne 0x73939; add rsp, 0x1a0; xor eax, eax; pop rbp; ret; 
0x0000000000073e15: jne 0x73e1c; add rsp, 0x38; ret; 
0x0000000000074232: jne 0x74239; add rsp, 0x58; ret; 
0x00000000000743a3: jne 0x743b8; movsxd rdi, r9d; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074380: jne 0x743d0; mov edx, 0x21; nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x0000000000074434: jne 0x74498; mov eax, 0x6b; syscall; 
0x0000000000074488: jne 0x744a6; xor eax, eax; add rsp, 0x18; ret; 
0x00000000000744e3: jne 0x74530; mov eax, 0x10d; mov rdi, r13; mov rsi, rbx; mov rdx, r14; syscall; 
0x00000000000746c7: jne 0x74700; mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000074716: jne 0x7471e; add rsp, 0x30; pop rbp; ret; 
0x0000000000074766: jne 0x747a0; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000747b6: jne 0x747c1; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074a59: jne 0x74a7f; add rsp, 0x198; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000074bde: jne 0x74be8; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000074f60: jne 0x74f6f; lea r8, [rsp + 7]; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000074f93: jne 0x74fac; add rsp, 0x18; ret; 
0x000000000007500c: jne 0x7503c; add rsp, 0x18; ret; 
0x0000000000075306: jne 0x7530d; add rsp, 0x28; ret; 
0x000000000007536b: jne 0x75372; add rsp, 0x28; ret; 
0x000000000007540d: jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075459: jne 0x75460; add rsp, 0x18; ret; 
0x00000000000754b1: jne 0x754b8; pop rbx; ret; 
0x0000000000075630: jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e7: jne 0x756ee; add rsp, 0x28; ret; 
0x0000000000075925: jne 0x75900; lea rax, [rip + 0x2eb2]; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x00000000000759d0: jne 0x75978; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075ad3: jne 0x75a60; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075cd5: jne 0x75c7f; mov rax, r8; ret; 
0x00000000000760e6: jne 0x760f0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000076219: jne 0x761f0; ret; 
0x0000000000076563: jne 0x76550; add rdi, qword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000076d36: jne 0x76c50; add rsp, 0x108; pop rbx; pop rbp; ret; 
0x0000000000077487: jne 0x773bf; pop rbx; pop rbp; pop r12; ret; 
0x000000000007b289: jne 0x7b286; ret; 
0x000000000007b352: jne 0x7b35f; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000023e2b: jno 0x23e9a; add eax, dword ptr [rax]; mov eax, 0x27; syscall; 
0x000000000002abd1: jno 0x2ab56; ret 0xf01; 
0x000000000002c579: jno 0x2c4fe; ret 0xf01; 
0x0000000000042642: jno 0x42646; add byte ptr [rax - 0x75], cl; je 0x4266d; and byte ptr [rax - 0x77], cl; ret; 
0x000000000006a30e: jno 0x6a29d; ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x0000000000074441: jno 0x74443; add byte ptr [rax], al; syscall; 
0x0000000000023dab: jnp 0x23dad; add byte ptr [rax], al; syscall; 
0x00000000000421a1: jnp 0x42170; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000004f419: jnp 0x4f421; add al, ch; pop rdi; rol byte ptr [rcx], 0; mov eax, 0x39; syscall; 
0x000000000005f5a1: jnp 0x5f59c; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000000611a1: jnp 0x61180; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000062ff7: jnp 0x62ffb; and al, 0xf; test byte ptr [rax], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000006c6aa: jnp 0x6c6b4; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000006d1d1: jnp 0x6d170; add al, 0; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d4d3: jnp 0x6d4cf; jmp qword ptr [rsi + 0x2e]; 
0x000000000006d54a: jnp 0x6d554; call qword ptr [rbx]; 
0x000000000006de83: jnp 0x6deb5; test edi, edi; je 0x6de9b; mov eax, 0x8f; mov rsi, r13; syscall; 
0x000000000006deda: jnp 0x6df0c; mov eax, 0x91; syscall; 
0x0000000000030b68: jns 0x30b70; ret; 
0x0000000000034c27: jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034cae: jns 0x34ca8; mov eax, r8d; ret; 
0x0000000000034d2f: jns 0x34d28; mov eax, r8d; ret; 
0x00000000000366e3: jns 0x366ec; add dl, dh; addps xmm0, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000037b9d: jns 0x37bb0; test eax, eax; je 0x37bb0; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003cc89: jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cd37: jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x000000000003cdf3: jns 0x3cdb0; fchs; ret; 
0x000000000003e792: jns 0x3e76d; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000004863b: jns 0x48650; movzx eax, di; cmp edx, 0xbf; movzx edi, dil; cmova eax, edi; ret; 
0x000000000005285b: jns 0x5283d; mov dword ptr [r8], 0xffffffff; ret; 
0x00000000000599a3: jns 0x5995b; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000005cf60: jns 0x5cf70; and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x000000000005d1c4: jns 0x5d248; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x00000000000695a3: jns 0x695fe; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000006b533: jns 0x6b518; movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x00000000000738a9: jns 0x73878; mov edi, dword ptr [rcx + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000073d0b: jns 0x73d1c; add rdi, rdi; mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x0000000000074b0c: jns 0x74b0e; add byte ptr [rax], al; syscall; 
0x0000000000074b25: jns 0x74b27; add byte ptr [rax], al; xor edi, edi; syscall; 
0x0000000000074b25: jns 0x74b27; add byte ptr [rax], al; xor edi, edi; syscall; ret; 
0x000000000007656b: jns 0x765c5; add rsp, 0x100; ret; 
0x000000000007a554: jns 0x7a559; add byte ptr [rdi + rcx + 0x54], al; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x0000000000023c53: jo 0x23c5d; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000002465e: jo 0x24674; call 0x438b0; xor eax, eax; add rsp, 8; ret; 
0x000000000002af09: jo 0x2af0e; add byte ptr [rax], al; movsxd rcx, dword ptr [rdi]; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000002ffd8: jo 0x2ffe4; or byte ptr [rax], al; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003194f: jo 0x318d6; sal byte ptr [rsp + rdi - 0xe], 0xf; adc byte ptr [rip + 0x7c9b4], dl; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000038d4d: jo 0x38cd8; ret; 
0x00000000000437be: jo 0x4381d; ret; 
0x0000000000050028: jo 0x5002a; add byte ptr [rax], al; syscall; 
0x0000000000074452: jo 0x7445c; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x0000000000075209: jo 0x7520b; add byte ptr [rax], al; syscall; 
0x00000000000762f4: jo 0x7633e; add esp, 0x100; pop rbx; ret; 
0x000000000002387a: jp 0x238ac; mov rax, r8; syscall; 
0x0000000000023dcb: jp 0x23dcd; add byte ptr [rax], al; syscall; 
0x0000000000034640: jp 0x34650; comisd xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000346c7: jp 0x346d8; comiss xmm0, xmm1; jne 0x346d8; mov dword ptr [rdi], 0; ret; 
0x00000000000365e5: jp 0x365ee; add dl, dh; divps xmm0, xmmword ptr [rip + 0x77830]; ret; 
0x0000000000039be6: jp 0x39d78; jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000003cb3e: jp 0x3cb4f; jne 0x3cb4f; movsd xmm0, qword ptr [rip + 0x71886]; test rax, rax; je 0x3cb60; ret; 
0x000000000003cba6: jp 0x3cbb6; jne 0x3cbb6; movss xmm0, dword ptr [rip + 0x73eea]; test eax, eax; je 0x3cbd0; ret; 
0x000000000004dfa2: jp 0x4dfb3; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000006e80b: jp 0x6e811; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000006f284: jp 0x6f2c6; xor eax, eax; ret; 
0x000000000006f2b4: jp 0x6f2f7; xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x0000000000076567: jp 0x76571; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000017fc7: js 0x17fb1; ret; 
0x0000000000017fbf: js 0x17fc0; je 0x17fe7; js 0x17fc4; je 0x17feb; js 0x17fb1; ret; 
0x0000000000017fc3: js 0x17fc4; je 0x17feb; js 0x17fb1; ret; 
0x0000000000019c67: js 0x19bf2; ret 0x8b48; 
0x000000000001f560: js 0x1f592; mov eax, 0xc8; syscall; 
0x000000000001f956: js 0x1f962; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000001fa08: js 0x1f9c1; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x000000000002b0af: js 0x2b0ac; add byte ptr [rdi], cl; test dword ptr [rax], ecx; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000002b246: js 0x2b268; je 0x2b258; mov dword ptr [rip + 0x8bd28], 0; ret; 
0x000000000002d144: js 0x2d169; or byte ptr [rax], al; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002edb7: js 0x2ee90; ret; 
0x000000000002ef69: js 0x2f0c8; ret; 
0x000000000002f76d: js 0x2f778; add rsp, 0x10; pop rbx; ret; 
0x0000000000033964: js 0x33970; ret; 
0x0000000000034060: js 0x34068; ret; 
0x00000000000341af: js 0x341b8; ret; 
0x0000000000034791: js 0x347eb; pop rdx; add rsp, 0x28; ret; 
0x0000000000038db8: js 0x38da2; jmp qword ptr [rbx]; 
0x0000000000038db4: js 0x38db5; je 0x38ddc; js 0x38da2; jmp qword ptr [rbx]; 
0x000000000003cc43: js 0x3cc8b; ret; 
0x000000000003ccf6: js 0x3cd39; ret; 
0x000000000003cdae: js 0x3cdf5; ret; 
0x000000000003e76b: js 0x3e794; add rsp, 0x10; pop rbx; ret; 
0x00000000000411f9: js 0x411fb; add byte ptr [rax], al; syscall; 
0x000000000004208b: js 0x42098; mov eax, r12d; pop r12; ret; 
0x0000000000043998: js 0x4399d; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000043ee8: js 0x43eeb; ret; 
0x0000000000047ebf: js 0x47f19; add byte ptr [rsp + rcx + 0x48], dh; add eax, 0xa0; ret; 
0x000000000004b37b: js 0x4b3ae; jmp qword ptr [rsi + 0x44]; 
0x000000000004bc4d: js 0x4bc60; mov eax, dword ptr [rsp + 0x10]; test eax, eax; je 0x4bc60; add rsp, 0x28; ret; 
0x00000000000502ae: js 0x5010f; mov rax, r10; syscall; 
0x0000000000050243: js 0x50112; mov rax, r10; syscall; 
0x000000000005014a: js 0x50160; mov rax, r15; syscall; 
0x00000000000501e2: js 0x50208; mov eax, 0x50; syscall; 
0x000000000005020a: js 0x50230; mov rax, r13; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000050292: js 0x502a8; mov rax, r10; syscall; 
0x000000000005a350: js 0x5a35a; ret; 
0x000000000005adab: js 0x5addd; mov eax, 0xc8; syscall; 
0x000000000005c747: js 0x5c7b0; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000005c9aa: js 0x5c994; adc byte ptr [rbx + rdi*8 - 0x79cb701], 0xb8; add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005cc2c: js 0x5cc7a; mov eax, esp; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005ccf2: js 0x5cd3c; mov edx, esp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000005d710: js 0x5d719; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000005dc08: js 0x5db8f; sar byte ptr [rax + 0x2d], 0x48; add esp, 0x10; pop rbp; ret; 
0x000000000005dc0b: js 0x5dc3a; add rsp, 0x10; pop rbp; ret; 
0x000000000005ec24: js 0x5ec1d; ret; 
0x00000000000607af: js 0x60840; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000061503: js 0x614d0; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000006b578: js 0x6b580; ret; 
0x000000000006be39: js 0x6be40; xor eax, eax; ret; 
0x000000000006c3cf: js 0x6c401; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000006c3cf: js 0x6c401; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000006c7e7: js 0x6c7f0; xor eax, eax; ret; 
0x000000000006d2c5: js 0x6d2cf; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000006d5a0: js 0x6d5ea; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006d5a7: js 0x6d621; ret; 
0x000000000006f07b: js 0x6f080; xor eax, eax; ret; 
0x000000000006f2e8: js 0x6f2f8; mov edx, 0xb; cmovne eax, edx; ret; 
0x00000000000722e8: js 0x722f8; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000073c87: js 0x73c98; mov eax, 0xe2; syscall; 
0x0000000000073c87: js 0x73c98; mov eax, 0xe2; syscall; ret; 
0x000000000007446c: js 0x74482; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x00000000000745ed: js 0x74608; movsxd rdi, dword ptr [rsp + 0x28]; lea rsi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x000000000007a5e4: js 0x7a5e9; add byte ptr [rdi + rcx + 0x54], al; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000007b0aa: js 0x7b0b1; fscale; fstp st(1); ret; 
0x00000000000754ba: lahf; cli; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x0000000000074fae: lahf; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007aeee: lahf; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000005a70f: lahf; rcl dword ptr [rbx + 0x41], 0xf; sahf; ret; 
0x000000000002aa50: lahf; ret 0x394d; 
0x000000000001ee40: lcall [rbp + 0x41]; pop rsp; pop r13; jmp rax; 
0x000000000004ecb6: lcall [rbp + 0x41]; pop rsp; pop r13; pop r14; ret; 
0x000000000002550e: lcall [rbp + 0x41]; pop rsp; ret; 
0x00000000000528d7: lcall [rbx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000000436c5: lcall [rbx + 0x41]; pop rsp; ret; 
0x0000000000025506: lcall [rbx + 0x48]; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000001e33c: lcall [rbx + 0x5d]; mov eax, r11d; pop r12; ret; 
0x000000000005c79e: lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000006b0dc: lcall [rbx + 0x5d]; pop r12; pop r13; ret; 
0x00000000000446d5: lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000001db8d: lcall [rcx]; setbe al; ret; 
0x0000000000071ed7: lcall [rdx + 0x59]; neg eax; add rsp, 8; ret; 
0x0000000000071f05: lcall [rsi + 0x5f]; neg eax; add rsp, 8; ret; 
0x000000000007af1b: ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000007aeb3: ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000007af34: ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000007aef3: ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x0000000000021a98: lea eax, [r9 + 2]; mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x000000000001efe1: lea eax, [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006b90a: lea eax, [rax + rax + 2]; add rsp, 8; ret; 
0x0000000000022e74: lea eax, [rax + rax - 1]; cmp byte ptr [rax], 0xa; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x0000000000048fe1: lea eax, [rax + rax*8 + 5]; ret; 
0x000000000001fc4c: lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x000000000006de19: lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000042761: lea eax, [rax]; add byte ptr [rax], al; syscall; 
0x0000000000025536: lea eax, [rbp + 1]; sub rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000067b06: lea eax, [rbp + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000006a482: lea eax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a452: lea eax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x000000000006a516: lea eax, [rbx + rax*4]; pop rbx; ret; 
0x000000000003fcdb: lea eax, [rbx + rdx]; pop rbx; ret; 
0x000000000004f28b: lea eax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x0000000000021a99: lea eax, [rcx + 2]; mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x0000000000061a15: lea eax, [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000003fdef: lea eax, [rdi + 1]; ret; 
0x000000000004efa4: lea eax, [rdi - 1]; mov qword ptr [rip + 0x67e8a], rax; ret; 
0x0000000000045947: lea eax, [rdx + 1]; ret; 
0x0000000000045967: lea eax, [rdx + 2]; cmp rsi, rcx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x0000000000067363: lea eax, [rdx - 0x30]; cmp eax, 9; jbe 0x67321; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000000075928: lea eax, [rip + 0x2eb2]; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x00000000000742e9: lea eax, [rip + 0x3dced]; ret; 
0x00000000000754a9: lea eax, [rip + 0x41011]; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x0000000000067678: lea eax, [rip + 0x4f602]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005fd65: lea eax, [rip + 0x570dd]; add rsp, 8; ret; 
0x0000000000019a3d: lea eax, [rip + 0x625bd]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004f385: lea eax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004bc75: lea eax, [rip + 0x692a5]; ret; 
0x000000000004acec: lea eax, [rip + 0x6bf3e]; ret; 
0x00000000000486be: lea eax, [rip + 0x6e55c]; add rsp, 0x18; ret; 
0x000000000003fd79: lea eax, [rip + 0x72311]; mov rax, r8; ret; 
0x000000000003fd03: lea eax, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x000000000003fd69: lea eax, [rip + 0x7289e]; pop rbx; mov rax, r8; ret; 
0x0000000000042049: lea eax, [rip + 0x74b81]; test ebx, ebx; jne 0x42058; pop rbx; ret; 
0x000000000003fc79: lea eax, [rip + 0x7739f]; ret; 
0x0000000000028ede: lea eax, [rip + 0x7e27c]; cmp edx, 0x31; jle 0x28f08; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000002544a: lea eax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000029a2c: lea eax, [rip + 0x8894b]; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029a01: lea eax, [rip + 0x88976]; ret; 
0x0000000000028f45: lea eax, [rip + 0x89118]; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028f4c: lea eax, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028eb4: lea eax, [rip + 0x891af]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028eea: lea eax, [rip + 0x8948d]; mov rax, r8; ret; 
0x0000000000029325: lea eax, [rip + 0x8a875]; ret; 
0x000000000001db35: lea eax, [rip + 0x96205]; ret; 
0x000000000001db25: lea eax, [rip + 0x9620d]; ret; 
0x000000000001dae5: lea eax, [rip + 0x96245]; ret; 
0x000000000006c3e1: lea eax, [rip + 0xf012]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000001ee3b: lea eax, [rip - 0x71]; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000000684b2: lea eax, [rsi + 1]; mov qword ptr [rdi + 8], rax; movzx eax, byte ptr [rsi]; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000041485: lea eax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b54: lea eax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000074f63: lea eax, [rsp + 7]; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000074fe1: lea eax, [rsp + 7]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000002b4f1: lea ebp, [rbx + 0x1000]; mov eax, 0xc; mov rdi, rbp; syscall; 
0x000000000002b48a: lea ebp, [rbx + 0x2000]; mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x000000000001e30f: lea ebx, [rax + rbx]; pop rbx; pop rbp; mov eax, r11d; pop r12; ret; 
0x00000000000619fd: lea ecx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x0000000000061fbb: lea ecx, [rbp + rax - 0x6f730000]; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x000000000005e6e8: lea ecx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000001f265: lea ecx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x0000000000060a7f: lea ecx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x0000000000060bf1: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060bad: lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000041ad3: lea ecx, [rsp + 0x38]; call rax; 
0x00000000000501e1: lea edi, [rax + 0x24]; mov eax, 0x50; syscall; 
0x0000000000050209: lea edi, [rax + 0x24]; mov rax, r13; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000006e774: lea edi, [rcx + 0x88]; syscall; 
0x000000000006e80a: lea edi, [rdx + 4]; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000007a1d5: lea edi, [rip + 0x383e3]; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x0000000000070365: lea edi, [rip + 0x46b15]; mov eax, 0xffffffff; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x000000000006fc01: lea edi, [rip + 0x473dd]; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x000000000006d23f: lea edi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1cf: lea edi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b04: lea edi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f746: lea edi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000004f379: lea edi, [rip + 0x65001]; call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004f416: lea edi, [rip + 0x67b38]; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000004f307: lea edi, [rip + 0x67caf]; call 0x6b570; mov rax, r12; pop r12; ret; 
0x0000000000022e20: lea edi, [rip + 0x8a2ca]; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x000000000001ed0d: lea edi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001eaba: lea edi, [rip + 0x98490]; syscall; 
0x0000000000015a6b: lea edi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x00000000000745d0: lea edi, [rip - 0x1d6]; call 0x7b396; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000004f387: lea edi, [rsi + rax]; pop rbp; ret; 
0x000000000006a3a1: lea edi, [rsi - 0x30]; cmp edi, 9; jbe 0x6a3c6; mov eax, edx; sub eax, esi; ret; 
0x0000000000060cfa: lea edi, [rsp + 0xc]; call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x00000000000704a8: lea edx, [rax + 0x15180]; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000005d5cb: lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f815: lea edx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e1: lea edx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000028eec: lea edx, [rax + rcx - 0x3f76b400]; ret; 
0x0000000000025443: lea edx, [rax - 0x100]; lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000006741b: lea edx, [rax - 0x30]; cmp edx, 9; jbe 0x673d1; xor r8d, r8d; mov rax, r8; ret; 
0x00000000000674db: lea edx, [rax - 0x30]; cmp edx, 9; jbe 0x67491; xor r8d, r8d; mov rax, r8; ret; 
0x000000000006a3c9: lea edx, [rcx - 0x30]; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000001e560: lea edx, [rdi + 1]; mov eax, 1; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x000000000001dca4: lea edx, [rdi - 0x21]; cmp edx, 0x5d; jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000001dd34: lea edx, [rdi - 0x30]; cmp edx, 9; ja 0x1dd48; mov eax, 1; ret; 
0x000000000002a24c: lea edx, [rip + 0x87e4c]; test rax, rax; cmove rax, rdx; ret; 
0x0000000000022223: lea edx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000045ad1: lea edx, [rsi + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x000000000006ec67: lea edx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000006d881: lea edx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000073a21: lea edx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000042138: lea edx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000001f977: lea edx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000002465d: lea esi, [rax + 0x14]; call 0x438b0; xor eax, eax; add rsp, 8; ret; 
0x000000000006d531: lea esi, [rbx + 0x18]; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000005abce: lea esi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abce: lea esi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005abae: lea esi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abae: lea esi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004ef79: lea esi, [rip + 0x65407]; call 0x4ee80; add rsp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef49: lea esi, [rip + 0x65437]; call 0x4ee80; add rsp, 8; shr rax, 0x11; ret; 
0x000000000007b2a4: lea esi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000073a15: lea esi, [rsp + 0x10]; mov dword ptr [rsp + 0x18], edx; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000043ce1: lea esi, [rsp + 0x80]; mov eax, 0xf4; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000006f537: lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x00000000000745f5: lea esi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x000000000007446f: lea esi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005ce46: lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c931: lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000075d6d: lea esi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x0000000000044a30: lea esi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000005e3c6: lea esi, [rsp + 8]; call rcx; 
0x000000000001f56f: lea esi, [rsp + 8]; mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x0000000000074620: lea esi, [rsp + 8]; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000748f4: lea esp, [rbp - 0x10]; mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x0000000000078975: lea esp, [rbp - 0x18]; pop r12; pop r13; pop r14; pop rbp; ret; 
0x0000000000070114: lea esp, [rip + 0x462a6]; call rax; 
0x000000000001e30e: lea r11d, [rax + rbx]; pop rbx; pop rbp; mov eax, r11d; pop r12; ret; 
0x0000000000070113: lea r12, [rip + 0x462a6]; call rax; 
0x0000000000067b05: lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000003fd78: lea r8, [rip + 0x72311]; mov rax, r8; ret; 
0x000000000003fd02: lea r8, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x000000000003fd68: lea r8, [rip + 0x7289e]; pop rbx; mov rax, r8; ret; 
0x0000000000028f4b: lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028ee9: lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x0000000000074f62: lea r8, [rsp + 7]; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x0000000000074fe0: lea r8, [rsp + 7]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000022e73: lea rax, [r8 + rax - 1]; cmp byte ptr [rax], 0xa; je 0x22e88; mov rax, r8; add rsp, 8; ret; 
0x000000000001efe0: lea rax, [rax + r12 + 1]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000025535: lea rax, [rbp + 1]; sub rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a481: lea rax, [rbx + rax*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a451: lea rax, [rbx + rax*4]; pop rbx; pop rbp; ret; 
0x000000000006a515: lea rax, [rbx + rax*4]; pop rbx; ret; 
0x000000000003fcda: lea rax, [rbx + rdx]; pop rbx; ret; 
0x000000000004f28a: lea rax, [rbx - 4]; pop rbx; pop rbp; ret; 
0x0000000000061a14: lea rax, [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000007b2ac: lea rax, [rdi + 1]; ret; 
0x0000000000075927: lea rax, [rip + 0x2eb2]; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x00000000000742e8: lea rax, [rip + 0x3dced]; ret; 
0x00000000000754a8: lea rax, [rip + 0x41011]; test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x0000000000067677: lea rax, [rip + 0x4f602]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005fd64: lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x0000000000019a3c: lea rax, [rip + 0x625bd]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x000000000004f384: lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004bc74: lea rax, [rip + 0x692a5]; ret; 
0x000000000004aceb: lea rax, [rip + 0x6bf3e]; ret; 
0x00000000000486bd: lea rax, [rip + 0x6e55c]; add rsp, 0x18; ret; 
0x0000000000042048: lea rax, [rip + 0x74b81]; test ebx, ebx; jne 0x42058; pop rbx; ret; 
0x000000000003fc78: lea rax, [rip + 0x7739f]; ret; 
0x0000000000028edd: lea rax, [rip + 0x7e27c]; cmp edx, 0x31; jle 0x28f08; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x0000000000025449: lea rax, [rip + 0x80510]; movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000029a2b: lea rax, [rip + 0x8894b]; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029a00: lea rax, [rip + 0x88976]; ret; 
0x0000000000028f44: lea rax, [rip + 0x89118]; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028eb3: lea rax, [rip + 0x891af]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000029324: lea rax, [rip + 0x8a875]; ret; 
0x000000000001db34: lea rax, [rip + 0x96205]; ret; 
0x000000000001db24: lea rax, [rip + 0x9620d]; ret; 
0x000000000001dae4: lea rax, [rip + 0x96245]; ret; 
0x000000000006c3e0: lea rax, [rip + 0xf012]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000001ee3a: lea rax, [rip - 0x71]; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000000684b1: lea rax, [rsi + 1]; mov qword ptr [rdi + 8], rax; movzx eax, byte ptr [rsi]; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000041484: lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b53: lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x000000000002b4f0: lea rbp, [rbx + 0x1000]; mov eax, 0xc; mov rdi, rbp; syscall; 
0x000000000002b489: lea rbp, [rbx + 0x2000]; mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x00000000000619fc: lea rcx, [rax + 0x10]; mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000005e6e7: lea rcx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000001f264: lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x0000000000060a7e: lea rcx, [rdx + 1]; mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x0000000000060bf0: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060bac: lea rcx, [rdx + 1]; mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000041ad2: lea rcx, [rsp + 0x38]; call rax; 
0x00000000000501e0: lea rdi, [r8 + 0x24]; mov eax, 0x50; syscall; 
0x0000000000050208: lea rdi, [r8 + 0x24]; mov rax, r13; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000006e773: lea rdi, [r9 + 0x88]; syscall; 
0x000000000006e809: lea rdi, [rdx + 4]; mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000007a1d4: lea rdi, [rip + 0x383e3]; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x0000000000070364: lea rdi, [rip + 0x46b15]; mov eax, 0xffffffff; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x000000000006fc00: lea rdi, [rip + 0x473dd]; call 0x6b570; xor eax, eax; pop rbp; ret; 
0x000000000006d23e: lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1ce: lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060b03: lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f745: lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000004f378: lea rdi, [rip + 0x65001]; call 0x7b25a; lea rax, [rip + 0x67c8d]; pop rbp; ret; 
0x000000000004f415: lea rdi, [rip + 0x67b38]; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000004f306: lea rdi, [rip + 0x67caf]; call 0x6b570; mov rax, r12; pop r12; ret; 
0x0000000000022e1f: lea rdi, [rip + 0x8a2ca]; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x000000000001ed0c: lea rdi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000001eab9: lea rdi, [rip + 0x98490]; syscall; 
0x0000000000015a6a: lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x00000000000745cf: lea rdi, [rip - 0x1d6]; call 0x7b396; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x0000000000060cf9: lea rdi, [rsp + 0xc]; call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x0000000000045ad0: lea rdx, [r14 + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x000000000005d5ca: lea rdx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f814: lea rdx, [rax + 1]; mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e0: lea rdx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000002a24b: lea rdx, [rip + 0x87e4c]; test rax, rax; cmove rax, rdx; ret; 
0x0000000000022222: lea rdx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000006ec66: lea rdx, [rsp + 0x10]; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000006d880: lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000073a20: lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000042137: lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000001f976: lea rdx, [rsp + 8]; mov esi, 0x10; mov rax, r8; syscall; 
0x000000000006d530: lea rsi, [rbx + 0x18]; mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000005abcd: lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abcd: lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005abad: lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abad: lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000004ef78: lea rsi, [rip + 0x65407]; call 0x4ee80; add rsp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef48: lea rsi, [rip + 0x65437]; call 0x4ee80; add rsp, 8; shr rax, 0x11; ret; 
0x000000000007b2a3: lea rsi, [rsi + rdx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000073a14: lea rsi, [rsp + 0x10]; mov dword ptr [rsp + 0x18], edx; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000043ce0: lea rsi, [rsp + 0x80]; mov eax, 0xf4; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x000000000006f536: lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x00000000000745f4: lea rsi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x000000000007446e: lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000005ce45: lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c930: lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000075d6c: lea rsi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x0000000000044a2f: lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000005e3c5: lea rsi, [rsp + 8]; call rcx; 
0x000000000001f56e: lea rsi, [rsp + 8]; mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000007461f: lea rsi, [rsp + 8]; movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000748f3: lea rsp, [rbp - 0x10]; mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x0000000000078974: lea rsp, [rbp - 0x18]; pop r12; pop r13; pop r14; pop rbp; ret; 
0x0000000000042363: leave; add dword ptr [rax], eax; add byte ptr [rax + 0x29], cl; ret 0x894c; 
0x000000000007b088: leave; add rsp, 0x10; ret; 
0x0000000000018ee3: leave; add rsp, 0x20; movapd xmm0, xmm2; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000003ae59: leave; addsd xmm1, xmm2; movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000004c4ba: leave; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x0000000000067402: leave; cmove r8, rax; mov rax, r8; ret; 
0x000000000006734a: leave; cmove r8d, esi; mov eax, r8d; ret; 
0x00000000000704b2: leave; cmovne eax, edx; ret; 
0x0000000000033267: leave; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000031090: leave; divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003114f: leave; divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000007b151: leave; faddp st(1); add rsp, 0x30; ret; 
0x0000000000030a21: leave; faddp st(1); fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x000000000003240d: leave; faddp st(1); fmul dword ptr [rip + 0x7e746]; add rsp, 0x18; ret; 
0x000000000002e8c1: leave; faddp st(1); ret; 
0x0000000000016a0a: leave; fchs; add rsp, 0x38; fxch st(1); ret; 
0x000000000003eeb7: leave; fld xword ptr [rsp]; add rsp, 0x28; fmulp st(1); ret; 
0x000000000007af94: leave; fpatan; ret; 
0x000000000007af8e: leave; fsqrt; fabs; fxch st(1); fpatan; ret; 
0x000000000007afa5: leave; fsqrt; fpatan; ret; 
0x0000000000034ba5: leave; fstp st(1); add rsp, 0x48; ret; 
0x000000000003a8f8: leave; fstp xword ptr [rdi]; ret; 
0x0000000000034004: leave; je 0x3400b; movapd xmm0, xmm1; ret; 
0x000000000005e3bf: leave; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x0000000000068a22: leave; jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x0000000000076218: leave; jne 0x761f0; ret; 
0x000000000003cdf2: leave; jns 0x3cdb0; fchs; ret; 
0x000000000003cdad: leave; js 0x3cdf5; ret; 
0x000000000006f07a: leave; js 0x6f080; xor eax, eax; ret; 
0x000000000003a808: leave; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x000000000002401f: leave; mov eax, 0x113; syscall; 
0x000000000002334f: leave; mov eax, 0x146; syscall; 
0x000000000004c47a: leave; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f6: leave; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d5: leave; mov eax, 0x31; syscall; 
0x0000000000048d76: leave; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e63: leave; mov eax, 0x33; syscall; 
0x00000000000479d3: leave; mov eax, 0x34; syscall; 
0x000000000004c3c9: leave; mov eax, 0x36; syscall; 
0x0000000000047e96: leave; mov eax, 0x37; syscall; 
0x000000000007b332: leave; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x0000000000044a29: leave; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000001f942: leave; mov rax, r8; mov rdx, r9; syscall; 
0x0000000000017b89: leave; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000003ba0d: leave; movaps xmm0, xmm1; ret; 
0x0000000000034550: leave; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005e183: leave; nop dword ptr [rax]; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000001ca31: leave; or byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000003f3d7: leave; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b7: leave; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000001699c: leave; ret; 
0x0000000000048fa0: lmsw word ptr [rbp + 0x64]; mov eax, 2; ret; 
0x000000000003d4b4: lock add byte ptr [rax], al; add bh, dh; ret 0; 
0x00000000000766d0: lock add byte ptr [rax], al; add byte ptr [rcx], dh; ret; 
0x000000000005bad0: lock add byte ptr [rax], al; cmp eax, 0xa000; je 0x5bb70; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bbb8: lock add byte ptr [rax], al; cmp eax, 0xa000; je 0x5bbce; mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000006c3e4: lock add byte ptr [rax], al; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000006e3cd: lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000006dd0e: lock cmpxchg dword ptr [rdi + 0x38], edx; cmp eax, 2; jne 0x6dd20; xor eax, eax; ret; 
0x000000000006e8f0: lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006ba01: lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006efe4: lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x000000000006f01b: lock cmpxchg dword ptr [rdi], edx; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x000000000006f64b: lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000006f628: lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x000000000006b875: lock dec dword ptr [r8]; pop rbx; pop rbp; pop r12; ret; 
0x00000000000343bb: lock dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000006fcb4: lock dec dword ptr [rdi]; ret; 
0x000000000006c818: lock inc dword ptr [r8 + 8]; mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6e8: lock inc dword ptr [r8 + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c75b: lock inc dword ptr [rbx + 8]; mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000070354: lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000002acc7: lock or dword ptr [rbx + 0x1c], esi; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x0000000000073cac: lock or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000006e622: lock or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006f658: lock or dword ptr [rsp], 0; ret; 
0x000000000001686c: lock or word ptr [rax], ax; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000070370: lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x0000000000050b12: lodsb al, byte ptr [rsi]; and al, 0x70; add al, byte ptr [rax]; add al, ch; ret; 
0x000000000004ea32: lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add al, ch; ret; 
0x0000000000033edd: lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, edi; ret 0xf1df; 
0x000000000003bf29: lodsb al, byte ptr [rsi]; and al, 0x80; add byte ptr [rax], al; add dh, bl; ret; 
0x000000000007423b: lodsb al, byte ptr [rsi]; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000004519c: lodsb al, byte ptr [rsi]; movsxd rdi, r14d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000001f7ca: lodsb al, byte ptr [rsi]; ret 0x108; 
0x00000000000562ba: lodsd eax, dword ptr [rsi]; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x0000000000060bf7: lodsd eax, dword ptr [rsi]; add eax, 0x3a884000; ret; 
0x000000000006ef22: lodsd eax, dword ptr [rsi]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002430f: lodsd eax, dword ptr [rsi]; fdivr st(7); jmp qword ptr [rsi + 0x2e]; 
0x0000000000073c6f: lodsd eax, dword ptr [rsi]; mov dl, 0xfa; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d56b: lodsd eax, dword ptr [rsi]; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000003cc59: lodsd eax, dword ptr [rsi]; nop word ptr [rax + rax]; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000004baff: lodsd eax, dword ptr [rsi]; ret; 
0x0000000000016d33: loope 0x16d0e; ret 0xc2d8; 
0x0000000000018e2c: loope 0x18e3d; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000021107: loope 0x210e7; ret 0x8348; 
0x0000000000023d03: loope 0x23d03; mov esi, 0x28121969; syscall; 
0x000000000002cf23: loope 0x2cf03; ret 0xc1de; 
0x000000000002e5d0: loope 0x2e5ab; ret 0xe1d8; 
0x0000000000032630: loope 0x32610; ret 0xe1de; 
0x00000000000337da: loope 0x33824; add esp, 8; ret; 
0x0000000000033c2e: loope 0x33c0e; ret 0xeed9; 
0x00000000000366d9: loope 0x366cd; subps xmm0, xmm4; mulsd xmm0, qword ptr [rip + 0x7797a]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000036f7d: loope 0x36f72; subps xmm0, xmm4; mulss xmm0, dword ptr [rip + 0x79dfe]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x00000000000390d6: loope 0x39119; pop rbp; ret; 
0x000000000003e17b: loope 0x3e1c5; mov eax, dword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e767: loope 0x3e7cf; test ebx, ebx; js 0x3e794; add rsp, 0x10; pop rbx; ret; 
0x000000000003f46b: loope 0x3f48d; or rdx, rcx; mov rax, r8; ret; 
0x0000000000041295: loope 0x41294; inc dword ptr [rbx - 0x298ad9c8]; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x00000000000488d2: loope 0x4889a; add al, 0x10; cmp cl, byte ptr [rax + 0x63]; ret 0x518d; 
0x0000000000059d0c: loope 0x59d6b; mov rax, -0x26; pop r12; pop r13; ret; 
0x000000000005e6ff: loope 0x5e700; jmp qword ptr [rsi + 0x2e]; 
0x0000000000070d8b: loope 0x70d87; jmp qword ptr [rsi - 0x70]; 
0x0000000000073ced: loope 0x73cef; add byte ptr [rax], al; syscall; 
0x000000000007af8a: loope 0x7af64; ret 0xc9de; 
0x000000000007af92: loope 0x7af6d; leave; fpatan; ret; 
0x000000000007afa1: loope 0x7af7b; ret 0xc9de; 
0x0000000000034011: maxps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034071: maxps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034010: maxsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034070: maxss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034161: minps xmm0, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000341c5: minps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000034160: minsd xmm0, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000341c4: minss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000060719: mov ah, 0x18; mov eax, 3; syscall; 
0x0000000000043ce2: mov ah, 0x24; add byte ptr [rax], 0; add byte ptr [rax + 0xf4], bh; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x0000000000033d43: mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x0000000000033d3c: mov ah, 0x24; mov eax, 0xff000000; mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x0000000000022dbc: mov ah, 0x3f; or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000000348f8: mov ah, 0xb2; add byte ptr [rax], al; movsd xmm7, qword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000043a57: mov ah, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x0000000000028f9f: mov ah, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000006bb1a: mov ah, 4; add byte ptr [rax - 0x77], cl; ret; 
0x000000000003ab45: mov ah, byte ptr [rsi + 0x2e]; nop dword ptr [rax + rax]; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x000000000002397b: mov al, 0; add byte ptr [rax], al; syscall; 
0x000000000007b3c9: mov al, 0x3c; syscall; 
0x000000000007b3c9: mov al, 0x3c; syscall; hlt; ret; 
0x0000000000073e1e: mov al, 0xfa; jmp qword ptr [rsi + 0x2e]; 
0x000000000002a321: mov al, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000002a30b: mov al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000022e28: mov al, 3; add byte ptr [rax - 0x77], cl; add eax, 0x93f46; add rsp, 8; ret; 
0x00000000000322ca: mov al, 7; add al, bl; ret 0xcad8; 
0x0000000000035d45: mov al, 7; add bl, dh; subps xmm0, xmmword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000032306: mov al, 7; add dh, bl; ret 0xf1de; 
0x000000000005c08c: mov al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000005fd61: mov bh, 0; add byte ptr [rax - 0x73], cl; add eax, 0x570dd; add rsp, 8; ret; 
0x000000000002abcf: mov bh, 0x3c; jno 0x2ab56; ret 0xf01; 
0x000000000002c577: mov bh, 0x3c; jno 0x2c4fe; ret 0xf01; 
0x000000000002e705: mov bh, 0x44; and al, 0x10; shr ax, 0xf; movzx eax, ax; ret; 
0x00000000000760b2: mov bh, 0x47; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000077041: mov bh, 0x84; and al, 0x86; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000001fa09: mov bh, 0xbe; add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x0000000000021abe: mov bh, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000002e70e: mov bh, 0xc0; ret; 
0x000000000004863e: mov bh, 0xc7; cmp edx, 0xbf; movzx edi, dil; cmova eax, edi; ret; 
0x00000000000509e9: mov bh, 0xe8; add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rdi + 0xf8], edi; ret; 
0x0000000000061c88: mov bh, 0xe8; xchg eax, edx; sar bl, cl; jmp qword ptr [rsi - 0x70]; 
0x000000000004def5: mov bh, 0xf2; add byte ptr [rax], al; mov qword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x000000000007372b: mov bh, 0xfa; jmp qword ptr [rsi - 0x70]; 
0x0000000000074537: mov bh, 1; add byte ptr [rax], al; mov rdi, r13; mov rdx, r14; syscall; 
0x0000000000061a3f: mov bh, 1; mov qword ptr [rdi], rax; ret; 
0x0000000000025451: mov bh, 4; push rax; ret; 
0x000000000004a7d5: mov bh, 7; rol ax, 8; movzx eax, ax; ret; 
0x0000000000023cb2: mov bl, 0; add byte ptr [rax], al; syscall; 
0x000000000005ccad: mov bl, 0xe8; insd dword ptr [rdi], dx; and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x000000000007418c: mov bl, 0xfa; call qword ptr [rax - 0x5e1f00d]; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x0000000000023b83: mov bl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000003221b: mov bl, 7; add al, bl; ret 0xcad8; 
0x0000000000032257: mov bl, 7; add dh, bl; ret 0xc9d9; 
0x0000000000021a9c: mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x00000000000684bc: mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000069a72: mov byte ptr [r12 + rbx], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075bca: mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000021a85: mov byte ptr [r8 + r9], cl; mov ecx, esi; mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x0000000000021aa0: mov byte ptr [r8 + rax], 0; ret; 
0x0000000000070ba1: mov byte ptr [r9], 0; ret; 
0x000000000006c40d: mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c550: mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000043db4: mov byte ptr [rax + 0x75], 0x28; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000075bcb: mov byte ptr [rax + 0xaa], 1; ret; 
0x0000000000021aa1: mov byte ptr [rax + rax], 0; ret; 
0x0000000000021a86: mov byte ptr [rax + rcx], cl; mov ecx, esi; mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x000000000006a7f0: mov byte ptr [rax - 0x7c], 0xf7; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x00000000000697dc: mov byte ptr [rax], 0; call 0x69800; add rax, rbx; pop rbx; ret; 
0x0000000000022e88: mov byte ptr [rax], 0; mov r8, qword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x000000000006998f: mov byte ptr [rax], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000001f9d6: mov byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x68; ret; 
0x00000000000501bb: mov byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x0000000000075bc2: mov byte ptr [rax], al; add byte ptr [rax], al; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000005c174: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000043cf1: mov byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000000690ec: mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x0000000000061500: mov byte ptr [rbp - 0x47348740], 0x57; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x0000000000067347: mov byte ptr [rbp - 0x7b], 0xc9; cmove r8d, esi; mov eax, r8d; ret; 
0x00000000000607b0: mov byte ptr [rbx + 0x4a000000], cl; movsxd rdi, dword ptr [rsp + rsi*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000038c7c: mov byte ptr [rbx + 0xff30007], al; pop rcx; ret; 
0x0000000000047178: mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x00000000000684bd: mov byte ptr [rbx], al; mov eax, 1; ret; 
0x000000000002ef6a: mov byte ptr [rcx + 1], bl; add byte ptr [rax], al; ret; 
0x000000000005e123: mov byte ptr [rcx - 0x77], 0xc5; mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000070ba2: mov byte ptr [rcx], 0; ret; 
0x00000000000690e6: mov byte ptr [rcx], 0x48; add eax, 1; mov byte ptr [rax], dl; test dl, dl; jne 0x690e0; ret; 
0x0000000000020623: mov byte ptr [rcx], 0x83; ret; 
0x000000000004bece: mov byte ptr [rcx], 0x89; ret 0xe883; 
0x00000000000486ba: mov byte ptr [rcx], al; add byte ptr [rax - 0x73], cl; add eax, 0x6e55c; add rsp, 0x18; ret; 
0x000000000007a54e: mov byte ptr [rdi + rcx + 0x2e], 5; cmp dword ptr [rcx + 3], 0x540f4400; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x0000000000068944: mov byte ptr [rdi - 1], al; cmp eax, r9d; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689f8: mov byte ptr [rdi - 1], al; cmp eax, r9d; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x0000000000044c54: mov byte ptr [rdi], dh; mov eax, 1; add rsp, 8; ret; 
0x0000000000044c39: mov byte ptr [rdi], dh; mov eax, 1; ret; 
0x0000000000044c53: mov byte ptr [rdi], sil; mov eax, 1; add rsp, 8; ret; 
0x0000000000044c38: mov byte ptr [rdi], sil; mov eax, 1; ret; 
0x000000000006f283: mov byte ptr [rdx + 0x40], bh; xor eax, eax; ret; 
0x000000000006f282: mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000006f2b3: mov byte ptr [rdx + 0x41], bh; xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x000000000006f2b2: mov byte ptr [rdx + 0x41], dil; xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x0000000000022218: mov byte ptr [rdx + 0x42], al; mov rax, qword ptr [rdx + 0xb8]; lea rdx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000021b7b: mov byte ptr [rdx - 1], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000003fc6d: mov byte ptr [rdx - 1], cl; shr eax, 6; jne 0x3fc60; mov byte ptr [rdx], 0; lea rax, [rip + 0x7739f]; ret; 
0x000000000003fc75: mov byte ptr [rdx], 0; lea rax, [rip + 0x7739f]; ret; 
0x0000000000021a9d: mov byte ptr [rdx], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x00000000000281fe: mov byte ptr [rdx], 0xbb; ret 0xffff; 
0x0000000000043d0f: mov byte ptr [rdx], al; add byte ptr [rcx + 0x63], cl; std; mov eax, 3; syscall; 
0x0000000000060a86: mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000005e6f0: mov byte ptr [rdx], bh; ret; 
0x000000000005e6ef: mov byte ptr [rdx], dil; ret; 
0x0000000000043d0e: mov byte ptr [rdx], r8b; add byte ptr [rcx + 0x63], cl; std; mov eax, 3; syscall; 
0x000000000001ed2d: mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x0000000000048cb9: mov byte ptr [rip - 0x7c000002], ah; ret; 
0x000000000006a423: mov byte ptr [rsi - 1], al; cmp rdi, rdx; jne 0x6a410; ret; 
0x000000000006a41c: mov byte ptr [rsi - 2], al; movzx eax, byte ptr [rdi - 2]; mov byte ptr [rsi - 1], al; cmp rdi, rdx; jne 0x6a410; ret; 
0x000000000007b172: mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x0000000000069a73: mov byte ptr [rsp + rbx], 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000000340e4: mov ch, 0xdb; insb byte ptr [rdi], dx; and al, 0x10; pop rbx; ret; 
0x000000000007393b: mov ch, 0xfa; jmp qword ptr [rsi - 0x70]; 
0x0000000000060868: mov ch, al; mov dl, 0xe6; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000046703: mov ch, bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000349f4: mov cl, 0; add bl, dh; movups xmm2, xmmword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x000000000006f01d: mov cl, 0x17; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x000000000006f64d: mov cl, 0x17; ret; 
0x000000000006f62a: mov cl, 0x17; test eax, eax; jne 0x6f620; ret; 
0x00000000000252c0: mov cl, 0x35; retf 0x91a; add byte ptr [rax + 0x39], cl; ret 0xe575; 
0x000000000005055b: mov cl, 0x4a; cld; dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rcx*2 + 0x48], 0x89; ret; 
0x000000000002b14e: mov cl, 0x4d; sbb al, 0x39; ret 0xc375; 
0x000000000006ba03: mov cl, 0x57; add al, 0xc1; call 0x1e73d10; ret; 
0x000000000006dd10: mov cl, 0x57; cmp byte ptr [rbx + 0x87502f8], al; xor eax, eax; ret; 
0x0000000000039d96: mov cl, 0x66; pxor mm1, mm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x00000000000501b3: mov cl, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov ecx, 0x88; call rax; 
0x000000000005b7de: mov cl, 0xe8; cmp al, 0x37; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000006efe6: mov cl, 0xf; cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x0000000000043d6f: mov cl, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x000000000003257f: mov cl, 7; add dh, bl; ret; 
0x00000000000638b8: mov cl, byte ptr [rax + 1]; sar byte ptr [rsi], 1; jmp rax; 
0x0000000000039be7: mov cl, byte ptr [rcx + rax - 0x7af10000]; xchg byte ptr [rcx], al; add byte ptr [rax], al; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000006bfbd: mov cl, byte ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000005d5d3: mov dh, 0; ret; 
0x00000000000605a6: mov dh, 0x3b; add eax, 0x415d4100; pop rsi; ret; 
0x000000000006f27d: mov dh, 0x42; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x0000000000025235: mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000000432f6: mov dh, 0x44; adc eax, 0x75c08400; ret 0x58e9; 
0x000000000006736a: mov dh, 0x45; xor eax, eax; mov eax, r8d; ret; 
0x000000000001afc1: mov dh, 0x46; add dword ptr [rdi], ecx; mov dh, 0x4e; add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x000000000006a420: mov dh, 0x47; dec byte ptr [rax + 0x3948ff46]; xlatb; jne 0x6a410; ret; 
0x0000000000045df3: mov dh, 0x48; add cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000069579: mov dh, 0x4a; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000001afc5: mov dh, 0x4e; add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x000000000006c535: mov dh, 0x50; test dl, dl; je 0x6c540; ret; 
0x000000000006c406: mov dh, 0x50; test r10b, dl; jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c549: mov dh, 0x50; test r10b, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x000000000001ad92: mov dh, 0x54; adc eax, 0x89138800; ret 0xeac1; 
0x0000000000077d30: mov dh, 0x55; add byte ptr [rcx - 0x77], cl; ret 0xf631; 
0x000000000001bc74: mov dh, 0x7a; add dword ptr [rax - 0x7d], ecx; rol dword ptr [rax + rcx*2], 0x83; ret 0xc104; 
0x000000000006ba24: mov dh, 0xc0; add eax, 1; add rsp, 8; ret; 
0x00000000000701d5: mov dh, 0xc0; add eax, 2; add rsp, 8; ret; 
0x000000000001e42e: mov dh, 0xc0; add rax, rax; ret; 
0x0000000000024687: mov dh, 0xc0; cmova eax, edx; ret; 
0x000000000006b908: mov dh, 0xc0; lea eax, [rax + rax + 2]; add rsp, 8; ret; 
0x0000000000048fdf: mov dh, 0xc0; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000002348e: mov dh, 0xc0; neg eax; ret; 
0x000000000001dbd3: mov dh, 0xc0; ret; 
0x000000000006a3d0: mov dh, 0xc0; sub eax, edx; ret; 
0x0000000000068b27: mov dh, 0xc2; sub eax, ecx; ret; 
0x0000000000069a0f: mov dh, 0xc2; sub eax, esi; ret; 
0x0000000000043f1c: mov dh, 0xc7; ret; 
0x0000000000075aba: mov dh, 0xc; adc ecx, dword ptr [rax - 0x7d]; ret 0x4501; 
0x000000000006a36f: mov dh, 0xd0; movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x0000000000029375: mov dh, 0xd2; and eax, edx; ret; 
0x000000000006a3cd: mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x000000000004219f: mov dh, 0xe8; jnp 0x42170; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000006a372: mov dh, 0xf1; mov eax, edx; sub eax, esi; ret; 
0x00000000000599a4: mov dh, 0xfb; jmp qword ptr [rsi + 0xf]; 
0x0000000000043831: mov dh, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x0000000000048648: mov dh, 0xff; cmova eax, edi; ret; 
0x0000000000045057: mov dh, 0xff; cmp eax, 0x80; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x0000000000061ac3: mov dh, 1; mov qword ptr [rdi], rax; ret; 
0x000000000004593e: mov dh, 2; test al, al; jne 0x45920; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000001a3ea: mov dh, 4; add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x0000000000069452: mov dh, 4; and al, 0x84; sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x000000000002b269: mov dh, 5; adc al, 0x96; or byte ptr [rax], al; test al, al; jne 0x2b278; ret; 
0x000000000002c3c1: mov dh, 5; mov esp, 0x83000884; ret; 
0x00000000000684ba: mov dh, 6; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000068ada: mov dh, 8; cmp ecx, r10d; jne 0x68ad0; ret; 
0x000000000002f26a: mov dl, 0; add bl, dh; addps xmm0, xmmword ptr [rip + 0x817cf]; add rsp, 0x18; ret; 
0x00000000000348f9: mov dl, 0; add dl, dh; movups xmm7, xmmword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000007592a: mov dl, 0x2e; add byte ptr [rax], al; mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x0000000000060bea: mov dl, 0x36; add eax, 0x48107400; lea ecx, [rdx + 1]; mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000005f7da: mov dl, 0x49; add eax, 0x48107400; lea edx, [rax + 1]; mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000004706a: mov dl, 0x7e; std; jmp qword ptr [rsi - 0x70]; 
0x000000000006086a: mov dl, 0xe6; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000039f76: mov dl, 0xf; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000073c70: mov dl, 0xfa; jmp qword ptr [rsi + 0x2e]; 
0x0000000000044254: mov dl, 0xfd; dec dword ptr [rcx - 0x39]; ret; 
0x0000000000023c92: mov dl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000004e0fb: mov dl, 1; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000001fcaa: mov dl, 5; add byte ptr [rdi + 0x3f], bh; call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x000000000003235b: mov dl, 7; add al, bl; ret 0xcad8; 
0x0000000000032483: mov dl, 7; add dh, bl; rcr ebx, 0x2d; mov dl, 7; add al, bl; ret 0xcad8; 
0x0000000000032383: mov dl, 7; add dh, bl; ret 0xc9d9; 
0x000000000007896e: mov ds, edi; add eax, dword ptr [rax]; call rax; 
0x000000000006d08e: mov ds, word ptr [rsi]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000070714: mov dword ptr [r10 + 4], ecx; pop rbx; pop rbp; ret; 
0x0000000000019d88: mov dword ptr [r10 - 4], edx; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x0000000000019d84: mov dword ptr [r10 - 8], eax; mov dword ptr [r10 - 4], edx; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x000000000007070f: mov dword ptr [r10], r11d; sub ecx, edx; mov dword ptr [r10 + 4], ecx; pop rbx; pop rbp; ret; 
0x000000000006e61e: mov dword ptr [r14 + 8], eax; lock or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006f2af: mov dword ptr [r14], eax; mov byte ptr [rdx + 0x41], dil; xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x000000000001e751: mov dword ptr [r8 + 0xc], eax; mov rax, qword ptr [r9 + 8]; mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x000000000006ae83: mov dword ptr [r8 + rax*4], ecx; add rax, 1; cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x000000000006ae1b: mov dword ptr [r8 + rax*4], edx; add rax, 1; cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006ae5b: mov dword ptr [r8 + rax*4], edx; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x000000000006aeb0: mov dword ptr [r8 + rax*4], esi; add rax, 1; cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006a583: mov dword ptr [r8 + rax], edx; add rax, 4; test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000005285d: mov dword ptr [r8], 0xffffffff; ret; 
0x000000000004f0a0: mov dword ptr [r8], edi; ret; 
0x000000000005a78b: mov dword ptr [rax + 0x18], edx; mov eax, edx; sub eax, r8d; ret; 
0x000000000005e6ec: mov dword ptr [rax + 0x28], ecx; mov byte ptr [rdx], dil; ret; 
0x000000000006d5a6: mov dword ptr [rax + 0x78], edi; ret; 
0x000000000006d5c2: mov dword ptr [rax + 0x78], edx; ret; 
0x0000000000075bc0: mov dword ptr [rax + 0x88], edi; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000001e752: mov dword ptr [rax + 0xc], eax; mov rax, qword ptr [r9 + 8]; mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x000000000005f0de: mov dword ptr [rax + 0xd0], edi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000002aecc: mov dword ptr [rax + 8], ebx; mov rax, qword ptr [rbx + 8]; mov qword ptr [rax], rbx; mov rax, r10; pop rbx; ret; 
0x000000000001e711: mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x000000000005a34f: mov dword ptr [rax + 8], edi; ret; 
0x000000000006ae84: mov dword ptr [rax + rax*4], ecx; add rax, 1; cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x000000000006ae1c: mov dword ptr [rax + rax*4], edx; add rax, 1; cmp rax, rcx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006ae5c: mov dword ptr [rax + rax*4], edx; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x000000000006aeb1: mov dword ptr [rax + rax*4], esi; add rax, 1; cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006a584: mov dword ptr [rax + rax], edx; add rax, 4; test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000001f269: mov dword ptr [rax + rdx*8], ebx; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000004e3bd: mov dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000004d2b2: mov dword ptr [rax - 0x7d], ecx; ret 0x8d01; 
0x0000000000043db1: mov dword ptr [rax - 0xa], 0x287540c6; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000004f083: mov dword ptr [rax - 4], edx; cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x00000000000436d5: mov dword ptr [rax], 0x16; add rsp, 0x28; mov rax, -1; pop rbx; pop r12; ret; 
0x000000000002a2e5: mov dword ptr [rax], 0x16; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000015c79: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000019a59: mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x000000000005e505: mov dword ptr [rax], 0x16; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000019a15: mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x00000000000439b3: mov dword ptr [rax], 0x16; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000006fc4c: mov dword ptr [rax], 0x4b; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000007226d: mov dword ptr [rax], 0x4b; xor eax, eax; pop rbx; ret; 
0x000000000002443c: mov dword ptr [rax], 0x50f0000; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000043fe7: mov dword ptr [rax], 0x54; mov rax, -1; add rsp, 8; ret; 
0x000000000004a9e7: mov dword ptr [rax], 0x5a; mov eax, r12d; pop r12; ret; 
0x000000000002308d: mov dword ptr [rax], 0x5f; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000006fdfd: mov dword ptr [rax], 0xb; mov eax, 0xffffffff; add rsp, 8; ret; 
0x00000000000420a2: mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000002cda6: mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x00000000000335cd: mov dword ptr [rax], 0xff30000; pop rax; sal ebx, cl; subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000005285e: mov dword ptr [rax], 0xffffffff; ret; 
0x0000000000040559: mov dword ptr [rax], 2; xor eax, eax; add rsp, 8; ret; 
0x0000000000066be1: mov dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0x118; ret; 
0x00000000000301ab: mov dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000005c059: mov dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r8; syscall; 
0x000000000001e75a: mov dword ptr [rax], eax; mov rax, r9; pop rbx; ret; 
0x000000000002acc5: mov dword ptr [rax], ebx; lock or dword ptr [rbx + 0x1c], esi; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x0000000000043f06: mov dword ptr [rax], ebx; mov eax, r8d; pop rbx; ret; 
0x000000000002aed4: mov dword ptr [rax], ebx; mov rax, r10; pop rbx; ret; 
0x000000000004205d: mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x0000000000029a2f: mov dword ptr [rax], ecx; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000070b95: mov dword ptr [rax], ecx; cmp r10d, 5; jle 0x70bb4; add r9, 6; mov byte ptr [r9], 0; ret; 
0x0000000000070bb2: mov dword ptr [rax], edi; add r9, rax; mov byte ptr [r9], 0; ret; 
0x0000000000021bed: mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x000000000004f0a1: mov dword ptr [rax], edi; ret; 
0x000000000005a38a: mov dword ptr [rax], edx; ret; 
0x000000000005fda0: mov dword ptr [rax], esp; call 0x5fd70; mov rax, r12; pop r12; ret; 
0x00000000000527ec: mov dword ptr [rbp + 8], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000071e86: mov dword ptr [rbp + 8], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000042fdc: mov dword ptr [rbp], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006a2bd: mov dword ptr [rbp], 0; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000052af3: mov dword ptr [rbp], eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000070433: mov dword ptr [rbp], eax; mov eax, 3; syscall; 
0x0000000000046a51: mov dword ptr [rbp], ebx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006a29c: mov dword ptr [rbp], edx; pop r12; pop r13; ret; 
0x0000000000070a2a: mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x0000000000070b26: mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x0000000000023e10: mov dword ptr [rbx + 0x10], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001eae9: mov dword ptr [rbx + 0x10], ebx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000005cda4: mov dword ptr [rbx + 0x10], edx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000001eaf3: mov dword ptr [rbx + 0x18], ebx; pop rbx; ret; 
0x000000000001eaed: mov dword ptr [rbx + 0x20], eax; xor eax, eax; mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000005edcb: mov dword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000007225a: mov dword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x0000000000072253: mov dword ptr [rbx + 0x30], eax; mov rax, rbx; mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x000000000005edc3: mov dword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000001eaad: mov dword ptr [rbx + 0x38], 2; mov eax, 0xda; lea rdi, [rip + 0x98490]; syscall; 
0x00000000000762f2: mov dword ptr [rbx + 0x70], eax; add rsp, 0x100; pop rbx; ret; 
0x000000000006d2cc: mov dword ptr [rbx + 0x78], eax; call rdx; 
0x0000000000070a1e: mov dword ptr [rbx + 4], ecx; cmp byte ptr [rax], 0x2f; je 0x70b1a; mov dword ptr [rbx + 0x10], 0x1c20; pop rbx; ret; 
0x000000000005ede8: mov dword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000050601: mov dword ptr [rbx + 8], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006bd24: mov dword ptr [rbx + 8], eax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x0000000000050666: mov dword ptr [rbx + 8], eax; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005cdab: mov dword ptr [rbx + 8], edx; pop rbx; ret; 
0x000000000005a0d4: mov dword ptr [rbx], 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a101: mov dword ptr [rbx], 0; pop rbx; ret; 
0x0000000000072a3c: mov dword ptr [rbx], eax; add rsp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005cdb3: mov dword ptr [rbx], eax; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000001fc90: mov dword ptr [rbx], eax; xor eax, eax; pop rbx; ret; 
0x000000000006fec9: mov dword ptr [rbx], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006ddf1: mov dword ptr [rbx], ebp; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000069b39: mov dword ptr [rbx], edx; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005a774: mov dword ptr [rcx + 0x18], edx; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000007656a: mov dword ptr [rcx + 0x58], edi; add rsp, 0x100; ret; 
0x000000000002a359: mov dword ptr [rcx + 0xa8], edi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000005f15b: mov dword ptr [rcx + 0xc0], edi; ret; 
0x000000000007097a: mov dword ptr [rcx - 0x77], ecx; adc dword ptr [rax - 0x7d], ecx; ret 0x8d01; 
0x0000000000068942: mov dword ptr [rcx], 0x44ff4788; cmp eax, ecx; jne 0x68930; mov rax, rdi; ret; 
0x00000000000689f6: mov dword ptr [rcx], 0x44ff4788; cmp eax, ecx; jne 0x689e8; mov rax, rdi; pop rbx; ret; 
0x0000000000059c6a: mov dword ptr [rcx], 0x75c7394c; xlatb; mov eax, edx; ret; 
0x00000000000672f2: mov dword ptr [rcx], 0x8907be0f; ret 0xe883; 
0x0000000000028e66: mov dword ptr [rcx], 0xc0310674; ret; 
0x000000000001e061: mov dword ptr [rcx], 0xe783c031; jg 0x1dfec; jmp qword ptr [rax]; 
0x000000000005d12f: mov dword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000006be20: mov dword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000006d5a2: mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006c7e2: mov dword ptr [rdi + 0x10], edx; test eax, eax; js 0x6c7f0; xor eax, eax; ret; 
0x00000000000684df: mov dword ptr [rdi + 0x10], esi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006bdf8: mov dword ptr [rdi + 0x10], esi; ret; 
0x000000000006b25c: mov dword ptr [rdi + 0x16], eax; ret; 
0x000000000006bd3e: mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd7e: mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000005cdfc: mov dword ptr [rdi + 0x20], eax; xor eax, eax; ret; 
0x000000000006bda4: mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x000000000006bd96: mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000005d127: mov dword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005cdf4: mov dword ptr [rdi + 0x28], eax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000060a83: mov dword ptr [rdi + 0x28], ecx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000007b219: mov dword ptr [rdi + 0x30], edx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000005d11f: mov dword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005cdf0: mov dword ptr [rdi + 0x38], eax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000007b221: mov dword ptr [rdi + 0x38], edx; xor eax, eax; ret; 
0x0000000000060f66: mov dword ptr [rdi + 0x60], 0; ret; 
0x0000000000060f30: mov dword ptr [rdi + 0x60], ecx; cmp edx, 1; je 0x60f40; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000005f1c6: mov dword ptr [rdi + 0x80], eax; ret; 
0x000000000005f193: mov dword ptr [rdi + 0x80], eax; xor eax, eax; ret; 
0x0000000000060f4c: mov dword ptr [rdi + 0x90], 0xa; ret; 
0x00000000000684e3: mov dword ptr [rdi + 0x98], ecx; ret; 
0x0000000000021ae7: mov dword ptr [rdi + 0xb8], edx; ret; 
0x0000000000052891: mov dword ptr [rdi + 0xc], eax; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000006f6b1: mov dword ptr [rdi + 4], 0; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000004eeb3: mov dword ptr [rdi + 4], edx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000050934: mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000005a359: mov dword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000005d137: mov dword ptr [rdi + 8], 0; ret; 
0x00000000000507c5: mov dword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000006b253: mov dword ptr [rdi + 8], eax; mov eax, 0x100; mov word ptr [rdi + 0x16], ax; ret; 
0x00000000000684b6: mov dword ptr [rdi + 8], eax; movzx eax, byte ptr [rsi]; mov byte ptr [r11], al; mov eax, 1; ret; 
0x000000000006ee75: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000005d5cf: mov dword ptr [rdi + 8], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000006be9f: mov dword ptr [rdi + 8], edx; ret; 
0x00000000000684db: mov dword ptr [rdi + 8], esi; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006b27a: mov dword ptr [rdi + 8], esi; ret; 
0x000000000006bd69: mov dword ptr [rdi + 8], esi; xor eax, eax; ret; 
0x000000000007b339: mov dword ptr [rdi + rdx - 0x27], eax; mov rax, rdi; ret; 
0x000000000007b334: mov dword ptr [rdi + rdx - 0x2f], eax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000007b32f: mov dword ptr [rdi + rdx - 0x37], eax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000007b32a: mov dword ptr [rdi + rdx - 0x3f], eax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x0000000000034760: mov dword ptr [rdi], 0; add rsp, 0x28; ret; 
0x0000000000034648: mov dword ptr [rdi], 0; ret; 
0x000000000005b1e5: mov dword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000068a52: mov dword ptr [rdi], 0x85480a74; sal byte ptr [rbp - 0x1b], cl; xor eax, eax; ret; 
0x000000000006c7f1: mov dword ptr [rdi], 0xffffffff; xor eax, eax; ret; 
0x0000000000070b1f: mov dword ptr [rdi], eax; call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x000000000006f656: mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x000000000005ce0b: mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x00000000000346a6: mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; ret; 
0x000000000003fb96: mov dword ptr [rdi], eax; ret; 
0x000000000004eeac: mov dword ptr [rdi], eax; shr rdx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000003a782: mov dword ptr [rdi], eax; subsd xmm0, xmm1; ret; 
0x000000000005b18b: mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000034740: mov dword ptr [rdi], ecx; mov word ptr [rsp + 0x18], ax; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000005a778: mov dword ptr [rdi], ecx; pop rbx; pop rbp; ret; 
0x000000000003a809: mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x000000000003a79e: mov dword ptr [rdi], edx; ret; 
0x000000000006bdf3: mov dword ptr [rdi], edx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000006b98c: mov dword ptr [rdi], esi; ret; 
0x0000000000050924: mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000001eefe: mov dword ptr [rdx + 0x28], eax; pop rbx; ret; 
0x000000000005fd9c: mov dword ptr [rdx + 0x68], esp; mov qword ptr [rax], r12; call 0x5fd70; mov rax, r12; pop r12; ret; 
0x000000000006c3e8: mov dword ptr [rdx + 0xa8], eax; ret; 
0x000000000005f0a2: mov dword ptr [rdx + 0xc0], eax; ret; 
0x000000000005f154: mov dword ptr [rdx + 0xd0], edi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005f08e: mov dword ptr [rdx + 0xd8], eax; ret; 
0x0000000000061a5f: mov dword ptr [rdx + 4], eax; fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x0000000000070715: mov dword ptr [rdx + 4], ecx; pop rbx; pop rbp; ret; 
0x0000000000061a19: mov dword ptr [rdx + 8], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000005a381: mov dword ptr [rdx + 8], eax; test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x0000000000061a01: mov dword ptr [rdx + 8], ecx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000002a914: mov dword ptr [rdx - 2], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000019d89: mov dword ptr [rdx - 4], edx; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x0000000000019d85: mov dword ptr [rdx - 8], eax; mov dword ptr [r10 - 4], edx; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x0000000000061aa4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000619e0: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061ae0: mov dword ptr [rdx], eax; movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061b00: mov dword ptr [rdx], eax; movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a84: mov dword ptr [rdx], eax; movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061ac0: mov dword ptr [rdx], eax; movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a3c: mov dword ptr [rdx], eax; movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000070710: mov dword ptr [rdx], ebx; sub ecx, edx; mov dword ptr [r10 + 4], ecx; pop rbx; pop rbp; ret; 
0x000000000006bc0d: mov dword ptr [rdx], ecx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000006f5a0: mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000004400b: mov dword ptr [rdx], esi; ret; 
0x00000000000787b7: mov dword ptr [rip + 0x3e707], 0; add rsp, 8; ret; 
0x00000000000762eb: mov dword ptr [rip + 0x40c1f], ebx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x0000000000075da5: mov dword ptr [rip + 0x4125d], 1; add rsp, 0xd8; ret; 
0x000000000006d1eb: mov dword ptr [rip + 0x49deb], eax; ret; 
0x000000000006a1f3: mov dword ptr [rip + 0x4cc5f], edx; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000060bf5: mov dword ptr [rip + 0x536ad], ecx; mov byte ptr [rdx], dil; ret; 
0x0000000000060bb1: mov dword ptr [rip + 0x536f1], ecx; mov byte ptr [rdx], dil; ret; 
0x000000000006059b: mov dword ptr [rip + 0x53b67], esi; pop r12; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x000000000006059a: mov dword ptr [rip + 0x53b67], r14d; pop r12; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x00000000000605a4: mov dword ptr [rip + 0x53bb6], ebp; pop r13; pop r14; ret; 
0x000000000005f819: mov dword ptr [rip + 0x54969], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e5: mov dword ptr [rip + 0x5499d], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000005a069: mov dword ptr [rip + 0x5cbdd], 0; add rsp, 8; ret; 
0x000000000004efcb: mov dword ptr [rip + 0x67e67], eax; shr rax, 0x21; ret; 
0x000000000004efa8: mov dword ptr [rip + 0x67e8a], eax; ret; 
0x000000000004df11: mov dword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004defa: mov dword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x000000000004d031: mov dword ptr [rip + 0x69dd5], 0; ret; 
0x000000000004d01a: mov dword ptr [rip + 0x69dec], 0; add rsp, 8; ret; 
0x000000000002b491: mov dword ptr [rip + 0x899c1], ebx; mov rdi, rbp; syscall; 
0x000000000002b24a: mov dword ptr [rip + 0x8bd28], 0; ret; 
0x0000000000022e2c: mov dword ptr [rip + 0x93f46], eax; add rsp, 8; ret; 
0x0000000000022dd1: mov dword ptr [rip + 0x93f9d], 0; ret; 
0x0000000000022dba: mov dword ptr [rip + 0x93fb4], 0; add rsp, 8; ret; 
0x000000000001f26d: mov dword ptr [rip + 0x97ac5], ecx; pop rbx; ret; 
0x000000000004279b: mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000005a7d8: mov dword ptr [rsi + 0x18], edx; sub eax, r8d; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005f0e5: mov dword ptr [rsi + 0xc0], edi; ret; 
0x000000000006e61f: mov dword ptr [rsi + 8], eax; lock or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000007620b: mov dword ptr [rsi + rax*8], edx; mov rcx, qword ptr [rdi + 0x10]; add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x000000000006bbe4: mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x000000000006f280: mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000006f2b0: mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x41], dil; xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x000000000006bc10: mov dword ptr [rsi], eax; mov eax, r8d; ret; 
0x000000000005d175: mov dword ptr [rsi], eax; mov rax, r8; ret; 
0x000000000006dd8b: mov dword ptr [rsi], eax; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000000507e7: mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000007b3b7: mov dword ptr [rsi], ecx; syscall; 
0x000000000005d1c5: mov dword ptr [rsi], edi; add byte ptr [rax], al; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005a344: mov dword ptr [rsi], edi; mov rax, qword ptr [rdi]; test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000004a7f9: mov dword ptr [rsi], edi; ret; 
0x0000000000067b10: mov dword ptr [rsp + 0x10], eax; call rax; 
0x000000000004148a: mov dword ptr [rsp + 0x10], eax; mov eax, 0x10; syscall; 
0x000000000005b5c4: mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x0000000000023b59: mov dword ptr [rsp + 0x10], eax; mov eax, 0x9d; syscall; 
0x0000000000017f88: mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000023753: mov dword ptr [rsp + 0x118], eax; mov eax, 0x144; syscall; 
0x00000000000162fd: mov dword ptr [rsp + 0x14], eax; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000016fb8: mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017f8c: mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000034743: mov dword ptr [rsp + 0x18], eax; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000016305: mov dword ptr [rsp + 0x18], eax; mov eax, 0x81; syscall; 
0x0000000000041257: mov dword ptr [rsp + 0x18], eax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005c377: mov dword ptr [rsp + 0x18], ecx; mov eax, 0x105; mov rsi, r9; syscall; 
0x0000000000073a19: mov dword ptr [rsp + 0x18], edx; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x00000000000502cf: mov dword ptr [rsp + 0x1c], eax; and eax, 0xfffffffe; mov rsi, r13; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000003a51c: mov dword ptr [rsp + 0x1c], eax; fild dword ptr [rsp + 0x1c]; pop rax; pop rdx; add rsp, 0x18; ret; 
0x0000000000050072: mov dword ptr [rsp + 0x1c], eax; test eax, eax; jne 0x50112; mov eax, 0x66; syscall; 
0x00000000000502a8: mov dword ptr [rsp + 0x1c], eax; test eax, eax; js 0x5010f; mov rax, r10; syscall; 
0x000000000005023d: mov dword ptr [rsp + 0x1c], eax; test eax, eax; js 0x50112; mov rax, r10; syscall; 
0x0000000000073b69: mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x000000000005afa8: mov dword ptr [rsp + 0x20], eax; mov eax, 0xe; syscall; 
0x0000000000023c56: mov dword ptr [rsp + 0x20], eax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000746b6: mov dword ptr [rsp + 0x28], eax; mov eax, 0x51; syscall; 
0x0000000000073aff: mov dword ptr [rsp + 0x28], eax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000004fcd3: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9ec: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074753: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov eax, 0x5d; syscall; 
0x0000000000015b59: mov dword ptr [rsp + 0x54], eax; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x0000000000015b62: mov dword ptr [rsp + 0x58], eax; mov eax, 0x81; syscall; 
0x000000000006db0f: mov dword ptr [rsp + 0x70], eax; mov eax, 0xe; syscall; 
0x0000000000043cee: mov dword ptr [rsp + 0x88], ebp; syscall; 
0x0000000000043ced: mov dword ptr [rsp + 0x88], r13d; syscall; 
0x00000000000703d1: mov dword ptr [rsp + 0x98], eax; mov eax, 2; syscall; 
0x0000000000074608: mov dword ptr [rsp + 0xc], 0xfffffff0; movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x000000000006f2c4: mov dword ptr [rsp + 0xc], eax; call 0x6f660; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000016cae: mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000006ebdf: mov dword ptr [rsp + 4], 0; mov esi, 6; syscall; 
0x0000000000016906: mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001683d: mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000018368: mov dword ptr [rsp + 4], eax; movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000074466: mov dword ptr [rsp + 4], eax; movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x000000000001f579: mov dword ptr [rsp + 8], 0x20; syscall; 
0x000000000001ecea: mov dword ptr [rsp + 8], 1; syscall; 
0x0000000000041480: mov dword ptr [rsp + 8], eax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b4f: mov dword ptr [rsp + 8], eax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000074415: mov dword ptr [rsp + 8], eax; mov eax, 0x6c; syscall; 
0x0000000000074b9a: mov dword ptr [rsp + 8], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000005059d: mov dword ptr [rsp + 8], ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000007b3f2: mov dword ptr [rsp + 8], ebx; syscall; 
0x000000000007b3f2: mov dword ptr [rsp + 8], ebx; syscall; ret; 
0x000000000003465d: mov dword ptr [rsp + 8], edi; call 0x345e0; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x00000000000346e5: mov dword ptr [rsp + 8], edi; call 0x34680; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x0000000000016caa: mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000044a2b: mov dword ptr [rsp + 8], esi; lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000003d255: mov dword ptr [rsp - 0x10], eax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000030c1a: mov dword ptr [rsp - 0x10], eax; fld xword ptr [rsp - 0x18]; ret; 
0x000000000001806f: mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000003cdcd: mov dword ptr [rsp - 0x20], edx; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000003cdc9: mov dword ptr [rsp - 0x28], eax; mov dword ptr [rsp - 0x20], edx; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x0000000000018073: mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x00000000000428c2: mov dword ptr [rsp], 8; syscall; 
0x00000000000446cc: mov dword ptr [rsp], ebp; mov rax, -1; pop rbx; pop rbp; pop r12; ret; 
0x00000000000447c1: mov dword ptr [rsp], ebp; pop rbx; mov rax, rdx; pop rbp; pop r12; ret; 
0x000000000002249f: mov dword ptr [rsp], ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000016903: mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x000000000001683a: mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000003a791: mov eax, 0; add byte ptr [rax], al; add byte ptr [rax + 0x48c22148], al; mov dword ptr [rdi], edx; ret; 
0x000000000003a745: mov eax, 0; add byte ptr [rax], al; add byte ptr [rax + 0x66c22148], al; movd mm0, rdx; ret; 
0x0000000000022c04: mov eax, 0x1000; ret; 
0x000000000006b256: mov eax, 0x100; mov word ptr [rdi + 0x16], ax; ret; 
0x000000000005bade: mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000005bf7d: mov eax, 0x102; syscall; 
0x000000000005c000: mov eax, 0x103; syscall; 
0x00000000000747e3: mov eax, 0x104; syscall; 
0x000000000005c37b: mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000005bcbb: mov eax, 0x106; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000005bd24: mov eax, 0x106; mov rsi, r9; syscall; 
0x000000000007566e: mov eax, 0x107; syscall; 
0x000000000007566e: mov eax, 0x107; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000750a1: mov eax, 0x108; syscall; 
0x0000000000074c44: mov eax, 0x109; syscall; 
0x000000000006e7cf: mov eax, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000005c529: mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b45e: mov eax, 0x10; mov esi, 0x5414; syscall; 
0x000000000006e048: mov eax, 0x10; ret; 
0x000000000004148e: mov eax, 0x10; syscall; 
0x00000000000753ab: mov eax, 0x10a; syscall; 
0x0000000000074fe8: mov eax, 0x10b; syscall; 
0x000000000005bb48: mov eax, 0x10c; syscall; 
0x00000000000744e5: mov eax, 0x10d; mov rdi, r13; mov rsi, rbx; mov rdx, r14; syscall; 
0x0000000000074457: mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x00000000000241db: mov eax, 0x110; syscall; 
0x000000000006e769: mov eax, 0x111; mov esi, 0x18; lea rdi, [r9 + 0x88]; syscall; 
0x000000000006d44a: mov eax, 0x111; xor edi, edi; mov esi, 0x18; syscall; 
0x000000000006ec6b: mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000024020: mov eax, 0x113; syscall; 
0x000000000002413d: mov eax, 0x114; syscall; 
0x00000000000240ce: mov eax, 0x115; syscall; 
0x00000000000240ce: mov eax, 0x115; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002423a: mov eax, 0x116; syscall; 
0x00000000000233f7: mov eax, 0x119; syscall; 
0x0000000000023f9f: mov eax, 0x11a; syscall; 
0x000000000002415e: mov eax, 0x11b; syscall; 
0x000000000002344f: mov eax, 0x11c; syscall; 
0x00000000000234e1: mov eax, 0x11d; syscall; 
0x00000000000234e1: mov eax, 0x11d; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000001fc0d: mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x000000000001fc0d: mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x0000000000024191: mov eax, 0x11e; syscall; 
0x0000000000024191: mov eax, 0x11e; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000241bb: mov eax, 0x11f; syscall; 
0x00000000000241bb: mov eax, 0x11f; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023f93: mov eax, 0x121; syscall; 
0x000000000002343d: mov eax, 0x122; syscall; 
0x000000000002336b: mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000074d47: mov eax, 0x125; movsxd rsi, esi; syscall; 
0x000000000002360b: mov eax, 0x126; mov rdx, rdi; syscall; 
0x000000000002350c: mov eax, 0x12c; syscall; 
0x0000000000023530: mov eax, 0x12d; syscall; 
0x0000000000023530: mov eax, 0x12d; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023ba1: mov eax, 0x12e; syscall; 
0x0000000000023ba1: mov eax, 0x12e; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023a01: mov eax, 0x12f; syscall; 
0x0000000000023a01: mov eax, 0x12f; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023a2e: mov eax, 0x130; syscall; 
0x000000000002329f: mov eax, 0x131; syscall; 
0x00000000000240fb: mov eax, 0x132; syscall; 
0x0000000000023ede: mov eax, 0x134; syscall; 
0x0000000000059d5c: mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000023bea: mov eax, 0x136; syscall; 
0x0000000000023bca: mov eax, 0x137; syscall; 
0x000000000005cae7: mov eax, 0x13; mov edx, 2; syscall; 
0x000000000002390a: mov eax, 0x13f; syscall; 
0x000000000002390a: mov eax, 0x13f; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004fcd9: mov eax, 0x142; syscall; 
0x00000000000238e4: mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000238e4: mov eax, 0x144; mov edi, 0x10; xor esi, esi; syscall; ret; 
0x000000000002375a: mov eax, 0x144; syscall; 
0x000000000002392e: mov eax, 0x145; syscall; 
0x000000000002392e: mov eax, 0x145; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023350: mov eax, 0x146; syscall; 
0x000000000007419b: mov eax, 0x15; syscall; 
0x000000000007419b: mov eax, 0x15; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006bd34: mov eax, 0x16; cmp esi, 1; ja 0x6bd43; mov dword ptr [rdi + 0x18], esi; xor eax, eax; ret; 
0x000000000006bd74: mov eax, 0x16; cmp esi, 1; ja 0x6bd83; mov dword ptr [rdi + 0x1c], esi; xor eax, eax; ret; 
0x000000000006f0f4: mov eax, 0x16; cmp esi, 1; ja 0x6f102; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006bd5e: mov eax, 0x16; cmp rsi, rdx; ja 0x6bd6e; mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000006bdbd: mov eax, 0x16; mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000006bea8: mov eax, 0x16; ret; 
0x0000000000074d18: mov eax, 0x16; syscall; 
0x0000000000074d18: mov eax, 0x16; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000050917: mov eax, 0x16; test esi, 0xffffff00; jne 0x50928; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000059e48: mov eax, 0x18; syscall; 
0x0000000000070294: mov eax, 0x18; syscall; ret; 
0x000000000004379c: mov eax, 0x19; syscall; 
0x0000000000074536: mov eax, 0x1b7; mov rdi, r13; mov rdx, r14; syscall; 
0x00000000000435e8: mov eax, 0x1b; syscall; 
0x00000000000435cb: mov eax, 0x1c; syscall; 
0x00000000000438fe: mov eax, 0x1c; syscall; neg eax; ret; 
0x00000000000221dc: mov eax, 0x1d; syscall; 
0x00000000000221dc: mov eax, 0x1d; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002215a: mov eax, 0x1e; syscall; 
0x000000000002217e: mov eax, 0x1f; syscall; 
0x000000000002217e: mov eax, 0x1f; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000742fb: mov eax, 0x20; syscall; 
0x000000000007431f: mov eax, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000005b6a4: mov eax, 0x23; ret; 
0x000000000005ac0b: mov eax, 0x24; syscall; 
0x00000000000508d4: mov eax, 0x26; ret; 
0x000000000005adfb: mov eax, 0x26; syscall; 
0x000000000005adfb: mov eax, 0x26; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023e2f: mov eax, 0x27; syscall; 
0x0000000000074b34: mov eax, 0x27; syscall; ret; 
0x0000000000023d8d: mov eax, 0x28; syscall; 
0x000000000004c4c1: mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c47b: mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f7: mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d6: mov eax, 0x31; syscall; 
0x0000000000048d77: mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e64: mov eax, 0x33; syscall; 
0x00000000000479d4: mov eax, 0x34; syscall; 
0x000000000004c58a: mov eax, 0x35; mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000004c3ca: mov eax, 0x36; syscall; 
0x000000000004c3ca: mov eax, 0x36; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000047e97: mov eax, 0x37; syscall; 
0x0000000000047e97: mov eax, 0x37; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004f421: mov eax, 0x39; syscall; 
0x000000000007b1c7: mov eax, 0x3a; syscall; 
0x000000000004f9c8: mov eax, 0x3b; syscall; 
0x0000000000074498: mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000007b38f: mov eax, 0x3c; syscall; 
0x0000000000074627: mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x00000000000603ea: mov eax, 0x3d; nop; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x0000000000024281: mov eax, 0x3d; syscall; 
0x0000000000024281: mov eax, 0x3d; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023e3e: mov eax, 0x3e; syscall; 
0x000000000005ac2e: mov eax, 0x3e; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000042f78: mov eax, 0x3f; syscall; 
0x0000000000042f78: mov eax, 0x3f; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005b694: mov eax, 0x40; ret; 
0x00000000000220c9: mov eax, 0x40; syscall; 
0x00000000000220c9: mov eax, 0x40; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002210b: mov eax, 0x41; syscall; 
0x000000000002210b: mov eax, 0x41; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002204f: mov eax, 0x42; syscall; 
0x00000000000221a8: mov eax, 0x43; syscall; 
0x00000000000221a8: mov eax, 0x43; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f6e: mov eax, 0x44; syscall; 
0x0000000000021f6e: mov eax, 0x44; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f3e: mov eax, 0x47; syscall; 
0x0000000000021f3e: mov eax, 0x47; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002221e: mov eax, 0x48000000; lea edx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000031d18: mov eax, 0x480007ed; add esp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004518c: mov eax, 0x48; mov edx, 1; syscall; 
0x000000000001f925: mov eax, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x00000000000502c3: mov eax, 0x48; mov esi, 1; syscall; 
0x0000000000050162: mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743b8: mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb20: mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000023ff0: mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000005ec49: mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000001f9b4: mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000005e178: mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c751: mov eax, 0x48; mov rsi, r14; syscall; 
0x000000000005c5b1: mov eax, 0x48; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x00000000000502dc: mov eax, 0x48; syscall; 
0x0000000000074d04: mov eax, 0x48ffface; add esp, 0x18; ret; 
0x000000000004c404: mov eax, 0x48fffd57; add esp, 8; ret; 
0x000000000002355e: mov eax, 0x49; syscall; 
0x000000000002355e: mov eax, 0x49; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000075478: mov eax, 0x4c; syscall; 
0x0000000000075478: mov eax, 0x4c; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007486b: mov eax, 0x4d; syscall; 
0x000000000007486b: mov eax, 0x4d; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000748b3: mov eax, 0x4f; mov rdi, r12; syscall; 
0x00000000000746e7: mov eax, 0x50; mov rdi, rbp; syscall; 
0x00000000000501e4: mov eax, 0x50; syscall; 
0x0000000000074248: mov eax, 0x50; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000746ba: mov eax, 0x51; syscall; 
0x0000000000060d68: mov eax, 0x52; syscall; 
0x0000000000060d68: mov eax, 0x52; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bf5a: mov eax, 0x53; syscall; 
0x000000000005bf5a: mov eax, 0x53; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000060d46: mov eax, 0x54; syscall; 
0x00000000000750c8: mov eax, 0x54; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074c18: mov eax, 0x56; syscall; 
0x0000000000074c18: mov eax, 0x56; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000061505: mov eax, 0x57; mov rdi, rbp; syscall; 
0x0000000000060d38: mov eax, 0x57; syscall; 
0x0000000000075648: mov eax, 0x57; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000075388: mov eax, 0x58; syscall; 
0x0000000000075388: mov eax, 0x58; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074f6f: mov eax, 0x59; syscall; 
0x000000000005ba1f: mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000005b9ba: mov eax, 0x5a; syscall; 
0x000000000005b9ba: mov eax, 0x5a; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005b9f2: mov eax, 0x5b; syscall; 
0x00000000000255eb: mov eax, 0x5be0894c; pop rbp; pop r12; ret; 
0x0000000000074786: mov eax, 0x5c; mov rdi, r12; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000007426c: mov eax, 0x5c; syscall; 
0x000000000007426c: mov eax, 0x5c; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074759: mov eax, 0x5d; syscall; 
0x0000000000074bfc: mov eax, 0x5e; syscall; 
0x0000000000074bfc: mov eax, 0x5e; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005c28a: mov eax, 0x5f; syscall; 
0x000000000005c28a: mov eax, 0x5f; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000071e70: mov eax, 0x60; xor esi, esi; mov rdi, rbp; syscall; 
0x00000000000412a0: mov eax, 0x61; mov rdi, rbp; syscall; 
0x00000000000412eb: mov eax, 0x62; syscall; 
0x00000000000412eb: mov eax, 0x62; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024118: mov eax, 0x63; syscall; 
0x0000000000073d74: mov eax, 0x64; syscall; 
0x0000000000073d74: mov eax, 0x64; syscall; ret; 
0x0000000000023c5d: mov eax, 0x65; syscall; 
0x000000000005007e: mov eax, 0x66; syscall; 
0x0000000000074b74: mov eax, 0x66; syscall; ret; 
0x00000000000236fe: mov eax, 0x67; syscall; 
0x00000000000236fe: mov eax, 0x67; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000050061: mov eax, 0x68; syscall; 
0x00000000000749b4: mov eax, 0x68; syscall; ret; 
0x0000000000050088: mov eax, 0x69; syscall; 
0x000000000005006b: mov eax, 0x6a; syscall; 
0x0000000000074436: mov eax, 0x6b; syscall; 
0x00000000000749a4: mov eax, 0x6b; syscall; ret; 
0x0000000000074419: mov eax, 0x6c; syscall; 
0x0000000000074994: mov eax, 0x6c; syscall; ret; 
0x000000000007514e: mov eax, 0x6d; syscall; 
0x000000000007514e: mov eax, 0x6d; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000050045: mov eax, 0x6d; xor edi, edi; syscall; 
0x0000000000074b44: mov eax, 0x6e; syscall; 
0x0000000000074b44: mov eax, 0x6e; syscall; ret; 
0x0000000000050027: mov eax, 0x70; syscall; 
0x0000000000074440: mov eax, 0x71; syscall; 
0x000000000007442a: mov eax, 0x72; syscall; 
0x00000000000749cb: mov eax, 0x73; syscall; 
0x0000000000021618: mov eax, 0x75000000; ret 0x8948; 
0x0000000000041218: mov eax, 0x76; syscall; 
0x00000000000411f8: mov eax, 0x78; syscall; 
0x0000000000074b0b: mov eax, 0x79; syscall; 
0x0000000000074b24: mov eax, 0x79; xor edi, edi; syscall; 
0x0000000000074b24: mov eax, 0x79; xor edi, edi; syscall; ret; 
0x0000000000023dca: mov eax, 0x7a; syscall; 
0x0000000000023daa: mov eax, 0x7b; syscall; 
0x0000000000074b5b: mov eax, 0x7c; syscall; 
0x0000000000023258: mov eax, 0x7d; syscall; 
0x0000000000023238: mov eax, 0x7e; syscall; 
0x000000000005b4f8: mov eax, 0x7f; mov esi, 8; syscall; 
0x0000000000030bce: mov eax, 0x7fffffff; and eax, dword ptr [rsp - 4]; and edx, 0x80000000; or eax, edx; movd xmm0, eax; ret; 
0x000000000003383a: mov eax, 0x7fffffff; and eax, dword ptr [rsp - 4]; cmp eax, 0x7f7fffff; setbe al; movzx eax, al; ret; 
0x0000000000023588: mov eax, 0x7fffffff; cmp rdx, 0x7fffffff; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000079049: mov eax, 0x81480003; call qword ptr [rax + 1]; 
0x0000000000015b66: mov eax, 0x81; syscall; 
0x000000000006e831: mov eax, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000005b138: mov eax, 0x83; syscall; 
0x000000000005b138: mov eax, 0x83; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bfda: mov eax, 0x85; syscall; 
0x0000000000023a58: mov eax, 0x87; syscall; 
0x0000000000075bc1: mov eax, 0x88; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000002876d: mov eax, 0x89000000; ret 0xc085; 
0x000000000005c058: mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c08b: mov eax, 0x8a; syscall; 
0x00000000000411cd: mov eax, 0x8c; syscall; 
0x0000000000042760: mov eax, 0x8d; syscall; 
0x000000000006f53b: mov eax, 0x8e; syscall; 
0x000000000006de89: mov eax, 0x8f; mov rsi, r13; syscall; 
0x000000000006f48b: mov eax, 0x90; mov rdx, rbp; syscall; 
0x000000000006d885: mov eax, 0x90; syscall; 
0x000000000006dedc: mov eax, 0x91; syscall; 
0x0000000000059c8b: mov eax, 0x92; syscall; 
0x0000000000059c8b: mov eax, 0x92; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000059cab: mov eax, 0x93; syscall; 
0x0000000000059cab: mov eax, 0x93; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000059deb: mov eax, 0x94; syscall; 
0x0000000000059deb: mov eax, 0x94; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000043608: mov eax, 0x95; syscall; 
0x0000000000043878: mov eax, 0x96; syscall; 
0x0000000000043878: mov eax, 0x96; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004362b: mov eax, 0x97; syscall; 
0x000000000004362b: mov eax, 0x97; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000043898: mov eax, 0x98; syscall; 
0x0000000000043898: mov eax, 0x98; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024218: mov eax, 0x99; syscall; 
0x0000000000024218: mov eax, 0x99; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023a78: mov eax, 0x9b; syscall; 
0x0000000000023a78: mov eax, 0x9b; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023b5d: mov eax, 0x9d; syscall; 
0x00000000000231fb: mov eax, 0x9e; syscall; 
0x00000000000231fb: mov eax, 0x9e; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007b37d: mov eax, 0x9e; syscall; ret; 
0x00000000000232b8: mov eax, 0x9f; mov rdi, rsi; syscall; 
0x0000000000042792: mov eax, 0xa0; syscall; 
0x0000000000042792: mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000023278: mov eax, 0xa1; syscall; 
0x0000000000023278: mov eax, 0xa1; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000753c4: mov eax, 0xa2; syscall; 
0x00000000000753c4: mov eax, 0xa2; syscall; ret; 
0x00000000000741b8: mov eax, 0xa3; syscall; 
0x00000000000741b8: mov eax, 0xa3; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002399b: mov eax, 0xa5; syscall; 
0x000000000002399b: mov eax, 0xa5; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000239db: mov eax, 0xa6; syscall; 
0x00000000000239db: mov eax, 0xa6; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000239b8: mov eax, 0xa6; xor esi, esi; syscall; 
0x000000000002408b: mov eax, 0xa7; syscall; 
0x000000000002408b: mov eax, 0xa7; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000240a8: mov eax, 0xa8; syscall; 
0x0000000000023cfb: mov eax, 0xa9; mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x000000000004373d: mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x0000000000023eb8: mov eax, 0xaa; syscall; 
0x0000000000023eb8: mov eax, 0xaa; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000042738: mov eax, 0xab; syscall; 
0x0000000000042738: mov eax, 0xab; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000236db: mov eax, 0xac; syscall; 
0x00000000000236db: mov eax, 0xac; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000236bb: mov eax, 0xad; syscall; 
0x00000000000236bb: mov eax, 0xad; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023958: mov eax, 0xaf; syscall; 
0x0000000000023958: mov eax, 0xaf; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002397a: mov eax, 0xb0; syscall; 
0x0000000000023cb1: mov eax, 0xb3; syscall; 
0x00000000000438c5: mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000006e0f8: mov eax, 0xb; pop rbx; pop rbp; ret; 
0x000000000006f000: mov eax, 0xb; ret; 
0x000000000007b385: mov eax, 0xb; syscall; 
0x000000000004f42f: mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000006ff97: mov eax, 0xba; syscall; 
0x0000000000023cd7: mov eax, 0xbb; syscall; 
0x000000000002436e: mov eax, 0xbc; syscall; 
0x000000000002436e: mov eax, 0xbc; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002439e: mov eax, 0xbd; syscall; 
0x000000000002439e: mov eax, 0xbd; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000243d1: mov eax, 0xbe; syscall; 
0x00000000000243d1: mov eax, 0xbe; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000242a7: mov eax, 0xbf; syscall; 
0x000000000006e3c8: mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x00000000000242c7: mov eax, 0xc0; syscall; 
0x00000000000242ea: mov eax, 0xc1; syscall; 
0x0000000000024304: mov eax, 0xc2; syscall; 
0x0000000000024324: mov eax, 0xc3; syscall; 
0x0000000000024347: mov eax, 0xc4; syscall; 
0x00000000000243f8: mov eax, 0xc5; syscall; 
0x00000000000243f8: mov eax, 0xc5; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024418: mov eax, 0xc6; syscall; 
0x0000000000024418: mov eax, 0xc6; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002443b: mov eax, 0xc7; syscall; 
0x000000000002443b: mov eax, 0xc7; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002386a: mov eax, 0xc8; mov esi, 0x22; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000073cb1: mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000001f562: mov eax, 0xc8; syscall; 
0x000000000006c3d6: mov eax, 0xc8; syscall; ret; 
0x000000000002b4f7: mov eax, 0xc; mov rdi, rbp; syscall; 
0x00000000000505b1: mov eax, 0xc; pop rbp; pop r12; ret; 
0x0000000000050614: mov eax, 0xc; pop rbx; pop rbp; ret; 
0x0000000000023d59: mov eax, 0xc; syscall; 
0x0000000000023d59: mov eax, 0xc; syscall; ret; 
0x000000000006f096: mov eax, 0xca; cmove rsi, r10; mov rax, r8; syscall; 
0x0000000000015a5b: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a30: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf1: mov eax, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006d234: mov eax, 0xca; mov edx, 1; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c4: mov eax, 0xca; mov edx, 1; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8be: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3e9: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc1: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce50: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000006bfa1: mov eax, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c81e: mov eax, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c108: mov eax, 0xca; mov edx, 1; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6ee: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1f9: mov eax, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce1f: mov eax, 0xca; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d4a8: mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006e80d: mov eax, 0xca; not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000006e62a: mov eax, 0xca; or esi, 7; syscall; 
0x0000000000059b5b: mov eax, 0xcb; syscall; 
0x0000000000059b78: mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000059be6: mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x0000000000059b98: mov eax, 0xcc; syscall; 
0x000000000005f0df: mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x0000000000023381: mov eax, 0xd5; mov edi, 1; syscall; 
0x0000000000023d31: mov eax, 0xd8; syscall; 
0x000000000001e76c: mov eax, 0xd9; mov edx, 0x800; mov rsi, r9; syscall; 
0x000000000002359b: mov eax, 0xd9; syscall; 
0x000000000005af1e: mov eax, 0xd; syscall; 
0x000000000001eab4: mov eax, 0xda; lea rdi, [rip + 0x98490]; syscall; 
0x000000000006d513: mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000002212e: mov eax, 0xdc; syscall; 
0x000000000001fbea: mov eax, 0xdd; syscall; 
0x000000000001fbea: mov eax, 0xdd; syscall; neg eax; ret; 
0x000000000003920c: mov eax, 0xde000762; ret 0xc1de; 
0x0000000000073a25: mov eax, 0xde; syscall; 
0x0000000000073d52: mov eax, 0xdf; syscall; 
0x0000000000073d1c: mov eax, 0xe0; syscall; 
0x0000000000073d1c: mov eax, 0xe0; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000073cec: mov eax, 0xe1; syscall; 
0x00000000000738b1: mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x0000000000073c89: mov eax, 0xe2; syscall; 
0x0000000000073c89: mov eax, 0xe2; syscall; ret; 
0x0000000000071f2b: mov eax, 0xe3; syscall; 
0x0000000000071f2b: mov eax, 0xe3; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000071e29: mov eax, 0xe4; mov rsi, rbp; syscall; 
0x0000000000071d38: mov eax, 0xe5; movsxd rdi, r8d; syscall; 
0x0000000000071d8b: mov eax, 0xe5; syscall; 
0x000000000001f4d7: mov eax, 0xe7; syscall; 
0x0000000000033d45: mov eax, 0xe8000000; ret 0x6e; 
0x000000000002340a: mov eax, 0xe8; syscall; 
0x000000000007798f: mov eax, 0xe8fffffb; ret 0x38; 
0x00000000000233c4: mov eax, 0xe9; syscall; 
0x00000000000233c4: mov eax, 0xe9; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000001f569: mov eax, 0xe; lea rsi, [rsp + 8]; mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000005b80d: mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005b80d: mov eax, 0xe; mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000006d534: mov eax, 0xe; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x0000000000073b09: mov eax, 0xe; mov rdi, rdx; syscall; 
0x0000000000049013: mov eax, 0xe; ret; 
0x000000000005abb6: mov eax, 0xe; syscall; 
0x000000000005abb6: mov eax, 0xe; syscall; ret; 
0x000000000005abed: mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000005abed: mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000005c38f: mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x0000000000043dbb: mov eax, 0xf0; syscall; 
0x0000000000043edf: mov eax, 0xf1; syscall; 
0x0000000000043edf: mov eax, 0xf1; syscall; test eax, eax; js 0x43eeb; ret; 
0x000000000003cc64: mov eax, 0xf2000711; movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000003cd14: mov eax, 0xf3000727; movups xmmword ptr [rsp - 4], xmm2; ret; 
0x0000000000043ce8: mov eax, 0xf4; mov dword ptr [rsp + 0x88], r13d; syscall; 
0x0000000000043bd5: mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000043e3b: mov eax, 0xf5; syscall; 
0x0000000000043e3b: mov eax, 0xf5; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007b229: mov eax, 0xf; syscall; 
0x0000000000023621: mov eax, 0xfd; syscall; 
0x0000000000023621: mov eax, 0xfd; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000002365d: mov eax, 0xfe; syscall; 
0x0000000000033d3e: mov eax, 0xff000000; mov ah, 0x24; mov eax, 0xe8000000; ret 0x6e; 
0x000000000002368e: mov eax, 0xff; syscall; 
0x000000000006c412: mov eax, 0xffffff83; ret; 
0x0000000000059d0f: mov eax, 0xffffffda; pop r12; pop r13; ret; 
0x0000000000071ded: mov eax, 0xffffffda; pop rbp; pop r12; ret; 
0x000000000005b1a5: mov eax, 0xfffffffe; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000021bf0: mov eax, 0xffffffff; add rsp, 0x18; ret; 
0x00000000000225aa: mov eax, 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000015c7f: mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000004505e: mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x0000000000074cb9: mov eax, 0xffffffff; cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x000000000007036b: mov eax, 0xffffffff; lock xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x0000000000043f01: mov eax, 0xffffffff; mov dword ptr [rax], ebx; mov eax, r8d; pop rbx; ret; 
0x00000000000458f8: mov eax, 0xffffffff; mov eax, r8d; ret; 
0x000000000004ecb2: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000025509: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000000436c0: mov eax, 0xffffffff; pop rbx; pop r12; ret; 
0x000000000006b0d8: mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000446d0: mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; ret; 
0x000000000001eaf8: mov eax, 0xffffffff; pop rbx; ret; 
0x000000000001e58b: mov eax, 0xffffffff; ret; 
0x0000000000041682: mov eax, 1; add rsp, 8; ret; 
0x000000000001e563: mov eax, 1; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x00000000000677d5: mov eax, 1; call 0x61030; mov rax, r12; pop r12; ret; 
0x000000000002c63e: mov eax, 1; mov eax, r8d; ret; 
0x000000000005c881: mov eax, 1; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000001dd3c: mov eax, 1; ret; 
0x000000000005b0e4: mov eax, 1; shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000074473: mov eax, 1; syscall; 
0x000000000001e407: mov eax, 1; test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x0000000000048fa4: mov eax, 2; ret; 
0x000000000002d069: mov eax, 2; sbb r8d, -1; mov eax, r8d; ret; 
0x00000000000703d8: mov eax, 2; syscall; 
0x0000000000070470: mov eax, 3; mov rdi, r12; syscall; 
0x000000000001e723: mov eax, 3; syscall; 
0x000000000004b114: mov eax, 3; syscall; ret; 
0x000000000002cfda: mov eax, 4; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d037: mov eax, 4; cmp eax, 0xff; je 0x2d050; mov eax, r8d; ret; 
0x000000000005be20: mov eax, 4; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005bced: mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x00000000000703f4: mov eax, 5; mov rdi, r12; syscall; 
0x000000000005bc80: mov eax, 5; mov rsi, rdx; mov rdi, rbp; syscall; 
0x000000000006141e: mov eax, 6; mov rdi, r12; syscall; 
0x000000000005be38: mov eax, 6; mov rdi, r9; mov rsi, rdx; syscall; 
0x0000000000074ae9: mov eax, 6; pop rbp; pop r12; ret; 
0x0000000000074c6a: mov eax, 8; syscall; 
0x000000000004367a: mov eax, 9; mov rdi, r12; syscall; 
0x000000000001f466: mov eax, dword ptr [0]; add rax, 0x34; ret; 
0x000000000006fe5c: mov eax, dword ptr [0]; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x00000000000235e6: mov eax, dword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006d5ba: mov eax, dword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005ada2: mov eax, dword ptr [0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000006f116: mov eax, dword ptr [0]; ret; 
0x000000000002374b: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x00000000000746ae: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000703c9: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000007440d: mov eax, dword ptr [0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000006d2c8: mov eax, dword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000075ccf: mov eax, dword ptr [rax + 0x18]; test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x0000000000073b66: mov eax, dword ptr [rax + 0x30]; mov dword ptr [rsp + 0x20], eax; mov eax, 0xde; syscall; 
0x00000000000235ed: mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006defe: mov eax, dword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005f04c: mov eax, dword ptr [rax + 0xd8]; test rax, rax; jne 0x5f040; ret; 
0x000000000007af6e: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000078a30: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x3dec6]; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x0000000000078968: mov eax, dword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x0000000000040543: mov eax, dword ptr [rax + 8]; ret; 
0x000000000006df07: mov eax, dword ptr [rax + rdi*8]; ret; 
0x00000000000607eb: mov eax, dword ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rbx*2 + 0x4a], 0x63; jl 0x607ab; sbb byte ptr [rax + 3], bh; syscall; 
0x00000000000607b1: mov eax, dword ptr [rax]; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000002cd66: mov eax, dword ptr [rax]; ret; 
0x000000000005280b: mov eax, dword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000005ca0b: mov eax, dword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000050020: mov eax, dword ptr [rbp]; test al, 0x80; je 0x5003d; mov eax, 0x70; syscall; 
0x000000000005005a: mov eax, dword ptr [rbp]; test al, 1; je 0x50097; mov eax, 0x68; syscall; 
0x000000000006d50c: mov eax, dword ptr [rbx + 0x10]; test eax, eax; je 0x6d530; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000006ba65: mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000002aed0: mov eax, dword ptr [rbx + 8]; mov qword ptr [rax], rbx; mov rax, r10; pop rbx; ret; 
0x000000000006c6ad: mov eax, dword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x0000000000016302: mov eax, dword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000006a4f8: mov eax, dword ptr [rbx]; test eax, eax; jne 0x6a4f0; xor eax, eax; pop rbx; ret; 
0x000000000006bac1: mov eax, dword ptr [rbx]; test rax, rax; je 0x6baca; call rax; 
0x000000000001e756: mov eax, dword ptr [rcx + 8]; mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x00000000000619e3: mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000006bb94: mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbb4: mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbd4: mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbc4: mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0fe: mov eax, dword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000006de14: mov eax, dword ptr [rdi + 0x30]; not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005cd6a: mov eax, dword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x5cd7a; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005d0e5: mov eax, dword ptr [rdi + 0x60]; ret; 
0x0000000000015ca4: mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x0000000000015c95: mov eax, dword ptr [rdi + 0x78]; ret; 
0x000000000005dc06: mov eax, dword ptr [rdi + 0x78]; test eax, eax; js 0x5dc3a; add rsp, 0x10; pop rbp; ret; 
0x000000000005d0d4: mov eax, dword ptr [rdi + 0x90]; not eax; shr eax, 0x1f; ret; 
0x00000000000507f4: mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006b7e5: mov eax, dword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000006b214: mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000006bba5: mov eax, dword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000001e5f4: mov eax, dword ptr [rdi + 8]; ret; 
0x000000000006be34: mov eax, dword ptr [rdi + 8]; test eax, eax; js 0x6be40; xor eax, eax; ret; 
0x00000000000354fd: mov eax, dword ptr [rdi]; add dl, dh; divps xmm0, xmmword ptr [rip + 0x78918]; ret; 
0x00000000000354e1: mov eax, dword ptr [rdi]; add dl, dh; subps xmm0, xmmword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x000000000006bc54: mov eax, dword ptr [rdi]; and eax, 0x7fffffff; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006d0e0: mov eax, dword ptr [rdi]; and eax, 0x80000000; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000006ecce: mov eax, dword ptr [rdi]; and eax, 0xfffffffc; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000006bcd4: mov eax, dword ptr [rdi]; and eax, 3; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000004a7e4: mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x000000000006bce4: mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bc25: mov eax, dword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000052805: mov eax, dword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x00000000000507e4: mov eax, dword ptr [rdi]; mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000001ea65: mov eax, dword ptr [rdi]; ret; 
0x000000000006bc64: mov eax, dword ptr [rdi]; shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bcb4: mov eax, dword ptr [rdi]; shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0b4: mov eax, dword ptr [rdi]; shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x000000000006bc74: mov eax, dword ptr [rdi]; shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0c4: mov eax, dword ptr [rdi]; shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x000000000006bc94: mov eax, dword ptr [rdi]; shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005b3bf: mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000006b574: mov eax, dword ptr [rdi]; test eax, eax; js 0x6b580; ret; 
0x000000000005a347: mov eax, dword ptr [rdi]; test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000005e37c: mov eax, dword ptr [rdx + 0x20]; test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000002221c: mov eax, dword ptr [rdx + 0xb8]; lea rdx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000071e10: mov eax, dword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x000000000006ff8d: mov eax, dword ptr [rip + 0x448f1]; test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x0000000000047ed1: mov eax, dword ptr [rip + 0x6c0d9]; ret; 
0x000000000002a29e: mov eax, dword ptr [rip + 0x8cb04]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000022e8c: mov eax, dword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x0000000000015e39: mov eax, dword ptr [rip + 0xa110d]; test eax, eax; jne 0x15e50; mov eax, r12d; pop r12; ret; 
0x000000000005e327: mov eax, dword ptr [rsi + 0x10]; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x0000000000049024: mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000005b185: mov eax, dword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000006bd94: mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000006e42c: mov eax, dword ptr [rsi]; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005b475: mov eax, dword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000006ee70: mov eax, dword ptr [rsi]; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x00000000000394d3: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000052222: mov eax, dword ptr [rsp + 0x10]; and ebx, 1; mov rdi, rbp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000004bc4f: mov eax, dword ptr [rsp + 0x10]; test eax, eax; je 0x4bc60; add rsp, 0x28; ret; 
0x0000000000073921: mov eax, dword ptr [rsp + 0x28]; call rax; 
0x000000000007042e: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000003e17d: mov eax, dword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e8a1: mov eax, dword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000007932a: mov eax, dword ptr [rsp + 0x68]; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x000000000006f2cd: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000052182: mov eax, dword ptr [rsp + 8]; call rax; 
0x0000000000067b0b: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000007b3e8: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3e8: mov eax, dword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000001e918: mov eax, dword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x0000000000067aca: mov eax, dword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000051f57: mov eax, dword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x0000000000067b24: mov eax, dword ptr [rsp + 8]; mov rsi, r15; mov rdi, r8; call rax; 
0x0000000000070110: mov eax, dword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x0000000000045acd: mov eax, dword ptr [rsp]; lea rdx, [r14 + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x0000000000041ac9: mov eax, dword ptr [rsp]; mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x0000000000015b5e: mov eax, dword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000006ffa8: mov eax, dword ptr [rsp]; mov rdi, r12; call rax; 
0x0000000000074be1: mov eax, eax; add rsp, 0x18; ret; 
0x0000000000074d5f: mov eax, eax; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000022e7e: mov eax, eax; add rsp, 8; ret; 
0x000000000006fc83: mov eax, eax; and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x0000000000074761: mov eax, eax; cmp eax, -9; jne 0x747a0; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000001e405: mov eax, eax; mov eax, 1; test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x00000000000745e1: mov eax, eax; mov eax, 3; syscall; 
0x00000000000692b7: mov eax, eax; mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000007042b: mov eax, eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000001fa56: mov eax, eax; mov rdx, r10; syscall; 
0x000000000001f944: mov eax, eax; mov rdx, r9; syscall; 
0x000000000006f0ab: mov eax, eax; mov rsi, r10; syscall; 
0x000000000001f9f9: mov eax, eax; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000005c8e1: mov eax, eax; mov rsi, rdx; syscall; 
0x000000000006d1d6: mov eax, eax; mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000005c8e1: mov eax, eax; mov rsi, rdx; syscall; ret; 
0x0000000000034d64: mov eax, eax; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c5a: mov eax, eax; movss dword ptr [rsp - 4], xmm0; ret; 
0x00000000000708ce: mov eax, eax; neg eax; test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x000000000001f2e2: mov eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005e665: mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000070466: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000051046: mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000001e715: mov eax, eax; pop rbx; ret; 
0x000000000001db65: mov eax, eax; ret; 
0x0000000000015a40: mov eax, eax; syscall; 
0x000000000005c8ce: mov eax, eax; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006c6fe: mov eax, eax; syscall; cmp rax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006d1f9: mov eax, eax; syscall; ret; 
0x000000000006c711: mov eax, eax; syscall; xor eax, eax; ret; 
0x000000000001df7d: mov eax, eax; xor eax, eax; test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x000000000004c3c5: mov eax, eax; xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000045ad5: mov eax, ebp; mov ecx, ebx; mov rdi, r13; call rax; 
0x000000000006b85c: mov eax, ebp; mov rsi, rbx; syscall; 
0x000000000005020d: mov eax, ebp; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000022d58: mov eax, ebp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000692b9: mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000005d696: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002a52f: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000044279: mov eax, ebx; add rsp, 0x18; ret; 
0x0000000000069aa4: mov eax, ebx; cmovne rax, rsi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000072257: mov eax, ebx; mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x000000000006c304: mov eax, ebx; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005c85f: mov eax, ebx; mov rsi, rbp; syscall; 
0x000000000001e315: mov eax, ebx; pop r12; ret; 
0x000000000001e2bc: mov eax, ebx; pop rbp; pop r12; ret; 
0x000000000005b5fc: mov eax, ebx; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004399c: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ade1: mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000029001: mov eax, ebx; pop rbx; ret; 
0x000000000006a5ec: mov eax, ebx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x00000000000502a4: mov eax, ebx; syscall; 
0x0000000000071d5d: mov eax, ecx; add rsp, 0x28; ret; 
0x000000000006c4df: mov eax, ecx; mov rdi, r13; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000074371: mov eax, ecx; mov rsi, r8; syscall; 
0x000000000006b53c: mov eax, ecx; mov rsi, rbx; syscall; 
0x000000000005d571: mov eax, ecx; mov rsi, rdx; syscall; 
0x000000000005f791: mov eax, ecx; mov rsi, rdx; syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b51: mov eax, ecx; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x0000000000074531: mov eax, ecx; movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r13; mov rdx, r14; syscall; 
0x000000000001e75d: mov eax, ecx; pop rbx; ret; 
0x0000000000015bdd: mov eax, ecx; syscall; 
0x000000000001e1a4: mov eax, edi; and eax, 0x7f; ret; 
0x0000000000043f3f: mov eax, edi; and eax, 0xdfff; ret; 
0x0000000000048650: mov eax, edi; and eax, 0xffffff; ret; 
0x000000000001e1e9: mov eax, edi; and edx, 0x5f; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000047f94: mov eax, edi; bswap eax; ret; 
0x0000000000067594: mov eax, edi; cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x00000000000672c4: mov eax, edi; cdq; xor eax, edx; sub eax, edx; ret; 
0x000000000001e444: mov eax, edi; cmp rsi, 1; je 0x1e458; cmp rsi, 2; je 0x1e460; ret; 
0x0000000000067805: mov eax, edi; cqo; idiv rsi; ret; 
0x00000000000677f5: mov eax, edi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000074409: mov eax, edi; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000006d492: mov eax, edi; mov rdx, r10; syscall; 
0x000000000001e1b9: mov eax, edi; or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x0000000000068ef5: mov eax, edi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000068a01: mov eax, edi; pop rbx; ret; 
0x000000000001e2e8: mov eax, edi; ret; 
0x0000000000047fa4: mov eax, edi; rol ax, 8; ret; 
0x000000000006d577: mov eax, edi; sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000005014d: mov eax, edi; syscall; 
0x000000000006f2e4: mov eax, edi; test edi, edi; js 0x6f2f8; mov edx, 0xb; cmovne eax, edx; ret; 
0x000000000006a03c: mov eax, edi; test sil, sil; jne 0x6a048; pop rbp; ret; 
0x000000000004867a: mov eax, edx; cmova eax, edi; ret; 
0x000000000005e3d2: mov eax, edx; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000006efe2: mov eax, edx; lock cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x000000000006a555: mov eax, edx; mov eax, r8d; ret; 
0x0000000000074391: mov eax, edx; mov rsi, r8; syscall; 
0x000000000006dc90: mov eax, edx; mov rsi, rdx; syscall; 
0x000000000004a76c: mov eax, edx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000447c6: mov eax, edx; pop rbp; pop r12; ret; 
0x0000000000044731: mov eax, edx; pop rbx; pop rbp; sub rax, rcx; pop r12; ret; 
0x000000000002aed7: mov eax, edx; pop rbx; ret; 
0x0000000000059c71: mov eax, edx; ret; 
0x000000000006a7f6: mov eax, edx; sub eax, ecx; ret; 
0x000000000006a374: mov eax, edx; sub eax, esi; ret; 
0x000000000005a78e: mov eax, edx; sub eax, r8d; ret; 
0x000000000005d150: mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000001f4e9: mov eax, edx; syscall; 
0x00000000000485f4: mov eax, esi; cmp edi, 0xff; ja 0x48608; shl edi, 0x18; or eax, edi; ret; 
0x000000000005c733: mov eax, esi; mov rdi, r13; syscall; 
0x000000000004514b: mov eax, esi; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000060a88: mov eax, esi; ret; 
0x00000000000673fb: mov eax, esi; sub rax, rdx; test r9d, r9d; cmove r8, rax; mov rax, r8; ret; 
0x000000000005a0d1: mov eax, esp; mov qword ptr [rbx], 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a1f0: mov eax, esp; mov qword ptr [rip + 0x4cc5f], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000006c4dc: mov eax, esp; mov r8, r9; mov rdi, r13; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x00000000000614e7: mov eax, esp; mov rdi, rbp; mov edx, 0x180; syscall; 
0x000000000005babb: mov eax, esp; mov rdx, r13; syscall; 
0x000000000006c32b: mov eax, esp; mov rdx, rbp; syscall; 
0x000000000005cc2e: mov eax, esp; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005bb96: mov eax, esp; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000005e128: mov eax, esp; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000066acf: mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x000000000006a2c5: mov eax, esp; pop r12; pop r13; ret; 
0x0000000000015e44: mov eax, esp; pop r12; ret; 
0x000000000006a298: mov eax, esp; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000005a9b9: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000024ca9: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005d1e2: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000001bb92: mov eax, esp; pop rbp; pop r12; ret; 
0x00000000000748f8: mov eax, esp; pop rbx; pop r12; pop rbp; ret; 
0x000000000001e6a1: mov eax, esp; pop rbx; pop r12; ret; 
0x000000000001af75: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001e3cd: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000050239: mov eax, esp; syscall; 
0x000000000004a76b: mov eax, r10d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000001e314: mov eax, r11d; pop r12; ret; 
0x000000000001e2bb: mov eax, r11d; pop rbp; pop r12; ret; 
0x000000000005a0d0: mov eax, r12d; mov qword ptr [rbx], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000015e43: mov eax, r12d; pop r12; ret; 
0x000000000005d1e1: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000001e5e5: mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000001f67d: mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000006bf8d: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000001e3cc: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000006963f: mov eax, r13d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000004514a: mov eax, r14d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000074be0: mov eax, r8d; add rsp, 0x18; ret; 
0x000000000005f757: mov eax, r8d; add rsp, 8; ret; 
0x0000000000034d63: mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c59: mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x00000000000708cd: mov eax, r8d; neg eax; test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x000000000001f2e1: mov eax, r8d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005e664: mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000051045: mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000043f08: mov eax, r8d; pop rbx; ret; 
0x000000000001db64: mov eax, r8d; ret; 
0x0000000000071d5c: mov eax, r9d; add rsp, 0x28; ret; 
0x000000000005a9ff: mov ebp, 0x4800010b; mov edi, eax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000019a3f: mov ebp, 0x48000625; movsx eax, word ptr [rax + rsi*2]; ret; 
0x000000000003f347: mov ebp, 0x480006ef; not eax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000006ea0d: mov ebp, 0x48c8894c; mov esi, edx; syscall; 
0x00000000000609d5: mov ebp, 0x8aebffff; nop word ptr [rax + rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006efb2: mov ebp, 0x8c48348; pop rbx; pop rbp; ret; 
0x000000000001f7d8: mov ebp, 0xc0310004; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000039e0f: mov ebp, 0xf000756; sub dl, al; ret; 
0x000000000002b24d: mov ebp, 8; add byte ptr [rax], al; ret; 
0x000000000007b1ea: mov ebp, dword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005d251: mov ebp, eax; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005e125: mov ebp, eax; mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000004c539: mov ebp, ecx; push rbx; mov rbx, rsi; syscall; 
0x00000000000253d6: mov ebp, edi; call 0x29330; test eax, eax; jne 0x253e8; pop rbp; ret; 
0x000000000005dc56: mov ebp, edi; call 0x5f0f0; test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x000000000005cf5c: mov ebp, edi; test eax, eax; jns 0x5cf70; and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x000000000005e216: mov ebp, esi; test r12, r12; je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x0000000000025e9f: mov ebx, 0x3edf014c; jmp rdi; 
0x00000000000745d7: mov ebx, 0x4800006d; movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005029a: mov ebx, 0x66fffffe; nop; movsxd rdi, r14d; mov rax, rbx; syscall; 
0x0000000000031d99: mov ebx, 0xf30007ed; addps xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x0000000000047084: mov ebx, dword ptr [rbx]; call 0x15060; test rbx, rbx; jne 0x47080; pop rbx; ret; 
0x000000000006070c: mov ebx, eax; mov rdi, r12; call 0x5d1b0; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000703ef: mov ebx, eax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000004f429: mov ebx, eax; test eax, eax; jne 0x4f47f; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x00000000000684d7: mov ebx, ebp; mov edx, 0x8778948; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000003fc95: mov ebx, edi; jne 0x3fca0; pop rbx; ret; 
0x000000000003fcfe: mov ebx, edi; jne 0x3fd10; lea r8, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x0000000000071e09: mov ebx, edi; sub rsp, 8; mov rax, qword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x0000000000023df3: mov ebx, edi; sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000069056: mov ebx, edx; call 0x7b25a; add rax, rbx; pop rbx; ret; 
0x0000000000074d45: mov ebx, esi; mov eax, 0x125; movsxd rsi, esi; syscall; 
0x000000000004c53d: mov ebx, esi; syscall; 
0x000000000004c473: mov ebx, esi; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x0000000000068835: mov ecx, 0; add byte ptr [rax], al; add byte ptr [rax - 0x13217], al; jmp qword ptr [rsi + 0x2e]; 
0x0000000000068865: mov ecx, 0; add byte ptr [rax], al; add byte ptr [rax - 0x16217], al; jmp qword ptr [rsi + 0x2e]; 
0x0000000000074366: mov ecx, 0x124; nop dword ptr [rax + rax]; mov rax, r9; mov rsi, r8; syscall; 
0x00000000000508c6: mov ecx, 0x2a; rep stosq qword ptr [rdi], rax; ret; 
0x00000000000378b3: mov ecx, 0x48000756; add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000041203: mov ecx, 0x48fffe09; add esp, 8; ret; 
0x0000000000024403: mov ecx, 0x48ffffd7; add esp, 8; ret; 
0x00000000000501ba: mov ecx, 0x88; call rax; 
0x000000000006e775: mov ecx, 0x88; syscall; 
0x00000000000738ac: mov ecx, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000002a35a: mov ecx, 0xa8; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000006fc09: mov ecx, 0xc031ffff; pop rbp; ret; 
0x000000000005f15c: mov ecx, 0xc0; ret; 
0x0000000000015bc9: mov ecx, 0xca; add rdi, 0x28; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000060af4: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f736: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000005d529: mov ecx, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006e9f9: mov ecx, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x0000000000027840: mov ecx, 0xf1ffa83; xchg dword ptr [rbp + 0x69000000], eax; sal byte ptr [rdx + 0x1000000], cl; ret 0xc281; 
0x0000000000036493: mov ecx, 0xf7000000; ret; 
0x00000000000233f2: mov ecx, 8; mov eax, 0x119; syscall; 
0x000000000005e3ba: mov ecx, dword ptr [rax + 0x18]; test rcx, rcx; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x000000000002c5fb: mov ecx, dword ptr [rax - 0x75]; push rax; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000043354: mov ecx, dword ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000075ad4: mov ecx, dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000007620f: mov ecx, dword ptr [rdi + 0x10]; add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x000000000006addd: mov ecx, dword ptr [rdi + rax*4]; cmp edx, ecx; je 0x6add0; mov eax, edx; sub eax, ecx; ret; 
0x000000000006b7de: mov ecx, dword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000061a11: mov ecx, dword ptr [rdx + 8]; lea rax, [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000007b3ed: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3ed: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000006c4e5: mov ecx, dword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000074225: mov ecx, dword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000075623: mov ecx, dword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x0000000000023411: mov ecx, eax; movsxd rdi, ecx; call 0x21bc0; add rsp, 8; ret; 
0x000000000007b3ac: mov ecx, ebx; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000045ad7: mov ecx, ebx; mov rdi, r13; call rax; 
0x000000000002401e: mov ecx, ecx; mov eax, 0x113; syscall; 
0x000000000002334e: mov ecx, ecx; mov eax, 0x146; syscall; 
0x000000000001ddb6: mov ecx, edi; sar eax, cl; and eax, 1; ret; 
0x000000000007b350: mov ecx, edx; jne 0x7b35f; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x00000000000469f1: mov ecx, edx; mov rdx, rsi; mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x000000000003f462: mov ecx, esi; bts r8, 0x35; shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x0000000000021a89: mov ecx, esi; mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x000000000007b378: mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000007b378: mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x00000000000238e9: mov edi, 0x10; xor esi, esi; syscall; 
0x00000000000238e9: mov edi, 0x10; xor esi, esi; syscall; ret; 
0x000000000006ebfe: mov edi, 0x1ae892eb; add edi, ebx; jmp qword ptr [rsi + 0x2e]; 
0x0000000000033595: mov edi, 0x280f0007; ret 0xfc3; 
0x0000000000023000: mov edi, 0x2e66ffff; nop dword ptr [rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x0000000000055ead: mov edi, 0x3c000002; sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x0000000000050d5c: mov edi, 0x3d; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000001fcad: mov edi, 0x3f; call 0x7ae8e; xor eax, eax; add rsp, 8; ret; 
0x0000000000048642: mov edi, 0x40000000; movzx edi, bh; cmova eax, edi; ret; 
0x000000000005d4ad: mov edi, 0x44000028; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x000000000006e3cc: mov edi, 0x44721f0; xor eax, eax; ret; 
0x0000000000021fec: mov edi, 0x45; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000071ac6: mov edi, 0x48000000; add esp, 0x18; ret; 
0x00000000000688ee: mov edi, 0x48000129; add esp, 8; ret; 
0x0000000000043997: mov edi, 0x48000378; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074847: mov edi, 0x4a; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000074817: mov edi, 0x4b; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000019a78: mov edi, 0x53; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a98: mov edi, 0x54; call 0x19ae0; add rsp, 8; ret; 
0x0000000000061b04: mov edi, 0x7894801; ret; 
0x0000000000073d11: mov edi, 0xa4; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000003cdeb: mov edi, 0xc1dee8d9; test cx, cx; jns 0x3cdb0; fchs; ret; 
0x0000000000050d1a: mov edi, 0xf7; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000001e1b6: mov edi, 0xf889fa89; or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x00000000000509f0: mov edi, 0xf8; ret; 
0x0000000000023d00: mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x000000000005bb9c: mov edi, 0xffffff9c; mov rdx, r13; syscall; 
0x0000000000059da9: mov edi, 0xffffffda; call 0x21bc0; add rsp, 8; ret; 
0x00000000000220e1: mov edi, 0xffffffea; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023219: mov edi, 0xfffffff4; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bc15: mov edi, 0xfffffff7; call 0x21bc0; add rsp, 8; ret; 
0x000000000004f40b: mov edi, 0xffffffff; call 0x15e60; lea rdi, [rip + 0x67b38]; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000001f573: mov edi, 1; mov qword ptr [rsp + 8], 0x20; syscall; 
0x0000000000023386: mov edi, 1; syscall; 
0x000000000005abf4: mov edi, 2; syscall; 
0x000000000005b812: mov edi, 2; syscall; mov eax, r8d; ret; 
0x000000000005abf4: mov edi, 2; syscall; ret; 
0x000000000006d539: mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000006d2c4: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000028fe8: mov edi, dword ptr [rax]; call 0x24480; test rax, rax; je 0x29000; pop rbx; ret; 
0x000000000005e3c3: mov edi, dword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x000000000004f645: mov edi, dword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7df: mov edi, dword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f975: mov edi, dword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x000000000005a650: mov edi, dword ptr [rbp]; call rbx; 
0x000000000006d549: mov edi, dword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000006c6a9: mov edi, dword ptr [rbx + 8]; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000005a0f9: mov edi, dword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x00000000000162a0: mov edi, dword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001ef5c: mov edi, dword ptr [rbx]; test rdi, rdi; jne 0x1ef50; xor eax, eax; pop rbx; ret; 
0x00000000000501b9: mov edi, dword ptr [rcx + 0x88]; call rax; 
0x00000000000738ab: mov edi, dword ptr [rcx + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000007b1f2: mov edi, dword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005c9a8: mov edi, dword ptr [rdi + 0x78]; call 0x15e30; movsxd rdi, eax; mov eax, 3; syscall; 
0x0000000000073d10: mov edi, dword ptr [rdi + 0xa4]; and edi, 0x7fffffff; mov eax, 0xe0; syscall; 
0x000000000006d57e: mov edi, dword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023dfa: mov edi, dword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000005e385: mov edi, dword ptr [rdx]; jmp rax; 
0x000000000005e21e: mov edi, dword ptr [rsi]; mov rdx, r12; call rax; 
0x000000000005e2f6: mov edi, dword ptr [rsi]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000003478b: mov edi, dword ptr [rsp + 0x18]; sub dword ptr [rdi], 0x78; pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000007391c: mov edi, dword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000006ce25: mov edi, dword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000021be7: mov edi, dword ptr [rsp + 8]; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x0000000000034667: mov edi, dword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x0000000000021ff7: mov edi, eax; call 0x21bc0; add rsp, 0x18; ret; 
0x00000000000438d3: mov edi, eax; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000021f76: mov edi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000067b2c: mov edi, eax; call rax; 
0x0000000000023e3c: mov edi, eax; mov eax, 0x3e; syscall; 
0x0000000000050086: mov edi, eax; mov eax, 0x69; syscall; 
0x0000000000050069: mov edi, eax; mov eax, 0x6a; syscall; 
0x000000000007443e: mov edi, eax; mov eax, 0x71; syscall; 
0x0000000000074428: mov edi, eax; mov eax, 0x72; syscall; 
0x000000000001f54e: mov edi, eax; syscall; 
0x000000000005c05e: mov edi, eax; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000007b3c5: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x000000000007b3c5: mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x00000000000746e0: mov edi, ebp; call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000005ba18: mov edi, ebp; call 0x219f0; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004c49c: mov edi, ebp; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000059baf: mov edi, ebp; call 0x21bc0; pop rbp; ret; 
0x0000000000073914: mov edi, ebp; call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000005c9f2: mov edi, ebp; call qword ptr [rbp + 0x48]; 
0x000000000005d3a6: mov edi, ebp; call qword ptr [rbp + 0x50]; 
0x0000000000045ada: mov edi, ebp; call rax; 
0x00000000000463c3: mov edi, ebp; jmp qword ptr [rsi + 0x2e]; 
0x000000000001ee38: mov edi, ebp; lea rax, [rip - 0x71]; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000000614ea: mov edi, ebp; mov edx, 0x180; syscall; 
0x000000000006fbe9: mov edi, ebp; mov esi, 0x20; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x000000000005222a: mov edi, ebp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005d1d0: mov edi, ebp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005d24e: mov edi, ebp; mov r13d, eax; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000006c4e2: mov edi, ebp; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000078965: mov edi, ebp; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000005ca08: mov edi, ebp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x000000000005217f: mov edi, ebp; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000006c209: mov edi, ebp; mov rax, r8; syscall; 
0x000000000005d539: mov edi, ebp; mov rax, r9; syscall; 
0x000000000001edf4: mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000007453c: mov edi, ebp; mov rdx, r14; syscall; 
0x000000000005bcc1: mov edi, ebp; mov rsi, r9; syscall; 
0x00000000000744eb: mov edi, ebp; mov rsi, rbx; mov rdx, r14; syscall; 
0x000000000005ba25: mov edi, ebp; mov rsi, rbx; syscall; 
0x0000000000059d62: mov edi, ebp; mov rsi, rdx; syscall; 
0x0000000000071de2: mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x0000000000059d04: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rcx; 
0x000000000002b498: mov edi, ebp; syscall; 
0x000000000005ce50: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000005c93b: mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000005ef39: mov edi, ebx; call rax; 
0x000000000005edc0: mov edi, ebx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000006c113: mov edi, ebx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006bfb1: mov edi, ebx; mov rax, r8; syscall; 
0x000000000002b470: mov edi, ebx; mov rax, rdx; syscall; 
0x00000000000438cb: mov edi, ebx; mov rsi, rbp; syscall; 
0x0000000000075932: mov edi, ecx; add rsp, 0x190; jmp rax; 
0x000000000005be26: mov edi, ecx; mov rsi, rdx; syscall; 
0x0000000000067acf: mov edi, edi; call rax; 
0x0000000000070e56: mov edi, edi; dec dword ptr [rax - 0x77]; ret; 
0x000000000006638a: mov edi, edi; inc dword ptr [rbx - 0x7bf00008]; ret 0xfffe; 
0x0000000000041ad0: mov edi, edi; lea rcx, [rsp + 0x38]; call rax; 
0x000000000002343b: mov edi, edi; mov eax, 0x122; syscall; 
0x000000000005c288: mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023dc8: mov edi, edi; mov eax, 0x7a; syscall; 
0x0000000000023da8: mov edi, edi; mov eax, 0x7b; syscall; 
0x0000000000023508: mov edi, edi; mov esi, esi; mov eax, 0x12c; syscall; 
0x000000000006df04: mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000006ce60: mov edi, edi; mov rax, r8; syscall; 
0x000000000004ed1d: mov edi, edx; call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000073b0f: mov edi, edx; syscall; 
0x000000000001fc88: mov edi, esi; call 0x7af3d; mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000001e91d: mov edi, esi; call rax; 
0x0000000000050127: mov edi, esi; nop dword ptr [rax]; mov rax, r8; syscall; 
0x00000000000232be: mov edi, esi; syscall; 
0x00000000000232be: mov edi, esi; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006070f: mov edi, esp; call 0x5d1b0; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000599bd: mov edi, esp; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x000000000006ffac: mov edi, esp; call rax; 
0x0000000000070428: mov edi, esp; mov r8, rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000007010d: mov edi, esp; mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x000000000006d3f9: mov edi, esp; mov rax, r8; syscall; 
0x000000000004c536: mov edi, esp; mov rbp, rcx; push rbx; mov rbx, rsi; syscall; 
0x000000000004c590: mov edi, esp; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000007478c: mov edi, esp; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000005c0c9: mov edi, esp; mov rsi, rsp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1b9: mov edi, esp; mov rsi, rsp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000005f3f5: mov edi, esp; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000043680: mov edi, esp; syscall; 
0x00000000000691aa: mov edi, esp; xor esi, esi; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x00000000000343b4: mov edx, 0; add byte ptr [rax], al; lock dec dword ptr [rax + 1]; ret 0x8948; 
0x000000000006a8a6: mov edx, 0; cmove rax, rdx; ret; 
0x000000000006936c: mov edx, 0; cmp byte ptr [rax], bl; pop rbx; cmovne rax, rdx; ret; 
0x000000000005bcb6: mov edx, 0x1000; mov eax, 0x106; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000005bab5: mov edx, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006e8eb: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000006b9fc: mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f646: mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x000000000006f01f: mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x00000000000614ec: mov edx, 0x180; syscall; 
0x0000000000030baa: mov edx, 0x21483ff0; retf 0x948; shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x0000000000074382: mov edx, 0x21; nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000005bae3: mov edx, 0x2a0100; syscall; 
0x0000000000041572: mov edx, 0x39000335; ret; 
0x000000000003a405: mov edx, 0x39483ff2; ret 0x4377; 
0x0000000000019479: mov edx, 0x39483ff2; ret 0x870f; 
0x000000000001f4de: mov edx, 0x3c; nop dword ptr [rax + rax]; mov rax, rdx; syscall; 
0x000000000006d415: mov edx, 0x3c; xor edi, edi; nop dword ptr [rax]; mov rax, rdx; syscall; 
0x000000000006e9b2: mov edx, 0x44000000; mov esi, esp; mov eax, 0xca; or esi, 7; syscall; 
0x000000000005c3e9: mov edx, 0x441f0f66; add byte ptr [rax], al; syscall; 
0x0000000000071e12: mov edx, 0x48000425; test eax, eax; je 0x71e26; call rax; 
0x0000000000071f02: mov edx, 0x5effff96; pop rdi; neg eax; add rsp, 8; ret; 
0x000000000006bdc2: mov edx, 0x5f; cmove eax, edx; ret; 
0x000000000004f430: mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x000000000006f016: mov edx, 0x7fffffff; lock cmpxchg dword ptr [rdi], edx; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x0000000000015a60: mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a35: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000015bd2: mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000006edf6: mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006c6f8: mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c203: mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000007462c: mov edx, 0x80000000; syscall; 
0x000000000004c5eb: mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074dba: mov edx, 0x800; mov rax, r9; syscall; 
0x000000000001e771: mov edx, 0x800; mov rsi, r9; syscall; 
0x0000000000023ffa: mov edx, 0x800; syscall; 
0x00000000000684d9: mov edx, 0x8778948; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000003f7a5: mov edx, 0x89483ee8; ret 0xf748; 
0x0000000000019543: mov edx, 0x9483ff2; ret; 
0x000000000006f2ea: mov edx, 0xb; cmovne eax, edx; ret; 
0x000000000003f466: mov edx, 0xc14835e8; loope 0x3f48d; or rdx, rcx; mov rax, r8; ret; 
0x000000000002cda2: mov edx, 0xc7ffff26; add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x000000000002b46a: mov edx, 0xc; mov rdi, rbx; mov rax, rdx; syscall; 
0x000000000006dc71: mov edx, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005f155: mov edx, 0xd0; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000007503b: mov edx, 0xfa9edfe8; jmp qword ptr [rsi + 0x2e]; 
0x00000000000314cc: mov edx, 0xff20007; pop rcx; ret 0xff2; 
0x000000000007026e: mov edx, 0xfffffffe; cmovne eax, edx; add rsp, 8; ret; 
0x000000000004596d: mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000002a363: mov edx, 0xffffffff; cmove rax, rdx; ret; 
0x000000000002467e: mov edx, 0xffffffff; setb al; movzx eax, al; cmova eax, edx; ret; 
0x0000000000072630: mov edx, 1; cmovae eax, edx; ret; 
0x000000000006d239: mov edx, 1; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c9: mov edx, 1; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005e173: mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c74c: mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x0000000000060af9: mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f73b: mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc76: mov edx, 1; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8c3: mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3ee: mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc6: mov edx, 1; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce55: mov edx, 1; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52e: mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa6: mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c823: mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000001fa0f: mov edx, 1; mov rax, r8; syscall; 
0x000000000006e9fe: mov edx, 1; mov rax, r9; syscall; 
0x000000000005016c: mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743c2: mov edx, 1; mov rdi, r8; syscall; 
0x000000000005d3a0: mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005ce4a: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c935: mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000006c10d: mov edx, 1; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000074f67: mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000005ca0e: mov edx, 1; pop rbp; jmp rax; 
0x000000000001fb2a: mov edx, 1; syscall; 
0x000000000006cc26: mov edx, 1; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000005caec: mov edx, 2; syscall; 
0x00000000000702ad: mov edx, 2; test eax, eax; cmovne eax, edx; add rsp, 8; ret; 
0x0000000000060818: mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000050121: mov edx, 4; mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x00000000000745fb: mov edx, 4; syscall; 
0x000000000005abc8: mov edx, 8; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba8: mov edx, 8; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023f8e: mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005af19: mov edx, 8; mov eax, 0xd; syscall; 
0x000000000005b808: mov edx, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000073b04: mov edx, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000006f5c7: mov edx, 8; mov eax, 0xe; syscall; 
0x000000000005abe8: mov edx, 8; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000001f543: mov edx, 8; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x000000000006d541: mov edx, 8; syscall; 
0x000000000006d541: mov edx, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000001eef6: mov edx, dword ptr [0]; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f09a: mov edx, dword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f436: mov edx, dword ptr [0]; syscall; 
0x000000000006d59e: mov edx, dword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006b7e1: mov edx, dword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000006d2c1: mov edx, dword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000006a8a2: mov edx, dword ptr [rax]; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000005ef6a: mov edx, dword ptr [rbx + 0x28]; pop rbx; sub rdx, rcx; add rax, rdx; ret; 
0x000000000005ef4c: mov edx, dword ptr [rbx + 8]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x00000000000428bf: mov edx, dword ptr [rcx + 0x18]; mov dword ptr [rsp], 8; syscall; 
0x0000000000052856: mov edx, dword ptr [rcx - 4]; test edx, edx; jns 0x5283d; mov dword ptr [r8], 0xffffffff; ret; 
0x000000000005e375: mov edx, dword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000006b823: mov edx, dword ptr [rdi]; cmp edx, r9d; je 0x6b810; ret; 
0x000000000004ed1a: mov edx, dword ptr [rdi]; mov rdi, r10; call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004436e: mov edx, dword ptr [rdi]; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000006d204: mov edx, dword ptr [rip + 0x49d46]; test edx, edx; jne 0x6d210; ret; 
0x000000000006ae58: mov edx, dword ptr [rsi + rax*4]; mov dword ptr [r8 + rax*4], edx; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x0000000000052808: mov edx, dword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000067ac1: mov edx, dword ptr [rsp + 0x18]; sub r15, qword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x000000000005bce9: mov edx, dword ptr [rsp + 8]; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000007b21d: mov edx, dword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000060d3f: mov edx, eax; cmp eax, -0x15; jne 0x60d4f; mov eax, 0x54; syscall; 
0x000000000005b9fa: mov edx, eax; cmp eax, -9; jne 0x5ba40; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000005bc8e: mov edx, eax; cmp eax, -9; jne 0x5bd31; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000746c2: mov edx, eax; cmp eax, -9; jne 0x74700; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000607ad: mov edx, eax; js 0x60840; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000048013: mov edx, eax; mov eax, 3; syscall; 
0x000000000007b3e2: mov edx, eax; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x0000000000023456: mov edx, eax; movsxd rdi, edx; call 0x21bc0; add rsp, 8; ret; 
0x000000000003fb8b: mov edx, eax; neg edx; xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x000000000004f013: mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x0000000000018069: mov edx, eax; shr rax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000001fc15: mov edx, eax; syscall; 
0x000000000001fc15: mov edx, eax; syscall; neg eax; ret; 
0x000000000004a75a: mov edx, eax; test eax, eax; je 0x4a780; movsxd rdi, ebx; mov eax, 3; syscall; 
0x00000000000786b3: mov edx, eax; xor eax, eax; call rdx; 
0x000000000005b5c2: mov edx, ebp; mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x0000000000041acd: mov edx, ebp; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x000000000001edf7: mov edx, ebp; mov rsi, r12; call rbx; 
0x000000000004c593: mov edx, ebp; movsxd rsi, esi; syscall; 
0x000000000005babe: mov edx, ebp; syscall; 
0x000000000005bbc2: mov edx, ebx; mov eax, 0x10c; syscall; 
0x000000000006e5e9: mov edx, ebx; mov rax, r8; syscall; 
0x000000000005cc34: mov edx, ebx; syscall; 
0x0000000000074fde: mov edx, ecx; lea r8, [rsp + 7]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x000000000002413b: mov edx, ecx; mov eax, 0x114; syscall; 
0x00000000000240cc: mov edx, ecx; mov eax, 0x115; syscall; 
0x0000000000024238: mov edx, ecx; mov eax, 0x116; syscall; 
0x0000000000023999: mov edx, ecx; mov eax, 0xa5; syscall; 
0x00000000000242a5: mov edx, ecx; mov eax, 0xbf; syscall; 
0x00000000000242c5: mov edx, ecx; mov eax, 0xc0; syscall; 
0x000000000005bff9: mov edx, ecx; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000007b3e5: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3e5: mov edx, ecx; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x00000000000747de: mov edx, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x0000000000024369: mov edx, ecx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024399: mov edx, ecx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000023be5: mov edx, ecx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023bc5: mov edx, ecx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000242e5: mov edx, ecx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000022129: mov edx, ecx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x00000000000239f9: mov edx, ecx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000243c9: mov edx, ecx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000023d29: mov edx, ecx; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000075099: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024279: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000023ca9: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000024015: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023345: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x0000000000074c39: mov edx, ecx; movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x00000000000233b9: mov edx, ecx; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x00000000000234d9: mov edx, ecx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x0000000000024189: mov edx, ecx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023b99: mov edx, ecx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000023d85: mov edx, ecx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000001f947: mov edx, ecx; syscall; 
0x000000000001e1e7: mov edx, edi; mov eax, edi; and edx, 0x5f; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x000000000001e1b7: mov edx, edi; mov eax, edi; or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x000000000005abc5: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba5: mov edx, edi; mov r10d, 8; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023371: mov edx, edi; syscall; 
0x0000000000043eaf: mov edx, edx; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000005bf7b: mov edx, edx; mov eax, 0x102; syscall; 
0x000000000002392c: mov edx, edx; mov eax, 0x145; syscall; 
0x000000000007426a: mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bfa: mov edx, edx; mov eax, 0x5e; syscall; 
0x000000000002365b: mov edx, edx; mov eax, 0xfe; syscall; 
0x000000000001f930: mov edx, edx; mov rax, r8; syscall; 
0x000000000005bffb: mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000001fc08: mov edx, edx; movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x00000000000747d8: mov edx, edx; movsxd rdi, edi; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000005bb40: mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x000000000001f9ba: mov edx, edx; syscall; 
0x00000000000469f4: mov edx, esi; mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x000000000006b3c9: mov edx, esi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b459: mov edx, esi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x000000000006d4ae: mov edx, esi; syscall; 
0x00000000000688e9: mov edx, esi; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x0000000000059c18: mov edx, esi; xor esi, esi; call 0x7b2b1; mov eax, r12d; pop r12; ret; 
0x000000000005e221: mov edx, esp; call rax; 
0x00000000000162fb: mov edx, esp; mov dword ptr [rsp + 0x14], eax; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000005c527: mov edx, esp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000074ba1: mov edx, esp; mov eax, 0x10; syscall; 
0x000000000005e2f9: mov edx, esp; mov rsi, r13; call rax; 
0x000000000005edba: mov edx, esp; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000005edb9: mov edx, r12d; mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000041acc: mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x000000000007572e: mov es, esp; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000006f53c: mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000001f97b: mov esi, 0x10; mov rax, r8; syscall; 
0x000000000006e76e: mov esi, 0x18; lea rdi, [r9 + 0x88]; syscall; 
0x000000000006d451: mov esi, 0x18; syscall; 
0x000000000006fbeb: mov esi, 0x20; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x0000000000073cba: mov esi, 0x20; syscall; 
0x0000000000073cba: mov esi, 0x20; syscall; xor eax, eax; ret; 
0x000000000006c3d1: mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000006c3d1: mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000002386f: mov esi, 0x22; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x0000000000023d05: mov esi, 0x28121969; syscall; 
0x0000000000023d05: mov esi, 0x28121969; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000001f92a: mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x0000000000063081: mov esi, 0x53be0fc8; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000005c52e: mov esi, 0x5413; syscall; 
0x000000000006b463: mov esi, 0x5414; syscall; 
0x0000000000061ae4: mov esi, 0x7894801; ret; 
0x000000000001ed07: mov esi, 0x8002; lea rdi, [rip + 0x93499]; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000004213c: mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000006d489: mov esi, 0x80; or esi, 1; mov rax, r15; mov rdx, r10; syscall; 
0x00000000000614e1: mov esi, 0x80c2; mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x0000000000060afe: mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f740: mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x0000000000015a65: mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x000000000006e9f3: mov esi, 0x81; mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x000000000006dc7b: mov esi, 0x81; mov rax, r10; syscall; 
0x0000000000015a3a: mov esi, 0x81; mov rax, r8; syscall; 
0x000000000005c8c8: mov esi, 0x81; mov rax, r8; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x0000000000015bd7: mov esi, 0x81; mov rax, r9; syscall; 
0x000000000006d3f3: mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdcb: mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce5a: mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000006edfb: mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000005d533: mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfab: mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x0000000000020b99: mov esi, 0x83003544; retf 0x3920; ret 0x3975; 
0x0000000000020bd2: mov esi, 0x83003544; retf 0x3920; ret 0xcb74; 
0x00000000000251e1: mov esi, 0x83480143; ret; 
0x000000000004bec9: mov esi, 0x83480146; mov byte ptr [rcx], 0x89; ret 0xe883; 
0x0000000000063084: mov esi, 0x83480153; ret; 
0x000000000006cc2d: mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000005c72d: mov esi, 0x88000; mov rax, r14; mov rdi, r13; syscall; 
0x0000000000060546: mov esi, 0x8900053b; ret; 
0x0000000000063164: mov esi, 0x89440253; sal bh, 1; rol cl, 1; call 0x244aba91; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000002981c: mov esi, 0x89480714; ret; 
0x0000000000064e2e: mov esi, 0x89fffbcc; ret 0xbdeb; 
0x000000000004f381: mov esi, 0x8d480002; add eax, 0x67c8d; pop rbp; ret; 
0x000000000005f0e6: mov esi, 0xc0; ret; 
0x0000000000063371: mov esi, 0xc38348d0; add dword ptr [rbp - 0x77], eax; ret 0x428d; 
0x0000000000020d14: mov esi, 0xca833104; and byte ptr [rcx], bh; ret 0x3b75; 
0x0000000000020d4f: mov esi, 0xca833104; and byte ptr [rcx], bh; ret 0xc574; 
0x00000000000677a8: mov esi, 0xe80004ac; jmp qword ptr [rbx]; 
0x000000000006a039: mov esi, 0xf8894836; test sil, sil; jne 0x6a048; pop rbp; ret; 
0x00000000000711d1: mov esi, 0xfffd20e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000074421: mov esi, 0xffffffff; mov rdi, rax; mov eax, 0x72; syscall; 
0x000000000006d4a3: mov esi, 1; mov eax, 0xca; mov rdx, rsi; syscall; 
0x000000000006c6f3: mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1fe: mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000015ba0: mov esi, 1; mov rax, r8; syscall; 
0x000000000006ed0b: mov esi, 1; mov rax, r8; syscall; ret; 
0x0000000000015beb: mov esi, 1; mov rax, r9; syscall; 
0x00000000000502c8: mov esi, 1; syscall; 
0x00000000000469f6: mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x0000000000045187: mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000001fa0a: mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000074d8e: mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x0000000000050167: mov esi, 2; mov edx, 1; mov rdi, r14; syscall; 
0x00000000000743bd: mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x000000000001fb25: mov esi, 2; mov edx, 1; syscall; 
0x000000000005c5b9: mov esi, 3; mov rax, r8; syscall; 
0x000000000006cc3d: mov esi, 3; mov rax, rbx; syscall; 
0x000000000001f9af: mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000004c5e6: mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074db5: mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x0000000000023ff5: mov esi, 4; mov edx, 0x800; syscall; 
0x000000000005c5cb: mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005ec4e: mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000006ebe7: mov esi, 6; syscall; 
0x000000000005b4fd: mov esi, 8; syscall; 
0x000000000001fa50: mov esi, 9; mov rax, r8; mov rdx, r10; syscall; 
0x0000000000023e36: mov esi, 9; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000074451: mov esi, dword ptr [rax + 8]; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005222c: mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005217c: mov esi, dword ptr [rax]; mov rdi, rbp; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000023dfd: mov esi, dword ptr [rbx + 8]; syscall; 
0x00000000000501b2: mov esi, dword ptr [rcx + 0xa0]; mov rdi, qword ptr [rcx + 0x88]; call rax; 
0x000000000007b1ee: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000006b26d: mov esi, dword ptr [rdi + 8]; and esi, 0xffffeff0; or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x0000000000074f6d: mov esi, eax; mov eax, 0x59; syscall; 
0x000000000005e122: mov esi, eax; mov r13d, eax; mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000007592f: mov esi, eax; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000001f55c: mov esi, eax; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000074374: mov esi, eax; syscall; 
0x00000000000614ff: mov esi, eax; test eax, eax; js 0x614d0; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000005e2fc: mov esi, ebp; call rax; 
0x000000000005edbd: mov esi, ebp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000005cc31: mov esi, ebp; mov rdx, rbx; syscall; 
0x00000000000502d7: mov esi, ebp; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x00000000000438ce: mov esi, ebp; syscall; 
0x000000000005a643: mov esi, ebx; call 0x5a620; test rbx, rbx; je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000006141c: mov esi, ebx; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000744ee: mov esi, ebx; mov rdx, r14; syscall; 
0x000000000007478f: mov esi, ebx; mov rdx, rbp; syscall; 
0x0000000000043bdb: mov esi, ebx; syscall; 
0x000000000006e628: mov esi, ecx; mov eax, 0xca; or esi, 7; syscall; 
0x000000000001f9fc: mov esi, ecx; mov rdx, r10; syscall; 
0x000000000005c2ec: mov esi, ecx; mov rdx, r8; syscall; 
0x000000000001e777: mov esi, ecx; syscall; 
0x000000000007b376: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000007b376: mov esi, edi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x0000000000067b29: mov esi, edi; mov rdi, r8; call rax; 
0x00000000000746dd: mov esi, edi; mov rdi, rbp; call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x0000000000042788: mov esi, edi; test eax, eax; jg 0x4279e; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000021a8b: mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x000000000005bc86: mov esi, edx; mov rdi, rbp; syscall; 
0x0000000000059d65: mov esi, edx; syscall; 
0x000000000006c82c: mov esi, edx; syscall; cmp rax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1d9: mov esi, edx; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000006d249: mov esi, edx; syscall; cmp rax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x000000000005f794: mov esi, edx; syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b54: mov esi, edx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000005c8e4: mov esi, edx; syscall; ret; 
0x000000000005b803: mov esi, edx; xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000002350a: mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023908: mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005bf58: mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005b9b8: mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000005bfd8: mov esi, esi; mov eax, 0x85; syscall; 
0x00000000000411cb: mov esi, esi; mov eax, 0x8c; syscall; 
0x0000000000023978: mov esi, esi; mov eax, 0xb0; syscall; 
0x0000000000074268: mov esi, esi; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bf8: mov esi, esi; mov edx, edx; mov eax, 0x5e; syscall; 
0x000000000005bb99: mov esi, esi; mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000023528: mov esi, esi; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x000000000004275b: mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x000000000005c757: mov esi, esi; syscall; 
0x000000000006756b: mov esi, esp; call rax; 
0x000000000001edfa: mov esi, esp; call rbx; 
0x000000000005cae5: mov esi, esp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000004129e: mov esi, esp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000006e9b7: mov esi, esp; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000071d36: mov esi, esp; mov eax, 0xe5; movsxd rdi, r8d; syscall; 
0x00000000000703f2: mov esi, esp; mov eax, 5; mov rdi, r12; syscall; 
0x0000000000071de0: mov esi, esp; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x0000000000078962: mov esi, esp; mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x0000000000059d01: mov esi, esp; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rcx; 
0x000000000005c0cc: mov esi, esp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1bc: mov esi, esp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000005e17e: mov esi, esp; syscall; 
0x000000000006e9b6: mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006e627: mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000003fded: mov esp, 0x1478dff; ret; 
0x000000000003fdcd: mov esp, 0x1c083c0; ret; 
0x000000000002af07: mov esp, 0x37000; add byte ptr [rbx + 0xf], ah; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x00000000000354e8: mov esp, 0x48000794; add esp, 0x28; ret; 
0x000000000002c3c3: mov esp, 0x83000884; ret; 
0x0000000000057b83: mov esp, 0x89d1894c; ret 0xb941; 
0x0000000000077932: mov esp, 0xd824; add al, ch; ret; 
0x000000000003e4e9: mov esp, 0xe8fffffe; or bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000328b5: mov esp, 0xff20007; pop rcx; ret 0x96eb; 
0x000000000007b1e6: mov esp, dword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000007b1f6: mov esp, dword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000001ee01: mov esp, dword ptr [rdx - 1]; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d1d3: mov esp, eax; call qword ptr [rbp + 0x18]; 
0x000000000001e3d9: mov esp, eax; pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x000000000005b52c: mov esp, eax; test eax, eax; jne 0x5b540; mov eax, r12d; pop r12; ret; 
0x0000000000042087: mov esp, eax; test eax, eax; js 0x42098; mov eax, r12d; pop r12; ret; 
0x0000000000037ea6: mov esp, ebp; add al, 0; add byte ptr [rsi + 0xf], ah; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000000694b7: mov esp, edi; call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a27: mov esp, edi; call 0x69170; mov rax, r12; pop r12; ret; 
0x0000000000079333: mov esp, edx; jmp rax; 
0x0000000000067561: mov esp, esi; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x000000000004cdf0: mov gs, eax; sub ah, byte ptr [rcx]; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000056645: mov gs, word ptr [rdx - 0x76fffff8]; ret 0x72e9; 
0x000000000005059c: mov qword ptr [r12 + 8], rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000000446cb: mov qword ptr [r12], rbp; mov rax, -1; pop rbx; pop rbp; pop r12; ret; 
0x00000000000447c0: mov qword ptr [r12], rbp; pop rbx; mov rax, rdx; pop rbp; pop r12; ret; 
0x000000000002249e: mov qword ptr [r12], rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a2bc: mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x000000000006a29b: mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000005e6eb: mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000075bbf: mov qword ptr [r8 + 0x88], rdi; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000001e759: mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x0000000000029a2e: mov qword ptr [r8], rcx; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000070b94: mov qword ptr [r8], rcx; cmp r10d, 5; jle 0x70bb4; add r9, 6; mov byte ptr [r9], 0; ret; 
0x0000000000070bb1: mov qword ptr [r8], rdi; add r9, rax; mov byte ptr [r9], 0; ret; 
0x0000000000076569: mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x000000000006d5a5: mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006d5c1: mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005f0dd: mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000002aecb: mov qword ptr [rax + 8], rbx; mov rax, qword ptr [rbx + 8]; mov qword ptr [rax], rbx; mov rax, r10; pop rbx; ret; 
0x000000000005a34e: mov qword ptr [rax + 8], rdi; ret; 
0x000000000001f268: mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000005fd9f: mov qword ptr [rax], r12; call 0x5fd70; mov rax, r12; pop r12; ret; 
0x000000000002acc4: mov qword ptr [rax], rbx; lock or dword ptr [rbx + 0x1c], esi; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x000000000002aed3: mov qword ptr [rax], rbx; mov rax, r10; pop rbx; ret; 
0x000000000005a389: mov qword ptr [rax], rdx; ret; 
0x00000000000527eb: mov qword ptr [rbp + 8], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000071e85: mov qword ptr [rbp + 8], rax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000042fdb: mov qword ptr [rbp], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000052af2: mov qword ptr [rbp], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000070432: mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x0000000000046a50: mov qword ptr [rbp], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000001eae8: mov qword ptr [rbx + 0x10], rbx; mov qword ptr [rbx + 0x20], rax; xor eax, eax; mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000005cda3: mov qword ptr [rbx + 0x10], rdx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000001eaf2: mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000001eaec: mov qword ptr [rbx + 0x20], rax; xor eax, eax; mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000005edca: mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x0000000000072259: mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x0000000000072252: mov qword ptr [rbx + 0x30], rax; mov rax, rbx; mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x000000000005edc2: mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x00000000000762f1: mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000006d2cb: mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000005ede7: mov qword ptr [rbx + 8], 0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000050600: mov qword ptr [rbx + 8], rax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000006bd23: mov qword ptr [rbx + 8], rax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x0000000000050665: mov qword ptr [rbx + 8], rax; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000005cdaa: mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000005a0d3: mov qword ptr [rbx], 0; pop rbx; pop rbp; pop r12; ret; 
0x000000000005a100: mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000072a3b: mov qword ptr [rbx], rax; add rsp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002cd53: mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000006ddf0: mov qword ptr [rbx], rbp; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000069b38: mov qword ptr [rbx], rdx; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002a358: mov qword ptr [rcx + 0xa8], rdi; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000005f15a: mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005d12e: mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000006be1f: mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000006d5a1: mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x00000000000684de: mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006bdf7: mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000005cdfb: mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000005d126: mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005cdf3: mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x0000000000060a82: mov qword ptr [rdi + 0x28], rcx; mov byte ptr [rdx], al; mov eax, esi; ret; 
0x000000000007b218: mov qword ptr [rdi + 0x30], rdx; mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000005d11e: mov qword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x000000000005cdef: mov qword ptr [rdi + 0x38], rax; mov qword ptr [rdi + 0x28], rax; add rax, qword ptr [rdi + 0x60]; mov qword ptr [rdi + 0x20], rax; xor eax, eax; ret; 
0x000000000007b220: mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x0000000000060f65: mov qword ptr [rdi + 0x60], 0; ret; 
0x0000000000060f2f: mov qword ptr [rdi + 0x60], rcx; cmp edx, 1; je 0x60f40; or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000005f1c5: mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000005f192: mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x00000000000684e2: mov qword ptr [rdi + 0x98], r9; ret; 
0x0000000000021ae6: mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005a358: mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000005d136: mov qword ptr [rdi + 8], 0; ret; 
0x00000000000507c4: mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x00000000000684b5: mov qword ptr [rdi + 8], rax; movzx eax, byte ptr [rsi]; mov byte ptr [r11], al; mov eax, 1; ret; 
0x000000000005d5ce: mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000684da: mov qword ptr [rdi + 8], rsi; mov qword ptr [rdi + 0x10], rsi; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006bd68: mov qword ptr [rdi + 8], rsi; xor eax, eax; ret; 
0x000000000007b338: mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000007b333: mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000007b32e: mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000007b329: mov qword ptr [rdi + rdx - 0x3f], rax; mov qword ptr [rdi + rdx - 0x37], rax; mov qword ptr [rdi + rdx - 0x2f], rax; mov qword ptr [rdi + rdx - 0x27], rax; mov rax, rdi; ret; 
0x000000000006c7f0: mov qword ptr [rdi], -1; xor eax, eax; ret; 
0x000000000005a360: mov qword ptr [rdi], 0; ret; 
0x000000000005b1e4: mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x0000000000070b1e: mov qword ptr [rdi], rax; call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x00000000000619e5: mov qword ptr [rdi], rax; ret; 
0x000000000003a781: mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000005b18a: mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005a777: mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000003a79d: mov qword ptr [rdi], rdx; ret; 
0x000000000006bdf2: mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000006be29: mov qword ptr [rdi], rsi; ret; 
0x000000000001eefd: mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005fd9b: mov qword ptr [rdx + 0x68], r12; mov qword ptr [rax], r12; call 0x5fd70; mov rax, r12; pop r12; ret; 
0x000000000006c3e7: mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000005f0a1: mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000005f153: mov qword ptr [rdx + 0xd0], rdi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005f08d: mov qword ptr [rdx + 0xd8], rax; ret; 
0x0000000000061a18: mov qword ptr [rdx + 8], rax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000005a380: mov qword ptr [rdx + 8], rax; test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x0000000000061a00: mov qword ptr [rdx + 8], rcx; fld xword ptr [rax]; fstp xword ptr [rdi]; ret; 
0x000000000006bc0c: mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000006f59f: mov qword ptr [rdx], rsi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000787b6: mov qword ptr [rip + 0x3e707], 0; add rsp, 8; ret; 
0x00000000000762ea: mov qword ptr [rip + 0x40c1f], rbx; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000006a1f2: mov qword ptr [rip + 0x4cc5f], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000060bf4: mov qword ptr [rip + 0x536ad], rcx; mov byte ptr [rdx], dil; ret; 
0x0000000000060bb0: mov qword ptr [rip + 0x536f1], rcx; mov byte ptr [rdx], dil; ret; 
0x00000000000605a3: mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x000000000005f818: mov qword ptr [rip + 0x54969], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e4: mov qword ptr [rip + 0x5499d], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000005a068: mov qword ptr [rip + 0x5cbdd], 0; add rsp, 8; ret; 
0x000000000004efca: mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x000000000004efa7: mov qword ptr [rip + 0x67e8a], rax; ret; 
0x000000000004df10: mov qword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004def9: mov qword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x000000000004d030: mov qword ptr [rip + 0x69dd5], 0; ret; 
0x000000000004d019: mov qword ptr [rip + 0x69dec], 0; add rsp, 8; ret; 
0x000000000002b490: mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x0000000000022e2b: mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x0000000000022dd0: mov qword ptr [rip + 0x93f9d], 0; ret; 
0x0000000000022db9: mov qword ptr [rip + 0x93fb4], 0; add rsp, 8; ret; 
0x000000000001f26c: mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000005f0e4: mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000007620a: mov qword ptr [rsi + rax*8], rdx; mov rcx, qword ptr [rdi + 0x10]; add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x000000000006bc0f: mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000005d174: mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x000000000006dd8a: mov qword ptr [rsi], rax; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000006bba8: mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000007b3b6: mov qword ptr [rsi], rcx; syscall; 
0x000000000005a343: mov qword ptr [rsi], rdi; mov rax, qword ptr [rdi]; test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x0000000000067b0f: mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000041489: mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b58: mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000023752: mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x0000000000016304: mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x0000000000041256: mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000005c376: mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000005afa7: mov qword ptr [rsp + 0x20], rax; mov eax, 0xe; syscall; 
0x0000000000023c55: mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x00000000000746b5: mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x0000000000073afe: mov qword ptr [rsp + 0x28], rax; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000004fcd2: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9eb: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074752: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x0000000000015b61: mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000006db0e: mov qword ptr [rsp + 0x70], rax; mov eax, 0xe; syscall; 
0x00000000000703d0: mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000001f578: mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000007b3f1: mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3f1: mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000004147f: mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b4e: mov qword ptr [rsp + 8], rax; lea rax, [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x0000000000074414: mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000074b99: mov qword ptr [rsp + 8], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000003465c: mov qword ptr [rsp + 8], rdi; call 0x345e0; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x00000000000346e4: mov qword ptr [rsp + 8], rdi; call 0x34680; mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x0000000000044a2a: mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000003cdc8: mov qword ptr [rsp - 0x28], rax; mov dword ptr [rsp - 0x20], edx; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x000000000007b3e4: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3e4: mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000006e5e8: mov r10, rbx; mov rax, r8; syscall; 
0x0000000000074fdd: mov r10, rcx; lea r8, [rsp + 7]; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x0000000000023998: mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000000242a4: mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000000242c4: mov r10, rcx; mov eax, 0xc0; syscall; 
0x000000000005bff8: mov r10, rcx; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000024368: mov r10, rcx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024398: mov r10, rcx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000023be4: mov r10, rcx; movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023bc4: mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000242e4: mov r10, rcx; movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000022128: mov r10, rcx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x00000000000239f8: mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000243c8: mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000023d28: mov r10, rcx; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000075098: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024278: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000023ca8: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000024014: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023344: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x0000000000074c38: mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x00000000000233b8: mov r10, rcx; movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x00000000000234d8: mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x0000000000024188: mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023b98: mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000023d84: mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000001fc07: mov r10, rdx; movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x000000000005bcb5: mov r10d, 0x1000; mov eax, 0x106; mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000005bab4: mov r10d, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006dc70: mov r10d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000006cc25: mov r10d, 1; xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000005abc7: mov r10d, 8; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba7: mov r10d, 8; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005af18: mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000005b807: mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000073b03: mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000006f5c6: mov r10d, 8; mov eax, 0xe; syscall; 
0x000000000005abe7: mov r10d, 8; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000001f542: mov r10d, 8; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x000000000006d540: mov r10d, 8; syscall; 
0x000000000006d540: mov r10d, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000005bc8d: mov r10d, eax; cmp eax, -9; jne 0x5bd31; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000004a759: mov r10d, eax; test eax, eax; je 0x4a780; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000002413a: mov r10d, ecx; mov eax, 0x114; syscall; 
0x00000000000240cb: mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000024237: mov r10d, ecx; mov eax, 0x116; syscall; 
0x00000000000747dd: mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000007418b: mov r11b, 0xfa; call qword ptr [rax - 0x5e1f00d]; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x000000000007b1e5: mov r12, qword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000067560: mov r12, r14; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x00000000000694b6: mov r12, rdi; call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a26: mov r12, rdi; call 0x69170; mov rax, r12; pop r12; ret; 
0x000000000005d1d2: mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000001e3d8: mov r12d, eax; pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x000000000005b52b: mov r12d, eax; test eax, eax; jne 0x5b540; mov eax, r12d; pop r12; ret; 
0x0000000000042086: mov r12d, eax; test eax, eax; js 0x42098; mov eax, r12d; pop r12; ret; 
0x000000000007b1e9: mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000005e215: mov r13, rsi; test r12, r12; je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000005d250: mov r13d, eax; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005e124: mov r13d, eax; mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000007b1ed: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x00000000000614fe: mov r14d, eax; test eax, eax; js 0x614d0; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000007b1f1: mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000075cce: mov r8, qword ptr [r8 + 0x18]; test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x0000000000022e8b: mov r8, qword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x000000000007b3e7: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3e7: mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000006c4de: mov r8, r9; mov rdi, r13; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000074760: mov r8, rax; cmp eax, -9; jne 0x747a0; mov eax, 0x48; mov esi, 1; syscall; 
0x000000000007042a: mov r8, rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x0000000000045ad4: mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x0000000000074408: mov r8, rdi; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000006e7ce: mov r8d, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000000023f9e: mov r8d, 0x11a; syscall; 
0x000000000007431e: mov r8d, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x00000000000603e9: mov r8d, 0x3d; nop; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000001f924: mov r8d, 0x48; mov esi, 0x406; mov rdx, r10; mov rax, r8; syscall; 
0x000000000005c5b0: mov r8d, 0x48; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000006e830: mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x0000000000023869: mov r8d, 0xc8; mov esi, 0x22; nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000006f095: mov r8d, 0xca; cmove rsi, r10; mov rax, r8; syscall; 
0x0000000000015a5a: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a2f: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf0: mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006d233: mov r8d, 0xca; mov edx, 1; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c3: mov r8d, 0xca; mov edx, 1; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8bd: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3e8: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc0: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce4f: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000006bfa0: mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c81d: mov r8d, 0xca; mov edx, 1; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c107: mov r8d, 0xca; mov edx, 1; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6ed: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1f8: mov r8d, 0xca; mov esi, 1; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce1e: mov r8d, 0xca; mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000043f00: mov r8d, 0xffffffff; mov dword ptr [rax], ebx; mov eax, r8d; pop rbx; ret; 
0x00000000000458f7: mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x000000000002c63d: mov r8d, 1; mov eax, r8d; ret; 
0x000000000005c880: mov r8d, 1; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000002d068: mov r8d, 2; sbb r8d, -1; mov eax, r8d; ret; 
0x000000000002cfd9: mov r8d, 4; cmp eax, 0x7ff; je 0x2cff0; mov eax, r8d; ret; 
0x000000000002d036: mov r8d, 4; cmp eax, 0xff; je 0x2d050; mov eax, r8d; ret; 
0x0000000000074d5e: mov r8d, eax; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000001e404: mov r8d, eax; mov eax, 1; test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x00000000000745e0: mov r8d, eax; mov eax, 3; syscall; 
0x00000000000692b6: mov r8d, eax; mov eax, ebp; pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000001df7c: mov r8d, eax; xor eax, eax; test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x0000000000074530: mov r8d, ecx; movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r13; mov rdx, r14; syscall; 
0x000000000006a554: mov r8d, edx; mov eax, r8d; ret; 
0x000000000004c3c4: mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x000000000007b3ec: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3ec: mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x000000000006c4e4: mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x000000000007b3ab: mov r9, r11; and rsi, 0xfffffffffffffff0; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000074365: mov r9d, 0x124; nop dword ptr [rax + rax]; mov rax, r9; mov rsi, r8; syscall; 
0x0000000000015bc8: mov r9d, 0xca; add rdi, 0x28; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r9; syscall; 
0x0000000000060af3: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f735: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000005d528: mov r9d, 0xca; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006e9f8: mov r9d, 0xca; mov edx, 1; mov rax, r9; syscall; 
0x000000000002783f: mov r9d, 0xf1ffa83; xchg dword ptr [rbp + 0x69000000], eax; sal byte ptr [rdx + 0x1000000], cl; ret 0xc281; 
0x00000000000233f1: mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000002401d: mov r9d, r9d; mov eax, 0x113; syscall; 
0x000000000002334d: mov r9d, r9d; mov eax, 0x146; syscall; 
0x0000000000059d0e: mov rax, -0x26; pop r12; pop r13; ret; 
0x000000000006c411: mov rax, -0x7d; ret; 
0x0000000000021bef: mov rax, -1; add rsp, 0x18; ret; 
0x0000000000019a5f: mov rax, -1; add rsp, 8; ret; 
0x0000000000025508: mov rax, -1; pop rbp; pop r12; ret; 
0x00000000000436bf: mov rax, -1; pop rbx; pop r12; ret; 
0x00000000000446cf: mov rax, -1; pop rbx; pop rbp; pop r12; ret; 
0x000000000005b1a4: mov rax, -2; rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000007b228: mov rax, 0xf; syscall; 
0x000000000001f465: mov rax, qword ptr [0]; add rax, 0x34; ret; 
0x000000000006fe5b: mov rax, qword ptr [0]; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x00000000000235e5: mov rax, qword ptr [0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006d5b9: mov rax, qword ptr [0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005ada1: mov rax, qword ptr [0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000006f115: mov rax, qword ptr [0]; ret; 
0x000000000002374a: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x00000000000746ad: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000703c8: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000007440c: mov rax, qword ptr [0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000005e326: mov rax, qword ptr [r14 + 0x10]; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000001e755: mov rax, qword ptr [r9 + 8]; mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x000000000006d2c7: mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000006defd: mov rax, qword ptr [rax + 0x80]; mov edi, edi; mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005f04b: mov rax, qword ptr [rax + 0xd8]; test rax, rax; jne 0x5f040; ret; 
0x000000000007af6d: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rdx + rcx*8]; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000078a2f: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3dec6]; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x0000000000078967: mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x0000000000040542: mov rax, qword ptr [rax + 8]; ret; 
0x000000000006df06: mov rax, qword ptr [rax + rdi*8]; ret; 
0x000000000005280a: mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000005ca0a: mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x000000000006d50b: mov rax, qword ptr [rbx + 0x10]; test eax, eax; je 0x6d530; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000006ba64: mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000002aecf: mov rax, qword ptr [rbx + 8]; mov qword ptr [rax], rbx; mov rax, r10; pop rbx; ret; 
0x000000000006c6ac: mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x0000000000016301: mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000006bac0: mov rax, qword ptr [rbx]; test rax, rax; je 0x6baca; call rax; 
0x00000000000619e2: mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000005d0fd: mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005cd69: mov rax, qword ptr [rdi + 0x38]; cmp qword ptr [rdi + 0x28], rax; je 0x5cd7a; xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005d0e4: mov rax, qword ptr [rdi + 0x60]; ret; 
0x0000000000015c94: mov rax, qword ptr [rdi + 0x78]; ret; 
0x000000000006b7e4: mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000006bba4: mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000006bc24: mov rax, qword ptr [rdi]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x0000000000052804: mov rax, qword ptr [rdi]; mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x000000000001ea64: mov rax, qword ptr [rdi]; ret; 
0x000000000005b3be: mov rax, qword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x000000000005a346: mov rax, qword ptr [rdi]; test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000005e37b: mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000002221b: mov rax, qword ptr [rdx + 0xb8]; lea rdx, [rip + 0x8bce7]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000071e0f: mov rax, qword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x0000000000047ed0: mov rax, qword ptr [rip + 0x6c0d9]; ret; 
0x000000000002a29d: mov rax, qword ptr [rip + 0x8cb04]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005b184: mov rax, qword ptr [rsi]; and rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000005b474: mov rax, qword ptr [rsi]; or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x00000000000394d2: mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000052221: mov rax, qword ptr [rsp + 0x10]; and ebx, 1; mov rdi, rbp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000073920: mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000007042d: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000003e17c: mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e8a0: mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000079329: mov rax, qword ptr [rsp + 0x68]; sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000052181: mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000067b0a: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000001e917: mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x0000000000067ac9: mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000051f56: mov rax, qword ptr [rsp + 8]; mov rdi, rbp; call rax; 
0x0000000000067b23: mov rax, qword ptr [rsp + 8]; mov rsi, r15; mov rdi, r8; call rax; 
0x000000000007010f: mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x0000000000045acc: mov rax, qword ptr [rsp]; lea rdx, [r14 + 0xa]; mov r8, rbp; mov ecx, ebx; mov rdi, r13; call rax; 
0x0000000000041ac8: mov rax, qword ptr [rsp]; mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x0000000000015b5d: mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000006ffa7: mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000005a345: mov rax, qword ptr ds:[rdi]; test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000001f464: mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x000000000006fe5a: mov rax, qword ptr fs:[0]; cmp dword ptr [rax + 0x30], edx; je 0x6fe70; ret; 
0x00000000000235e4: mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x000000000006d5b8: mov rax, qword ptr fs:[0]; mov qword ptr [rax + 0x78], rdx; ret; 
0x000000000005ada0: mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000006f114: mov rax, qword ptr fs:[0]; ret; 
0x0000000000023749: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x00000000000746ac: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x00000000000703c7: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x000000000007440b: mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x000000000006dc8f: mov rax, r10; mov rsi, rdx; syscall; 
0x000000000002aed6: mov rax, r10; pop rbx; ret; 
0x0000000000050249: mov rax, r10; syscall; 
0x0000000000044278: mov rax, r11; add rsp, 0x18; ret; 
0x000000000006a1ef: mov rax, r12; mov qword ptr [rip + 0x4cc5f], rdx; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000006c4db: mov rax, r12; mov r8, r9; mov rdi, r13; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x00000000000614e6: mov rax, r12; mov rdi, rbp; mov edx, 0x180; syscall; 
0x000000000005baba: mov rax, r12; mov rdx, r13; syscall; 
0x000000000006c32a: mov rax, r12; mov rdx, rbp; syscall; 
0x000000000005cc2d: mov rax, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005bb95: mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000005e127: mov rax, r12; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000066ace: mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x000000000006a2c4: mov rax, r12; pop r12; pop r13; ret; 
0x000000000004c782: mov rax, r12; pop r12; ret; 
0x000000000006a297: mov rax, r12; pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x000000000005a9b8: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000024ca8: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005e1c8: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000001bb91: mov rax, r12; pop rbp; pop r12; ret; 
0x00000000000748f7: mov rax, r12; pop rbx; pop r12; pop rbp; ret; 
0x000000000001e6a0: mov rax, r12; pop rbx; pop r12; ret; 
0x000000000001af74: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000000255da: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000050238: mov rax, r12; syscall; 
0x000000000005020c: mov rax, r13; or esi, 0x8000; movsxd rsi, esi; syscall; 
0x0000000000022d57: mov rax, r13; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000005d695: mov rax, r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005c732: mov rax, r14; mov rdi, r13; syscall; 
0x000000000006d491: mov rax, r15; mov rdx, r10; syscall; 
0x000000000005014c: mov rax, r15; syscall; 
0x0000000000022e7d: mov rax, r8; add rsp, 8; ret; 
0x000000000006fc82: mov rax, r8; and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x000000000001fa55: mov rax, r8; mov rdx, r10; syscall; 
0x000000000001f943: mov rax, r8; mov rdx, r9; syscall; 
0x000000000006f0aa: mov rax, r8; mov rsi, r10; syscall; 
0x000000000001f9f8: mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000005c8e0: mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1d5: mov rax, r8; mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000005c8e0: mov rax, r8; mov rsi, rdx; syscall; ret; 
0x000000000002c387: mov rax, r8; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000070465: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e714: mov rax, r8; pop rbx; ret; 
0x0000000000022e96: mov rax, r8; ret; 
0x0000000000015a3f: mov rax, r8; syscall; 
0x000000000005c8cd: mov rax, r8; syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006c6fd: mov rax, r8; syscall; cmp rax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006d1f8: mov rax, r8; syscall; ret; 
0x000000000006c710: mov rax, r8; syscall; xor eax, eax; ret; 
0x0000000000074370: mov rax, r9; mov rsi, r8; syscall; 
0x000000000006b53b: mov rax, r9; mov rsi, rbx; syscall; 
0x000000000005d570: mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005f790: mov rax, r9; mov rsi, rdx; syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b50: mov rax, r9; mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000001e75c: mov rax, r9; pop rbx; ret; 
0x0000000000015bdc: mov rax, r9; syscall; 
0x000000000006b85b: mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000005fe73: mov rax, rbp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002a52e: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000069aa3: mov rax, rbx; cmovne rax, rsi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000072256: mov rax, rbx; mov qword ptr [rbx + 0x28], 0; pop rbx; ret; 
0x000000000006c303: mov rax, rbx; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005c85e: mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000004399b: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000029000: mov rax, rbx; pop rbx; ret; 
0x000000000006a5eb: mov rax, rbx; sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x00000000000502a3: mov rax, rbx; syscall; 
0x0000000000067804: mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000000677f4: mov rax, rdi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000000068ef4: mov rax, rdi; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000068a00: mov rax, rdi; pop rbx; ret; 
0x0000000000021bcd: mov rax, rdi; ret; 
0x000000000006d576: mov rax, rdi; sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000006a03b: mov rax, rdi; test sil, sil; jne 0x6a048; pop rbp; ret; 
0x000000000005e3d1: mov rax, rdx; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000074390: mov rax, rdx; mov rsi, r8; syscall; 
0x000000000005e361: mov rax, rdx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000000447c5: mov rax, rdx; pop rbp; pop r12; ret; 
0x0000000000044730: mov rax, rdx; pop rbx; pop rbp; sub rax, rcx; pop r12; ret; 
0x000000000005d14f: mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000001f4e8: mov rax, rdx; syscall; 
0x00000000000673fa: mov rax, rsi; sub rax, rdx; test r9d, r9d; cmove r8, rax; mov rax, r8; ret; 
0x000000000004c538: mov rbp, rcx; push rbx; mov rbx, rsi; syscall; 
0x00000000000253d5: mov rbp, rdi; call 0x29330; test eax, eax; jne 0x253e8; pop rbp; ret; 
0x000000000005dc55: mov rbp, rdi; call 0x5f0f0; test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x000000000005cf5b: mov rbp, rdi; test eax, eax; jns 0x5cf70; and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x0000000000047083: mov rbx, qword ptr [rbx]; call 0x15060; test rbx, rbx; jne 0x47080; pop rbx; ret; 
0x000000000006070b: mov rbx, rax; mov rdi, r12; call 0x5d1b0; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000703ee: mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000004f428: mov rbx, rax; test eax, eax; jne 0x4f47f; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000003fc94: mov rbx, rdi; jne 0x3fca0; pop rbx; ret; 
0x000000000003fcfd: mov rbx, rdi; jne 0x3fd10; lea r8, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x0000000000023df2: mov rbx, rdi; sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000069055: mov rbx, rdx; call 0x7b25a; add rax, rbx; pop rbx; ret; 
0x000000000004c53c: mov rbx, rsi; syscall; 
0x000000000004c472: mov rbx, rsi; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000005e3b9: mov rcx, qword ptr [rax + 0x18]; test rcx, rcx; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x000000000007620e: mov rcx, qword ptr [rdi + 0x10]; add rdi, 0x10; test rcx, rcx; jne 0x761f0; ret; 
0x000000000006b7dd: mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x0000000000061a10: mov rcx, qword ptr [rdx + 8]; lea rax, [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000074224: mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000075622: mov rcx, qword ptr [rsp + 0x48]; sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x000000000007b34f: mov rcx, rdx; jne 0x7b35f; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x00000000000469f0: mov rcx, rdx; mov rdx, rsi; mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x000000000003f461: mov rcx, rsi; bts r8, 0x35; shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x00000000000220e0: mov rdi, -0x16; call 0x21bc0; add rsp, 8; ret; 
0x0000000000059da8: mov rdi, -0x26; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bb9b: mov rdi, -0x64; mov rdx, r13; syscall; 
0x0000000000023218: mov rdi, -0xc; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bc14: mov rdi, -9; call 0x21bc0; add rsp, 8; ret; 
0x000000000005e21d: mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000005e2f5: mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000006d2c3: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x0000000000028fe7: mov rdi, qword ptr [rax]; call 0x24480; test rax, rax; je 0x29000; pop rbx; ret; 
0x000000000005e3c2: mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x000000000004f644: mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7de: mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f974: mov rdi, qword ptr [rbp - 0x38]; sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x000000000005a64f: mov rdi, qword ptr [rbp]; call rbx; 
0x000000000006d548: mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000006c6a8: mov rdi, qword ptr [rbx + 8]; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000005a0f8: mov rdi, qword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000001629f: mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001ef5b: mov rdi, qword ptr [rbx]; test rdi, rdi; jne 0x1ef50; xor eax, eax; pop rbx; ret; 
0x00000000000501b8: mov rdi, qword ptr [rcx + 0x88]; call rax; 
0x000000000006d57d: mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023df9: mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000005e384: mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000003478a: mov rdi, qword ptr [rsp + 0x18]; sub dword ptr [rdi], 0x78; pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000007391b: mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000006ce24: mov rdi, qword ptr [rsp + 0x48]; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000021be6: mov rdi, qword ptr [rsp + 8]; neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x0000000000034666: mov rdi, qword ptr [rsp + 8]; sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x000000000004ed1c: mov rdi, r10; call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000006070e: mov rdi, r12; call 0x5d1b0; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000599bc: mov rdi, r12; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x000000000006ffab: mov rdi, r12; call rax; 
0x0000000000070427: mov rdi, r12; mov r8, rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000007010c: mov rdi, r12; mov rax, qword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x000000000006d3f8: mov rdi, r12; mov rax, r8; syscall; 
0x000000000004c535: mov rdi, r12; mov rbp, rcx; push rbx; mov rbx, rsi; syscall; 
0x000000000004c58f: mov rdi, r12; mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000007478b: mov rdi, r12; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000005f3f4: mov rdi, r12; pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x000000000004367f: mov rdi, r12; syscall; 
0x00000000000691a9: mov rdi, r12; xor esi, esi; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x0000000000045ad9: mov rdi, r13; call rax; 
0x000000000001ee37: mov rdi, r13; lea rax, [rip - 0x71]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000006c4e1: mov rdi, r13; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000078964: mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000006c208: mov rdi, r13; mov rax, r8; syscall; 
0x000000000007453b: mov rdi, r13; mov rdx, r14; syscall; 
0x00000000000744ea: mov rdi, r13; mov rsi, rbx; mov rdx, r14; syscall; 
0x000000000005c735: mov rdi, r13; syscall; 
0x000000000001e91c: mov rdi, r14; call rax; 
0x0000000000050126: mov rdi, r14; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000050171: mov rdi, r14; syscall; 
0x0000000000067ace: mov rdi, r15; call rax; 
0x0000000000041acf: mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x000000000006ce5f: mov rdi, r15; mov rax, r8; syscall; 
0x0000000000067b2b: mov rdi, r8; call rax; 
0x000000000001f54d: mov rdi, r8; syscall; 
0x000000000005c05d: mov rdi, r8; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000075931: mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000005be25: mov rdi, r9; mov rsi, rdx; syscall; 
0x0000000000021ff6: mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x00000000000438d2: mov rdi, rax; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000021f75: mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023e3b: mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000050085: mov rdi, rax; mov eax, 0x69; syscall; 
0x0000000000050068: mov rdi, rax; mov eax, 0x6a; syscall; 
0x000000000007443d: mov rdi, rax; mov eax, 0x71; syscall; 
0x0000000000074427: mov rdi, rax; mov eax, 0x72; syscall; 
0x00000000000746df: mov rdi, rbp; call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000005ba17: mov rdi, rbp; call 0x219f0; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004c49b: mov rdi, rbp; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000059bae: mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x0000000000073913: mov rdi, rbp; call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000005c9f1: mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000005d3a5: mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x0000000000051f5b: mov rdi, rbp; call rax; 
0x00000000000614e9: mov rdi, rbp; mov edx, 0x180; syscall; 
0x000000000006fbe8: mov rdi, rbp; mov esi, 0x20; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x0000000000052229: mov rdi, rbp; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005d1cf: mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005d24d: mov rdi, rbp; mov r13d, eax; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005ca07: mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x000000000005217e: mov rdi, rbp; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000006ee00: mov rdi, rbp; mov rax, r8; syscall; 
0x000000000005d538: mov rdi, rbp; mov rax, r9; syscall; 
0x000000000005bcc0: mov rdi, rbp; mov rsi, r9; syscall; 
0x000000000005ba24: mov rdi, rbp; mov rsi, rbx; syscall; 
0x0000000000059d61: mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000059d03: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rcx; 
0x000000000002b497: mov rdi, rbp; syscall; 
0x000000000005ce4f: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005c93a: mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005ef38: mov rdi, rbx; call rax; 
0x000000000005edbf: mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000006c112: mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006bfb0: mov rdi, rbx; mov rax, r8; syscall; 
0x000000000002b46f: mov rdi, rbx; mov rax, rdx; syscall; 
0x00000000000438ca: mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000073b0e: mov rdi, rdx; syscall; 
0x00000000000232bd: mov rdi, rsi; syscall; 
0x00000000000232bd: mov rdi, rsi; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005c0c8: mov rdi, rsp; mov rsi, rsp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1b8: mov rdi, rsp; mov rsi, rsp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000002a362: mov rdx, -1; cmove rax, rdx; ret; 
0x000000000001eef5: mov rdx, qword ptr [0]; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f099: mov rdx, qword ptr [0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f435: mov rdx, qword ptr [0]; syscall; 
0x000000000006d59d: mov rdx, qword ptr [rax + 0x78]; mov qword ptr [rdi + 0x10], rdx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006b7e0: mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rdi + 8]; add rax, qword ptr [rdx + rcx*8]; ret; 
0x000000000006d2c0: mov rdx, qword ptr [rax]; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rbx + 0x78], rax; call rdx; 
0x000000000005ef69: mov rdx, qword ptr [rbx + 0x28]; pop rbx; sub rdx, rcx; add rax, rdx; ret; 
0x000000000005ef4b: mov rdx, qword ptr [rbx + 8]; sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x00000000000428be: mov rdx, qword ptr [rcx + 0x18]; mov dword ptr [rsp], 8; syscall; 
0x000000000005e374: mov rdx, qword ptr [rdi + 0x98]; mov rax, qword ptr [rdx + 0x20]; test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000004ed19: mov rdx, qword ptr [rdi]; mov rdi, r10; call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000052807: mov rdx, qword ptr [rsi]; mov rax, qword ptr [rax]; sub eax, dword ptr [rdx]; ret; 
0x0000000000067ac0: mov rdx, qword ptr [rsp + 0x18]; sub r15, qword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x000000000005bce8: mov rdx, qword ptr [rsp + 8]; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000007b21c: mov rdx, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000001eef4: mov rdx, qword ptr fs:[0]; mov qword ptr [rdx + 0x28], rax; pop rbx; ret; 
0x000000000005f098: mov rdx, qword ptr fs:[0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000004f434: mov rdx, qword ptr fs:[0]; syscall; 
0x0000000000043eae: mov rdx, r10; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000001f92f: mov rdx, r10; mov rax, r8; syscall; 
0x000000000001f9b9: mov rdx, r10; syscall; 
0x000000000005e220: mov rdx, r12; call rax; 
0x000000000005e2f8: mov rdx, r12; mov rsi, r13; call rax; 
0x000000000005b5c1: mov rdx, r13; mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x000000000001edf6: mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000004c592: mov rdx, r13; movsxd rsi, esi; syscall; 
0x000000000005babd: mov rdx, r13; syscall; 
0x00000000000744f0: mov rdx, r14; syscall; 
0x000000000007b3e1: mov rdx, r8; mov r10, r9; mov r8, qword ptr [rsp + 8]; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000001fc14: mov rdx, r8; syscall; 
0x000000000001fc14: mov rdx, r8; syscall; neg eax; ret; 
0x000000000001f946: mov rdx, r9; syscall; 
0x000000000005b9f9: mov rdx, rax; cmp eax, -9; jne 0x5ba40; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000746c1: mov rdx, rax; cmp eax, -9; jne 0x74700; mov eax, 0x48; mov esi, 1; syscall; 
0x00000000000786b2: mov rdx, rax; xor eax, eax; call rdx; 
0x000000000006c32d: mov rdx, rbp; syscall; 
0x000000000005cc33: mov rdx, rbx; syscall; 
0x000000000005abc4: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba4: mov rdx, rdi; mov r10d, 8; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x0000000000023370: mov rdx, rdi; syscall; 
0x00000000000469f3: mov rdx, rsi; mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x000000000006b3c8: mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b458: mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x000000000006d4ad: mov rdx, rsi; syscall; 
0x00000000000688e8: mov rdx, rsi; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x0000000000059c17: mov rdx, rsi; xor esi, esi; call 0x7b2b1; mov eax, r12d; pop r12; ret; 
0x00000000000162fa: mov rdx, rsp; mov dword ptr [rsp + 0x14], eax; mov rax, qword ptr [rbx]; mov qword ptr [rsp + 0x18], rax; mov eax, 0x81; syscall; 
0x000000000005c526: mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000074ba0: mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000000074420: mov rsi, -1; mov rdi, rax; mov eax, 0x72; syscall; 
0x0000000000074450: mov rsi, qword ptr [r8 + 8]; xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x0000000000023dfc: mov rsi, qword ptr [rbx + 8]; syscall; 
0x00000000000501b1: mov rsi, qword ptr [rcx + 0xa0]; mov rdi, qword ptr [rcx + 0x88]; call rax; 
0x000000000006f0ad: mov rsi, r10; syscall; 
0x000000000006756a: mov rsi, r12; call rax; 
0x000000000001edf9: mov rsi, r12; call rbx; 
0x0000000000071ddf: mov rsi, r12; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x0000000000078961: mov rsi, r12; mov rdi, r13; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x0000000000059d00: mov rsi, r12; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rcx; 
0x000000000005e17d: mov rsi, r12; syscall; 
0x000000000005e2fb: mov rsi, r13; call rax; 
0x000000000005cc30: mov rsi, r13; mov rdx, rbx; syscall; 
0x00000000000502d6: mov rsi, r13; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000006de8e: mov rsi, r13; syscall; 
0x000000000005bb98: mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000005c756: mov rsi, r14; syscall; 
0x0000000000067b28: mov rsi, r15; mov rdi, r8; call rax; 
0x0000000000074f6c: mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000007592e: mov rsi, r8; mov rdi, r9; add rsp, 0x190; jmp rax; 
0x000000000001f55b: mov rsi, r8; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x0000000000074373: mov rsi, r8; syscall; 
0x000000000001f9fb: mov rsi, r9; mov rdx, r10; syscall; 
0x000000000005c2eb: mov rsi, r9; mov rdx, r8; syscall; 
0x000000000001e776: mov rsi, r9; syscall; 
0x000000000005edbc: mov rsi, rbp; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x00000000000438cd: mov rsi, rbp; syscall; 
0x000000000005a642: mov rsi, rbx; call 0x5a620; test rbx, rbx; je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000006141b: mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x00000000000744ed: mov rsi, rbx; mov rdx, r14; syscall; 
0x000000000007478e: mov rsi, rbx; mov rdx, rbp; syscall; 
0x0000000000043bda: mov rsi, rbx; syscall; 
0x000000000007b375: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; 
0x000000000007b375: mov rsi, rdi; mov edi, 0x1002; mov eax, 0x9e; syscall; ret; 
0x0000000000042787: mov rsi, rdi; test eax, eax; jg 0x4279e; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000005bc85: mov rsi, rdx; mov rdi, rbp; syscall; 
0x0000000000059d64: mov rsi, rdx; syscall; 
0x000000000006c82b: mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1d8: mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000006d248: mov rsi, rdx; syscall; cmp rax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x000000000005f793: mov rsi, rdx; syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b53: mov rsi, rdx; syscall; mov eax, r8d; pop rbx; ret; 
0x000000000005c8e3: mov rsi, rdx; syscall; ret; 
0x000000000005b802: mov rsi, rdx; xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000005cae4: mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000004129d: mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x0000000000071d35: mov rsi, rsp; mov eax, 0xe5; movsxd rdi, r8d; syscall; 
0x00000000000703f1: mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000005c0cb: mov rsi, rsp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1bb: mov rsi, rsp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000007b1f5: mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000079332: mov rsp, rdx; jmp rax; 
0x00000000000411ce: mov word ptr [rax], es; add byte ptr [rax], al; syscall; 
0x000000000004de90: mov word ptr [rax], ss; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000001fc8f: mov word ptr [rbx], ax; xor eax, eax; pop rbx; ret; 
0x000000000001edf0: mov word ptr [rcx - 0x1076fffb], ds; mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000039be8: mov word ptr [rcx], es; add byte ptr [rax], al; jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000006b25b: mov word ptr [rdi + 0x16], ax; ret; 
0x000000000004eeb2: mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000001a3e3: mov word ptr [rdx + rax*2], fs; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 4; add al, byte ptr [rbx - 0x76b7fe20]; ret 0xc148; 
0x000000000002a913: mov word ptr [rdx - 2], cx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004c9d0: mov word ptr [rdx], gs; std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000061fbc: mov word ptr [rip - 0x6f730000], es; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x00000000000507e6: mov word ptr [rsi], ax; xor eax, eax; ret; 
0x000000000004a7f8: mov word ptr [rsi], di; ret; 
0x0000000000034742: mov word ptr [rsp + 0x18], ax; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000003d254: mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; fmulp st(1); ret; 
0x0000000000030c19: mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000025c57: mov word ptr [rsp], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x6be8; 
0x000000000006f56e: movabs al, byte ptr [0x415de08944000000]; pop rsp; pop r13; ret; 
0x000000000003655c: movabs al, byte ptr [0x5b08c48348000778]; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000070461: movabs al, byte ptr [0x5d5bc0894c000000]; pop r12; ret; 
0x00000000000501b4: movabs al, byte ptr [0x88b98b48000000]; add byte ptr [rax], al; call rax; 
0x000000000005bad5: movabs al, byte ptr [0x92840f0000]; mov eax, 0x101; mov edx, 0x2a0100; syscall; 
0x000000000003201c: movabs al, byte ptr [0xfd05c0ff30007d4]; sub dl, al; ret; 
0x0000000000022e23: movabs byte ptr [0x480003b085e80008], al; mov dword ptr [rip + 0x93f46], eax; add rsp, 8; ret; 
0x0000000000032ec4: movabs byte ptr [0x841f0f66ffff], al; add byte ptr [rax], al; add bl, dh; addps xmm0, xmm0; ret; 
0x0000000000022eb0: movabs dword ptr [0x4c08c48348c03145], eax; mov eax, eax; ret; 
0x00000000000754b9: movabs dword ptr [0x5bc0311889fffa9f], eax; ret; 
0x00000000000741b9: movabs dword ptr [0xc78948050f000000], eax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000199db: movabs eax, dword ptr [0x8308c48348000475]; rol byte ptr [rcx], 0x48; cwde; ret; 
0x0000000000032fc4: movabs eax, dword ptr [0x841f0f66ffff]; add byte ptr [rax], al; add bl, dh; addps xmm0, xmm0; ret; 
0x0000000000023279: movabs eax, dword ptr [0xc78948050f000000]; call 0x21bc0; add rsp, 8; ret; 
0x00000000000744e4: movabs r8, 0x48ef894c0000010d; mov esi, ebx; mov rdx, r14; syscall; 
0x000000000003a790: movabs rax, 0x8000000000000000; and rdx, rax; mov qword ptr [rdi], rdx; ret; 
0x000000000003a744: movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000006ce28: movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000074381: movabs rdx, 0x841f0f6600000021; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000004eeb6: movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x0000000000017b8a: movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000032dbe: movapd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000031055: movapd xmm0, xmm1; addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000002ea54: movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000039d3c: movapd xmm0, xmm1; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x000000000003cc32: movapd xmm0, xmm1; jbe 0x3cc70; subsd xmm0, qword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000002f802: movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000017e54: movapd xmm0, xmm1; ret; 
0x000000000001951c: movapd xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000003a222: movapd xmm0, xmm2; addsd xmm0, xmm1; mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x000000000003eaec: movapd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000018ee8: movapd xmm0, xmm2; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000002fb54: movapd xmm0, xmm2; pop rbx; pop rbp; ret; 
0x000000000002fe12: movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000016875: movapd xmm0, xmm2; ret; 
0x0000000000039d7c: movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x00000000000173cf: movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000033326: movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000017391: movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000017353: movapd xmm0, xmm4; ret; 
0x00000000000331a0: movapd xmm0, xmm5; movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000007a9d0: movapd xmm0, xmm5; ret; 
0x000000000002ce44: movapd xmm0, xmm5; subsd xmm2, xmm1; subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003436c: movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034380: movapd xmm1, xmm0; jne 0x34374; mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034157: movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000016871: movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003a419: movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399c8: movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x0000000000016888: movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000001734a: movapd xmm1, xmm0; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000016c25: movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x00000000000173d3: movapd xmm1, xmm2; ret; 
0x0000000000018768: movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x000000000001945c: movapd xmm1, xmm3; ret; 
0x000000000003c7d4: movapd xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000167b5: movapd xmm2, xmm0; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000033244: movapd xmm2, xmm0; subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000002fe20: movapd xmm2, xmm1; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016af0: movapd xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016c21: movapd xmm2, xmm1; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x00000000000319b0: movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000018763: movapd xmm4, xmm0; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x00000000000174b7: movapd xmm4, xmm0; pop rbx; mulsd xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000173cb: movapd xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000017b8b: movaps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000032dbf: movaps xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000031056: movaps xmm0, xmm1; addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000002ea55: movaps xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x0000000000039d3d: movaps xmm0, xmm1; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000031114: movaps xmm0, xmm1; addss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x0000000000039f22: movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x000000000003cc33: movaps xmm0, xmm1; jbe 0x3cc70; subsd xmm0, qword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003cce7: movaps xmm0, xmm1; jbe 0x3cd20; subss xmm0, dword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x00000000000386fe: movaps xmm0, xmm1; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002f803: movaps xmm0, xmm1; pop rbx; ret; 
0x0000000000017e55: movaps xmm0, xmm1; ret; 
0x000000000003cf4c: movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000001951d: movaps xmm0, xmm2; add rsp, 0x20; pop rbx; ret; 
0x000000000003a223: movaps xmm0, xmm2; addsd xmm0, xmm1; mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x000000000003eaed: movaps xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003368c: movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000018ee9: movaps xmm0, xmm2; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000002fb55: movaps xmm0, xmm2; pop rbx; pop rbp; ret; 
0x000000000002fe13: movaps xmm0, xmm2; pop rbx; ret; 
0x0000000000016876: movaps xmm0, xmm2; ret; 
0x0000000000039d7d: movaps xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x00000000000173d0: movaps xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x000000000003357f: movaps xmm0, xmm4; movd xmm4, eax; addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000033327: movaps xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000017392: movaps xmm0, xmm4; pop rbx; ret; 
0x0000000000017354: movaps xmm0, xmm4; ret; 
0x00000000000331a1: movaps xmm0, xmm5; movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000007a9d1: movaps xmm0, xmm5; ret; 
0x000000000002ce45: movaps xmm0, xmm5; subsd xmm2, xmm1; subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003366b: movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000003436d: movaps xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034538: movaps xmm1, xmm0; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034381: movaps xmm1, xmm0; jne 0x34374; mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034548: movaps xmm1, xmm0; jne 0x3453f; pxor xmm1, xmm1; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034158: movaps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000016872: movaps xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002f0af: movaps xmm1, xmm0; movss xmm0, dword ptr [rip + 0x81972]; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000003a41a: movaps xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399c9: movaps xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x00000000000335ac: movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003a489: movaps xmm1, xmm0; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b88: movaps xmm1, xmm0; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x0000000000016889: movaps xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000001734b: movaps xmm1, xmm0; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x000000000002f050: movaps xmm1, xmm0; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000016c26: movaps xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000038926: movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x00000000000173d4: movaps xmm1, xmm2; ret; 
0x0000000000018769: movaps xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x000000000003871e: movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000001945d: movaps xmm1, xmm3; ret; 
0x0000000000030870: movaps xmm2, xmm0; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003c7d5: movaps xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003ca24: movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000167b6: movaps xmm2, xmm0; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000033245: movaps xmm2, xmm0; subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000002fe21: movaps xmm2, xmm1; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016af1: movaps xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016c22: movaps xmm2, xmm1; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000003abe5: movaps xmm2, xmm1; mulss xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x00000000000319b1: movaps xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000031fe8: movaps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000033474: movaps xmm3, xmm0; subss xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000018764: movaps xmm4, xmm0; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x00000000000174b8: movaps xmm4, xmm0; pop rbx; mulsd xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000173cc: movaps xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000016fbd: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d80: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f91: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x38; ret; 
0x0000000000016bdd: movd dword ptr [rsp + 0x10], mm0; add rsp, 0x48; ret; 
0x00000000000177d0: movd dword ptr [rsp + 0x18], mm0; add rsp, 0x30; pop rbx; ret; 
0x00000000000190fa: movd dword ptr [rsp + 0x20], mm0; add rsp, 0x38; ret; 
0x0000000000016cb3: movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x0000000000018078: movd dword ptr [rsp - 0x10], mm0; ret; 
0x000000000007a6fe: movd dword ptr [rsp - 8], mm0; ret; 
0x0000000000018372: movd dword ptr [rsp], mm0; add rsp, 0x18; ret; 
0x000000000001690b: movd dword ptr [rsp], mm0; add rsp, 0x20; pop rbx; ret; 
0x0000000000016842: movd dword ptr [rsp], mm0; add rsp, 0x28; ret; 
0x0000000000033810: movd eax, mm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001831c: movd eax, mm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x0000000000037619: movd eax, mm0; or eax, ecx; je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000003a731: movd eax, mm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000002e6f5: movd eax, mm0; shr eax, 0x1f; ret; 
0x000000000002e6e6: movd eax, mm0; shr rax, 0x3f; ret; 
0x00000000000182da: movd eax, mm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x0000000000037618: movd eax, xmm0; or eax, ecx; je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002e6f4: movd eax, xmm0; shr eax, 0x1f; ret; 
0x000000000003fa06: movd mm0, eax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000003b8da: movd mm0, eax; addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030b73: movd mm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000033973: movd mm0, eax; je 0x33966; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x0000000000030bb5: movd mm0, eax; ret; 
0x000000000004eef7: movd mm0, eax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x0000000000030b49: movd mm0, ecx; ret; 
0x0000000000034912: movd mm0, edx; add rsp, 0x18; ret; 
0x000000000003ba7b: movd mm0, edx; addss xmm0, xmm1; ret; 
0x0000000000034623: movd mm0, edx; ret; 
0x000000000003fa05: movd mm0, rax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000003b8d9: movd mm0, rax; addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030bb4: movd mm0, rax; ret; 
0x000000000004eef6: movd mm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x0000000000034911: movd mm0, rdx; add rsp, 0x18; ret; 
0x0000000000034622: movd mm0, rdx; ret; 
0x000000000002ffe9: movd mm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003a77e: movd mm1, eax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x0000000000018321: movd mm1, eax; movapd xmm0, xmm2; ret; 
0x0000000000032c60: movd mm1, eax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003aaf4: movd mm1, eax; mulsd xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000001870f: movd mm1, ebx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x000000000003a806: movd mm1, ecx; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x000000000003a77d: movd mm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x0000000000018320: movd mm1, rax; movapd xmm0, xmm2; ret; 
0x0000000000032c5f: movd mm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003aaf3: movd mm1, rax; mulsd xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000001870e: movd mm1, rbx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000341c1: movd mm2, eax; minss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000032760: movd mm2, eax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000003289b: movd mm2, eax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003d0e4: movd mm2, edi; mulsd xmm0, xmm2; ret; 
0x000000000003d199: movd mm2, edi; mulss xmm0, xmm2; ret; 
0x000000000003275f: movd mm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000003289a: movd mm2, rax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003d0e3: movd mm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000033583: movd mm4, eax; addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000033689: movd mm4, eax; movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x000000000001742b: movd mm4, ebx; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x000000000001742a: movd mm4, rbx; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000331a6: movd mm5, edx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000033323: movd mm5, edx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x00000000000331a5: movd mm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000033322: movd mm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000033664: movd mm7, eax; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000003380f: movd rax, mm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001831b: movd rax, mm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x000000000003a730: movd rax, mm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000002e6e5: movd rax, mm0; shr rax, 0x3f; ret; 
0x00000000000182d9: movd rax, mm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x0000000000030b72: movd xmm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000033972: movd xmm0, eax; je 0x33966; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x0000000000030bdf: movd xmm0, eax; ret; 
0x0000000000030b48: movd xmm0, ecx; ret; 
0x000000000003ba7a: movd xmm0, edx; addss xmm0, xmm1; ret; 
0x00000000000346ae: movd xmm0, edx; ret; 
0x000000000002ffe8: movd xmm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003a805: movd xmm1, ecx; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x00000000000341c0: movd xmm2, eax; minss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003d198: movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x0000000000033582: movd xmm4, eax; addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000033688: movd xmm4, eax; movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000033663: movd xmm7, eax; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x00000000000253b6: movdqu xmm2, xmmword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x00000000000253b7: movq mm2, qword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x0000000000017e64: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x0000000000018464: movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x000000000003380e: movq rax, xmm0; btr rax, 0x3f; cmp rax, rdx; setbe al; movzx eax, al; ret; 
0x000000000001831a: movq rax, xmm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x000000000003a72f: movq rax, xmm0; shl rax, 0xc; je 0x3a744; ret; 
0x000000000002e6e4: movq rax, xmm0; shr rax, 0x3f; ret; 
0x00000000000182d8: movq rax, xmm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x0000000000016fbc: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d7f: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000017f90: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000016bdc: movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000177cf: movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000190f9: movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000016cb2: movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000018077: movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000007a6fd: movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000018371: movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000001690a: movq xmm0, qword ptr [rsp]; add rsp, 0x20; pop rbx; ret; 
0x0000000000016841: movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000003fa04: movq xmm0, rax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x000000000003b8d8: movq xmm0, rax; addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000030bb3: movq xmm0, rax; ret; 
0x000000000004eef5: movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x0000000000034910: movq xmm0, rdx; add rsp, 0x18; ret; 
0x0000000000034621: movq xmm0, rdx; ret; 
0x000000000003a77c: movq xmm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000001831f: movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x0000000000032c5e: movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003aaf2: movq xmm1, rax; mulsd xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000001870d: movq xmm1, rbx; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x000000000003275e: movq xmm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x0000000000032899: movq xmm2, rax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003d0e2: movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000017429: movq xmm4, rbx; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000331a4: movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000033321: movq xmm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000002a678: movsb byte ptr [rdi], byte ptr [rsi]; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000000738ad: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax + 0xe2], bh; and edi, 0x7fffffff; syscall; 
0x0000000000025c59: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x6be8; 
0x000000000001f950: movsb byte ptr [rdi], byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rbp + 0x480a78c0], al; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000007b2aa: movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x0000000000074a81: movsb byte ptr [rdi], byte ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007b286: movsb byte ptr [rdi], byte ptr [rsi]; dec edx; jne 0x7b286; ret; 
0x000000000001f6f7: movsb byte ptr [rdi], byte ptr [rsi]; ret 0x108; 
0x0000000000052218: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000074133: movsd dword ptr [rdi], dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax], al; add cl, ch; ret 0xfffe; 
0x0000000000074982: movsd dword ptr [rdi], dword ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000003a740: movsd qword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000003ae5e: movsd qword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000003a9b5: movsd qword ptr [rsp + 8], xmm0; call 0x7ae8e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000031003: movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000017ac3: movsd qword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000032864: movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003ab54: movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000032854: movsd qword ptr [rsp - 0x18], xmm2; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003f351: movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000002d118: movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000338f0: movsd qword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x000000000002d214: movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000030ad3: movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000003aaff: movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000017bb8: movsd qword ptr [rsp], xmm1; call 0x32690; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003cb42: movsd xmm0, qword ptr [rip + 0x71886]; test rax, rax; je 0x3cb60; ret; 
0x000000000003a421: movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399d0: movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x000000000003a954: movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x00000000000366f8: movsd xmm0, qword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x0000000000036558: movsd xmm0, qword ptr [rip + 0x778a0]; add rsp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x00000000000365e0: movsd xmm0, qword ptr [rip + 0x77a20]; divsd xmm0, qword ptr [rip + 0x77830]; ret; 
0x00000000000365d3: movsd xmm0, qword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x0000000000035600: movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f8: movsd xmm0, qword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x00000000000338cb: movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000031009: movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030af0: movsd xmm0, qword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030acb: movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000002ee90: movsd xmm0, qword ptr [rip + 0x7f458]; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002edd6: movsd xmm0, qword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x000000000002d110: movsd xmm0, qword ptr [rip + 0x80ce8]; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000167b9: movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000003a9c0: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000068126: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb4: movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x000000000002d11e: movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000316c5: movsd xmm1, qword ptr [rip + 0x7cd8b]; add rsp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002eb28: movsd xmm1, qword ptr [rip + 0x7f4d8]; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000017ed9: movsd xmm1, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000003285a: movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000002d21a: movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000017bc2: movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000175a3: movsd xmm1, qword ptr [rsp]; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000319e8: movsd xmm2, qword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003192c: movsd xmm2, qword ptr [rip + 0x7c4dc]; subsd xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000319cd: movsd xmm2, qword ptr [rip + 0x7c93b]; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000031954: movsd xmm2, qword ptr [rip + 0x7c9b4]; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031990: movsd xmm2, qword ptr [rip + 0x7cc18]; mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x000000000002fe0a: movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x00000000000348fc: movsd xmm7, qword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000003a7e0: movss dword ptr [rdi], xmm0; and edx, 0x80000000; movd xmm0, edx; ret; 
0x000000000003a7ce: movss dword ptr [rdi], xmm0; cmp ecx, 0x80; jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x0000000000016bd0: movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000197ac: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d79: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000016bd6: movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000003afb5: movss dword ptr [rsp + 0x1c], xmm0; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000177c9: movss dword ptr [rsp + 0x1c], xmm0; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000310d1: movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x00000000000190ed: movss dword ptr [rsp + 0x20], xmm0; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000190f3: movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000034d66: movss dword ptr [rsp - 0xc], xmm0; ret; 
0x000000000003ba30: movss dword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000003abf0: movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003f39c: movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000030b58: movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d148: movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000033958: movss dword ptr [rsp - 4], xmm0; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x0000000000034c5c: movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d242: movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000003326c: movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003cd18: movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000007a6f7: movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000030b42: movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000007a6f1: movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001836c: movss dword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x000000000003ba3d: movss xmm0, dword ptr [rip + 0x73a7b]; ret; 
0x000000000003cbaa: movss xmm0, dword ptr [rip + 0x73eea]; test eax, eax; je 0x3cbd0; ret; 
0x000000000003a964: movss xmm0, dword ptr [rip + 0x74be4]; ret; 
0x000000000003a490: movss xmm0, dword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b8f: movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x0000000000036f98: movss xmm0, dword ptr [rip + 0x78520]; divss xmm0, xmm1; ret; 
0x0000000000036e07: movss xmm0, dword ptr [rip + 0x786b1]; add rsp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000035e58: movss xmm0, dword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x0000000000036e88: movss xmm0, dword ptr [rip + 0x79b7c]; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000036e77: movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x0000000000035d58: movss xmm0, dword ptr [rip + 0x7acac]; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x0000000000033978: movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x00000000000310d7: movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000030b78: movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000030b5e: movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002f0c8: movss xmm0, dword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002f0b2: movss xmm0, dword ptr [rip + 0x81972]; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000002ef82: movss xmm0, dword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002d140: movss xmm0, dword ptr [rip + 0x82378]; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000003aa10: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000068103: movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000003ba36: movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000002d14e: movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000017e6a: movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000001846a: movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000031d14: movss xmm1, dword ptr [rip + 0x7edb8]; add rsp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ffd4: movss xmm1, dword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003af1d: movss xmm1, dword ptr [rsp + 0xc]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b004: movss xmm1, dword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x000000000002d248: movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x0000000000032018: movss xmm2, dword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f74: movss xmm2, dword ptr [rip + 0x7d54c]; subss xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000031fd0: movss xmm2, dword ptr [rip + 0x7ea50]; mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000031ffd: movss xmm2, dword ptr [rip + 0x7ea7b]; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f9c: movss xmm2, dword ptr [rip + 0x7eadc]; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x00000000000349f7: movss xmm2, dword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x0000000000061ae3: movsx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000414c4: movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x0000000000040571: movsx eax, byte ptr [rip + 0x7430a]; ret; 
0x0000000000019a44: movsx eax, word ptr [rax + rsi*2]; ret; 
0x0000000000061b03: movsx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000043f3c: movsx edi, bh; mov eax, edi; and eax, 0xdfff; ret; 
0x0000000000043f3b: movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000006a038: movsx esi, byte ptr [rsi]; mov rax, rdi; test sil, sil; jne 0x6a048; pop rbp; ret; 
0x0000000000061ae2: movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000040570: movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x0000000000019a43: movsx rax, word ptr [rax + rsi*2]; ret; 
0x0000000000061b02: movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000005bbcb: movsxd r10, eax; movsxd rdi, ebp; mov eax, 3; syscall; 
0x0000000000043799: movsxd r10, ebp; mov eax, 0x19; syscall; 
0x0000000000043674: movsxd r10, ebx; movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x000000000005bd21: movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x000000000002352d: movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x0000000000074533: movsxd r10, ecx; mov eax, 0x1b7; mov rdi, r13; mov rdx, r14; syscall; 
0x000000000001fbe7: movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x000000000001fbe7: movsxd r10, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000023f84: movsxd r10, edx; sub rsp, 8; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x00000000000703eb: movsxd r12, eax; mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x00000000000747e0: movsxd r8, r8d; mov eax, 0x104; syscall; 
0x0000000000074c41: movsxd r8, r8d; mov eax, 0x109; syscall; 
0x00000000000239fe: movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x000000000002436b: movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x000000000002439b: movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x00000000000243ce: movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000023d2e: movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000043677: movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x0000000000024119: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000006e524: movsxd rax, dword ptr [rcx - 0x75]; add al, 0x89; ret 0xe281; 
0x0000000000033087: movsxd rax, dword ptr [rcx]; add byte ptr [rax], al; nop dword ptr [rax + rax]; ret; 
0x0000000000061a87: movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000075255: movsxd rax, dword ptr [rdi + 0xc]; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x00000000000747e1: movsxd rax, eax; mov eax, 0x104; syscall; 
0x0000000000074c42: movsxd rax, eax; mov eax, 0x109; syscall; 
0x00000000000239ff: movsxd rax, eax; mov eax, 0x12f; syscall; 
0x000000000002436c: movsxd rax, eax; mov eax, 0xbc; syscall; 
0x000000000002439c: movsxd rax, eax; mov eax, 0xbd; syscall; 
0x00000000000243cf: movsxd rax, eax; mov eax, 0xbe; syscall; 
0x0000000000023d2f: movsxd rax, eax; mov eax, 0xd8; syscall; 
0x0000000000043678: movsxd rax, eax; mov eax, 9; mov rdi, r12; syscall; 
0x000000000001df15: movsxd rax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000003fdc5: movsxd rax, edi; test eax, eax; je 0x3fdd2; bsf rax, rax; add eax, 1; ret; 
0x000000000003fc2e: movsxd rax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000003fc2d: movsxd rax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005bc7e: movsxd rbp, edi; mov eax, 5; mov rsi, rdx; mov rdi, rbp; syscall; 
0x0000000000035599: movsxd rcx, dword ptr [rax + 0xff20007]; pop rcx; ret; 
0x0000000000016c5d: movsxd rcx, dword ptr [rcx]; add byte ptr [rdi], cl; push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000002af0d: movsxd rcx, dword ptr [rdi]; xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000005ec3e: movsxd rdi, dword ptr [r12 + 0x78]; and ebx, 0xfff7ff3f; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x000000000006d877: movsxd rdi, dword ptr [r14 + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000005cc29: movsxd rdi, dword ptr [r15 + 0x78]; mov rax, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000007446a: movsxd rdi, dword ptr [r8 + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000050290: movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x0000000000050148: movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r15; syscall; 
0x000000000007445c: movsxd rdi, dword ptr [r8]; syscall; 
0x000000000007446b: movsxd rdi, dword ptr [rax + 0x14]; lea rsi, [rsp + 4]; mov eax, 1; syscall; 
0x0000000000050291: movsxd rdi, dword ptr [rax + 0x14]; mov rax, r10; syscall; 
0x0000000000050149: movsxd rdi, dword ptr [rax + 0x14]; mov rax, r15; syscall; 
0x000000000001f55f: movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000006c3ce: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; 
0x000000000006c3ce: movsxd rdi, dword ptr [rax + 0x30]; mov esi, 0x21; mov eax, 0xc8; syscall; ret; 
0x000000000007445d: movsxd rdi, dword ptr [rax]; syscall; 
0x0000000000070089: movsxd rdi, dword ptr [rbp + 0x30]; mov rax, r15; syscall; 
0x000000000004c5cb: movsxd rdi, dword ptr [rbp + 4]; mov rax, r8; syscall; 
0x0000000000074d9e: movsxd rdi, dword ptr [rbp + 4]; mov rax, r9; syscall; 
0x000000000004c5b8: movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000074d8b: movsxd rdi, dword ptr [rbp]; mov esi, 2; mov edx, 1; mov rax, r9; syscall; 
0x000000000004c5e3: movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r8; syscall; 
0x0000000000074db2: movsxd rdi, dword ptr [rbp]; mov esi, 4; mov edx, 0x800; mov rax, r9; syscall; 
0x000000000006ded9: movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x000000000006de82: movsxd rdi, dword ptr [rbx + 0x30]; test edi, edi; je 0x6de9b; mov eax, 0x8f; mov rsi, r13; syscall; 
0x000000000004278f: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000004278f: movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000059b75: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000059b75: movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; neg eax; ret; 
0x0000000000073cb7: movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x0000000000073cb7: movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; xor eax, eax; ret; 
0x0000000000059bec: movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000005cc2a: movsxd rdi, dword ptr [rdi + 0x78]; mov rax, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x000000000005ccf0: movsxd rdi, dword ptr [rdi + 0x78]; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000001e769: movsxd rdi, dword ptr [rdi + 8]; mov eax, 0xd9; mov edx, 0x800; mov rsi, r9; syscall; 
0x000000000007525d: movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000023879: movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000006d878: movsxd rdi, dword ptr [rsi + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000006081e: movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000060828: movsxd rdi, dword ptr [rsp + 0x1c]; mov rax, rdx; syscall; 
0x00000000000745f0: movsxd rdi, dword ptr [rsp + 0x28]; lea rsi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x0000000000074611: movsxd rdi, dword ptr [rsp + 0x28]; mov eax, 3; syscall; 
0x00000000000745dc: movsxd rdi, dword ptr [rsp + 0x2c]; mov r8d, eax; mov eax, 3; syscall; 
0x000000000005ec3f: movsxd rdi, dword ptr [rsp + 0x78]; and ebx, 0xfff7ff3f; mov eax, 0x48; mov esi, 4; movsxd rdx, ebx; syscall; 
0x0000000000060716: movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000060717: movsxd rdi, dword ptr [rsp + rsi*4 + 0x18]; mov eax, 3; syscall; 
0x0000000000021f46: movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074625: movsxd rdi, eax; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000005c089: movsxd rdi, eax; mov eax, 0x8a; syscall; 
0x000000000001f959: movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000005e171: movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000005c74a: movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x0000000000045185: movsxd rdi, eax; mov esi, 2; mov eax, 0x48; mov edx, 1; syscall; 
0x000000000005bd1f: movsxd rdi, eax; movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x0000000000050233: movsxd rdi, eax; movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000071d3e: movsxd rdi, eax; syscall; 
0x0000000000073a1e: movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000043bd3: movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000043d13: movsxd rdi, ebp; mov eax, 3; syscall; 
0x000000000005b5bc: movsxd rdi, ebp; movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x000000000005c4d7: movsxd rdi, ebx; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000071e27: movsxd rdi, ebx; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000001e721: movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000048011: movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x000000000005c5b7: movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000005af16: movsxd rdi, ebx; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000005c524: movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000023414: movsxd rdi, ecx; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023595: movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000000221d3: movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000005bffe: movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000007509f: movsxd rdi, edi; mov eax, 0x108; syscall; 
0x000000000006b3cc: movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b45c: movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x0000000000074fe6: movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x00000000000241d9: movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000234df: movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x000000000001fc0b: movsxd rdi, edi; mov eax, 0x11d; xor esi, esi; mov rdx, r8; syscall; 
0x000000000002418f: movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x00000000000241b9: movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x0000000000023b9f: movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x000000000002329d: movsxd rdi, edi; mov eax, 0x131; syscall; 
0x00000000000240f9: movsxd rdi, edi; mov eax, 0x132; syscall; 
0x0000000000023be8: movsxd rdi, edi; mov eax, 0x136; syscall; 
0x0000000000023bc8: movsxd rdi, edi; mov eax, 0x137; syscall; 
0x00000000000742f9: movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000005ac09: movsxd rdi, edi; mov eax, 0x24; syscall; 
0x000000000005adf9: movsxd rdi, edi; mov eax, 0x26; syscall; 
0x0000000000023d8b: movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000002427f: movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000022109: movsxd rdi, edi; mov eax, 0x41; syscall; 
0x000000000002204d: movsxd rdi, edi; mov eax, 0x42; syscall; 
0x0000000000074869: movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x00000000000412e9: movsxd rdi, edi; mov eax, 0x62; syscall; 
0x00000000000749c9: movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074b09: movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b59: movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x0000000000059c89: movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059ca9: movsxd rdi, edi; mov eax, 0x93; syscall; 
0x0000000000059de9: movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000043629: movsxd rdi, edi; mov eax, 0x97; syscall; 
0x00000000000231f9: movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236d9: movsxd rdi, edi; mov eax, 0xac; syscall; 
0x0000000000023caf: movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x0000000000023cd5: movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x00000000000242e8: movsxd rdi, edi; mov eax, 0xc1; syscall; 
0x0000000000024345: movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x0000000000024439: movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000059b59: movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000059b96: movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x000000000002212c: movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x0000000000071f29: movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000071d89: movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x000000000001f4d5: movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x00000000000233c2: movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x0000000000043e39: movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x0000000000043ac9: movsxd rdi, edi; mov eax, 3; syscall; 
0x0000000000023f8c: movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005bf79: movsxd rdi, edi; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023659: movsxd rdi, edi; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000411c9: movsxd rdi, edi; mov esi, esi; mov eax, 0x8c; syscall; 
0x0000000000042759: movsxd rdi, edi; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x000000000005bab2: movsxd rdi, edi; mov r10d, 0x100; mov rax, r12; mov rdx, r13; syscall; 
0x000000000006f5c4: movsxd rdi, edi; mov r10d, 8; mov eax, 0xe; syscall; 
0x0000000000024138: movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x00000000000240c9: movsxd rdi, edi; mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000024235: movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x00000000000747db: movsxd rdi, edi; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x000000000007431c: movsxd rdi, edi; mov r8d, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000004c3c2: movsxd rdi, edi; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x00000000000233ef: movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x000000000002401b: movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x000000000002334b: movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x000000000002352b: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x000000000001fbe5: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x000000000001fbe5: movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000074c3f: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x00000000000239fc: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000243cc: movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000075669: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a29: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x0000000000022155: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x00000000000236f9: movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000074c65: movsxd rdi, edi; movsxd rdx, edx; mov eax, 8; syscall; 
0x0000000000024159: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023ed9: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022179: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac29: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f69: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f39: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023559: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000075149: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023689: movsxd rdi, edi; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000220c1: movsxd rdi, edi; movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x0000000000023365: movsxd rdi, edi; sub rsp, 8; mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000023605: movsxd rdi, edi; sub rsp, 8; mov eax, 0x126; mov rdx, rdi; syscall; 
0x000000000005bb43: movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x00000000000451cb: movsxd rdi, edi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000047e59: movsxd rdi, edi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479c9: movsxd rdi, edi; xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000047e92: movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x0000000000023459: movsxd rdi, edx; call 0x21bc0; add rsp, 8; ret; 
0x000000000004519e: movsxd rdi, esi; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000061549: movsxd rdi, esi; mov eax, 3; syscall; 
0x00000000000502a1: movsxd rdi, esi; mov rax, rbx; syscall; 
0x000000000005b8a6: movsxd rdi, esp; lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000006e32f: movsxd rdi, esp; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000006e32e: movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x0000000000043d12: movsxd rdi, r13d; mov eax, 3; syscall; 
0x000000000004519d: movsxd rdi, r14d; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000061548: movsxd rdi, r14d; mov eax, 3; syscall; 
0x00000000000502a0: movsxd rdi, r14d; mov rax, rbx; syscall; 
0x0000000000074624: movsxd rdi, r8d; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000005c088: movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000005bd1e: movsxd rdi, r8d; movsxd r10, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x0000000000071d3d: movsxd rdi, r8d; syscall; 
0x00000000000743a5: movsxd rdi, r9d; call 0x21bc0; add rsp, 8; ret; 
0x000000000006ff9e: movsxd rdx, dword ptr [r13 + 0x30]; cmp rdx, rax; je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x000000000006ff9f: movsxd rdx, dword ptr [rbp + 0x30]; cmp rdx, rax; je 0x70010; mov rax, qword ptr [rsp]; mov rdi, r12; call rax; 
0x0000000000075260: movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x0000000000035551: movsxd rdx, dword ptr [rdi + rax + 0x590ff200]; ret; 
0x00000000000502da: movsxd rdx, eax; mov eax, 0x48; syscall; 
0x000000000005c5d1: movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000005bbcc: movsxd rdx, eax; movsxd rdi, ebp; mov eax, 3; syscall; 
0x000000000005e3cd: movsxd rdx, eax; test eax, eax; mov rax, rdx; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000006b536: movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000004379a: movsxd rdx, ebp; mov eax, 0x19; syscall; 
0x0000000000043675: movsxd rdx, ebx; movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x000000000005ec54: movsxd rdx, ebx; syscall; 
0x000000000005bd22: movsxd rdx, ecx; mov eax, 0x106; mov rsi, r9; syscall; 
0x000000000002352e: movsxd rdx, ecx; mov eax, 0x12d; syscall; 
0x0000000000074534: movsxd rdx, ecx; mov eax, 0x1b7; mov rdi, r13; mov rdx, r14; syscall; 
0x000000000001fbe8: movsxd rdx, ecx; mov eax, 0xdd; syscall; 
0x000000000001fbe8: movsxd rdx, ecx; mov eax, 0xdd; syscall; neg eax; ret; 
0x0000000000023cf9: movsxd rdx, edi; mov eax, 0xa9; mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x000000000007566c: movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a2c: movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000435c9: movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000438fc: movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x00000000000221da: movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000022158: movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x00000000000220c7: movsxd rdx, edx; mov eax, 0x40; syscall; 
0x00000000000236fc: movsxd rdx, edx; mov eax, 0x67; syscall; 
0x000000000004275e: movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000236b9: movsxd rdx, edx; mov eax, 0xad; syscall; 
0x0000000000074c68: movsxd rdx, edx; mov eax, 8; syscall; 
0x000000000006f093: movsxd rdx, edx; mov r8d, 0xca; cmove rsi, r10; mov rax, r8; syscall; 
0x0000000000043672: movsxd rdx, edx; movsxd r10, ebx; movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x0000000000023d2c: movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x000000000007509c: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x000000000002427c: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000023cac: movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x00000000000233ec: movsxd rdx, edx; movsxd rdi, edi; mov r9d, 8; mov eax, 0x119; syscall; 
0x0000000000024018: movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x113; syscall; 
0x0000000000023348: movsxd rdx, edx; movsxd rdi, edi; mov r9d, r9d; mov eax, 0x146; syscall; 
0x0000000000074c3c: movsxd rdx, edx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x109; syscall; 
0x0000000000022047: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x00000000000233bc: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x0000000000047e8c: movsxd rdx, edx; movsxd rsi, esi; movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x0000000000023f85: movsxd rdx, edx; sub rsp, 8; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005c859: movsxd rdx, edx; xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000006b535: movsxd rdx, r8d; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x0000000000023c52: movsxd rsi, dword ptr [rax + 8]; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x0000000000050042: movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x0000000000075259: movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x000000000006d87c: movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000006f489: movsxd rsi, ebx; mov eax, 0x90; mov rdx, rbp; syscall; 
0x000000000006e332: movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000005ad9e: movsxd rsi, ebx; mov rax, qword ptr fs:[0]; movsxd rdi, dword ptr [rax + 0x30]; mov eax, 0xc8; syscall; 
0x000000000005b5bf: movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x0000000000050236: movsxd rsi, edx; mov rax, r12; syscall; 
0x0000000000019a3a: movsxd rsi, esi; lea rax, [rip + 0x625bd]; movsx rax, word ptr [rax + rsi*2]; ret; 
0x00000000000753a9: movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x000000000002415c: movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023edc: movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000074199: movsxd rsi, esi; mov eax, 0x15; syscall; 
0x000000000002217c: movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac2c: movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f6c: movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f3c: movsxd rsi, esi; mov eax, 0x47; syscall; 
0x000000000002355c: movsxd rsi, esi; mov eax, 0x49; syscall; 
0x000000000007514c: movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x00000000000239d9: movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000024089: movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000073d50: movsxd rsi, esi; mov eax, 0xdf; syscall; 
0x0000000000043db9: movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000002368c: movsxd rsi, esi; mov eax, 0xff; syscall; 
0x0000000000023439: movsxd rsi, esi; mov edi, edi; mov eax, 0x122; syscall; 
0x00000000000234dc: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x000000000002418c: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023b9c: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000023d88: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x28; syscall; 
0x000000000002204a: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x42; syscall; 
0x00000000000233bf: movsxd rsi, esi; movsxd rdi, edi; mov eax, 0xe9; syscall; 
0x0000000000024135: movsxd rsi, esi; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x114; syscall; 
0x0000000000074319: movsxd rsi, esi; movsxd rdi, edi; mov r8d, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000004c3bf: movsxd rsi, esi; movsxd rdi, edi; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000047e8f: movsxd rsi, esi; movsxd rdi, edi; xor r9d, r9d; mov eax, 0x37; syscall; 
0x00000000000220c4: movsxd rsi, esi; movsxd rdx, edx; mov eax, 0x40; syscall; 
0x000000000004c4c7: movsxd rsi, esi; syscall; 
0x00000000000703ec: movsxd rsp, eax; mov rbx, rax; mov rsi, rsp; mov eax, 5; mov rdi, r12; syscall; 
0x000000000005097f: movupd xmmword ptr [edi + 0x58], xmm5; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x000000000005083f: movupd xmmword ptr [rsi + 0x50], xmm5; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000003cb43: movups xmm0, xmmword ptr [rip + 0x71886]; test rax, rax; je 0x3cb60; ret; 
0x000000000003ba3e: movups xmm0, xmmword ptr [rip + 0x73a7b]; ret; 
0x000000000003a422: movups xmm0, xmmword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x000000000003cbab: movups xmm0, xmmword ptr [rip + 0x73eea]; test eax, eax; je 0x3cbd0; ret; 
0x00000000000399d1: movups xmm0, xmmword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x000000000003a955: movups xmm0, xmmword ptr [rip + 0x7464c]; ret; 
0x000000000003a965: movups xmm0, xmmword ptr [rip + 0x74be4]; ret; 
0x000000000003a491: movups xmm0, xmmword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b90: movups xmm0, xmmword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x00000000000366f9: movups xmm0, xmmword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x0000000000036559: movups xmm0, xmmword ptr [rip + 0x778a0]; add rsp, 8; pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x00000000000365e1: movups xmm0, xmmword ptr [rip + 0x77a20]; divsd xmm0, qword ptr [rip + 0x77830]; ret; 
0x0000000000036f99: movups xmm0, xmmword ptr [rip + 0x78520]; divss xmm0, xmm1; ret; 
0x0000000000036e08: movups xmm0, xmmword ptr [rip + 0x786b1]; add rsp, 8; pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x00000000000365d4: movups xmm0, xmmword ptr [rip + 0x78715]; divsd xmm0, xmm1; ret; 
0x0000000000035601: movups xmm0, xmmword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000354f9: movups xmm0, xmmword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000035e59: movups xmm0, xmmword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x0000000000036e89: movups xmm0, xmmword ptr [rip + 0x79b7c]; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000036e78: movups xmm0, xmmword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x00000000000338cc: movups xmm0, xmmword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000035d59: movups xmm0, xmmword ptr [rip + 0x7acac]; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x000000000003100a: movups xmm0, xmmword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000033979: movups xmm0, xmmword ptr [rip + 0x7d08c]; ret; 
0x0000000000030af1: movups xmm0, xmmword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030acc: movups xmm0, xmmword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000310d8: movups xmm0, xmmword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000030b79: movups xmm0, xmmword ptr [rip + 0x7e940]; ret; 
0x000000000002ee91: movups xmm0, xmmword ptr [rip + 0x7f458]; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x000000000002edd7: movups xmm0, xmmword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x0000000000030b5f: movups xmm0, xmmword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d111: movups xmm0, xmmword ptr [rip + 0x80ce8]; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002f0c9: movups xmm0, xmmword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002f0b3: movups xmm0, xmmword ptr [rip + 0x81972]; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000002ef83: movups xmm0, xmmword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002d141: movups xmm0, xmmword ptr [rip + 0x82378]; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x00000000000167ba: movups xmm0, xmmword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000003aa11: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; ret; 
0x0000000000068104: movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000003a9c1: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000068127: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb5: movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x000000000003ba37: movups xmm0, xmmword ptr [rsp - 0xc]; ret; 
0x000000000002d14f: movups xmm0, xmmword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000017e6b: movups xmm0, xmmword ptr [rsp - 4]; ret; 
0x000000000002d11f: movups xmm0, xmmword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000001846b: movups xmm0, xmmword ptr [rsp - 8]; ret; 
0x00000000000316c6: movups xmm1, xmmword ptr [rip + 0x7cd8b]; add rsp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000031d15: movups xmm1, xmmword ptr [rip + 0x7edb8]; add rsp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002eb29: movups xmm1, xmmword ptr [rip + 0x7f4d8]; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ffd5: movups xmm1, xmmword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003af1e: movups xmm1, xmmword ptr [rsp + 0xc]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b005: movups xmm1, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x0000000000017eda: movups xmm1, xmmword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000003285b: movups xmm1, xmmword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000002d249: movups xmm1, xmmword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002d21b: movups xmm1, xmmword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000017bc3: movups xmm1, xmmword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x00000000000175a4: movups xmm1, xmmword ptr [rsp]; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x00000000000319e9: movups xmm2, xmmword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003192d: movups xmm2, xmmword ptr [rip + 0x7c4dc]; subsd xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000319ce: movups xmm2, xmmword ptr [rip + 0x7c93b]; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000031955: movups xmm2, xmmword ptr [rip + 0x7c9b4]; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031991: movups xmm2, xmmword ptr [rip + 0x7cc18]; mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x0000000000032019: movups xmm2, xmmword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f75: movups xmm2, xmmword ptr [rip + 0x7d54c]; subss xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000002fe0b: movups xmm2, xmmword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000031fd1: movups xmm2, xmmword ptr [rip + 0x7ea50]; mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000031ffe: movups xmm2, xmmword ptr [rip + 0x7ea7b]; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f9d: movups xmm2, xmmword ptr [rip + 0x7eadc]; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x00000000000349f8: movups xmm2, xmmword ptr [rsp + 0xc]; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x00000000000348fd: movups xmm7, xmmword ptr [rsp + 8]; mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x00000000000253b2: movups xmmword ptr [rax + 0x10], xmm1; movdqu xmm2, xmmword ptr [rbx + 0x20]; movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x00000000000253bb: movups xmmword ptr [rax + 0x20], xmm2; pop rbx; ret; 
0x000000000006f24c: movups xmmword ptr [rbx + 0x10], xmm0; movups xmmword ptr [rbx + 0x20], xmm0; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000006f250: movups xmmword ptr [rbx + 0x20], xmm0; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x000000000006be9b: movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b988: movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi], esi; ret; 
0x000000000006b8cd: movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x000000000006b8d1: movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x000000000005097d: movups xmmword ptr [rdi + 0x48], xmm4; movups xmmword ptr [rdi + 0x58], xmm5; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000050981: movups xmmword ptr [rdi + 0x58], xmm5; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000050985: movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x0000000000050989: movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x00000000000509d9: movups xmmword ptr [rdi + 0xc8], xmm4; movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e0: movups xmmword ptr [rdi + 0xd8], xmm5; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509e7: movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x00000000000509ee: movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x000000000003a7e1: movups xmmword ptr [rdi], xmm0; and edx, 0x80000000; movd xmm0, edx; ret; 
0x000000000003a7cf: movups xmmword ptr [rdi], xmm0; cmp ecx, 0x80; jne 0x3a7e4; shl eax, 9; je 0x3a7e4; ret; 
0x000000000003a741: movups xmmword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000006be98: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b985: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi], esi; ret; 
0x000000000006b8ca: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x000000000005083d: movups xmmword ptr [rsi + 0x40], xmm4; movups xmmword ptr [rsi + 0x50], xmm5; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000050841: movups xmmword ptr [rsi + 0x50], xmm5; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000050845: movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000050849: movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x0000000000016bd1: movups xmmword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x00000000000197ad: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x20; pop rbx; ret; 
0x0000000000017d7a: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x30; pop rbx; ret; 
0x0000000000016bd7: movups xmmword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000003ae5f: movups xmmword ptr [rsp + 0x18], xmm1; add rsp, 0x20; pop rbx; ret; 
0x000000000003afb6: movups xmmword ptr [rsp + 0x1c], xmm0; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000177ca: movups xmmword ptr [rsp + 0x1c], xmm0; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x00000000000310d2: movups xmmword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000019bfd: movups xmmword ptr [rsp + 0x1d0], xmm0; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c05: movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000019c0d: movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x000000000001f548: movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x00000000000190ee: movups xmmword ptr [rsp + 0x20], xmm0; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000190f4: movups xmmword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000003a9b6: movups xmmword ptr [rsp + 8], xmm0; call 0x7ae8e; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; ret; 
0x0000000000031004: movups xmmword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000017ac4: movups xmmword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000032865: movups xmmword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003ab55: movups xmmword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000032855: movups xmmword ptr [rsp - 0x18], xmm2; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000034d67: movups xmmword ptr [rsp - 0xc], xmm0; ret; 
0x000000000003ba31: movups xmmword ptr [rsp - 0xc], xmm1; movss xmm0, dword ptr [rsp - 0xc]; ret; 
0x000000000003abf1: movups xmmword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003f39d: movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000030b59: movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rip + 0x7ff36]; test eax, eax; jns 0x30b70; ret; 
0x000000000002d149: movups xmmword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x0000000000033959: movups xmmword ptr [rsp - 4], xmm0; pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x0000000000034c5d: movups xmmword ptr [rsp - 4], xmm0; ret; 
0x000000000002d243: movups xmmword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000003326d: movups xmmword ptr [rsp - 4], xmm1; ret; 
0x000000000003cd19: movups xmmword ptr [rsp - 4], xmm2; ret; 
0x000000000007a6f8: movups xmmword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000030b43: movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000003f352: movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000002d119: movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x00000000000338f1: movups xmmword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x000000000002d215: movups xmmword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000030ad4: movups xmmword ptr [rsp - 8], xmm1; ret; 
0x000000000003ab00: movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000007a6f2: movups xmmword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000001836d: movups xmmword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000017bb9: movups xmmword ptr [rsp], xmm1; call 0x32690; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000006ba23: movzx eax, al; add eax, 1; add rsp, 8; ret; 
0x00000000000701d4: movzx eax, al; add eax, 2; add rsp, 8; ret; 
0x000000000001e42d: movzx eax, al; add rax, rax; ret; 
0x0000000000024686: movzx eax, al; cmova eax, edx; ret; 
0x000000000006b907: movzx eax, al; lea eax, [rax + rax + 2]; add rsp, 8; ret; 
0x0000000000048fde: movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000002348d: movzx eax, al; neg eax; ret; 
0x000000000001dbd2: movzx eax, al; ret; 
0x000000000006a3cf: movzx eax, al; sub eax, edx; ret; 
0x000000000002e70d: movzx eax, ax; ret; 
0x0000000000043f1b: movzx eax, bh; ret; 
0x0000000000069450: movzx eax, byte ptr [r12]; test al, al; jne 0x69448; mov rax, r12; pop r12; ret; 
0x000000000005d5d2: movzx eax, byte ptr [rax]; ret; 
0x000000000001ddb2: movzx eax, byte ptr [rcx + rax]; mov ecx, edi; sar eax, cl; and eax, 1; ret; 
0x0000000000061ac2: movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000048ff0: movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000006a41f: movzx eax, byte ptr [rdi - 2]; mov byte ptr [rsi - 1], al; cmp rdi, rdx; jne 0x6a410; ret; 
0x000000000006f27c: movzx eax, byte ptr [rdx + 0x40]; mov dword ptr [rsi], eax; mov byte ptr [rdx + 0x40], dil; xor eax, eax; ret; 
0x000000000004593d: movzx eax, byte ptr [rdx]; test al, al; jne 0x45920; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x000000000002b268: movzx eax, byte ptr [rip + 0x89614]; test al, al; jne 0x2b278; ret; 
0x000000000001e54e: movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; add eax, 1; ret; 
0x00000000000684b9: movzx eax, byte ptr [rsi]; mov byte ptr [r11], al; mov eax, 1; ret; 
0x0000000000069451: movzx eax, byte ptr [rsp]; test al, al; jne 0x69448; mov rax, r12; pop r12; ret; 
0x000000000004863d: movzx eax, di; cmp edx, 0xbf; movzx edi, dil; cmova eax, edi; ret; 
0x0000000000043f1a: movzx eax, dil; ret; 
0x0000000000068b26: movzx eax, dl; sub eax, ecx; ret; 
0x0000000000069a0e: movzx eax, dl; sub eax, esi; ret; 
0x0000000000025450: movzx eax, word ptr [rax + rdx*2]; ret; 
0x0000000000061a3e: movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000004a7d4: movzx eax, word ptr [rdi]; rol ax, 8; movzx eax, ax; ret; 
0x000000000002e704: movzx eax, word ptr [rsp + 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x0000000000068ad9: movzx ecx, byte ptr [rax]; cmp ecx, r10d; jne 0x68ad0; ret; 
0x0000000000068b1e: movzx ecx, byte ptr [rdi + rax]; cmp dl, cl; je 0x68b10; movzx eax, dl; sub eax, ecx; ret; 
0x0000000000048647: movzx edi, bh; cmova eax, edi; ret; 
0x0000000000045056: movzx edi, bh; cmp eax, 0x80; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x0000000000048646: movzx edi, dil; cmova eax, edi; ret; 
0x0000000000045055: movzx edi, dil; cmp eax, 0x80; mov eax, 0xffffffff; cmovb eax, edi; ret; 
0x000000000006a36e: movzx edx, al; movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x000000000006c534: movzx edx, byte ptr [rax + 0x40]; test dl, dl; je 0x6c540; ret; 
0x000000000006c405: movzx edx, byte ptr [rax + 0x41]; test dl, dl; jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c548: movzx edx, byte ptr [rax + 0x41]; test dl, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000029374: movzx edx, dl; and eax, edx; ret; 
0x000000000006a3cc: movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x000000000006a371: movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x0000000000022db5: mul dword ptr [rbx - 0x38b7fffd]; add eax, 0x93fb4; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000071fc6: mul dword ptr [rsi + 0xf]; out dx, eax; sal dl, 0x48; cvtpi2ps xmm0, mm7; ret; 
0x000000000003a4c1: mulps xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003a451: mulps xmm0, xmm0; ret; 
0x000000000003ce56: mulps xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000032c64: mulps xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003b8e2: mulps xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000034369: mulps xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003c7d1: mulps xmm0, xmm1; movapd xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003ca21: mulps xmm0, xmm1; movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002d221: mulps xmm0, xmm1; ret; 
0x000000000002f435: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ed65: mulps xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002cead: mulps xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000032764: mulps xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000002ed71: mulps xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x0000000000034535: mulps xmm0, xmm2; movaps xmm1, xmm0; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000033471: mulps xmm0, xmm2; movaps xmm3, xmm0; subss xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000002cf6e: mulps xmm0, xmm2; ret; 
0x0000000000033241: mulps xmm0, xmm4; movapd xmm2, xmm0; subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000003358b: mulps xmm0, xmm4; ret; 
0x00000000000331ae: mulps xmm0, xmm5; ret; 
0x000000000003a22b: mulps xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000034903: mulps xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000003cc61: mulps xmm0, xmmword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003cd11: mulps xmm0, xmmword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x00000000000366df: mulps xmm0, xmmword ptr [rip + 0x7797a]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000354dd: mulps xmm0, xmmword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000034387: mulps xmm0, xmmword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000036f83: mulps xmm0, xmmword ptr [rip + 0x79dfe]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x0000000000033223: mulps xmm0, xmmword ptr [rip + 0x7abde]; ret; 
0x0000000000035d41: mulps xmm0, xmmword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x00000000000327f6: mulps xmm0, xmmword ptr [rip + 0x7bdb3]; ret; 
0x00000000000335da: mulps xmm0, xmmword ptr [rip + 0x7bee3]; ret; 
0x000000000003175a: mulps xmm0, xmmword ptr [rip + 0x7c957]; ret; 
0x000000000003105e: mulps xmm0, xmmword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000003174e: mulps xmm0, xmmword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000003111c: mulps xmm0, xmmword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x000000000002f66d: mulps xmm0, xmmword ptr [rip + 0x7e784]; addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000031da2: mulps xmm0, xmmword ptr [rip + 0x7edb3]; ret; 
0x0000000000031d96: mulps xmm0, xmmword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x0000000000030760: mulps xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x000000000003aaf8: mulps xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000002f6c8: mulps xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000031533: mulps xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x0000000000031b81: mulps xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000017434: mulps xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x000000000007a9cd: mulps xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x0000000000034552: mulps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003b8d5: mulps xmm1, xmm0; movq xmm0, rax; addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a41e: mulps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399cd: mulps xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x00000000000335b0: mulps xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003a48d: mulps xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b8c: mulps xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x000000000003174a: mulps xmm1, xmm0; mulsd xmm0, qword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x0000000000031d92: mulps xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000003ba0b: mulps xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x00000000000327e8: mulps xmm1, xmm2; addsd xmm0, xmm1; comisd xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000039607: mulps xmm1, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x0000000000032e77: mulps xmm1, xmm2; addsd xmm1, xmm0; pxor xmm0, xmm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x000000000003289f: mulps xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000017350: mulps xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000032861: mulps xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000001738a: mulps xmm1, xmm3; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000035467: mulps xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035ce5: mulps xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000032e83: mulps xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000039b53: mulps xmm1, xmm4; addss xmm2, xmm3; addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x000000000002ea51: mulps xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000001964b: mulps xmm1, xmm5; mulsd xmm1, xmm5; ret; 
0x0000000000016660: mulps xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x000000000001964f: mulps xmm1, xmm5; ret; 
0x0000000000016664: mulps xmm1, xmm6; ret; 
0x0000000000017c16: mulps xmm1, xmmword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003eae9: mulps xmm2, xmm0; movapd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003abe9: mulps xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003cf49: mulps xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000031999: mulps xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x0000000000031fd9: mulps xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x000000000003a36f: mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000174bd: mulps xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000173c8: mulps xmm2, xmm3; movapd xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000033591: mulps xmm2, xmmword ptr [rip + 0x7bf40]; movaps xmm0, xmm2; ret; 
0x0000000000019454: mulps xmm3, xmm4; add rsp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x0000000000018714: mulps xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000035463: mulps xmm4, xmm2; mulsd xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035ce1: mulps xmm4, xmm2; mulss xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000018672: mulps xmm4, xmm3; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000033231: mulps xmm4, xmmword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x000000000007a6ee: mulps xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x000000000007a9c9: mulps xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002e7bd: mulps xmm5, xmm2; subsd xmm5, xmm1; subsd xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x0000000000033668: mulps xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000003cc60: mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x00000000000366de: mulsd xmm0, qword ptr [rip + 0x7797a]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000354dc: mulsd xmm0, qword ptr [rip + 0x78b7c]; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000034386: mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000033222: mulsd xmm0, qword ptr [rip + 0x7abde]; ret; 
0x00000000000327f5: mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000031759: mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000003105d: mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000003174d: mulsd xmm0, qword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000002f66c: mulsd xmm0, qword ptr [rip + 0x7e784]; addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a450: mulsd xmm0, xmm0; ret; 
0x000000000003ce55: mulsd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000032c63: mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000003b8e1: mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000034368: mulsd xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003c7d0: mulsd xmm0, xmm1; movapd xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002d220: mulsd xmm0, xmm1; ret; 
0x000000000002f434: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ed64: mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ceac: mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000032763: mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000002ed70: mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002cf6d: mulsd xmm0, xmm2; ret; 
0x0000000000033240: mulsd xmm0, xmm4; movapd xmm2, xmm0; subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x00000000000331ad: mulsd xmm0, xmm5; ret; 
0x000000000003a22a: mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000034902: mulsd xmm0, xmm7; add rsp, 0x18; ret; 
0x0000000000017c15: mulsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000003075f: mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x000000000003aaf7: mulsd xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000031532: mulsd xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x0000000000017433: mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x000000000007a9cc: mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000003b8d4: mulsd xmm1, xmm0; movq xmm0, rax; addsd xmm1, xmm4; mulsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003a41d: mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399cc: mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x0000000000031749: mulsd xmm1, xmm0; mulsd xmm0, qword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x00000000000327e7: mulsd xmm1, xmm2; addsd xmm0, xmm1; comisd xmm4, xmm0; ja 0x32810; mulsd xmm0, qword ptr [rip + 0x7bdb3]; ret; 
0x0000000000039606: mulsd xmm1, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm6; ret; 
0x0000000000032e76: mulsd xmm1, xmm2; addsd xmm1, xmm0; pxor xmm0, xmm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x000000000003289e: mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000001734f: mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000032860: mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000017389: mulsd xmm1, xmm3; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000035466: mulsd xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000032e82: mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ea50: mulsd xmm1, xmm5; movapd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000001964a: mulsd xmm1, xmm5; mulsd xmm1, xmm5; ret; 
0x000000000001665f: mulsd xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x000000000001964e: mulsd xmm1, xmm5; ret; 
0x0000000000016663: mulsd xmm1, xmm6; ret; 
0x000000000003eae8: mulsd xmm2, xmm0; movapd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000031998: mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x000000000003a36e: mulsd xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000174bc: mulsd xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000173c7: mulsd xmm2, xmm3; movapd xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000019453: mulsd xmm3, xmm4; add rsp, 0x20; pop rbx; movapd xmm1, xmm3; ret; 
0x0000000000033230: mulsd xmm4, qword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x0000000000018713: mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000035462: mulsd xmm4, xmm2; mulsd xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000018671: mulsd xmm4, xmm3; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x000000000007a9c8: mulsd xmm5, xmm1; mulsd xmm1, xmm0; movapd xmm0, xmm5; ret; 
0x000000000002e7bc: mulsd xmm5, xmm2; subsd xmm5, xmm1; subsd xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003cd10: mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x0000000000036f82: mulss xmm0, dword ptr [rip + 0x79dfe]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x0000000000035d40: mulss xmm0, dword ptr [rip + 0x7b040]; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x00000000000335d9: mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000003111b: mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x0000000000031da1: mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x0000000000031d95: mulss xmm0, dword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000003a4c0: mulss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003ca20: mulss xmm0, xmm1; movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002d24e: mulss xmm0, xmm1; ret; 
0x0000000000034534: mulss xmm0, xmm2; movaps xmm1, xmm0; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000033470: mulss xmm0, xmm2; movaps xmm3, xmm0; subss xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000002cfbb: mulss xmm0, xmm2; ret; 
0x000000000003358a: mulss xmm0, xmm4; ret; 
0x000000000002f6c7: mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000031b80: mulss xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000034551: mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000335af: mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003a48c: mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b8b: mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x0000000000031d91: mulss xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000003ba0a: mulss xmm1, xmm1; movaps xmm0, xmm1; ret; 
0x0000000000035ce4: mulss xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000039b52: mulss xmm1, xmm4; addss xmm2, xmm3; addss xmm1, xmm2; addss xmm0, xmm1; ret; 
0x0000000000033590: mulss xmm2, dword ptr [rip + 0x7bf40]; movaps xmm0, xmm2; ret; 
0x000000000003abe8: mulss xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003cf48: mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000031fd8: mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000035ce0: mulss xmm4, xmm2; mulss xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x000000000007a6ed: mulss xmm5, xmm0; movss dword ptr [rsp - 8], xmm4; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000033667: mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x0000000000020335: neg byte ptr [rcx - 0x76be0009]; ret; 
0x000000000001f136: neg byte ptr [rsi - 1]; dec dword ptr [rax - 0x77]; ret; 
0x0000000000066035: neg dword ptr [rdi + rdi*8 - 0x76387601]; ret; 
0x0000000000071eda: neg eax; add rsp, 8; ret; 
0x0000000000042799: neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x0000000000072457: neg eax; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000001e57f: neg eax; ret; 
0x00000000000708d0: neg eax; test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x0000000000021beb: neg edi; mov dword ptr [rax], edi; mov rax, -1; add rsp, 0x18; ret; 
0x000000000006a552: neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x000000000003fb8d: neg edx; xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x0000000000030b6b: nop dword ptr [rax + rax]; add edx, edx; movd xmm0, eax; je 0x30b6a; movss xmm0, dword ptr [rip + 0x7e940]; ret; 
0x0000000000068a0b: nop dword ptr [rax + rax]; add rdi, 1; mov rax, rdi; ret; 
0x0000000000032d8b: nop dword ptr [rax + rax]; addsd xmm0, qword ptr [rip + 0x7b068]; ret; 
0x000000000003286b: nop dword ptr [rax + rax]; addsd xmm0, qword ptr [rip + 0x7b588]; ret; 
0x0000000000030adb: nop dword ptr [rax + rax]; addsd xmm0, qword ptr [rip + 0x7d318]; ret; 
0x000000000003ab08: nop dword ptr [rax + rax]; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab48: nop dword ptr [rax + rax]; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000032ec8: nop dword ptr [rax + rax]; addss xmm0, xmm0; ret; 
0x0000000000034a08: nop dword ptr [rax + rax]; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000002cd5b: nop dword ptr [rax + rax]; call 0x1f460; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000004713b: nop dword ptr [rax + rax]; endbr64; cmp esi, 0xc; je 0x47150; xor eax, eax; ret; 
0x000000000003fa7b: nop dword ptr [rax + rax]; endbr64; cvtss2si rax, xmm0; ret; 
0x0000000000017e7b: nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 0x18]; ret; 
0x000000000003f3eb: nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 8]; fabs; ret; 
0x000000000001847b: nop dword ptr [rax + rax]; endbr64; fld xword ptr [rsp + 8]; ret; 
0x000000000001ef1b: nop dword ptr [rax + rax]; endbr64; hlt; ret; 
0x000000000004bc68: nop dword ptr [rax + rax]; endbr64; lea rax, [rip + 0x692a5]; ret; 
0x0000000000022bf8: nop dword ptr [rax + rax]; endbr64; mov eax, 0x1000; ret; 
0x000000000006e46b: nop dword ptr [rax + rax]; endbr64; mov eax, 0x16; ret; 
0x000000000007028b: nop dword ptr [rax + rax]; endbr64; mov eax, 0x18; syscall; 
0x000000000007028b: nop dword ptr [rax + rax]; endbr64; mov eax, 0x18; syscall; ret; 
0x000000000005b69b: nop dword ptr [rax + rax]; endbr64; mov eax, 0x23; ret; 
0x00000000000508db: nop dword ptr [rax + rax]; endbr64; mov eax, 0x26; ret; 
0x0000000000073d68: nop dword ptr [rax + rax]; endbr64; mov eax, 0x64; syscall; 
0x0000000000045d1b: nop dword ptr [rax + rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000004ac4b: nop dword ptr [rax + rax]; endbr64; mov eax, edi; bswap eax; ret; 
0x000000000005b1db: nop dword ptr [rax + rax]; endbr64; mov qword ptr [rdi], 0; xor eax, eax; ret; 
0x000000000003a94b: nop dword ptr [rax + rax]; endbr64; movsd xmm0, qword ptr [rip + 0x7464c]; ret; 
0x00000000000414b8: nop dword ptr [rax + rax]; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x000000000003f3cb: nop dword ptr [rax + rax]; endbr64; pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x0000000000059bdb: nop dword ptr [rax + rax]; endbr64; push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x000000000001844b: nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000004a7eb: nop dword ptr [rax + rax]; endbr64; rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000003fbab: nop dword ptr [rax + rax]; endbr64; sqrtsd xmm0, xmm0; ret; 
0x000000000005adeb: nop dword ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x00000000000220fb: nop dword ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000043abb: nop dword ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x000000000002407b: nop dword ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x000000000006f63b: nop dword ptr [rax + rax]; endbr64; xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x0000000000023038: nop dword ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x000000000001802b: nop dword ptr [rax + rax]; endbr64; xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000034b53: nop dword ptr [rax + rax]; faddp st(1); add rsp, 0x48; ret; 
0x00000000000337eb: nop dword ptr [rax + rax]; fld xword ptr [rsp + 0x20]; add rsp, 8; ret; 
0x000000000003a52b: nop dword ptr [rax + rax]; fmul st(0); add rsp, 0x18; ret; 
0x0000000000032638: nop dword ptr [rax + rax]; fmul st(0); add rsp, 0x28; ret; 
0x0000000000034bdb: nop dword ptr [rax + rax]; jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x0000000000021a93: nop dword ptr [rax + rax]; lea eax, [r9 + 2]; mov byte ptr [r10], 0x30; mov byte ptr [r8 + rax], 0; ret; 
0x000000000004f098: nop dword ptr [rax + rax]; mov dword ptr [r8], edi; ret; 
0x000000000006e043: nop dword ptr [rax + rax]; mov eax, 0x10; ret; 
0x000000000006bea3: nop dword ptr [rax + rax]; mov eax, 0x16; ret; 
0x00000000000743b3: nop dword ptr [rax + rax]; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x00000000000232b3: nop dword ptr [rax + rax]; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000006eff8: nop dword ptr [rax + rax]; mov eax, 0xb; ret; 
0x000000000007027b: nop dword ptr [rax + rax]; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000043f48: nop dword ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x000000000001e048: nop dword ptr [rax + rax]; mov eax, 1; ret; 
0x0000000000045068: nop dword ptr [rax + rax]; mov eax, edi; ret; 
0x000000000005bb3b: nop dword ptr [rax + rax]; mov edx, edx; movsxd rdi, edi; xor r10d, r10d; mov eax, 0x10c; syscall; 
0x0000000000015b98: nop dword ptr [rax + rax]; mov esi, 1; mov rax, r8; syscall; 
0x000000000005a353: nop dword ptr [rax + rax]; mov qword ptr [rdi + 8], 0; mov qword ptr [rdi], 0; ret; 
0x000000000006d023: nop dword ptr [rax + rax]; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000047ecb: nop dword ptr [rax + rax]; mov rax, qword ptr [rip + 0x6c0d9]; ret; 
0x000000000001f9f3: nop dword ptr [rax + rax]; mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000006c70b: nop dword ptr [rax + rax]; mov rax, r8; syscall; 
0x000000000006d1f3: nop dword ptr [rax + rax]; mov rax, r8; syscall; ret; 
0x000000000006c70b: nop dword ptr [rax + rax]; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000007436b: nop dword ptr [rax + rax]; mov rax, r9; mov rsi, r8; syscall; 
0x000000000005e68b: nop dword ptr [rax + rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x0000000000028ff8: nop dword ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000074388: nop dword ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x000000000001f4e3: nop dword ptr [rax + rax]; mov rax, rdx; syscall; 
0x00000000000399c3: nop dword ptr [rax + rax]; movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x0000000000034063: nop dword ptr [rax + rax]; movaps xmm0, xmm1; ret; 
0x00000000000341b3: nop dword ptr [rax + rax]; movd xmm0, eax; ret; 
0x000000000003490b: nop dword ptr [rax + rax]; movq xmm0, rdx; add rsp, 0x18; ret; 
0x000000000003a73b: nop dword ptr [rax + rax]; movsd qword ptr [rdi], xmm0; movabs rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000000355f8: nop dword ptr [rax + rax]; movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000319e3: nop dword ptr [rax + rax]; movsd xmm2, qword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000035e53: nop dword ptr [rax + rax]; movss xmm0, dword ptr [rip + 0x79660]; divss xmm0, xmm1; ret; 
0x000000000002f0c3: nop dword ptr [rax + rax]; movss xmm0, dword ptr [rip + 0x81958]; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x0000000000040568: nop dword ptr [rax + rax]; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x0000000000050288: nop dword ptr [rax + rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x000000000006ded3: nop dword ptr [rax + rax]; movsxd rdi, dword ptr [rbx + 0x30]; mov eax, 0x91; syscall; 
0x0000000000048fe8: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x00000000000694a3: nop dword ptr [rax + rax]; movzx eax, dl; sub eax, ecx; ret; 
0x000000000003cc5b: nop dword ptr [rax + rax]; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003a448: nop dword ptr [rax + rax]; mulsd xmm0, xmm0; ret; 
0x0000000000034363: nop dword ptr [rax + rax]; mulsd xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003322b: nop dword ptr [rax + rax]; mulsd xmm4, qword ptr [rip + 0x7ac28]; movapd xmm0, xmm4; ret; 
0x000000000003a4bb: nop dword ptr [rax + rax]; mulss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003cf43: nop dword ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000018443: nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000023005: nop dword ptr [rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x000000000001f767: nop dword ptr [rax + rax]; nop; endbr64; ret; 
0x000000000005ce03: nop dword ptr [rax + rax]; or eax, 0x20; mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x000000000005ca28: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000074ae3: nop dword ptr [rax + rax]; pop rbx; mov eax, 6; pop rbp; pop r12; ret; 
0x0000000000069323: nop dword ptr [rax + rax]; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000033713: nop dword ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x0000000000023e1b: nop dword ptr [rax + rax]; ret; 
0x0000000000048618: nop dword ptr [rax + rax]; shl edi, 8; or eax, edi; ret; 
0x0000000000034d23: nop dword ptr [rax + rax]; sub r8d, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000006a55b: nop dword ptr [rax + rax]; sub r8d, edx; mov eax, r8d; ret; 
0x000000000006a173: nop dword ptr [rax + rax]; sub rax, 2; pop rbp; ret; 
0x00000000000338db: nop dword ptr [rax + rax]; subsd xmm0, qword ptr [rip + 0x7a518]; ret; 
0x0000000000039a08: nop dword ptr [rax + rax]; subsd xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x0000000000039d73: nop dword ptr [rax + rax]; subsd xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000005c3eb: nop dword ptr [rax + rax]; syscall; 
0x0000000000043fc3: nop dword ptr [rax + rax]; test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000001e583: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000006b853: nop dword ptr [rax + rax]; xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000002cfeb: nop dword ptr [rax + rax]; xor r8d, r8d; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000003d13d: nop dword ptr [rax]; add edi, 0x7c8; shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000003d1e5: nop dword ptr [rax]; add edi, 0xe5; shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x000000000005060d: nop dword ptr [rax]; add rsp, 8; mov eax, 0xc; pop rbx; pop rbp; ret; 
0x0000000000052afd: nop dword ptr [rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000003493d: nop dword ptr [rax]; addsd xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000003abc1: nop dword ptr [rax]; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000042055: nop dword ptr [rax]; call 0x1f460; mov dword ptr [rax], ebx; xor eax, eax; pop rbx; ret; 
0x000000000006a50d: nop dword ptr [rax]; call 0x6a680; lea rax, [rbx + rax*4]; pop rbx; ret; 
0x0000000000048604: nop dword ptr [rax]; cmp edi, 0xffff; ja 0x48620; shl edi, 0x10; or eax, edi; ret; 
0x00000000000780dc: nop dword ptr [rax]; cmp qword ptr [rdi + 0xb0], 0; je 0x780f0; ret; 
0x000000000002eb3d: nop dword ptr [rax]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000004a7fc: nop dword ptr [rax]; endbr64; bswap edi; mov dword ptr [rsi], edi; ret; 
0x0000000000073d7c: nop dword ptr [rax]; endbr64; cmp esi, 1; je 0x73d90; xor eax, eax; ret; 
0x0000000000022ddc: nop dword ptr [rax]; endbr64; cmp qword ptr [rip + 0x93f8c], 0; je 0x22df0; ret; 
0x0000000000021bbd: nop dword ptr [rax]; endbr64; cmp rdi, -0x1000; ja 0x21bd8; mov rax, rdi; ret; 
0x000000000003fa6c: nop dword ptr [rax]; endbr64; cvtsd2si rax, xmm0; ret; 
0x000000000003a96d: nop dword ptr [rax]; endbr64; fld dword ptr [rip + 0x74bd6]; ret; 
0x000000000003fb99: nop dword ptr [rax]; endbr64; fld xword ptr [rsp + 8]; frndint; ret; 
0x000000000003fbc9: nop dword ptr [rax]; endbr64; fld xword ptr [rsp + 8]; fsqrt; ret; 
0x000000000001db2c: nop dword ptr [rax]; endbr64; lea rax, [rip + 0x96205]; ret; 
0x000000000006fcac: nop dword ptr [rax]; endbr64; lock dec dword ptr [rdi]; ret; 
0x0000000000070349: nop dword ptr [rax]; endbr64; lock inc dword ptr [rip + 0x46b25]; ret; 
0x000000000006bd9c: nop dword ptr [rax]; endbr64; mov dword ptr [rdi + 0x20], esi; xor eax, eax; ret; 
0x0000000000050929: nop dword ptr [rax]; endbr64; mov dword ptr [rdi + 4], esi; xor eax, eax; ret; 
0x000000000006bbdc: nop dword ptr [rax]; endbr64; mov dword ptr [rsi], 0; xor eax, eax; ret; 
0x000000000005b68c: nop dword ptr [rax]; endbr64; mov eax, 0x40; ret; 
0x00000000000749ac: nop dword ptr [rax]; endbr64; mov eax, 0x68; syscall; 
0x00000000000749ac: nop dword ptr [rax]; endbr64; mov eax, 0x68; syscall; ret; 
0x000000000007499c: nop dword ptr [rax]; endbr64; mov eax, 0x6b; syscall; 
0x000000000007499c: nop dword ptr [rax]; endbr64; mov eax, 0x6b; syscall; ret; 
0x0000000000074b3c: nop dword ptr [rax]; endbr64; mov eax, 0x6e; syscall; 
0x0000000000074b3c: nop dword ptr [rax]; endbr64; mov eax, 0x6e; syscall; ret; 
0x00000000000242f9: nop dword ptr [rax]; endbr64; mov eax, 0xc2; syscall; 
0x000000000002431d: nop dword ptr [rax]; endbr64; mov eax, 0xc3; syscall; 
0x000000000006bbcc: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bbbc: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000015c99: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 0x70]; and eax, 0x7fffffff; ret; 
0x00000000000507ec: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 4]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001e5ec: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 8]; ret; 
0x000000000006b56c: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi]; test eax, eax; js 0x6b580; ret; 
0x0000000000049019: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rsi + 0x18]; sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000001e199: nop dword ptr [rax]; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000000047f8c: nop dword ptr [rax]; endbr64; mov eax, edi; bswap eax; ret; 
0x0000000000047f99: nop dword ptr [rax]; endbr64; mov eax, edi; rol ax, 8; ret; 
0x0000000000015c89: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0x78]; ret; 
0x000000000006bb9c: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 8]; mov qword ptr [rsi], rax; xor eax, eax; ret; 
0x000000000001f45d: nop dword ptr [rax]; endbr64; mov rax, qword ptr fs:[0]; add rax, 0x34; ret; 
0x000000000006f10d: nop dword ptr [rax]; endbr64; mov rax, qword ptr fs:[0]; ret; 
0x0000000000017e59: nop dword ptr [rax]; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 4]; ret; 
0x000000000003a95d: nop dword ptr [rax]; endbr64; movss xmm0, dword ptr [rip + 0x74be4]; ret; 
0x000000000002433d: nop dword ptr [rax]; endbr64; movsxd rdi, edi; mov eax, 0xc4; syscall; 
0x000000000001f4c9: nop dword ptr [rax]; endbr64; movsxd rdi, edi; mov eax, 0xe7; syscall; 
0x000000000002422c: nop dword ptr [rax]; endbr64; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x116; syscall; 
0x000000000002214c: nop dword ptr [rax]; endbr64; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x1e; syscall; 
0x000000000002e6fc: nop dword ptr [rax]; endbr64; movzx eax, word ptr [rsp + 0x10]; shr ax, 0xf; movzx eax, ax; ret; 
0x000000000005d199: nop dword ptr [rax]; endbr64; or dword ptr [rdi], 0x20; ret; 
0x0000000000059b8c: nop dword ptr [rax]; endbr64; push rbp; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x000000000001eb89: nop dword ptr [rax]; endbr64; ret; 
0x000000000003fbb9: nop dword ptr [rax]; endbr64; sqrtss xmm0, xmm0; ret; 
0x0000000000074d0d: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x16; syscall; 
0x0000000000059e39: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x000000000004f9bd: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x3b; syscall; 
0x000000000002219c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x43; syscall; 
0x0000000000060d5c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x52; syscall; 
0x000000000007563c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x57; syscall; 
0x000000000004120c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x76; syscall; 
0x00000000000411ed: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x78; syscall; 
0x000000000002324c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x7d; syscall; 
0x0000000000023229: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x0000000000023a4c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x87; syscall; 
0x00000000000435fc: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x95; syscall; 
0x000000000004388c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x98; syscall; 
0x0000000000023a6c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x9b; syscall; 
0x000000000002326c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xa1; syscall; 
0x0000000000023eac: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xaa; syscall; 
0x000000000004272d: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xab; syscall; 
0x000000000002394d: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xaf; syscall; 
0x000000000002440c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xc6; syscall; 
0x000000000005c27c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023d9c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x7b; syscall; 
0x00000000000238fd: nop dword ptr [rax]; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005b9ad: nop dword ptr [rax]; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000002396c: nop dword ptr [rax]; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0xb0; syscall; 
0x00000000000240ec: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x132; syscall; 
0x000000000005abfc: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x24; syscall; 
0x00000000000749bc: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074afc: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b4c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x000000000004361c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x97; syscall; 
0x000000000002442c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000071d7c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x0000000000043e2c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x00000000000236ac: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rdx, edx; mov eax, 0xad; syscall; 
0x000000000007539c: nop dword ptr [rax]; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x000000000002d15d: nop dword ptr [rax]; endbr64; subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000002d16d: nop dword ptr [rax]; endbr64; subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000043f0d: nop dword ptr [rax]; endbr64; test dil, 0x80; jne 0x43f20; movzx eax, dil; ret; 
0x0000000000073c7d: nop dword ptr [rax]; endbr64; test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; 
0x000000000004aeec: nop dword ptr [rax]; endbr64; xor eax, eax; ret; 
0x000000000003fd74: nop dword ptr [rax]; lea r8, [rip + 0x72311]; mov rax, r8; ret; 
0x00000000000742e5: nop dword ptr [rax]; lea rax, [rip + 0x3dced]; ret; 
0x00000000000501d9: nop dword ptr [rax]; lea rdi, [r8 + 0x24]; mov eax, 0x50; syscall; 
0x000000000003400c: nop dword ptr [rax]; maxsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003406c: nop dword ptr [rax]; maxss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000022e85: nop dword ptr [rax]; mov byte ptr [rax], 0; mov r8, qword ptr [rip + 0x93ef6]; add rsp, 8; mov rax, r8; ret; 
0x0000000000047174: nop dword ptr [rax]; mov byte ptr [rbx], 0; xor eax, eax; pop rbx; ret; 
0x0000000000044c35: nop dword ptr [rax]; mov byte ptr [rdi], sil; mov eax, 1; ret; 
0x0000000000074491: nop dword ptr [rax]; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000001fb19: nop dword ptr [rax]; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000023fed: nop dword ptr [rax]; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000004e5a9: nop dword ptr [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000005f19c: nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000004168c: nop dword ptr [rax]; mov eax, 1; ret; 
0x000000000007046d: nop dword ptr [rax]; mov eax, 3; mov rdi, r12; syscall; 
0x000000000005be1d: nop dword ptr [rax]; mov eax, 4; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000005be35: nop dword ptr [rax]; mov eax, 6; mov rdi, r9; mov rsi, rdx; syscall; 
0x000000000001e2e4: nop dword ptr [rax]; mov eax, edi; ret; 
0x0000000000060814: nop dword ptr [rax]; mov edx, 3; movsxd rdi, dword ptr [rsp + 0x18]; mov rax, rdx; syscall; 
0x0000000000015c09: nop dword ptr [rax]; mov esi, 1; mov rax, r8; syscall; 
0x000000000006c7ec: nop dword ptr [rax]; mov qword ptr [rdi], -1; xor eax, eax; ret; 
0x000000000004df09: nop dword ptr [rax]; mov qword ptr [rip + 0x68f0d], 0; ret; 
0x000000000004d029: nop dword ptr [rax]; mov qword ptr [rip + 0x69dd5], 0; ret; 
0x0000000000022dc9: nop dword ptr [rax]; mov qword ptr [rip + 0x93f9d], 0; ret; 
0x000000000006e5e1: nop dword ptr [rax]; mov r10, rbx; mov rax, r8; syscall; 
0x000000000006dc6c: nop dword ptr [rax]; mov r10d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c88c: nop dword ptr [rax]; mov r8d, 1; mov eax, r8d; ret; 
0x000000000005c8d9: nop dword ptr [rax]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000005c8d9: nop dword ptr [rax]; mov rax, r8; mov rsi, rdx; syscall; ret; 
0x0000000000050129: nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000006c839: nop dword ptr [rax]; mov rax, r8; syscall; xor eax, eax; ret; 
0x000000000005d56c: nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006d41c: nop dword ptr [rax]; mov rax, rdx; syscall; 
0x00000000000220dd: nop dword ptr [rax]; mov rdi, -0x16; call 0x21bc0; add rsp, 8; ret; 
0x000000000005f095: nop dword ptr [rax]; mov rdx, qword ptr fs:[0]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000039b85: nop dword ptr [rax]; movaps xmm1, xmm0; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x0000000000030869: nop dword ptr [rax]; movaps xmm2, xmm0; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000002ffe1: nop dword ptr [rax]; movd xmm1, eax; addss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000000341bd: nop dword ptr [rax]; movd xmm2, eax; minss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000338e9: nop dword ptr [rax]; movsd qword ptr [rsp - 8], xmm1; movapd xmm0, xmm2; ret; 
0x00000000000366f1: nop dword ptr [rax]; movsd xmm0, qword ptr [rip + 0x77700]; divsd xmm0, xmm1; ret; 
0x00000000000354f1: nop dword ptr [rax]; movsd xmm0, qword ptr [rip + 0x78b08]; divsd xmm0, qword ptr [rip + 0x78918]; ret; 
0x0000000000030ae9: nop dword ptr [rax]; movsd xmm0, qword ptr [rip + 0x7d308]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x000000000002ee8d: nop dword ptr [rax]; movsd xmm0, qword ptr [rip + 0x7f458]; addsd xmm0, qword ptr [rip + 0x7ef78]; ret; 
0x0000000000036f95: nop dword ptr [rax]; movss xmm0, dword ptr [rip + 0x78520]; divss xmm0, xmm1; ret; 
0x0000000000036e84: nop dword ptr [rax]; movss xmm0, dword ptr [rip + 0x79b7c]; divss xmm0, dword ptr [rip + 0x78638]; ret; 
0x0000000000035d55: nop dword ptr [rax]; movss xmm0, dword ptr [rip + 0x7acac]; divss xmm0, dword ptr [rip + 0x79768]; ret; 
0x0000000000032011: nop dword ptr [rax]; movss xmm2, dword ptr [rip + 0x7d4a0]; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000050144: nop dword ptr [rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r15; syscall; 
0x0000000000070081: nop dword ptr [rax]; movsxd rdi, dword ptr [rbp + 0x30]; mov rax, r15; syscall; 
0x0000000000023874: nop dword ptr [rax]; movsxd rdi, dword ptr [rdx + 0x30]; mov rax, r8; syscall; 
0x000000000005e16d: nop dword ptr [rax]; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r12; syscall; 
0x000000000001e719: nop dword ptr [rax]; movsxd rdi, ebx; mov eax, 3; syscall; 
0x0000000000061545: nop dword ptr [rax]; movsxd rdi, r14d; mov eax, 3; syscall; 
0x000000000003c7cd: nop dword ptr [rax]; mulsd xmm0, xmm1; movapd xmm2, xmm0; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003cd09: nop dword ptr [rax]; mulss xmm0, dword ptr [rip + 0x727b8]; movss dword ptr [rsp - 4], xmm2; ret; 
0x000000000003ca1c: nop dword ptr [rax]; mulss xmm0, xmm1; movaps xmm2, xmm0; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000006b559: nop dword ptr [rax]; pop rbx; ret; 
0x000000000001df1c: nop dword ptr [rax]; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000035509: nop dword ptr [rax]; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035d69: nop dword ptr [rax]; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x0000000000032ed5: nop dword ptr [rax]; pxor xmm0, xmm0; ret; 
0x000000000002b181: nop dword ptr [rax]; ret; 
0x000000000006d1e4: nop dword ptr [rax]; sub eax, 1; mov dword ptr [rip + 0x49deb], eax; ret; 
0x000000000001de85: nop dword ptr [rax]; sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x0000000000034ca4: nop dword ptr [rax]; sub r8d, 1; add eax, eax; jns 0x34ca8; mov eax, r8d; ret; 
0x0000000000028e6d: nop dword ptr [rax]; sub rsp, 8; call 0x15060; xor eax, eax; add rsp, 8; ret; 
0x000000000005bc0c: nop dword ptr [rax]; sub rsp, 8; mov rdi, -9; call 0x21bc0; add rsp, 8; ret; 
0x0000000000039b9c: nop dword ptr [rax]; subss xmm0, xmm0; divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x0000000000033694: nop dword ptr [rax]; subss xmm2, xmm0; addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000041ead: nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000023e21: nop dword ptr [rax]; xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x000000000003ab07: nop dword ptr cs:[rax + rax]; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab47: nop dword ptr cs:[rax + rax]; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000034a07: nop dword ptr cs:[rax + rax]; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000073d67: nop dword ptr cs:[rax + rax]; endbr64; mov eax, 0x64; syscall; 
0x00000000000787c7: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000032637: nop dword ptr cs:[rax + rax]; fmul st(0); add rsp, 0x28; ret; 
0x000000000006eff7: nop dword ptr cs:[rax + rax]; mov eax, 0xb; ret; 
0x000000000001e047: nop dword ptr cs:[rax + rax]; mov eax, 1; ret; 
0x0000000000015b97: nop dword ptr cs:[rax + rax]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000028ff7: nop dword ptr cs:[rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000040567: nop dword ptr cs:[rax + rax]; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x0000000000050287: nop dword ptr cs:[rax + rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x0000000000048fe7: nop dword ptr cs:[rax + rax]; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003a447: nop dword ptr cs:[rax + rax]; mulsd xmm0, xmm0; ret; 
0x0000000000018442: nop dword ptr cs:[rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000023004: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x000000000001f766: nop dword ptr cs:[rax + rax]; nop; endbr64; ret; 
0x0000000000048617: nop dword ptr cs:[rax + rax]; shl edi, 8; or eax, edi; ret; 
0x0000000000030ada: nop word ptr [rax + rax]; addsd xmm0, qword ptr [rip + 0x7d318]; ret; 
0x0000000000032ec7: nop word ptr [rax + rax]; addss xmm0, xmm0; ret; 
0x000000000002cd5a: nop word ptr [rax + rax]; call 0x1f460; pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000003fa7a: nop word ptr [rax + rax]; endbr64; cvtss2si rax, xmm0; ret; 
0x000000000004bc67: nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x692a5]; ret; 
0x0000000000022bf7: nop word ptr [rax + rax]; endbr64; mov eax, 0x1000; ret; 
0x000000000007028a: nop word ptr [rax + rax]; endbr64; mov eax, 0x18; syscall; 
0x000000000007028a: nop word ptr [rax + rax]; endbr64; mov eax, 0x18; syscall; ret; 
0x000000000005b69a: nop word ptr [rax + rax]; endbr64; mov eax, 0x23; ret; 
0x00000000000508da: nop word ptr [rax + rax]; endbr64; mov eax, 0x26; ret; 
0x0000000000045d1a: nop word ptr [rax + rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000004ac4a: nop word ptr [rax + rax]; endbr64; mov eax, edi; bswap eax; ret; 
0x00000000000414b7: nop word ptr [rax + rax]; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x0000000000023067: nop word ptr [rax + rax]; endbr64; ret; 
0x0000000000043aba: nop word ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x000000000002407a: nop word ptr [rax + rax]; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000023037: nop word ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x0000000000034b52: nop word ptr [rax + rax]; faddp st(1); add rsp, 0x48; ret; 
0x0000000000034bda: nop word ptr [rax + rax]; jne 0x34ab3; fstp st(0); add rsp, 0x48; ret; 
0x000000000004f097: nop word ptr [rax + rax]; mov dword ptr [r8], edi; ret; 
0x00000000000743b2: nop word ptr [rax + rax]; mov eax, 0x48; mov esi, 2; mov edx, 1; mov rdi, r8; syscall; 
0x0000000000043f47: nop word ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000057ac2: nop word ptr [rax + rax]; mov eax, 1; ret; 
0x0000000000045067: nop word ptr [rax + rax]; mov eax, edi; ret; 
0x000000000006d022: nop word ptr [rax + rax]; mov r8d, 0xca; mov edx, 1; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000001f9f2: nop word ptr [rax + rax]; mov rax, r8; mov rsi, r9; mov rdx, r10; syscall; 
0x000000000006d1f2: nop word ptr [rax + rax]; mov rax, r8; syscall; 
0x000000000006d1f2: nop word ptr [rax + rax]; mov rax, r8; syscall; ret; 
0x000000000005e68a: nop word ptr [rax + rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000006a502: nop word ptr [rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000074387: nop word ptr [rax + rax]; mov rax, rdx; mov rsi, r8; syscall; 
0x00000000000341b2: nop word ptr [rax + rax]; movd xmm0, eax; ret; 
0x00000000000355f7: nop word ptr [rax + rax]; movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x00000000000319e2: nop word ptr [rax + rax]; movsd xmm2, qword ptr [rip + 0x7c410]; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000694a2: nop word ptr [rax + rax]; movzx eax, dl; sub eax, ecx; ret; 
0x000000000003cc5a: nop word ptr [rax + rax]; mulsd xmm0, qword ptr [rip + 0x711b8]; movsd qword ptr [rsp - 8], xmm2; ret; 
0x0000000000034362: nop word ptr [rax + rax]; mulsd xmm0, xmm1; movapd xmm1, xmm0; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003a4ba: nop word ptr [rax + rax]; mulss xmm0, xmm0; add rsp, 0x18; ret; 
0x000000000003cf42: nop word ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x000000000005ce02: nop word ptr [rax + rax]; or eax, 0x20; mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x000000000005ca27: nop word ptr [rax + rax]; pop rbp; ret; 
0x0000000000074ae2: nop word ptr [rax + rax]; pop rbx; mov eax, 6; pop rbp; pop r12; ret; 
0x0000000000033712: nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x0000000000023e1a: nop word ptr [rax + rax]; ret; 
0x0000000000034d22: nop word ptr [rax + rax]; sub r8d, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000006a172: nop word ptr [rax + rax]; sub rax, 2; pop rbp; ret; 
0x00000000000338da: nop word ptr [rax + rax]; subsd xmm0, qword ptr [rip + 0x7a518]; ret; 
0x000000000005c3ea: nop word ptr [rax + rax]; syscall; 
0x0000000000043fc2: nop word ptr [rax + rax]; test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000001e582: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x000000000002cfea: nop word ptr [rax + rax]; xor r8d, r8d; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000003ab06: nop word ptr cs:[rax + rax]; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab46: nop word ptr cs:[rax + rax]; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000034a06: nop word ptr cs:[rax + rax]; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x0000000000073d66: nop word ptr cs:[rax + rax]; endbr64; mov eax, 0x64; syscall; 
0x00000000000787c6: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000032636: nop word ptr cs:[rax + rax]; fmul st(0); add rsp, 0x28; ret; 
0x000000000006eff6: nop word ptr cs:[rax + rax]; mov eax, 0xb; ret; 
0x000000000001e046: nop word ptr cs:[rax + rax]; mov eax, 1; ret; 
0x0000000000015b96: nop word ptr cs:[rax + rax]; mov esi, 1; mov rax, r8; syscall; 
0x0000000000028ff6: nop word ptr cs:[rax + rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000040566: nop word ptr cs:[rax + rax]; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x0000000000050286: nop word ptr cs:[rax + rax]; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x0000000000048fe6: nop word ptr cs:[rax + rax]; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003a446: nop word ptr cs:[rax + rax]; mulsd xmm0, xmm0; ret; 
0x0000000000018441: nop word ptr cs:[rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000023003: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x000000000001f765: nop word ptr cs:[rax + rax]; nop; endbr64; ret; 
0x0000000000048616: nop word ptr cs:[rax + rax]; shl edi, 8; or eax, edi; ret; 
0x00000000000704a9: nop; adc byte ptr [rcx + 1], 0; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000061fc1: nop; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x000000000007a0d4: nop; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000055179: nop; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x000000000006e1ce: nop; add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000000405ed: nop; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000006a66f: nop; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000006945f: nop; call 0x69800; add r12, rax; mov rax, r12; pop r12; ret; 
0x000000000005c3bf: nop; cmp qword ptr [rdx + 0x18], 0x3fffffff; jne 0x5c2eb; xor edx, edx; syscall; 
0x000000000005d18f: nop; endbr64; add qword ptr [rdi + 8], rsi; ret; 
0x000000000005c43f: nop; endbr64; jmp qword ptr [rdi + 0x18]; 
0x000000000002931f: nop; endbr64; lea rax, [rip + 0x8a875]; ret; 
0x000000000001db1f: nop; endbr64; lea rax, [rip + 0x9620d]; ret; 
0x00000000000508cf: nop; endbr64; mov eax, 0x26; ret; 
0x0000000000074b2f: nop; endbr64; mov eax, 0x27; syscall; 
0x0000000000074b2f: nop; endbr64; mov eax, 0x27; syscall; ret; 
0x0000000000074b6f: nop; endbr64; mov eax, 0x66; syscall; 
0x0000000000074b6f: nop; endbr64; mov eax, 0x66; syscall; ret; 
0x000000000007498f: nop; endbr64; mov eax, 0x6c; syscall; 
0x000000000007498f: nop; endbr64; mov eax, 0x6c; syscall; ret; 
0x0000000000074b1f: nop; endbr64; mov eax, 0x79; xor edi, edi; syscall; 
0x0000000000074b1f: nop; endbr64; mov eax, 0x79; xor edi, edi; syscall; ret; 
0x00000000000753bf: nop; endbr64; mov eax, 0xa2; syscall; 
0x00000000000753bf: nop; endbr64; mov eax, 0xa2; syscall; ret; 
0x000000000004b10f: nop; endbr64; mov eax, 3; syscall; 
0x000000000004b10f: nop; endbr64; mov eax, 3; syscall; ret; 
0x000000000006bbaf: nop; endbr64; mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006b20f: nop; endbr64; mov eax, dword ptr [rdi + 8]; and eax, 0x100f; ret; 
0x000000000004a7df: nop; endbr64; mov eax, dword ptr [rdi]; bswap eax; mov eax, eax; ret; 
0x000000000006bcdf: nop; endbr64; mov eax, dword ptr [rdi]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006bd8f: nop; endbr64; mov eax, dword ptr [rsi]; mov dword ptr [rdi + 0x24], eax; xor eax, eax; ret; 
0x000000000006d1ff: nop; endbr64; mov edx, dword ptr [rip + 0x49d46]; test edx, edx; jne 0x6d210; ret; 
0x00000000000507bf: nop; endbr64; mov qword ptr [rdi + 8], 0; xor eax, eax; ret; 
0x000000000002429f: nop; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000000023bbf: nop; endbr64; mov r10, rcx; movsxd rdi, edi; mov eax, 0x137; syscall; 
0x000000000001ea5f: nop; endbr64; mov rax, qword ptr [rdi]; ret; 
0x00000000000235df: nop; endbr64; mov rax, qword ptr fs:[0]; mov eax, dword ptr [rax + 0x30]; ret; 
0x0000000000017e4f: nop; endbr64; movapd xmm0, xmm1; ret; 
0x000000000002e6ef: nop; endbr64; movd eax, xmm0; shr eax, 0x1f; ret; 
0x000000000001845f: nop; endbr64; movq qword ptr [rsp - 8], xmm0; movss xmm0, dword ptr [rsp - 8]; ret; 
0x0000000000059b6f: nop; endbr64; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x0000000000023ccf: nop; endbr64; movsxd rdi, edi; mov eax, 0xbb; syscall; 
0x000000000001fbdf: nop; endbr64; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0xdd; syscall; 
0x000000000001f76f: nop; endbr64; ret; 
0x0000000000071fbf: nop; endbr64; sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x00000000000435df: nop; endbr64; sub rsp, 8; mov eax, 0x1b; syscall; 
0x0000000000042f6f: nop; endbr64; sub rsp, 8; mov eax, 0x3f; syscall; 
0x000000000007546f: nop; endbr64; sub rsp, 8; mov eax, 0x4c; syscall; 
0x000000000007423f: nop; endbr64; sub rsp, 8; mov eax, 0x50; syscall; 
0x00000000000750bf: nop; endbr64; sub rsp, 8; mov eax, 0x54; syscall; 
0x000000000002410f: nop; endbr64; sub rsp, 8; mov eax, 0x63; syscall; 
0x00000000000751ff: nop; endbr64; sub rsp, 8; mov eax, 0x70; syscall; 
0x000000000002420f: nop; endbr64; sub rsp, 8; mov eax, 0x99; syscall; 
0x00000000000741af: nop; endbr64; sub rsp, 8; mov eax, 0xa3; syscall; 
0x00000000000239af: nop; endbr64; sub rsp, 8; mov eax, 0xa6; xor esi, esi; syscall; 
0x000000000002409f: nop; endbr64; sub rsp, 8; mov eax, 0xa8; syscall; 
0x00000000000243ef: nop; endbr64; sub rsp, 8; mov eax, 0xc5; syscall; 
0x0000000000023dbf: nop; endbr64; sub rsp, 8; mov edi, edi; mov eax, 0x7a; syscall; 
0x000000000005bfcf: nop; endbr64; sub rsp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x000000000002398f: nop; endbr64; sub rsp, 8; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000000241cf: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000241af: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x000000000007485f: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x0000000000059c9f: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x93; syscall; 
0x00000000000231ef: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236cf: nop; endbr64; sub rsp, 8; movsxd rdi, edi; mov eax, 0xac; syscall; 
0x000000000007418f: nop; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x00000000000239cf: nop; endbr64; sub rsp, 8; movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000028e5f: nop; endbr64; test dil, 1; je 0x28e70; xor eax, eax; ret; 
0x000000000001fcef: nop; endbr64; test edi, 0xfffff3ff; je 0x1fd08; mov eax, 0xffffffff; ret; 
0x0000000000023d4f: nop; endbr64; test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; 
0x000000000005b39f: nop; endbr64; xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000002302f: nop; endbr64; xor eax, eax; ret; 
0x0000000000020c4f: nop; fldz; ret; 
0x00000000000299ff: nop; lea rax, [rip + 0x88976]; ret; 
0x000000000006c3df: nop; lea rax, [rip + 0xf012]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000006efef: nop; mov eax, 0x10; ret; 
0x000000000006d0ef: nop; mov eax, 0x16; ret; 
0x000000000004864f: nop; mov eax, edi; and eax, 0xffffff; ret; 
0x000000000005c5af: nop; mov r8d, 0x48; movsxd rdi, ebx; mov esi, 3; mov rax, r8; syscall; 
0x000000000006ecef: nop; mov r8d, 0xca; mov edx, 0x7fffffff; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000007b227: nop; mov rax, 0xf; syscall; 
0x000000000003198f: nop; movsd xmm2, qword ptr [rip + 0x7cc18]; mulsd xmm2, xmm2; movapd xmm0, xmm2; ret; 
0x0000000000031fcf: nop; movss xmm2, dword ptr [rip + 0x7ea50]; mulss xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x00000000000743cf: nop; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005029f: nop; movsxd rdi, r14d; mov rax, rbx; syscall; 
0x000000000003358f: nop; mulss xmm2, dword ptr [rip + 0x7bf40]; movaps xmm0, xmm2; ret; 
0x00000000000528df: nop; pop rbx; mov eax, 0xc; pop rbp; pop r12; ret; 
0x0000000000055d1f: nop; pop rbx; pop rbp; pop r12; ret; 
0x000000000003a37f: nop; pxor xmm0, xmm0; ret; 
0x000000000006a17f: nop; sub rax, 1; pop rbp; ret; 
0x000000000006e3ef: nop; sub rsp, 8; call 0x70300; xor eax, eax; add rsp, 8; ret; 
0x000000000003332f: nop; subsd xmm4, xmm0; addsd xmm4, xmm4; addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000005cb4f: nop; syscall; 
0x0000000000071f5f: nop; xor eax, eax; add rsp, 8; ret; 
0x000000000006a0df: nop; xor eax, eax; pop rbp; ret; 
0x000000000006a73f: nop; xor eax, eax; ret; 
0x000000000006b87f: nop; xor esi, esi; mov rax, r12; syscall; 
0x00000000000603ef: nop; xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x00000000000355a5: not dword ptr [rbx + 0xff20007]; pop rcx; ret; 
0x000000000006c370: not eax; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000003f398: not eax; and eax, edx; movss dword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x000000000003a777: not eax; and rax, rdx; movq xmm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000003f34c: not eax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000006de17: not eax; lea eax, [rax*8 + 6]; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0da: not eax; shr eax, 0x1f; ret; 
0x000000000007aead: not ecx; and dword ptr [rsp - 8], ecx; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000003a801: not ecx; and ecx, eax; movd xmm1, ecx; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x0000000000030b3b: not ecx; cmovns edx, eax; and ecx, edx; movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000003393b: not ecx; cmovs edx, eax; and ecx, edx; movss dword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000006e812: not esi; and esi, 0x80; or esi, 7; syscall; 
0x000000000003a776: not rax; and rax, rdx; movq xmm1, rax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000003f34b: not rax; and rax, rdx; movsd qword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000005c5c8: or ah, 4; mov esi, 4; movsxd rdx, eax; mov rax, r8; syscall; 
0x000000000002b4f8: or al, 0; add byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000002b46b: or al, 0; add byte ptr [rax], al; mov rdi, rbx; mov rax, rdx; syscall; 
0x00000000000505b2: or al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x0000000000050615: or al, 0; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000023d5a: or al, 0; add byte ptr [rax], al; syscall; 
0x0000000000023d5a: or al, 0; add byte ptr [rax], al; syscall; ret; 
0x000000000002cda8: or al, 0; add byte ptr [rax], al; xor eax, eax; pop rdx; ret; 
0x0000000000073cae: or al, 0x24; add byte ptr [rax + 0xc8], bh; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000006e624: or al, 0x24; add byte ptr [rcx + rcx*4 - 0x32], al; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000017bc5: or al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x00000000000175a6: or al, 0x24; add rsp, 0x20; pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000017bbb: or al, 0x24; call 0x32690; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000001f9ce: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fba7: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000022066: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022f4a: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023b74: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023f4e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23f74; add rsp, 0x28; ret; 
0x00000000000247cf: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a1ab: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x00000000000414a5: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x414b2; add rsp, 0x58; ret; 
0x00000000000420f7: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42104; add rsp, 0x18; ret; 
0x0000000000043dd2: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x43e03; add rsp, 0x58; ret; 
0x0000000000044b32: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x44bac; add rsp, 0x18; ret; 
0x000000000004501e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a3e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c1e: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004c447: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000005a313: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005b450: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005bedf: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005cd1d: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005cf30: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d030: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005e5d0: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed60: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f350: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f590: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x0000000000060922: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x60932; add rsp, 0xd8; ret; 
0x000000000006101b: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610d0: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x610e0; add rsp, 0xd8; ret; 
0x0000000000061190: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x611a0; add rsp, 0xd8; ret; 
0x000000000006124b: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6125b; add rsp, 0xd8; ret; 
0x0000000000061300: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x61310; add rsp, 0xd8; ret; 
0x000000000006199b: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064074: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc4: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bd9: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d93: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e4: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x670f4; add rsp, 0x208; ret; 
0x000000000006b3a7: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb9b: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec90: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000073e0f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x73e1c; add rsp, 0x38; ret; 
0x000000000007422c: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074f8d: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075407: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075453: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75460; add rsp, 0x18; ret; 
0x000000000007562a: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e1: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x756ee; add rsp, 0x28; ret; 
0x0000000000052893: or al, 0x31; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000003496f: or al, 0x39; ret 0x673; 
0x0000000000052928: or al, 0x39; ret; 
0x000000000002cff6: or al, 0x41; sete al; mov eax, r8d; ret; 
0x0000000000059c03: or al, 0x44; mov eax, esp; pop r12; ret; 
0x000000000006fc63: or al, 0x45; test al, al; jne 0x6fc70; xor eax, eax; ret; 
0x0000000000047ec3: or al, 0x48; add eax, 0xa0; ret; 
0x000000000006bdee: or al, 0x48; add esi, edx; mov qword ptr [rdi], rdx; xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000003aa15: or al, 0x48; add esp, 0x10; pop rbx; ret; 
0x00000000000349fc: or al, 0x48; add esp, 0x18; mulss xmm0, xmm2; ret; 
0x000000000004c44e: or al, 0x48; add esp, 0x18; ret; 
0x000000000003af22: or al, 0x48; add esp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b009: or al, 0x48; add esp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x000000000005add9: or al, 0x48; add esp, 0x98; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000001e44b: or al, 0x48; cmp esi, 2; je 0x1e460; ret; 
0x0000000000060cf8: or al, 0x48; lea edi, [rsp + 0xc]; call 0x5f450; add rsp, 0x18; sub eax, 1; ret; 
0x000000000005e383: or al, 0x48; mov edi, dword ptr [rdx]; jmp rax; 
0x00000000000438fa: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000438fa: or al, 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; neg eax; ret; 
0x0000000000075257: or al, 0x48; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x000000000001e754: or al, 0x49; mov eax, dword ptr [rcx + 8]; mov qword ptr [r8], rax; mov rax, r9; pop rbx; ret; 
0x0000000000028ff3: or al, 0x5b; ret; 
0x00000000000633b5: or al, 0x76; ror byte ptr [rdi], 1; mov esi, 0x83480153; ret; 
0x000000000006ae85: or al, 0x80; add rax, 1; cmp rdx, rax; jne 0x6ae80; mov rax, r8; ret; 
0x00000000000244ad: or al, 0x81; ret 0xed22; 
0x0000000000016295: or al, 0x85; sal byte ptr [rsi + rbp - 0x7d], 0xf8; add dh, byte ptr [rbp + 6]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000006adde: or al, 0x87; cmp edx, ecx; je 0x6add0; mov eax, edx; sub eax, ecx; ret; 
0x000000000005bbc1: or al, 0x89; fidivr dword ptr [rax + 0x10c]; syscall; 
0x0000000000018b09: or al, 0x89; fmul dword ptr [rax - 0x77]; ret 0xf66; 
0x00000000000329d1: or al, 0x89; ret 0xeac1; 
0x000000000003a9ee: or al, 0x89; ret; 
0x000000000001dd3b: or al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000006f53a: or al, 0xb8; mov es, word ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000032433: or al, 0xd9; call 0x20279115; add rsp, 0x18; fdivp st(1); faddp st(1); ret; 
0x000000000002ecc8: or al, 0xd9; ret; 
0x0000000000015948: or al, 0xe8; ret 0x58f; 
0x000000000006f2c7: or al, 0xe8; xchg eax, ebx; add eax, dword ptr [rax]; add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x00000000000529db: or al, 0xeb; ret 0x9066; 
0x0000000000045dec: or al, 0xeb; xor eax, 0xfce8990; mov dh, 0x48; add cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000016cb1: or al, 0xf3; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000003cba9: or al, 0xf3; movups xmm0, xmmword ptr [rip + 0x73eea]; test eax, eax; je 0x3cbd0; ret; 
0x0000000000068102: or al, 0xf3; movups xmm0, xmmword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000003af1c: or al, 0xf3; movups xmm1, xmmword ptr [rsp + 0xc]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000003b003: or al, 0xf3; movups xmm1, xmmword ptr [rsp + 0xc]; add rsp, 0x20; pop rbx; movaps xmm0, xmm1; ret; 
0x000000000006c781: or al, 0xf7; ret 0xffff; 
0x000000000004ed20: or al, 0xf8; add byte ptr [rax], al; add rsp, 0x28; sar eax, 0x1f; ret; 
0x0000000000025233: or al, 0xf; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000005485f: or al, 0xf; xchg eax, esp; ret 0x8548; 
0x000000000005bb49: or al, 1; add byte ptr [rax], al; syscall; 
0x0000000000043bce: or al, 2; je 0x43c18; movsxd rdi, ebp; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x00000000000762ee: or al, 4; add byte ptr [rax - 0x77], cl; jo 0x7633e; add esp, 0x100; pop rbx; ret; 
0x0000000000068b20: or al, 7; cmp dl, cl; je 0x68b10; movzx eax, dl; sub eax, ecx; ret; 
0x000000000002d115: or al, 8; add dl, dh; movups xmmword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x0000000000021a87: or al, 8; mov ecx, esi; mov esi, edx; cmp ecx, 9; ja 0x21a68; ret; 
0x0000000000062ff5: or al, byte ptr [rax + 0xf24027b]; test byte ptr [rax], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000006e182: or al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000004373e: or al, byte ptr [rax]; add byte ptr [rax], al; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000007afed: or al, byte ptr [rax]; add byte ptr [rax], al; pop rax; fld1; fsubp st(1); ret; 
0x0000000000060f52: or al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000000589c6: or al, byte ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000015a6f: or al, byte ptr [rax]; mov rax, r8; syscall; 
0x0000000000015e3d: or al, byte ptr [rax]; test eax, eax; jne 0x15e50; mov eax, r12d; pop r12; ret; 
0x000000000001b123: or al, byte ptr [rcx + 1]; ret 0xe283; 
0x000000000002cfe5: or al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000006e743: or al, byte ptr [rcx - 0xa]; ret 0xf04; 
0x00000000000753ac: or al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000039487: or al, ch; adc edi, dword ptr [rax]; add byte ptr [rax], al; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x0000000000039467: or al, ch; jae 0x394a2; add byte ptr [rax], al; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000004def3: or al, ch; mov bh, 0xf2; add byte ptr [rax], al; mov qword ptr [rip + 0x68f24], 0; add rsp, 8; ret; 
0x0000000000043d0c: or al, ch; mov byte ptr [rdx], r8b; add byte ptr [rcx + 0x63], cl; std; mov eax, 3; syscall; 
0x000000000001edee: or al, ch; mov word ptr [rcx - 0x1076fffb], ds; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000004c052: or al, ch; pop rax; ret 1; 
0x000000000004f223: or al, ch; push rdi; ret 1; 
0x00000000000366a7: or al, ch; ret; 
0x00000000000485fd: or al, cl; out 0x18, eax; or eax, edi; ret; 
0x000000000006e621: or al, dh; or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006e620: or al, r14b; or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000003473c: or ax, 0x3ffe; mov dword ptr [rdi], ecx; mov word ptr [rsp + 0x18], ax; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000054113: or bh, bh; call qword ptr [rax]; 
0x0000000000023620: or bh, byte ptr [rax + 0xfd]; syscall; 
0x0000000000023620: or bh, byte ptr [rax + 0xfd]; syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x000000000003e4ef: or bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000045e88: or bh, dh; ret; 
0x0000000000074c0e: or bl, al; endbr64; sub rsp, 8; mov eax, 0x56; syscall; 
0x00000000000232b1: or bl, al; nop dword ptr [rax + rax]; mov eax, 0x9f; mov rdi, rsi; syscall; 
0x000000000006d256: or bl, al; nop dword ptr [rax + rax]; mov rax, r8; syscall; 
0x0000000000059e37: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x18; syscall; 
0x0000000000060d5a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x52; syscall; 
0x000000000004120a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x76; syscall; 
0x00000000000411eb: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x78; syscall; 
0x000000000002324a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x7d; syscall; 
0x0000000000023227: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x7e; syscall; 
0x00000000000435fa: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x95; syscall; 
0x000000000004388a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x98; syscall; 
0x0000000000023a6a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x9b; syscall; 
0x000000000002326a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xa1; syscall; 
0x000000000002440a: or bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0xc6; syscall; 
0x0000000000023feb: or bl, al; nop dword ptr [rax]; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x000000000005c8d7: or bl, al; nop dword ptr [rax]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000070288: or bl, al; nop word ptr [rax + rax]; endbr64; mov eax, 0x18; syscall; 
0x0000000000073d64: or bl, al; nop word ptr cs:[rax + rax]; endbr64; mov eax, 0x64; syscall; 
0x0000000000074b6d: or bl, al; nop; endbr64; mov eax, 0x66; syscall; 
0x0000000000074b1d: or bl, al; nop; endbr64; mov eax, 0x79; xor edi, edi; syscall; 
0x00000000000753bd: or bl, al; nop; endbr64; mov eax, 0xa2; syscall; 
0x0000000000059b6d: or bl, al; nop; endbr64; movsxd rdi, dword ptr [rdi + 0x30]; mov eax, 0xcb; syscall; 
0x00000000000435dd: or bl, al; nop; endbr64; sub rsp, 8; mov eax, 0x1b; syscall; 
0x000000000002410d: or bl, al; nop; endbr64; sub rsp, 8; mov eax, 0x63; syscall; 
0x00000000000741ad: or bl, al; nop; endbr64; sub rsp, 8; mov eax, 0xa3; syscall; 
0x000000000002409d: or bl, al; nop; endbr64; sub rsp, 8; mov eax, 0xa8; syscall; 
0x000000000006e6f3: or bl, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000007afae: or bl, bl; insb byte ptr [rdi], dx; and al, 0x18; fpatan; ret; 
0x000000000005ccab: or bl, ch; mov bl, 0xe8; insd dword ptr [rdi], dx; and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x000000000003edf7: or bl, dh; cvtps2pd xmm0, xmm0; call 0x3e8f0; add rsp, 8; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000039490: or bl, dh; cvttps2pi mm0, xmm0; ret; 
0x000000000002d13f: or bl, dh; movups xmm0, xmmword ptr [rip + 0x82378]; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002ffd3: or bl, dh; movups xmm1, xmmword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000005c054: or bl, dh; stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c084: or bl, dh; stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000032008: or bl, dh; subps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000050667: or byte ptr [r11 + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000000684b7: or byte ptr [r15], r9b; mov dh, 6; mov byte ptr [r11], al; mov eax, 1; ret; 
0x000000000006b254: or byte ptr [r8 + 0x100], r15b; mov word ptr [rdi + 0x16], ax; ret; 
0x000000000005d5c2: or byte ptr [r8 + 0x3b], r9b; adc byte ptr [r14 + r10 + 0x48], r14b; lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000000527be: or byte ptr [r8 + 1], r9b; fimul dword ptr [rax - 0x7d]; ret; 
0x000000000006b7e6: or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000005b12e: or byte ptr [r8 - 0x57e38bfe], r13b; add dword ptr [rbp + 0x34], esi; mov eax, 0x83; syscall; 
0x000000000006f1c8: or byte ptr [r8 - 0x77], cl; ret; 
0x000000000002aed1: or byte ptr [r8 - 0x77], cl; sbb byte ptr [rcx + rcx*4 - 0x30], cl; pop rbx; ret; 
0x000000000005ede9: or byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000006c75d: or byte ptr [r9 - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000001e757: or byte ptr [r9 - 0x77], cl; add byte ptr [rcx + rcx*4 - 0x38], cl; pop rbx; ret; 
0x0000000000066134: or byte ptr [r9 - 0x77], r9b; fisttp qword ptr [rax - 0x77]; ret; 
0x000000000006b255: or byte ptr [rax + 0x100], bh; mov word ptr [rdi + 0x16], ax; ret; 
0x000000000002336a: or byte ptr [rax + 0x123], bh; mov rdx, rdi; syscall; 
0x000000000002360a: or byte ptr [rax + 0x126], bh; mov rdx, rdi; syscall; 
0x0000000000074d17: or byte ptr [rax + 0x16], bh; syscall; 
0x0000000000074d17: or byte ptr [rax + 0x16], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000059e47: or byte ptr [rax + 0x18], bh; syscall; 
0x00000000000435e7: or byte ptr [rax + 0x1b], bh; syscall; 
0x000000000003a799: or byte ptr [rax + 0x21], 0xc2; mov qword ptr [rdi], rdx; ret; 
0x000000000003a74d: or byte ptr [rax + 0x21], 0xc2; movq xmm0, rdx; ret; 
0x0000000000071a68: or byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000069096: or byte ptr [rax + 0x39], cl; clc; jne 0x69088; xor r8d, r8d; mov rax, r8; ret; 
0x000000000003ada2: or byte ptr [rax + 0x39], cl; ret 0x1876; 
0x000000000005cb04: or byte ptr [rax + 0x39], cl; ret 0x2c73; 
0x0000000000015eea: or byte ptr [rax + 0x39], cl; ret 0xf075; 
0x000000000004f9c7: or byte ptr [rax + 0x3b], bh; syscall; 
0x000000000005d5c3: or byte ptr [rax + 0x3b], cl; adc byte ptr [r14 + r10 + 0x48], r14b; lea edx, [rax + 1]; mov qword ptr [rdi + 8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000000042f77: or byte ptr [rax + 0x3f], bh; syscall; 
0x0000000000042f77: or byte ptr [rax + 0x3f], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006f5a2: or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x00000000000221a7: or byte ptr [rax + 0x43], bh; syscall; 
0x00000000000221a7: or byte ptr [rax + 0x43], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000075477: or byte ptr [rax + 0x4c], bh; syscall; 
0x0000000000075477: or byte ptr [rax + 0x4c], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074247: or byte ptr [rax + 0x50], bh; syscall; 
0x0000000000074247: or byte ptr [rax + 0x50], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000060d67: or byte ptr [rax + 0x52], bh; syscall; 
0x0000000000060d67: or byte ptr [rax + 0x52], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000750c7: or byte ptr [rax + 0x54], bh; syscall; 
0x00000000000750c7: or byte ptr [rax + 0x54], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074c17: or byte ptr [rax + 0x56], bh; syscall; 
0x0000000000074c17: or byte ptr [rax + 0x56], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000060d37: or byte ptr [rax + 0x57], bh; syscall; 
0x0000000000075647: or byte ptr [rax + 0x57], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000075387: or byte ptr [rax + 0x58], bh; syscall; 
0x0000000000075387: or byte ptr [rax + 0x58], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024117: or byte ptr [rax + 0x63], bh; syscall; 
0x0000000000024157: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x11b]; syscall; 
0x0000000000023ed7: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x134]; syscall; 
0x0000000000022177: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x1f]; syscall; 
0x000000000005ac27: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x3e]; syscall; 
0x0000000000021f67: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x44]; syscall; 
0x0000000000021f37: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x47]; syscall; 
0x0000000000023557: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x49]; syscall; 
0x0000000000075147: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0x6d]; syscall; 
0x0000000000023687: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; idiv byte ptr [rax + 0xff]; syscall; 
0x0000000000075667: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x107], cl; syscall; 
0x0000000000023a27: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x130], cl; syscall; 
0x00000000000236f7: or byte ptr [rax + 0x63], cl; dec dword ptr [rax + 0x63]; sar byte ptr [rax + 0x67], cl; syscall; 
0x000000000005bf77: or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0x102b8d2]; add byte ptr [rax], al; syscall; 
0x00000000000411c7: or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0x8cb8f6]; add byte ptr [rax], al; syscall; 
0x0000000000023657: or byte ptr [rax + 0x63], cl; dec dword ptr [rcx + 0xfeb8d2]; add byte ptr [rax], al; syscall; 
0x0000000000042757: or byte ptr [rax + 0x63], cl; dec dword ptr [rcx - 0x2d9cb70a]; mov eax, 0x8d; syscall; 
0x000000000005cc1a: or byte ptr [rax + 0x63], cl; fisttp qword ptr [rax + 0x29]; ret 0x149; 
0x00000000000753a7: or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0x10a]; syscall; 
0x0000000000074197: or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0x15]; syscall; 
0x00000000000239d7: or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xa6]; syscall; 
0x0000000000024087: or byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xa7]; syscall; 
0x0000000000047e57: or byte ptr [rax + 0x63], cl; inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x00000000000479c7: or byte ptr [rax + 0x63], cl; inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x0000000000075253: or byte ptr [rax + 0x63], cl; or al, 0x48; movsxd rsi, dword ptr [rbx + 4]; movsxd rdi, dword ptr [rdi]; movsxd rdx, dword ptr [rbx + 8]; syscall; 
0x00000000000435c7: or byte ptr [rax + 0x63], cl; sar byte ptr [rax + 0x1c], cl; syscall; 
0x00000000000236b7: or byte ptr [rax + 0x63], cl; sar byte ptr [rax + 0xad], cl; syscall; 
0x0000000000074317: or byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov r8d, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x0000000000052ab4: or byte ptr [rax + 0x63], cl; test byte ptr [rax - 0x3f], 0xe6; add ebp, eax; outsd dx, dword ptr [rsi]; and eax, 0x8948fffc; ret 0x8548; 
0x0000000000023cf7: or byte ptr [rax + 0x63], cl; xlatb; mov eax, 0xa9; mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x0000000000074418: or byte ptr [rax + 0x6c], bh; syscall; 
0x0000000000075207: or byte ptr [rax + 0x70], bh; syscall; 
0x0000000000041217: or byte ptr [rax + 0x76], bh; syscall; 
0x00000000000411f7: or byte ptr [rax + 0x78], bh; syscall; 
0x0000000000023257: or byte ptr [rax + 0x7d], bh; syscall; 
0x0000000000023237: or byte ptr [rax + 0x7e], bh; syscall; 
0x000000000005b4f7: or byte ptr [rax + 0x7f], bh; mov esi, 8; syscall; 
0x0000000000023587: or byte ptr [rax + 0x7fffffff], bh; cmp rdx, 0x7fffffff; movsxd rdi, edi; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000000023a57: or byte ptr [rax + 0x87], bh; syscall; 
0x0000000000043607: or byte ptr [rax + 0x95], bh; syscall; 
0x0000000000043877: or byte ptr [rax + 0x96], bh; syscall; 
0x0000000000043877: or byte ptr [rax + 0x96], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000043897: or byte ptr [rax + 0x98], bh; syscall; 
0x0000000000043897: or byte ptr [rax + 0x98], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024217: or byte ptr [rax + 0x99], bh; syscall; 
0x0000000000024217: or byte ptr [rax + 0x99], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023a77: or byte ptr [rax + 0x9b], bh; syscall; 
0x0000000000023a77: or byte ptr [rax + 0x9b], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023277: or byte ptr [rax + 0xa1], bh; syscall; 
0x0000000000023277: or byte ptr [rax + 0xa1], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000741b7: or byte ptr [rax + 0xa3], bh; syscall; 
0x00000000000741b7: or byte ptr [rax + 0xa3], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000239b7: or byte ptr [rax + 0xa6], bh; xor esi, esi; syscall; 
0x00000000000240a7: or byte ptr [rax + 0xa8], bh; syscall; 
0x0000000000023eb7: or byte ptr [rax + 0xaa], bh; syscall; 
0x0000000000023eb7: or byte ptr [rax + 0xaa], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000042737: or byte ptr [rax + 0xab], bh; syscall; 
0x0000000000042737: or byte ptr [rax + 0xab], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023957: or byte ptr [rax + 0xaf], bh; syscall; 
0x0000000000023957: or byte ptr [rax + 0xaf], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006e0f7: or byte ptr [rax + 0xb], bh; pop rbx; pop rbp; ret; 
0x000000000007626f: or byte ptr [rax + 0xb], cl; xchg eax, esp; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x2374; 
0x00000000000243f7: or byte ptr [rax + 0xc5], bh; syscall; 
0x00000000000243f7: or byte ptr [rax + 0xc5], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000024417: or byte ptr [rax + 0xc6], bh; syscall; 
0x0000000000024417: or byte ptr [rax + 0xc6], bh; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000050613: or byte ptr [rax + 0xc], bh; pop rbx; pop rbp; ret; 
0x000000000001e76b: or byte ptr [rax + 0xd9], bh; mov edx, 0x800; mov rsi, r9; syscall; 
0x0000000000042140: or byte ptr [rax + 0xf], 0x44; fdivr dword ptr [rax + 0x10]; syscall; 
0x00000000000696db: or byte ptr [rax + 1], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x00000000000527bf: or byte ptr [rax + 1], cl; fimul dword ptr [rax - 0x7d]; ret; 
0x000000000001ca32: or byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000061a7f: or byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x1634802], cl; mov qword ptr [rdi], rax; ret; 
0x00000000000619db: or byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x18b4802], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061abb: or byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x1b60f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a37: or byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x1b70f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a9f: or byte ptr [rax + 3], cl; adc byte ptr [rcx + 0x48018b02], cl; mov dword ptr [rdi], eax; ret; 
0x000000000007af70: or byte ptr [rax + 3], cl; add al, 0xca; pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x000000000006b7e7: or byte ptr [rax + 3], cl; add al, 0xca; ret; 
0x0000000000078a32: or byte ptr [rax + 3], cl; add eax, 0x3dec6; add rsp, 8; pop rbp; pop r12; jmp rax; 
0x000000000007896a: or byte ptr [rax + 3], cl; add eax, 0x3df8e; call rax; 
0x000000000005bcec: or byte ptr [rax + 4], bh; mov rdi, rbp; mov rsi, rdx; syscall; 
0x0000000000047619: or byte ptr [rax + rax], al; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x000000000004c4f0: or byte ptr [rax + rbp*4 - 0x48], dh; add byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000007b186: or byte ptr [rax - 0x262b14f1], dh; in al, dx; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000071dec: or byte ptr [rax - 0x26], bh; pop rbp; pop r12; ret; 
0x0000000000053cf4: or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000005b12f: or byte ptr [rax - 0x57e38bfe], ch; add dword ptr [rbp + 0x34], esi; mov eax, 0x83; syscall; 
0x000000000002d26a: or byte ptr [rax - 0x73], cl; adc byte ptr [r8 - 0x7d], r9b; ret 0xdb02; 
0x000000000006a450: or byte ptr [rax - 0x73], cl; add al, 0x83; pop rbx; pop rbp; ret; 
0x0000000000069e17: or byte ptr [rax - 0x73], cl; add dword ptr [r8 - 0x7d], r9d; ret; 
0x000000000004acea: or byte ptr [rax - 0x73], cl; add eax, 0x6bf3e; ret; 
0x0000000000041483: or byte ptr [rax - 0x73], cl; and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x10; syscall; 
0x0000000000023b52: or byte ptr [rax - 0x73], cl; and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov eax, 0x9d; syscall; 
0x000000000004f289: or byte ptr [rax - 0x73], cl; cld; pop rbx; pop rbp; ret; 
0x000000000006ec65: or byte ptr [rax - 0x73], cl; push rsp; and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x000000000004ef47: or byte ptr [rax - 0x73], cl; xor eax, 0x65437; call 0x4ee80; add rsp, 8; shr rax, 0x11; ret; 
0x0000000000041ac7: or byte ptr [rax - 0x75], cl; add al, 0x24; mov edx, r13d; mov rdi, r15; lea rcx, [rsp + 0x38]; call rax; 
0x0000000000052543: or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000071e0e: or byte ptr [rax - 0x75], cl; add eax, 0x425ba; test rax, rax; je 0x71e26; call rax; 
0x000000000006d57c: or byte ptr [rax - 0x75], cl; jg 0x6d589; call qword ptr [rax]; 
0x000000000006b7e3: or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x000000000002aece: or byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x77], cl; sbb byte ptr [rcx + rcx*4 - 0x30], cl; pop rbx; ret; 
0x00000000000721e3: or byte ptr [rax - 0x77], cl; add ecx, dword ptr [rax + 0x63]; ret 0xfac1; 
0x0000000000023c54: or byte ptr [rax - 0x77], cl; and al, 0x20; xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000005fe72: or byte ptr [rax - 0x77], cl; call 0x5c475bd5; pop r13; ret; 
0x00000000000684dd: or byte ptr [rax - 0x77], cl; ja 0x684f2; mov qword ptr [rdi + 0x98], r9; ret; 
0x00000000000686fd: or byte ptr [rax - 0x77], cl; ja 0x68712; mov qword ptr [rdi + 0x98], r9; ret; 
0x000000000006b3c7: or byte ptr [rax - 0x77], cl; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b457: or byte ptr [rax - 0x77], cl; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x0000000000051f5a: or byte ptr [rax - 0x77], cl; out dx, eax; call rax; 
0x000000000001ca0b: or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000072b66: or byte ptr [rax - 0x77], cl; ret 0x894c; 
0x00000000000647c9: or byte ptr [rax - 0x77], cl; ret 0x8b49; 
0x0000000000023763: or byte ptr [rax - 0x77], cl; ret; 
0x000000000002aed2: or byte ptr [rax - 0x77], cl; sbb byte ptr [rcx + rcx*4 - 0x30], cl; pop rbx; ret; 
0x00000000000688e7: or byte ptr [rax - 0x77], cl; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x000000000006ae86: or byte ptr [rax - 0x7d], 0xc0; add dword ptr [rax + 0x39], ecx; ret 0xf075; 
0x000000000006aeb3: or byte ptr [rax - 0x7d], 0xc0; add dword ptr [rax + 0x39], ecx; sal byte ptr [rbp - 0xd], 1; mov rax, r8; ret; 
0x000000000006ae5e: or byte ptr [rax - 0x7d], 0xe8; add dword ptr [rbx - 0xd], esi; mov rax, r8; ret; 
0x0000000000075801: or byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000028611: or byte ptr [rax - 0x7d], cl; ret 0x4904; 
0x000000000001c99b: or byte ptr [rax - 0x7d], cl; ret 0x4908; 
0x000000000001f3dd: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000006b0d7: or byte ptr [rax - 1], bh; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005c72f: or byte ptr [rax], 0; mov rax, r14; mov rdi, r13; syscall; 
0x000000000006fa6a: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000002b24e: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000005edea: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000005abc9: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x5451c]; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005aba9: or byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x54544]; xor edi, edi; mov eax, 0xe; syscall; 
0x00000000000233f3: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000023f8f: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x121; syscall; 
0x000000000005af1a: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000005b809: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x0000000000073b05: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x000000000006f5c8: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000005abe9: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; xor edx, edx; mov edi, 2; syscall; 
0x000000000001f544: or byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rsp + 0x20], xmm0; mov rdi, r8; syscall; 
0x00000000000428c5: or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006d542: or byte ptr [rax], al; add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000006f1c0: or byte ptr [rax], al; add byte ptr [rax], dl; add byte ptr [rax + 0xf], cl; or byte ptr [r8 - 0x77], cl; ret; 
0x0000000000023fd1: or byte ptr [rax], al; add byte ptr [rbp + 0x1a], dh; call 0x21bc0; add rsp, 8; ret; 
0x000000000001e773: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x32], cl; syscall; 
0x0000000000074dbc: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], cl; syscall; 
0x000000000004c5ed: or byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000058b69: or byte ptr [rax], al; add byte ptr [rcx - 0x73], cl; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000001fc2f: or byte ptr [rax], al; add byte ptr [rsp + rax*2 - 0x77], dh; ret 0x287f; 
0x000000000002f273: or byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000002a2a2: or byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002f0ce: or byte ptr [rax], al; addss xmm0, dword ptr [rip + 0x8194c]; ret; 
0x000000000002ef88: or byte ptr [rax], al; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x000000000002f6b9: or byte ptr [rax], al; addss xmm2, dword ptr [rip + 0x7fdfd]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000022e24: or byte ptr [rax], al; call 0x5deb0; mov qword ptr [rip + 0x93f46], rax; add rsp, 8; ret; 
0x0000000000028eb8: or byte ptr [rax], al; cmove r8, rax; mov rax, r8; ret; 
0x0000000000022227: or byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000002936c: or byte ptr [rax], al; cmp rdi, rdx; setne dl; movzx edx, dl; and eax, edx; ret; 
0x000000000001e913: or byte ptr [rax], al; je 0x1e925; mov rax, qword ptr [rsp + 8]; mov rdi, r14; call rax; 
0x0000000000023fb8: or byte ptr [rax], al; je 0x23fcd; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000004c4d9: or byte ptr [rax], al; je 0x4c4ee; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x000000000005ec29: or byte ptr [rax], al; je 0x5ec43; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000028f49: or byte ptr [rax], al; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x000000000002a249: or byte ptr [rax], al; lea rdx, [rip + 0x87e4c]; test rax, rax; cmove rax, rdx; ret; 
0x000000000005c730: or byte ptr [rax], al; mov rax, r14; mov rdi, r13; syscall; 
0x0000000000028eee: or byte ptr [rax], al; mov rax, r8; ret; 
0x000000000002b495: or byte ptr [rax], al; mov rdi, rbp; syscall; 
0x000000000002ffda: or byte ptr [rax], al; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002d116: or byte ptr [rax], al; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d146: or byte ptr [rax], al; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000002544e: or byte ptr [rax], al; movzx eax, word ptr [rax + rdx*2]; ret; 
0x000000000002ceaa: or byte ptr [rax], al; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000029a30: or byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000029329: or byte ptr [rax], al; ret; 
0x000000000002f0b8: or byte ptr [rax], al; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000002b26d: or byte ptr [rax], al; test al, al; jne 0x2b278; ret; 
0x000000000002a250: or byte ptr [rax], al; test rax, rax; cmove rax, rdx; ret; 
0x000000000005c520: or byte ptr [rbp + 0x1b], dh; movsxd rdi, ebx; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000074df3: or byte ptr [rbp + 0x31], al; rol byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x0000000000074453: or byte ptr [rbp + 0x31], al; sar byte ptr [rax + 0x10d], cl; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000006e7c9: or byte ptr [rbp + 0x416275c0], al; mov eax, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000000078a3d: or byte ptr [rbp + 0x41], bl; pop rsp; jmp rax; 
0x000000000005a02d: or byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000023297: or byte ptr [rbp + 0x481c74ff], al; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000045ab8: or byte ptr [rbp + 0x6348011c], cl; ret; 
0x000000000005d09b: or byte ptr [rbp + 0xa], dh; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x0000000000059c65: or byte ptr [rbp - 0x18], dh; add rdi, 1; cmp rdi, r8; jne 0x59c48; mov eax, edx; ret; 
0x000000000001f2f4: or byte ptr [rbp - 0x72b6fffc], ah; jl 0x1f302; add cl, byte ptr [rax - 0x77]; ret; 
0x000000000002d2a7: or byte ptr [rbp - 0x72b701aa], cl; adc byte ptr [r8 - 0x7d], r9b; ret 0xdb02; 
0x0000000000050668: or byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000006c4c9: or byte ptr [rbx + 0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000000046482: or byte ptr [rbx + 0x440f07e0], al; ret 0x8944; 
0x00000000000696bc: or byte ptr [rbx + 0x48], bl; add eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000006ad5e: or byte ptr [rbx + 0x4c], bl; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000000036563: or byte ptr [rbx + 0x5d], bl; divsd xmm0, xmm1; ret; 
0x0000000000035372: or byte ptr [rbx + 0x5d], bl; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000036e12: or byte ptr [rbx + 0x5d], bl; divss xmm0, xmm1; ret; 
0x0000000000035beb: or byte ptr [rbx + 0x5d], bl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000006c6b2: or byte ptr [rbx + 0x5d], bl; jmp rax; 
0x00000000000364ba: or byte ptr [rbx + 0x5d], bl; mulsd xmm0, xmm1; ret; 
0x000000000001eb81: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000000505a0: or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000001f7e0: or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000353bc: or byte ptr [rbx + 0x5d], bl; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035c40: or byte ptr [rbx + 0x5d], bl; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000006ee6f: or byte ptr [rbx + 0x7e0c106], cl; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x00000000000354fc: or byte ptr [rbx + 0xff20007], cl; pop rsi; add eax, 0x78918; ret; 
0x0000000000070374: or byte ptr [rbx + 4], ch; add byte ptr [rbx + 0x37401f8], al; ret; 
0x000000000007b3eb: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3eb: or byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x10; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000058b61: or byte ptr [rbx + rdi + 0x5f], cl; sbb byte ptr [rdi], cl; test byte ptr [rax + rcx - 0x72b70000], bh; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000006addc: or byte ptr [rbx - 0x35c678f4], 0x74; in al, dx; mov eax, edx; sub eax, ecx; ret; 
0x0000000000060f37: or byte ptr [rbx - 0x3fcebff1], al; ret; 
0x00000000000199e2: or byte ptr [rbx - 0x67b7fe40], al; ret; 
0x00000000000394ff: or byte ptr [rbx], al; add byte ptr [rax + 1], cl; ret 0xc148; 
0x0000000000023907: or byte ptr [rcx + 0x13fb8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000002392b: or byte ptr [rcx + 0x145b8d2], cl; add byte ptr [rax], al; syscall; 
0x000000000005cca7: or byte ptr [rcx + 0x2b], cl; or r11b, r13b; mov bl, 0xe8; insd dword ptr [rdi], dx; and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x0000000000051430: or byte ptr [rcx + 0x39], cl; ret 0x870f; 
0x000000000001ed27: or byte ptr [rcx + 0x39], cl; sal byte ptr [rbp - 0x1a], 1; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x000000000005bf57: or byte ptr [rcx + 0x53b8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000005b9b7: or byte ptr [rcx + 0x5ab8f6], cl; add byte ptr [rax], al; syscall; 
0x000000000005c287: or byte ptr [rcx + 0x5fb8ff], cl; add byte ptr [rax], al; syscall; 
0x0000000000074623: or byte ptr [rcx + 0x63], cl; clc; mov eax, 0x3d; mov edx, 0x80000000; syscall; 
0x000000000005cc28: or byte ptr [rcx + 0x63], cl; jg 0x5cca5; mov rax, r12; mov rsi, r13; mov rdx, rbx; syscall; 
0x0000000000023dc7: or byte ptr [rcx + 0x7ab8ff], cl; add byte ptr [rax], al; syscall; 
0x0000000000023da7: or byte ptr [rcx + 0x7bb8ff], cl; add byte ptr [rax], al; syscall; 
0x000000000005bfd7: or byte ptr [rcx + 0x85b8f6], cl; add byte ptr [rax], al; syscall; 
0x0000000000023977: or byte ptr [rcx + 0xb0b8f6], cl; add byte ptr [rax], al; syscall; 
0x00000000000346a5: or byte ptr [rcx + 0xca8107], 0; add byte ptr [rdi], bh; movd xmm0, edx; ret; 
0x0000000000067987: or byte ptr [rcx + rcx*4 + 0x3c], cl; fmul dword ptr [rax - 0x7d]; ret; 
0x0000000000067b0e: or byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rax; 
0x000000000006963e: or byte ptr [rcx + rcx*4 - 0x18], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000071dde: or byte ptr [rcx + rcx*4 - 0x1a], cl; mov edi, ebp; pop rbp; pop r12; jmp rdx; 
0x000000000001e5e4: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000001f67c: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000069355: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x000000000004ad37: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000001ff0e: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000074bdf: or byte ptr [rcx + rcx*4 - 0x40], al; add rsp, 0x18; ret; 
0x000000000005d549: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000006c2ac: or byte ptr [rcx + rcx*4 - 0x40], cl; mov rsi, rdx; syscall; 
0x000000000001e713: or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000022e95: or byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000067acd: or byte ptr [rcx + rcx*4 - 1], cl; call rax; 
0x0000000000067b27: or byte ptr [rcx + rcx*4 - 2], cl; mov rdi, r8; call rax; 
0x000000000001e91b: or byte ptr [rcx + rcx*4 - 9], cl; call rax; 
0x0000000000068adb: or byte ptr [rcx + rdi - 0x2f], al; jne 0x68ad0; ret; 
0x000000000003648a: or byte ptr [rcx - 0x10000003], al; jg 0x364a1; xchg dword ptr [rcx - 0x9000000], edi; ret; 
0x0000000000023507: or byte ptr [rcx - 0x47097601], cl; sub al, 1; add byte ptr [rax], al; syscall; 
0x000000000006c81c: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6ec: or byte ptr [rcx - 0x48], al; retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x0000000000057aab: or byte ptr [rcx - 0x75], 0xc; ror dword ptr [rcx - 0x75], 0x14; ret 0xff85; 
0x0000000000052997: or byte ptr [rcx - 0x75], al; adc byte ptr [rbp + 0x394f75c9], al; ret; 
0x00000000000661a9: or byte ptr [rcx - 0x75], cl; adc byte ptr [rax + 0x39], r9b; ret 0x840f; 
0x000000000005952b: or byte ptr [rcx - 0x75], cl; or byte ptr [rcx - 0x77], cl; sbb cl, byte ptr [rcx - 0x7d]; ret 0x4910; 
0x000000000001e758: or byte ptr [rcx - 0x77], cl; add byte ptr [rcx + rcx*4 - 0x38], cl; pop rbx; ret; 
0x0000000000066135: or byte ptr [rcx - 0x77], cl; fisttp qword ptr [rax - 0x77]; ret; 
0x0000000000076568: or byte ptr [rcx - 0x77], cl; jns 0x765c5; add rsp, 0x100; ret; 
0x00000000000233b7: or byte ptr [rcx - 0x77], cl; retf 0x6348; ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x00000000000234d7: or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11d; syscall; 
0x0000000000024187: or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11e; syscall; 
0x0000000000023b97: or byte ptr [rcx - 0x77], cl; retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x12e; syscall; 
0x000000000005bff7: or byte ptr [rcx - 0x77], cl; retf 0xd289; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x000000000005952f: or byte ptr [rcx - 0x77], cl; sbb cl, byte ptr [rcx - 0x7d]; ret 0x4910; 
0x0000000000021a88: or byte ptr [rcx - 0x7c29760f], cl; stc; or dword ptr [rdi - 0x2a], esi; ret; 
0x0000000000070b96: or byte ptr [rcx - 0x7d], al; cli; add eax, 0x8349177e; rol dword ptr [rsi], 0x41; mov byte ptr [rcx], 0; ret; 
0x000000000001a7ff: or byte ptr [rcx - 0x7d], al; ret 0x4101; 
0x0000000000072a71: or byte ptr [rcx - 0x7f], cl; ret; 
0x0000000000045e84: or byte ptr [rcx - 0x8f7dbbc], cl; ret; 
0x0000000000023527: or byte ptr [rcx - 0x9cb70a], cl; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x00000000000747d7: or byte ptr [rcx - 0x9cb72e], cl; mov r10d, ecx; movsxd r8, r8d; mov eax, 0x104; syscall; 
0x0000000000016cad: or byte ptr [rcx - 0xcf3dbbc], cl; movd dword ptr [rsp + 8], mm0; add rsp, 0x28; ret; 
0x000000000006d0e6: or byte ptr [rcx], 0xc6; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000030c16: or byte ptr [rcx], 0xd0; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000030bdc: or byte ptr [rcx], 0xd0; movd xmm0, eax; ret; 
0x0000000000076d3f: or byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x00000000000750a2: or byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000004f08d: or byte ptr [rcx], al; ret; 
0x0000000000048622: or byte ptr [rcx], cl; clc; ret; 
0x000000000001fd3c: or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000053683: or byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000074b9d: or byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000000019a77: or byte ptr [rdi + 0x53], bh; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a97: or byte ptr [rdi + 0x54], bh; call 0x19ae0; add rsp, 8; ret; 
0x000000000001f572: or byte ptr [rdi + 1], bh; mov qword ptr [rsp + 8], 0x20; syscall; 
0x000000000004c483: or byte ptr [rdi], cl; add eax, 0x74eaf883; add eax, 0x75a3f883; or bh, dh; ret; 
0x000000000004a7da: or byte ptr [rdi], cl; mov bh, 0xc0; ret; 
0x000000000005d5d1: or byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000006c533: or byte ptr [rdi], cl; mov dh, 0x50; test dl, dl; je 0x6c540; ret; 
0x000000000002348c: or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000001dcc1: or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x00000000000684b8: or byte ptr [rdi], cl; mov dh, 6; mov byte ptr [r11], al; mov eax, 1; ret; 
0x000000000003d7fc: or byte ptr [rdi], cl; push rdi; ret 0xff3; 
0x00000000000670ef: or byte ptr [rdx], al; add byte ptr [rax], al; ret; 
0x000000000006b216: or byte ptr [rip + 0x100f], ah; ret; 
0x000000000006b215: or byte ptr [rip + 0x100f], r12b; ret; 
0x000000000007b1a2: or byte ptr [rip + 0x3ffd9400], bh; ja 0x7b1ad; fyl2xp1; ret; 
0x000000000001f97a: or byte ptr [rsi + 0x10], bh; mov rax, r8; syscall; 
0x000000000003e54d: or byte ptr [rsi + 0xf], ah; push rdi; add eax, 0x6ea0a; add rsp, 0x10; pop rbx; ret; 
0x0000000000031728: or byte ptr [rsi + 0xf], ah; push rdi; add eax, 0x7b82f; pop rbx; ret; 
0x0000000000030436: or byte ptr [rsi + 0xf], ah; push rdi; add eax, 0x7cb21; add rsp, 0x10; pop rbx; ret; 
0x000000000002d6bc: or byte ptr [rsi + 0xf], ah; push rdi; retf 0xf66; push rdi; ret 0xff2; 
0x0000000000016c20: or byte ptr [rsi + 0xf], ah; sub cl, dl; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000068f10: or byte ptr [rsi - 0x3f], ah; ret 0x4808; 
0x000000000006a0f8: or byte ptr [rsi - 0x3f], ah; ret 0xeb08; 
0x000000000007aeef: or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000004519a: or byte ptr [rsp + rbp*4 + 0x49], dh; movsxd rdi, esi; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000017ac8: or ch, bl; and al, 8; add rsp, 0x18; fxch st(1); ret; 
0x000000000007b16f: or cl, bl; cld; mov byte ptr [rsp + 9], ah; fldcw word ptr [rsp + 8]; ret; 
0x000000000003fba7: or cl, bl; cld; ret; 
0x000000000003fbd7: or cl, bl; cli; ret; 
0x000000000007b190: or cl, bl; int1; ret; 
0x0000000000072bf9: or cl, byte ptr [rax + 0x29]; ret 0x8d48; 
0x000000000001f957: or cl, byte ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000001efbe: or cl, byte ptr [rax - 0x75]; add eax, dword ptr [rdx - 0x80]; cmp al, 0x20; cmp eax, 0x83481774; ret; 
0x000000000003f688: or cl, byte ptr [rax - 0x77]; ret 0xf748; 
0x0000000000068a55: or cl, byte ptr [rax - 0x7b]; sal byte ptr [rbp - 0x1b], cl; xor eax, eax; ret; 
0x000000000002905c: or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000002ffd9: or cl, byte ptr [rax]; add byte ptr [rdi], cl; sub cl, al; pop rbx; ret; 
0x000000000001b2e0: or cl, byte ptr [rcx + 0x448d43fa]; adc eax, 0x9d2f700; ret 0x3144; 
0x0000000000045ad3: or cl, byte ptr [rcx - 0x77]; call 0xffffffff89513464; out dx, eax; call rax; 
0x00000000000202b4: or cl, byte ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x000000000004e5a1: or cl, byte ptr [rdi]; xchg eax, ebp; rcr byte ptr [rbx - 9], 0xd8; ret; 
0x000000000004e5a0: or cl, byte ptr ds:[rdi]; xchg eax, ebp; rcr byte ptr [rbx - 9], 0xd8; ret; 
0x0000000000022e7a: or dh, byte ptr [rbx + rcx + 0x4c]; mov eax, eax; add rsp, 8; ret; 
0x000000000005d09d: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000005d07d: or dh, byte ptr [rcx]; ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x000000000005c9ec: or dh, byte ptr [rcx]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000001e2a8: or dh, dh; ret 0x75fe; 
0x0000000000054112: or dil, dil; call qword ptr [rax]; 
0x000000000003a440: or dl, dh; cvtpi2ps xmm0, mm0; ret; 
0x000000000003ee04: or dl, dh; cvtps2pd xmm0, xmm0; ret; 
0x0000000000039470: or dl, dh; cvttps2pi mm0, xmm0; ret; 
0x0000000000031008: or dl, dh; movups xmm0, xmmword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x000000000002d10f: or dl, dh; movups xmm0, xmmword ptr [rip + 0x80ce8]; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x0000000000068125: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb3: or dl, dh; movups xmm0, xmmword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x000000000002fe09: or dl, dh; movups xmm2, xmmword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x0000000000017ac2: or dl, dh; movups xmmword ptr [rsp + 8], xmm1; fld qword ptr [rsp + 8]; add rsp, 0x18; fxch st(1); ret; 
0x0000000000034901: or dl, dh; mulps xmm0, xmm7; add rsp, 0x18; ret; 
0x000000000003a36d: or dl, dh; mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000167c4: or dl, dh; subps xmm0, xmm2; ret; 
0x00000000000319d8: or dl, dh; subps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003a36c: or dl, sil; mulps xmm2, xmm3; addsd xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000167b2: or dword ptr [eax], eax; movapd xmm2, xmm0; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000004f08b: or dword ptr [r8], 1; ret; 
0x000000000002344e: or dword ptr [rax + 0x11c], edi; syscall; 
0x0000000000060d45: or dword ptr [rax + 0x54], edi; syscall; 
0x0000000000023409: or dword ptr [rax + 0xe8], edi; syscall; 
0x000000000005c796: or dword ptr [rax + rax - 0x10000], 0xffffffff; lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000000066cde: or dword ptr [rax - 0x77], ecx; ret; 
0x0000000000052cfd: or dword ptr [rax - 0x7d], 0x394801c0; ret; 
0x00000000000692ff: or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000004f08c: or dword ptr [rax], 1; ret; 
0x0000000000022dbe: or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000022dd5: or dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000001fa51: or dword ptr [rax], eax; add byte ptr [rax], al; mov rax, r8; mov rdx, r10; syscall; 
0x000000000004367b: or dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, r12; syscall; 
0x0000000000023e37: or dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rax; mov eax, 0x3e; syscall; 
0x0000000000057033: or dword ptr [rax], eax; add byte ptr [rcx - 0x75], al; or al, 0x39; ret; 
0x0000000000016aea: or dword ptr [rax], eax; add rsp, 0x18; movapd xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000022e90: or dword ptr [rax], eax; add rsp, 8; mov rax, r8; ret; 
0x0000000000022e30: or dword ptr [rax], eax; add rsp, 8; ret; 
0x00000000000167bf: or dword ptr [rax], eax; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000001f262: or dword ptr [rax], eax; lea rcx, [rdx + 1]; mov qword ptr [rax + rdx*8], rbx; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x0000000000016886: or dword ptr [rax], eax; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x00000000000167b3: or dword ptr [rax], eax; movapd xmm2, xmm0; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000016bce: or dword ptr [rax], eax; movss dword ptr [rsp + 0x10], xmm1; movss dword ptr [rsp + 0x14], xmm0; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x48; ret; 
0x000000000001686e: or dword ptr [rax], eax; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000001f271: or dword ptr [rax], eax; pop rbx; ret; 
0x000000000001803a: or dword ptr [rax], eax; ret; 
0x000000000001eabe: or dword ptr [rax], eax; syscall; 
0x000000000001ed11: or dword ptr [rax], eax; test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000006f073: or dword ptr [rbp - 0x7b], eax; sal byte ptr [rbp + 7], 0x85; leave; js 0x6f080; xor eax, eax; ret; 
0x000000000002acc8: or dword ptr [rbx + 0x1c], esi; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x000000000004bd96: or dword ptr [rbx - 0x69f0fb08], eax; ret 0xf980; 
0x000000000007682f: or dword ptr [rcx + rax - 0x28], 0x3e; jmp rax; 
0x000000000006d90e: or dword ptr [rcx + rcx*4 - 0x40], ecx; syscall; 
0x0000000000074c45: or dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000004c9ca: or dword ptr [rcx], eax; add byte ptr [rcx + 0x2a8ce8c5], cl; std; dec dword ptr [rax - 0x77]; ret; 
0x000000000002b69e: or dword ptr [rcx], edi; ret 0xed75; 
0x000000000002affd: or dword ptr [rcx], edi; ret 0xee75; 
0x000000000001dd39: or dword ptr [rdi + 0xc], esi; mov eax, 1; ret; 
0x0000000000021a8f: or dword ptr [rdi - 0x2a], esi; ret; 
0x0000000000068813: or dword ptr [rdi - 5], esp; jmp qword ptr [rsi + 0xf]; 
0x000000000005d1a4: or dword ptr [rdi], 0x20; ret; 
0x0000000000060f47: or dword ptr [rdi], 0x40; xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x0000000000060f60: or dword ptr [rdi], 0x40; xor eax, eax; mov qword ptr [rdi + 0x60], 0; ret; 
0x0000000000060f38: or dword ptr [rdi], 0x40; xor eax, eax; ret; 
0x000000000005b0ed: or dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000001dbcc: or dword ptr [rdi], ecx; xchg eax, esp; ret 0xd009; 
0x0000000000044253: or dword ptr [rdx - 0x38b60003], esi; ret; 
0x000000000006a3a6: or dword ptr [rsi + 0x1d], esi; mov eax, edx; sub eax, esi; ret; 
0x000000000006a36b: or dword ptr [rsi + 0x7c], esi; movzx edx, al; movzx esi, cl; mov eax, edx; sub eax, esi; ret; 
0x0000000000067343: or dword ptr [rsi - 0x1e], esi; sub esi, eax; test r9d, r9d; cmove r8d, esi; mov eax, r8d; ret; 
0x0000000000067368: or dword ptr [rsi - 0x4a], esi; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000000067420: or dword ptr [rsi - 0x52], esi; xor r8d, r8d; mov rax, r8; ret; 
0x000000000007aec3: or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000073cad: or dword ptr [rsp], 0; mov eax, 0xc8; movsxd rdi, dword ptr [rdi + 0x30]; mov esi, 0x20; syscall; 
0x000000000006e623: or dword ptr [rsp], 0; mov esi, r9d; mov eax, 0xca; or esi, 7; syscall; 
0x000000000006f659: or dword ptr [rsp], 0; ret; 
0x0000000000022e8f: or dword ptr ds:[rax], eax; add rsp, 8; mov rax, r8; ret; 
0x0000000000016ae9: or dword ptr fs:[rax], eax; add rsp, 0x18; movapd xmm2, xmm1; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000006be1e: or eax, 0x1047c748; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000075ccd: or eax, 0x18408b4d; test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x000000000005cdb0: or eax, 0x20; mov dword ptr [rbx], eax; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000005ce08: or eax, 0x20; mov dword ptr [rdi], eax; mov eax, 0xffffffff; ret; 
0x0000000000069e24: or eax, 0x247c8948; or byte ptr [rax - 0x77], cl; ret; 
0x000000000006b250: or eax, 0x30; mov dword ptr [rdi + 8], eax; mov eax, 0x100; mov word ptr [rdi + 0x16], ax; ret; 
0x000000000006c547: or eax, 0x4150b60f; test dl, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000015e42: or eax, 0x41e08944; pop rsp; ret; 
0x000000000001db56: or eax, 0x4530ef83; xor eax, eax; cmp edi, 9; setbe r8b; mov eax, r8d; ret; 
0x0000000000034002: or eax, 0x474c985; movapd xmm0, xmm1; ret; 
0x0000000000034152: or eax, 0x474d285; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000074458: or eax, 0x49000001; movsxd rdi, dword ptr [rax]; syscall; 
0x00000000000744e6: or eax, 0x4c000001; mov edi, ebp; mov rsi, rbx; mov rdx, r14; syscall; 
0x0000000000060bf6: or eax, 0x536ad; mov byte ptr [rdx], dil; ret; 
0x0000000000060bb2: or eax, 0x536f1; mov byte ptr [rdx], dil; ret; 
0x000000000003cdd6: or eax, 0x726f5; ret; 
0x00000000000364b2: or eax, 0x77959; add rsp, 8; pop rbx; pop rbp; mulsd xmm0, xmm1; ret; 
0x00000000000316c8: or eax, 0x7cd8b; add rsp, 0x30; pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002f939: or eax, 0x7d632; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002f7f9: or eax, 0x7d762; add rsp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x0000000000031219: or eax, 0x7e2aa; add rsp, 0x28; ret; 
0x0000000000032411: or eax, 0x7e746; add rsp, 0x18; ret; 
0x000000000002f42f: or eax, 0x7e9cc; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7ee88]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x0000000000031d17: or eax, 0x7edb8; add rsp, 0x20; pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002ed5f: or eax, 0x7f09c; mulsd xmm0, xmm2; addsd xmm0, qword ptr [rip + 0x7f558]; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002eb2b: or eax, 0x7f4d8; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002d23d: or eax, 0x7fd2e; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002d20f: or eax, 0x7fd4c; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x000000000002ffd7: or eax, 0x80a70; movaps xmm0, xmm1; pop rbx; ret; 
0x0000000000015e3b: or eax, 0x85000a11; sal byte ptr [rbp + 0xd], 0x44; mov eax, esp; pop r12; ret; 
0x0000000000047586: or eax, 0x89490002; ror byte ptr [rdi], 0xb7; ret; 
0x000000000006d252: or eax, 0x8c48348; ret; 
0x0000000000018037: or eax, 0x94f24; ret; 
0x000000000002344a: or eax, 0x975f685; mov eax, 0x11c; syscall; 
0x000000000001f26e: or eax, 0x97ac5; pop rbx; ret; 
0x0000000000037ba2: or eax, 0xc0ef0f66; divss xmm0, xmm0; ret; 
0x000000000006c36d: or eax, 0xd0f7c019; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000005c38e: or eax, 0xebb8; add byte ptr [rcx + rcx*4 - 0x31], cl; mov rsi, rdx; syscall; 
0x000000000003473d: or eax, 0xf893ffe; mov word ptr [rsp + 0x18], ax; fld xword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x00000000000616f7: or eax, 0xffffffff; ret; 
0x000000000006f2eb: or eax, dword ptr [rax]; add byte ptr [rax], al; cmovne eax, edx; ret; 
0x000000000006fdff: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, 0xffffffff; add rsp, 8; ret; 
0x00000000000420a4: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x00000000000438c6: or eax, dword ptr [rax]; add byte ptr [rax], al; mov rdi, rbx; mov rsi, rbp; syscall; 
0x000000000006e0f9: or eax, dword ptr [rax]; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000006f001: or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000007b386: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000004208c: or eax, dword ptr [rcx + rcx*4 - 0x20]; pop r12; ret; 
0x000000000002d0b4: or eax, dword ptr [rcx + rcx*4 - 0x40]; ret; 
0x0000000000074fe9: or eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000005b478: or eax, dword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000042c11: or eax, ebx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000003761c: or eax, ecx; je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000048601: or eax, edi; ret; 
0x0000000000030c17: or eax, edx; mov word ptr [rsp - 0x10], ax; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000030bdd: or eax, edx; movd xmm0, eax; ret; 
0x0000000000030bb1: or eax, edx; movq xmm0, rax; ret; 
0x000000000004eef3: or eax, edx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000001dbd0: or eax, edx; movzx eax, al; ret; 
0x000000000006759e: or eax, edx; ret; 
0x000000000007af48: or eax, esi; and eax, edi; ret; 
0x000000000006d241: or ebx, dword ptr [rbp - 0x76b3fffc]; ror byte ptr [rax - 0x77], 0xd6; syscall; 
0x0000000000016a08: or ebx, ecx; leave; fchs; add rsp, 0x38; fxch st(1); ret; 
0x0000000000061311: or ebx, esp; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000061e6c: or ecx, dword ptr [rax + 0x69]; ret 0xca00; 
0x0000000000021bcc: or ecx, dword ptr [rax - 0x77]; clc; ret; 
0x000000000006eccd: or ecx, dword ptr [rbx - 0x31f7cf9]; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000001ed18: or ecx, dword ptr [rcx + rcx*4 - 0x38]; syscall; 
0x0000000000022e7c: or ecx, dword ptr [rcx + rcx*4 - 0x40]; add rsp, 8; ret; 
0x0000000000040613: or ecx, ebp; std; jmp qword ptr [rsi + 0xf]; 
0x000000000007b175: or ecx, ebx; insb byte ptr [rdi], dx; and al, 8; ret; 
0x000000000001db84: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x000000000001e151: or edi, 0x20; xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x0000000000057abc: or edi, dword ptr [rbp - 0x20]; xor eax, eax; ret; 
0x000000000004e332: or edi, ebp; jmp qword ptr [rsi + 0x2e]; 
0x000000000002e38f: or edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000001e1bb: or edx, 0x20; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x00000000000346a8: or edx, 0x3f000000; movd xmm0, edx; ret; 
0x000000000001f9a9: or edx, 0x8000; mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x0000000000076271: or edx, dword ptr [rsp + 0xc0]; or rdx, rax; je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x0000000000076279: or edx, eax; je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x000000000003461f: or edx, eax; movq xmm0, rdx; ret; 
0x000000000003f46e: or edx, ecx; mov rax, r8; ret; 
0x000000000005020f: or esi, 0x8000; movsxd rsi, esi; syscall; 
0x000000000006d48e: or esi, 1; mov rax, r15; mov rdx, r10; syscall; 
0x000000000006e5de: or esi, 6; nop dword ptr [rax]; mov r10, rbx; mov rax, r8; syscall; 
0x000000000006e62f: or esi, 7; syscall; 
0x000000000006b276: or esi, eax; xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x000000000006d0e7: or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000007aeac: or esi, edi; shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000005c6aa: or esp, 0x240; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005c6c5: or esp, 0x440; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005e5e2: or esp, edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000018039: or qword ptr [r8], r8; ret; 
0x000000000005b0ec: or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000001f9a8: or r10, 0x8000; mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x000000000005ccaa: or r11b, r13b; mov bl, 0xe8; insd dword ptr [rdi], dx; and bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c6a9: or r12d, 0x240; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005c6c4: or r12d, 0x440; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005b477: or rax, qword ptr [rdx]; mov qword ptr [rdi], rax; xor eax, eax; ret; 
0x0000000000030bb0: or rax, rdx; movq xmm0, rax; ret; 
0x000000000004eef2: or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000006759d: or rax, rdx; ret; 
0x0000000000076270: or rdx, qword ptr [rsp + 0xc0]; or rdx, rax; je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x0000000000076278: or rdx, rax; je 0x762a0; add rsp, 0x100; pop rbx; ret; 
0x000000000003461e: or rdx, rax; movq xmm0, rdx; ret; 
0x000000000003f46d: or rdx, rcx; mov rax, r8; ret; 
0x0000000000016885: or word ptr [rax], ax; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000001686d: or word ptr [rax], ax; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000312b6: out 0, al; add byte ptr [rax], al; add rsp, 0x48; ret; 
0x000000000001f4d8: out 0, eax; add byte ptr [rax], al; syscall; 
0x0000000000048611: out 0x10, eax; or eax, edi; ret; 
0x000000000003d196: out 0x17, eax; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x00000000000485ff: out 0x18, eax; or eax, edi; ret; 
0x000000000006d111: out 0x1f, al; and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000003d0e0: out 0x34, eax; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000006bad9: out 0x48, al; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000059d02: out 0x48, al; mov edi, ebp; pop rbp; pop r12; pop r13; jmp rcx; 
0x000000000007010e: out 0x48, eax; mov eax, dword ptr [rsp]; lea r12, [rip + 0x462a6]; call rax; 
0x000000000004c537: out 0x48, eax; mov ebp, ecx; push rbx; mov rbx, rsi; syscall; 
0x000000000007478d: out 0x48, eax; mov esi, ebx; mov rdx, rbp; syscall; 
0x000000000005c0ca: out 0x48, eax; mov esi, esp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1ba: out 0x48, eax; mov esi, esp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x00000000000748a9: out 0x48, eax; test esi, esi; je 0x74948; mov eax, 0x4f; mov rdi, r12; syscall; 
0x0000000000070429: out 0x49, eax; mov eax, eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x0000000000078963: out 0x4c, al; mov edi, ebp; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000006d3fa: out 0x4c, eax; mov eax, eax; syscall; 
0x000000000004c591: out 0x4c, eax; mov edx, ebp; movsxd rsi, esi; syscall; 
0x000000000005f3f6: out 0x5d, eax; pop r12; pop r13; pop r14; jmp rax; 
0x000000000001e066: out 0x7f, eax; cmp edi, 0x20; seta al; ret; 
0x000000000006fc87: out 0x80, al; add rsi, 0x81; syscall; 
0x000000000001dbb7: out 0x80, eax; sete al; ret; 
0x0000000000048a51: out 0x83, al; ret; 
0x0000000000071de1: out 0x89, al; out dx, eax; pop rbp; pop r12; jmp rdx; 
0x0000000000015c75: out 0x97, eax; add byte ptr [rax], al; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; add rsp, 8; ret; 
0x0000000000044009: out 0xa, al; mov dword ptr [rdx], esi; ret; 
0x000000000005cae6: out 0xb8, al; adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x00000000000703f3: out 0xb8, al; add eax, 0x4c000000; mov edi, esp; syscall; 
0x0000000000071d37: out 0xb8, al; in eax, 0; add byte ptr [rax], al; movsxd rdi, r8d; syscall; 
0x0000000000022225: out 0xbc, eax; or byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000002c5f2: out 0xc0, eax; pcmpgtd mm0, qword ptr [rcx + 0x750fc0ff]; mov ecx, dword ptr [rax - 0x75]; push rax; and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000001e628: out 0xe8, al; ret 0x3d5; 
0x000000000001e94b: out 0xe8, eax; fbld tbyte ptr [rsi - 1]; dec dword ptr [rax - 0x77]; ret; 
0x0000000000077f8e: out 0xe8, eax; in al, dx; ret 0xffff; 
0x00000000000599be: out 0xe8, eax; in eax, dx; sbb byte ptr [rdx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000025197: out 0xe8, eax; ret; 
0x00000000000589aa: out 0xe9, eax; push rax; add dword ptr [rax], eax; add dh, dh; ret 0x7401; 
0x000000000007a55a: out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000003357e: out 0xf, eax; sub ah, al; movd xmm4, eax; addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x000000000007b3b0: out 0xf0, al; sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x000000000005c0cd: out 0xf3, al; stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1bd: out 0xf3, al; stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000006a551: out 0xf7, al; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000006086b: out 0xfb, al; jmp qword ptr [rsi - 0x70]; 
0x000000000001e035: out 0xfe, eax; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rcx + 0xfffeff], 0; setne al; ret; 
0x000000000002ec1f: out 7, al; add dh, bl; ret; 
0x000000000006ec21: out 7, al; and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000002f671: out 7, eax; add dl, dh; addps xmm0, xmmword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000004c4ef: out 8, eax; je 0x4c49b; mov eax, 0x48; mov esi, 4; mov edx, 0x800; syscall; 
0x0000000000048621: out 8, eax; or eax, edi; ret; 
0x00000000000343a4: out dx, al; add dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x0000000000064036: out dx, al; add dword ptr [rax - 0x7d], ecx; ret 0xbf08; 
0x00000000000337e5: out dx, al; add rsp, 8; ret; 
0x0000000000039732: out dx, al; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000005e2fd: out dx, al; call rax; 
0x000000000003fcd9: out dx, al; lea rax, [rbx + rdx]; pop rbx; ret; 
0x000000000005e6fe: out dx, al; loope 0x5e700; jmp qword ptr [rsi + 0x2e]; 
0x000000000006755f: out dx, al; mov r12, r14; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x0000000000040541: out dx, al; mov rax, qword ptr [rax + 8]; ret; 
0x000000000005edbe: out dx, al; mov rdi, rbx; mov qword ptr [rbx + 0x38], 0; mov qword ptr [rbx + 0x28], 0; call qword ptr [rbx + 0x50]; 
0x000000000005cc32: out dx, al; mov rdx, rbx; syscall; 
0x0000000000033977: out dx, al; movss xmm0, dword ptr [rip + 0x7d08c]; ret; 
0x00000000000502d8: out dx, al; movsxd rdx, eax; mov eax, 0x48; syscall; 
0x0000000000034385: out dx, al; mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000001e0ee: out dx, al; ret; 
0x00000000000438cf: out dx, al; syscall; 
0x000000000003a8b1: out dx, al; test bx, bx; je 0x3a88c; fchs; pop rbx; ret; 
0x000000000006e6ed: out dx, eax; add dword ptr [rax], eax; add al, ch; sub cl, byte ptr [rax]; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000001c6dd: out dx, eax; and al, ch; idiv rdi; inc dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x000000000001dc85: out dx, eax; and byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x000000000001dc45: out dx, eax; and dword ptr [rcx], esi; rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x00000000000746e1: out dx, eax; call 0x219f0; mov eax, 0x50; mov rdi, rbp; syscall; 
0x000000000005ba19: out dx, eax; call 0x219f0; mov eax, 0x5a; mov rdi, rbp; mov rsi, rbx; syscall; 
0x000000000004c49d: out dx, eax; call 0x21bc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000059bb0: out dx, eax; call 0x21bc0; pop rbp; ret; 
0x0000000000073915: out dx, eax; call 0x6c680; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000005c9f3: out dx, eax; call qword ptr [rbp + 0x48]; 
0x000000000005d3a7: out dx, eax; call qword ptr [rbp + 0x50]; 
0x0000000000045adb: out dx, eax; call rax; 
0x00000000000796e1: out dx, eax; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000007a59f: out dx, eax; in al, 0xf; xchg eax, edi; ret 0x2e0f; 
0x000000000003648f: out dx, eax; jg 0x364a1; xchg dword ptr [rcx - 0x9000000], edi; ret; 
0x000000000004712d: out dx, eax; jge 0x4712d; jmp qword ptr [rsi + 0x2e]; 
0x0000000000037ee6: out dx, eax; jmp qword ptr [rsi + 0x49]; 
0x0000000000037ead: out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000001ee39: out dx, eax; lea rax, [rip - 0x71]; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000033266: out dx, eax; leave; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003454f: out dx, eax; leave; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000005bc7f: out dx, eax; mov eax, 5; mov rsi, rdx; mov rdi, rbp; syscall; 
0x00000000000614eb: out dx, eax; mov edx, 0x180; syscall; 
0x000000000006fbea: out dx, eax; mov esi, 0x20; call 0x438b0; xor eax, eax; pop rbp; ret; 
0x000000000005222b: out dx, eax; mov esi, dword ptr [rax]; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000005d1d1: out dx, eax; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000005d24f: out dx, eax; mov r13d, eax; call 0x5d350; mov rdi, rbp; mov r12d, eax; call qword ptr [rbp + 0x18]; 
0x000000000006c4e3: out dx, eax; mov r9, qword ptr [rsp + 0x30]; mov rsi, r14; syscall; 
0x0000000000078966: out dx, eax; mov rax, qword ptr [rax + 8]; add rax, qword ptr [rip + 0x3df8e]; call rax; 
0x000000000005ca09: out dx, eax; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000052180: out dx, eax; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000069458: out dx, eax; mov rax, r12; pop r12; ret; 
0x000000000006c20a: out dx, eax; mov rax, r8; syscall; 
0x000000000005d53a: out dx, eax; mov rax, r9; syscall; 
0x000000000001edf5: out dx, eax; mov rdx, r13; mov rsi, r12; call rbx; 
0x000000000007453d: out dx, eax; mov rdx, r14; syscall; 
0x000000000005bcc2: out dx, eax; mov rsi, r9; syscall; 
0x00000000000744ec: out dx, eax; mov rsi, rbx; mov rdx, r14; syscall; 
0x000000000005ba26: out dx, eax; mov rsi, rbx; syscall; 
0x0000000000059d63: out dx, eax; mov rsi, rdx; syscall; 
0x00000000000616f6: out dx, eax; or eax, 0xffffffff; ret; 
0x0000000000071de3: out dx, eax; pop rbp; pop r12; jmp rdx; 
0x0000000000059d05: out dx, eax; pop rbp; pop r12; pop r13; jmp rcx; 
0x0000000000068ae0: out dx, eax; ret; 
0x000000000002ef65: out dx, eax; rol byte ptr [rbp + 0x59880fd2], 1; add byte ptr [rax], al; ret; 
0x000000000002edb3: out dx, eax; rol byte ptr [rbp - 0x2c77f02e], 0; add byte ptr [rax], al; ret; 
0x000000000003a43b: out dx, eax; ror byte ptr [rax - 0x7d], 0xc4; or dl, dh; cvtpi2ps xmm0, mm0; ret; 
0x000000000003a4af: out dx, eax; ror byte ptr [rax - 0x7d], 0xc4; sbb bl, dh; cvtpi2ps xmm0, mm0; ret; 
0x000000000003f8f5: out dx, eax; ror byte ptr [rax - 0x7d], 0xc4; xor dl, dh; cvtps2pd xmm0, xmm1; pop rbx; ret; 
0x000000000006be94: out dx, eax; sal byte ptr [rcx], 0xc0; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b8c6: out dx, eax; sal byte ptr [rcx], 0xc0; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x0000000000071fc9: out dx, eax; sal dl, 0x48; cvtpi2ps xmm0, mm7; ret; 
0x0000000000032e80: out dx, eax; sal dl, 0xf; pop rcx; retf; cvtsd2ss xmm0, xmm1; ret; 
0x000000000002ee86: out dx, eax; sal dl, 0xf; pop rsi; ret; 
0x000000000001de12: out dx, eax; stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000067aff: out dx, eax; sub rax, qword ptr [rcx + rdx - 0x10]; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000002b499: out dx, eax; syscall; 
0x000000000001dc25: out dx, eax; xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x000000000001dd15: out dx, eax; xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000006e6bc: outsb dx, byte ptr [rsi]; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000001e39c: outsb dx, byte ptr [rsi]; call qword ptr [rbx + 0x48]; 
0x0000000000033665: outsb dx, byte ptr [rsi]; clc; mulss xmm7, xmm2; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x0000000000030e6e: outsb dx, byte ptr [rsi]; fcos; jmp qword ptr [rsi + 0xf]; 
0x000000000003a807: outsb dx, byte ptr [rsi]; leave; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x000000000003cf41: outsb dx, byte ptr [rsi]; nop word ptr [rax + rax]; mulss xmm2, xmm1; movaps xmm0, xmm2; add rsp, 0x18; ret; 
0x0000000000050843: outsb dx, byte ptr [rsi]; push rax; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000002f952: outsb dx, byte ptr [rsi]; ret 0x5489; 
0x0000000000017814: outsb dx, byte ptr [rsi]; ret 0x55e8; 
0x0000000000034624: outsb dx, byte ptr [rsi]; ret 0x66c3; 
0x0000000000017df0: outsb dx, byte ptr [rsi]; ret 0x81eb; 
0x00000000000304cc: outsb dx, byte ptr [rsi]; ret 0x8348; 
0x000000000003a7ec: outsb dx, byte ptr [rsi]; ret 0x90c3; 
0x0000000000018ad4: outsb dx, byte ptr [rsi]; ret 0x95e8; 
0x000000000002f99a: outsb dx, byte ptr [rsi]; ret 0x9fe8; 
0x000000000003a3c2: outsb dx, byte ptr [rsi]; ret 0xa7e9; 
0x000000000003b9b2: outsb dx, byte ptr [rsi]; ret 0xb7e9; 
0x000000000001835c: outsb dx, byte ptr [rsi]; ret 0xc121; 
0x00000000000346b0: outsb dx, byte ptr [rsi]; ret 0xfc3; 
0x000000000003ba7c: outsb dx, byte ptr [rsi]; ret 0xff3; 
0x0000000000017c13: outsb dx, byte ptr [rsi]; ret; 
0x00000000000304fe: outsb dx, byte ptr [rsi]; retf 7; add rsp, 0x10; pop rbx; ret; 
0x0000000000018710: outsb dx, byte ptr [rsi]; retf; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x000000000001839d: outsb dx, byte ptr [rsi]; ror byte ptr [rax - 0x3f], 0xe8; and bl, ch; ret; 
0x000000000003de01: outsb dx, byte ptr [rsi]; ror byte ptr [rax - 0x3f], 0xe8; and byte ptr [rax - 0x77], cl; ret; 
0x000000000003fa07: outsb dx, byte ptr [rsi]; ror byte ptr [rax - 0x7d], 0xc4; xor dl, dh; cvtps2pd xmm0, xmm0; pop rbx; ret; 
0x00000000000341c2: outsb dx, byte ptr [rsi]; sal bl, 1; minps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x0000000000030b74: outsb dx, byte ptr [rsi]; sal byte ptr [rdx + rsi*8 - 0xd], 0xf; adc byte ptr [rip + 0x7e940], al; ret; 
0x0000000000033974: outsb dx, byte ptr [rsi]; sal byte ptr [rsi + rbp*8 - 0xd], 0xf; adc byte ptr [rip + 0x7d08c], al; ret; 
0x000000000004eef8: outsb dx, byte ptr [rsi]; sal dl, 0xf; pop rsp; add eax, 0x5eefe; add rsp, 8; ret; 
0x0000000000032761: outsb dx, byte ptr [rsi]; sal dl, 1; mulps xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000003289c: outsb dx, byte ptr [rsi]; sal dl, 1; mulps xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000006b903: outsb dx, byte ptr [rsi]; sete al; movzx eax, al; lea eax, [rax + rax + 2]; add rsp, 8; ret; 
0x000000000004adaf: outsb dx, byte ptr [rsi]; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000006029e: outsb dx, byte ptr [rsi]; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000003d0e5: outsb dx, byte ptr [rsi]; xlatb; mulsd xmm0, xmm2; ret; 
0x000000000003d19a: outsb dx, byte ptr [rsi]; xlatb; mulss xmm0, xmm2; ret; 
0x0000000000052abd: outsd dx, dword ptr [rsi]; and eax, 0x8948fffc; ret 0x8548; 
0x0000000000076562: outsd dx, dword ptr [rsi]; jne 0x76550; add rdi, qword ptr [rdx + 8]; mov qword ptr [r9 + 0x58], rdi; add rsp, 0x100; ret; 
0x0000000000074fad: outsd dx, dword ptr [rsi]; lahf; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000050983: outsd dx, dword ptr [rsi]; pop rax; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x00000000000253b8: outsd dx, dword ptr [rsi]; push rbx; and byte ptr [rdi], cl; adc dword ptr [rax + 0x20], edx; pop rbx; ret; 
0x000000000003f3d5: pcmpeqd mm1, mm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b5: pcmpeqd mm1, mm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3d4: pcmpeqd xmm1, xmm1; psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b4: pcmpeqd xmm1, xmm1; psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000006e8e8: pcmpeqw mm2, qword ptr [rip + 0x10ba]; add al, dh; cmpxchg dword ptr [rdi + 4], edx; and eax, 0x10; ret; 
0x000000000007b0a4: pcmpgtd mm0, qword ptr [rbp + 0x78e8d9c0]; add eax, 0xd9ddfdd9; ret; 
0x000000000002c5f4: pcmpgtd mm0, qword ptr [rcx + 0x750fc0ff]; mov ecx, dword ptr [rax - 0x75]; push rax; and byte ptr [rax - 9], cl; ret 0xf000; 
0x0000000000034741: pcmpgtd mm1, qword ptr [rcx - 0x24e7dbbc]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x28; ret; 
0x000000000006de8a: pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r13; syscall; 
0x0000000000036685: pop qword ptr [rsi + 0xff20007]; pop rcx; ret; 
0x0000000000019a11: pop r10; add byte ptr [rax], al; mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x000000000003f4da: pop r12; addsd xmm0, xmm1; ret; 
0x0000000000035f0b: pop r12; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000367b9: pop r12; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000038fea: pop r12; fmul st(0); pop r13; ret; 
0x00000000000390d3: pop r12; fsubrp st(1); pop r13; ret; 
0x0000000000078a3f: pop r12; jmp rax; 
0x0000000000071de5: pop r12; jmp rdx; 
0x00000000000605a1: pop r12; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x000000000005e741: pop r12; movzx eax, al; neg eax; ret; 
0x000000000001665d: pop r12; mulsd xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x000000000003e004: pop r12; pop r13; fmulp st(1); ret; 
0x000000000001ee42: pop r12; pop r13; jmp rax; 
0x0000000000059d07: pop r12; pop r13; jmp rcx; 
0x0000000000075bc6: pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000038922: pop r12; pop r13; movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003871a: pop r12; pop r13; movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000005a9bc: pop r12; pop r13; pop r14; jmp rax; 
0x0000000000015b13: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x0000000000024e42: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000000001529a: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000078978: pop r12; pop r13; pop r14; pop rbp; ret; 
0x000000000001dad4: pop r12; pop r13; pop r14; ret; 
0x0000000000016756: pop r12; pop r13; ret; 
0x000000000003d6b5: pop r12; pop r14; ret; 
0x00000000000748fb: pop r12; pop rbp; ret; 
0x0000000000015e46: pop r12; ret; 
0x00000000000692bc: pop r12; sub eax, r8d; ret; 
0x000000000003e006: pop r13; fmulp st(1); ret; 
0x000000000001ee44: pop r13; jmp rax; 
0x0000000000059d09: pop r13; jmp rcx; 
0x0000000000075bc8: pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000038924: pop r13; movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003871c: pop r13; movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000005a9be: pop r13; pop r14; jmp rax; 
0x0000000000015b15: pop r13; pop r14; pop r15; jmp rax; 
0x0000000000024e44: pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000000001529c: pop r13; pop r14; pop r15; ret; 
0x000000000007897a: pop r13; pop r14; pop rbp; ret; 
0x000000000001dad6: pop r13; pop r14; ret; 
0x0000000000016758: pop r13; ret; 
0x000000000005a9c0: pop r14; jmp rax; 
0x0000000000015b17: pop r14; pop r15; jmp rax; 
0x0000000000024e46: pop r14; pop r15; pop rbp; ret; 
0x000000000001529e: pop r14; pop r15; ret; 
0x000000000007897c: pop r14; pop rbp; ret; 
0x000000000001dad8: pop r14; ret; 
0x0000000000015b19: pop r15; jmp rax; 
0x0000000000024e48: pop r15; pop rbp; ret; 
0x00000000000152a0: pop r15; ret; 
0x000000000004c371: pop r8; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000034094: pop r9; test eax, eax; jne 0x340a0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000341e4: pop r9; test eax, eax; jne 0x341f0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000003180f: pop rax; adc eax, 0x7c5eb; divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000031e5e: pop rax; adc eax, 0x7d65c; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x000000000002f6bd: pop rax; adc eax, 0x7fdfd; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x0000000000047ec0: pop rax; add byte ptr [rsp + rcx + 0x48], dh; add eax, 0xa0; ret; 
0x0000000000075526: pop rax; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000000760ad: pop rax; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x47; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000003cc80: pop rax; add eax, 0x7117a; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cd2f: pop rax; add eax, 0x7278b; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x0000000000032d92: pop rax; add eax, 0x7b068; ret; 
0x0000000000032872: pop rax; add eax, 0x7b588; ret; 
0x0000000000030ffd: pop rax; add eax, 0x7d305; movsd qword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030ae2: pop rax; add eax, 0x7d318; ret; 
0x000000000002f676: pop rax; add eax, 0x7ec74; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002f43a: pop rax; add eax, 0x7ee88; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x000000000002ee9a: pop rax; add eax, 0x7ef78; ret; 
0x000000000002ede0: pop rax; add eax, 0x7f012; add rsp, 0x18; ret; 
0x000000000002f1a1: pop rax; add eax, 0x7f159; add rsp, 0x18; ret; 
0x000000000002ed6a: pop rax; add eax, 0x7f558; mulsd xmm0, xmm2; divsd xmm0, xmm1; ret; 
0x00000000000310cb: pop rax; add eax, 0x7f977; movss dword ptr [rsp + 0x1c], xmm0; movss xmm0, dword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x000000000002f26f: pop rax; add eax, 0x817cf; add rsp, 0x18; ret; 
0x000000000002f0d2: pop rax; add eax, 0x8194c; ret; 
0x000000000002ef8c: pop rax; add eax, 0x81a9a; ret; 
0x000000000007656c: pop rax; add rsp, 0x100; ret; 
0x0000000000036f8c: pop rax; and al, 4; add rsp, 0x18; ret; 
0x00000000000366e8: pop rax; and al, 8; add rsp, 0x28; ret; 
0x000000000007aff1: pop rax; fld1; fsubp st(1); ret; 
0x0000000000016d0b: pop rax; fxch st(1); ret; 
0x0000000000063d69: pop rax; idiv edi; dec dword ptr [rbx - 0x7cb7fbb6]; ret 0x8504; 
0x000000000004efbd: pop rax; imul rax, qword ptr [rip + 0x67e72]; add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x0000000000033336: pop rax; in al, 0xf2; addps xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003333a: pop rax; in eax, 0x66; movaps xmm0, xmm4; ret; 
0x000000000003331f: pop rax; in eax, 0x66; movd mm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x0000000000039735: pop rax; int 0xf2; addps xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003108f: pop rax; leave; divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003114e: pop rax; leave; divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x0000000000015b65: pop rax; mov eax, 0x81; syscall; 
0x000000000005cda2: pop rax; mov qword ptr [rbx + 0x10], rdx; sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000001bb90: pop rax; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000006d575: pop rax; mov rax, rdi; sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000050984: pop rax; movups xmmword ptr [rdi + 0x68], xmm6; movups xmmword ptr [rdi + 0x78], xmm7; ret; 
0x000000000002aecd: pop rax; or byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x77], cl; sbb byte ptr [rcx + rcx*4 - 0x30], cl; pop rbx; ret; 
0x000000000001e712: pop rax; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000039731: pop rax; out dx, al; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003e930: pop rax; pop rbx; pop rbp; ret; 
0x000000000003a524: pop rax; pop rdx; add rsp, 0x18; ret; 
0x0000000000034792: pop rax; pop rdx; add rsp, 0x28; ret; 
0x0000000000034b49: pop rax; pop rdx; add rsp, 0x48; fmulp st(1); ret; 
0x0000000000039a9f: pop rax; ret 0x280f; 
0x000000000003ca95: pop rax; ret 0x2f0f; 
0x000000000003611d: pop rax; ret 0x41f2; 
0x00000000000369cd: pop rax; ret 0x41f3; 
0x0000000000032e28: pop rax; ret 0x4866; 
0x000000000003f4f2: pop rax; ret 0x5d5b; 
0x0000000000031097: pop rax; ret 0x66c3; 
0x000000000002f220: pop rax; ret 0x89e8; 
0x000000000002f849: pop rax; ret 0x90e8; 
0x000000000003f7e3: pop rax; ret 0xb0e9; 
0x000000000002f988: pop rax; ret 0xb1e8; 
0x000000000002f2e6: pop rax; ret 0xd3e8; 
0x000000000002f751: pop rax; ret 0xf66; 
0x000000000002ea5a: pop rax; ret 0xfc3; 
0x0000000000019170: pop rax; ret 0xff2; 
0x0000000000016b28: pop rax; ret 0xff3; 
0x000000000002e782: pop rax; ret 0xff85; 
0x000000000004c054: pop rax; ret 1; 
0x0000000000016a96: pop rax; ret; 
0x0000000000032dbc: pop rax; retf 0xf66; sub cl, al; addsd xmm0, xmm1; ret; 
0x0000000000031788: pop rax; retf 0xf66; sub cl, al; ret; 
0x000000000003ae5c: pop rax; retf 0xff2; adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x0000000000032c4c: pop rax; retf 0xff2; pop rcx; ret; 
0x0000000000016ad9: pop rax; retf 0xff2; pop rsp; ret; 
0x0000000000039f20: pop rax; retf; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000032758: pop rax; rol dword ptr [rbp + 0x665a74d2], 0x48; movd mm2, eax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x0000000000030875: pop rax; ror byte ptr [rdi], 1; sub dl, al; ret; 
0x0000000000031fc8: pop rax; ror dword ptr [rdi], 1; sub dl, al; ret; 
0x0000000000037986: pop rax; sal bl, 0xf; pop rsi; ret; 
0x0000000000037c50: pop rax; sal bl, 0xf; pop rsi; sal ebx, 0xf; pop rcx; ret 0xff3; 
0x000000000003369e: pop rax; sal bl, cl; addps xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000037226: pop rax; sal dl, 0xf; pop rsi; ret 0xff2; 
0x000000000003ab52: pop rax; sal dl, cl; movups xmmword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000031d9f: pop rax; sal ebx, 0xf; pop rcx; add eax, 0x7edb3; ret; 
0x0000000000039b58: pop rax; sal ebx, cl; addps xmm1, xmm2; addss xmm0, xmm1; ret; 
0x00000000000335d3: pop rax; sal ebx, cl; subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x000000000003a374: pop rax; sal edx, 0xf; pop rax; ret 0xff2; 
0x0000000000031757: pop rax; sal edx, 0xf; pop rcx; add eax, 0x7c957; ret; 
0x000000000002fc15: pop rax; sal edx, 0xf; pop rcx; ret 0xf883; 
0x0000000000039739: pop rax; sal edx, 1; addps xmm0, xmm2; ret; 
0x000000000003aafd: pop rax; sal edx, 1; movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000002f0cc: pop rax; sbb dword ptr [rax], ecx; add bl, dh; addps xmm0, xmmword ptr [rip + 0x8194c]; ret; 
0x000000000002fe26: pop rax; shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x0000000000031988: pop rax; shl dword ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x000000000007aefe: pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000003cbc6: pop rax; shr ebx, 0xd5; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x000000000003cb56: pop rax; shr ebx, 0xdc; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x000000000004c372: pop rax; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000006d134: pop rax; xor byte ptr [rbx + 0x49e1405], cl; add byte ptr [rcx], bh; ret; 
0x0000000000075da7: pop rbp; adc al, byte ptr [rax + rax]; add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000057a6d: pop rbp; cdqe; pop r12; pop r13; ret; 
0x0000000000034e03: pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000035374: pop rbp; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003568e: pop rbp; divss xmm0, xmm1; ret; 
0x0000000000035bed: pop rbp; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003e007: pop rbp; fmulp st(1); ret; 
0x000000000001dca9: pop rbp; jbe 0x1dcb0; xor eax, eax; ret; 
0x000000000001ee45: pop rbp; jmp rax; 
0x0000000000059d0a: pop rbp; jmp rcx; 
0x0000000000075bc9: pop rbp; mov byte ptr [r8 + 0xaa], 1; ret; 
0x000000000001e313: pop rbp; mov eax, r11d; pop r12; ret; 
0x000000000001e3dc: pop rbp; mov eax, r12d; pop r12; ret; 
0x000000000005c887: pop rbp; mov eax, r8d; ret; 
0x000000000006a2bb: pop rbp; mov qword ptr [r13], 0; mov rax, r12; pop r12; pop r13; ret; 
0x000000000006a29a: pop rbp; mov qword ptr [r13], rdx; pop r12; pop r13; ret; 
0x0000000000075bbe: pop rbp; mov qword ptr [r8 + 0x88], rdi; pop r12; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000059d0d: pop rbp; mov rax, -0x26; pop r12; pop r13; ret; 
0x0000000000066acd: pop rbp; mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x000000000005a6bc: pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000038925: pop rbp; movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003871d: pop rbp; movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x00000000000607f2: pop rbp; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000364bc: pop rbp; mulsd xmm0, xmm1; ret; 
0x000000000003eae7: pop rbp; mulsd xmm2, xmm0; movapd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003f4d9: pop rbp; pop r12; addsd xmm0, xmm1; ret; 
0x0000000000035f0a: pop rbp; pop r12; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000367b8: pop rbp; pop r12; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000038fe9: pop rbp; pop r12; fmul st(0); pop r13; ret; 
0x00000000000390d2: pop rbp; pop r12; fsubrp st(1); pop r13; ret; 
0x0000000000078a3e: pop rbp; pop r12; jmp rax; 
0x0000000000071de4: pop rbp; pop r12; jmp rdx; 
0x000000000001665c: pop rbp; pop r12; mulsd xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x000000000001ee41: pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000059d06: pop rbp; pop r12; pop r13; jmp rcx; 
0x0000000000038921: pop rbp; pop r12; pop r13; movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000038719: pop rbp; pop r12; pop r13; movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000005a9bb: pop rbp; pop r12; pop r13; pop r14; jmp rax; 
0x0000000000015b12: pop rbp; pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x0000000000015299: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000001dad3: pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000016755: pop rbp; pop r12; pop r13; ret; 
0x000000000003d6b4: pop rbp; pop r12; pop r14; ret; 
0x000000000001b4d4: pop rbp; pop r12; ret; 
0x00000000000692bb: pop rbp; pop r12; sub eax, r8d; ret; 
0x000000000005a9bf: pop rbp; pop r14; jmp rax; 
0x0000000000015b16: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000000024e45: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x000000000001529d: pop rbp; pop r14; pop r15; ret; 
0x000000000007897b: pop rbp; pop r14; pop rbp; ret; 
0x000000000001dad7: pop rbp; pop r14; ret; 
0x00000000000799ff: pop rbp; ret 0xffff; 
0x00000000000162c2: pop rbp; ret; 
0x00000000000341c6: pop rbp; ror dword ptr [rdi], 1; sub dl, al; ret; 
0x000000000004ecda: pop rbp; sar eax, 0x1f; pop r12; pop r13; pop r14; ret; 
0x000000000006a61e: pop rbp; sar rax, 2; pop r12; ret; 
0x000000000001dc4b: pop rbp; setbe al; ret; 
0x000000000005e73d: pop rbp; setne al; pop r12; movzx eax, al; neg eax; ret; 
0x00000000000489bf: pop rbp; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000069910: pop rbp; sub eax, r8d; pop r12; pop r13; ret; 
0x0000000000044734: pop rbp; sub rax, rcx; pop r12; ret; 
0x00000000000353be: pop rbp; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035c42: pop rbp; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001e427: pop rbp; test eax, eax; sete al; movzx eax, al; add rax, rax; ret; 
0x000000000001df97: pop rbp; test eax, eax; setne al; movzx eax, al; ret; 
0x00000000000696bd: pop rbx; add rax, rbp; pop rbp; pop r12; pop r13; ret; 
0x0000000000069373: pop rbx; cmovne rax, rdx; ret; 
0x0000000000069ad5: pop rbx; cmp byte ptr [rax], 0; cmove rax, rdx; ret; 
0x0000000000018eec: pop rbx; divsd xmm1, xmm1; ret; 
0x000000000003177d: pop rbx; divsd xmm2, xmm0; cvtsi2sd xmm1, eax; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000031dc5: pop rbx; divss xmm2, xmm0; cvtsi2ss xmm1, eax; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003a8f4: pop rbx; faddp st(2); fxch st(1); fstp xword ptr [rdi]; ret; 
0x00000000000321b2: pop rbx; fdivp st(1); ret; 
0x000000000003a920: pop rbx; fstp xword ptr [rdi]; ret; 
0x000000000001699a: pop rbx; fxch st(1); ret; 
0x00000000000505b0: pop rbx; mov eax, 0xc; pop rbp; pop r12; ret; 
0x0000000000074ae8: pop rbx; mov eax, 6; pop rbp; pop r12; ret; 
0x000000000002cd65: pop rbx; mov eax, dword ptr [rax]; ret; 
0x000000000001e2ba: pop rbx; mov eax, r11d; pop rbp; pop r12; ret; 
0x000000000005e663: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000006e836: pop rbx; mov eax, r8d; ret; 
0x000000000006a8a1: pop rbx; mov edx, dword ptr [rax]; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x0000000000025507: pop rbx; mov rax, -1; pop rbp; pop r12; ret; 
0x0000000000072b8a: pop rbx; mov rax, r12; pop r12; ret; 
0x000000000005e1c7: pop rbx; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000003fd6f: pop rbx; mov rax, r8; ret; 
0x00000000000447c4: pop rbx; mov rax, rdx; pop rbp; pop r12; ret; 
0x000000000001688c: pop rbx; movapd xmm0, xmm2; ret; 
0x0000000000016870: pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000018767: pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x000000000001945b: pop rbx; movapd xmm1, xmm3; ret; 
0x000000000003b00e: pop rbx; movaps xmm0, xmm1; ret; 
0x0000000000031531: pop rbx; mulsd xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x0000000000017432: pop rbx; mulsd xmm1, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000031748: pop rbx; mulsd xmm1, xmm0; mulsd xmm0, qword ptr [rip + 0x7ce03]; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000001734e: pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000019649: pop rbx; mulsd xmm1, xmm5; mulsd xmm1, xmm5; ret; 
0x00000000000174bb: pop rbx; mulsd xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000173c6: pop rbx; mulsd xmm2, xmm3; movapd xmm4, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x0000000000018712: pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x0000000000031b7f: pop rbx; mulss xmm1, xmm0; divss xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x0000000000031d90: pop rbx; mulss xmm1, xmm0; mulss xmm0, dword ptr [rip + 0x7edbb]; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x000000000004e5a5: pop rbx; neg eax; ret; 
0x000000000003e003: pop rbx; pop r12; pop r13; fmulp st(1); ret; 
0x000000000006c4ca: pop rbx; pop r12; pop r13; pop r14; ret; 
0x000000000003e036: pop rbx; pop r12; pop r13; ret; 
0x00000000000748fa: pop rbx; pop r12; pop rbp; ret; 
0x000000000001e6a3: pop rbx; pop r12; ret; 
0x0000000000057a6c: pop rbx; pop rbp; cdqe; pop r12; pop r13; ret; 
0x0000000000034e02: pop rbx; pop rbp; divsd xmm0, xmm1; ret; 
0x0000000000035373: pop rbx; pop rbp; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000003568d: pop rbx; pop rbp; divss xmm0, xmm1; ret; 
0x0000000000035bec: pop rbx; pop rbp; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000006c6b3: pop rbx; pop rbp; jmp rax; 
0x000000000001e312: pop rbx; pop rbp; mov eax, r11d; pop r12; ret; 
0x000000000001e3db: pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x000000000005c886: pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000005a6bb: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000000364bb: pop rbx; pop rbp; mulsd xmm0, xmm1; ret; 
0x000000000003eae6: pop rbx; pop rbp; mulsd xmm2, xmm0; movapd xmm0, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003f4d8: pop rbx; pop rbp; pop r12; addsd xmm0, xmm1; ret; 
0x0000000000035f09: pop rbx; pop rbp; pop r12; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000038fe8: pop rbx; pop rbp; pop r12; fmul st(0); pop r13; ret; 
0x00000000000390d1: pop rbx; pop rbp; pop r12; fsubrp st(1); pop r13; ret; 
0x000000000001665b: pop rbx; pop rbp; pop r12; mulsd xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x000000000001dad2: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000016754: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000003d6b3: pop rbx; pop rbp; pop r12; pop r14; ret; 
0x000000000001b4d3: pop rbx; pop rbp; pop r12; ret; 
0x00000000000162c1: pop rbx; pop rbp; ret; 
0x000000000006a61d: pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x000000000006990f: pop rbx; pop rbp; sub eax, r8d; pop r12; pop r13; ret; 
0x0000000000044733: pop rbx; pop rbp; sub rax, rcx; pop r12; ret; 
0x00000000000353bd: pop rbx; pop rbp; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000035c41: pop rbx; pop rbp; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000016913: pop rbx; ret; 
0x0000000000049349: pop rbx; sete al; ret; 
0x000000000001dfce: pop rbx; setne al; movzx eax, al; ret; 
0x000000000005ef6d: pop rbx; sub rdx, rcx; add rax, rdx; ret; 
0x00000000000316d1: pop rbx; subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000031d20: pop rbx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000001df20: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000033592: pop rcx; adc eax, 0x7bf40; movaps xmm0, xmm2; ret; 
0x000000000003cc62: pop rcx; add eax, 0x711b8; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003cd12: pop rcx; add eax, 0x727b8; movss dword ptr [rsp - 4], xmm2; ret; 
0x00000000000366e0: pop rcx; add eax, 0x7797a; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000000354de: pop rcx; add eax, 0x78b7c; subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x0000000000034388: pop rcx; add eax, 0x79a92; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000036f84: pop rcx; add eax, 0x79dfe; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x0000000000033224: pop rcx; add eax, 0x7abde; ret; 
0x0000000000035d42: pop rcx; add eax, 0x7b040; subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x00000000000327f7: pop rcx; add eax, 0x7bdb3; ret; 
0x00000000000335db: pop rcx; add eax, 0x7bee3; ret; 
0x000000000003175b: pop rcx; add eax, 0x7c957; ret; 
0x000000000003105f: pop rcx; add eax, 0x7cdab; add rsp, 0x18; ret; 
0x000000000003174f: pop rcx; add eax, 0x7ce03; addsd xmm0, xmm1; mulsd xmm0, qword ptr [rip + 0x7c957]; ret; 
0x000000000003111d: pop rcx; add eax, 0x7e3a5; add rsp, 0x28; ret; 
0x000000000002f66e: pop rcx; add eax, 0x7e784; addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000031da3: pop rcx; add eax, 0x7edb3; ret; 
0x0000000000031d97: pop rcx; add eax, 0x7edbb; addss xmm0, xmm1; mulss xmm0, dword ptr [rip + 0x7edb3]; ret; 
0x0000000000033232: pop rcx; and eax, 0x7ac28; movapd xmm0, xmm4; ret; 
0x000000000007a6ef: pop rcx; call 0x6418b6e8; and al, 0xf8; movss dword ptr [rsp - 4], xmm5; movq xmm0, qword ptr [rsp - 8]; ret; 
0x0000000000033669: pop rcx; cli; movaps xmm0, xmm7; subss xmm0, xmm4; ret; 
0x000000000002ea52: pop rcx; int 0x66; movaps xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x000000000001964c: pop rcx; int 0xf2; mulps xmm1, xmm5; ret; 
0x0000000000016661: pop rcx; int 0xf2; mulps xmm1, xmm6; ret; 
0x000000000003ba0c: pop rcx; leave; movaps xmm0, xmm1; ret; 
0x0000000000071ed9: pop rcx; neg eax; add rsp, 8; ret; 
0x0000000000017c17: pop rcx; or al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x0000000000033472: pop rcx; ret 0x280f; 
0x000000000002cf6f: pop rcx; ret 0x66c3; 
0x00000000000328ba: pop rcx; ret 0x96eb; 
0x000000000002cfbd: pop rcx; ret 0xf3c3; 
0x0000000000017a17: pop rcx; ret 0xf66; 
0x000000000002fc19: pop rcx; ret 0xf883; 
0x00000000000198e6: pop rcx; ret 0xf8e9; 
0x0000000000018d15: pop rcx; ret 0xfae9; 
0x000000000003d0e9: pop rcx; ret 0xfc3; 
0x000000000002ceae: pop rcx; ret 0xff2; 
0x00000000000198e2: pop rcx; ret 0xff3; 
0x0000000000016dd5: pop rcx; ret; 
0x000000000002cfb2: pop rcx; retf 0x280f; sal ebx, 0xf; pop rcx; ret; 
0x0000000000017351: pop rcx; retf 0xf66; sub ah, al; ret; 
0x0000000000032862: pop rcx; retf 0xff2; adc dword ptr [rsp - 0x10], ecx; ret; 
0x000000000002e82a: pop rcx; retf 0xff2; pop rax; ret; 
0x0000000000037f43: pop rcx; retf 0xff2; pop rcx; ret 0xff2; 
0x00000000000349c6: pop rcx; retf 0xff3; pop rcx; ret 0xff3; 
0x000000000001738b: pop rcx; retf; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000035468: pop rcx; retf; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035ce6: pop rcx; retf; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000032e84: pop rcx; retf; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000031fda: pop rcx; ror byte ptr [rdi], cl; sub dl, al; ret; 
0x000000000003ca22: pop rcx; ror dword ptr [rdi], 0x28; sal bl, 1; divps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003cf4a: pop rcx; ror dword ptr [rdi], 1; sub dl, al; add rsp, 0x18; ret; 
0x000000000003afaf: pop rcx; sal bl, 0xf; pop rax; ret 0xff3; 
0x000000000003346e: pop rcx; sal ebx, 0xf; pop rcx; ret 0x280f; 
0x0000000000037b10: pop rcx; sal ebx, 0xf; pop rsp; ret 0x280f; 
0x000000000003abea: pop rcx; sal ebx, 1; addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003f7df: pop rcx; sal edx, 0xf; pop rax; ret 0xb0e9; 
0x000000000003a5d8: pop rcx; sal edx, 0xf; pop rax; ret; 
0x00000000000373c1: pop rcx; sal edx, 0xf; pop rsp; ret; 
0x000000000003a370: pop rcx; sal edx, cl; addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003eaea: pop rcx; shl byte ptr [rsi + 0xf], 1; sub dl, al; mulsd xmm0, xmm1; ret; 
0x000000000003199a: pop rcx; shl byte ptr [rsi + 0xf], cl; sub dl, al; ret; 
0x000000000003c7d2: pop rcx; shl dword ptr [rsi + 0xf], 0x28; sal dl, 1; divps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000018d42: pop rcx; shl dword ptr [rsi + 0xf], 0x7e; ret; 
0x00000000000174be: pop rcx; shl dword ptr [rsi + 0xf], cl; sub ah, al; movapd xmm1, xmm2; ret; 
0x00000000000173c9: pop rcx; shl dword ptr [rsi + 0xf], cl; sub bl, ah; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000418f2: pop rcx; shr eax, 0x1f; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000695a4: pop rcx; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000007af75: pop rcx; sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000034095: pop rcx; test eax, eax; jne 0x340a0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000341e5: pop rcx; test eax, eax; jne 0x341f0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x000000000004c992: pop rdi; add al, byte ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000002308f: pop rdi; add byte ptr [rax], al; add byte ptr [rax - 1], bh; add rsp, 8; ret; 
0x000000000007b3c1: pop rdi; call r9; mov edi, eax; xor eax, eax; mov al, 0x3c; syscall; 
0x000000000005278d: pop rdi; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000001e1ed: pop rdi; cmp ecx, 0x1a; cmovb eax, edx; ret; 
0x000000000002b5bd: pop rdi; cmp edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000000337a5: pop rdi; fld xword ptr [rsp + 0x10]; test eax, eax; jne 0x337b8; add rsp, 8; ret; 
0x0000000000015b1a: pop rdi; jmp rax; 
0x0000000000071f07: pop rdi; neg eax; add rsp, 8; ret; 
0x0000000000024e49: pop rdi; pop rbp; ret; 
0x00000000000152a1: pop rdi; ret; 
0x000000000004f41d: pop rdi; rol byte ptr [rcx], 0; mov eax, 0x39; syscall; 
0x0000000000058b64: pop rdi; sbb byte ptr [rdi], cl; test byte ptr [rax + rcx - 0x72b70000], bh; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000048f4e: pop rdi; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000005ba20: pop rdx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, rbx; syscall; 
0x000000000004a9e9: pop rdx; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000019a56: pop rdx; add byte ptr [rax], al; mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x0000000000019a12: pop rdx; add byte ptr [rax], al; mov dword ptr [rax], 0x16; xor eax, eax; add rsp, 8; ret; 
0x00000000000404a3: pop rdx; add rsp, 0x130; pop rbp; ret; 
0x000000000003a525: pop rdx; add rsp, 0x18; ret; 
0x0000000000034793: pop rdx; add rsp, 0x28; ret; 
0x0000000000034b4a: pop rdx; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000162b7: pop rdx; add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000003a9a2: pop rdx; and dword ptr [rax], eax; add byte ptr [rbp + 0x480674db], al; add esp, 0x10; pop rbx; ret; 
0x00000000000747c2: pop rdx; cmpsd dword ptr [rsi], dword ptr [rdi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007b1c6: pop rdx; mov eax, 0x3a; syscall; 
0x00000000000463c2: pop rdx; mov edi, ebp; jmp qword ptr [rsi + 0x2e]; 
0x000000000003275d: pop rdx; movq xmm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x0000000000071ed8: pop rdx; pop rcx; neg eax; add rsp, 8; ret; 
0x0000000000019250: pop rdx; ret 0xff2; 
0x000000000002cdae: pop rdx; ret; 
0x0000000000030825: pop rdx; ror byte ptr [rdi], cl; sub dl, al; ret; 
0x000000000002f749: pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000016f8d: pop rdx; shl byte ptr [rsi + 0xf], 0x7e; ret; 
0x000000000003aa43: pop rdx; test ebx, ebx; je 0x3aa50; add rsp, 0x10; pop rbx; ret; 
0x0000000000039bf4: pop rsi; adc eax, 0x74226; movapd xmm0, xmm2; ret; 
0x0000000000039e0d: pop rsi; adc eax, 0x756bd; movaps xmm0, xmm2; ret; 
0x000000000006aff8: pop rsi; add al, byte ptr [rcx]; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000039d82: pop rsi; add eax, 0x74098; ret; 
0x0000000000039a16: pop rsi; add eax, 0x74404; ret; 
0x0000000000039f61: pop rsi; add eax, 0x75569; ret; 
0x0000000000039ba6: pop rsi; add eax, 0x75924; ret; 
0x00000000000365ea: pop rsi; add eax, 0x77830; ret; 
0x0000000000036e92: pop rsi; add eax, 0x78638; ret; 
0x0000000000035502: pop rsi; add eax, 0x78918; ret; 
0x0000000000035d62: pop rsi; add eax, 0x79768; ret; 
0x000000000002d126: pop rsi; add eax, 0x80cf4; ret; 
0x000000000002d156: pop rsi; add eax, 0x82374; ret; 
0x000000000006eba2: pop rsi; add rsp, 0x18; ret; 
0x000000000007af45: pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000005a9c1: pop rsi; jmp rax; 
0x0000000000018eef: pop rsi; leave; ret; 
0x0000000000015b18: pop rsi; pop r15; jmp rax; 
0x0000000000024e47: pop rsi; pop r15; pop rbp; ret; 
0x000000000001529f: pop rsi; pop r15; ret; 
0x000000000007897d: pop rsi; pop rbp; ret; 
0x0000000000071f06: pop rsi; pop rdi; neg eax; add rsp, 8; ret; 
0x00000000000375fc: pop rsi; ret 0xdb85; 
0x00000000000355b7: pop rsi; ret 0xff2; 
0x0000000000035e15: pop rsi; ret 0xff3; 
0x000000000004f30e: pop rsi; ret 1; 
0x000000000001dad9: pop rsi; ret; 
0x000000000003052d: pop rsi; retf 0x280f; sal ebx, 0xf; pop rax; ret; 
0x0000000000031538: pop rsi; retf; movapd xmm0, xmm1; ret; 
0x0000000000031b86: pop rsi; retf; movaps xmm0, xmm1; ret; 
0x000000000003075d: pop rsi; retf; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000034cd3: pop rsi; rol byte ptr [rbx - 0x7cbefe08], 0xd8; inc dword ptr [rcx + rcx*4 - 0x40]; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000003ca29: pop rsi; ror byte ptr [rdi], 1; sub dl, al; ret; 
0x0000000000031dc8: pop rsi; sal bl, 1; cvtpi2ps xmm1, mm0; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000031780: pop rsi; sal dl, 1; cvtpi2ps xmm1, mm0; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000030821: pop rsi; sal dl, 1; cvtps2pd xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000031152: pop rsi; sal ebx, 0xf; pop rax; ret 0xfc3; 
0x0000000000037c54: pop rsi; sal ebx, 0xf; pop rcx; ret 0xff3; 
0x000000000002f745: pop rsi; sal ebx, 0xf; pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000031093: pop rsi; sal edx, 0xf; pop rax; ret 0x66c3; 
0x000000000001dc8b: pop rsi; setbe al; ret; 
0x000000000003c7da: pop rsi; shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x000000000003195e: pop rsp; adc eax, 0x7cc4c; movapd xmm0, xmm2; ret; 
0x0000000000031fa6: pop rsp; adc eax, 0x7ea7c; movaps xmm0, xmm2; ret; 
0x000000000002cea6: pop rsp; adc eax, 0x81114; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x0000000000074787: pop rsp; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, rbx; mov rdx, rbp; syscall; 
0x000000000004eefc: pop rsp; add eax, 0x5eefe; add rsp, 8; ret; 
0x000000000003cc3a: pop rsp; add eax, 0x711c0; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003ccee: pop rsp; add eax, 0x727cc; test edx, edx; js 0x3cd39; ret; 
0x00000000000354e6: pop rsp; add eax, 0x794bc; add rsp, 0x28; ret; 
0x00000000000338e2: pop rsp; add eax, 0x7a518; ret; 
0x0000000000035d4a: pop rsp; add eax, 0x7b024; add rsp, 0x18; ret; 
0x000000000003e2aa: pop rsp; add rsp, 0x38; ret; 
0x000000000003f4db: pop rsp; addsd xmm0, xmm1; ret; 
0x000000000003972d: pop rsp; addsd xmm5, xmm6; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x00000000000171f2: pop rsp; and al, 0x10; fld dword ptr [rsp + 0x10]; add rsp, 0x48; fxch st(1); ret; 
0x00000000000190f6: pop rsp; and al, 0x24; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x0000000000068100: pop rsp; and al, 0xc; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000007aec0: pop rsp; and al, 0xf8; or dword ptr [rsp - 8], edi; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x0000000000068123: pop rsp; and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000003adb1: pop rsp; and al, 8; movsd xmm0, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; ret; 
0x000000000005059e: pop rsp; and al, 8; pop rbx; pop rbp; pop r12; ret; 
0x000000000007b3f3: pop rsp; and al, 8; syscall; 
0x000000000007b3f3: pop rsp; and al, 8; syscall; ret; 
0x0000000000035f0c: pop rsp; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000000367ba: pop rsp; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x00000000000319ae: pop rsp; fldenv [rsi + 0xf]; sub bl, dl; movapd xmm0, xmm2; ret; 
0x0000000000038feb: pop rsp; fmul st(0); pop r13; ret; 
0x0000000000033479: pop rsp; fpatan; subps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000002ee82: pop rsp; fsub dword ptr [rsi + 0xf]; out dx, eax; sal dl, 0xf; pop rsi; ret; 
0x00000000000390d4: pop rsp; fsubrp st(1); pop r13; ret; 
0x0000000000039d7a: pop rsp; in al, 0x66; movaps xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000002e7ca: pop rsp; in eax, 0x66; movaps xmm0, xmm4; ret; 
0x0000000000039f1c: pop rsp; int 0xf3; addps xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000078a40: pop rsp; jmp rax; 
0x0000000000071de6: pop rsp; jmp rdx; 
0x0000000000017b88: pop rsp; leave; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x00000000000605a2: pop rsp; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x000000000005e742: pop rsp; movzx eax, al; neg eax; ret; 
0x000000000001665e: pop rsp; mulsd xmm1, xmm5; mulsd xmm1, xmm6; ret; 
0x0000000000057032: pop rsp; or dword ptr [rax], eax; add byte ptr [rcx - 0x75], al; or al, 0x39; ret; 
0x000000000003e005: pop rsp; pop r13; fmulp st(1); ret; 
0x000000000001ee43: pop rsp; pop r13; jmp rax; 
0x0000000000059d08: pop rsp; pop r13; jmp rcx; 
0x0000000000075bc7: pop rsp; pop r13; mov byte ptr [r8 + 0xaa], 1; ret; 
0x0000000000038923: pop rsp; pop r13; movaps xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003871b: pop rsp; pop r13; movaps xmm1, xmm3; movaps xmm0, xmm1; ret; 
0x000000000005a9bd: pop rsp; pop r13; pop r14; jmp rax; 
0x0000000000015b14: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x0000000000024e43: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000000001529b: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000078979: pop rsp; pop r13; pop r14; pop rbp; ret; 
0x000000000001dad5: pop rsp; pop r13; pop r14; ret; 
0x0000000000016757: pop rsp; pop r13; ret; 
0x000000000003d6b6: pop rsp; pop r14; ret; 
0x00000000000748fc: pop rsp; pop rbp; ret; 
0x0000000000037b14: pop rsp; ret 0x280f; 
0x000000000001f7be: pop rsp; ret 0x4808; 
0x00000000000167c7: pop rsp; ret 0x66c3; 
0x000000000002f2bd: pop rsp; ret 0x7ce9; 
0x000000000003b895: pop rsp; ret 0x8948; 
0x000000000002f1ef: pop rsp; ret 0xeae9; 
0x000000000002d365: pop rsp; ret 0xff2; 
0x0000000000016b9e: pop rsp; ret 0xff3; 
0x0000000000015e47: pop rsp; ret; 
0x000000000003200b: pop rsp; ror byte ptr [rdi], 1; sub dl, al; ret; 
0x0000000000031f86: pop rsp; ror dword ptr [rdi], 1; sub dl, al; ret; 
0x000000000003347d: pop rsp; ror dword ptr [rdi], cl; sub dl, al; ret; 
0x0000000000039ba2: pop rsp; sal bl, 0xf; pop rsi; add eax, 0x75924; ret; 
0x000000000003369a: pop rsp; sal bl, 1; addps xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000039a12: pop rsp; sal dl, 0xf; pop rsi; add eax, 0x74404; ret; 
0x0000000000016f89: pop rsp; sal edx, 0xf; pop rdx; shl byte ptr [rsi + 0xf], 0x7e; ret; 
0x000000000002ce4a: pop rsp; sal edx, 1; subps xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003324a: pop rsp; sal edx, 1; subps xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x00000000000319db: pop rsp; shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x000000000003193e: pop rsp; shl dword ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x0000000000033084: pop rsp; shr ecx, 1; movsxd rax, dword ptr [rcx]; add byte ptr [rax], al; nop dword ptr [rax + rax]; ret; 
0x0000000000049273: pop rsp; std; jmp qword ptr [rsi + 0x2e]; 
0x00000000000692bd: pop rsp; sub eax, r8d; ret; 
0x000000000006d1d2: popfq; add al, 0; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1ee: popfq; add al, 0; ret; 
0x000000000006d207: popfq; add al, 0; test edx, edx; jne 0x6d210; ret; 
0x000000000005f7e7: popfq; add rax, 0xb60f00; ret; 
0x0000000000054935: popfq; ret 0xd108; 
0x000000000007b188: por mm2, mm4; fldlg2; fld xword ptr [rsp + 8]; fyl2x; ret; 
0x0000000000033768: psllq mm1, qword ptr [rdi]; pop rsp; ror dword ptr [rdi], 1; sub dl, al; ret; 
0x000000000003f3d9: psrld mm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3d8: psrld xmm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b9: psrlq mm1, 1; andps xmm0, xmm1; ret; 
0x000000000003f3b8: psrlq xmm1, 1; andps xmm0, xmm1; ret; 
0x00000000000393a4: push -0x21fff8bb; ret 0xc9dc; 
0x0000000000065bb2: push -0x6d; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000048f9d: push -0x80; jg 0x48fb0; add dword ptr [rbp + 0x64], esi; mov eax, 2; ret; 
0x000000000002c2cc: push -0x9ffffff; ret; 
0x000000000004f412: push -4; dec dword ptr [rax - 0x73]; cmp eax, 0x67b38; call 0x6b480; mov eax, 0x39; syscall; 
0x000000000005006c: push 0; add byte ptr [rax], al; syscall; 
0x000000000001843e: push 0; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000007af2f: push 0x1f80; ldmxcsr dword ptr [rsp]; add rsp, 0x28; ret; 
0x0000000000036750: push 0x280f0007; ret 0xff2; 
0x000000000002d287: push 0x48c1def0; cmp eax, edi; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2c7: push 0x48c1def0; cmp eax, edi; jne 0x2d2c0; fstp st(1); ret; 
0x000000000005a0f4: push 0x48fffbaf; mov edi, dword ptr [rbx]; call 0x15060; mov qword ptr [rbx], 0; pop rbx; ret; 
0x00000000000786a9: push 0x74c08548; adc dword ptr [rax + 3], ecx; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000050988: push 0x787f110f; ret; 
0x000000000007932d: push 0x8ea8348; mov rsp, rdx; jmp rax; 
0x0000000000038c12: push 0xff30007; pop rsp; ret; 
0x0000000000057ab5: push qword ptr [rax + 0x48]; cmp ecx, edx; jg 0x57ac8; jge 0x57a9f; xor eax, eax; ret; 
0x000000000002eb25: push qword ptr [rax + rbx - 0xe]; movups xmm1, xmmword ptr [rip + 0x7f4d8]; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000023d56: push qword ptr [rbp + 0xf]; mov eax, 0xc; syscall; 
0x0000000000023d56: push qword ptr [rbp + 0xf]; mov eax, 0xc; syscall; ret; 
0x0000000000050921: push qword ptr [rbp + 4]; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x000000000006f2b9: push qword ptr [rbp + 4]; ret; 
0x000000000002d10d: push qword ptr [rbp + 8]; movsd xmm0, qword ptr [rip + 0x80ce8]; movsd qword ptr [rsp - 8], xmm0; movsd xmm0, qword ptr [rsp - 8]; divsd xmm0, qword ptr [rip + 0x80cf4]; ret; 
0x000000000002d13d: push qword ptr [rbp + 8]; movss xmm0, dword ptr [rip + 0x82378]; movss dword ptr [rsp - 4], xmm0; movss xmm0, dword ptr [rsp - 4]; divss xmm0, dword ptr [rip + 0x82374]; ret; 
0x000000000001e0d5: push qword ptr [rbp + 8]; xor eax, eax; ret; 
0x000000000006ef20: push qword ptr [rbp + rbp*4 + 0x48]; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000006efb0: push qword ptr [rbp + rdi*4 + 0x48]; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000043f38: push qword ptr [rbp + rdx + 0x40]; movsx edi, bh; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000001ef60: push qword ptr [rbp - 0x13]; xor eax, eax; pop rbx; ret; 
0x000000000001e3c9: push qword ptr [rbp - 0x1c]; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a0db: push qword ptr [rbp - 0x1e]; nop; xor eax, eax; pop rbp; ret; 
0x000000000006a112: push qword ptr [rbx + rcx*8 + 0x66]; cmp edx, r8d; jne 0x6a100; pop rbp; ret; 
0x000000000006f485: push qword ptr [rbx + rdx + 0x48]; movsxd rsi, ebx; mov eax, 0x90; mov rdx, rbp; syscall; 
0x0000000000074ada: push qword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000002973a: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], cl; jge 0x29741; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000056578: push qword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x11], 0xe8; in eax, dx; ret 0xffff; 
0x000000000006c327: push qword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x20], 0x48; mov edx, ebp; syscall; 
0x0000000000021bca: push qword ptr [rdi + 0xb]; mov rax, rdi; ret; 
0x000000000003fde8: push qword ptr [rdi + rax + 0x48]; bsf edi, edi; lea eax, [rdi + 1]; ret; 
0x0000000000041676: push qword ptr [rdi + rdx + 0x48]; sub esp, 8; call 0x5d1b0; mov eax, 1; add rsp, 8; ret; 
0x0000000000045086: push qword ptr [rdi + rdx + 0x48]; sub esp, 8; xor edx, edx; call 0x44bc0; add rsp, 8; ret; 
0x000000000006f533: push qword ptr [rdx + rdx + 0x48]; lea esi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000006de86: push qword ptr [rdx + rdx - 0x48]; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r13; syscall; 
0x000000000002e88b: push qword ptr [rdx - 0x27]; ret; 
0x0000000000036e73: push qword ptr [rdx]; ja 0x36eb0; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x000000000002f32f: push qword ptr [rsp + 8]; call 0x7b1bd; add rsp, 0x28; fldln2; faddp st(1); ret; 
0x0000000000023299: push qword ptr [rsp + rbx + 0x48]; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000063eb5: push qword ptr [rsp + rdi + 0x31]; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000059be4: push r12; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x00000000000694b4: push r12; mov r12, rdi; call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a24: push r12; mov r12, rdi; call 0x69170; mov rax, r12; pop r12; ret; 
0x000000000005ca0c: push r8; mov edx, 1; pop rbp; jmp rax; 
0x0000000000050228: push rax; adc al, 0x39; ret 0x840f; 
0x00000000000746e8: push rax; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000005f816: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x54969; movzx eax, byte ptr [rax]; ret; 
0x000000000005f7e2: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0x5499d; movzx eax, byte ptr [rax]; ret; 
0x000000000005d5cc: push rax; add dword ptr [rax - 0x77], ecx; push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x00000000000589ac: push rax; add dword ptr [rax], eax; add dh, dh; ret 0x7401; 
0x0000000000018407: push rax; add rsp, 0x38; fxch st(1); ret; 
0x0000000000022fad: push rax; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000000002abe1: push rax; and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000005e6e3: push rax; and byte ptr [rcx + rdx + 0x48], dh; lea ecx, [rdx + 1]; mov qword ptr [r8 + 0x28], rcx; mov byte ptr [rdx], dil; ret; 
0x000000000002cda0: push rax; call 0x1f460; mov dword ptr [rax], 0xc; xor eax, eax; pop rdx; ret; 
0x000000000007afeb: push rax; call 0x7affb; pop rax; fld1; fsubp st(1); ret; 
0x000000000004f084: push rax; cld; cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000006d59f: push rax; js 0x6d5ea; mov dword ptr [rdi + 0x10], edx; mov qword ptr [rax + 0x78], rdi; ret; 
0x000000000006d87f: push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000004f42e: push rax; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x000000000005ca0d: push rax; mov edx, 1; pop rbp; jmp rax; 
0x0000000000050844: push rax; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000006b7e2: push rax; or byte ptr [rax - 0x75], cl; or byte ptr [r8 + 3], r9b; add al, 0xca; ret; 
0x0000000000058b6e: push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000006d574: push rax; pop rax; mov rax, rdi; sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x000000000001faf2: push rax; pop rbx; ret; 
0x0000000000025453: push rax; ret; 
0x000000000006741c: push rax; rol byte ptr [rbx - 0x5189f606], 1; xor r8d, r8d; mov rax, r8; ret; 
0x000000000005a78c: push rax; sbb byte ptr [rcx - 0x3fd6bb30], cl; ret; 
0x000000000005ff8f: push rax; sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000007aef9: push rax; stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x000000000006c536: push rax; test dl, dl; je 0x6c540; ret; 
0x000000000006c407: push rax; test r10b, dl; jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c54a: push rax; test r10b, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x000000000007036f: push rax; xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x00000000000527ba: push rbp; adc byte ptr [rax - 0x75], cl; or byte ptr [r8 + 1], r9b; fimul dword ptr [rax - 0x7d]; ret; 
0x00000000000719ef: push rbp; add al, 0; call 0x6b570; mov rax, r12; pop r12; ret; 
0x0000000000070335: push rbp; add byte ptr [rbp + 0x48e575d2], al; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000006a29d: push rbp; add byte ptr [rcx + 0x5c], al; pop r13; ret; 
0x0000000000077d31: push rbp; add byte ptr [rcx - 0x77], cl; ret 0xf631; 
0x0000000000065d04: push rbp; add dh, dh; ret 0x4420; 
0x000000000004c534: push rbp; mov rdi, r12; mov rbp, rcx; push rbx; mov rbx, rsi; syscall; 
0x0000000000059b94: push rbp; movsxd rdi, edi; mov eax, 0xcc; syscall; 
0x000000000005cc19: push rbp; or byte ptr [rax + 0x63], cl; fisttp qword ptr [rax + 0x29]; ret 0x149; 
0x000000000006ffa0: push rbp; xor byte ptr [rax + 0x39], cl; ret 0x6974; 
0x0000000000063085: push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000002a6b9: push rbx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x0000000000066e8e: push rbx; and byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000000253b9: push rbx; and byte ptr [rdi], cl; adc dword ptr [rax + 0x20], edx; pop rbx; ret; 
0x000000000003ae17: push rbx; dec dword ptr [rax - 0x7d]; ret; 
0x000000000003fc93: push rbx; mov rbx, rdi; jne 0x3fca0; pop rbx; ret; 
0x0000000000023df1: push rbx; mov rbx, rdi; sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x0000000000069054: push rbx; mov rbx, rdx; call 0x7b25a; add rax, rbx; pop rbx; ret; 
0x000000000004c53b: push rbx; mov rbx, rsi; syscall; 
0x0000000000031ffc: push rbx; movups xmm2, xmmword ptr [rip + 0x7ea7b]; add rsp, 8; subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000006c780: push rbx; or al, 0xf7; ret 0xffff; 
0x000000000005c91c: push rbx; sub byte ptr [rax + 0x39], cl; ret 0xd74; 
0x000000000005ef6b: push rbx; sub byte ptr [rbx + 0x48], bl; sub edx, ecx; add rax, rdx; ret; 
0x000000000005de61: push rcx; adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x00000000000704ab: push rcx; add dword ptr [rax], eax; setg cl; test cl, cl; cmovne eax, edx; ret; 
0x000000000006553d: push rcx; call qword ptr [rdi + 0x4c]; 
0x0000000000052857: push rcx; cld; test edx, edx; jns 0x5283d; mov dword ptr [r8], 0xffffffff; ret; 
0x00000000000325ee: push rcx; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x000000000006a3ca: push rcx; ror byte ptr [rdi], 1; mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x00000000000428c0: push rcx; sbb bh, al; add al, 0x24; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006d5a3: push rdi; adc byte ptr [rax - 0x77], cl; js 0x6d621; ret; 
0x0000000000016882: push rdi; adc eax, 0x966d8; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000006ba04: push rdi; add al, 0xc1; call 0x1e73d10; ret; 
0x0000000000061506: push rdi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000001e561: push rdi; add dword ptr [rax + 1], edi; and edx, 0x7f; cmp edx, 0x20; jle 0x1e578; ret; 
0x000000000003e64a: push rdi; add eax, 0x6e920; add rsp, 0x10; pop rbx; ret; 
0x000000000003e550: push rdi; add eax, 0x6ea0a; add rsp, 0x10; pop rbx; ret; 
0x000000000003cd3a: push rdi; add eax, 0x70230; ret; 
0x000000000003cc8d: push rdi; add eax, 0x702cd; ret; 
0x0000000000037c76: push rdi; add eax, 0x752f4; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000037604: push rdi; add eax, 0x75956; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000031d77: push rdi; add eax, 0x7b1f3; pop rbx; ret; 
0x000000000003172b: push rdi; add eax, 0x7b82f; pop rbx; ret; 
0x00000000000304fc: push rdi; add eax, 0x7ca6e; add rsp, 0x10; pop rbx; ret; 
0x0000000000030439: push rdi; add eax, 0x7cb21; add rsp, 0x10; pop rbx; ret; 
0x0000000000030251: push rdi; add eax, 0x7cd19; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002ea9b: push rdi; add eax, 0x7e4bf; ret; 
0x000000000001686a: push rdi; add eax, 0x966f0; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002bbd0: push rdi; and byte ptr [rcx - 9], cl; ret 0xf000; 
0x000000000004fa15: push rdi; cmc; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000006dd11: push rdi; cmp byte ptr [rbx + 0x87502f8], al; xor eax, eax; ret; 
0x000000000007b222: push rdi; cmp byte ptr [rcx], dh; rol bl, 0x90; mov rax, 0xf; syscall; 
0x000000000001dca5: push rdi; fild word ptr [rbx + 0x4765dfa]; xor eax, eax; ret; 
0x0000000000072456: push rdi; fmul dword ptr [rax + 0x63]; clc; call 0x21bc0; add rsp, 8; ret; 
0x000000000004c4bd: push rdi; idiv edi; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000005d5d0: push rdi; or byte ptr [rdi], cl; mov dh, 0; ret; 
0x000000000002f938: push rdi; or eax, 0x7d632; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002f7f8: push rdi; or eax, 0x7d762; add rsp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000002d23c: push rdi; or eax, 0x7fd2e; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002d20e: push rdi; or eax, 0x7fd4c; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000018036: push rdi; or eax, 0x94f24; ret; 
0x000000000002e187: push rdi; ret 0xf66; 
0x000000000002d6c3: push rdi; ret 0xff2; 
0x000000000003d7fe: push rdi; ret 0xff3; 
0x000000000004f225: push rdi; ret 1; 
0x0000000000016c0e: push rdi; ret; 
0x000000000002e183: push rdi; retf 0xf66; push rdi; ret 0xf66; 
0x000000000002d6bf: push rdi; retf 0xf66; push rdi; ret 0xff2; 
0x0000000000016c2b: push rdi; retf; movapd xmm0, xmm2; ret; 
0x000000000001dd35: push rdi; rol byte ptr [rbx + 0xc7709fa], 1; mov eax, 1; ret; 
0x0000000000016c61: push rdi; ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000007b21a: push rdi; xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000004c8e2: push rdx; add al, byte ptr [rax]; add byte ptr [rbx - 0x7aabdb8c], cl; test byte ptr [rdi], 0x84; ret 2; 
0x0000000000042e54: push rdx; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000019d8a: push rdx; cld; cmp r8, r10; ja 0x19d00; pop rbx; ret; 
0x000000000002a30a: push rdx; mov al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000000319cc: push rdx; movups xmm2, xmmword ptr [rip + 0x7c93b]; add rsp, 8; subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003ddc6: push rsi; adc esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000001d646: push rsi; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000049f21: push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000069e02: push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000000325c9: push rsi; add rsp, 0x28; faddp st(1); fld1; fsubrp st(1); ret; 
0x0000000000024edf: push rsi; and byte ptr [rax + 0x39], cl; ret 0x820f; 
0x0000000000059b66: push rsi; cmp ah, 0xff; add rsp, 8; ret; 
0x000000000002d2a9: push rsi; dec byte ptr [rax - 0x73]; adc byte ptr [r8 - 0x7d], r9b; ret 0xdb02; 
0x000000000005026c: push rsi; movsxd rsi, edx; mov rax, r12; syscall; 
0x00000000000661a8: push rsi; or byte ptr [rcx - 0x75], cl; adc byte ptr [rax + 0x39], r9b; ret 0x840f; 
0x0000000000045ad2: push rsi; or cl, byte ptr [rcx - 0x77]; call 0xffffffff89513464; out dx, eax; call rax; 
0x0000000000059346: push rsi; ret 0xf20; 
0x0000000000041dc6: push rsi; sar ebp, 1; jmp qword ptr [rsi + 0xf]; 
0x000000000005a7d9: push rsi; sbb byte ptr [rcx + rbp - 0x40], al; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x0000000000066cd6: push rsi; sbb eax, 0x85480000; sal byte ptr [rcx + rcx + 0x48], 0x89; ret; 
0x000000000001ad93: push rsp; adc eax, 0x89138800; ret 0xeac1; 
0x000000000004213e: push rsp; add al, 0x80; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000005c530: push rsp; add byte ptr [rax], al; syscall; 
0x00000000000589c1: push rsp; add dword ptr [rdi], ecx; test dword ptr [rdi], ecx; or al, byte ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000017f89: push rsp; and al, 0x10; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x000000000006ec68: push rsp; and al, 0x10; mov eax, 0x112; xor edi, edi; syscall; 
0x0000000000073a1a: push rsp; and al, 0x18; movsxd rdi, ebp; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000067ac2: push rsp; and al, 0x18; sub r15, qword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x000000000006d882: push rsp; and al, 0x54; mov eax, 0x90; syscall; 
0x00000000000349fa: push rsp; and al, 0xc; add rsp, 0x18; mulss xmm0, xmm2; ret; 
0x000000000003cdce: push rsp; and al, 0xe0; fld xword ptr [rsp - 0x28]; fmul dword ptr [rip + 0x726f5]; ret; 
0x0000000000032857: push rsp; and al, 0xe8; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x0000000000018070: push rsp; and al, 0xf0; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x000000000003ab57: push rsp; and al, 0xf0; ret; 
0x000000000003ab02: push rsp; and al, 0xf8; ret; 
0x000000000007aeb5: push rsp; and al, 0xf8; xor eax, eax; ret; 
0x000000000003cd1b: push rsp; and al, 0xfc; ret; 
0x0000000000073a22: push rsp; and al, 4; mov eax, 0xde; syscall; 
0x0000000000042139: push rsp; and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x0000000000016cab: push rsp; and al, 8; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000005bcea: push rsp; and al, 8; mov eax, 4; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000001f978: push rsp; and al, 8; mov esi, 0x10; mov rax, r8; syscall; 
0x00000000000562b9: push rsp; lodsd eax, dword ptr [rsi]; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x000000000007a54d: push rsp; mov byte ptr [rdi + rcx + 0x2e], 5; cmp dword ptr [rcx + 3], 0x540f4400; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000006d884: push rsp; mov eax, 0x90; syscall; 
0x0000000000059be5: push rsp; mov eax, 0xcc; movsxd rdi, dword ptr [rdi + 0x30]; syscall; 
0x00000000000694b5: push rsp; mov r12, rdi; call 0x690c0; mov rax, r12; pop r12; ret; 
0x0000000000069a25: push rsp; mov r12, rdi; call 0x69170; mov rax, r12; pop r12; ret; 
0x0000000000015b5c: push rsp; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x58], rax; mov eax, 0x81; syscall; 
0x000000000007a559: push rsp; out 0xf, al; xchg eax, edi; ret 0xf44; 
0x000000000007530f: pushfq; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c38c: pushfq; jne 0x5c39c; mov eax, 0xeb; mov rdi, r9; mov rsi, rdx; syscall; 
0x0000000000074a80: pushfq; movsb byte ptr [rdi], byte ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000003a4ae: pxor mm0, mm0; add rsp, 0x18; cvtsi2ss xmm0, eax; ret; 
0x000000000003f8f4: pxor mm0, mm0; add rsp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x000000000003a43a: pxor mm0, mm0; add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000002eb35: pxor mm0, mm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000071fc8: pxor mm0, mm0; cvtsi2sd xmm0, rdi; ret; 
0x0000000000035511: pxor mm0, mm0; divsd xmm0, xmm0; ret; 
0x0000000000035d71: pxor mm0, mm0; divss xmm0, xmm0; ret; 
0x000000000002f058: pxor mm0, mm0; divss xmm0, xmm1; ret; 
0x0000000000032e7f: pxor mm0, mm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x00000000000328c4: pxor mm0, mm0; ret; 
0x000000000003b9fb: pxor mm0, mm0; seta al; shr esi, 0x1f; cmp al, sil; je 0x3ba0a; ret; 
0x000000000003395f: pxor mm0, mm0; test eax, eax; js 0x33970; ret; 
0x000000000002edb2: pxor mm0, mm0; test edx, edx; js 0x2ee90; ret; 
0x000000000002ef64: pxor mm0, mm0; test edx, edx; js 0x2f0c8; ret; 
0x000000000006be93: pxor mm0, mm0; xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b8c5: pxor mm0, mm0; xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x0000000000033265: pxor mm1, mm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003454e: pxor mm1, mm1; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003a4ad: pxor xmm0, xmm0; add rsp, 0x18; cvtsi2ss xmm0, eax; ret; 
0x000000000003f8f3: pxor xmm0, xmm0; add rsp, 0x30; cvtsd2ss xmm0, xmm1; pop rbx; ret; 
0x000000000003a439: pxor xmm0, xmm0; add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000002eb34: pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000071fc7: pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x0000000000035510: pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000035d70: pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002f057: pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000032e7e: pxor xmm0, xmm0; mulsd xmm1, xmm3; cvtsd2ss xmm0, xmm1; ret; 
0x00000000000328c3: pxor xmm0, xmm0; ret; 
0x000000000003b9fa: pxor xmm0, xmm0; seta al; shr esi, 0x1f; cmp al, sil; je 0x3ba0a; ret; 
0x000000000003395e: pxor xmm0, xmm0; test eax, eax; js 0x33970; ret; 
0x000000000002edb1: pxor xmm0, xmm0; test edx, edx; js 0x2ee90; ret; 
0x000000000002ef63: pxor xmm0, xmm0; test edx, edx; js 0x2f0c8; ret; 
0x000000000006be92: pxor xmm0, xmm0; xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b8c4: pxor xmm0, xmm0; xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x0000000000033264: pxor xmm1, xmm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003454d: pxor xmm1, xmm1; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000061a59: rcl byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx + 4], eax; fld qword ptr [rcx]; fstp xword ptr [rdi]; ret; 
0x000000000003cc3c: rcl byte ptr [rcx], 7; add byte ptr [rax - 0x7b], cl; sar byte ptr [rax + 0x46], cl; ret; 
0x000000000005a710: rcl dword ptr [rbx + 0x41], 0xf; sahf; ret; 
0x0000000000020880: rcr bl, 0x3c; and al, 0xdb; jl 0x208ab; xor al, ch; ret; 
0x000000000001f2e3: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000001df22: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000004a76d: rcr byte ptr [rbp + 0x41], 1; pop rsp; pop r13; pop r14; ret; 
0x00000000000447c7: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x000000000004ac0e: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000000043b5a: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000004396a: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000044732: rcr byte ptr [rbx + 0x5d], 1; sub rax, rcx; pop r12; ret; 
0x000000000004e5a4: rcr byte ptr [rbx - 9], 0xd8; ret; 
0x000000000007af09: rcr cl, 0x37; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000003a881: rcr cl, 0xe0; fld xword ptr [rsp + 0x10]; faddp st(1); fstp xword ptr [rdi]; pop rbx; ret; 
0x0000000000031211: rcr cl, 0xe8; fdivrp st(2); faddp st(1); fmul dword ptr [rip + 0x7e2aa]; add rsp, 0x28; ret; 
0x000000000007b0a7: rcr cl, 0xe8; js 0x7b0b1; fscale; fstp st(1); ret; 
0x0000000000030a41: rcr dh, 0xc1; ret; 
0x000000000003e179: rcr dh, 0xe1; mov rax, qword ptr [rsp + 0x48]; sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x00000000000311c8: rcr dh, 0xf9; faddp st(1); ret; 
0x0000000000038700: rcr dword ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000002b493: rcr dword ptr [rcx - 0x76b7fff8], 0xef; syscall; 
0x000000000007b083: rcr ebx, 0x2c; and al, 0xde; leave; add rsp, 0x10; ret; 
0x0000000000032487: rcr ebx, 0x2d; mov dl, 7; add al, bl; ret 0xcad8; 
0x000000000003a889: rcr ebx, 0x3f; pop rbx; ret; 
0x0000000000030a23: rcr ebx, 0x6c; and al, 0xe8; fmulp st(1); ret; 
0x000000000007afdf: rcr ecx, 0xe1; fucomip st(1); fstp st(0); ja 0x7afeb; f2xm1; ret; 
0x00000000000325cf: rcr ecx, 0xe8; fsubrp st(1); ret; 
0x000000000007b14d: rcr ecx, 0xf0; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000007b1b0: rcr ecx, 0xf1; ret; 
0x000000000007b055: rcr ecx, 0xfd; fstp st(1); add rsp, 0x10; ret; 
0x000000000003e2f7: rdtsc; jmp qword ptr [rsi + 0xf]; 
0x000000000007b2a9: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x000000000005c055: rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000007b358: rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000061418: rep stosq qword ptr [rdi], rax; mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x000000000005c085: rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x00000000000508cb: rep stosq qword ptr [rdi], rax; ret; 
0x0000000000015707: ret 0; 
0x0000000000048a8c: ret 0x101; 
0x0000000000021233: ret 0x107e; 
0x000000000001f6f8: ret 0x108; 
0x0000000000068f25: ret 0x1275; 
0x000000000006b082: ret 0x12eb; 
0x000000000003f71f: ret 0x148; 
0x000000000005cc20: ret 0x149; 
0x0000000000061f64: ret 0x14c; 
0x000000000003f38d: ret 0x1674; 
0x000000000002b0c0: ret 0x173; 
0x0000000000068f37: ret 0x1774; 
0x000000000002c96e: ret 0x17c; 
0x000000000003ada5: ret 0x1876; 
0x0000000000037dc2: ret 0x18e8; 
0x000000000003f340: ret 0x1974; 
0x00000000000307b7: ret 0x19f2; 
0x0000000000062586: ret 0x1b8; 
0x000000000003b68e: ret 0x1c5; 
0x00000000000374dc: ret 0x1ee8; 
0x0000000000019d08: ret 0x1f0f; 
0x0000000000063395: ret 0x207f; 
0x0000000000027d15: ret 0x2105; 
0x0000000000026d86: ret 0x2121; 
0x000000000003b135: ret 0x214c; 
0x0000000000038520: ret 0x21e9; 
0x000000000006fdeb: ret 0x2274; 
0x000000000007627a: ret 0x2374; 
0x0000000000071cd2: ret 0x237f; 
0x000000000001b777: ret 0x23e8; 
0x00000000000198aa: ret 0x242; 
0x000000000002501d: ret 0x2548; 
0x00000000000370d3: ret 0x27e8; 
0x0000000000033473: ret 0x280f; 
0x0000000000033e30: ret 0x2874; 
0x000000000001fc35: ret 0x287f; 
0x000000000004c2c1: ret 0x28b; 
0x000000000003f73f: ret 0x2940; 
0x0000000000034520: ret 0x2944; 
0x0000000000068e9c: ret 0x2948; 
0x000000000003f5de: ret 0x2949; 
0x000000000002b0ba: ret 0x294c; 
0x000000000006fc33: ret 0x2a74; 
0x000000000005cb07: ret 0x2c73; 
0x000000000007a5a3: ret 0x2e0f; 
0x000000000001bf7d: ret 0x2ee8; 
0x000000000003ca96: ret 0x2f0f; 
0x000000000001b12c: ret 0x309; 
0x000000000005ef34: ret 0x3101; 
0x0000000000070971: ret 0x3102; 
0x0000000000019d80: ret 0x3108; 
0x000000000001bcc5: ret 0x310f; 
0x000000000001b2eb: ret 0x3144; 
0x000000000005bcfc: ret 0x32eb; 
0x000000000006b52a: ret 0x3374; 
0x000000000001b041: ret 0x341; 
0x000000000007257a: ret 0x35b8; 
0x00000000000365a6: ret 0x3774; 
0x000000000007920a: ret 0x3801; 
0x0000000000019555: ret 0x3875; 
0x0000000000077994: ret 0x38; 
0x000000000001c2f2: ret 0x38e8; 
0x0000000000022b9e: ret 0x3901; 
0x000000000007945b: ret 0x391; 
0x00000000000217e5: ret 0x3944; 
0x000000000002c17d: ret 0x3948; 
0x0000000000019d75: ret 0x3949; 
0x000000000001a350: ret 0x394c; 
0x000000000002aa51: ret 0x394d; 
0x0000000000020ba1: ret 0x3975; 
0x00000000000528a4: ret 0x397d; 
0x0000000000074ff3: ret 0x3a74; 
0x000000000002b0c9: ret 0x3a80; 
0x000000000007901a: ret 0x3b3; 
0x000000000003f977: ret 0x3b5; 
0x0000000000020d1b: ret 0x3b75; 
0x0000000000048014: ret 0x3b8; 
0x000000000001e62a: ret 0x3d5; 
0x000000000003a54b: ret 0x3d; 
0x00000000000691e6: ret 0x3e80; 
0x0000000000034523: ret 0x3f78; 
0x000000000001a802: ret 0x4101; 
0x0000000000043330: ret 0x4102; 
0x000000000005595d: ret 0x4104; 
0x000000000001b1ca: ret 0x4110; 
0x00000000000499e2: ret 0x411c; 
0x0000000000070d78: ret 0x411e; 
0x0000000000033b4c: ret 0x415e; 
0x00000000000736b5: ret 0x4164; 
0x0000000000046ea5: ret 0x4166; 
0x000000000003611e: ret 0x41f2; 
0x00000000000369ce: ret 0x41f3; 
0x0000000000023168: ret 0x4240; 
0x0000000000063379: ret 0x428d; 
0x0000000000038198: ret 0x42e8; 
0x0000000000029e32: ret 0x4301; 
0x000000000001b071: ret 0x430c; 
0x000000000003a40a: ret 0x4377; 
0x000000000006a351: ret 0x4401; 
0x000000000001b102: ret 0x4405; 
0x000000000001b2b1: ret 0x4406; 
0x000000000001b051: ret 0x4407; 
0x0000000000033a2f: ret 0x440f; 
0x0000000000049ece: ret 0x441c; 
0x0000000000065d07: ret 0x4420; 
0x00000000000588f8: ret 0x4489; 
0x0000000000016c98: ret 0x448b; 
0x000000000007afce: ret 0x44d9; 
0x000000000003b13d: ret 0x44f2; 
0x000000000002db31: ret 0x4501; 
0x0000000000030a7c: ret 0x450f; 
0x00000000000719d2: ret 0x454; 
0x000000000007a827: ret 0x4566; 
0x0000000000055539: ret 0x45c7; 
0x000000000004f2dc: ret 0x4601; 
0x000000000001bccc: ret 0x468b; 
0x0000000000015fde: ret 0x4801; 
0x0000000000043485: ret 0x4803; 
0x000000000001afca: ret 0x4804; 
0x000000000001f7bf: ret 0x4808; 
0x0000000000057b4a: ret 0x4810; 
0x00000000000247e6: ret 0x4814; 
0x0000000000021e31: ret 0x4818; 
0x0000000000063b0a: ret 0x4830; 
0x000000000003db7b: ret 0x4864; 
0x00000000000165a9: ret 0x4866; 
0x000000000003b03a: ret 0x48e9; 
0x000000000003f694: ret 0x48f2; 
0x000000000002af16: ret 0x4901; 
0x0000000000046ec1: ret 0x4903; 
0x0000000000019e4f: ret 0x4904; 
0x000000000001c99e: ret 0x4908; 
0x000000000002aca3: ret 0x490a; 
0x0000000000059535: ret 0x4910; 
0x0000000000034358: ret 0x4b78; 
0x0000000000016a2f: ret 0x4be9; 
0x000000000005842e: ret 0x4c04; 
0x000000000001cb15: ret 0x4c1e; 
0x00000000000553b5: ret 0x4c7; 
0x00000000000204ef: ret 0x4c89; 
0x000000000002ad46: ret 0x4d01; 
0x000000000005910a: ret 0x4d04; 
0x000000000001ef11: ret 0x4e6d; 
0x0000000000019054: ret 0x4ee9; 
0x00000000000354a6: ret 0x4f74; 
0x00000000000755b7: ret 0x4fe9; 
0x00000000000547c7: ret 0x508d; 
0x000000000001fc16: ret 0x50f; 
0x00000000000488da: ret 0x518d; 
0x000000000003f4a9: ret 0x51e8; 
0x000000000001b1d6: ret 0x5403; 
0x0000000000061f9e: ret 0x5423; 
0x0000000000063761: ret 0x542b; 
0x000000000003d639: ret 0x5441; 
0x0000000000054873: ret 0x5488; 
0x000000000002f953: ret 0x5489; 
0x0000000000017815: ret 0x55e8; 
0x000000000001cd55: ret 0x56e8; 
0x000000000002fe4d: ret 0x5872; 
0x0000000000077de4: ret 0x58b; 
0x00000000000374a2: ret 0x58e8; 
0x00000000000432fd: ret 0x58e9; 
0x000000000001594a: ret 0x58f; 
0x000000000001fd09: ret 0x5b1; 
0x0000000000055ae6: ret 0x5b8; 
0x000000000002933a: ret 0x5bc; 
0x000000000001f72d: ret 0x5c7; 
0x0000000000017ebe: ret 0x5ce8; 
0x000000000001665a: ret 0x5d5b; 
0x0000000000039253: ret 0x5d8; 
0x0000000000063468: ret 0x5e9; 
0x0000000000039818: ret 0x5f62; 
0x00000000000655ca: ret 0x5f6; 
0x000000000003730b: ret 0x5fe8; 
0x0000000000023457: ret 0x6348; 
0x000000000005bd30: ret 0x6349; 
0x0000000000019408: ret 0x6653; 
0x000000000002fb08: ret 0x6655; 
0x00000000000167c8: ret 0x66c3; 
0x0000000000034971: ret 0x673; 
0x000000000006f68f: ret 0x689; 
0x00000000000375c2: ret 0x68e8; 
0x0000000000023165: ret 0x6948; 
0x000000000006ffa4: ret 0x6974; 
0x0000000000025c5f: ret 0x6be8; 
0x00000000000166c0: ret 0x6c8d; 
0x0000000000033d4a: ret 0x6e; 
0x000000000003151b: ret 0x6fe8; 
0x000000000003a5d2: ret 0x701; 
0x000000000004292a: ret 0x71a; 
0x00000000000404ca: ret 0x71b; 
0x0000000000031b69: ret 0x71e8; 
0x000000000005664b: ret 0x72e9; 
0x00000000000589b1: ret 0x7401; 
0x00000000000589ca: ret 0x7402; 
0x000000000006e7e2: ret 0x7408; 
0x0000000000058a3a: ret 0x7420; 
0x0000000000058a7f: ret 0x7440; 
0x000000000006e750: ret 0x7480; 
0x000000000003c1fe: ret 0x749; 
0x000000000004a404: ret 0x74df; 
0x000000000001ebea: ret 0x7500; 
0x000000000001fb61: ret 0x7540; 
0x000000000001e2aa: ret 0x75fe; 
0x0000000000016e63: ret 0x77e8; 
0x0000000000030688: ret 0x7893; 
0x0000000000034604: ret 0x789; 
0x0000000000041b58: ret 0x79e9; 
0x000000000002f2be: ret 0x7ce9; 
0x000000000005234b: ret 0x7fe8; 
0x000000000002557a: ret 0x808; 
0x00000000000614e2: ret 0x80; 
0x000000000001a884: ret 0x8141; 
0x000000000003b0c6: ret 0x8148; 
0x000000000002f317: ret 0x8166; 
0x0000000000017df1: ret 0x81eb; 
0x0000000000024ee3: ret 0x820f; 
0x0000000000068ad6: ret 0x8274; 
0x0000000000025b49: ret 0x828d; 
0x000000000001a645: ret 0x8301; 
0x0000000000041177: ret 0x8302; 
0x000000000004692f: ret 0x830b; 
0x0000000000034a8a: ret 0x830f; 
0x000000000005455d: ret 0x8310; 
0x0000000000055182: ret 0x8341; 
0x000000000001951f: ret 0x8348; 
0x0000000000046e61: ret 0x8349; 
0x0000000000044af4: ret 0x8380; 
0x000000000006338a: ret 0x83f6; 
0x000000000006957e: ret 0x8401; 
0x000000000002aa5d: ret 0x840f; 
0x00000000000569c4: ret 0x8489; 
0x0000000000052b7f: ret 0x8501; 
0x0000000000058e3e: ret 0x8504; 
0x0000000000021d64: ret 0x850f; 
0x000000000006b52f: ret 0x8545; 
0x000000000001f7f9: ret 0x8548; 
0x00000000000244fc: ret 0x860f; 
0x000000000001947e: ret 0x870f; 
0x000000000002b825: ret 0x876; 
0x000000000002ad71: ret 0x8801; 
0x000000000006847b: ret 0x8804; 
0x00000000000607ae: ret 0x880f; 
0x00000000000473d0: ret 0x8830; 
0x00000000000452e8: ret 0x8901; 
0x0000000000048c69: ret 0x8902; 
0x000000000001b2df: ret 0x890a; 
0x000000000001a863: ret 0x8941; 
0x00000000000244e6: ret 0x8944; 
0x00000000000155a6: ret 0x8948; 
0x00000000000260c8: ret 0x8949; 
0x000000000002d913: ret 0x894c; 
0x000000000007b3a2: ret 0x894d; 
0x000000000002f221: ret 0x89e8; 
0x0000000000039be5: ret 0x8a0f; 
0x000000000001bced: ret 0x8b41; 
0x000000000004f2d7: ret 0x8b44; 
0x0000000000019c69: ret 0x8b48; 
0x000000000001ca84: ret 0x8b49; 
0x0000000000077784: ret 0x8b4d; 
0x000000000001aa7d: ret 0x8d01; 
0x000000000001b1e1: ret 0x8d04; 
0x000000000004f53b: ret 0x8d08; 
0x0000000000062290: ret 0x8d0f; 
0x000000000001b156: ret 0x8d41; 
0x0000000000030916: ret 0x8d44; 
0x00000000000560ba: ret 0x8d47; 
0x000000000001f66c: ret 0x8d48; 
0x0000000000046fa4: ret 0x8d49; 
0x000000000003f44d: ret 0x8d4c; 
0x00000000000517c3: ret 0x8de9; 
0x00000000000208e2: ret 0x8e0f; 
0x0000000000062277: ret 0x8f0f; 
0x000000000003cfbd: ret 0x8feb; 
0x0000000000022524: ret 0x900; 
0x000000000002037d: ret 0x9066; 
0x000000000003198d: ret 0x90c3; 
0x000000000002f84a: ret 0x90e8; 
0x000000000006b71c: ret 0x91eb; 
0x0000000000018ad5: ret 0x95e8; 
0x00000000000328bb: ret 0x96eb; 
0x000000000007ab73: ret 0x970f; 
0x0000000000063768: ret 0x9848; 
0x0000000000019585: ret 0x9874; 
0x0000000000029cbb: ret 0x99e8; 
0x0000000000030a79: ret 0x9b0f; 
0x0000000000017a1f: ret 0x9be8; 
0x000000000002f99b: ret 0x9fe8; 
0x000000000006f8a6: ret 0xa08; 
0x000000000005188f: ret 0xa1e9; 
0x0000000000016f95: ret 0xa5e8; 
0x000000000003a3c3: ret 0xa7e9; 
0x000000000003ec7c: ret 0xabe9; 
0x0000000000027853: ret 0xac00; 
0x0000000000056dcd: ret 0xace9; 
0x000000000005243f: ret 0xae74; 
0x0000000000019ba3: ret 0xaeeb; 
0x000000000003777b: ret 0xafe8; 
0x000000000003f7e4: ret 0xb0e9; 
0x000000000002f989: ret 0xb1e8; 
0x0000000000037748: ret 0xb2e8; 
0x000000000003d292: ret 0xb5eb; 
0x000000000001e523: ret 0xb60f; 
0x000000000003b9b3: ret 0xb7e9; 
0x0000000000052ada: ret 0xb841; 
0x0000000000034613: ret 0xb848; 
0x0000000000072611: ret 0xb850; 
0x0000000000057b88: ret 0xb941; 
0x0000000000034127: ret 0xb948; 
0x00000000000370f1: ret 0xb9e8; 
0x0000000000021a56: ret 0xba41; 
0x0000000000064d1f: ret 0xbbe9; 
0x000000000002884d: ret 0xbc41; 
0x0000000000064e33: ret 0xbdeb; 
0x00000000000182c2: ret 0xbe48; 
0x000000000002185f: ret 0xbe49; 
0x000000000001b4ed: ret 0xbee8; 
0x000000000006403a: ret 0xbf08; 
0x000000000005d4ab: ret 0xbfe8; 
0x000000000003297b: ret 0xbfeb; 
0x000000000002990d: ret 0xc031; 
0x00000000000756b6: ret 0xc069; 
0x0000000000029ea1: ret 0xc083; 
0x0000000000018e32: ret 0xc084; 
0x00000000000258bb: ret 0xc085; 
0x0000000000034712: ret 0xc0d9; 
0x000000000001bc7d: ret 0xc104; 
0x000000000001835d: ret 0xc121; 
0x000000000006b4bf: ret 0xc139; 
0x000000000001b089: ret 0xc141; 
0x000000000001673d: ret 0xc148; 
0x000000000002670d: ret 0xc180; 
0x000000000001bcbb: ret 0xc189; 
0x000000000001bda4: ret 0xc1c1; 
0x0000000000021293: ret 0xc1de; 
0x000000000004a79c: ret 0xc1eb; 
0x00000000000552b2: ret 0xc208; 
0x000000000007aac7: ret 0xc220; 
0x0000000000027851: ret 0xc281; 
0x000000000005ef32: ret 0xc283; 
0x000000000003af87: ret 0xc289; 
0x000000000001b04f: ret 0xc2c1; 
0x0000000000016d35: ret 0xc2d8; 
0x000000000002fe15: ret 0xc35b; 
0x000000000002b152: ret 0xc375; 
0x000000000003a82b: ret 0xc389; 
0x0000000000030a1b: ret 0xc3de; 
0x0000000000020d56: ret 0xc574; 
0x0000000000018ec5: ret 0xc5e8; 
0x00000000000276c5: ret 0xc604; 
0x0000000000079b22: ret 0xc608; 
0x00000000000517a4: ret 0xc639; 
0x0000000000040ab9: ret 0xc701; 
0x000000000004db05: ret 0xc748; 
0x0000000000068b28: ret 0xc829; 
0x000000000006a306: ret 0xc838; 
0x000000000005206f: ret 0xc883; 
0x000000000002587e: ret 0xc889; 
0x0000000000037462: ret 0xc8e8; 
0x000000000001b596: ret 0xc984; 
0x000000000006b49b: ret 0xc985; 
0x000000000002e56c: ret 0xc9d8; 
0x0000000000016d5f: ret 0xc9d9; 
0x000000000002ec29: ret 0xc9dc; 
0x0000000000016d37: ret 0xc9de; 
0x0000000000061e6f: ret 0xca00; 
0x0000000000026916: ret 0xca0f; 
0x000000000006cbae: ret 0xca81; 
0x000000000002158d: ret 0xca83; 
0x000000000003221f: ret 0xcad8; 
0x00000000000208cb: ret 0xcad9; 
0x0000000000033bd5: ret 0xcade; 
0x0000000000020bda: ret 0xcb74; 
0x0000000000034b1a: ret 0xccd9; 
0x000000000001825b: ret 0xced8; 
0x0000000000064771: ret 0xcfeb; 
0x000000000001dbcf: ret 0xd009; 
0x000000000007a532: ret 0xd020; 
0x0000000000029346: ret 0xd021; 
0x0000000000029422: ret 0xd084; 
0x000000000006344f: ret 0xd0f7; 
0x000000000004ebea: ret 0xd108; 
0x0000000000045621: ret 0xd184; 
0x0000000000061fc8: ret 0xd189; 
0x0000000000051567: ret 0xd1e9; 
0x0000000000060eb0: ret 0xd201; 
0x0000000000037b9a: ret 0xd285; 
0x000000000002f2e7: ret 0xd3e8; 
0x0000000000055a02: ret 0xd3e9; 
0x0000000000029c8f: ret 0xd501; 
0x000000000001b213: ret 0xd601; 
0x0000000000017f64: ret 0xd6e8; 
0x000000000001b161: ret 0xd701; 
0x000000000005c920: ret 0xd74; 
0x0000000000044108: ret 0xd7c0; 
0x000000000001a96e: ret 0xd889; 
0x000000000002f9f1: ret 0xd9e8; 
0x0000000000071050: ret 0xdae8; 
0x000000000002c1d1: ret 0xdaf7; 
0x000000000002d271: ret 0xdb02; 
0x000000000006564d: ret 0xdb31; 
0x000000000003baeb: ret 0xdb58; 
0x00000000000375fd: ret 0xdb85; 
0x000000000006efe9: ret 0xdc75; 
0x000000000002ebed: ret 0xddc; 
0x0000000000045e19: ret 0xddeb; 
0x000000000004d6f7: ret 0xde7f; 
0x000000000003d5cb: ret 0xdfe8; 
0x000000000001ae2f: ret 0xe083; 
0x000000000001a320: ret 0xe0c1; 
0x000000000003738a: ret 0xe0e8; 
0x0000000000057f14: ret 0xe175; 
0x000000000003402b: ret 0xe181; 
0x000000000002ac53: ret 0xe183; 
0x000000000002e5be: ret 0xe1d8; 
0x000000000002e4e3: ret 0xe1dc; 
0x0000000000032632: ret 0xe1de; 
0x0000000000049b79: ret 0xe1e8; 
0x000000000002f186: ret 0xe281; 
0x0000000000015343: ret 0xe283; 
0x000000000001a8af: ret 0xe2c1; 
0x000000000002e6ab: ret 0xe2de; 
0x0000000000073668: ret 0xe2eb; 
0x000000000005be47: ret 0xe4e9; 
0x00000000000252c8: ret 0xe575; 
0x000000000004d6b8: ret 0xe57f; 
0x000000000003cba5: ret 0xe7a; 
0x000000000004abfc: ret 0xe7d; 
0x000000000001f700: ret 0xe808; 
0x00000000000251ce: ret 0xe883; 
0x0000000000020804: ret 0xe889; 
0x000000000001a2fe: ret 0xe8c1; 
0x000000000007aabd: ret 0xe8df; 
0x000000000002f8c2: ret 0xe8e8; 
0x0000000000058508: ret 0xe975; 
0x0000000000030b0f: ret 0xe9c1; 
0x000000000002a987: ret 0xea29; 
0x0000000000044ac9: ret 0xeac0; 
0x00000000000165e1: ret 0xeac1; 
0x000000000001e2c9: ret 0xead1; 
0x000000000002e53f: ret 0xeade; 
0x000000000002f1f0: ret 0xeae9; 
0x000000000001d94d: ret 0xeb08; 
0x0000000000078e82: ret 0xeb74; 
0x0000000000070692: ret 0xeb7e; 
0x000000000002b90e: ret 0xeb83; 
0x00000000000458a9: ret 0xec75; 
0x00000000000244af: ret 0xed22; 
0x000000000002b6a0: ret 0xed75; 
0x000000000002afff: ret 0xee75; 
0x00000000000192d9: ret 0xee9; 
0x000000000003d239: ret 0xeeb; 
0x0000000000033c30: ret 0xeed9; 
0x000000000003769c: ret 0xeee8; 
0x000000000002abe5: ret 0xf000; 
0x000000000002abd3: ret 0xf01; 
0x0000000000069a10: ret 0xf029; 
0x000000000005186c: ret 0xf039; 
0x000000000006e746: ret 0xf04; 
0x0000000000015eed: ret 0xf075; 
0x0000000000051a19: ret 0xf08; 
0x000000000002b8d9: ret 0xf0b8; 
0x0000000000018fde: ret 0xf0e9; 
0x00000000000589ec: ret 0xf10; 
0x000000000002e141: ret 0xf17d; 
0x000000000003230a: ret 0xf1de; 
0x0000000000033d18: ret 0xf1df; 
0x0000000000059348: ret 0xf20; 
0x000000000001b233: ret 0xf231; 
0x0000000000018eeb: ret 0xf25b; 
0x000000000001a530: ret 0xf281; 
0x000000000002cfbe: ret 0xf3c3; 
0x0000000000062237: ret 0xf41; 
0x000000000007a55d: ret 0xf44; 
0x000000000002c49c: ret 0xf45; 
0x000000000002c409: ret 0xf475; 
0x000000000001e284: ret 0xf48; 
0x000000000007a35a: ret 0xf601; 
0x000000000001b481: ret 0xf631; 
0x00000000000168f1: ret 0xf66; 
0x0000000000055f51: ret 0xf685; 
0x00000000000773e7: ret 0xf72; 
0x00000000000152dd: ret 0xf748; 
0x00000000000585bd: ret 0xf74; 
0x000000000003cb3d: ret 0xf7a; 
0x000000000001610d: ret 0xf883; 
0x000000000001bcd7: ret 0xf889; 
0x00000000000530e9: ret 0xf8; 
0x00000000000198e7: ret 0xf8e9; 
0x000000000004bd9c: ret 0xf980; 
0x0000000000026317: ret 0xf981; 
0x000000000004ca8f: ret 0xf983; 
0x00000000000156e5: ret 0xf9c1; 
0x00000000000171cc: ret 0xf9de; 
0x000000000001b03d: ret 0xfa21; 
0x000000000004b037: ret 0xfa29; 
0x000000000001b06c: ret 0xfa31; 
0x000000000003365a: ret 0xfa81; 
0x000000000003091f: ret 0xfa83; 
0x0000000000070603: ret 0xfac1; 
0x0000000000074ffa: ret 0xfacb; 
0x00000000000165e6: ret 0xfad1; 
0x0000000000018d16: ret 0xfae9; 
0x0000000000064d4a: ret 0xfb02; 
0x000000000006af5a: ret 0xfb3f; 
0x0000000000038020: ret 0xfbb4; 
0x0000000000016afb: ret 0xfc3; 
0x000000000004d79a: ret 0xfc78; 
0x000000000005be2f: ret 0xfce9; 
0x000000000003758f: ret 0xfd83; 
0x0000000000028767: ret 0xfe83; 
0x0000000000020528: ret 0xfe89; 
0x0000000000042377: ret 0xfe8; 
0x000000000002667f: ret 0xfec0; 
0x000000000002ef4b: ret 0xff25; 
0x0000000000016e32: ret 0xff2; 
0x0000000000016704: ret 0xff3; 
0x0000000000038fda: ret 0xff3e; 
0x0000000000027150: ret 0xff40; 
0x000000000003f659: ret 0xff81; 
0x000000000002e783: ret 0xff85; 
0x00000000000717aa: ret 0xff9d; 
0x000000000005bbb1: ret 0xffa1; 
0x000000000004fd32: ret 0xffb8; 
0x000000000002467d: ret 0xffba; 
0x000000000007209a: ret 0xffd1; 
0x000000000002b854: ret 0xffec; 
0x000000000002b832: ret 0xfff0; 
0x0000000000021ffa: ret 0xfffb; 
0x000000000005558a: ret 0xfffc; 
0x000000000003bd42: ret 0xfffd; 
0x0000000000019c8e: ret 0xfffe; 
0x00000000000231ba: ret 0xffff; 
0x000000000001b82a: ret 1; 
0x0000000000040e66: ret 2; 
0x000000000003ee79: ret 3; 
0x000000000001c060: ret 4; 
0x00000000000550d1: ret 5; 
0x0000000000042df6: ret 6; 
0x0000000000030d16: ret 7; 
0x00000000000152a2: ret; 
0x000000000006ce20: retf 0; add byte ptr [rax - 0x75], cl; jl 0x6ce4c; movabs rdx, 0x81be00000001; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000006f097: retf 0; add byte ptr [rcx + 0xf], cl; mov rax, r8; syscall; 
0x00000000000346a9: retf 0; add byte ptr [rdi], bh; movd xmm0, edx; ret; 
0x0000000000015a5c: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; lea rdi, [rip + 0xa14d7]; mov rax, r8; syscall; 
0x0000000000015a31: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006edf2: retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r8; syscall; 
0x000000000006d235: retf 0; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d0b]; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006d1c5: retf 0; add byte ptr [rdx + 1], bh; lea rdi, [rip + 0x49d7b]; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000060af5: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x53802]; mov rax, r9; syscall; 
0x000000000005f737: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; lea rdi, [rip + 0x54ac0]; mov rax, r9; syscall; 
0x000000000006dc72: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r10; syscall; 
0x000000000005c8bf: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d3ea: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r12; mov rax, r8; syscall; 
0x000000000006cdc2: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r13; mov rax, r8; syscall; 
0x000000000006ce51: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, r15; mov rax, r8; syscall; 
0x000000000005d52a: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbp; mov rax, r9; syscall; 
0x000000000006bfa2: retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rdi, rbx; mov rax, r8; syscall; 
0x000000000006c81f: retf 0; add byte ptr [rdx + 1], bh; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006e9fa: retf 0; add byte ptr [rdx + 1], bh; mov rax, r9; syscall; 
0x000000000006c109: retf 0; add byte ptr [rdx + 1], bh; mov rdi, rbx; mov rax, r8; mov rsi, rdx; syscall; 
0x000000000006c6ef: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rax, r8; syscall; 
0x000000000006c1fa: retf 0; add byte ptr [rsi + 1], bh; mov edx, 0x7fffffff; mov rdi, r13; mov rax, r8; syscall; 
0x0000000000028d17: retf 0x148; ret 0x8d48; 
0x000000000003cce6: retf 0x280f; sal dword ptr [rsi + 0x34], 0xf3; subps xmm0, xmmword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x000000000003052e: retf 0x280f; sal ebx, 0xf; pop rax; ret; 
0x000000000002cfb3: retf 0x280f; sal ebx, 0xf; pop rcx; ret; 
0x0000000000032253: retf 0x2ddb; mov bl, 7; add dh, bl; ret 0xc9d9; 
0x000000000003257b: retf 0x2ddb; mov cl, 7; add dh, bl; ret; 
0x000000000003237f: retf 0x2ddb; retf 0x7b2; add dh, bl; ret 0xc9d9; 
0x0000000000020b9e: retf 0x3920; ret 0x3975; 
0x0000000000020d18: retf 0x3920; ret 0x3b75; 
0x0000000000020d53: retf 0x3920; ret 0xc574; 
0x0000000000020bd7: retf 0x3920; ret 0xcb74; 
0x0000000000052890: retf 0x4789; or al, 0x31; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000024016: retf 0x6348; ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x0000000000023346: retf 0x6348; ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x00000000000233ba: retf 0x6348; ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x0000000000047e8a: retf 0x6348; ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; xor r9d, r9d; mov eax, 0x37; syscall; 
0x00000000000234da: retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11d; syscall; 
0x000000000002418a: retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x11e; syscall; 
0x0000000000023b9a: retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x12e; syscall; 
0x0000000000023d86: retf 0x6348; test byte ptr [rax + 0x63], 0xff; mov eax, 0x28; syscall; 
0x000000000007af74: retf 0x6459; sub rax, qword ptr [0]; pop rdx; ret; 
0x0000000000032382: retf 0x7b2; add dh, bl; ret 0xc9d9; 
0x000000000001f9aa: retf 0x8000; add byte ptr [rax], al; mov esi, 4; mov eax, 0x48; mov rdx, r10; syscall; 
0x0000000000069dff: retf 0x840f; push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000022e22: retf 0x8a2; add al, ch; test dword ptr [rax - 0x76b7fffd], esi; add eax, 0x93f46; add rsp, 8; ret; 
0x000000000007b3e6: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; 
0x000000000007b3e6: retf 0x8b4c; and al, 8; mov r9, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 8], r11; syscall; ret; 
0x0000000000074fdf: retf 0x8d4c; and al, 7; movsxd rdi, edi; mov eax, 0x10b; syscall; 
0x00000000000252c2: retf 0x91a; add byte ptr [rax + 0x39], cl; ret 0xe575; 
0x0000000000030baf: retf 0x948; shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x00000000000311c6: retf 0xc0d8; fdivp st(1); faddp st(1); ret; 
0x000000000007b14b: retf 0xc1de; f2xm1; fmul st(1); faddp st(1); add rsp, 0x30; ret; 
0x000000000002467b: retf 0xc239; mov edx, 0xffffffff; setb al; movzx eax, al; cmova eax, edx; ret; 
0x000000000003cc7b: retf 0xc272; addsd xmm0, qword ptr [rip + 0x7117a]; test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x0000000000062b20: retf 0xc748; ret 0xffff; 
0x000000000003cd2a: retf 0xc772; addss xmm0, dword ptr [rip + 0x7278b]; test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x000000000002e8b5: retf 0xcade; fld xword ptr [rip + 0x7e932]; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000005bffa: retf 0xd289; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000039209: retf 0xdd8; mov eax, 0xde000762; ret 0xc1de; 
0x000000000005cd3c: retf 0xdee8; and esp, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000002e8a9: retf 0xe1de; fsubp st(1); ret; 
0x000000000006b827: retf 0xe674; ret; 
0x000000000002e89f: retf 0xe9de; fld xword ptr [rip + 0x7e958]; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x0000000000068b23: retf 0xea74; movzx eax, dl; sub eax, ecx; ret; 
0x000000000006ade1: retf 0xec74; mov eax, edx; sub eax, ecx; ret; 
0x0000000000019476: retf 0xf48; mov edx, 0x39483ff2; ret 0x870f; 
0x000000000002e184: retf 0xf66; push rdi; ret 0xf66; 
0x000000000002d6c0: retf 0xf66; push rdi; ret 0xff2; 
0x0000000000016c0b: retf 0xf66; push rdi; ret; 
0x0000000000017352: retf 0xf66; sub ah, al; ret; 
0x0000000000032dbd: retf 0xf66; sub cl, al; addsd xmm0, xmm1; ret; 
0x0000000000031789: retf 0xf66; sub cl, al; ret; 
0x0000000000069496: retf 0xf75; test dl, dl; jne 0x69488; xor eax, eax; sub eax, ecx; ret; 
0x000000000007b288: retf 0xfb75; ret; 
0x000000000003ae5d: retf 0xff2; adc dword ptr [rsp + 0x18], ecx; add rsp, 0x20; pop rbx; ret; 
0x0000000000032863: retf 0xff2; adc dword ptr [rsp - 0x10], ecx; ret; 
0x000000000002e82b: retf 0xff2; pop rax; ret; 
0x0000000000032db9: retf 0xff2; pop rax; retf 0xf66; sub cl, al; addsd xmm0, xmm1; ret; 
0x0000000000037f44: retf 0xff2; pop rcx; ret 0xff2; 
0x0000000000032c4d: retf 0xff2; pop rcx; ret; 
0x0000000000016ada: retf 0xff2; pop rsp; ret; 
0x00000000000349c7: retf 0xff3; pop rcx; ret 0xff3; 
0x0000000000030d52: retf 0xffd9; jmp qword ptr [rsi + 0xf]; 
0x0000000000067132: retf 0xffec; jmp qword ptr [rsi + 0x2e]; 
0x00000000000750d4: retf 0xfffa; add rsp, 8; ret; 
0x000000000002ff32: retf 0xfffb; jmp qword ptr [rsi + 0xf]; 
0x00000000000450db: retf 0xfffd; add rsp, 0x18; ret; 
0x000000000005eeb2: retf 0xfffe; jmp qword ptr [rsi + 0x2e]; 
0x0000000000060713: retf 0xffff; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x00000000000438c2: retf 2; mov eax, 0xb; mov rdi, rbx; mov rsi, rbp; syscall; 
0x0000000000021622: retf 4; add bl, ch; ret; 
0x00000000000304ff: retf 7; add rsp, 0x10; pop rbx; ret; 
0x000000000001ea5b: retf; add al, 0; nop; endbr64; mov rax, qword ptr [rdi]; ret; 
0x000000000001738c: retf; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x0000000000035469: retf; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035ce7: retf; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x000000000007507f: retf; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000006a114: retf; cmp dx, r8w; jne 0x6a100; pop rbp; ret; 
0x0000000000032e85: retf; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000044c52: retf; mov byte ptr [rdi], sil; mov eax, 1; add rsp, 8; ret; 
0x0000000000061504: retf; mov eax, 0x57; mov rdi, rbp; syscall; 
0x0000000000031539: retf; movapd xmm0, xmm1; ret; 
0x0000000000016c2c: retf; movapd xmm0, xmm2; ret; 
0x000000000001876b: retf; movapd xmm0, xmm4; ret; 
0x0000000000039f21: retf; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000031b87: retf; movaps xmm0, xmm1; ret; 
0x000000000003075e: retf; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x0000000000018670: retf; mulsd xmm4, xmm3; add rsp, 0x20; movapd xmm0, xmm4; pop rbx; ret; 
0x000000000002a2a1: retf; or byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002a248: retf; or byte ptr [rax], al; lea rdx, [rip + 0x87e4c]; test rax, rax; cmove rax, rdx; ret; 
0x0000000000018711: retf; pop rbx; mulsd xmm4, xmm0; movapd xmm0, xmm4; ret; 
0x000000000003f4d7: retf; pop rbx; pop rbp; pop r12; addsd xmm0, xmm1; ret; 
0x000000000001945f: retf; ret; 
0x000000000004a7d7: rol ax, 8; movzx eax, ax; ret; 
0x0000000000047fa6: rol ax, 8; ret; 
0x000000000006ebde: rol bh, cl; and al, 4; add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 6; syscall; 
0x000000000007b225: rol bl, 0x90; mov rax, 0xf; syscall; 
0x0000000000044e98: rol byte ptr [rax + rcx*2], 0x83; in eax, dx; add dword ptr [rax - 0x78], eax; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000004e59e: rol byte ptr [rax - 0x6af0f5c2], 0xc0; pop rbx; neg eax; ret; 
0x0000000000043ed5: rol byte ptr [rax - 0x6bf0d0c1], 0xc0; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000006a695: rol byte ptr [rax*4 + 0x48f575d2], 0x29; clc; sar rax, 2; ret; 
0x0000000000021abf: rol byte ptr [rax], 0; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000076274: rol byte ptr [rax], 0; add byte ptr [rax + 9], cl; ret 0x2374; 
0x000000000002720e: rol byte ptr [rax], 0; add byte ptr [rsp + rdi + 0x3d], dh; ret 0; 
0x000000000005f156: rol byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005f0e0: rol byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000005f084: rol byte ptr [rax], 1; add byte ptr [rax], al; test rdx, rdx; je 0x5f098; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000002edd2: rol byte ptr [rax], cl; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x7f512]; addsd xmm0, qword ptr [rip + 0x7f012]; add rsp, 0x18; ret; 
0x00000000000333e5: rol byte ptr [rax], cl; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000004c4b7: rol byte ptr [rbp + 0x31], 0xc9; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c477: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f3: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d2: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x0000000000048d73: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e60: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x00000000000479d0: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x000000000004c3c6: rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x36; syscall; 
0x000000000006b537: rol byte ptr [rbp + 0x31], 1; ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x000000000004c4b4: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c3f0: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451cf: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x0000000000048d70: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5d: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x33; syscall; 
0x00000000000479cd: rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x34; syscall; 
0x000000000005c85a: rol byte ptr [rbp + 0x31], cl; ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000002ef66: rol byte ptr [rbp + 0x59880fd2], 1; add byte ptr [rax], al; ret; 
0x000000000002edb4: rol byte ptr [rbp - 0x2c77f02e], 0; add byte ptr [rax], al; ret; 
0x000000000005e3ce: rol byte ptr [rbp - 0x2f76b740], 1; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000007070e: rol byte ptr [rbp - 0x77], 0x1a; sub ecx, edx; mov dword ptr [r10 + 4], ecx; pop rbx; pop rbp; ret; 
0x000000000001df80: rol byte ptr [rbp - 0x7b], 0xc0; je 0x1df90; pop rbp; ret; 
0x00000000000673ff: rol byte ptr [rbp - 0x7b], 1; leave; cmove r8, rax; mov rax, r8; ret; 
0x0000000000056fdf: rol byte ptr [rbp - 0x7b], cl; ror byte ptr [rdi], 0x95; ret 0x8941; 
0x000000000006a3a3: rol byte ptr [rbx + 0x1d7609ff], 1; mov eax, edx; sub eax, esi; ret; 
0x000000000006e5dd: rol byte ptr [rbx + 0x1f0f06ce], cl; add byte ptr [rax], 0; add byte ptr [rax], al; mov r10, rbx; mov rax, r8; syscall; 
0x0000000000074762: rol byte ptr [rbx + 0x3875f7f8], 0xb8; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; syscall; 
0x000000000002fe04: rol byte ptr [rbx + 0x87503fb], 1; movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000005b3b8: rol byte ptr [rbx + 0x9773ff9], 0x48; mov eax, dword ptr [rdi]; shr rax, cl; and eax, 1; ret; 
0x00000000000438f5: rol byte ptr [rbx + 0xc7404fa], 0x48; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000001dd36: rol byte ptr [rbx + 0xc7709fa], 1; mov eax, 1; ret; 
0x0000000000067365: rol byte ptr [rbx - 0x4989f608], 1; xor r8d, r8d; mov eax, r8d; ret; 
0x000000000006741d: rol byte ptr [rbx - 0x5189f606], 1; xor r8d, r8d; mov rax, r8; ret; 
0x000000000001dc88: rol byte ptr [rbx - 0x69f0a101], 0xc0; ret; 
0x000000000001dc48: rol byte ptr [rbx - 0x69f0a201], 0xc0; ret; 
0x000000000001dc68: rol byte ptr [rbx - 0x69f0e601], 0xc0; ret; 
0x000000000001dc28: rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x000000000001de18: rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x000000000001dbb5: rol byte ptr [rbx - 0x6bf07f19], 0xc0; ret; 
0x000000000001dbf9: rol byte ptr [rbx - 0x6bf08001], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000001dcec: rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000001dbc9: rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000001e064: rol byte ptr [rbx - 0x7c8019], 0x20; seta al; ret; 
0x000000000001db88: rol byte ptr [rbx - 0x7c9e11], 0x19; setbe al; ret; 
0x000000000001e155: rol byte ptr [rbx - 0x7c9e11], 5; setbe al; ret; 
0x0000000000021a18: rol byte ptr [rbx - 0x7cb7fe40], cl; ret 0x4801; 
0x0000000000034cd4: rol byte ptr [rbx - 0x7cbefe08], 0xd8; inc dword ptr [rcx + rcx*4 - 0x40]; movss dword ptr [rsp - 4], xmm0; ret; 
0x0000000000046ddb: rol byte ptr [rbx], 0x25; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret 0x8948; 
0x0000000000046be1: rol byte ptr [rbx], 0x25; cld; inc dword ptr [rcx]; add byte ptr [rax + 1], cl; ret; 
0x0000000000079e7c: rol byte ptr [rbx], 1; add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000001dd7e: rol byte ptr [rcx + 0x1ffffff], 0; jbe 0x1dd90; ret; 
0x000000000001e085: rol byte ptr [rcx + 0x1ffffff], 0; jbe 0x1e090; ret; 
0x0000000000019e99: rol byte ptr [rcx + 0x21], 1; ret; 
0x000000000001fc42: rol byte ptr [rcx + 0x400fa], 0; sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x0000000000069913: rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x000000000005e740: rol byte ptr [rcx + 0x5c], 0xf; mov dh, 0xc0; neg eax; ret; 
0x000000000001fc61: rol byte ptr [rcx + 0xc00fa], 0; setne al; add rsp, 8; neg eax; ret; 
0x000000000001e4f9: rol byte ptr [rcx + 0xeeff], 0; seta al; ret; 
0x0000000000061f33: rol byte ptr [rcx + 0xf], 0xaf; ret 0x3948; 
0x000000000003f536: rol byte ptr [rcx + 0xf], 1; xchg eax, edx; ret 0xc148; 
0x000000000002d005: rol byte ptr [rcx + 0xf], cl; xchg eax, ebp; rol byte ptr [rcx - 0x7d], 0xc0; add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x000000000001e03b: rol byte ptr [rcx + 0xfffeff], 0; setne al; ret; 
0x000000000005325d: rol byte ptr [rcx + rax*2], 0x83; ret 0x8901; 
0x000000000005a78f: rol byte ptr [rcx + rbp - 0x40], 1; ret; 
0x0000000000074df6: rol byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000006a556: rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000005b806: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000006d53f: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000006d53f: rol byte ptr [rcx - 0x46], cl; or byte ptr [rax], al; add byte ptr [rax], al; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000006f094: rol byte ptr [rcx - 0x48], cl; retf 0; add byte ptr [rcx + 0xf], cl; mov rax, r8; syscall; 
0x0000000000072595: rol byte ptr [rcx - 0x5c28f401], 0; setb al; add eax, 0x34; ret; 
0x0000000000020033: rol byte ptr [rcx - 0x77], 1; jmp qword ptr [rsi + 0xf]; 
0x0000000000041b55: rol byte ptr [rcx - 0x77], 1; ret 0x79e9; 
0x0000000000041ad8: rol byte ptr [rcx - 0x77], 1; ret 0xc085; 
0x000000000002d009: rol byte ptr [rcx - 0x7d], 0xc0; add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x0000000000019bf9: rol byte ptr [rcx], 0; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1d0], eax; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x000000000004f41e: rol byte ptr [rcx], 0; mov eax, 0x39; syscall; 
0x0000000000069a07: rol byte ptr [rcx], 0x44; test cl, al; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000006ba27: rol byte ptr [rcx], 0x48; add esp, 8; ret; 
0x000000000006ae21: rol byte ptr [rcx], 0x48; cmp eax, ecx; jne 0x6ae18; mov rax, r8; ret; 
0x000000000006aeb6: rol byte ptr [rcx], 0x48; cmp eax, edx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000006ae89: rol byte ptr [rcx], 0x48; cmp edx, eax; jne 0x6ae80; mov rax, r8; ret; 
0x00000000000199e4: rol byte ptr [rcx], 0x48; cwde; ret; 
0x000000000005f190: rol byte ptr [rcx], 0x48; mov dword ptr [rdi + 0x80], eax; xor eax, eax; ret; 
0x0000000000070b1c: rol byte ptr [rcx], 0x48; mov dword ptr [rdi], eax; call 0x70870; mov dword ptr [rbx + 0x10], eax; pop rbx; ret; 
0x000000000004efc8: rol byte ptr [rcx], 0x48; mov dword ptr [rip + 0x67e67], eax; shr rax, 0x21; ret; 
0x0000000000057a6a: rol byte ptr [rcx], 0x5b; pop rbp; cdqe; pop r12; pop r13; ret; 
0x000000000003fa02: rol byte ptr [rcx], 0x66; movd mm0, rax; add rsp, 0x30; cvtsd2ss xmm0, xmm0; pop rbx; ret; 
0x0000000000069872: rol byte ptr [rcx], 0x80; cmp byte ptr [rax], al; jne 0x69870; sub rax, rdi; ret; 
0x00000000000724f6: rol byte ptr [rcx], 0x83; clc; xor eax, 0xa7840f; add byte ptr [rax], al; ret; 
0x00000000000452e5: rol byte ptr [rcx], 0x83; ret 0x8901; 
0x0000000000055f5e: rol byte ptr [rcx], 0x85; fild dword ptr [rcx + rcx*4 + 0x7d]; adc al, 0x89; sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x0000000000021104: rol byte ptr [rcx], 0xd8; loope 0x210e7; ret 0x8348; 
0x000000000002e6cb: rol byte ptr [rcx], 0xde; ret; 
0x0000000000019c01: rol byte ptr [rcx], 1; add byte ptr [rax], al; movups xmmword ptr [rsp + 0x1e0], xmm0; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x000000000002c17b: rol byte ptr [rcx], cl; ret 0x3948; 
0x000000000002ff48: rol byte ptr [rdi], 1; add cl, ch; ret 0xfffe; 
0x000000000002d00c: rol byte ptr [rdx], 0x44; mov eax, eax; ret; 
0x00000000000701d8: rol byte ptr [rdx], 0x48; add esp, 8; ret; 
0x000000000004acdf: rol byte ptr [rdx], 1; add eax, 0x6c2d1; add rsp, 8; lea rax, [rip + 0x6bf3e]; ret; 
0x0000000000047ed4: rol byte ptr [rsi], 0; ret; 
0x000000000006316b: rol cl, 1; call 0x244aba91; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000004a7f4: rol di, 8; mov word ptr [rsi], di; ret; 
0x000000000001bc79: rol dword ptr [rax + rcx*2], 0x83; ret 0xc104; 
0x000000000002edb9: rol dword ptr [rax], cl; add byte ptr [rax], al; ret; 
0x0000000000032759: rol dword ptr [rbp + 0x665a74d2], 0x48; movd mm2, eax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000003e644: rol dword ptr [rbp + 0xf0774db], 0x57; add eax, 0x6e920; add rsp, 0x10; pop rbx; ret; 
0x0000000000032c55: rol dword ptr [rbp - 0x7d7bf02e], 0; add byte ptr [rax], al; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000061a7c: rol dword ptr [rbx + 0x34808c0], 0x4a; adc byte ptr [rcx + 0x1634802], cl; mov qword ptr [rdi], rax; ret; 
0x00000000000619d8: rol dword ptr [rbx + 0x34808c0], 0x4a; adc byte ptr [rcx + 0x18b4802], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061ab8: rol dword ptr [rbx + 0x34808c0], 0x4a; adc byte ptr [rcx + 0x1b60f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a34: rol dword ptr [rbx + 0x34808c0], 0x4a; adc byte ptr [rcx + 0x1b70f02], cl; mov qword ptr [rdi], rax; ret; 
0x0000000000061a9c: rol dword ptr [rbx + 0x34808c0], 0x4a; adc byte ptr [rcx + 0x48018b02], cl; mov dword ptr [rdi], eax; ret; 
0x0000000000061a57: rol dword ptr [rbx + 0x34810c0], 0x4a; adc byte ptr [rcx + 0x1dd0442], cl; fstp xword ptr [rdi]; ret; 
0x00000000000233ff: rol dword ptr [rbx + 0xe75daf8], 0x4d; test eax, eax; jne 0x23413; mov eax, 0xe8; syscall; 
0x0000000000071b66: rol dword ptr [rbx], 0xf; xchg eax, esp; ret 0xe9c1; 
0x0000000000070713: rol dword ptr [rcx - 0x77], 1; add al, 0x5b; pop rbp; ret; 
0x000000000004422f: rol dword ptr [rcx - 0x77], 1; ret; 
0x0000000000021101: rol dword ptr [rcx - 0x7d], 0xc0; add eax, ebx; loope 0x210e7; ret 0x8348; 
0x000000000002036c: rol dword ptr [rcx - 0x7d], cl; ret 0x4101; 
0x000000000003b7d2: rol dword ptr [rcx - 0x7fffff1e], 1; jmp qword ptr [rsi + 0xf]; 
0x000000000003f3bb: rol dword ptr [rcx], 1; andps xmm0, xmm1; ret; 
0x0000000000031000: rol dword ptr [rdi], cl; add dl, dh; movups xmmword ptr [rsp + 8], xmm0; movsd xmm0, qword ptr [rip + 0x7cdef]; add rsp, 0x18; ret; 
0x0000000000030af5: rol dword ptr [rdi], cl; add dl, dh; movups xmmword ptr [rsp - 8], xmm1; ret; 
0x0000000000070b9f: rol dword ptr [rsi], 0x41; mov byte ptr [rcx], 0; ret; 
0x000000000004a7d8: rol eax, 8; movzx eax, ax; ret; 
0x0000000000047fa7: rol eax, 8; ret; 
0x000000000005b1ac: rol eax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000002cd11: rol ecx, 0xe1; add eax, 0xfffe3ae9; jmp qword ptr [rsi + 0xf]; 
0x000000000004a7f5: rol edi, 8; mov word ptr [rsi], di; ret; 
0x000000000005b1ab: rol rax, cl; and qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000003f34d: ror byte ptr [rax + 0x21], 1; sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x000000000003a778: ror byte ptr [rax + 0x21], 1; shl byte ptr [rsi + 0x48], 1; movd mm1, eax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000005b1ad: ror byte ptr [rax + 0x21], 7; xor eax, eax; ret; 
0x000000000006bc08: ror byte ptr [rax + 0x29], 0xc8; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x000000000006dd35: ror byte ptr [rax + 0x39], 0xfe; sete al; ret; 
0x0000000000062274: ror byte ptr [rax + 0x39], 1; ret 0x8f0f; 
0x000000000002b822: ror byte ptr [rax + 0x39], cl; ret 0x876; 
0x000000000005bbcd: ror byte ptr [rax + 0x63], 1; std; mov eax, 3; syscall; 
0x000000000005af14: ror byte ptr [rax + 0x63], 1; sti; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000004c46a: ror byte ptr [rax + 0x63], cl; call qword ptr [rbx + 0x45]; 
0x00000000000451c9: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp + 0x31]; rol byte ptr [rbp + 0x31], cl; rol byte ptr [rbp + 0x31], 0xc9; mov eax, 0x31; syscall; 
0x000000000005bb41: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp + 0x31]; sar byte ptr [rax + 0x10c], cl; syscall; 
0x0000000000024019: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x113; syscall; 
0x0000000000023349: ror byte ptr [rax + 0x63], cl; inc dword ptr [rbp - 0x77]; leave; mov eax, 0x146; syscall; 
0x00000000000233ed: ror byte ptr [rax + 0x63], cl; inc dword ptr [rcx - 0x47]; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x0000000000022048: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x00000000000233bd: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x000000000004c3bd: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000047e8d: ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000002a254: ror byte ptr [rax + 0xf], 0x44; ret 0x66c3; 
0x000000000005c10a: ror byte ptr [rax + 0xf], 0x44; ret 0x8948; 
0x0000000000040123: ror byte ptr [rax + 0xf], 0x44; ret 0x8949; 
0x000000000005e3d3: ror byte ptr [rax + 0xf], 1; and al, 8; add rsp, 0x18; ret; 
0x000000000003f7a2: ror byte ptr [rax + 0xf], 1; mov edx, 0x89483ee8; ret 0xf748; 
0x000000000001e42f: ror byte ptr [rax + 1], 0xc0; ret; 
0x000000000002d0ca: ror byte ptr [rax + 1], 0xc0; sete r8b; mov eax, r8d; ret; 
0x0000000000043edb: ror byte ptr [rax + 1], 0xc7; mov eax, 0xf1; syscall; 
0x0000000000043edb: ror byte ptr [rax + 1], 0xc7; mov eax, 0xf1; syscall; test eax, eax; js 0x43eeb; ret; 
0x000000000002d002: ror byte ptr [rax + 1], 0xd2; setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x0000000000043dae: ror byte ptr [rax + 1], cl; mov dword ptr [rax - 0xa], 0x287540c6; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x0000000000076478: ror byte ptr [rax + 3], 0x13; call rdx; 
0x000000000002a361: ror byte ptr [rax - 0x39], 1; ret 0xffff; 
0x000000000004cd1b: ror byte ptr [rax - 0x39], 4; ret 0; 
0x000000000002cff2: ror byte ptr [rax - 0x3f], 0xe2; or al, 0x41; sete al; mov eax, r8d; ret; 
0x000000000001839e: ror byte ptr [rax - 0x3f], 0xe8; and bl, ch; ret; 
0x000000000003de02: ror byte ptr [rax - 0x3f], 0xe8; and byte ptr [rax - 0x77], cl; ret; 
0x000000000001e54b: ror byte ptr [rax - 0x68], 1; movzx eax, byte ptr [rsi + rax]; sar eax, cl; and eax, 1; add eax, 1; ret; 
0x0000000000078973: ror byte ptr [rax - 0x73], 1; call 0x5d48e5bd; pop r14; pop rbp; ret; 
0x000000000007042c: ror byte ptr [rax - 0x75], 0x44; and al, 0x30; mov qword ptr [rbp], rax; mov eax, 3; syscall; 
0x000000000006be28: ror byte ptr [rax - 0x77], 0x37; ret; 
0x000000000005e3d0: ror byte ptr [rax - 0x77], 0xd0; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000005c8e2: ror byte ptr [rax - 0x77], 0xd6; syscall; 
0x000000000006c82a: ror byte ptr [rax - 0x77], 0xd6; syscall; cmp rax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1d7: ror byte ptr [rax - 0x77], 0xd6; syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000006d247: ror byte ptr [rax - 0x77], 0xd6; syscall; cmp rax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x000000000005c8e2: ror byte ptr [rax - 0x77], 0xd6; syscall; ret; 
0x0000000000069aa2: ror byte ptr [rax - 0x77], 0xd8; cmovne rax, rsi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000074b9f: ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000000005c0c7: ror byte ptr [rax - 0x77], 0xe7; mov rsi, rsp; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c1b7: ror byte ptr [rax - 0x77], 0xe7; mov rsi, rsp; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000005a7dd: ror byte ptr [rax - 0x77], 0xf; pop rbx; pop rbp; ret; 
0x000000000001f26b: ror byte ptr [rax - 0x77], 1; or eax, 0x97ac5; pop rbx; ret; 
0x000000000004eea8: ror byte ptr [rax - 0x77], 1; ret 0x789; 
0x000000000006ddef: ror byte ptr [rax - 0x77], 1; sub esi, dword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000005d173: ror byte ptr [rax - 0x77], 6; mov rax, r8; ret; 
0x000000000005c85d: ror byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; out dx, al; syscall; 
0x000000000006c302: ror byte ptr [rax - 0x77], cl; fmul dword ptr [rcx + rcx*4 - 0x32]; mov rdx, r8; syscall; 
0x000000000004c471: ror byte ptr [rax - 0x77], cl; xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000001e70b: ror byte ptr [rax - 0x7b], 0xc0; je 0x1e720; mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x000000000005d149: ror byte ptr [rax - 0x7b], 0xd2; je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000068ae3: ror byte ptr [rax - 0x7b], 0xd2; jne 0x68ac3; ret; 
0x0000000000042133: ror byte ptr [rax - 0x7b], 0xf6; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000003fde5: ror byte ptr [rax - 0x7b], 0xff; je 0x3fdf2; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003fe05: ror byte ptr [rax - 0x7b], 0xff; je 0x3fe12; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000060ec8: ror byte ptr [rax - 0x7b], cl; test byte ptr [rdi], 0x94; ret 0xd201; 
0x000000000005d09f: ror byte ptr [rax - 0x7d], 0x7f; adc byte ptr [rax], al; setne al; ret; 
0x000000000005d0f5: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d07f: ror byte ptr [rax - 0x7d], 0x7f; and byte ptr [rax], al; setne al; ret; 
0x0000000000069a04: ror byte ptr [rax - 0x7d], 0xc0; add dword ptr [rsp + rax*4 - 0x3f], eax; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000001f427: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000001f7dc: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000074d60: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000022eb3: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000023488: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000001dcbd: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x000000000003a43c: ror byte ptr [rax - 0x7d], 0xc4; or dl, dh; cvtpi2ps xmm0, mm0; ret; 
0x000000000007448b: ror byte ptr [rax - 0x7d], 0xc4; sbb bl, al; nop dword ptr [rax]; mov eax, 0x3c; mov edi, 1; syscall; 
0x000000000003a4b0: ror byte ptr [rax - 0x7d], 0xc4; sbb bl, dh; cvtpi2ps xmm0, mm0; ret; 
0x00000000000234c2: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000003fa08: ror byte ptr [rax - 0x7d], 0xc4; xor dl, dh; cvtps2pd xmm0, xmm0; pop rbx; ret; 
0x000000000003f8f6: ror byte ptr [rax - 0x7d], 0xc4; xor dl, dh; cvtps2pd xmm0, xmm1; pop rbx; ret; 
0x000000000001db0a: ror byte ptr [rax - 0x7d], 0xe0; std; add rax, 4; ret; 
0x000000000006a311: ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x0000000000063372: ror byte ptr [rax - 0x7d], 1; ret; 
0x000000000002973c: ror byte ptr [rax - 0x7d], cl; jge 0x29741; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8948; 
0x0000000000063184: ror byte ptr [rax - 0x7d], cl; ret; 
0x000000000007af12: ror byte ptr [rax - 1], 0xc7; je 0x7af20; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x0000000000061a9e: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x00000000000619da: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; mov rax, qword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061ada: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061afa: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsx rax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a7e: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movsxd rax, dword ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061aba: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, byte ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x0000000000061a36: ror byte ptr [rax], 0x48; add ecx, dword ptr [rdx + 0x10]; mov dword ptr [rdx], eax; movzx eax, word ptr [rcx]; mov qword ptr [rdi], rax; ret; 
0x000000000004a7d9: ror byte ptr [rax], 0xf; mov bh, 0xc0; ret; 
0x000000000006de18: ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x0000000000043673: ror byte ptr [rbx - 0x2d], cl; movsxd r8, r8d; mov eax, 9; mov rdi, r12; syscall; 
0x000000000004f012: ror byte ptr [rcx + 0x12eac1c2], 1; xor eax, edx; shr eax, 1; ret; 
0x000000000005a7d7: ror byte ptr [rcx + 0x29441856], 1; ror byte ptr [rax - 0x77], 0xf; pop rbx; pop rbp; ret; 
0x000000000002941c: ror byte ptr [rcx + 0x39], 1; fisttp word ptr [rdi]; xchg eax, ebp; ret 0xd084; 
0x000000000006612d: ror byte ptr [rcx + 0x49282444], 0x8d; or byte ptr [r9 - 0x77], r9b; fisttp qword ptr [rax - 0x77]; ret; 
0x00000000000692b8: ror byte ptr [rcx + 0x5c415de8], 0x44; sub eax, eax; ret; 
0x000000000005bb94: ror byte ptr [rcx + rcx*4 - 0x20], cl; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000001f9fa: ror byte ptr [rcx + rcx*4 - 0x32], 0x4c; mov edx, edx; syscall; 
0x000000000006b53a: ror byte ptr [rcx + rcx*4 - 0x38], cl; mov rsi, rbx; syscall; 
0x0000000000074392: ror byte ptr [rcx + rcx*4 - 0x3a], 1; syscall; 
0x000000000005c5d2: ror byte ptr [rcx + rcx*4 - 0x40], 1; syscall; 
0x000000000001f931: ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000007251d: ror byte ptr [rcx - 0x173eb70e], 1; and byte ptr [rcx], ch; ret 0xead1; 
0x0000000000018068: ror byte ptr [rcx - 0x173eb73e], 1; and byte ptr [rcx - 0x760fdbac], cl; and al, 0xf4; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000044324: ror byte ptr [rcx - 0x6af0bee9], cl; ret; 
0x00000000000607ac: ror byte ptr [rcx - 0x7477f03e], 0; add byte ptr [rax], al; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000005a773: ror byte ptr [rcx - 0x76b7e7af], 0xf; pop rbx; pop rbp; ret; 
0x000000000002fa19: ror byte ptr [rcx - 0x76d7dbac], 1; ret; 
0x0000000000070bb0: ror byte ptr [rcx - 0x77], 0x38; add r9, rax; mov byte ptr [r9], 0; ret; 
0x000000000005059b: ror byte ptr [rcx - 0x77], 0x5c; and al, 8; pop rbx; pop rbp; pop r12; ret; 
0x000000000002aa57: ror byte ptr [rcx - 0x7d], 0xec; add al, 0x84; ret 0x840f; 
0x000000000002c175: ror byte ptr [rcx - 0x838760e], 1; rol byte ptr [rcx], cl; ret 0x3948; 
0x000000000003761b: ror byte ptr [rcx], 0xc8; je 0x3755c; pxor xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000001b2e9: ror byte ptr [rcx], cl; ret 0x3144; 
0x000000000007b22a: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000052cf4: ror byte ptr [rdi], 0x1f; add byte ptr [rbx + 0x14898614], cl; or dword ptr [rax - 0x7d], 0x394801c0; ret; 
0x000000000006f025: ror byte ptr [rdi], 0x45; ret 0x66c3; 
0x00000000000702b3: ror byte ptr [rdi], 0x45; ret 0x8348; 
0x000000000006b719: ror byte ptr [rdi], 0x45; ret 0x91eb; 
0x0000000000018e2f: ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000024688: ror byte ptr [rdi], 0x47; ret 0xfc3; 
0x000000000006f68c: ror byte ptr [rdi], 0x48; ret 0x689; 
0x00000000000411e4: ror byte ptr [rdi], 0x49; ret 0x8348; 
0x000000000002c5f8: ror byte ptr [rdi], 0x75; mov ecx, dword ptr [rax - 0x75]; push rax; and byte ptr [rax - 9], cl; ret 0xf000; 
0x000000000002509a: ror byte ptr [rdi], 0x84; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005702f: ror byte ptr [rdi], 0x84; pop rsp; or dword ptr [rax], eax; add byte ptr [rcx - 0x75], al; or al, 0x39; ret; 
0x000000000002a6b6: ror byte ptr [rdi], 0x84; push rbx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x00000000000482c3: ror byte ptr [rdi], 0x84; scasb al, byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x60], al; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000049f1e: ror byte ptr [rdi], 0x85; push rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000049d16: ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x000000000004b5f6: ror byte ptr [rdi], 0x85; ret; 
0x0000000000049153: ror byte ptr [rdi], 0x85; test byte ptr [rax], 0; add byte ptr [rax - 0x7d], cl; ret 0x3901; 
0x0000000000050077: ror byte ptr [rdi], 0x85; xchg eax, esp; add byte ptr [rax], al; add byte ptr [rax + 0x66], bh; syscall; 
0x000000000001dcba: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x000000000001e429: ror byte ptr [rdi], 0x94; ror byte ptr [rdi], 0xb6; ror byte ptr [rax + 1], 0xc0; ret; 
0x0000000000056fe2: ror byte ptr [rdi], 0x95; ret 0x8941; 
0x000000000006b358: ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000001dd52: ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x000000000002aa4e: ror byte ptr [rdi], 0x9f; ret 0x394d; 
0x000000000001e42c: ror byte ptr [rdi], 0xb6; ror byte ptr [rax + 1], 0xc0; ret; 
0x0000000000024685: ror byte ptr [rdi], 0xb6; ror byte ptr [rdi], 0x47; ret 0xfc3; 
0x000000000004758b: ror byte ptr [rdi], 0xb7; ret; 
0x0000000000050296: ror byte ptr [rdi], 1; add eax, 0xfffebbe9; jmp qword ptr [rsi - 0x70]; 
0x000000000006082e: ror byte ptr [rdi], 1; add eax, 0xfffef2e9; jmp qword ptr [rsi + 0x2e]; 
0x000000000001dbd1: ror byte ptr [rdi], 1; mov dh, 0xc0; ret; 
0x000000000006a3cb: ror byte ptr [rdi], 1; mov dh, 0xd2; movzx eax, al; sub eax, edx; ret; 
0x000000000006a370: ror byte ptr [rdi], 1; mov dh, 0xf1; mov eax, edx; sub eax, esi; ret; 
0x00000000000633b7: ror byte ptr [rdi], 1; mov esi, 0x83480153; ret; 
0x0000000000030876: ror byte ptr [rdi], 1; sub dl, al; ret; 
0x000000000005c8cf: ror byte ptr [rdi], 5; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000006c6ff: ror byte ptr [rdi], 5; cmp rax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006d1fa: ror byte ptr [rdi], 5; ret; 
0x000000000006c712: ror byte ptr [rdi], 5; xor eax, eax; ret; 
0x000000000004c3fd: ror byte ptr [rdi], cl; add eax, 0xe8c78948; mov eax, 0x48fffd57; add esp, 8; ret; 
0x000000000002ef68: ror byte ptr [rdi], cl; mov byte ptr [rcx + 1], bl; add byte ptr [rax], al; ret; 
0x000000000006a3ce: ror byte ptr [rdi], cl; mov dh, 0xc0; sub eax, edx; ret; 
0x0000000000069a0d: ror byte ptr [rdi], cl; mov dh, 0xc2; sub eax, esi; ret; 
0x0000000000030826: ror byte ptr [rdi], cl; sub dl, al; ret; 
0x0000000000032c57: ror byte ptr [rdi], cl; test byte ptr [rdx + 0x66000000], al; movd mm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x00000000000589e4: ror byte ptr [rdi], cl; test dword ptr [rip - 0x9ffffff], eax; ret 0xf10; 
0x000000000005f748: ror byte ptr [rdx + 5], 0; mov rax, r9; syscall; 
0x0000000000023c4f: ror dword ptr [r8 + 0x63], 1; jo 0x23c5d; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x0000000000021ad8: ror dword ptr [rax + 0x29], 1; ror dword ptr [rax + 1], 0xf0; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x00000000000182df: ror dword ptr [rax + 0x39], 0xf1; je 0x182f0; ret; 
0x000000000002d28a: ror dword ptr [rax + 0x39], 0xf8; jne 0x2d280; fstp st(1); ret; 
0x000000000002d2ca: ror dword ptr [rax + 0x39], 0xf8; jne 0x2d2c0; fstp st(1); ret; 
0x0000000000023412: ror dword ptr [rax + 0x63], 0xf9; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023c50: ror dword ptr [rax + 0x63], 1; jo 0x23c5d; mov qword ptr [rsp + 0x20], rax; xor r8d, r8d; mov eax, 0x65; syscall; 
0x000000000005e3cb: ror dword ptr [rax + 0x63], 1; rol byte ptr [rbp - 0x2f76b740], 1; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x0000000000021adb: ror dword ptr [rax + 1], 0xf0; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000003b49b: ror dword ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000016c62: ror dword ptr [rax - 0x3f], 0xe0; and byte ptr [rax - 0x77], cl; ret 0xf66; 
0x000000000005a507: ror dword ptr [rax - 0x75], cl; pop rsp; ret; 
0x00000000000469f2: ror dword ptr [rax - 0x77], 1; mov esi, 2; call 0x46710; add rsp, 0x18; ret; 
0x000000000003e548: ror dword ptr [rax - 0x7b], 0xdb; je 0x3e556; xorpd xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000002e13a: ror dword ptr [rax - 0x7d], 0xc0; add dword ptr [rcx + 0x39], eax; ret 0xf17d; 
0x0000000000059447: ror dword ptr [rax - 0x7d], 1; ret 0x4901; 
0x000000000001d927: ror dword ptr [rax - 0x7d], 1; ret 0x8301; 
0x0000000000043676: ror dword ptr [rbp + 0x63], cl; sar byte ptr [rax + 9], 0x4c; mov edi, esp; syscall; 
0x0000000000043ead: ror dword ptr [rcx + rcx*4 - 0x2e], 1; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000006fc97: ror dword ptr [rcx + rcx*4 - 0x40], 1; mov rsi, rdx; syscall; 
0x000000000006f0a9: ror dword ptr [rcx + rcx*4 - 0x40], cl; mov rsi, r10; syscall; 
0x0000000000057aaf: ror dword ptr [rcx - 0x75], 0x14; ret 0xff85; 
0x0000000000059f12: ror dword ptr [rcx - 0x7d], 1; ret 0x4801; 
0x000000000003ca23: ror dword ptr [rdi], 0x28; sal bl, 1; divps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000061fb9: ror dword ptr [rdi], 1; lea ecx, [rbp + rax - 0x6f730000]; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x0000000000030b3c: ror dword ptr [rdi], 1; shl byte ptr [r9], 1; sal ebx, 1; movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000003393c: ror dword ptr [rdi], 1; shl byte ptr [rcx], 1; sal ebx, 1; movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000002f0ae: ror dword ptr [rdi], 1; sub al, cl; movss xmm0, dword ptr [rip + 0x81972]; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000003cf4b: ror dword ptr [rdi], 1; sub dl, al; add rsp, 0x18; ret; 
0x0000000000031f87: ror dword ptr [rdi], 1; sub dl, al; ret; 
0x0000000000031fea: ror dword ptr [rdi], cl; sub dl, al; ret; 
0x000000000001bcd4: ror dword ptr [rsi], 1; ret 0xf889; 
0x0000000000072591: ror edi, 4; xor eax, eax; cmp edi, 0xa3d70b; setb al; add eax, 0x34; ret; 
0x0000000000072627: ror edx, 4; cmp edx, 0xa3d70b; mov edx, 1; cmovae eax, edx; ret; 
0x0000000000053fdf: sahf; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000007503e: sahf; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000006e82f: sahf; mov r8d, 0x83; pop rbx; mov eax, r8d; ret; 
0x000000000005a714: sahf; ret; 
0x000000000002ef86: sahf; sbb cl, byte ptr [rax]; add bl, dh; addps xmm0, xmmword ptr [rip + 0x81a9a]; ret; 
0x000000000003fd6b: sahf; sub byte ptr [rdi], al; add byte ptr [rbx + 0x4c], bl; mov eax, eax; ret; 
0x000000000006efe3: sal al, 1; cmpxchg dword ptr [rdi], ecx; cmp edx, eax; jne 0x6efc8; xor eax, eax; ret; 
0x000000000006c36f: sal bh, 0xd0; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000001e57e: sal bh, 0xd8; ret; 
0x00000000000708cf: sal bh, 0xd8; test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x000000000002b6e1: sal bh, 1; fsub dword ptr [rcx]; shr byte ptr [rcx], 1; ret 0xc189; 
0x0000000000063169: sal bh, 1; rol cl, 1; call 0x244aba91; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000034d65: sal bl, 0xf; adc dword ptr [rsp - 0xc], eax; ret; 
0x0000000000034c5b: sal bl, 0xf; adc dword ptr [rsp - 4], eax; ret; 
0x000000000003114b: sal bl, 0xf; pop rax; leave; divss xmm0, xmm1; addss xmm0, xmm2; ret; 
0x000000000003afb0: sal bl, 0xf; pop rax; ret 0xff3; 
0x0000000000037b05: sal bl, 0xf; pop rax; sal bl, 0xf; pop rsi; ret; 
0x0000000000039ba3: sal bl, 0xf; pop rsi; add eax, 0x75924; ret; 
0x0000000000037987: sal bl, 0xf; pop rsi; ret; 
0x0000000000037c51: sal bl, 0xf; pop rsi; sal ebx, 0xf; pop rcx; ret 0xff3; 
0x0000000000030872: sal bl, 1; addps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003369b: sal bl, 1; addps xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000033683: sal bl, 1; addps xmm2, xmm4; movd xmm4, eax; movaps xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000031dc9: sal bl, 1; cvtpi2ps xmm1, mm0; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x0000000000031fc1: sal bl, 1; divps xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003ca26: sal bl, 1; divps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000341c3: sal bl, 1; minps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003f39b: sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000034533: sal bl, 1; mulps xmm0, xmm2; movaps xmm1, xmm0; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000003369f: sal bl, cl; addps xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000031fbd: sal bl, cl; cvtpi2ps xmm2, mm0; divss xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000004a75d: sal byte ptr [rax + 0x48], 0x63; sti; mov eax, 3; syscall; 
0x0000000000023925: sal byte ptr [rax + 0x48], cl; sub esp, 8; mov edx, edx; mov eax, 0x145; syscall; 
0x00000000000190dd: sal byte ptr [rax + rbp + 0xf], 0x2e; fmul dword ptr [rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000076552: sal byte ptr [rax + rbx + 0x48], 0x8b; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000006c531: sal byte ptr [rax + rcx + 0xf], cl; mov dh, 0x50; test dl, dl; je 0x6c540; ret; 
0x00000000000255e9: sal byte ptr [rax + rdi*4 + 0x4c], cl; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000066b0a: sal byte ptr [rax + rsi*4 + 0x48], 0x89; ret 0x894c; 
0x00000000000743a2: sal byte ptr [rbp + 0x13], cl; movsxd rdi, r9d; call 0x21bc0; add rsp, 8; ret; 
0x000000000006b820: sal byte ptr [rbp + 0x15], cl; mov edx, dword ptr [rdi]; cmp edx, r9d; je 0x6b810; ret; 
0x000000000005ce42: sal byte ptr [rbp + 0x3b], 0x48; lea esi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000004f42c: sal byte ptr [rbp + 0x50], 0xb8; mov edx, 0x64000000; mov rdx, qword ptr [0]; syscall; 
0x000000000006e7cb: sal byte ptr [rbp + 0x62], 0x41; mov eax, 0x10; mov eax, r8d; pop rbx; ret; 
0x00000000000337ab: sal byte ptr [rbp + 0xa], 0x48; add esp, 8; ret; 
0x000000000002361e: sal byte ptr [rbp + 0xa], cl; mov eax, 0xfd; syscall; 
0x0000000000043fc9: sal byte ptr [rbp + 0xc], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000006c40a: sal byte ptr [rbp + 0xc], cl; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x0000000000015e40: sal byte ptr [rbp + 0xd], 0x44; mov eax, esp; pop r12; ret; 
0x0000000000074f5f: sal byte ptr [rbp + 0xd], cl; lea r8, [rsp + 7]; mov edx, 1; mov rsi, r8; mov eax, 0x59; syscall; 
0x000000000005b52f: sal byte ptr [rbp + 0xe], 0x44; mov eax, esp; pop r12; ret; 
0x000000000002337e: sal byte ptr [rbp + 0xf], cl; mov eax, 0xd5; mov edi, 1; syscall; 
0x000000000006d20b: sal byte ptr [rbp + 2], cl; ret; 
0x000000000006c54d: sal byte ptr [rbp + 5], cl; mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000034097: sal byte ptr [rbp + 6], 0xdb; insb byte ptr [rdi], dx; and al, 0x20; pop rbx; ret; 
0x000000000001e40e: sal byte ptr [rbp + 7], 0x5d; ret; 
0x000000000006f076: sal byte ptr [rbp + 7], 0x85; leave; js 0x6f080; xor eax, eax; ret; 
0x000000000006d510: sal byte ptr [rbp + rbx - 0x48], 0xda; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x00000000000607f0: sal byte ptr [rbp + rbx*2 + 0x4a], 0x63; jl 0x607ab; sbb byte ptr [rax + 3], bh; syscall; 
0x000000000006c545: sal byte ptr [rbp + rcx + 0xf], cl; mov dh, 0x50; test r10b, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000069456: sal byte ptr [rbp - 0x11], 0x4c; mov eax, esp; pop r12; ret; 
0x00000000000690ef: sal byte ptr [rbp - 0x12], cl; ret; 
0x000000000006949a: sal byte ptr [rbp - 0x15], cl; xor eax, eax; sub eax, ecx; ret; 
0x000000000006a54f: sal byte ptr [rbp - 0x1a], 0xf7; fiadd dword ptr [rcx - 0x77]; rol byte ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000001ed2a: sal byte ptr [rbp - 0x1a], 1; mov byte ptr [rip + 0x95b4e], 1; add rsp, 0x158; ret; 
0x0000000000069318: sal byte ptr [rbp - 0x1b], 0x48; mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000074d79: sal byte ptr [rbp - 0x1b], 0xf7; ret; 
0x0000000000070338: sal byte ptr [rbp - 0x1b], cl; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000068a58: sal byte ptr [rbp - 0x1b], cl; xor eax, eax; ret; 
0x000000000004ad31: sal byte ptr [rbp - 0x1c], 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005a6aa: sal byte ptr [rbp - 0x1d], 0x4c; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x000000000006d17e: sal byte ptr [rbp - 0x21], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000001df11: sal byte ptr [rbp - 0x24], 0x48; movsxd rax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000045941: sal byte ptr [rbp - 0x24], 0x48; sub edx, edi; lea eax, [rdx + 1]; ret; 
0x0000000000068ae6: sal byte ptr [rbp - 0x26], cl; ret; 
0x000000000006afc5: sal byte ptr [rbp - 0x28], 0x48; mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000075cd4: sal byte ptr [rbp - 0x58], 0x4c; mov eax, eax; ret; 
0x0000000000022eae: sal byte ptr [rbp - 0x5d], cl; xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x000000000005015f: sal byte ptr [rbp - 0x72], 0xb8; add byte ptr [rax], al; add byte ptr [rsi + 2], bh; mov edx, 1; mov rdi, r14; syscall; 
0x0000000000075ad2: sal byte ptr [rbp - 0x75], 0x4c; mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a698: sal byte ptr [rbp - 0xb], cl; sub rax, rdi; sar rax, 2; ret; 
0x000000000006aeba: sal byte ptr [rbp - 0xd], 1; mov rax, r8; ret; 
0x000000000004ad5c: sal byte ptr [rbp - 0xf], 0x5b; ret; 
0x000000000006a58c: sal byte ptr [rbp - 0xf], cl; mov rax, r8; ret; 
0x000000000006f625: sal byte ptr [rbp - 8], 0xf0; cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x000000000006cbda: sal byte ptr [rbx + rax*2 + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000003fda2: sal byte ptr [rbx + rax*8 + 0x48], 0x89; ret 0x8348; 
0x00000000000190ea: sal byte ptr [rbx + rbx - 0xd], 0xf; adc dword ptr [rsp + 0x20], eax; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x000000000005f08a: sal byte ptr [rbx + rcx + 0x48], cl; mov dword ptr [rdx + 0xd8], eax; ret; 
0x000000000003fcca: sal byte ptr [rbx + rdx + 0x48], 0x89; ret 0x8348; 
0x000000000004053a: sal byte ptr [rbx + rdx + 0x48], cl; cmp edi, edx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x0000000000070387: sal byte ptr [rbx + rsi*8 + 0x41], 0xb8; retf 0; add byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000006d874: sal byte ptr [rcx + rax*2 + 0x49], cl; movsxd rdi, dword ptr [rsi + 0x30]; movsxd rsi, dword ptr [rsp + 0x50]; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x0000000000066cdc: sal byte ptr [rcx + rcx + 0x48], 0x89; ret; 
0x00000000000786ac: sal byte ptr [rcx + rdx + 0x48], 3; add ecx, dword ptr [rax - 0x77]; ret 0xc031; 
0x000000000006a30c: sal byte ptr [rcx + rsi*2 - 0x73], 0x48; ror byte ptr [rax - 0x7d], 1; ret 0x8301; 
0x000000000006be95: sal byte ptr [rcx], 0xc0; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b8c7: sal byte ptr [rcx], 0xc0; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x000000000001df7e: sal byte ptr [rcx], 0xc0; test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x000000000002accc: sal byte ptr [rcx], 0xd2; pop rbx; ret; 
0x0000000000020333: sal byte ptr [rcx], cl; neg byte ptr [rcx - 0x76be0009]; ret; 
0x00000000000603f2: sal byte ptr [rcx], cl; ror byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000005c86e: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xd8; syscall; 
0x000000000005eda1: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000005c9ee: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000059d49: sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call rax; 
0x000000000005f0da: sal byte ptr [rdi + rax + 0x48], 0x89; mov eax, 0xd0; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x000000000003fdc8: sal byte ptr [rdi + rax + 0x48], 0xf; mov esp, 0x1c083c0; ret; 
0x000000000005f150: sal byte ptr [rdi + rax + 0x48], cl; mov dword ptr [rdx + 0xd0], edi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000005d14c: sal byte ptr [rdi + rax + 0x48], cl; mov eax, edx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000005d16e: sal byte ptr [rdi + rcx + 0x4c], 0x29; ror byte ptr [rax - 0x77], 6; mov rax, r8; ret; 
0x000000000001e70e: sal byte ptr [rdi + rcx - 0x77], 0x58; or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x000000000002784b: sal byte ptr [rdx + 0x1000000], cl; ret 0xc281; 
0x00000000000323df: sal byte ptr [rdx + rax - 0x27], 0xe0; add rsp, 0x18; ret; 
0x000000000003275b: sal byte ptr [rdx + rbx*2 + 0x66], cl; movd mm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000006e741: sal byte ptr [rdx + rcx + 0x41], 0xf6; ret 0xf04; 
0x000000000002905a: sal byte ptr [rdx + rcx + 0x48], 0x83; ret; 
0x0000000000059d45: sal byte ptr [rdx + rdx + 0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005f18b: sal byte ptr [rdx + rdx + 0x48], 1; add eax, 1; mov qword ptr [rdi + 0x80], rax; xor eax, eax; ret; 
0x0000000000030b75: sal byte ptr [rdx + rsi*8 - 0xd], 0xf; adc byte ptr [rip + 0x7e940], al; ret; 
0x0000000000016297: sal byte ptr [rsi + rbp - 0x7d], 0xf8; add dh, byte ptr [rbp + 6]; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x0000000000033975: sal byte ptr [rsi + rbp*8 - 0xd], 0xf; adc byte ptr [rip + 0x7d08c], al; ret; 
0x000000000005c917: sal byte ptr [rsi + rbx*2 + 0x48], 0x8b; push rbx; sub byte ptr [rax + 0x39], cl; ret 0xd74; 
0x0000000000051bf5: sal byte ptr [rsi + rdx*2 + 0x48], 0x89; ret; 
0x000000000006b95c: sal byte ptr [rsi], 1; add byte ptr [rax], al; endbr64; ret; 
0x000000000005a34b: sal byte ptr [rsp + rax + 0x48], 0x89; js 0x5a35a; ret; 
0x000000000005a37d: sal byte ptr [rsp + rax + 0x48], cl; mov dword ptr [rdx + 8], eax; test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x0000000000034154: sal byte ptr [rsp + rax + 0x66], cl; movaps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000006b872: sal byte ptr [rsp + rax - 0x10], 0x41; dec dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x000000000005cae1: sal byte ptr [rsp + rbp*2 + 0x48], 0x89; out 0xb8, al; adc eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 2; syscall; 
0x0000000000050561: sal byte ptr [rsp + rcx*2 + 0x48], 0x89; ret; 
0x0000000000031951: sal byte ptr [rsp + rdi - 0xe], 0xf; adc byte ptr [rip + 0x7c9b4], dl; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x000000000005c4d3: sal byte ptr [rsp + rdx + 0x48], 0x63; sti; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000031f99: sal byte ptr [rsp + rsi - 0xd], 0xf; adc byte ptr [rip + 0x7eadc], dl; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x0000000000043793: sal dh, 0xc1; add dh, byte ptr [rbp + 0x2f]; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x0000000000071b64: sal dh, cl; rol dword ptr [rbx], 0xf; xchg eax, esp; ret 0xe9c1; 
0x0000000000071fca: sal dl, 0x48; cvtpi2ps xmm0, mm7; ret; 
0x0000000000032853: sal dl, 0xf; adc dword ptr [rsp - 0x18], edx; movsd xmm1, qword ptr [rsp - 0x18]; mulsd xmm1, xmm2; movsd qword ptr [rsp - 0x10], xmm1; ret; 
0x000000000003108c: sal dl, 0xf; pop rax; leave; divsd xmm0, xmm1; addsd xmm0, xmm2; ret; 
0x00000000000373b6: sal dl, 0xf; pop rax; sal dl, 0xf; pop rsi; ret 0xff2; 
0x000000000002f66b: sal dl, 0xf; pop rcx; add eax, 0x7e784; addsd xmm0, qword ptr [rip + 0x7ec74]; cvtsd2ss xmm0, xmm0; ret; 
0x000000000002f74a: sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000032e81: sal dl, 0xf; pop rcx; retf; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000039a13: sal dl, 0xf; pop rsi; add eax, 0x74404; ret; 
0x0000000000037227: sal dl, 0xf; pop rsi; ret 0xff2; 
0x000000000002ee87: sal dl, 0xf; pop rsi; ret; 
0x000000000004eef9: sal dl, 0xf; pop rsp; add eax, 0x5eefe; add rsp, 8; ret; 
0x000000000003b892: sal dl, 0xf; pop rsp; ret 0x8948; 
0x000000000003a106: sal dl, 1; addps xmm0, xmm2; addsd xmm0, xmm4; addsd xmm0, xmm1; addsd xmm0, xmm5; ret; 
0x0000000000031781: sal dl, 1; cvtpi2ps xmm1, mm0; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000030822: sal dl, 1; cvtps2pd xmm2, xmm2; movaps xmm0, xmm2; ret; 
0x0000000000031981: sal dl, 1; divps xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003c7d7: sal dl, 1; divps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x00000000000167b8: sal dl, 1; movups xmm0, xmmword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x000000000003f350: sal dl, 1; movups xmmword ptr [rsp - 8], xmm0; movq xmm0, rax; ret; 
0x0000000000032762: sal dl, 1; mulps xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x000000000003289d: sal dl, 1; mulps xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x0000000000033247: sal dl, 1; subps xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000003197d: sal dl, cl; cvtpi2ps xmm2, mm0; divsd xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab53: sal dl, cl; movups xmmword ptr [rsp - 0x10], xmm2; ret; 
0x000000000007b351: sal dword ptr [rbp + 0xb], 1; shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000068ade: sal dword ptr [rbp - 0x11], 1; ret; 
0x0000000000069a0b: sal dword ptr [rbp - 0x2e], 0xf; mov dh, 0xc2; sub eax, esi; ret; 
0x000000000005acdd: sal dword ptr [rbx + 5], 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000060ec6: sal dword ptr [rcx], 1; ror byte ptr [rax - 0x7b], cl; test byte ptr [rdi], 0x94; ret 0xd201; 
0x000000000006be1c: sal dword ptr [rdi + 0xd], 1; mov qword ptr [rdi + 0x10], 0; xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x000000000002f269: sal dword ptr [rdx + 0xff30000], cl; pop rax; add eax, 0x817cf; add rsp, 0x18; ret; 
0x000000000003cce9: sal dword ptr [rsi + 0x34], 0xf3; subps xmm0, xmmword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x000000000003cc35: sal dword ptr [rsi + 0x38], 0xf2; subps xmm0, xmmword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x0000000000033766: sal dword ptr [rsi + 0xf], 1; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000002abfd: sal dword ptr [rsi + 1], 1; hlt; ret; 
0x000000000002f985: sal ebx, 0xf; pop rax; ret 0xb1e8; 
0x0000000000031153: sal ebx, 0xf; pop rax; ret 0xfc3; 
0x0000000000031116: sal ebx, 0xf; pop rax; ret 0xff3; 
0x0000000000030531: sal ebx, 0xf; pop rax; ret; 
0x000000000003cbc3: sal ebx, 0xf; pop rax; shr ebx, 0xd5; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x0000000000031da0: sal ebx, 0xf; pop rcx; add eax, 0x7edb3; ret; 
0x000000000003346f: sal ebx, 0xf; pop rcx; ret 0x280f; 
0x0000000000037c55: sal ebx, 0xf; pop rcx; ret 0xff3; 
0x00000000000198db: sal ebx, 0xf; pop rcx; ret; 
0x000000000002f746: sal ebx, 0xf; pop rdx; sal dl, 0xf; pop rcx; ret 0xff2; 
0x0000000000037b11: sal ebx, 0xf; pop rsp; ret 0x280f; 
0x000000000003abeb: sal ebx, 1; addps xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000030b41: sal ebx, 1; movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000003abe7: sal ebx, 1; mulps xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x0000000000039b59: sal ebx, cl; addps xmm1, xmm2; addss xmm0, xmm1; ret; 
0x0000000000031e5b: sal ebx, cl; addps xmm2, xmmword ptr [rip + 0x7d65c]; divss xmm1, xmm2; mulss xmm1, xmm0; addss xmm0, xmm1; ret; 
0x00000000000335d4: sal ebx, cl; subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x0000000000032e25: sal edx, 0xf; pop rax; ret 0x4866; 
0x0000000000031094: sal edx, 0xf; pop rax; ret 0x66c3; 
0x000000000002f846: sal edx, 0xf; pop rax; ret 0x90e8; 
0x000000000003f7e0: sal edx, 0xf; pop rax; ret 0xb0e9; 
0x000000000002ea57: sal edx, 0xf; pop rax; ret 0xfc3; 
0x0000000000031058: sal edx, 0xf; pop rax; ret 0xff2; 
0x000000000003046c: sal edx, 0xf; pop rax; ret; 
0x000000000003cb53: sal edx, 0xf; pop rax; shr ebx, 0xdc; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x0000000000031758: sal edx, 0xf; pop rcx; add eax, 0x7c957; ret; 
0x000000000002fc16: sal edx, 0xf; pop rcx; ret 0xf883; 
0x000000000002cf68: sal edx, 0xf; pop rcx; ret; 
0x0000000000016f8a: sal edx, 0xf; pop rdx; shl byte ptr [rsi + 0xf], 0x7e; ret; 
0x00000000000375f9: sal edx, 0xf; pop rsi; ret 0xdb85; 
0x00000000000373c2: sal edx, 0xf; pop rsp; ret; 
0x0000000000030aab: sal edx, 1; addps xmm0, xmm1; ja 0x30ae0; ret; 
0x000000000003973a: sal edx, 1; addps xmm0, xmm2; ret; 
0x000000000002fe23: sal edx, 1; addps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003aafe: sal edx, 1; movups xmmword ptr [rsp - 8], xmm2; ret; 
0x000000000002ce4b: sal edx, 1; subps xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000003324b: sal edx, 1; subps xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000003a371: sal edx, cl; addps xmm0, xmm1; addsd xmm0, xmm2; cvtsd2ss xmm0, xmm0; ret; 
0x000000000003180c: sal edx, cl; addps xmm2, xmmword ptr [rip + 0x7c5eb]; divsd xmm1, xmm2; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x00000000000701ef: sar bh, 1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000061c8b: sar bl, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000023599: sar byte ptr [r8 + 0xd9], 1; syscall; 
0x000000000005bf7c: sar byte ptr [rax + 0x102], cl; syscall; 
0x000000000007566d: sar byte ptr [rax + 0x107], cl; syscall; 
0x000000000007566d: sar byte ptr [rax + 0x107], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bb47: sar byte ptr [rax + 0x10c], cl; syscall; 
0x0000000000074456: sar byte ptr [rax + 0x10d], cl; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000004bc4c: sar byte ptr [rax + 0x11], 0x8b; and al, 0x10; test eax, eax; je 0x4bc60; add rsp, 0x28; ret; 
0x0000000000023a2d: sar byte ptr [rax + 0x130], cl; syscall; 
0x0000000000059d5b: sar byte ptr [rax + 0x135], cl; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000002392d: sar byte ptr [rax + 0x145], cl; syscall; 
0x000000000002392d: sar byte ptr [rax + 0x145], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000745ec: sar byte ptr [rax + 0x19], 0x48; movsxd rdi, dword ptr [rsp + 0x28]; lea rsi, [rsp + 0xc]; xor eax, eax; mov edx, 4; syscall; 
0x00000000000435ca: sar byte ptr [rax + 0x1c], cl; syscall; 
0x00000000000438fd: sar byte ptr [rax + 0x1c], cl; syscall; neg eax; ret; 
0x00000000000221db: sar byte ptr [rax + 0x1d], cl; syscall; 
0x00000000000221db: sar byte ptr [rax + 0x1d], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000022159: sar byte ptr [rax + 0x1e], cl; syscall; 
0x000000000005dc0a: sar byte ptr [rax + 0x2d], 0x48; add esp, 0x10; pop rbp; ret; 
0x00000000000220c8: sar byte ptr [rax + 0x40], cl; syscall; 
0x00000000000220c8: sar byte ptr [rax + 0x40], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000003ccf5: sar byte ptr [rax + 0x41], cl; ret; 
0x000000000003cc42: sar byte ptr [rax + 0x46], cl; ret; 
0x00000000000502db: sar byte ptr [rax + 0x48], 1; syscall; 
0x000000000007426b: sar byte ptr [rax + 0x5c], cl; syscall; 
0x000000000007426b: sar byte ptr [rax + 0x5c], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074bfb: sar byte ptr [rax + 0x5e], cl; syscall; 
0x0000000000074bfb: sar byte ptr [rax + 0x5e], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000005c746: sar byte ptr [rax + 0x67], 0x48; movsxd rdi, eax; mov edx, 1; mov eax, 0x48; mov rsi, r14; syscall; 
0x00000000000236fd: sar byte ptr [rax + 0x67], cl; syscall; 
0x00000000000236fd: sar byte ptr [rax + 0x67], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004275f: sar byte ptr [rax + 0x8d], cl; syscall; 
0x000000000001f955: sar byte ptr [rax + 0xa], 0x48; movsxd rdi, eax; mov eax, 3; syscall; 
0x00000000000236ba: sar byte ptr [rax + 0xad], cl; syscall; 
0x00000000000236ba: sar byte ptr [rax + 0xad], cl; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000004208a: sar byte ptr [rax + 0xb], 0x44; mov eax, esp; pop r12; ret; 
0x000000000002359a: sar byte ptr [rax + 0xd9], 1; syscall; 
0x00000000000722e7: sar byte ptr [rax + 0xe], 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000002365c: sar byte ptr [rax + 0xfe], cl; syscall; 
0x000000000001e406: sar byte ptr [rax + 1], 0x45; test eax, eax; jne 0x1e418; pop rbp; ret; 
0x000000000003405f: sar byte ptr [rax + 6], cl; ret; 
0x000000000005d70f: sar byte ptr [rax + 7], 0x48; mov dword ptr [rbx], eax; xor eax, eax; pop rbx; ret; 
0x0000000000074c69: sar byte ptr [rax + 8], cl; syscall; 
0x0000000000043679: sar byte ptr [rax + 9], 0x4c; mov edi, esp; syscall; 
0x0000000000045179: sar byte ptr [rax - 0x33], 0xf7; ret; 
0x0000000000061502: sar byte ptr [rax - 0x35], 0xb8; push rdi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000004c4d2: sar byte ptr [rax - 0x37], 0xf7; ret; 
0x000000000001fa07: sar byte ptr [rax - 0x49], 0xbe; add al, byte ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rax, r8; syscall; 
0x000000000004c5a6: sar byte ptr [rax - 0x59], 0xf7; ret; 
0x0000000000074cb8: sar byte ptr [rax - 1], 0x44; cmovne esp, eax; mov eax, r12d; pop r12; ret; 
0x000000000005739d: sar byte ptr [rax], 0x83; ret 0x4501; 
0x0000000000052b7c: sar byte ptr [rax], 0x83; ret 0x8501; 
0x0000000000037b9c: sar byte ptr [rcx + 0x11], cl; test eax, eax; je 0x37bb0; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x00000000000508c5: sar byte ptr [rcx + 0x2a], 0xf3; stosq qword ptr [rdi], rax; ret; 
0x000000000006b532: sar byte ptr [rcx - 0x1d], 0x49; movsxd rdx, eax; xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000005285a: sar byte ptr [rcx - 0x20], cl; mov dword ptr [r8], 0xffffffff; ret; 
0x00000000000738a8: sar byte ptr [rcx - 0x33], 0x8b; mov ecx, 0xa4; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000003cd36: sar byte ptr [rcx - 0x41], cl; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x000000000003cc88: sar byte ptr [rcx - 0x46], cl; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x0000000000034cad: sar byte ptr [rcx - 8], 0x44; mov eax, eax; ret; 
0x0000000000034c26: sar byte ptr [rcx - 9], 0x44; mov eax, eax; ret; 
0x000000000004278b: sar byte ptr [rdi + 0x10], 0x48; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x0000000000050d5b: sar byte ptr [rdi + 0x3d], cl; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000021feb: sar byte ptr [rdi + 0x45], cl; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000074846: sar byte ptr [rdi + 0x4a], cl; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000074816: sar byte ptr [rdi + 0x4b], cl; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000005abf3: sar byte ptr [rdi + 2], cl; syscall; 
0x000000000005abf3: sar byte ptr [rdi + 2], cl; syscall; ret; 
0x000000000001f628: sar byte ptr [rdi - 0x2b], 0x5b; pop rbp; pop r12; ret; 
0x000000000006b9fb: sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f645: sar byte ptr [rdx + 0x10], 0xf0; cmpxchg dword ptr [rdi], edx; ret; 
0x000000000006f015: sar byte ptr [rdx + 0x7fffffff], 0xf0; cmpxchg dword ptr [rdi], edx; mov edx, 0x10; test eax, eax; cmovne eax, edx; ret; 
0x000000000006a8a5: sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x000000000006cc2c: sar byte ptr [rsi + 0x83], cl; mov rax, rbx; syscall; 
0x000000000006cbaa: sar byte ptr [rsi + 0xd], 0x89; ret 0xca81; 
0x0000000000019b48: sar byte ptr [rsi], 1; jmp rax; 
0x00000000000549b6: sar byte ptr [rsi], cl; jmp rdx; 
0x0000000000071d03: sar dl, cl; jmp qword ptr [rsi + 0x2e]; 
0x000000000005bd23: sar dword ptr [rax + 0x106], 1; mov rsi, r9; syscall; 
0x000000000002352f: sar dword ptr [rax + 0x12d], 1; syscall; 
0x000000000002352f: sar dword ptr [rax + 0x12d], 1; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000074535: sar dword ptr [rax + 0x1b7], 1; mov rdi, r13; mov rdx, r14; syscall; 
0x000000000001fbe9: sar dword ptr [rax + 0xdd], 1; syscall; 
0x000000000001fbe9: sar dword ptr [rax + 0xdd], 1; syscall; neg eax; ret; 
0x0000000000056057: sar dword ptr [rbx + rbp], 0xf; xchg eax, ebp; ret 0xd184; 
0x0000000000045932: sar dword ptr [rbx + rbx + 0x48], 1; ret 0x3948; 
0x0000000000057aba: sar dword ptr [rdi + 0xb], 1; jge 0x57a9f; xor eax, eax; ret; 
0x0000000000050d19: sar dword ptr [rdi + 0xf7], 1; call 0x6b5c0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x0000000000055eb5: sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000003463f: sar dword ptr [rdx + 0xe], 0x66; comiss xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000202b2: sar dword ptr [rdx + rcx + 0x49], 0x83; call qword ptr [rcx]; 
0x000000000006ee0d: sar dword ptr [rsi + 1], 0x4c; mov eax, eax; syscall; 
0x000000000003463e: sar dword ptr cs:[rdx + 0xe], 0x66; comiss xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x000000000005cda7: sar eax, 0x1f; mov qword ptr [rbx + 8], rdx; pop rbx; ret; 
0x000000000004ecdb: sar eax, 0x1f; pop r12; pop r13; pop r14; ret; 
0x0000000000022ed8: sar eax, 0x1f; ret; 
0x000000000006a620: sar eax, 2; pop r12; ret; 
0x000000000006a5ef: sar eax, 2; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a69f: sar eax, 2; ret; 
0x000000000001e552: sar eax, cl; and eax, 1; add eax, 1; ret; 
0x000000000001ddb8: sar eax, cl; and eax, 1; ret; 
0x0000000000054623: sar ebp, 0xff; inc dword ptr [rax - 0x80]; jmp qword ptr [rdx + 0xf]; 
0x0000000000041dc7: sar ebp, 1; jmp qword ptr [rsi + 0xf]; 
0x000000000004209a: sar ebp, cl; inc dword ptr [rbx - 0x148ae3c8]; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x000000000005c370: sar ecx, 7; sub rcx, rsi; mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x0000000000056275: sar edi, cl; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000066a43: sar edi, cl; jmp qword ptr [rsi + 0x2e]; 
0x0000000000071d6f: sar edx, 1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000071b8b: sar edx, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000028e76: sar esi, 0xff; xor eax, eax; add rsp, 8; ret; 
0x000000000003f82f: sar esp, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000006a61f: sar rax, 2; pop r12; ret; 
0x000000000006a5ee: sar rax, 2; pop rbx; pop rbp; pop r12; ret; 
0x000000000006a69e: sar rax, 2; ret; 
0x000000000005c36f: sar rcx, 7; sub rcx, rsi; mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000005d6f1: sbb ah, bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000697e0: sbb al, 0; add byte ptr [rax], al; add rax, rbx; pop rbx; ret; 
0x00000000000435cc: sbb al, 0; add byte ptr [rax], al; syscall; 
0x00000000000438ff: sbb al, 0; add byte ptr [rax], al; syscall; neg eax; ret; 
0x000000000005f04d: sbb al, 0; add byte ptr [rax], al; test rax, rax; jne 0x5f040; ret; 
0x0000000000069a75: sbb al, 0; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000001e310: sbb al, 0x18; pop rbx; pop rbp; mov eax, r11d; pop r12; ret; 
0x000000000007aefc: sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x00000000000224a0: sbb al, 0x24; pop rbx; pop rbp; pop r12; ret; 
0x000000000007af43: sbb al, 0x24; pop rsi; fnstsw ax; or eax, esi; and eax, edi; ret; 
0x000000000002acca: sbb al, 0x31; sal byte ptr [rcx], 0xd2; pop rbx; ret; 
0x000000000002b150: sbb al, 0x39; ret 0xc375; 
0x0000000000050a6b: sbb al, 0x48; add esp, 0x160; pop r12; ret; 
0x000000000003afba: sbb al, 0x48; add esp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000005b26a: sbb al, 0x48; add esp, 0x98; pop rbp; pop r12; ret; 
0x000000000006082b: sbb al, 0x48; mov eax, edx; syscall; 
0x000000000002329b: sbb al, 0x48; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000050040: sbb al, 0x48; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000004a700: sbb al, 0x48; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000003a523: sbb al, 0x58; pop rdx; add rsp, 0x18; ret; 
0x0000000000070d60: sbb al, 0x83; ret 0x411c; 
0x0000000000050075: sbb al, 0x85; ror byte ptr [rdi], 0x85; xchg eax, esp; add byte ptr [rax], al; add byte ptr [rax + 0x66], bh; syscall; 
0x00000000000562b7: sbb al, 0x8d; push rsp; lodsd eax, dword ptr [rsi]; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x000000000005b133: sbb al, 0xa8; add dword ptr [rbp + 0x34], esi; mov eax, 0x83; syscall; 
0x000000000005fd60: sbb al, 0xb7; add byte ptr [rax], al; lea rax, [rip + 0x570dd]; add rsp, 8; ret; 
0x000000000001f26a: sbb al, 0xd0; mov qword ptr [rip + 0x97ac5], rcx; pop rbx; ret; 
0x000000000003260c: sbb al, 0xd9; call 0xffffffffc1e218f1; add rsp, 0x28; ret; 
0x000000000003a51f: sbb al, 0xdb; and al, 0x1c; pop rax; pop rdx; add rsp, 0x18; ret; 
0x000000000002e53d: sbb al, 0xdc; ret 0xeade; 
0x00000000000177ce: sbb al, 0xf3; movd dword ptr [rsp + 0x18], mm0; add rsp, 0x30; pop rbx; ret; 
0x00000000000310d6: sbb al, 0xf3; movups xmm0, xmmword ptr [rip + 0x7e3e1]; add rsp, 0x28; ret; 
0x0000000000023450: sbb al, 1; add byte ptr [rax], al; syscall; 
0x00000000000225a7: sbb al, 5; add byte ptr [rax - 1], bh; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000003bf1a: sbb al, 7; add cl, bl; ret 0xc9d8; 
0x0000000000043f35: sbb al, byte ptr [rbx + 0x1574ffff]; movsx edi, dil; mov eax, edi; and eax, 0xdfff; ret; 
0x000000000004ec02: sbb al, byte ptr [rbx]; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000006ec02: sbb al, byte ptr [rbx]; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000001ad8f: sbb al, byte ptr [rcx + 0xf]; mov dh, 0x54; adc eax, 0x89138800; ret 0xeac1; 
0x0000000000023fa0: sbb al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000041570: sbb al, ch; mov edx, 0x39000335; ret; 
0x000000000002f267: sbb al, ch; sal dword ptr [rdx + 0xff30000], cl; pop rax; add eax, 0x817cf; add rsp, 0x18; ret; 
0x000000000002acc6: sbb al, dh; or dword ptr [rbx + 0x1c], esi; xor eax, eax; xor edx, edx; pop rbx; ret; 
0x00000000000428c1: sbb bh, al; add al, 0x24; or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000001e33b: sbb bh, bh; pop rbx; pop rbp; mov eax, r11d; pop r12; ret; 
0x0000000000065eab: sbb bh, byte ptr [rcx]; ret; 
0x000000000004d45e: sbb bh, ch; jmp qword ptr [rsi + 0x2e]; 
0x000000000003d460: sbb bh, dh; jmp qword ptr [rsi + 0x2e]; 
0x000000000004386e: sbb bl, al; endbr64; sub rsp, 8; mov eax, 0x96; syscall; 
0x0000000000074d0b: sbb bl, al; nop dword ptr [rax]; endbr64; sub rsp, 8; mov eax, 0x16; syscall; 
0x000000000007448f: sbb bl, al; nop dword ptr [rax]; mov eax, 0x3c; mov edi, 1; syscall; 
0x0000000000034746: sbb bl, bl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x28; ret; 
0x000000000003a4b4: sbb bl, dh; cvtpi2ps xmm0, mm0; ret; 
0x000000000003a49b: sbb bl, dh; divps xmm0, xmm1; ret; 
0x00000000000177c8: sbb bl, dh; movups xmmword ptr [rsp + 0x1c], xmm0; movq xmm0, qword ptr [rsp + 0x18]; add rsp, 0x30; pop rbx; ret; 
0x0000000000034a00: sbb bl, dh; mulps xmm0, xmm2; ret; 
0x0000000000055f67: sbb byte ptr [r15], r9b; xchg eax, esp; ret 0x8944; 
0x00000000000464c0: sbb byte ptr [r8 - 0x7d], cl; ret; 
0x000000000005c37a: sbb byte ptr [rax + 0x105], bh; mov rsi, r9; syscall; 
0x000000000006e18a: sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000005ccee: sbb byte ptr [rax + 0x63], cl; jg 0x5cd6b; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000073a1c: sbb byte ptr [rax + 0x63], cl; std; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000016308: sbb byte ptr [rax + 0x81], bh; syscall; 
0x000000000006d533: sbb byte ptr [rax + 0xe], bh; mov edi, 2; xor edx, edx; mov r10d, 8; syscall; 
0x000000000004cecb: sbb byte ptr [rax + 1], cl; ret; 
0x000000000006071a: sbb byte ptr [rax + 3], bh; syscall; 
0x000000000002f194: sbb byte ptr [rax + rax], al; add byte ptr [rsi + 0x16], dh; call 0x394e0; addsd xmm0, qword ptr [rip + 0x7f159]; add rsp, 0x18; ret; 
0x0000000000076554: sbb byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000004b376: sbb byte ptr [rax - 0x75], cl; je 0x4b39f; js 0x4b3ae; jmp qword ptr [rsi + 0x44]; 
0x0000000000058186: sbb byte ptr [rax - 0x75], cl; xchg eax, esp; and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x00000000000736fc: sbb byte ptr [rax - 0x77], cl; ret 0x6948; 
0x000000000005e3bc: sbb byte ptr [rax - 0x7b], cl; leave; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x00000000000464c1: sbb byte ptr [rax - 0x7d], cl; ret; 
0x0000000000052b79: sbb byte ptr [rax - 0x7d], cl; sar byte ptr [rax], 0x83; ret 0x8501; 
0x000000000006e76f: sbb byte ptr [rax], al; add byte ptr [rax], al; lea rdi, [r9 + 0x88]; syscall; 
0x0000000000059e49: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000070295: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; ret; 
0x000000000003492c: sbb byte ptr [rbp + 0xff20007], bl; pop rcx; ret 0xff2; 
0x0000000000075cd1: sbb byte ptr [rbp - 0x7b], cl; sal byte ptr [rbp - 0x58], 0x4c; mov eax, eax; ret; 
0x0000000000069372: sbb byte ptr [rbx + 0x48], bl; cmovne eax, edx; ret; 
0x0000000000072b89: sbb byte ptr [rbx + 0x4c], bl; mov eax, esp; pop r12; ret; 
0x000000000003478e: sbb byte ptr [rbx + 0x5a58782f], al; add rsp, 0x28; ret; 
0x000000000003568c: sbb byte ptr [rbx + 0x5d], bl; divss xmm0, xmm1; ret; 
0x000000000001e311: sbb byte ptr [rbx + 0x5d], bl; mov eax, r11d; pop r12; ret; 
0x0000000000024754: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000002964f: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000067ac4: sbb byte ptr [rbx + rbp + 0x3c], cl; ret 0x8b48; 
0x000000000001f27a: sbb byte ptr [rbx - 0x17], bl; fistp word ptr [rbp - 1]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000049ec8: sbb byte ptr [rbx - 0x7cb7fe40], al; ret 0x441c; 
0x00000000000766cd: sbb byte ptr [rcx + 0xf0e3], al; add byte ptr [rcx], dh; ret; 
0x000000000005a770: sbb byte ptr [rcx + rbp - 0x40], al; mov dword ptr [rcx + 0x18], edx; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005a7da: sbb byte ptr [rcx + rbp - 0x40], al; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005d694: sbb byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000042169: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x000000000005d3d7: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000072a06: sbb byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000002aed5: sbb byte ptr [rcx + rcx*4 - 0x30], cl; pop rbx; ret; 
0x0000000000051044: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000043f07: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; ret; 
0x000000000006f2c3: sbb byte ptr [rcx - 0x17f3dbbc], cl; xchg eax, ebx; add eax, dword ptr [rax]; add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x000000000005bbae: sbb byte ptr [rcx - 0x39], cl; ret 0xffa1; 
0x0000000000049ec5: sbb byte ptr [rcx - 0x3f7ce78f], cl; add dword ptr [rax - 0x7d], ecx; ret 0x441c; 
0x000000000005a78d: sbb byte ptr [rcx - 0x3fd6bb30], cl; ret; 
0x0000000000028f47: sbb byte ptr [rcx - 0x72b3fff8], dl; add eax, 0x8911e; cmove r8, rax; mov rax, r8; ret; 
0x0000000000074407: sbb byte ptr [rcx - 0x77], cl; clc; mov rax, qword ptr fs:[0x28]; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000075f2a: sbb byte ptr [rcx - 0x77], cl; fisttp qword ptr [rax - 0x7d]; ret; 
0x000000000005a6fa: sbb byte ptr [rcx - 0x7c0dd636], cl; ret 0x8301; 
0x0000000000018367: sbb byte ptr [rcx - 0xcfbdbbc], cl; movups xmmword ptr [rsp], xmm0; movq xmm0, qword ptr [rsp]; add rsp, 0x18; ret; 
0x0000000000023756: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov eax, 0x144; syscall; 
0x0000000000049691: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000066be8: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000048600: sbb byte ptr [rcx], cl; clc; ret; 
0x000000000006d018: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000007af30: sbb byte ptr [rdi], 0; add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x00000000000234c6: sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000058b65: sbb byte ptr [rdi], cl; test byte ptr [rax + rcx - 0x72b70000], bh; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000055f68: sbb byte ptr [rdi], cl; xchg eax, esp; ret 0x8944; 
0x00000000000599c1: sbb byte ptr [rdx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x0000000000018319: sbb byte ptr [rsi + 0x48], ah; movd eax, mm0; movq xmm1, rax; movapd xmm0, xmm2; ret; 
0x00000000000182d7: sbb byte ptr [rsi + 0x48], ah; movd eax, mm1; and rcx, rax; cmp rcx, rsi; je 0x182f0; ret; 
0x0000000000016aef: sbb byte ptr [rsi + 0xf], ah; sub cl, dl; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x000000000002fb53: sbb byte ptr [rsi + 0xf], ah; sub dl, al; pop rbx; pop rbp; ret; 
0x0000000000070711: sbb ch, byte ptr [rcx]; rol dword ptr [rcx - 0x77], 1; add al, 0x5b; pop rbp; ret; 
0x000000000003a500: sbb cl, bl; call 0xfffffffff1e285e0; ret; 
0x0000000000017ad0: sbb cl, bl; leave; ret; 
0x000000000002b37b: sbb cl, byte ptr [rax - 0x7d]; ret; 
0x000000000002ef87: sbb cl, byte ptr [rax]; add bl, dh; addps xmm0, xmmword ptr [rip + 0x81a9a]; ret; 
0x0000000000059532: sbb cl, byte ptr [rcx - 0x7d]; ret 0x4910; 
0x00000000000252c3: sbb cl, byte ptr [rcx]; add byte ptr [rax + 0x39], cl; ret 0xe575; 
0x0000000000030e6c: sbb cl, ch; outsb dx, byte ptr [rsi]; fcos; jmp qword ptr [rsi + 0xf]; 
0x00000000000324c3: sbb dh, bl; ret 0xf1de; 
0x000000000003243d: sbb dh, bl; stc; faddp st(1); ret; 
0x000000000002eb27: sbb dl, dh; movups xmm1, xmmword ptr [rip + 0x7f4d8]; divsd xmm1, xmm0; pxor xmm0, xmm0; cvtsd2ss xmm0, xmm1; ret; 
0x0000000000071d02: sbb dl, dl; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000035c39: sbb dword ptr [rax - 0x7cb7fff9], -0x3c; or byte ptr [rbx + 0x5d], bl; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000004379d: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000002f0cd: sbb dword ptr [rax], ecx; add bl, dh; addps xmm0, xmmword ptr [rip + 0x8194c]; ret; 
0x000000000002f0b7: sbb dword ptr [rax], ecx; add bl, dh; subps xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000003a416: sbb dword ptr [rbp + 0x17], esi; movapd xmm1, xmm0; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x000000000006a484: sbb dword ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000006a8a0: sbb dword ptr [rbx - 0x75], 0x10; test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x000000000002249d: sbb dword ptr [rcx - 0x77], ecx; sbb al, 0x24; pop rbx; pop rbp; pop r12; ret; 
0x00000000000233f8: sbb dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000004e003: sbb dword ptr [rdi], ecx; std; jmp qword ptr [rsi + 0xf]; 
0x0000000000034cd9: sbb eax, -1; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d06f: sbb eax, -1; mov eax, r8d; ret; 
0x00000000000762ec: sbb eax, 0x40c1f; mov qword ptr [rbx + 0x70], rax; add rsp, 0x100; pop rbx; ret; 
0x000000000004c49f: sbb eax, 0x48fffd57; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000022fff: sbb eax, 0x66ffffbf; nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; endbr64; ret; 
0x0000000000066cd7: sbb eax, 0x85480000; sal byte ptr [rcx + rcx + 0x48], 0x89; ret; 
0x000000000002b492: sbb eax, 0x899c1; mov rdi, rbp; syscall; 
0x00000000000299f2: sbb eax, 0x8c48348; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000020c4b: sbb eax, 0x90ffffff; fldz; ret; 
0x000000000006d512: sbb eax, 0xdab8; add byte ptr [rax - 0x77], cl; out dx, eax; syscall; 
0x000000000006a3a8: sbb eax, 0xf029d089; ret; 
0x00000000000435e9: sbb eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000001ff1e: sbb eax, dword ptr [rax]; add cl, ch; cmp esi, -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c8bc: sbb eax, dword ptr [rcx - 0x48]; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x000000000002415f: sbb eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x000000000001db09: sbb eax, eax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000006c36e: sbb eax, eax; not eax; and eax, 0x80000000; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000042e01: sbb eax, ecx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c522: sbb ecx, dword ptr [rax + 0x63]; sti; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x0000000000045934: sbb ecx, dword ptr [rax + 1]; ret 0x3948; 
0x000000000005e2f4: sbb ecx, dword ptr [rcx - 0x75]; mov rdx, r12; mov rsi, r13; call rax; 
0x0000000000020489: sbb ecx, dword ptr [rdi]; test ecx, esp; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000003b58f: sbb edi, edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000190ec: sbb esi, ebx; movups xmmword ptr [rsp + 0x20], xmm0; movss dword ptr [rsp + 0x24], xmm3; movq xmm0, qword ptr [rsp + 0x20]; add rsp, 0x38; ret; 
0x00000000000327f4: sbb esi, edx; mulps xmm0, xmmword ptr [rip + 0x7bdb3]; ret; 
0x000000000006fc80: sbb esi, esi; mov rax, r8; and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x0000000000034cd8: sbb r8d, -1; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d06e: sbb r8d, -1; mov eax, r8d; ret; 
0x000000000001db08: sbb rax, rax; and rax, 0xfffffffffffffffd; add rax, 4; ret; 
0x000000000006fc7f: sbb rsi, rsi; mov rax, r8; and rsi, 0xffffffffffffff80; add rsi, 0x81; syscall; 
0x000000000007af35: scasb al, byte ptr [rdi]; adc al, 0x24; add rsp, 0x28; ret; 
0x000000000007aef4: scasb al, byte ptr [rdi]; adc al, 0x24; pop rcx; ret; 
0x00000000000482c6: scasb al, byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x60], al; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000035e6e: scasb al, byte ptr [rdi]; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000028f9e: scasb al, byte ptr [rdi]; mov ah, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000043d6e: scasb al, byte ptr [rdi]; mov cl, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x000000000007aeb4: scasb al, byte ptr [rdi]; push rsp; and al, 0xf8; xor eax, eax; ret; 
0x00000000000631ae: scasb al, byte ptr [rdi]; ret 0xfffb; 
0x0000000000071d6e: scasb al, byte ptr [rdi]; sar edx, 1; jmp qword ptr [rsi + 0x2e]; 
0x000000000007aefb: scasb al, byte ptr [rdi]; sbb al, 0x24; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x00000000000640a7: scasb al, byte ptr [rdi]; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000067422: scasb al, byte ptr [rdi]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000004efc0: scasd eax, dword ptr [rdi]; add eax, 0x67e72; add rax, 1; mov qword ptr [rip + 0x67e67], rax; shr rax, 0x21; ret; 
0x000000000002be26: scasd eax, dword ptr [rdi]; dec dword ptr [rax - 0x39]; ret 0xfff0; 
0x00000000000509e2: scasd eax, dword ptr [rdi]; fadd dword ptr [rax]; add byte ptr [rax], al; movups xmmword ptr [rdi + 0xe8], xmm6; movups xmmword ptr [rdi + 0xf8], xmm7; ret; 
0x000000000002ece4: scasd eax, dword ptr [rdi]; fchs; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000003f51d: scasd eax, dword ptr [rdi]; fisttp dword ptr [rbp + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x000000000007792e: scasd eax, dword ptr [rdi]; fisttp word ptr [rcx - 0x75]; mov esp, 0xd824; add al, ch; ret; 
0x000000000002bf56: scasd eax, dword ptr [rdi]; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000067565: scasd eax, dword ptr [rdi]; in eax, 0x4d; add esp, ebp; mov rsi, r12; call rax; 
0x000000000004f309: scasd eax, dword ptr [rdi]; jl 0x4f312; add al, ch; pop rsi; ret 1; 
0x0000000000061f36: scasd eax, dword ptr [rdi]; ret 0x3948; 
0x0000000000019c80: scasd eax, dword ptr [rdi]; ret 0xc148; 
0x00000000000309a3: scasd eax, dword ptr [rdi]; ret 0xf66; 
0x0000000000042df5: scasd eax, dword ptr [rdi]; ret 6; 
0x000000000003f521: scasd eax, dword ptr [rdi]; ret; 
0x0000000000028eb6: scasd eax, dword ptr [rdi]; xchg eax, ecx; or byte ptr [rax], al; cmove r8, rax; mov rax, r8; ret; 
0x0000000000045c6d: scasd eax, dword ptr [rdi]; xchg eax, edx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000001e06b: seta al; ret; 
0x000000000003b9fe: seta al; shr esi, 0x1f; cmp al, sil; je 0x3ba0a; ret; 
0x000000000007259c: setb al; add eax, 0x34; ret; 
0x000000000002c5e3: setb al; mov eax, r8d; ret; 
0x0000000000024683: setb al; movzx eax, al; cmova eax, edx; ret; 
0x000000000002c5e2: setb r8b; mov eax, r8d; ret; 
0x000000000001dd7c: setbe al; cmp edi, 0x1ffff; jbe 0x1dd90; ret; 
0x000000000001dcea: setbe al; cmp edi, 0x20; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000001dbf7: setbe al; cmp edi, 0x7f; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000001db61: setbe al; mov eax, r8d; ret; 
0x000000000003381b: setbe al; movzx eax, al; ret; 
0x000000000001db8f: setbe al; ret; 
0x000000000001db60: setbe r8b; mov eax, r8d; ret; 
0x0000000000043ed9: sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000001dcbb: sete al; add rsp, 8; movzx eax, al; ret; 
0x000000000001dbc7: sete al; cmp edi, 9; sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000001fc49: sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x000000000006f6ae: sete al; mov dword ptr [rdi + 4], 0; shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000002cff8: sete al; mov eax, r8d; ret; 
0x00000000000701d1: sete al; movzx eax, al; add eax, 2; add rsp, 8; ret; 
0x000000000001e42a: sete al; movzx eax, al; add rax, rax; ret; 
0x000000000006b904: sete al; movzx eax, al; lea eax, [rax + rax + 2]; add rsp, 8; ret; 
0x000000000001dbb9: sete al; ret; 
0x000000000006a7ee: sete dh; test dil, sil; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x000000000001dbcd: sete dl; or eax, edx; movzx eax, al; ret; 
0x000000000002cff7: sete r8b; mov eax, r8d; ret; 
0x000000000006a7ed: sete sil; test dil, sil; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x00000000000704ae: setg cl; test cl, cl; cmovne eax, edx; ret; 
0x0000000000034d59: setne al; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c4f: setne al; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d007: setne al; add r8d, 2; mov eax, r8d; ret; 
0x00000000000234c0: setne al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x0000000000023486: setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000001dd53: setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000001fc68: setne al; add rsp, 8; neg eax; ret; 
0x000000000006bc3a: setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006ba20: setne al; movzx eax, al; add eax, 1; add rsp, 8; ret; 
0x0000000000048fdb: setne al; movzx eax, al; lea eax, [rax + rax*8 + 5]; ret; 
0x000000000001df9a: setne al; movzx eax, al; ret; 
0x000000000001e57c: setne al; neg eax; ret; 
0x000000000005e73e: setne al; pop r12; movzx eax, al; neg eax; ret; 
0x000000000004e5a2: setne al; pop rbx; neg eax; ret; 
0x000000000001e042: setne al; ret; 
0x000000000005ef30: setne dl; add edx, 1; xor esi, esi; mov rdi, rbx; call rax; 
0x0000000000029371: setne dl; movzx edx, dl; and eax, edx; ret; 
0x0000000000034d58: setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 0xc], xmm0; ret; 
0x0000000000034c4e: setne r8b; add r8d, 0x7fffffff; mov eax, r8d; movss dword ptr [rsp - 4], xmm0; ret; 
0x000000000002d006: setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x0000000000030b3e: shl byte ptr [r9], 1; sal ebx, 1; movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000003f399: shl byte ptr [rcx], 1; sal bl, 1; movups xmmword ptr [rsp - 4], xmm0; movd xmm0, eax; ret; 
0x0000000000030b3f: shl byte ptr [rcx], 1; sal ebx, 1; movups xmmword ptr [rsp - 8], xmm0; movd xmm0, ecx; ret; 
0x000000000006c371: shl byte ptr [rip - 0x80000000], 1; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x0000000000030bb2: shl byte ptr [rsi + 0x48], 1; movd mm0, eax; ret; 
0x000000000004eef4: shl byte ptr [rsi + 0x48], 1; movd mm0, eax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000003a77b: shl byte ptr [rsi + 0x48], 1; movd mm1, eax; mov qword ptr [rdi], rax; subsd xmm0, xmm1; ret; 
0x0000000000032898: shl byte ptr [rsi + 0x48], 1; movd mm2, eax; mulsd xmm1, xmm2; addsd xmm1, xmm2; mulsd xmm0, xmm1; ret; 
0x000000000003aaf1: shl byte ptr [rsi + 0x48], cl; movd mm1, eax; mulsd xmm1, xmm0; addsd xmm2, xmm1; movsd qword ptr [rsp - 8], xmm2; ret; 
0x000000000003a547: shl byte ptr [rsi + 0xf], 0x7e; ret 0x3d; 
0x000000000002d027: shl byte ptr [rsi + 0xf], 0x7e; ret 0xe8c1; 
0x0000000000030b0b: shl byte ptr [rsi + 0xf], 0x7e; ret 0xe9c1; 
0x000000000002ef47: shl byte ptr [rsi + 0xf], 0x7e; ret 0xff25; 
0x0000000000016f8e: shl byte ptr [rsi + 0xf], 0x7e; ret; 
0x000000000003eaeb: shl byte ptr [rsi + 0xf], 1; sub dl, al; mulsd xmm0, xmm1; ret; 
0x000000000002fe27: shl byte ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x0000000000030b71: shl byte ptr [rsi + 0xf], cl; outsb dx, byte ptr [rsi]; sal byte ptr [rdx + rsi*8 - 0xd], 0xf; adc byte ptr [rip + 0x7e940], al; ret; 
0x0000000000033971: shl byte ptr [rsi + 0xf], cl; outsb dx, byte ptr [rsi]; sal byte ptr [rsi + rbp*8 - 0xd], 0xf; adc byte ptr [rip + 0x7d08c], al; ret; 
0x000000000003199b: shl byte ptr [rsi + 0xf], cl; sub dl, al; ret; 
0x0000000000045427: shl byte ptr [rsi - 0x77], 0x8c; jl 0x453ad; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb60f; 
0x0000000000030c18: shl byte ptr [rsi - 0x77], 1; and al, 0xf0; fld xword ptr [rsp - 0x18]; ret; 
0x000000000007aee7: shl ch, 3; and byte ptr [rsp + 1], 0x9f; or byte ptr [rsp + 1], ch; ldmxcsr dword ptr [rsp]; pop rcx; ret; 
0x000000000007aeae: shl dword ptr [rcx], 1; and al, 0xf8; ldmxcsr dword ptr [rsp - 8]; xor eax, eax; ret; 
0x000000000003a802: shl dword ptr [rcx], 1; shl dword ptr [rsi + 0xf], 0x6e; leave; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x000000000003a4a9: shl dword ptr [rdi + 0xf66ffff], cl; out dx, eax; ror byte ptr [rax - 0x7d], 0xc4; sbb bl, dh; cvtpi2ps xmm0, mm0; ret; 
0x0000000000016c07: shl dword ptr [rsi + 0xf], 0x28; retf 0xf66; push rdi; ret; 
0x000000000003c7d3: shl dword ptr [rsi + 0xf], 0x28; sal dl, 1; divps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003a804: shl dword ptr [rsi + 0xf], 0x6e; leave; mov dword ptr [rdi], ecx; subss xmm0, xmm1; ret; 
0x0000000000034027: shl dword ptr [rsi + 0xf], 0x7e; ret 0xe181; 
0x000000000003f367: shl dword ptr [rsi + 0xf], 0x7e; ret 0xe9c1; 
0x0000000000018d43: shl dword ptr [rsi + 0xf], 0x7e; ret; 
0x0000000000030b07: shl dword ptr [rsi + 0xf], 0x7e; shl byte ptr [rsi + 0xf], 0x7e; ret 0xe9c1; 
0x0000000000016af3: shl dword ptr [rsi + 0xf], 1; sub al, cl; movapd xmm0, xmm2; ret; 
0x0000000000016c24: shl dword ptr [rsi + 0xf], 1; sub al, cl; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000003193f: shl dword ptr [rsi + 0xf], 1; sub dl, al; ret; 
0x00000000000174bf: shl dword ptr [rsi + 0xf], cl; sub ah, al; movapd xmm1, xmm2; ret; 
0x00000000000173ca: shl dword ptr [rsi + 0xf], cl; sub bl, ah; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x00000000000319b3: shl dword ptr [rsi + 0xf], cl; sub dl, al; ret; 
0x0000000000027725: shl dword ptr [rsi - 0x3f], 1; ret 0x4908; 
0x000000000003cdef: shl dword ptr [rsi - 0x7b], 0xc9; jns 0x3cdb0; fchs; ret; 
0x000000000003e78e: shl dword ptr [rsi - 0x7b], 0xdb; jns 0x3e76d; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000003a735: shl eax, 0xc; je 0x3a744; ret; 
0x000000000004eeef: shl eax, 4; or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000006ee72: shl eax, 7; mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000003a7da: shl eax, 9; je 0x3a7e4; ret; 
0x000000000005b0ea: shl eax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000003f46a: shl ecx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x0000000000048610: shl edi, 0x10; or eax, edi; ret; 
0x000000000003d195: shl edi, 0x17; movd xmm2, edi; mulss xmm0, xmm2; ret; 
0x00000000000485fe: shl edi, 0x18; or eax, edi; ret; 
0x000000000003d0df: shl edi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000048620: shl edi, 8; or eax, edi; ret; 
0x000000000006759a: shl edx, 0x20; or rax, rdx; ret; 
0x000000000002cff4: shl edx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000002d053: shl edx, 9; sete r8b; mov eax, r8d; ret; 
0x000000000006d110: shl esi, 0x1f; and eax, 0x7fffffff; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x0000000000044008: shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000006ec20: shl esi, 7; and al, 0x7f; or esi, eax; xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000003a734: shl rax, 0xc; je 0x3a744; ret; 
0x000000000004eeee: shl rax, 4; or rax, rdx; movq xmm0, rax; subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000005b0e9: shl rax, cl; or qword ptr [rdi], rax; xor eax, eax; ret; 
0x000000000003f469: shl rcx, 0x20; or rdx, rcx; mov rax, r8; ret; 
0x000000000003d0de: shl rdi, 0x34; movq xmm2, rdi; mulsd xmm0, xmm2; ret; 
0x0000000000067599: shl rdx, 0x20; or rax, rdx; ret; 
0x000000000002cff3: shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x0000000000043032: shr al, 0x28; ret 2; 
0x000000000004fa13: shr al, 0x57; cmc; cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000000435b0: shr al, 0xa; ret; 
0x0000000000048f4b: shr al, 0xcf; pop rdi; std; jmp qword ptr [rsi + 0x2e]; 
0x00000000000799ee: shr al, 0xec; ret 0xffff; 
0x000000000002e709: shr ax, 0xf; movzx eax, ax; ret; 
0x000000000005f78a: shr bl, 0x99; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x000000000005d569: shr bl, 0xad; nop dword ptr [rax]; mov rax, r9; mov rsi, rdx; syscall; 
0x00000000000458f4: shr bl, 0xcf; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000000074cfc: shr byte ptr [rax - 1], 0xff; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000006949e: shr byte ptr [rcx], 0xc8; ret; 
0x000000000006a3d1: shr byte ptr [rcx], 0xd0; ret; 
0x000000000002b6e5: shr byte ptr [rcx], 1; ret 0xc189; 
0x0000000000035d97: shr dword ptr [rdi + 0xff30007], 0x59; ret; 
0x000000000004ef89: shr eax, 0x10; cdqe; ret; 
0x000000000004ef59: shr eax, 0x11; ret; 
0x00000000000418f3: shr eax, 0x1f; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000034057: shr eax, 0x1f; cmp eax, ecx; je 0x34070; test edx, edx; js 0x34068; ret; 
0x000000000006bc66: shr eax, 0x1f; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000002e6f8: shr eax, 0x1f; ret; 
0x0000000000017f85: shr eax, 0x20; mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000016ca7: shr eax, 0x20; mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001806c: shr eax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000016837: shr eax, 0x20; mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000004efd2: shr eax, 0x21; ret; 
0x000000000002e6ea: shr eax, 0x3f; ret; 
0x000000000002e70a: shr eax, 0xf; movzx eax, ax; ret; 
0x0000000000074fab: shr eax, 1; outsd dx, dword ptr [rsi]; lahf; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000004f01a: shr eax, 1; ret; 
0x000000000006bcb6: shr eax, 2; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0b6: shr eax, 2; xor eax, 1; and eax, 1; ret; 
0x000000000007aeff: shr eax, 3; and eax, 0xc00; ret; 
0x000000000006bc76: shr eax, 3; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005d0c6: shr eax, 3; xor eax, 1; and eax, 1; ret; 
0x000000000006ba06: shr eax, 4; and eax, 1; ret; 
0x000000000003fc70: shr eax, 6; jne 0x3fc60; mov byte ptr [rdx], 0; lea rax, [rip + 0x7739f]; ret; 
0x000000000006bc96: shr eax, 7; and eax, 1; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000005b3c2: shr eax, cl; and eax, 1; ret; 
0x000000000004ba2e: shr eax, cl; in al, dx; xor al, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x00000000000631ac: shr eax, cl; scasb al, byte ptr [rdi]; ret 0xfffb; 
0x000000000003cbc7: shr ebx, 0xd5; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x000000000003cb57: shr ebx, 0xdc; nop word ptr [rax + rax]; pxor xmm0, xmm0; ret; 
0x0000000000033085: shr ecx, 1; movsxd rax, dword ptr [rcx]; add byte ptr [rax], al; nop dword ptr [rax + rax]; ret; 
0x0000000000021e4a: shr ecx, 1; ret 0xfffe; 
0x000000000007b355: shr ecx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000002a910: shr ecx, 4; mov word ptr [rdx - 2], cx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004866f: shr edi, 8; shr edx, 0x10; cmp eax, 0xbf; mov eax, edx; cmova eax, edi; ret; 
0x0000000000048672: shr edx, 0x10; cmp eax, 0xbf; mov eax, edx; cmova eax, edi; ret; 
0x000000000004f015: shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000004f080: shr edx, 0x20; mov dword ptr [rax - 4], edx; cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000004eeaf: shr edx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000002abf4: shr edx, 4; sub rdx, 1; cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x000000000003ba01: shr esi, 0x1f; cmp al, sil; je 0x3ba0a; ret; 
0x00000000000341a6: shr esi, 0x1f; cmp esi, ecx; je 0x341c0; test eax, eax; js 0x341b8; ret; 
0x000000000006755e: shr esi, 1; mov r12, r14; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x000000000006755d: shr r14, 1; mov r12, r14; imul r12, rbp; add r12, r13; mov rsi, r12; call rax; 
0x000000000004ef88: shr rax, 0x10; cdqe; ret; 
0x000000000004ef58: shr rax, 0x11; ret; 
0x0000000000017f84: shr rax, 0x20; mov dword ptr [rsp + 0x10], edx; mov dword ptr [rsp + 0x14], eax; movq xmm0, qword ptr [rsp + 0x10]; add rsp, 0x38; ret; 
0x0000000000016ca6: shr rax, 0x20; mov dword ptr [rsp + 8], edx; mov dword ptr [rsp + 0xc], eax; movq xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000001806b: shr rax, 0x20; mov dword ptr [rsp - 0x10], edx; mov dword ptr [rsp - 0xc], eax; movq xmm0, qword ptr [rsp - 0x10]; ret; 
0x0000000000016836: shr rax, 0x20; mov dword ptr [rsp], edx; mov dword ptr [rsp + 4], eax; movq xmm0, qword ptr [rsp]; add rsp, 0x28; ret; 
0x000000000004efd1: shr rax, 0x21; ret; 
0x000000000002e6e9: shr rax, 0x3f; ret; 
0x000000000005b3c1: shr rax, cl; and eax, 1; ret; 
0x000000000007b354: shr rcx, 3; rep stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x000000000002a90f: shr rcx, 4; mov word ptr [rdx - 2], cx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004f07f: shr rdx, 0x20; mov dword ptr [rax - 4], edx; cmp rsi, rax; jne 0x4f070; or dword ptr [r8], 1; ret; 
0x000000000004eeae: shr rdx, 0x20; mov word ptr [rdi + 4], dx; movabs rdx, 0xffffffffffff; and rax, rdx; ret; 
0x000000000002abf3: shr rdx, 4; sub rdx, 1; cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x000000000006e0f1: sldt word ptr [rax]; add rsp, 8; mov eax, 0xb; pop rbx; pop rbp; ret; 
0x000000000006e0d8: sldt word ptr [rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000004373a: sldt word ptr [rax]; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000003fbb5: sqrtps xmm0, xmm0; ret; 
0x000000000003fbb4: sqrtsd xmm0, xmm0; ret; 
0x000000000003fbc4: sqrtss xmm0, xmm0; ret; 
0x000000000003a7d3: stc; add byte ptr [rax], 0; add byte ptr [rbp + 0xa], dh; shl eax, 9; je 0x3a7e4; ret; 
0x0000000000023415: stc; call 0x21bc0; add rsp, 8; ret; 
0x00000000000311ca: stc; faddp st(1); ret; 
0x000000000004bb83: stc; fiadd word ptr [rcx]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000001de13: stc; inc dword ptr [rax]; add byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0fd01], 0xc0; ret; 
0x0000000000034000: stc; je 0x34010; test ecx, ecx; je 0x3400b; movapd xmm0, xmm1; ret; 
0x000000000006d426: stc; mov rax, r8; mov rsi, rdx; syscall; 
0x0000000000021a8e: stc; or dword ptr [rdi - 0x2a], esi; ret; 
0x00000000000321b4: stc; ret; 
0x000000000001ddb7: stc; sar eax, cl; and eax, 1; ret; 
0x0000000000020488: stc; sbb ecx, dword ptr [rdi]; test ecx, esp; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000005f5a2: stc; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000004bb23: stc; xor edi, ebp; jmp qword ptr [rsi + 0xf]; 
0x0000000000049304: std; add byte ptr [rax], al; add byte ptr [rsi + 6], dh; xor eax, eax; pop rbx; ret; 
0x000000000005b841: std; add byte ptr [rax], al; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x000000000001db0e: std; add rax, 4; ret; 
0x00000000000253d7: std; call 0x29330; test eax, eax; jne 0x253e8; pop rbp; ret; 
0x000000000005dc57: std; call 0x5f0f0; test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x000000000004b10d: std; call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; 
0x000000000004b10d: std; call qword ptr [rax - 0x5e1f00d]; mov eax, 3; syscall; ret; 
0x000000000006f21b: std; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000007471f: std; cmpsd dword ptr [rsi], dword ptr [rdi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000004c9d2: std; dec dword ptr [rax - 0x77]; ret; 
0x000000000004205b: std; dec dword ptr [rcx + 0x5bc03118]; ret; 
0x0000000000044255: std; dec dword ptr [rcx - 0x39]; ret; 
0x0000000000030acf: std; fadd dword ptr [rdi]; add dl, dh; movups xmmword ptr [rsp - 8], xmm1; ret; 
0x000000000007b057: std; fstp st(1); add rsp, 0x10; ret; 
0x000000000007b0ad: std; fstp st(1); ret; 
0x000000000006b355: std; inc dword ptr [rbp - 0x3f6af040]; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000004209b: std; inc dword ptr [rbx - 0x148ae3c8]; mov dword ptr [rax], 0xb; mov eax, r12d; pop r12; ret; 
0x0000000000041296: std; inc dword ptr [rbx - 0x298ad9c8]; mov rsi, rsp; mov eax, 0x61; mov rdi, rbp; syscall; 
0x000000000006f9e7: std; inc dword ptr [rcx - 0x7d]; call qword ptr [rcx]; 
0x000000000002225c: std; jbe 0x22268; pop rbx; ret; 
0x0000000000040501: std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000040615: std; jmp qword ptr [rsi + 0xf]; 
0x000000000004706c: std; jmp qword ptr [rsi - 0x70]; 
0x0000000000073a1f: std; lea rdx, [rsp + 4]; mov eax, 0xde; syscall; 
0x0000000000043bd4: std; mov eax, 0xf4; mov rsi, rbx; syscall; 
0x0000000000043d14: std; mov eax, 3; syscall; 
0x000000000005b5bd: std; movsxd rsi, ebx; mov rdx, r13; mov dword ptr [rsp + 0x10], eax; mov eax, 0x81; syscall; 
0x000000000007b2a8: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; lea rax, [rdi + 1]; ret; 
0x00000000000328bf: std; test al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000005a65f: std; test eax, 0x1f0ffffb; add byte ptr [rax], r8b; ret; 
0x000000000005cf5d: std; test eax, eax; jns 0x5cf70; and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x000000000002b0b0: sti; add byte ptr [rdi], cl; test dword ptr [rax], ecx; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000002fe06: sti; add esi, dword ptr [rbp + 8]; movsd xmm2, qword ptr [rip + 0x7e566]; movapd xmm0, xmm2; pop rbx; ret; 
0x000000000002ffd0: sti; add esi, dword ptr [rbp + 8]; movss xmm1, dword ptr [rip + 0x80a70]; movaps xmm0, xmm1; pop rbx; ret; 
0x00000000000202f2: sti; and dword ptr [rcx], ebp; ret; 
0x0000000000055d1d: sti; call qword ptr [rax + 0x5c415d5b]; ret; 
0x000000000005a321: sti; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000004f3d7: sti; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000005c9ae: sti; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000005ff90: sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000064592: sti; dec dword ptr [rbx - 0x76cfdbb4]; ret 0x8b49; 
0x0000000000077945: sti; dec dword ptr [rcx - 0x77]; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005d237: sti; inc dword ptr [rcx + rcx*4 - 0x20]; pop rbp; pop r12; pop r13; ret; 
0x000000000005f363: sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000000599a5: sti; jmp qword ptr [rsi + 0xf]; 
0x000000000006086c: sti; jmp qword ptr [rsi - 0x70]; 
0x000000000003fc96: sti; jne 0x3fca0; pop rbx; ret; 
0x000000000003fcff: sti; jne 0x3fd10; lea r8, [rip + 0x72387]; mov rax, r8; pop rbx; ret; 
0x000000000005c4d8: sti; mov eax, 0x48; mov esi, 2; mov edx, 1; syscall; 
0x0000000000071e28: sti; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x000000000001e722: sti; mov eax, 3; syscall; 
0x0000000000048012: sti; mov edx, eax; mov eax, 3; syscall; 
0x000000000005c5b8: sti; mov esi, 3; mov rax, r8; syscall; 
0x000000000005af17: sti; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000005c525: sti; mov rdx, rsp; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000007b28a: sti; ret; 
0x000000000005f362: sti; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000071e0a: sti; sub rsp, 8; mov rax, qword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x0000000000023df4: sti; sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000007af0c: stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000007aefa: stmxcsr dword ptr [rsp]; pop rax; shr eax, 3; and eax, 0xc00; ret; 
0x0000000000075bcd: stosb byte ptr [rdi], al; add byte ptr [rax], al; add byte ptr [rcx], al; ret; 
0x0000000000017bbf: stosb byte ptr [rdi], al; add dword ptr [rax], eax; movsd xmm1, qword ptr [rsp]; add rsp, 0x10; pop rbx; ret; 
0x000000000005cb72: stosb byte ptr [rdi], al; and edi, esp; jmp qword ptr [rsi + 0x2e]; 
0x0000000000049272: stosb byte ptr [rdi], al; pop rsp; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000041171: stosb byte ptr [rdi], al; sysret; add byte ptr [rax - 0x7d], cl; ret 0x8302; 
0x000000000002b48b: stosd dword ptr [rdi], eax; add byte ptr [rax], ah; add byte ptr [rax], al; mov qword ptr [rip + 0x899c1], rbx; mov rdi, rbp; syscall; 
0x000000000002b4f2: stosd dword ptr [rdi], eax; add byte ptr [rax], dl; add byte ptr [rax], al; mov eax, 0xc; mov rdi, rbp; syscall; 
0x0000000000069da0: stosd dword ptr [rdi], eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000005ed71: stosd dword ptr [rdi], eax; add esp, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c057: stosd dword ptr [rdi], eax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000007b35a: stosd dword ptr [rdi], eax; mov rax, r8; ret; 
0x000000000006141a: stosd dword ptr [rdi], eax; mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x000000000005c087: stosd dword ptr [rdi], eax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x0000000000038c11: stosd dword ptr [rdi], eax; push 0xff30007; pop rsp; ret; 
0x00000000000550fd: stosd dword ptr [rdi], eax; ret 5; 
0x00000000000508cd: stosd dword ptr [rdi], eax; ret; 
0x000000000005c056: stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000007b359: stosq qword ptr [rdi], rax; mov rax, r8; ret; 
0x0000000000061419: stosq qword ptr [rdi], rax; mov rsi, rbx; mov eax, 6; mov rdi, r12; syscall; 
0x000000000005c086: stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x00000000000508cc: stosq qword ptr [rdi], rax; ret; 
0x0000000000039d7e: sub ah, al; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x00000000000173d1: sub ah, al; movapd xmm1, xmm2; ret; 
0x0000000000033580: sub ah, al; movd xmm4, eax; addss xmm0, xmm2; mulss xmm0, xmm4; ret; 
0x0000000000033328: sub ah, al; mulsd xmm0, xmm5; ret; 
0x0000000000017393: sub ah, al; pop rbx; ret; 
0x0000000000017355: sub ah, al; ret; 
0x000000000006b422: sub ah, byte ptr [rax - 3]; jmp qword ptr [rsi + 0x2e]; 
0x000000000004cdf2: sub ah, byte ptr [rcx]; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d6f0: sub al, 0x18; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000003aa5e: sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x000000000003eeb9: sub al, 0x24; add rsp, 0x28; fmulp st(1); ret; 
0x0000000000032629: sub al, 0x24; add rsp, 0x28; fsub st(1); faddp st(2); fsubrp st(1); ret; 
0x0000000000032653: sub al, 0x24; add rsp, 0x28; fsubp st(1); ret; 
0x000000000007b085: sub al, 0x24; fmulp st(1); add rsp, 0x10; ret; 
0x000000000001800d: sub al, 0x24; jne 0x18018; add rsp, 0x58; fxch st(1); ret; 
0x00000000000446cd: sub al, 0x24; mov rax, -1; pop rbx; pop rbp; pop r12; ret; 
0x00000000000447c2: sub al, 0x24; pop rbx; mov rax, rdx; pop rbp; pop r12; ret; 
0x00000000000745df: sub al, 0x41; mov eax, eax; mov eax, 3; syscall; 
0x000000000004c30b: sub al, 0x48; add esp, 0x460; pop rbx; pop rbp; pop r12; ret; 
0x000000000001c915: sub al, 0x48; add esp, 0x98; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000001efa0: sub al, 0x5b; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000006405b: sub al, 0x89; ret 0xc083; 
0x0000000000039474: sub al, 0xc0; ret; 
0x0000000000077944: sub al, 0xfb; dec dword ptr [rcx - 0x77]; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000002350d: sub al, 1; add byte ptr [rax], al; syscall; 
0x0000000000018765: sub al, ah; pop rbx; movapd xmm1, xmm3; movapd xmm0, xmm4; ret; 
0x00000000000174b9: sub al, ah; pop rbx; mulsd xmm2, xmm3; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x000000000003a443: sub al, al; ret; 
0x0000000000071fce: sub al, bh; ret; 
0x000000000003262e: sub al, bl; loope 0x32610; ret 0xe1de; 
0x0000000000033475: sub al, bl; subss xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x00000000000508c7: sub al, byte ptr [rax]; add byte ptr [rax], al; rep stosq qword ptr [rdi], rax; ret; 
0x000000000005bae6: sub al, byte ptr [rax]; syscall; 
0x0000000000064d48: sub al, ch; ret 0xfb02; 
0x0000000000033e47: sub al, ch; ret; 
0x000000000003436e: sub al, cl; divsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034539: sub al, cl; divss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034382: sub al, cl; jne 0x34374; mulsd xmm0, qword ptr [rip + 0x79a92]; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000034549: sub al, cl; jne 0x3453f; pxor xmm1, xmm1; mulss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000000034159: sub al, cl; movapd xmm0, xmm1; ret; 
0x0000000000016873: sub al, cl; movapd xmm0, xmm2; ret; 
0x000000000002f0b0: sub al, cl; movss xmm0, dword ptr [rip + 0x81972]; subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x000000000003a41b: sub al, cl; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x73bdf]; divsd xmm0, xmm1; ret; 
0x00000000000399ca: sub al, cl; mulsd xmm1, xmm0; movsd xmm0, qword ptr [rip + 0x74630]; divsd xmm0, xmm1; ret; 
0x00000000000335ad: sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000003a48a: sub al, cl; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76574]; add rsp, 0x18; divss xmm0, xmm1; ret; 
0x0000000000039b89: sub al, cl; mulss xmm1, xmm0; movss xmm0, dword ptr [rip + 0x76e75]; divss xmm0, xmm1; ret; 
0x000000000001688a: sub al, cl; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000001734c: sub al, cl; pop rbx; mulsd xmm1, xmm2; movapd xmm0, xmm4; ret; 
0x000000000002f051: sub al, cl; subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000016c27: sub al, cl; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000030871: sub al, dl; addss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003c7d6: sub al, dl; divsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003ca25: sub al, dl; divss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x00000000000167b7: sub al, dl; movsd xmm0, qword ptr [rip + 0x97637]; add rsp, 8; subsd xmm0, xmm2; ret; 
0x0000000000033246: sub al, dl; subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000005c43b: sub bh, ah; jmp qword ptr [rsi - 0x70]; 
0x000000000003366c: sub bh, al; subss xmm0, xmm4; ret; 
0x0000000000033e43: sub bh, bh; je 0x33e6b; sub al, ch; ret; 
0x000000000003a667: sub bh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000004c9d1: sub bh, ch; dec dword ptr [rax - 0x77]; ret; 
0x00000000000173cd: sub bl, ah; movapd xmm0, xmm4; movapd xmm1, xmm2; ret; 
0x000000000001876a: sub bl, cl; movapd xmm0, xmm4; ret; 
0x000000000003871f: sub bl, cl; movaps xmm0, xmm1; ret; 
0x000000000001945e: sub bl, cl; ret; 
0x00000000000319b2: sub bl, dl; movapd xmm0, xmm2; ret; 
0x0000000000031fe9: sub bl, dl; movaps xmm0, xmm2; ret; 
0x000000000005c9e9: sub byte ptr [r10 + rcx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000066acb: sub byte ptr [r13 + 0x4c], r11b; mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x000000000005d377: sub byte ptr [r13 + rdx + 0x31], r14b; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005ed9c: sub byte ptr [r9 + r10 + 0x31], sil; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000005c91d: sub byte ptr [rax + 0x39], cl; ret 0xd74; 
0x00000000000746b9: sub byte ptr [rax + 0x51], bh; syscall; 
0x0000000000043db7: sub byte ptr [rax + 0x63], cl; idiv byte ptr [rax + 0xf0]; syscall; 
0x00000000000417e8: sub byte ptr [rax + 1], cl; ret; 
0x0000000000074614: sub byte ptr [rax + 3], bh; syscall; 
0x0000000000073afd: sub byte ptr [rax - 0x77], cl; and al, 0x28; mov r10d, 8; mov eax, 0xe; mov rdi, rdx; syscall; 
0x00000000000585df: sub byte ptr [rax - 0x77], cl; ret 0xf74; 
0x000000000004e2c5: sub byte ptr [rax - 0x77], cl; ret; 
0x0000000000045d66: sub byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000058994: sub byte ptr [rax - 0x7d], cl; ret; 
0x000000000001d971: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1d97d; add rsp, 0x10; pop rbp; ret; 
0x000000000001f9d0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fae9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1fb33; add rsp, 0x50; pop rbx; ret; 
0x000000000001fba9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000021f11: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x21f27; add rsp, 0xa0; pop rbx; ret; 
0x0000000000022068: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022467: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22475; add rsp, 0xd8; ret; 
0x0000000000022545: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22554; add rsp, 0x850; pop rbx; ret; 
0x00000000000227f7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000022a99: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b11: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22b1c; add rsp, 0x28; ret; 
0x0000000000022f4c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023188: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x231d1; add rsp, 0xe0; pop rbx; ret; 
0x0000000000023330: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023afb: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23b06; add rsp, 0x28; ret; 
0x0000000000023b76: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023c84: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23c90; add rsp, 0x60; pop rbx; ret; 
0x0000000000023e9c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000023f50: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23f74; add rsp, 0x28; ret; 
0x000000000002406a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x24075; add rsp, 0x28; ret; 
0x00000000000247d1: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a0fb: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000002a1ad: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x0000000000030c84: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dc2: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312b0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032947: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a0a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032afc: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5ec: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c62c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d375: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbcd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e186: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e36d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8aa: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3e8e9; add rsp, 0x58; ret; 
0x000000000003fabd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb1d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x3fb28; add rsp, 0x18; ret; 
0x000000000004049e: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x404fe; add rsp, 0x130; pop rbp; ret; 
0x0000000000041427: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x41447; add rsp, 0xa0; pop rbp; ret; 
0x00000000000414a7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x414b2; add rsp, 0x58; ret; 
0x0000000000041533: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x415d4; add rsp, 0x30; pop rbx; ret; 
0x00000000000420f9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42104; add rsp, 0x18; ret; 
0x00000000000428dd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x428e8; add rsp, 0x58; ret; 
0x0000000000042cd9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f52: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x42f60; add rsp, 0xd8; ret; 
0x00000000000437b5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4382f; add rsp, 0x70; pop rbp; ret; 
0x0000000000043aa0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000043dd4: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x43e03; add rsp, 0x58; ret; 
0x00000000000441bb: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x441c7; add rsp, 0x10; pop rbx; ret; 
0x0000000000044b34: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x44bac; add rsp, 0x18; ret; 
0x0000000000045020: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a40: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c20: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x47c2b; add rsp, 0x18; ret; 
0x0000000000048458: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004aedb: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4aee7; add rsp, 0x40; pop rbx; ret; 
0x000000000004c449: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000004c679: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6dd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d0b8: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d0e9; add rsp, 0x28; ret; 
0x000000000004d158: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df70: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e055: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000004f3ca: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f3d5; add rsp, 0x18; ret; 
0x000000000004f64d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f663; leave; ret; 
0x000000000004f7e7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f80b; leave; ret; 
0x000000000004f97d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4f993; leave; ret; 
0x0000000000050a66: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x50a88; add rsp, 0x160; pop r12; ret; 
0x0000000000059d7b: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x59d9a; add rsp, 0x10; pop rbp; ret; 
0x000000000005a315: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005aa8b: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005ab56: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ab93; add rsp, 0x20; pop rbx; ret; 
0x000000000005b452: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005b8f4: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5b90a; add rsp, 0x90; pop rbx; ret; 
0x000000000005bee1: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005c955: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5c997; add rsp, 0x10; pop rbx; ret; 
0x000000000005cd1f: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005ce6a: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ce87; add rsp, 0x10; pop rbx; ret; 
0x000000000005cf32: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d032: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005de7b: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005e5d2: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed62: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f352: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f592: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x000000000005fd12: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5fd27; add rsp, 0x18; ret; 
0x000000000005ff33: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000060413: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6042a; add rsp, 0x10; pop rbx; ret; 
0x0000000000060924: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000060e87: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x60e95; add rsp, 0xd8; ret; 
0x000000000006101d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610d2: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x610e0; add rsp, 0xd8; ret; 
0x0000000000061192: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x611a0; add rsp, 0xd8; ret; 
0x000000000006124d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6125b; add rsp, 0xd8; ret; 
0x0000000000061302: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x61310; add rsp, 0xd8; ret; 
0x000000000006199d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064076: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bdb: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d95: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x670f4; add rsp, 0x208; ret; 
0x00000000000671e7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x672b5; add rsp, 0xd8; ret; 
0x0000000000069c15: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x69c7b; add rsp, 0x38; ret; 
0x000000000006b3a9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb9d: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec92: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000071ac0: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000071ce9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000071d56: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71d6d; mov eax, r9d; add rsp, 0x28; ret; 
0x0000000000071fae: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71fba; add rsp, 0x40; pop rbp; ret; 
0x000000000007376c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x73778; add rsp, 0x20; pop rbx; ret; 
0x0000000000073e11: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x73e1c; add rsp, 0x38; ret; 
0x000000000007422e: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074484: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x744a6; xor eax, eax; add rsp, 0x18; ret; 
0x0000000000074712: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7471e; add rsp, 0x30; pop rbp; ret; 
0x0000000000074bda: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x74be8; mov eax, r8d; add rsp, 0x18; ret; 
0x0000000000074f8f: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075008: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7503c; add rsp, 0x18; ret; 
0x0000000000075302: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075367: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75372; add rsp, 0x28; ret; 
0x0000000000075409: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075455: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75460; add rsp, 0x18; ret; 
0x000000000007562c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e3: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x756ee; add rsp, 0x28; ret; 
0x000000000002374e: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x118], rax; mov eax, 0x144; syscall; 
0x0000000000041252: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; xor eax, eax; mov eax, 0x12e; syscall; 
0x00000000000746b1: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov eax, 0x51; syscall; 
0x000000000004fcce: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9e7: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5b; syscall; 
0x000000000007474e: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov eax, 0x5d; syscall; 
0x00000000000703cc: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x98], rax; mov eax, 2; syscall; 
0x0000000000074410: sub byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov eax, 0x6c; syscall; 
0x0000000000023d8e: sub byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000005d4ae: sub byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000066acc: sub byte ptr [rbp + 0x4c], bl; mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x000000000002b24c: sub byte ptr [rbp + 8], bh; add byte ptr [rax], al; ret; 
0x000000000005d378: sub byte ptr [rbp + rdx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000005ef6c: sub byte ptr [rbx + 0x48], bl; sub edx, ecx; add rax, rdx; ret; 
0x0000000000034e01: sub byte ptr [rbx + 0x5d], bl; divsd xmm0, xmm1; ret; 
0x0000000000016753: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000003d6b2: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r14; ret; 
0x000000000002e26d: sub byte ptr [rbx + 0x5d], bl; ret; 
0x00000000000517bd: sub byte ptr [rbx - 0x76dfdb8c], cl; ret 0x8de9; 
0x00000000000634f3: sub byte ptr [rcx + 0x63], cl; ret 0xffba; 
0x000000000005b09f: sub byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000006bf8c: sub byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000006af51: sub byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x000000000001af73: sub byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000005ed9d: sub byte ptr [rcx + rdx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x0000000000073b02: sub byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xe; mov rdi, rdx; syscall; 
0x0000000000066131: sub byte ptr [rcx - 0x73], cl; or byte ptr [r9 - 0x77], r9b; fisttp qword ptr [rax - 0x77]; ret; 
0x0000000000063765: sub byte ptr [rcx - 0x77], al; ret 0x9848; 
0x0000000000063c9f: sub byte ptr [rcx - 0x77], cl; ret 0x14c; 
0x0000000000043aa9: sub byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000006238a: sub byte ptr [rcx], bh; ret; 
0x000000000006ede2: sub byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000003fd6c: sub byte ptr [rdi], al; add byte ptr [rbx + 0x4c], bl; mov eax, eax; ret; 
0x00000000000190df: sub byte ptr [rdi], cl; fmul dword ptr cs:[rdi]; wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x000000000005ef2f: sub byte ptr [rdi], cl; xchg eax, ebp; ret 0xc283; 
0x0000000000015bd1: sub byte ptr [rdx + 0x7fffffff], bh; mov esi, 0x81; mov rax, r9; syscall; 
0x000000000005c9ea: sub byte ptr [rdx + rcx + 0x31], dh; sal byte ptr [rcx], cl; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x000000000001ab87: sub byte ptr [rsi], al; add byte ptr [rcx + 9], al; ret 0x8b48; 
0x000000000001ab86: sub byte ptr ss:[rsi], al; add byte ptr [rcx + 9], al; ret 0x8b48; 
0x00000000000331a2: sub ch, al; movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000007a9d2: sub ch, al; ret; 
0x000000000002ce46: sub ch, al; subsd xmm2, xmm1; subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000017b8c: sub cl, al; add rsp, 0x10; pop rbx; ret; 
0x0000000000032dc0: sub cl, al; addsd xmm0, xmm1; ret; 
0x0000000000031057: sub cl, al; addsd xmm0, xmm2; mulsd xmm0, qword ptr [rip + 0x7cdab]; add rsp, 0x18; ret; 
0x000000000002ea56: sub cl, al; addsd xmm0, xmm2; ret; 
0x0000000000039d3e: sub cl, al; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000031784: sub cl, al; addsd xmm1, xmm2; movapd xmm0, xmm1; ret; 
0x0000000000031115: sub cl, al; addss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7e3a5]; add rsp, 0x28; ret; 
0x0000000000039f23: sub cl, al; addss xmm0, xmm6; ret; 
0x0000000000031dcc: sub cl, al; addss xmm1, xmm2; movaps xmm0, xmm1; ret; 
0x000000000003cc34: sub cl, al; jbe 0x3cc70; subsd xmm0, qword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003cce8: sub cl, al; jbe 0x3cd20; subss xmm0, dword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x00000000000386ff: sub cl, al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000002f804: sub cl, al; pop rbx; ret; 
0x0000000000017e56: sub cl, al; ret; 
0x000000000002f33b: sub cl, bl; in eax, dx; faddp st(1); ret; 
0x000000000006e6f2: sub cl, byte ptr [rax]; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000002fe22: sub cl, dl; addsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016af2: sub cl, dl; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016c23: sub cl, dl; movapd xmm1, xmm0; xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000003abe6: sub cl, dl; mulss xmm2, xmm1; addss xmm0, xmm2; movss dword ptr [rsp - 4], xmm0; movaps xmm0, xmm1; ret; 
0x000000000003eebe: sub dh, bl; leave; ret; 
0x00000000000325cd: sub dh, bl; rcr ecx, 0xe8; fsubrp st(1); ret; 
0x000000000003cf4d: sub dl, al; add rsp, 0x18; ret; 
0x000000000001951e: sub dl, al; add rsp, 0x20; pop rbx; ret; 
0x000000000003a224: sub dl, al; addsd xmm0, xmm1; mulsd xmm0, xmm6; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000031980: sub dl, al; divsd xmm1, xmm0; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031fc0: sub dl, al; divss xmm1, xmm0; addss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003eaee: sub dl, al; mulsd xmm0, xmm1; ret; 
0x000000000003368d: sub dl, al; mulss xmm0, xmm4; ret; 
0x0000000000018eea: sub dl, al; pop rbx; divsd xmm1, xmm1; ret; 
0x000000000002fb56: sub dl, al; pop rbx; pop rbp; ret; 
0x000000000002fe14: sub dl, al; pop rbx; ret; 
0x0000000000016877: sub dl, al; ret; 
0x0000000000038927: sub dl, cl; movaps xmm0, xmm1; ret; 
0x00000000000173d5: sub dl, cl; ret; 
0x00000000000296f1: sub dword ptr [rax - 0x77], ecx; ret 0x850f; 
0x000000000004c4c2: sub dword ptr [rax], eax; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x000000000004c47c: sub dword ptr [rax], eax; add byte ptr [rax], al; sub rsp, 8; syscall; 
0x0000000000060c73: sub dword ptr [rdi + rdi*8 - 0x1f76bb01], edi; pop rbx; pop rbp; pop r12; ret; 
0x000000000005ac39: sub dword ptr [rdi - 4], -1; add rsp, 8; ret; 
0x000000000003466b: sub dword ptr [rdi], 0x40; add rsp, 0x18; ret; 
0x000000000003478f: sub dword ptr [rdi], 0x78; pop rax; pop rdx; add rsp, 0x28; ret; 
0x000000000002c5dc: sub eax, 0x10; cmp rax, rdx; setb r8b; mov eax, r8d; ret; 
0x000000000005dc0c: sub eax, 0x10c48348; pop rbp; ret; 
0x0000000000063381: sub eax, 0x1f0f4aeb; add byte ptr [rcx + 0x6b], al; ret 0x83f6; 
0x000000000006a3c6: sub eax, 0x30; lea edx, [rcx - 0x30]; movzx edx, dl; movzx eax, al; sub eax, edx; ret; 
0x00000000000605a5: sub eax, 0x53bb6; pop r13; pop r14; ret; 
0x000000000001bb8c: sub eax, 0x58c48348; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000003f0e4: sub eax, 0x6eb17; add rsp, 0x48; fmulp st(1); ret; 
0x00000000000325e5: sub eax, 0x7aaf6; test ax, ax; je 0x32640; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x00000000000325f0: sub eax, 0x7e48b; add rsp, 0x28; ret; 
0x000000000003230e: sub eax, 0x7e7c1; add rsp, 0x60; pop rbx; ret; 
0x000000000002e8b9: sub eax, 0x7e932; fsubp st(2); fmulp st(1); faddp st(1); ret; 
0x000000000002e8a3: sub eax, 0x7e958; fmulp st(2); fsubrp st(1); fsubp st(1); ret; 
0x000000000003469d: sub eax, 0x7e; and edx, 0x807fffff; mov dword ptr [rdi], eax; or edx, 0x3f000000; movd xmm0, edx; ret; 
0x000000000002f657: sub eax, 0x800000; cmp eax, 0x38ffffff; ja 0x2f688; ret; 
0x000000000005e662: sub eax, 0xc089445b; pop rbp; pop r12; ret; 
0x00000000000692fa: sub eax, 0xebc48949; or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000002f63a: sub eax, 0xf3c8280f; subps xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000034ca9: sub eax, 1; add eax, eax; jns 0x34ca8; mov eax, r8d; ret; 
0x0000000000034c21: sub eax, 1; add rax, rax; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d29: sub eax, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000003fcd1: sub eax, 1; cmp byte ptr [rbx + rax], 0x2f; jne 0x3fcc8; lea rax, [rbx + rdx]; pop rbx; ret; 
0x0000000000022256: sub eax, 1; cmp rax, -3; jbe 0x22268; pop rbx; ret; 
0x000000000006ae60: sub eax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x000000000006d1e8: sub eax, 1; mov dword ptr [rip + 0x49deb], eax; ret; 
0x000000000005f1c2: sub eax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000006a181: sub eax, 1; pop rbp; ret; 
0x0000000000060d07: sub eax, 1; ret; 
0x000000000006a179: sub eax, 2; pop rbp; ret; 
0x000000000007af78: sub eax, dword ptr [0]; pop rdx; ret; 
0x0000000000022464: sub eax, dword ptr [0x28]; jne 0x22475; add rsp, 0xd8; ret; 
0x00000000000227f4: sub eax, dword ptr [0x28]; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b4: sub eax, dword ptr [0x28]; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000030c81: sub eax, dword ptr [0x28]; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dbf: sub eax, dword ptr [0x28]; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312ad: sub eax, dword ptr [0x28]; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032944: sub eax, dword ptr [0x28]; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a07: sub eax, dword ptr [0x28]; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032af9: sub eax, dword ptr [0x28]; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5e9: sub eax, dword ptr [0x28]; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c629: sub eax, dword ptr [0x28]; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d372: sub eax, dword ptr [0x28]; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbca: sub eax, dword ptr [0x28]; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e183: sub eax, dword ptr [0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a2: sub eax, dword ptr [0x28]; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e36a: sub eax, dword ptr [0x28]; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8a7: sub eax, dword ptr [0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000042cd6: sub eax, dword ptr [0x28]; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f4f: sub eax, dword ptr [0x28]; jne 0x42f60; add rsp, 0xd8; ret; 
0x000000000004f3c7: sub eax, dword ptr [0x28]; jne 0x4f3d5; add rsp, 0x18; ret; 
0x0000000000067b01: sub eax, dword ptr [rcx + rdx - 0x10]; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x0000000000049027: sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000005d102: sub eax, dword ptr [rdi + 0x38]; ret; 
0x000000000005d153: sub eax, dword ptr [rdi + 8]; ret; 
0x000000000005280d: sub eax, dword ptr [rdx]; ret; 
0x000000000005a772: sub eax, eax; mov dword ptr [rcx + 0x18], edx; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005a7dc: sub eax, eax; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005d172: sub eax, eax; mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x0000000000069912: sub eax, eax; pop r12; pop r13; ret; 
0x000000000005a791: sub eax, eax; ret; 
0x0000000000050559: sub eax, ebp; mov cl, 0x4a; cld; dec dword ptr [rax - 0x7b]; sal byte ptr [rsp + rcx*2 + 0x48], 0x89; ret; 
0x00000000000216ca: sub eax, ebp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000006a61b: sub eax, ebp; pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x000000000002553a: sub eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x000000000006bc0a: sub eax, ecx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000044736: sub eax, ecx; pop r12; ret; 
0x0000000000068b29: sub eax, ecx; ret; 
0x000000000002c83a: sub eax, edi; ret; 
0x000000000006a69c: sub eax, edi; sar rax, 2; ret; 
0x000000000006a561: sub eax, edx; mov eax, r8d; ret; 
0x00000000000672c9: sub eax, edx; ret; 
0x00000000000673fe: sub eax, edx; test r9d, r9d; cmove r8, rax; mov rax, r8; ret; 
0x0000000000069a11: sub eax, esi; ret; 
0x000000000005a771: sub eax, r8d; mov dword ptr [rcx + 0x18], edx; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x000000000005a7db: sub eax, r8d; mov qword ptr [rdi], rcx; pop rbx; pop rbp; ret; 
0x0000000000069911: sub eax, r8d; pop r12; pop r13; ret; 
0x000000000005a790: sub eax, r8d; ret; 
0x0000000000077484: sub ebp, 1; jne 0x773bf; pop rbx; pop rbp; pop r12; ret; 
0x000000000007777b: sub ecx, 0xf883ffff; dec dword ptr [rdi]; xchg eax, esp; ret 0x8b4d; 
0x000000000001f9cd: sub ecx, dword ptr [0x28]; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fba6: sub ecx, dword ptr [0x28]; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000022065: sub ecx, dword ptr [0x28]; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022f49: sub ecx, dword ptr [0x28]; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023b73: sub ecx, dword ptr [0x28]; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023f4d: sub ecx, dword ptr [0x28]; jne 0x23f74; add rsp, 0x28; ret; 
0x00000000000247ce: sub ecx, dword ptr [0x28]; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a1aa: sub ecx, dword ptr [0x28]; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x00000000000414a4: sub ecx, dword ptr [0x28]; jne 0x414b2; add rsp, 0x58; ret; 
0x00000000000420f6: sub ecx, dword ptr [0x28]; jne 0x42104; add rsp, 0x18; ret; 
0x0000000000043dd1: sub ecx, dword ptr [0x28]; jne 0x43e03; add rsp, 0x58; ret; 
0x0000000000044b31: sub ecx, dword ptr [0x28]; jne 0x44bac; add rsp, 0x18; ret; 
0x000000000004501d: sub ecx, dword ptr [0x28]; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a3d: sub ecx, dword ptr [0x28]; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c1d: sub ecx, dword ptr [0x28]; jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004c446: sub ecx, dword ptr [0x28]; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000005a312: sub ecx, dword ptr [0x28]; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005b44f: sub ecx, dword ptr [0x28]; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005bede: sub ecx, dword ptr [0x28]; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005cd1c: sub ecx, dword ptr [0x28]; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005cf2f: sub ecx, dword ptr [0x28]; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d02f: sub ecx, dword ptr [0x28]; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005e5cf: sub ecx, dword ptr [0x28]; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed5f: sub ecx, dword ptr [0x28]; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f34f: sub ecx, dword ptr [0x28]; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f58f: sub ecx, dword ptr [0x28]; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x0000000000060921: sub ecx, dword ptr [0x28]; jne 0x60932; add rsp, 0xd8; ret; 
0x000000000006101a: sub ecx, dword ptr [0x28]; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610cf: sub ecx, dword ptr [0x28]; jne 0x610e0; add rsp, 0xd8; ret; 
0x000000000006118f: sub ecx, dword ptr [0x28]; jne 0x611a0; add rsp, 0xd8; ret; 
0x000000000006124a: sub ecx, dword ptr [0x28]; jne 0x6125b; add rsp, 0xd8; ret; 
0x00000000000612ff: sub ecx, dword ptr [0x28]; jne 0x61310; add rsp, 0xd8; ret; 
0x000000000006199a: sub ecx, dword ptr [0x28]; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064073: sub ecx, dword ptr [0x28]; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc3: sub ecx, dword ptr [0x28]; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bd8: sub ecx, dword ptr [0x28]; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d92: sub ecx, dword ptr [0x28]; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e3: sub ecx, dword ptr [0x28]; jne 0x670f4; add rsp, 0x208; ret; 
0x000000000006b3a6: sub ecx, dword ptr [0x28]; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb9a: sub ecx, dword ptr [0x28]; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec8f: sub ecx, dword ptr [0x28]; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000073e0e: sub ecx, dword ptr [0x28]; jne 0x73e1c; add rsp, 0x38; ret; 
0x000000000007422b: sub ecx, dword ptr [0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074f8c: sub ecx, dword ptr [0x28]; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075406: sub ecx, dword ptr [0x28]; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075452: sub ecx, dword ptr [0x28]; jne 0x75460; add rsp, 0x18; ret; 
0x0000000000075629: sub ecx, dword ptr [0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756e0: sub ecx, dword ptr [0x28]; jne 0x756ee; add rsp, 0x28; ret; 
0x0000000000056059: sub ecx, dword ptr [rdi]; xchg eax, ebp; ret 0xd184; 
0x0000000000055eb2: sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x0000000000021ada: sub ecx, eax; add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x0000000000070712: sub ecx, edx; mov dword ptr [r10 + 4], ecx; pop rbx; pop rbp; ret; 
0x000000000005c374: sub ecx, esi; mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000001dc84: sub edi, 0x20; xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x000000000001dc44: sub edi, 0x21; xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x000000000001dc24: sub edi, 0x30; xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000001db57: sub edi, 0x30; xor r8d, r8d; cmp edi, 9; setbe r8b; mov eax, r8d; ret; 
0x000000000001dd14: sub edi, 0x41; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000001db89: sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x000000000001e156: sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x000000000001dc64: sub edi, 0x61; xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000001e4f2: sub edi, 0xe0100; xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x000000000001de11: sub edi, 0xfff9; xor eax, eax; cmp edi, 2; setbe al; ret; 
0x000000000004f64a: sub edi, dword ptr [0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7e4: sub edi, dword ptr [0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f97a: sub edi, dword ptr [0x28]; jne 0x4f993; leave; ret; 
0x000000000005de78: sub edi, dword ptr [0x28]; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005ff30: sub edi, dword ptr [0x28]; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000069c12: sub edi, dword ptr [0x28]; jne 0x69c7b; add rsp, 0x38; ret; 
0x0000000000071ce6: sub edi, dword ptr [0x28]; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000067ac6: sub edi, dword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000071fc5: sub edi, esi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000002abf8: sub edx, 1; cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x000000000006ad95: sub edx, 1; je 0x6ada8; cmp dword ptr [rdi], esi; jne 0x6ad90; mov rax, rdi; ret; 
0x000000000007932f: sub edx, 8; mov rsp, rdx; jmp rax; 
0x0000000000022a96: sub edx, dword ptr [0x28]; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b0e: sub edx, dword ptr [0x28]; jne 0x22b1c; add rsp, 0x28; ret; 
0x000000000002332d: sub edx, dword ptr [0x28]; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023e99: sub edx, dword ptr [0x28]; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000024067: sub edx, dword ptr [0x28]; jne 0x24075; add rsp, 0x28; ret; 
0x000000000002a0f8: sub edx, dword ptr [0x28]; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000003faba: sub edx, dword ptr [0x28]; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb1a: sub edx, dword ptr [0x28]; jne 0x3fb28; add rsp, 0x18; ret; 
0x0000000000043a9d: sub edx, dword ptr [0x28]; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000048455: sub edx, dword ptr [0x28]; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004c676: sub edx, dword ptr [0x28]; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6da: sub edx, dword ptr [0x28]; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d155: sub edx, dword ptr [0x28]; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d3: sub edx, dword ptr [0x28]; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df6d: sub edx, dword ptr [0x28]; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff4: sub edx, dword ptr [0x28]; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e052: sub edx, dword ptr [0x28]; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000005aa88: sub edx, dword ptr [0x28]; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005fd0f: sub edx, dword ptr [0x28]; jne 0x5fd27; add rsp, 0x18; ret; 
0x0000000000060e84: sub edx, dword ptr [0x28]; jne 0x60e95; add rsp, 0xd8; ret; 
0x00000000000671e4: sub edx, dword ptr [0x28]; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a4: sub edx, dword ptr [0x28]; jne 0x672b5; add rsp, 0xd8; ret; 
0x00000000000752ff: sub edx, dword ptr [0x28]; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075364: sub edx, dword ptr [0x28]; jne 0x75372; add rsp, 0x28; ret; 
0x0000000000025111: sub edx, dword ptr [rcx]; add byte ptr [rax - 0x77], cl; ret; 
0x00000000000411e1: sub edx, eax; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x000000000005ef50: sub edx, ecx; add rax, rdx; pop rbx; ret; 
0x000000000005ef6f: sub edx, ecx; add rax, rdx; ret; 
0x0000000000045945: sub edx, edi; lea eax, [rdx + 1]; ret; 
0x0000000000045965: sub edx, edi; lea eax, [rdx + 2]; cmp rsi, rcx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x0000000000044000: sub esi, 0xd7c0; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000007b3b3: sub esi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000023af8: sub esi, dword ptr [0x28]; jne 0x23b06; add rsp, 0x28; ret; 
0x00000000000428da: sub esi, dword ptr [0x28]; jne 0x428e8; add rsp, 0x58; ret; 
0x000000000004d0b5: sub esi, dword ptr [0x28]; jne 0x4d0e9; add rsp, 0x28; ret; 
0x0000000000071abd: sub esi, dword ptr [0x28]; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000075005: sub esi, dword ptr [0x28]; jne 0x7503c; add rsp, 0x18; ret; 
0x000000000006ddf2: sub esi, dword ptr [rcx]; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000005d39e: sub esi, eax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005ca05: sub esi, eax; mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000067346: sub esi, eax; test r9d, r9d; cmove r8d, esi; mov eax, r8d; ret; 
0x000000000004374a: sub esi, edi; syscall; 
0x000000000004374a: sub esi, edi; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006f20e: sub esp, -0x80; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000028e71: sub esp, 8; call 0x15060; xor eax, eax; add rsp, 8; ret; 
0x0000000000019a51: sub esp, 8; call 0x1f460; mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x0000000000040551: sub esp, 8; call 0x1f460; mov dword ptr [rax], 2; xor eax, eax; add rsp, 8; ret; 
0x000000000003a431: sub esp, 8; call 0x34bf0; pxor xmm0, xmm0; add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000003a685: sub esp, 8; call 0x3cbe0; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003a6a5: sub esp, 8; call 0x3cca0; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x000000000004167a: sub esp, 8; call 0x5d1b0; mov eax, 1; add rsp, 8; ret; 
0x000000000006e3f1: sub esp, 8; call 0x70300; xor eax, eax; add rsp, 8; ret; 
0x000000000001edec: sub esp, 8; call 0x78780; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000023368: sub esp, 8; mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000023608: sub esp, 8; mov eax, 0x126; mov rdx, rdi; syscall; 
0x0000000000074d15: sub esp, 8; mov eax, 0x16; syscall; 
0x0000000000059e45: sub esp, 8; mov eax, 0x18; syscall; 
0x00000000000435e5: sub esp, 8; mov eax, 0x1b; syscall; 
0x000000000004f9c5: sub esp, 8; mov eax, 0x3b; syscall; 
0x0000000000042f75: sub esp, 8; mov eax, 0x3f; syscall; 
0x00000000000221a5: sub esp, 8; mov eax, 0x43; syscall; 
0x0000000000075475: sub esp, 8; mov eax, 0x4c; syscall; 
0x0000000000074245: sub esp, 8; mov eax, 0x50; syscall; 
0x0000000000060d65: sub esp, 8; mov eax, 0x52; syscall; 
0x00000000000750c5: sub esp, 8; mov eax, 0x54; syscall; 
0x0000000000074c15: sub esp, 8; mov eax, 0x56; syscall; 
0x0000000000060d35: sub esp, 8; mov eax, 0x57; syscall; 
0x0000000000075385: sub esp, 8; mov eax, 0x58; syscall; 
0x0000000000024115: sub esp, 8; mov eax, 0x63; syscall; 
0x0000000000075205: sub esp, 8; mov eax, 0x70; syscall; 
0x0000000000041215: sub esp, 8; mov eax, 0x76; syscall; 
0x00000000000411f5: sub esp, 8; mov eax, 0x78; syscall; 
0x0000000000023255: sub esp, 8; mov eax, 0x7d; syscall; 
0x0000000000023235: sub esp, 8; mov eax, 0x7e; syscall; 
0x000000000005b4f5: sub esp, 8; mov eax, 0x7f; mov esi, 8; syscall; 
0x0000000000023a55: sub esp, 8; mov eax, 0x87; syscall; 
0x0000000000043605: sub esp, 8; mov eax, 0x95; syscall; 
0x0000000000043875: sub esp, 8; mov eax, 0x96; syscall; 
0x0000000000043895: sub esp, 8; mov eax, 0x98; syscall; 
0x0000000000024215: sub esp, 8; mov eax, 0x99; syscall; 
0x0000000000023a75: sub esp, 8; mov eax, 0x9b; syscall; 
0x0000000000023275: sub esp, 8; mov eax, 0xa1; syscall; 
0x00000000000741b5: sub esp, 8; mov eax, 0xa3; syscall; 
0x00000000000239b5: sub esp, 8; mov eax, 0xa6; xor esi, esi; syscall; 
0x00000000000240a5: sub esp, 8; mov eax, 0xa8; syscall; 
0x0000000000023eb5: sub esp, 8; mov eax, 0xaa; syscall; 
0x0000000000042735: sub esp, 8; mov eax, 0xab; syscall; 
0x0000000000023955: sub esp, 8; mov eax, 0xaf; syscall; 
0x00000000000243f5: sub esp, 8; mov eax, 0xc5; syscall; 
0x0000000000024415: sub esp, 8; mov eax, 0xc6; syscall; 
0x0000000000019a75: sub esp, 8; mov edi, 0x53; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a95: sub esp, 8; mov edi, 0x54; call 0x19ae0; add rsp, 8; ret; 
0x000000000005c285: sub esp, 8; mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023dc5: sub esp, 8; mov edi, edi; mov eax, 0x7a; syscall; 
0x0000000000023da5: sub esp, 8; mov edi, edi; mov eax, 0x7b; syscall; 
0x0000000000023505: sub esp, 8; mov edi, edi; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023929: sub esp, 8; mov edx, edx; mov eax, 0x145; syscall; 
0x0000000000023905: sub esp, 8; mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005bf55: sub esp, 8; mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005b9b5: sub esp, 8; mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000005bfd5: sub esp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x0000000000023975: sub esp, 8; mov esi, esi; mov eax, 0xb0; syscall; 
0x0000000000074265: sub esp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bf5: sub esp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023525: sub esp, 8; mov esi, esi; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x0000000000023995: sub esp, 8; mov r10, rcx; mov eax, 0xa5; syscall; 
0x000000000005bff5: sub esp, 8; mov r10, rcx; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000024365: sub esp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024395: sub esp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022125: sub esp, 8; mov r10, rcx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x00000000000239f5: sub esp, 8; mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000243c5: sub esp, 8; mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000023d25: sub esp, 8; mov r10, rcx; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000075095: sub esp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024275: sub esp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000023ca5: sub esp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x00000000000234d5: sub esp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x0000000000024185: sub esp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023b95: sub esp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000071e0c: sub esp, 8; mov rax, qword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x0000000000059da5: sub esp, 8; mov rdi, -0x26; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023215: sub esp, 8; mov rdi, -0xc; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bc11: sub esp, 8; mov rdi, -9; call 0x21bc0; add rsp, 8; ret; 
0x000000000006d57a: sub esp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023df6: sub esp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000006b3c5: sub esp, 8; mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b455: sub esp, 8; mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x00000000000688e5: sub esp, 8; mov rdx, rsi; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x00000000000241d5: sub esp, 8; movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000241b5: sub esp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x00000000000240f5: sub esp, 8; movsxd rdi, edi; mov eax, 0x132; syscall; 
0x00000000000742f5: sub esp, 8; movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000005ac05: sub esp, 8; movsxd rdi, edi; mov eax, 0x24; syscall; 
0x000000000005adf5: sub esp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x0000000000022105: sub esp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000074865: sub esp, 8; movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x00000000000412e5: sub esp, 8; movsxd rdi, edi; mov eax, 0x62; syscall; 
0x00000000000749c5: sub esp, 8; movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074b05: sub esp, 8; movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b55: sub esp, 8; movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x0000000000059c85: sub esp, 8; movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059ca5: sub esp, 8; movsxd rdi, edi; mov eax, 0x93; syscall; 
0x0000000000059de5: sub esp, 8; movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000043625: sub esp, 8; movsxd rdi, edi; mov eax, 0x97; syscall; 
0x00000000000231f5: sub esp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236d5: sub esp, 8; movsxd rdi, edi; mov eax, 0xac; syscall; 
0x0000000000024435: sub esp, 8; movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000059b55: sub esp, 8; movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000071f25: sub esp, 8; movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000071d85: sub esp, 8; movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x0000000000043e35: sub esp, 8; movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x0000000000043ac5: sub esp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x0000000000023f88: sub esp, 8; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005bf75: sub esp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023655: sub esp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000411c5: sub esp, 8; movsxd rdi, edi; mov esi, esi; mov eax, 0x8c; syscall; 
0x0000000000042755: sub esp, 8; movsxd rdi, edi; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000240c5: sub esp, 8; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000075665: sub esp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a25: sub esp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000236f5: sub esp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000024155: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023ed5: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022175: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac25: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f65: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f35: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023555: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000075145: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023685: sub esp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000435c5: sub esp, 8; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000236b5: sub esp, 8; movsxd rdx, edx; mov eax, 0xad; syscall; 
0x00000000000753a5: sub esp, 8; movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x0000000000074195: sub esp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x00000000000239d5: sub esp, 8; movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000024085: sub esp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000023435: sub esp, 8; movsxd rsi, esi; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000005c052: sub esp, 8; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c082: sub esp, 8; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000004c481: sub esp, 8; syscall; 
0x0000000000023295: sub esp, 8; test edi, edi; je 0x232b8; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x000000000004508a: sub esp, 8; xor edx, edx; call 0x44bc0; add rsp, 8; ret; 
0x0000000000067ac5: sub r15, qword ptr [rdx + rax*8]; mov rax, qword ptr [rsp + 8]; mov rdi, r15; call rax; 
0x0000000000034ca8: sub r8d, 1; add eax, eax; jns 0x34ca8; mov eax, r8d; ret; 
0x0000000000034c20: sub r8d, 1; add rax, rax; jns 0x34c20; mov eax, r8d; ret; 
0x0000000000034d28: sub r8d, 1; add rax, rax; jns 0x34d28; mov eax, r8d; ret; 
0x000000000006a560: sub r8d, edx; mov eax, r8d; ret; 
0x000000000002c5db: sub rax, 0x10; cmp rax, rdx; setb r8b; mov eax, r8d; ret; 
0x000000000003fcd0: sub rax, 1; cmp byte ptr [rbx + rax], 0x2f; jne 0x3fcc8; lea rax, [rbx + rdx]; pop rbx; ret; 
0x0000000000022255: sub rax, 1; cmp rax, -3; jbe 0x22268; pop rbx; ret; 
0x000000000006ae5f: sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x000000000005f1c1: sub rax, 1; mov qword ptr [rdi + 0x80], rax; ret; 
0x000000000006a180: sub rax, 1; pop rbp; ret; 
0x000000000006a178: sub rax, 2; pop rbp; ret; 
0x000000000007af77: sub rax, qword ptr [0]; pop rdx; ret; 
0x0000000000022463: sub rax, qword ptr [0x28]; jne 0x22475; add rsp, 0xd8; ret; 
0x00000000000227f3: sub rax, qword ptr [0x28]; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b3: sub rax, qword ptr [0x28]; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000030c80: sub rax, qword ptr [0x28]; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dbe: sub rax, qword ptr [0x28]; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312ac: sub rax, qword ptr [0x28]; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032943: sub rax, qword ptr [0x28]; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a06: sub rax, qword ptr [0x28]; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032af8: sub rax, qword ptr [0x28]; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5e8: sub rax, qword ptr [0x28]; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c628: sub rax, qword ptr [0x28]; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d371: sub rax, qword ptr [0x28]; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbc9: sub rax, qword ptr [0x28]; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e182: sub rax, qword ptr [0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a1: sub rax, qword ptr [0x28]; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e369: sub rax, qword ptr [0x28]; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8a6: sub rax, qword ptr [0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000042cd5: sub rax, qword ptr [0x28]; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f4e: sub rax, qword ptr [0x28]; jne 0x42f60; add rsp, 0xd8; ret; 
0x000000000004f3c6: sub rax, qword ptr [0x28]; jne 0x4f3d5; add rsp, 0x18; ret; 
0x0000000000067b00: sub rax, qword ptr [rcx + rdx - 0x10]; lea r8, [r13 + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], r8; call rax; 
0x000000000005d101: sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d152: sub rax, qword ptr [rdi + 8]; ret; 
0x000000000007af76: sub rax, qword ptr fs:[0]; pop rdx; ret; 
0x0000000000022462: sub rax, qword ptr fs:[0x28]; jne 0x22475; add rsp, 0xd8; ret; 
0x00000000000227f2: sub rax, qword ptr fs:[0x28]; jne 0x22805; add rsp, 0xd8; ret; 
0x00000000000228b2: sub rax, qword ptr fs:[0x28]; jne 0x228c5; add rsp, 0xd8; ret; 
0x0000000000030c7f: sub rax, qword ptr fs:[0x28]; jne 0x30d63; add rsp, 0x38; ret; 
0x0000000000030dbd: sub rax, qword ptr fs:[0x28]; jne 0x30fca; add rsp, 0x18; ret; 
0x00000000000312ab: sub rax, qword ptr fs:[0x28]; jne 0x313a0; add rsp, 0x48; ret; 
0x0000000000032942: sub rax, qword ptr fs:[0x28]; jne 0x3298f; add rsp, 0x28; ret; 
0x0000000000032a05: sub rax, qword ptr fs:[0x28]; jne 0x32a5b; add rsp, 0x28; ret; 
0x0000000000032af7: sub rax, qword ptr fs:[0x28]; jne 0x32b8d; add rsp, 0x48; ret; 
0x000000000003c5e7: sub rax, qword ptr fs:[0x28]; jne 0x3c5f7; add rsp, 0x18; ret; 
0x000000000003c627: sub rax, qword ptr fs:[0x28]; jne 0x3c637; add rsp, 0x18; ret; 
0x000000000003d370: sub rax, qword ptr fs:[0x28]; jne 0x3d45e; add rsp, 0x38; ret; 
0x000000000003dbc8: sub rax, qword ptr fs:[0x28]; jne 0x3ddc5; add rsp, 0x18; ret; 
0x000000000003e181: sub rax, qword ptr fs:[0x28]; jne 0x3e229; add rsp, 0x58; ret; 
0x000000000003e2a0: sub rax, qword ptr fs:[0x28]; jne 0x3e307; add rsp, 0x38; ret; 
0x000000000003e368: sub rax, qword ptr fs:[0x28]; jne 0x3e4ed; add rsp, 0x18; ret; 
0x000000000003e8a5: sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000042cd4: sub rax, qword ptr fs:[0x28]; jne 0x42ce4; add rsp, 0x18; ret; 
0x0000000000042f4d: sub rax, qword ptr fs:[0x28]; jne 0x42f60; add rsp, 0xd8; ret; 
0x000000000004f3c5: sub rax, qword ptr fs:[0x28]; jne 0x4f3d5; add rsp, 0x18; ret; 
0x00000000000216c9: sub rax, r13; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000005d171: sub rax, r8; mov qword ptr [rsi], rax; mov rax, r8; ret; 
0x000000000006a61a: sub rax, rbp; pop rbx; pop rbp; sar rax, 2; pop r12; ret; 
0x0000000000025539: sub rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000006bc09: sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000044735: sub rax, rcx; pop r12; ret; 
0x000000000002c839: sub rax, rdi; ret; 
0x000000000006a69b: sub rax, rdi; sar rax, 2; ret; 
0x00000000000677fc: sub rax, rdx; ret; 
0x00000000000673fd: sub rax, rdx; test r9d, r9d; cmove r8, rax; mov rax, r8; ret; 
0x0000000000077483: sub rbp, 1; jne 0x773bf; pop rbx; pop rbp; pop r12; ret; 
0x000000000001f9cc: sub rcx, qword ptr [0x28]; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fba5: sub rcx, qword ptr [0x28]; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000022064: sub rcx, qword ptr [0x28]; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022f48: sub rcx, qword ptr [0x28]; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023b72: sub rcx, qword ptr [0x28]; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023f4c: sub rcx, qword ptr [0x28]; jne 0x23f74; add rsp, 0x28; ret; 
0x00000000000247cd: sub rcx, qword ptr [0x28]; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a1a9: sub rcx, qword ptr [0x28]; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x00000000000414a3: sub rcx, qword ptr [0x28]; jne 0x414b2; add rsp, 0x58; ret; 
0x00000000000420f5: sub rcx, qword ptr [0x28]; jne 0x42104; add rsp, 0x18; ret; 
0x0000000000043dd0: sub rcx, qword ptr [0x28]; jne 0x43e03; add rsp, 0x58; ret; 
0x0000000000044b30: sub rcx, qword ptr [0x28]; jne 0x44bac; add rsp, 0x18; ret; 
0x000000000004501c: sub rcx, qword ptr [0x28]; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a3c: sub rcx, qword ptr [0x28]; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c1c: sub rcx, qword ptr [0x28]; jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004c445: sub rcx, qword ptr [0x28]; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000005a311: sub rcx, qword ptr [0x28]; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005b44e: sub rcx, qword ptr [0x28]; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005bedd: sub rcx, qword ptr [0x28]; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005cd1b: sub rcx, qword ptr [0x28]; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005cf2e: sub rcx, qword ptr [0x28]; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d02e: sub rcx, qword ptr [0x28]; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005e5ce: sub rcx, qword ptr [0x28]; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed5e: sub rcx, qword ptr [0x28]; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f34e: sub rcx, qword ptr [0x28]; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f58e: sub rcx, qword ptr [0x28]; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x0000000000060920: sub rcx, qword ptr [0x28]; jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000061019: sub rcx, qword ptr [0x28]; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610ce: sub rcx, qword ptr [0x28]; jne 0x610e0; add rsp, 0xd8; ret; 
0x000000000006118e: sub rcx, qword ptr [0x28]; jne 0x611a0; add rsp, 0xd8; ret; 
0x0000000000061249: sub rcx, qword ptr [0x28]; jne 0x6125b; add rsp, 0xd8; ret; 
0x00000000000612fe: sub rcx, qword ptr [0x28]; jne 0x61310; add rsp, 0xd8; ret; 
0x0000000000061999: sub rcx, qword ptr [0x28]; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064072: sub rcx, qword ptr [0x28]; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc2: sub rcx, qword ptr [0x28]; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bd7: sub rcx, qword ptr [0x28]; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d91: sub rcx, qword ptr [0x28]; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e2: sub rcx, qword ptr [0x28]; jne 0x670f4; add rsp, 0x208; ret; 
0x000000000006b3a5: sub rcx, qword ptr [0x28]; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb99: sub rcx, qword ptr [0x28]; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec8e: sub rcx, qword ptr [0x28]; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000073e0d: sub rcx, qword ptr [0x28]; jne 0x73e1c; add rsp, 0x38; ret; 
0x000000000007422a: sub rcx, qword ptr [0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074f8b: sub rcx, qword ptr [0x28]; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075405: sub rcx, qword ptr [0x28]; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075451: sub rcx, qword ptr [0x28]; jne 0x75460; add rsp, 0x18; ret; 
0x0000000000075628: sub rcx, qword ptr [0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756df: sub rcx, qword ptr [0x28]; jne 0x756ee; add rsp, 0x28; ret; 
0x000000000001f9cb: sub rcx, qword ptr fs:[0x28]; jne 0x1fa62; add rsp, 0x68; ret; 
0x000000000001fba4: sub rcx, qword ptr fs:[0x28]; jne 0x1fbda; add rsp, 0x58; ret; 
0x0000000000022063: sub rcx, qword ptr fs:[0x28]; jne 0x220a5; add rsp, 0x58; ret; 
0x0000000000022f47: sub rcx, qword ptr fs:[0x28]; jne 0x22f57; add rsp, 0x38; ret; 
0x0000000000023b71: sub rcx, qword ptr fs:[0x28]; jne 0x23b81; add rsp, 0x58; ret; 
0x0000000000023f4b: sub rcx, qword ptr fs:[0x28]; jne 0x23f74; add rsp, 0x28; ret; 
0x00000000000247cc: sub rcx, qword ptr fs:[0x28]; jne 0x247f7; add rsp, 0x18; ret; 
0x000000000002a1a8: sub rcx, qword ptr fs:[0x28]; jne 0x2a1bb; add rsp, 0xd8; ret; 
0x00000000000414a2: sub rcx, qword ptr fs:[0x28]; jne 0x414b2; add rsp, 0x58; ret; 
0x00000000000420f4: sub rcx, qword ptr fs:[0x28]; jne 0x42104; add rsp, 0x18; ret; 
0x0000000000043dcf: sub rcx, qword ptr fs:[0x28]; jne 0x43e03; add rsp, 0x58; ret; 
0x0000000000044b2f: sub rcx, qword ptr fs:[0x28]; jne 0x44bac; add rsp, 0x18; ret; 
0x000000000004501b: sub rcx, qword ptr fs:[0x28]; jne 0x4502b; add rsp, 0x18; ret; 
0x0000000000047a3b: sub rcx, qword ptr fs:[0x28]; jne 0x47a4b; add rsp, 0x18; ret; 
0x0000000000047c1b: sub rcx, qword ptr fs:[0x28]; jne 0x47c2b; add rsp, 0x18; ret; 
0x000000000004c444: sub rcx, qword ptr fs:[0x28]; jne 0x4c45b; add rsp, 0x18; ret; 
0x000000000005a310: sub rcx, qword ptr fs:[0x28]; jne 0x5a320; add rsp, 0x18; ret; 
0x000000000005b44d: sub rcx, qword ptr fs:[0x28]; jne 0x5b460; add rsp, 0x148; ret; 
0x000000000005bedc: sub rcx, qword ptr fs:[0x28]; jne 0x5befe; add rsp, 0x38; ret; 
0x000000000005cd1a: sub rcx, qword ptr fs:[0x28]; jne 0x5cd3d; add rsp, 0x18; ret; 
0x000000000005cf2d: sub rcx, qword ptr fs:[0x28]; jne 0x5cf40; add rsp, 0xd8; ret; 
0x000000000005d02d: sub rcx, qword ptr fs:[0x28]; jne 0x5d040; add rsp, 0xd8; ret; 
0x000000000005e5cd: sub rcx, qword ptr fs:[0x28]; jne 0x5e5e0; add rsp, 0xd8; ret; 
0x000000000005ed5d: sub rcx, qword ptr fs:[0x28]; jne 0x5ed70; add rsp, 0xd8; ret; 
0x000000000005f34d: sub rcx, qword ptr fs:[0x28]; jne 0x5f360; add rsp, 0xd8; ret; 
0x000000000005f58d: sub rcx, qword ptr fs:[0x28]; jne 0x5f5a0; add rsp, 0xd8; ret; 
0x000000000006091f: sub rcx, qword ptr fs:[0x28]; jne 0x60932; add rsp, 0xd8; ret; 
0x0000000000061018: sub rcx, qword ptr fs:[0x28]; jne 0x6102b; add rsp, 0xd8; ret; 
0x00000000000610cd: sub rcx, qword ptr fs:[0x28]; jne 0x610e0; add rsp, 0xd8; ret; 
0x000000000006118d: sub rcx, qword ptr fs:[0x28]; jne 0x611a0; add rsp, 0xd8; ret; 
0x0000000000061248: sub rcx, qword ptr fs:[0x28]; jne 0x6125b; add rsp, 0xd8; ret; 
0x00000000000612fd: sub rcx, qword ptr fs:[0x28]; jne 0x61310; add rsp, 0xd8; ret; 
0x0000000000061998: sub rcx, qword ptr fs:[0x28]; jne 0x619ab; add rsp, 0xf8; ret; 
0x0000000000064071: sub rcx, qword ptr fs:[0x28]; jne 0x640a5; add rsp, 0x28; ret; 
0x0000000000065dc1: sub rcx, qword ptr fs:[0x28]; jne 0x65df5; add rsp, 0x28; ret; 
0x0000000000066bd6: sub rcx, qword ptr fs:[0x28]; jne 0x66c6e; add rsp, 0x118; ret; 
0x0000000000066d90: sub rcx, qword ptr fs:[0x28]; jne 0x66da3; add rsp, 0xf8; ret; 
0x00000000000670e1: sub rcx, qword ptr fs:[0x28]; jne 0x670f4; add rsp, 0x208; ret; 
0x000000000006b3a4: sub rcx, qword ptr fs:[0x28]; jne 0x6b3bb; add rsp, 0x18; ret; 
0x000000000006eb98: sub rcx, qword ptr fs:[0x28]; jne 0x6ec01; add rsp, 0x18; ret; 
0x000000000006ec8d: sub rcx, qword ptr fs:[0x28]; jne 0x6ecb6; add rsp, 0x28; ret; 
0x0000000000073e0c: sub rcx, qword ptr fs:[0x28]; jne 0x73e1c; add rsp, 0x38; ret; 
0x0000000000074229: sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x0000000000074f8a: sub rcx, qword ptr fs:[0x28]; jne 0x74fac; add rsp, 0x18; ret; 
0x0000000000075404: sub rcx, qword ptr fs:[0x28]; jne 0x7541b; add rsp, 0x18; ret; 
0x0000000000075450: sub rcx, qword ptr fs:[0x28]; jne 0x75460; add rsp, 0x18; ret; 
0x0000000000075627: sub rcx, qword ptr fs:[0x28]; jne 0x75637; add rsp, 0x58; ret; 
0x00000000000756de: sub rcx, qword ptr fs:[0x28]; jne 0x756ee; add rsp, 0x28; ret; 
0x0000000000021ad9: sub rcx, rax; add rax, rsi; cmp rcx, rsi; cmovg rdx, rax; mov qword ptr [rdi + 0xb8], rdx; ret; 
0x000000000005c373: sub rcx, rsi; mov qword ptr [rsp + 0x18], rcx; mov eax, 0x105; mov rsi, r9; syscall; 
0x000000000004f649: sub rdi, qword ptr [0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7e3: sub rdi, qword ptr [0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f979: sub rdi, qword ptr [0x28]; jne 0x4f993; leave; ret; 
0x000000000005de77: sub rdi, qword ptr [0x28]; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005ff2f: sub rdi, qword ptr [0x28]; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000069c11: sub rdi, qword ptr [0x28]; jne 0x69c7b; add rsp, 0x38; ret; 
0x0000000000071ce5: sub rdi, qword ptr [0x28]; jne 0x71d01; add rsp, 0x28; ret; 
0x000000000004f648: sub rdi, qword ptr fs:[0x28]; jne 0x4f663; leave; ret; 
0x000000000004f7e2: sub rdi, qword ptr fs:[0x28]; jne 0x4f80b; leave; ret; 
0x000000000004f978: sub rdi, qword ptr fs:[0x28]; jne 0x4f993; leave; ret; 
0x000000000005de76: sub rdi, qword ptr fs:[0x28]; jne 0x5dea4; add rsp, 0x28; ret; 
0x000000000005ff2e: sub rdi, qword ptr fs:[0x28]; jne 0x5ff54; add rsp, 0x28; ret; 
0x0000000000069c10: sub rdi, qword ptr fs:[0x28]; jne 0x69c7b; add rsp, 0x38; ret; 
0x0000000000071ce4: sub rdi, qword ptr fs:[0x28]; jne 0x71d01; add rsp, 0x28; ret; 
0x0000000000071fc4: sub rdi, rsi; pxor xmm0, xmm0; cvtsi2sd xmm0, rdi; ret; 
0x000000000002abf7: sub rdx, 1; cmp rcx, rdx; jbe 0x2ac01; hlt; ret; 
0x000000000006ad94: sub rdx, 1; je 0x6ada8; cmp dword ptr [rdi], esi; jne 0x6ad90; mov rax, rdi; ret; 
0x000000000007932e: sub rdx, 8; mov rsp, rdx; jmp rax; 
0x0000000000022a95: sub rdx, qword ptr [0x28]; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b0d: sub rdx, qword ptr [0x28]; jne 0x22b1c; add rsp, 0x28; ret; 
0x000000000002332c: sub rdx, qword ptr [0x28]; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023e98: sub rdx, qword ptr [0x28]; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000024066: sub rdx, qword ptr [0x28]; jne 0x24075; add rsp, 0x28; ret; 
0x000000000002a0f7: sub rdx, qword ptr [0x28]; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000003fab9: sub rdx, qword ptr [0x28]; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb19: sub rdx, qword ptr [0x28]; jne 0x3fb28; add rsp, 0x18; ret; 
0x0000000000043a9c: sub rdx, qword ptr [0x28]; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000048454: sub rdx, qword ptr [0x28]; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004c675: sub rdx, qword ptr [0x28]; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6d9: sub rdx, qword ptr [0x28]; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d154: sub rdx, qword ptr [0x28]; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d2: sub rdx, qword ptr [0x28]; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df6c: sub rdx, qword ptr [0x28]; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff3: sub rdx, qword ptr [0x28]; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e051: sub rdx, qword ptr [0x28]; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000005aa87: sub rdx, qword ptr [0x28]; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005fd0e: sub rdx, qword ptr [0x28]; jne 0x5fd27; add rsp, 0x18; ret; 
0x0000000000060e83: sub rdx, qword ptr [0x28]; jne 0x60e95; add rsp, 0xd8; ret; 
0x00000000000671e3: sub rdx, qword ptr [0x28]; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a3: sub rdx, qword ptr [0x28]; jne 0x672b5; add rsp, 0xd8; ret; 
0x00000000000752fe: sub rdx, qword ptr [0x28]; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075363: sub rdx, qword ptr [0x28]; jne 0x75372; add rsp, 0x28; ret; 
0x0000000000022a94: sub rdx, qword ptr fs:[0x28]; jne 0x22ac3; add rsp, 0x38; ret; 
0x0000000000022b0c: sub rdx, qword ptr fs:[0x28]; jne 0x22b1c; add rsp, 0x28; ret; 
0x000000000002332b: sub rdx, qword ptr fs:[0x28]; jne 0x2333b; add rsp, 0x58; ret; 
0x0000000000023e97: sub rdx, qword ptr fs:[0x28]; jne 0x23ea7; add rsp, 0x28; ret; 
0x0000000000024065: sub rdx, qword ptr fs:[0x28]; jne 0x24075; add rsp, 0x28; ret; 
0x000000000002a0f6: sub rdx, qword ptr fs:[0x28]; jne 0x2a109; add rsp, 0xd8; ret; 
0x000000000003fab8: sub rdx, qword ptr fs:[0x28]; jne 0x3fac8; add rsp, 0x18; ret; 
0x000000000003fb18: sub rdx, qword ptr fs:[0x28]; jne 0x3fb28; add rsp, 0x18; ret; 
0x0000000000043a9b: sub rdx, qword ptr fs:[0x28]; jne 0x43ab5; add rsp, 0x128; ret; 
0x0000000000048453: sub rdx, qword ptr fs:[0x28]; jne 0x48463; add rsp, 0x18; ret; 
0x000000000004c674: sub rdx, qword ptr fs:[0x28]; jne 0x4c684; add rsp, 0x28; ret; 
0x000000000004c6d8: sub rdx, qword ptr fs:[0x28]; jne 0x4c6e8; add rsp, 0x28; ret; 
0x000000000004d153: sub rdx, qword ptr fs:[0x28]; jne 0x4d163; add rsp, 0x28; ret; 
0x000000000004d1d1: sub rdx, qword ptr fs:[0x28]; jne 0x4d1e1; add rsp, 0x28; ret; 
0x000000000004df6b: sub rdx, qword ptr fs:[0x28]; jne 0x4dfa1; add rsp, 0x18; ret; 
0x000000000004dff2: sub rdx, qword ptr fs:[0x28]; jne 0x4e002; add rsp, 0x18; ret; 
0x000000000004e050: sub rdx, qword ptr fs:[0x28]; jne 0x4e060; add rsp, 0x18; ret; 
0x000000000005aa86: sub rdx, qword ptr fs:[0x28]; jne 0x5aa96; add rsp, 0x38; ret; 
0x000000000005fd0d: sub rdx, qword ptr fs:[0x28]; jne 0x5fd27; add rsp, 0x18; ret; 
0x0000000000060e82: sub rdx, qword ptr fs:[0x28]; jne 0x60e95; add rsp, 0xd8; ret; 
0x00000000000671e2: sub rdx, qword ptr fs:[0x28]; jne 0x671f5; add rsp, 0xd8; ret; 
0x00000000000672a2: sub rdx, qword ptr fs:[0x28]; jne 0x672b5; add rsp, 0xd8; ret; 
0x00000000000752fd: sub rdx, qword ptr fs:[0x28]; jne 0x7530d; add rsp, 0x28; ret; 
0x0000000000075362: sub rdx, qword ptr fs:[0x28]; jne 0x75372; add rsp, 0x28; ret; 
0x000000000005ef4f: sub rdx, rcx; add rax, rdx; pop rbx; ret; 
0x000000000005ef6e: sub rdx, rcx; add rax, rdx; ret; 
0x0000000000045944: sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x0000000000045964: sub rdx, rdi; lea eax, [rdx + 2]; cmp rsi, rcx; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000007b3b2: sub rsi, 8; mov qword ptr [rsi], rcx; syscall; 
0x0000000000023af7: sub rsi, qword ptr [0x28]; jne 0x23b06; add rsp, 0x28; ret; 
0x00000000000428d9: sub rsi, qword ptr [0x28]; jne 0x428e8; add rsp, 0x58; ret; 
0x000000000004d0b4: sub rsi, qword ptr [0x28]; jne 0x4d0e9; add rsp, 0x28; ret; 
0x0000000000071abc: sub rsi, qword ptr [0x28]; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000075004: sub rsi, qword ptr [0x28]; jne 0x7503c; add rsp, 0x18; ret; 
0x0000000000023af6: sub rsi, qword ptr fs:[0x28]; jne 0x23b06; add rsp, 0x28; ret; 
0x00000000000428d8: sub rsi, qword ptr fs:[0x28]; jne 0x428e8; add rsp, 0x58; ret; 
0x000000000004d0b3: sub rsi, qword ptr fs:[0x28]; jne 0x4d0e9; add rsp, 0x28; ret; 
0x0000000000071abb: sub rsi, qword ptr fs:[0x28]; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000075003: sub rsi, qword ptr fs:[0x28]; jne 0x7503c; add rsp, 0x18; ret; 
0x000000000005d39d: sub rsi, rax; mov edx, 1; mov rdi, rbp; call qword ptr [rbp + 0x50]; 
0x000000000005ca04: sub rsi, rax; mov rdi, rbp; mov rax, qword ptr [rbp + 0x50]; mov edx, 1; pop rbp; jmp rax; 
0x0000000000043749: sub rsi, rdi; syscall; 
0x0000000000043749: sub rsi, rdi; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x000000000006f20d: sub rsp, -0x80; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000028e70: sub rsp, 8; call 0x15060; xor eax, eax; add rsp, 8; ret; 
0x0000000000019a50: sub rsp, 8; call 0x1f460; mov dword ptr [rax], 0x16; mov rax, -1; add rsp, 8; ret; 
0x0000000000040550: sub rsp, 8; call 0x1f460; mov dword ptr [rax], 2; xor eax, eax; add rsp, 8; ret; 
0x000000000003a430: sub rsp, 8; call 0x34bf0; pxor xmm0, xmm0; add rsp, 8; cvtsi2sd xmm0, eax; ret; 
0x000000000003a684: sub rsp, 8; call 0x3cbe0; add rsp, 8; cvttsd2si rax, xmm0; ret; 
0x000000000003a6a4: sub rsp, 8; call 0x3cca0; add rsp, 8; cvttss2si rax, xmm0; ret; 
0x0000000000041679: sub rsp, 8; call 0x5d1b0; mov eax, 1; add rsp, 8; ret; 
0x000000000006e3f0: sub rsp, 8; call 0x70300; xor eax, eax; add rsp, 8; ret; 
0x000000000001edeb: sub rsp, 8; call 0x78780; mov edi, ebp; mov rdx, r13; mov rsi, r12; call rbx; 
0x0000000000023367: sub rsp, 8; mov eax, 0x123; mov rdx, rdi; syscall; 
0x0000000000023607: sub rsp, 8; mov eax, 0x126; mov rdx, rdi; syscall; 
0x0000000000074d14: sub rsp, 8; mov eax, 0x16; syscall; 
0x0000000000059e44: sub rsp, 8; mov eax, 0x18; syscall; 
0x00000000000435e4: sub rsp, 8; mov eax, 0x1b; syscall; 
0x000000000004f9c4: sub rsp, 8; mov eax, 0x3b; syscall; 
0x0000000000042f74: sub rsp, 8; mov eax, 0x3f; syscall; 
0x00000000000221a4: sub rsp, 8; mov eax, 0x43; syscall; 
0x0000000000075474: sub rsp, 8; mov eax, 0x4c; syscall; 
0x0000000000074244: sub rsp, 8; mov eax, 0x50; syscall; 
0x0000000000060d64: sub rsp, 8; mov eax, 0x52; syscall; 
0x00000000000750c4: sub rsp, 8; mov eax, 0x54; syscall; 
0x0000000000074c14: sub rsp, 8; mov eax, 0x56; syscall; 
0x0000000000060d34: sub rsp, 8; mov eax, 0x57; syscall; 
0x0000000000075384: sub rsp, 8; mov eax, 0x58; syscall; 
0x0000000000024114: sub rsp, 8; mov eax, 0x63; syscall; 
0x0000000000075204: sub rsp, 8; mov eax, 0x70; syscall; 
0x0000000000041214: sub rsp, 8; mov eax, 0x76; syscall; 
0x00000000000411f4: sub rsp, 8; mov eax, 0x78; syscall; 
0x0000000000023254: sub rsp, 8; mov eax, 0x7d; syscall; 
0x0000000000023234: sub rsp, 8; mov eax, 0x7e; syscall; 
0x000000000005b4f4: sub rsp, 8; mov eax, 0x7f; mov esi, 8; syscall; 
0x0000000000023a54: sub rsp, 8; mov eax, 0x87; syscall; 
0x0000000000043604: sub rsp, 8; mov eax, 0x95; syscall; 
0x0000000000043874: sub rsp, 8; mov eax, 0x96; syscall; 
0x0000000000043894: sub rsp, 8; mov eax, 0x98; syscall; 
0x0000000000024214: sub rsp, 8; mov eax, 0x99; syscall; 
0x0000000000023a74: sub rsp, 8; mov eax, 0x9b; syscall; 
0x0000000000023274: sub rsp, 8; mov eax, 0xa1; syscall; 
0x00000000000741b4: sub rsp, 8; mov eax, 0xa3; syscall; 
0x00000000000239b4: sub rsp, 8; mov eax, 0xa6; xor esi, esi; syscall; 
0x00000000000240a4: sub rsp, 8; mov eax, 0xa8; syscall; 
0x0000000000023eb4: sub rsp, 8; mov eax, 0xaa; syscall; 
0x0000000000042734: sub rsp, 8; mov eax, 0xab; syscall; 
0x0000000000023954: sub rsp, 8; mov eax, 0xaf; syscall; 
0x00000000000243f4: sub rsp, 8; mov eax, 0xc5; syscall; 
0x0000000000024414: sub rsp, 8; mov eax, 0xc6; syscall; 
0x0000000000019a74: sub rsp, 8; mov edi, 0x53; call 0x19ae0; add rsp, 8; ret; 
0x0000000000019a94: sub rsp, 8; mov edi, 0x54; call 0x19ae0; add rsp, 8; ret; 
0x000000000005c284: sub rsp, 8; mov edi, edi; mov eax, 0x5f; syscall; 
0x0000000000023dc4: sub rsp, 8; mov edi, edi; mov eax, 0x7a; syscall; 
0x0000000000023da4: sub rsp, 8; mov edi, edi; mov eax, 0x7b; syscall; 
0x0000000000023504: sub rsp, 8; mov edi, edi; mov esi, esi; mov eax, 0x12c; syscall; 
0x0000000000023928: sub rsp, 8; mov edx, edx; mov eax, 0x145; syscall; 
0x0000000000023904: sub rsp, 8; mov esi, esi; mov eax, 0x13f; syscall; 
0x000000000005bf54: sub rsp, 8; mov esi, esi; mov eax, 0x53; syscall; 
0x000000000005b9b4: sub rsp, 8; mov esi, esi; mov eax, 0x5a; syscall; 
0x000000000005bfd4: sub rsp, 8; mov esi, esi; mov eax, 0x85; syscall; 
0x0000000000023974: sub rsp, 8; mov esi, esi; mov eax, 0xb0; syscall; 
0x0000000000074264: sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5c; syscall; 
0x0000000000074bf4: sub rsp, 8; mov esi, esi; mov edx, edx; mov eax, 0x5e; syscall; 
0x0000000000023524: sub rsp, 8; mov esi, esi; movsxd rdi, edi; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x0000000000023994: sub rsp, 8; mov r10, rcx; mov eax, 0xa5; syscall; 
0x000000000005bff4: sub rsp, 8; mov r10, rcx; mov edx, edx; movsxd rdi, edi; mov eax, 0x103; syscall; 
0x0000000000024364: sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbc; syscall; 
0x0000000000024394: sub rsp, 8; mov r10, rcx; movsxd r8, r8d; mov eax, 0xbd; syscall; 
0x0000000000022124: sub rsp, 8; mov r10, rcx; movsxd rdi, edi; mov eax, 0xdc; syscall; 
0x00000000000239f4: sub rsp, 8; mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0x12f; syscall; 
0x00000000000243c4: sub rsp, 8; mov r10, rcx; movsxd rdi, edi; movsxd r8, r8d; mov eax, 0xbe; syscall; 
0x0000000000023d24: sub rsp, 8; mov r10, rcx; movsxd rdx, edx; movsxd r8, r8d; mov eax, 0xd8; syscall; 
0x0000000000075094: sub rsp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x108; syscall; 
0x0000000000024274: sub rsp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0x3d; syscall; 
0x0000000000023ca4: sub rsp, 8; mov r10, rcx; movsxd rdx, edx; movsxd rdi, edi; mov eax, 0xb3; syscall; 
0x00000000000234d4: sub rsp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11d; syscall; 
0x0000000000024184: sub rsp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x11e; syscall; 
0x0000000000023b94: sub rsp, 8; mov r10, rcx; movsxd rsi, esi; movsxd rdi, edi; mov eax, 0x12e; syscall; 
0x0000000000071e0b: sub rsp, 8; mov rax, qword ptr [rip + 0x425ba]; test rax, rax; je 0x71e26; call rax; 
0x0000000000059da4: sub rsp, 8; mov rdi, -0x26; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023214: sub rsp, 8; mov rdi, -0xc; call 0x21bc0; add rsp, 8; ret; 
0x000000000005bc10: sub rsp, 8; mov rdi, -9; call 0x21bc0; add rsp, 8; ret; 
0x000000000006d579: sub rsp, 8; mov rdi, qword ptr [rdi + 8]; call qword ptr [rax]; 
0x0000000000023df5: sub rsp, 8; mov rdi, qword ptr [rdi]; mov rsi, qword ptr [rbx + 8]; syscall; 
0x000000000006b3c4: sub rsp, 8; mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5413; syscall; 
0x000000000006b454: sub rsp, 8; mov rdx, rsi; movsxd rdi, edi; mov eax, 0x10; mov esi, 0x5414; syscall; 
0x00000000000688e4: sub rsp, 8; mov rdx, rsi; xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x00000000000241d4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x110; syscall; 
0x00000000000241b4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x11f; syscall; 
0x00000000000240f4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x132; syscall; 
0x00000000000742f4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x20; syscall; 
0x000000000005ac04: sub rsp, 8; movsxd rdi, edi; mov eax, 0x24; syscall; 
0x000000000005adf4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x26; syscall; 
0x0000000000022104: sub rsp, 8; movsxd rdi, edi; mov eax, 0x41; syscall; 
0x0000000000074864: sub rsp, 8; movsxd rdi, edi; mov eax, 0x4d; syscall; 
0x00000000000412e4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x62; syscall; 
0x00000000000749c4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x73; syscall; 
0x0000000000074b04: sub rsp, 8; movsxd rdi, edi; mov eax, 0x79; syscall; 
0x0000000000074b54: sub rsp, 8; movsxd rdi, edi; mov eax, 0x7c; syscall; 
0x0000000000059c84: sub rsp, 8; movsxd rdi, edi; mov eax, 0x92; syscall; 
0x0000000000059ca4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x93; syscall; 
0x0000000000059de4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x94; syscall; 
0x0000000000043624: sub rsp, 8; movsxd rdi, edi; mov eax, 0x97; syscall; 
0x00000000000231f4: sub rsp, 8; movsxd rdi, edi; mov eax, 0x9e; syscall; 
0x00000000000236d4: sub rsp, 8; movsxd rdi, edi; mov eax, 0xac; syscall; 
0x0000000000024434: sub rsp, 8; movsxd rdi, edi; mov eax, 0xc7; syscall; 
0x0000000000059b54: sub rsp, 8; movsxd rdi, edi; mov eax, 0xcb; syscall; 
0x0000000000071f24: sub rsp, 8; movsxd rdi, edi; mov eax, 0xe3; syscall; 
0x0000000000071d84: sub rsp, 8; movsxd rdi, edi; mov eax, 0xe5; syscall; 
0x0000000000043e34: sub rsp, 8; movsxd rdi, edi; mov eax, 0xf5; syscall; 
0x0000000000043ac4: sub rsp, 8; movsxd rdi, edi; mov eax, 3; syscall; 
0x0000000000023f87: sub rsp, 8; movsxd rdi, edi; mov edx, 8; mov eax, 0x121; syscall; 
0x000000000005bf74: sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0x102; syscall; 
0x0000000000023654: sub rsp, 8; movsxd rdi, edi; mov edx, edx; mov eax, 0xfe; syscall; 
0x00000000000411c4: sub rsp, 8; movsxd rdi, edi; mov esi, esi; mov eax, 0x8c; syscall; 
0x0000000000042754: sub rsp, 8; movsxd rdi, edi; mov esi, esi; movsxd rdx, edx; mov eax, 0x8d; syscall; 
0x00000000000240c4: sub rsp, 8; movsxd rdi, edi; mov r10d, ecx; mov eax, 0x115; syscall; 
0x0000000000075664: sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x107; syscall; 
0x0000000000023a24: sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x130; syscall; 
0x00000000000236f4: sub rsp, 8; movsxd rdi, edi; movsxd rdx, edx; mov eax, 0x67; syscall; 
0x0000000000024154: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x11b; syscall; 
0x0000000000023ed4: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x134; syscall; 
0x0000000000022174: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x1f; syscall; 
0x000000000005ac24: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x3e; syscall; 
0x0000000000021f64: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x44; syscall; 
0x0000000000021f34: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x47; syscall; 
0x0000000000023554: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x49; syscall; 
0x0000000000075144: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0x6d; syscall; 
0x0000000000023684: sub rsp, 8; movsxd rdi, edi; movsxd rsi, esi; mov eax, 0xff; syscall; 
0x00000000000435c4: sub rsp, 8; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x00000000000236b4: sub rsp, 8; movsxd rdx, edx; mov eax, 0xad; syscall; 
0x00000000000753a4: sub rsp, 8; movsxd rsi, esi; mov eax, 0x10a; syscall; 
0x0000000000074194: sub rsp, 8; movsxd rsi, esi; mov eax, 0x15; syscall; 
0x00000000000239d4: sub rsp, 8; movsxd rsi, esi; mov eax, 0xa6; syscall; 
0x0000000000024084: sub rsp, 8; movsxd rsi, esi; mov eax, 0xa7; syscall; 
0x0000000000023434: sub rsp, 8; movsxd rsi, esi; mov edi, edi; mov eax, 0x122; syscall; 
0x000000000005c051: sub rsp, 8; rep stosq qword ptr [rdi], rax; mov eax, 0x89; mov rdi, r8; syscall; 
0x000000000005c081: sub rsp, 8; rep stosq qword ptr [rdi], rax; movsxd rdi, r8d; mov eax, 0x8a; syscall; 
0x000000000004c480: sub rsp, 8; syscall; 
0x0000000000023294: sub rsp, 8; test edi, edi; je 0x232b8; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x0000000000045089: sub rsp, 8; xor edx, edx; call 0x44bc0; add rsp, 8; ret; 
0x0000000000039a11: subps xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x000000000002d165: subps xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x0000000000039ba1: subps xmm0, xmm0; divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x000000000002d175: subps xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002f0bf: subps xmm0, xmm1; ret; 
0x0000000000031935: subps xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031f7d: subps xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000335d6: subps xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x00000000000167c6: subps xmm0, xmm2; ret; 
0x00000000000366db: subps xmm0, xmm4; mulsd xmm0, qword ptr [rip + 0x7797a]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000036f7f: subps xmm0, xmm4; mulss xmm0, dword ptr [rip + 0x79dfe]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000003366f: subps xmm0, xmm4; ret; 
0x0000000000033309: subps xmm0, xmm5; ret; 
0x000000000002ce4d: subps xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x000000000004eefb: subps xmm0, xmmword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000003cc39: subps xmm0, xmmword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x000000000003cced: subps xmm0, xmmword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x00000000000354e5: subps xmm0, xmmword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x00000000000338e1: subps xmm0, xmmword ptr [rip + 0x7a518]; ret; 
0x0000000000035d49: subps xmm0, xmmword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000030ac1: subps xmm1, xmm0; cmp eax, 0x3fe; jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338c1: subps xmm1, xmm0; cmp eax, 0x3fe; jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030758: subps xmm1, xmm0; divsd xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x00000000000316d3: subps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000031d22: subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f054: subps xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x0000000000017b87: subps xmm1, xmm1; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x000000000002f0bb: subps xmm1, xmm2; subss xmm0, xmm1; ret; 
0x0000000000039f1b: subps xmm1, xmm5; addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000039d39: subps xmm1, xmm6; movapd xmm0, xmm1; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x0000000000033699: subps xmm2, xmm0; addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x00000000000319da: subps xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003200a: subps xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x000000000003193d: subps xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x0000000000031f85: subps xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000002ce49: subps xmm2, xmm1; subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000033249: subps xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x000000000003347c: subps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x000000000003195d: subps xmm2, xmmword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031fa5: subps xmm2, xmmword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x000000000002cea5: subps xmm2, xmmword ptr [rip + 0x81114]; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000319ad: subps xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000031fe5: subps xmm3, xmm1; movaps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000033478: subps xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000033331: subps xmm4, xmm0; addsd xmm4, xmm4; addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003331a: subps xmm4, xmm0; addsd xmm4, xmm5; movq xmm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000003545f: subps xmm4, xmm0; mulsd xmm4, xmm2; mulsd xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x0000000000035cdd: subps xmm4, xmm0; mulss xmm4, xmm2; mulss xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x000000000003324d: subps xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000039d79: subps xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000002e7c9: subps xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000002e7c1: subps xmm5, xmm1; subsd xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003319d: subps xmm5, xmm3; movapd xmm0, xmm5; movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000002e7c5: subps xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003972c: subps xmm6, xmm0; addsd xmm5, xmm6; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000004eefa: subsd xmm0, qword ptr [rip + 0x5eefe]; add rsp, 8; ret; 
0x000000000003cc38: subsd xmm0, qword ptr [rip + 0x711c0]; test rdx, rdx; js 0x3cc8b; ret; 
0x00000000000354e4: subsd xmm0, qword ptr [rip + 0x794bc]; add rsp, 0x28; ret; 
0x00000000000338e0: subsd xmm0, qword ptr [rip + 0x7a518]; ret; 
0x0000000000039a10: subsd xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x000000000002d164: subsd xmm0, xmm0; divsd xmm0, xmm0; ret; 
0x000000000003a784: subsd xmm0, xmm1; ret; 
0x0000000000031934: subsd xmm0, xmm2; addsd xmm1, xmm0; subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x00000000000167c5: subsd xmm0, xmm2; ret; 
0x00000000000366da: subsd xmm0, xmm4; mulsd xmm0, qword ptr [rip + 0x7797a]; addsd xmm0, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000033308: subsd xmm0, xmm5; ret; 
0x000000000002ce4c: subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000030ac0: subsd xmm1, xmm0; cmp eax, 0x3fe; jg 0x30aa8; movsd xmm0, qword ptr [rip + 0x7d8fd]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x00000000000338c0: subsd xmm1, xmm0; cmp eax, 0x3fe; jg 0x338a8; movsd xmm0, qword ptr [rip + 0x7a735]; movsd qword ptr [rsp - 8], xmm1; ret; 
0x0000000000030757: subsd xmm1, xmm0; divsd xmm1, xmm3; mulsd xmm1, xmm0; addsd xmm0, xmm1; ret; 
0x00000000000316d2: subsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000017b86: subsd xmm1, xmm1; movapd xmm0, xmm1; add rsp, 0x10; pop rbx; ret; 
0x0000000000039d38: subsd xmm1, xmm6; movapd xmm0, xmm1; addsd xmm0, xmm4; addsd xmm0, xmm5; ret; 
0x000000000003195c: subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x000000000002cea4: subsd xmm2, qword ptr [rip + 0x81114]; mulsd xmm0, xmm2; addsd xmm0, xmm1; cvtsd2ss xmm0, xmm0; ret; 
0x00000000000319d9: subsd xmm2, xmm0; movapd xmm0, xmm2; ret; 
0x000000000003193c: subsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000002ce48: subsd xmm2, xmm1; subsd xmm0, xmm7; addsd xmm0, xmm2; addsd xmm0, xmm6; ret; 
0x0000000000033248: subsd xmm2, xmm1; subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x00000000000319ac: subsd xmm3, xmm1; movapd xmm2, xmm3; movapd xmm0, xmm2; ret; 
0x0000000000033330: subsd xmm4, xmm0; addsd xmm4, xmm4; addsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x0000000000033319: subsd xmm4, xmm0; addsd xmm4, xmm5; movq xmm5, rdx; movapd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000003545e: subsd xmm4, xmm0; mulsd xmm4, xmm2; mulsd xmm1, xmm3; addsd xmm1, xmm4; movapd xmm0, xmm1; ret; 
0x000000000003324c: subsd xmm4, xmm2; movapd xmm0, xmm4; ret; 
0x0000000000039d78: subsd xmm4, xmm4; movapd xmm0, xmm4; divsd xmm0, qword ptr [rip + 0x74098]; ret; 
0x000000000002e7c8: subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000002e7c0: subsd xmm5, xmm1; subsd xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003319c: subsd xmm5, xmm3; movapd xmm0, xmm5; movq xmm5, rdx; addsd xmm0, xmm4; mulsd xmm0, xmm5; ret; 
0x000000000002e7c4: subsd xmm5, xmm3; subsd xmm4, xmm5; movapd xmm0, xmm4; ret; 
0x000000000003972b: subsd xmm6, xmm0; addsd xmm5, xmm6; addsd xmm1, xmm5; addsd xmm2, xmm1; addsd xmm0, xmm2; ret; 
0x000000000003ccec: subss xmm0, dword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x0000000000035d48: subss xmm0, dword ptr [rip + 0x7b024]; add rsp, 0x18; ret; 
0x0000000000039ba0: subss xmm0, xmm0; divss xmm0, dword ptr [rip + 0x75924]; ret; 
0x000000000002d174: subss xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000002f0be: subss xmm0, xmm1; ret; 
0x0000000000031f7c: subss xmm0, xmm2; addss xmm1, xmm0; subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x00000000000335d5: subss xmm0, xmm2; mulss xmm0, dword ptr [rip + 0x7bee3]; ret; 
0x0000000000036f7e: subss xmm0, xmm4; mulss xmm0, dword ptr [rip + 0x79dfe]; addss xmm0, dword ptr [rsp + 4]; add rsp, 0x18; ret; 
0x000000000003366e: subss xmm0, xmm4; ret; 
0x0000000000031d21: subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x000000000002f053: subss xmm1, xmm0; pxor xmm0, xmm0; divss xmm0, xmm1; ret; 
0x000000000002f0ba: subss xmm1, xmm2; subss xmm0, xmm1; ret; 
0x0000000000039f1a: subss xmm1, xmm5; addss xmm1, xmm3; movaps xmm0, xmm1; addss xmm0, xmm6; ret; 
0x0000000000031fa4: subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x0000000000033698: subss xmm2, xmm0; addss xmm2, xmm2; addss xmm2, xmm4; movaps xmm0, xmm2; ret; 
0x0000000000032009: subss xmm2, xmm0; movaps xmm0, xmm2; ret; 
0x0000000000031f84: subss xmm2, xmm1; movaps xmm0, xmm2; ret; 
0x000000000003347b: subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000031fe4: subss xmm3, xmm1; movaps xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000033477: subss xmm3, xmm1; subss xmm2, xmm3; movaps xmm0, xmm2; ret; 
0x0000000000035cdc: subss xmm4, xmm0; mulss xmm4, xmm2; mulss xmm1, xmm3; addss xmm1, xmm4; movaps xmm0, xmm1; ret; 
0x0000000000015a42: syscall; 
0x000000000005d576: syscall; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000023fcb: syscall; and r8d, 0x800; jne 0x23ff0; call 0x21bc0; add rsp, 8; ret; 
0x000000000005c8d0: syscall; cmp rax, -0x26; je 0x5c8e0; ret; 
0x000000000005f74f: syscall; cmp rax, -0x26; je 0x5f790; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b0d: syscall; cmp rax, -0x26; je 0x60b50; mov eax, r8d; pop rbx; ret; 
0x000000000006c700: syscall; cmp rax, -0x26; je 0x6c710; xor eax, eax; ret; 
0x000000000006c82e: syscall; cmp rax, -0x26; je 0x6c840; xor eax, eax; ret; 
0x000000000006d1db: syscall; cmp rax, -0x26; je 0x6d1f8; ret; 
0x000000000006d24b: syscall; cmp rax, -0x26; je 0x6d260; add rsp, 8; ret; 
0x000000000007b3cb: syscall; hlt; ret; 
0x0000000000023e43: syscall; mov dword ptr [rbx + 0x10], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000005f796: syscall; mov eax, r8d; add rsp, 8; ret; 
0x0000000000060b56: syscall; mov eax, r8d; pop rbx; ret; 
0x000000000005b817: syscall; mov eax, r8d; ret; 
0x000000000002340f: syscall; mov ecx, eax; movsxd rdi, ecx; call 0x21bc0; add rsp, 8; ret; 
0x0000000000023454: syscall; mov edx, eax; movsxd rdi, edx; call 0x21bc0; add rsp, 8; ret; 
0x000000000006d546: syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x0000000000021f73: syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000021f43: syscall; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000042797: syscall; neg eax; mov dword ptr [rsi + 0x14], eax; ret; 
0x000000000001fbef: syscall; neg eax; ret; 
0x000000000005e696: syscall; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000000238f0: syscall; ret; 
0x0000000000043ee4: syscall; test eax, eax; js 0x43eeb; ret; 
0x000000000006c713: syscall; xor eax, eax; ret; 
0x0000000000041172: sysret; add byte ptr [rax - 0x7d], cl; ret 0x8302; 
0x000000000003fa64: test ah, 4; jne 0x3fa60; fstp st(1); ret; 
0x000000000003fb44: test ah, 4; jne 0x3fb40; fstp st(1); ret; 
0x0000000000044e6f: test ah, bh; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000002a35b: test al, 0; add byte ptr [rax], al; cmp rax, rdx; mov rdx, -1; cmove rax, rdx; ret; 
0x000000000001e69c: test al, 0; add byte ptr [rax], al; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000005b2f5: test al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000006c3ea: test al, 0; add byte ptr [rax], al; ret; 
0x00000000000240a9: test al, 0; add byte ptr [rax], al; syscall; 
0x000000000006c606: test al, 0; add byte ptr [rax], al; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000075cd6: test al, 0x4c; mov eax, eax; ret; 
0x0000000000050023: test al, 0x80; je 0x5003d; mov eax, 0x70; syscall; 
0x000000000004c4f2: test al, 0xb8; add byte ptr [rax], al; add byte ptr [rsi + 4], bh; mov edx, 0x800; syscall; 
0x000000000007aa8d: test al, 0xd9; ret; 
0x00000000000640a4: test al, 0xe8; jbe 0x64056; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000065df4: test al, 0xe8; xchg eax, ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000074693: test al, 0xfa; jmp qword ptr [rsi + 0x2e]; 
0x00000000000328c0: test al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000005005d: test al, 1; je 0x50097; mov eax, 0x68; syscall; 
0x000000000005b134: test al, 1; jne 0x5b16c; mov eax, 0x83; syscall; 
0x000000000005003d: test al, 2; je 0x5005d; movsxd rsi, dword ptr [rbp + 4]; mov eax, 0x6d; xor edi, edi; syscall; 
0x000000000005b130: test al, 2; je 0x5b150; test al, 1; jne 0x5b16c; mov eax, 0x83; syscall; 
0x0000000000069814: test al, 7; je 0x69828; cmp byte ptr [rax], 0; jne 0x69810; sub rax, rdi; ret; 
0x000000000002b26f: test al, al; jne 0x2b278; ret; 
0x0000000000045940: test al, al; jne 0x45920; sub rdx, rdi; lea eax, [rdx + 1]; ret; 
0x0000000000069455: test al, al; jne 0x69448; mov rax, r12; pop r12; ret; 
0x000000000006fc65: test al, al; jne 0x6fc70; xor eax, eax; ret; 
0x0000000000042dff: test al, ch; sbb eax, ecx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000007b0a5: test ax, ax; fld1; js 0x7b0b1; fscale; fstp st(1); ret; 
0x00000000000323dd: test ax, ax; je 0x323e4; fchs; add rsp, 0x18; ret; 
0x00000000000325ea: test ax, ax; je 0x32640; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x0000000000043f15: test bh, 0x80; jne 0x43f20; movzx eax, dil; ret; 
0x0000000000028e65: test bh, 1; je 0x28e70; xor eax, eax; ret; 
0x0000000000068a51: test bh, 7; je 0x68a60; test rdx, rdx; jne 0x68a40; xor eax, eax; ret; 
0x000000000006a111: test bh, bh; je 0x6a0e0; cmp dx, r8w; jne 0x6a100; pop rbp; ret; 
0x000000000006a0da: test bh, bh; jne 0x6a0c0; nop; xor eax, eax; pop rbp; ret; 
0x000000000006a7f2: test bh, dh; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x000000000005c729: test bl, ch; add dword ptr [rax], eax; mov esi, 0x88000; mov rax, r14; mov rdi, r13; syscall; 
0x000000000002fa51: test bx, bx; je 0x2fa58; fchs; add rsp, 0x40; pop rbx; ret; 
0x00000000000305c5: test bx, bx; je 0x305cc; fchs; add rsp, 0x30; pop rbx; ret; 
0x000000000003a8b2: test bx, bx; je 0x3a88c; fchs; pop rbx; ret; 
0x000000000003e78f: test bx, bx; jns 0x3e76d; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000003e768: test bx, bx; js 0x3e794; add rsp, 0x10; pop rbx; ret; 
0x00000000000220c5: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x40; syscall; 
0x000000000004275c: test byte ptr [rax + 0x63], 0xd2; mov eax, 0x8d; syscall; 
0x0000000000074331: test byte ptr [rax + 0x63], 0xf8; call 0x21bc0; add rsp, 8; ret; 
0x00000000000221d1: test byte ptr [rax + 0x63], 0xff; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x00000000000234dd: test byte ptr [rax + 0x63], 0xff; mov eax, 0x11d; syscall; 
0x000000000002418d: test byte ptr [rax + 0x63], 0xff; mov eax, 0x11e; syscall; 
0x0000000000023b9d: test byte ptr [rax + 0x63], 0xff; mov eax, 0x12e; syscall; 
0x0000000000023d89: test byte ptr [rax + 0x63], 0xff; mov eax, 0x28; syscall; 
0x000000000002204b: test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x00000000000233c0: test byte ptr [rax + 0x63], 0xff; mov eax, 0xe9; syscall; 
0x0000000000024136: test byte ptr [rax + 0x63], 0xff; mov r10d, ecx; mov eax, 0x114; syscall; 
0x000000000007431a: test byte ptr [rax + 0x63], 0xff; mov r8d, 0x21; nop dword ptr [rax]; mov rax, r8; syscall; 
0x000000000004c3c0: test byte ptr [rax + 0x63], 0xff; mov r8d, r8d; xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000023529: test byte ptr [rax + 0x63], 0xff; movsxd r10, ecx; mov eax, 0x12d; syscall; 
0x0000000000047e90: test byte ptr [rax + 0x63], 0xff; xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000001f94f: test byte ptr [rax + rax - 0x3f7b0000], ah; js 0x1f962; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000006767b: test byte ptr [rax + rax], 0x5b; pop rbp; pop r12; ret; 
0x0000000000056cec: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x00000000000703d2: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 2], bh; syscall; 
0x0000000000059291: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rbx + 0x31e8f7e2], al; call 0x634e92a0; ret; 
0x0000000000023754: test byte ptr [rax + rbx], ah; add dword ptr [rax], eax; add byte ptr [rax + 0x144], bh; syscall; 
0x0000000000058b67: test byte ptr [rax + rcx - 0x72b70000], bh; push rax; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000004302b: test byte ptr [rax + rcx*8], ah; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; ret 2; 
0x000000000007a0d2: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000055177: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rbp - 0x7b], al; in al, 0xf; xchg eax, ebp; ret 0x8341; 
0x0000000000019bff: test byte ptr [rax + rdx*8], ah; add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1e0], eax; movups xmmword ptr [rsp + 0x1f0], xmm0; syscall; 
0x0000000000052ab7: test byte ptr [rax - 0x3f], 0xe6; add ebp, eax; outsd dx, dword ptr [rsi]; and eax, 0x8948fffc; ret 0x8548; 
0x0000000000042136: test byte ptr [rax - 0x73], 0x54; and al, 4; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x000000000001ac1a: test byte ptr [rax - 0x73], 0x70; add eax, 0x8906b60f; ret 0xf883; 
0x0000000000019a3b: test byte ptr [rax - 0x73], 5; mov ebp, 0x48000625; movsx eax, word ptr [rax + rsi*2]; ret; 
0x000000000002876c: test byte ptr [rax - 0x77000000], bh; ret 0xc085; 
0x000000000005c870: test byte ptr [rax - 0x77], 0xd8; syscall; 
0x000000000005eda3: test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbx + 0x48]; 
0x000000000005ef37: test byte ptr [rax - 0x77], 0xdf; call rax; 
0x000000000005c9f0: test byte ptr [rax - 0x77], 0xef; call qword ptr [rbp + 0x48]; 
0x0000000000059d4b: test byte ptr [rax - 0x77], 0xef; call rax; 
0x0000000000071e76: test byte ptr [rax - 0x77], 0xef; syscall; 
0x0000000000070baa: test byte ptr [rax - 0x7d], 0xc7; add dh, byte ptr [rcx]; ror byte ptr [rcx - 0x77], 0x38; add r9, rax; mov byte ptr [r9], 0; ret; 
0x0000000000049156: test byte ptr [rax], 0; add byte ptr [rax - 0x7d], cl; ret 0x3901; 
0x0000000000070031: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000019c07: test byte ptr [rax], ah; add dword ptr [rax], eax; add byte ptr [rdi], cl; adc dword ptr [rsp + 0x1f0], eax; syscall; 
0x000000000003ab0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; addsd xmm2, xmm1; movapd xmm0, xmm2; ret; 
0x000000000003ab4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; addsd xmm2, xmm2; movsd qword ptr [rsp - 0x10], xmm2; ret; 
0x0000000000032eca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; addss xmm0, xmm0; ret; 
0x0000000000034a0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; addss xmm0, xmm1; add rsp, 0x18; ret; 
0x000000000004bc6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; lea rax, [rip + 0x692a5]; ret; 
0x0000000000022bfa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0x1000; ret; 
0x0000000000073d6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0x64; syscall; 
0x00000000000414ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movsx eax, byte ptr [rip + 0x733b7]; ret; 
0x000000000002306a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000002303a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x000000000003263a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; fmul st(0); add rsp, 0x28; ret; 
0x000000000004f09a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [r8], edi; ret; 
0x000000000006effa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xb; ret; 
0x0000000000043f4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000001e04a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000004506a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x0000000000015b9a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov esi, 1; mov rax, r8; syscall; 
0x000000000006d25a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; syscall; 
0x0000000000028ffa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000007438a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdx; mov rsi, r8; syscall; 
0x00000000000355fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsd xmm0, qword ptr [rip + 0x787f8]; divsd xmm0, xmm1; ret; 
0x000000000004056a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsx rax, byte ptr [rip + 0x7430a]; ret; 
0x000000000005028a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsxd rdi, dword ptr [r8 + 0x14]; mov rax, r10; syscall; 
0x0000000000048fea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi + 1]; and eax, 0xf; ret; 
0x000000000003a44a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mulsd xmm0, xmm0; ret; 
0x0000000000018445: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000023007: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; ret; 
0x000000000001f769: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; ret; 
0x000000000005ca2a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000003462a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000004861a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; shl edi, 8; or eax, edi; ret; 
0x0000000000039a0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; subsd xmm0, xmm0; divsd xmm0, qword ptr [rip + 0x74404]; ret; 
0x00000000000432eb: test byte ptr [rax], bl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x0000000000062ffb: test byte ptr [rax], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000000748ae: test byte ptr [rbp - 0x48000000], dl; add byte ptr [r8], r8b; add byte ptr [rcx + rcx*4 - 0x19], cl; syscall; 
0x0000000000042b26: test byte ptr [rbp - 0x77000000], ah; ret 0xe283; 
0x0000000000074d40: test byte ptr [rbx - 0x77000000], bl; mov eax, 0x125; movsxd rsi, esi; syscall; 
0x000000000005657a: test byte ptr [rcx + rcx*4 - 0x11], 0xe8; in eax, dx; ret 0xffff; 
0x00000000000599bb: test byte ptr [rcx + rcx*4 - 0x19], 0xe8; in eax, dx; sbb byte ptr [rdx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000006c329: test byte ptr [rcx + rcx*4 - 0x20], 0x48; mov edx, ebp; syscall; 
0x000000000006fc81: test byte ptr [rcx + rcx*4 - 0x40], 0x48; and esi, 0xffffff80; add rsi, 0x81; syscall; 
0x0000000000057031: test byte ptr [rcx + rcx], bl; add byte ptr [rcx - 0x75], al; or al, 0x39; ret; 
0x0000000000055eac: test byte ptr [rdi + 0x3c000002], bh; sub ecx, dword ptr [rdi]; xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000001d63d: test byte ptr [rdi + rcx*4], ah; add dword ptr [rax], eax; add byte ptr [rcx - 0x3a], al; push rsi; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000054045: test byte ptr [rdi*8 - 0x74b70001], dl; jl 0x54072; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000004c8eb: test byte ptr [rdi], 0x84; ret 2; 
0x0000000000065933: test byte ptr [rdi], 0x84; ret; 
0x00000000000748ac: test byte ptr [rdi], 0x84; xchg eax, ebp; add byte ptr [rax], al; add byte ptr [rax + 0x4f], bh; mov rdi, r12; syscall; 
0x0000000000021d59: test byte ptr [rdi], 0x94; ret 0x8548; 
0x0000000000060ecb: test byte ptr [rdi], 0x94; ret 0xd201; 
0x000000000006e9d5: test byte ptr [rdi], 0x95; ret; 
0x000000000005d079: test byte ptr [rdi], 4; jne 0x5d088; xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x00000000000239be: test byte ptr [rdi], 5; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000238ef: test byte ptr [rdi], 5; ret; 
0x000000000005d099: test byte ptr [rdi], 8; jne 0x5d0a8; xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x0000000000041c0c: test byte ptr [rdi], bl; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000032c59: test byte ptr [rdx + 0x66000000], al; movd mm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x000000000001ed13: test byte ptr [rdx + 6], 0x20; je 0x1ed24; mov rax, r9; syscall; 
0x000000000005bad9: test byte ptr [rdx - 0x48000000], dl; add dword ptr [rcx], eax; add byte ptr [rax], al; mov edx, 0x2a0100; syscall; 
0x000000000002fe41: test byte ptr [rdx - 0x73000000], dl; xchg eax, ecx; add byte ptr [rax], al; add byte ptr [rcx + rdi], al; ret 0x5872; 
0x0000000000077731: test byte ptr [rdx], dl; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000001ce61: test byte ptr [rsi + rax - 0x7cb80000], bh; ret 0x4801; 
0x0000000000077042: test byte ptr [rsi + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000005c2e6: test ch, dl; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x32], cl; mov rdx, r8; syscall; 
0x0000000000043794: test cl, 2; jne 0x437c8; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x0000000000069a0a: test cl, al; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x0000000000042362: test cl, cl; add dword ptr [rax], eax; add byte ptr [rax + 0x29], cl; ret 0x894c; 
0x00000000000704b1: test cl, cl; cmovne eax, edx; ret; 
0x0000000000069a09: test cl, r8b; jne 0x699e0; movzx eax, dl; sub eax, esi; ret; 
0x000000000003cdf0: test cx, cx; jns 0x3cdb0; fchs; ret; 
0x000000000003cdab: test cx, cx; js 0x3cdf5; ret; 
0x0000000000043db3: test dh, 0x40; jne 0x43de0; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000002b145: test dh, ah; add byte ptr [rax], al; add byte ptr [rcx - 0x4ef00f30], cl; sbb al, 0x39; ret 0xc375; 
0x000000000006a03f: test dh, dh; jne 0x6a048; pop rbp; ret; 
0x0000000000043f14: test dil, 0x80; jne 0x43f20; movzx eax, dil; ret; 
0x0000000000028e64: test dil, 1; je 0x28e70; xor eax, eax; ret; 
0x0000000000068a50: test dil, 7; je 0x68a60; test rdx, rdx; jne 0x68a40; xor eax, eax; ret; 
0x000000000006a110: test dil, dil; je 0x6a0e0; cmp dx, r8w; jne 0x6a100; pop rbp; ret; 
0x000000000006a0d9: test dil, dil; jne 0x6a0c0; nop; xor eax, eax; pop rbp; ret; 
0x000000000006a7f1: test dil, sil; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x000000000006c538: test dl, dl; je 0x6c540; ret; 
0x00000000000690ee: test dl, dl; jne 0x690e0; ret; 
0x0000000000069499: test dl, dl; jne 0x69488; xor eax, eax; sub eax, ecx; ret; 
0x000000000006c409: test dl, dl; jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c54c: test dl, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x0000000000061fb6: test dword ptr [rax + 0x39], 0x8c8d0fd1; add eax, 0x908d0000; add byte ptr [rax + 2], al; add byte ptr [rax + 0x63], cl; ret 0xd189; 
0x000000000001f9d5: test dword ptr [rax + 0x48000000], ecx; add esp, 0x68; ret; 
0x0000000000021617: test dword ptr [rax + 0x75000000], edi; ret 0x8948; 
0x000000000006be77: test dword ptr [rax + rax], eax; xor eax, eax; pop rbx; ret; 
0x000000000005bc94: test dword ptr [rax - 0x48000000], ebx; add byte ptr [rax], al; add byte ptr [rsi + 1], bh; syscall; 
0x000000000006aa2b: test dword ptr [rax - 0x73], 0x39481104; ret; 
0x0000000000022e27: test dword ptr [rax - 0x76b7fffd], esi; add eax, 0x93f46; add rsp, 8; ret; 
0x00000000000482ec: test dword ptr [rax - 0x7d], 0x834810c5; ret; 
0x0000000000069519: test dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000005bfdb: test dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000002b0b3: test dword ptr [rax], ecx; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000069518: test dword ptr [rbp + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000039e06: test dword ptr [rbp + 1], ecx; add byte ptr [rax], al; divss xmm2, dword ptr [rip + 0x756bd]; movaps xmm0, xmm2; ret; 
0x0000000000066cd0: test dword ptr [rbp - 0x73], 0x56e81e2c; sbb eax, 0x85480000; sal byte ptr [rcx + rcx + 0x48], 0x89; ret; 
0x000000000005c3b3: test dword ptr [rcx + 0x48000000], eax; add esp, 0x38; pop rbx; pop rbp; ret; 
0x000000000003e18b: test dword ptr [rcx + 0x48000000], ebx; add esp, 0x58; ret; 
0x0000000000066be0: test dword ptr [rcx + 0x48000000], ecx; add esp, 0x118; ret; 
0x000000000002d383: test dword ptr [rcx + 4], esp; add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000001a7fb: test dword ptr [rcx - 0x73], 0x83410872; ret 0x4101; 
0x000000000007722a: test dword ptr [rcx - 0x77], 0x340de8f6; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000032b01: test dword ptr [rdi + 0x48000000], eax; add esp, 0x48; ret; 
0x0000000000071ac5: test dword ptr [rdi + 0x48000000], edi; add esp, 0x18; ret; 
0x0000000000041538: test dword ptr [rdi + 0x48000000], edx; add esp, 0x30; pop rbx; ret; 
0x000000000006d06d: test dword ptr [rdi + rdi*8 - 1], edx; dec dword ptr [rcx + rcx*4 - 0x40]; mov rsi, rdx; syscall; 
0x000000000004cdea: test dword ptr [rdi - 0x14000003], ebx; mov gs, eax; sub ah, byte ptr [rcx]; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000050128: test dword ptr [rdi], 0x801f; add byte ptr [rax], al; mov rax, r8; syscall; 
0x000000000005bc92: test dword ptr [rdi], 0x9885; add byte ptr [rax + 0x48], bh; mov esi, 1; syscall; 
0x00000000000232bf: test dword ptr [rdi], 0xc7894805; call 0x21bc0; add rsp, 8; ret; 
0x0000000000036f9d: test dword ptr [rdi], eax; add bl, dh; divps xmm0, xmm1; ret; 
0x00000000000589c4: test dword ptr [rdi], ecx; or al, byte ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000006e9b1: test dword ptr [rdx + 0x44000000], edi; mov esi, esp; mov eax, 0xca; or esi, 7; syscall; 
0x000000000002a677: test dword ptr [rdx + rax - 0x76b80000], esp; ret 0x8948; 
0x0000000000049689: test dword ptr [rip + 0x48000001], eax; add esp, 0x118; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000005103c: test dword ptr [rip + 0x48000002], edx; add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000000589e6: test dword ptr [rip - 0x9ffffff], eax; ret 0xf10; 
0x000000000006cddd: test dword ptr [rsi + 0x4cfffffc], eax; mov eax, eax; mov rsi, rdx; syscall; 
0x000000000003e372: test dword ptr [rsi + 1], esi; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000019b66: test dword ptr [rsi + 1], esp; add byte ptr [rax], al; add rsp, 0x210; pop rbx; ret; 
0x000000000001f665: test dword ptr [rsi + 9], 0x1c894800; ret 0x8d48; 
0x00000000000335a7: test dword ptr [rsi + rdi*8 - 1], eax; dec dword ptr [rdi]; sub al, cl; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000002b465: test dword ptr [rsi - 0x46000000], eax; or al, 0; add byte ptr [rax], al; mov rdi, rbx; mov rax, rdx; syscall; 
0x0000000000039bed: test dword ptr [rsi - 0xdffffff], eax; divps xmm2, xmmword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000005a660: test eax, 0x1f0ffffb; add byte ptr [rax], r8b; ret; 
0x0000000000075213: test eax, 0x48fffac9; add esp, 8; ret; 
0x0000000000043613: test eax, 0x48fffde5; add esp, 8; ret; 
0x0000000000039f70: test eax, 0x7f800000; jne 0x39f29; movaps xmm1, xmm0; mulss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x000000000006ef1c: test eax, 0xfffffffb; je 0x6eed0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006efac: test eax, 0xfffffffb; je 0x6ef70; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000002a253: test eax, eax; cmove rax, rdx; ret; 
0x00000000000702b2: test eax, eax; cmovne eax, edx; add rsp, 8; ret; 
0x000000000006f024: test eax, eax; cmovne eax, edx; ret; 
0x00000000000411e3: test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x000000000006f68b: test eax, eax; cmovs eax, edx; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000007b0a6: test eax, eax; fld1; js 0x7b0b1; fscale; fstp st(1); ret; 
0x0000000000016296: test eax, eax; je 0x162c8; cmp eax, 2; jne 0x162a5; mov rdi, qword ptr [rbx]; call qword ptr [rbx + 0x10]; 
0x000000000001df82: test eax, eax; je 0x1df90; pop rbp; ret; 
0x000000000001e70d: test eax, eax; je 0x1e720; mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x0000000000028ff0: test eax, eax; je 0x29000; pop rbx; ret; 
0x000000000002cd4f: test eax, eax; je 0x2cd60; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x0000000000031950: test eax, eax; je 0x31990; movsd xmm2, qword ptr [rip + 0x7c9b4]; subsd xmm2, qword ptr [rip + 0x7cc4c]; movapd xmm0, xmm2; ret; 
0x0000000000031f98: test eax, eax; je 0x31fd0; movss xmm2, dword ptr [rip + 0x7eadc]; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x00000000000323de: test eax, eax; je 0x323e4; fchs; add rsp, 0x18; ret; 
0x00000000000325eb: test eax, eax; je 0x32640; fsubr dword ptr [rip + 0x7e48b]; add rsp, 0x28; ret; 
0x0000000000037b9f: test eax, eax; je 0x37bb0; pxor xmm0, xmm0; divss xmm0, xmm0; ret; 
0x000000000003cb4b: test eax, eax; je 0x3cb60; ret; 
0x000000000003cbb2: test eax, eax; je 0x3cbd0; ret; 
0x000000000003fdc7: test eax, eax; je 0x3fdd2; bsf rax, rax; add eax, 1; ret; 
0x000000000004a75c: test eax, eax; je 0x4a780; movsxd rdi, ebx; mov eax, 3; syscall; 
0x000000000004bc53: test eax, eax; je 0x4bc60; add rsp, 0x28; ret; 
0x0000000000059d44: test eax, eax; je 0x59d5a; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005a34a: test eax, eax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000005a385: test eax, eax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x000000000005cae0: test eax, eax; je 0x5cb50; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000005e380: test eax, eax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005f0d9: test eax, eax; je 0x5f0e4; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000607ef: test eax, eax; je 0x60850; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000006ba69: test eax, eax; je 0x6ba6f; call rax; 
0x000000000006bac4: test eax, eax; je 0x6baca; call rax; 
0x000000000006d50f: test eax, eax; je 0x6d530; mov eax, 0xda; mov rdi, rbp; syscall; 
0x000000000006ff93: test eax, eax; je 0x6ffa7; mov eax, 0xba; syscall; 
0x0000000000071e17: test eax, eax; je 0x71e26; call rax; 
0x0000000000075d68: test eax, eax; je 0x75d80; lea rsi, [rsp + 8]; call 0x222a0; add rsp, 0xd8; ret; 
0x00000000000786ab: test eax, eax; je 0x786c0; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000001f627: test eax, eax; jg 0x1f600; pop rbx; pop rbp; pop r12; ret; 
0x000000000004278a: test eax, eax; jg 0x4279e; movsxd rdi, dword ptr [rdi + 0x10]; mov eax, 0xa0; syscall; 
0x000000000004716c: test eax, eax; jle 0x47178; xor eax, eax; pop rbx; ret; 
0x0000000000015e3f: test eax, eax; jne 0x15e50; mov eax, r12d; pop r12; ret; 
0x000000000001e40d: test eax, eax; jne 0x1e418; pop rbp; ret; 
0x0000000000023406: test eax, eax; jne 0x23413; mov eax, 0xe8; syscall; 
0x00000000000253dd: test eax, eax; jne 0x253e8; pop rbp; ret; 
0x00000000000337aa: test eax, eax; jne 0x337b8; add rsp, 8; ret; 
0x0000000000034096: test eax, eax; jne 0x340a0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x00000000000341e6: test eax, eax; jne 0x341f0; fld xword ptr [rsp + 0x20]; pop rbx; ret; 
0x0000000000043fc8: test eax, eax; jne 0x43fd8; mov eax, 1; ret; 
0x000000000004ad5b: test eax, eax; jne 0x4ad50; pop rbx; ret; 
0x000000000004f42b: test eax, eax; jne 0x4f47f; mov eax, 0xba; mov rdx, qword ptr fs:[0]; syscall; 
0x0000000000050076: test eax, eax; jne 0x50112; mov eax, 0x66; syscall; 
0x000000000005b52e: test eax, eax; jne 0x5b540; mov eax, r12d; pop r12; ret; 
0x000000000005ce41: test eax, eax; jne 0x5ce80; lea rsi, [rsp + 7]; mov edx, 1; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000005dc5d: test eax, eax; jne 0x5dc68; pop rbp; ret; 
0x000000000005f053: test eax, eax; jne 0x5f040; ret; 
0x000000000006a4fa: test eax, eax; jne 0x6a4f0; xor eax, eax; pop rbx; ret; 
0x000000000006a54e: test eax, eax; jne 0x6a538; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x000000000006d17d: test eax, eax; jne 0x6d160; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000006e7ca: test eax, eax; jne 0x6e830; mov r8d, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000006f075: test eax, eax; jne 0x6f080; test ecx, ecx; js 0x6f080; xor eax, eax; ret; 
0x000000000006f624: test eax, eax; jne 0x6f620; lock cmpxchg dword ptr [rdi], edx; test eax, eax; jne 0x6f620; ret; 
0x000000000006f62c: test eax, eax; jne 0x6f620; ret; 
0x0000000000074432: test eax, eax; jne 0x74498; mov eax, 0x6b; syscall; 
0x0000000000075cd3: test eax, eax; jne 0x75c7f; mov rax, r8; ret; 
0x0000000000030b66: test eax, eax; jns 0x30b70; ret; 
0x000000000005cf5e: test eax, eax; jns 0x5cf70; and dword ptr [rdi], 0xffffffcf; pop rbp; ret; 
0x00000000000738a7: test eax, eax; jns 0x73878; mov edi, dword ptr [rcx + 0xa4]; mov eax, 0xe2; and edi, 0x7fffffff; syscall; 
0x000000000001f954: test eax, eax; js 0x1f962; movsxd rdi, eax; mov eax, 3; syscall; 
0x000000000001fa06: test eax, eax; js 0x1f9c1; mov esi, 2; mov edx, 1; mov rax, r8; syscall; 
0x0000000000033962: test eax, eax; js 0x33970; ret; 
0x00000000000341ad: test eax, eax; js 0x341b8; ret; 
0x0000000000042089: test eax, eax; js 0x42098; mov eax, r12d; pop r12; ret; 
0x0000000000043ee6: test eax, eax; js 0x43eeb; ret; 
0x00000000000502ac: test eax, eax; js 0x5010f; mov rax, r10; syscall; 
0x0000000000050241: test eax, eax; js 0x50112; mov rax, r10; syscall; 
0x000000000005d70e: test eax, eax; js 0x5d719; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000005dc09: test eax, eax; js 0x5dc3a; add rsp, 0x10; pop rbp; ret; 
0x0000000000061501: test eax, eax; js 0x614d0; mov eax, 0x57; mov rdi, rbp; syscall; 
0x000000000006b576: test eax, eax; js 0x6b580; ret; 
0x000000000006be37: test eax, eax; js 0x6be40; xor eax, eax; ret; 
0x000000000006c7e5: test eax, eax; js 0x6c7f0; xor eax, eax; ret; 
0x0000000000074cb7: test eax, eax; mov eax, 0xffffffff; cmovne r12d, eax; mov eax, r12d; pop r12; ret; 
0x000000000007026c: test eax, eax; mov edx, 0xfffffffe; cmovne eax, edx; add rsp, 8; ret; 
0x00000000000607ab: test eax, eax; mov edx, eax; js 0x60840; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000005e3cf: test eax, eax; mov rax, rdx; cmovns rax, qword ptr [rsp + 8]; add rsp, 0x18; ret; 
0x000000000001dcb9: test eax, eax; sete al; add rsp, 8; movzx eax, al; ret; 
0x000000000001e428: test eax, eax; sete al; movzx eax, al; add rax, rax; ret; 
0x000000000006b357: test eax, eax; setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000001dd51: test eax, eax; setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000001df98: test eax, eax; setne al; movzx eax, al; ret; 
0x000000000006ba60: test ebp, ebp; je 0x6ba98; mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000005e2f1: test ebp, ebp; jne 0x5e310; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x000000000006e9ae: test ebp, ebp; jne 0x6ea70; mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x00000000000630cb: test ebp, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000002fa52: test ebx, ebx; je 0x2fa58; fchs; add rsp, 0x40; pop rbx; ret; 
0x0000000000030433: test ebx, ebx; je 0x3043f; xorpd xmm0, xmmword ptr [rip + 0x7cb21]; add rsp, 0x10; pop rbx; ret; 
0x00000000000304f7: test ebx, ebx; je 0x30502; xorps xmm0, xmmword ptr [rip + 0x7ca6e]; add rsp, 0x10; pop rbx; ret; 
0x00000000000305c6: test ebx, ebx; je 0x305cc; fchs; add rsp, 0x30; pop rbx; ret; 
0x0000000000031725: test ebx, ebx; je 0x31731; xorpd xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x0000000000031d72: test ebx, ebx; je 0x31d7d; xorps xmm0, xmmword ptr [rip + 0x7b1f3]; pop rbx; ret; 
0x000000000003a8b3: test ebx, ebx; je 0x3a88c; fchs; pop rbx; ret; 
0x000000000003a9a6: test ebx, ebx; je 0x3a9b0; add rsp, 0x10; pop rbx; ret; 
0x000000000003a9f6: test ebx, ebx; je 0x3aa00; add rsp, 0x10; pop rbx; ret; 
0x000000000003aa44: test ebx, ebx; je 0x3aa50; add rsp, 0x10; pop rbx; ret; 
0x000000000003e54a: test ebx, ebx; je 0x3e556; xorpd xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000003e645: test ebx, ebx; je 0x3e650; xorps xmm0, xmmword ptr [rip + 0x6e920]; add rsp, 0x10; pop rbx; ret; 
0x000000000005a64b: test ebx, ebx; je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000006babc: test ebx, ebx; je 0x6bada; mov rax, qword ptr [rbx]; test rax, rax; je 0x6baca; call rax; 
0x000000000004204f: test ebx, ebx; jne 0x42058; pop rbx; ret; 
0x000000000004708c: test ebx, ebx; jne 0x47080; pop rbx; ret; 
0x00000000000507ac: test ebx, ebx; jne 0x507a0; xor eax, eax; pop rbx; ret; 
0x000000000006bad6: test ebx, ebx; jne 0x6bac0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000754af: test ebx, ebx; jne 0x754b8; pop rbx; ret; 
0x0000000000076d34: test ebx, ebx; jne 0x76c50; add rsp, 0x108; pop rbx; pop rbp; ret; 
0x000000000003e790: test ebx, ebx; jns 0x3e76d; fchs; add rsp, 0x10; pop rbx; ret; 
0x000000000002f76b: test ebx, ebx; js 0x2f778; add rsp, 0x10; pop rbx; ret; 
0x000000000003e769: test ebx, ebx; js 0x3e794; add rsp, 0x10; pop rbx; ret; 
0x0000000000033258: test ecx, 0x7ff00000; jne 0x33090; pxor xmm1, xmm1; cvtsd2ss xmm1, xmm0; movss dword ptr [rsp - 4], xmm1; ret; 
0x0000000000067401: test ecx, ecx; cmove r8, rax; mov rax, r8; ret; 
0x0000000000067349: test ecx, ecx; cmove r8d, esi; mov eax, r8d; ret; 
0x0000000000034003: test ecx, ecx; je 0x3400b; movapd xmm0, xmm1; ret; 
0x000000000005e3be: test ecx, ecx; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x0000000000068a21: test ecx, ecx; jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x0000000000076217: test ecx, ecx; jne 0x761f0; ret; 
0x000000000003cdf1: test ecx, ecx; jns 0x3cdb0; fchs; ret; 
0x000000000003cdac: test ecx, ecx; js 0x3cdf5; ret; 
0x000000000006f079: test ecx, ecx; js 0x6f080; xor eax, eax; ret; 
0x000000000002048b: test ecx, esp; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000001fcf4: test edi, 0xfffff3ff; je 0x1fd08; mov eax, 0xffffffff; ret; 
0x0000000000052324: test edi, edi; add byte ptr [rax], al; add dh, dh; ret; 
0x0000000000023298: test edi, edi; je 0x232b8; movsxd rdi, edi; mov eax, 0x131; syscall; 
0x000000000003fde7: test edi, edi; je 0x3fdf2; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003fe07: test edi, edi; je 0x3fe12; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x0000000000063eb4: test edi, edi; je 0x63ef4; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x000000000006de85: test edi, edi; je 0x6de9b; mov eax, 0x8f; mov rsi, r13; syscall; 
0x000000000006f484: test edi, edi; je 0x6f49b; movsxd rsi, ebx; mov eax, 0x90; mov rdx, rbp; syscall; 
0x000000000006f532: test edi, edi; je 0x6f548; lea rsi, [rsp + 0xc]; mov eax, 0x8e; syscall; 
0x000000000001e0d4: test edi, edi; jne 0x1e0e0; xor eax, eax; ret; 
0x000000000001ef5f: test edi, edi; jne 0x1ef50; xor eax, eax; pop rbx; ret; 
0x0000000000023d55: test edi, edi; jne 0x23d68; mov eax, 0xc; syscall; 
0x0000000000023d55: test edi, edi; jne 0x23d68; mov eax, 0xc; syscall; ret; 
0x000000000006f2b8: test edi, edi; jne 0x6f2c0; ret; 
0x000000000002b244: test edi, edi; js 0x2b268; je 0x2b258; mov dword ptr [rip + 0x8bd28], 0; ret; 
0x000000000006f2e6: test edi, edi; js 0x6f2f8; mov edx, 0xb; cmovne eax, edx; ret; 
0x0000000000073c85: test edi, edi; js 0x73c98; mov eax, 0xe2; syscall; 
0x0000000000073c85: test edi, edi; js 0x73c98; mov eax, 0xe2; syscall; ret; 
0x000000000001e57a: test edi, edi; setne al; neg eax; ret; 
0x000000000006be6e: test edx, 0x7fffffff; jne 0x6be60; call 0x70300; xor eax, eax; pop rbx; ret; 
0x00000000000708d3: test edx, edx; cmovne r8d, eax; mov eax, r8d; ret; 
0x0000000000023924: test edx, edx; je 0x23948; sub rsp, 8; mov edx, edx; mov eax, 0x145; syscall; 
0x000000000003275a: test edx, edx; je 0x327b8; movq xmm2, rax; mulsd xmm0, xmm2; addsd xmm0, xmm2; ret; 
0x0000000000032c56: test edx, edx; je 0x32ce0; movq xmm1, rax; mulsd xmm0, xmm1; addsd xmm0, xmm1; ret; 
0x0000000000034153: test edx, edx; je 0x3415b; movapd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000000040539: test edx, edx; je 0x40550; cmp rdi, rdx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000005d14b: test edx, edx; je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000005f089: test edx, edx; je 0x5f098; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000005f14f: test edx, edx; je 0x5f15a; mov qword ptr [rdx + 0xd0], rdi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x000000000006c530: test edx, edx; je 0x6c53c; movzx edx, byte ptr [rax + 0x40]; test dl, dl; je 0x6c540; ret; 
0x0000000000022ead: test edx, edx; jne 0x22e54; xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x000000000002337d: test edx, edx; jne 0x23390; mov eax, 0xd5; mov edi, 1; syscall; 
0x000000000002361d: test edx, edx; jne 0x2362b; mov eax, 0xfd; syscall; 
0x0000000000068a57: test edx, edx; jne 0x68a40; xor eax, eax; ret; 
0x0000000000068ae5: test edx, edx; jne 0x68ac3; ret; 
0x000000000006a58b: test edx, edx; jne 0x6a580; mov rax, r8; ret; 
0x000000000006a697: test edx, edx; jne 0x6a690; sub rax, rdi; sar rax, 2; ret; 
0x000000000006b81f: test edx, edx; jne 0x6b838; mov edx, dword ptr [rdi]; cmp edx, r9d; je 0x6b810; ret; 
0x000000000006d20a: test edx, edx; jne 0x6d210; ret; 
0x0000000000070337: test edx, edx; jne 0x70320; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000000743a1: test edx, edx; jne 0x743b8; movsxd rdi, r9d; call 0x21bc0; add rsp, 8; ret; 
0x000000000003cc87: test edx, edx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cd35: test edx, edx; jns 0x3ccf8; xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x0000000000052859: test edx, edx; jns 0x5283d; mov dword ptr [r8], 0xffffffff; ret; 
0x000000000002edb5: test edx, edx; js 0x2ee90; ret; 
0x000000000002ef67: test edx, edx; js 0x2f0c8; ret; 
0x000000000003405e: test edx, edx; js 0x34068; ret; 
0x000000000003cc41: test edx, edx; js 0x3cc8b; ret; 
0x000000000003ccf4: test edx, edx; js 0x3cd39; ret; 
0x000000000006a8a4: test edx, edx; mov edx, 0; cmove rax, rdx; ret; 
0x0000000000044372: test edx, edx; sete al; ret; 
0x000000000006bc38: test edx, edx; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000006f255: test esi, 0xc031ffff; pop rbx; ret; 
0x000000000005091c: test esi, 0xffffff00; jne 0x50928; mov dword ptr [rdi], esi; xor eax, eax; ret; 
0x0000000000044273: test esi, ecx; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x28], cl; add rsp, 0x18; ret; 
0x0000000000049155: test esi, esi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3901; 
0x000000000006e428: test esi, esi; je 0x6e430; mov eax, dword ptr [rsi]; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x00000000000748ab: test esi, esi; je 0x74948; mov eax, 0x4f; mov rdi, r12; syscall; 
0x000000000002344b: test esi, esi; jne 0x23458; mov eax, 0x11c; syscall; 
0x000000000006b2a4: test esi, esi; jne 0x6b2b0; xor eax, eax; ret; 
0x000000000006fc60: test esi, esi; jne 0x6fc70; test r8b, r8b; jne 0x6fc70; xor eax, eax; ret; 
0x00000000000760e4: test esi, esi; jne 0x760f0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000042135: test esi, esi; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x00000000000221d0: test esi, esi; movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x000000000005e219: test esp, esp; je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000006e32a: test esp, esp; je 0x6e378; movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000006c408: test r10b, dl; jne 0x6c419; mov byte ptr [rax + 0x40], 1; mov rax, -0x7d; ret; 
0x000000000006c54b: test r10b, dl; jne 0x6c555; mov byte ptr [rax + 0x40], 1; ret; 
0x00000000000708d2: test r10d, r10d; cmovne r8d, eax; mov eax, r8d; ret; 
0x00000000000743a0: test r10d, r10d; jne 0x743b8; movsxd rdi, r9d; call 0x21bc0; add rsp, 8; ret; 
0x000000000005e218: test r12, r12; je 0x5e234; mov rdi, qword ptr [r14]; mov rdx, r12; call rax; 
0x000000000006e329: test r12d, r12d; je 0x6e378; movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000006e9ad: test r13d, r13d; jne 0x6ea70; mov esi, r12d; mov eax, 0xca; or esi, 7; syscall; 
0x0000000000063eb3: test r15, r15; je 0x63ef4; xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000023405: test r8, r8; jne 0x23413; mov eax, 0xe8; syscall; 
0x0000000000075cd2: test r8, r8; jne 0x75c7f; mov rax, r8; ret; 
0x000000000006fc64: test r8b, r8b; jne 0x6fc70; xor eax, eax; ret; 
0x000000000001df81: test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x000000000001e40c: test r8d, r8d; jne 0x1e418; pop rbp; ret; 
0x000000000006a54d: test r8d, r8d; jne 0x6a538; neg edx; mov r8d, edx; mov eax, r8d; ret; 
0x000000000006f074: test r8d, r8d; jne 0x6f080; test ecx, ecx; js 0x6f080; xor eax, eax; ret; 
0x0000000000067400: test r9d, r9d; cmove r8, rax; mov rax, r8; ret; 
0x0000000000067348: test r9d, r9d; cmove r8d, esi; mov eax, r8d; ret; 
0x000000000002a252: test rax, rax; cmove rax, rdx; ret; 
0x000000000001e70c: test rax, rax; je 0x1e720; mov dword ptr [rax + 8], ebx; mov rax, r8; pop rbx; ret; 
0x0000000000028fef: test rax, rax; je 0x29000; pop rbx; ret; 
0x000000000002cd4e: test rax, rax; je 0x2cd60; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000003cb4a: test rax, rax; je 0x3cb60; ret; 
0x0000000000059d43: test rax, rax; je 0x59d5a; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005a349: test rax, rax; je 0x5a352; mov qword ptr [rax + 8], rdi; ret; 
0x000000000005a384: test rax, rax; je 0x5a38c; mov qword ptr [rax], rdx; ret; 
0x000000000005cadf: test rax, rax; je 0x5cb50; mov rsi, rsp; mov eax, 0x13; mov edx, 2; syscall; 
0x000000000005e37f: test rax, rax; je 0x5e390; mov rdi, qword ptr [rdx]; jmp rax; 
0x000000000005f0d8: test rax, rax; je 0x5f0e4; mov qword ptr [rax + 0xd0], rdi; mov qword ptr [rsi + 0xc0], rdi; ret; 
0x00000000000607ee: test rax, rax; je 0x60850; movsxd rdi, dword ptr [rsp + r14*4 + 0x18]; mov eax, 3; syscall; 
0x000000000006ba68: test rax, rax; je 0x6ba6f; call rax; 
0x000000000006bac3: test rax, rax; je 0x6baca; call rax; 
0x0000000000071e16: test rax, rax; je 0x71e26; call rax; 
0x00000000000786aa: test rax, rax; je 0x786c0; add rax, qword ptr [rbx]; mov rdx, rax; xor eax, eax; call rdx; 
0x000000000004ad5a: test rax, rax; jne 0x4ad50; pop rbx; ret; 
0x000000000005f052: test rax, rax; jne 0x5f040; ret; 
0x0000000000074431: test rax, rax; jne 0x74498; mov eax, 0x6b; syscall; 
0x000000000005d70d: test rax, rax; js 0x5d719; mov qword ptr [rbx], rax; xor eax, eax; pop rbx; ret; 
0x000000000001e0f2: test rax, rax; setne al; add rsp, 8; movzx eax, al; ret; 
0x000000000006ba5f: test rbp, rbp; je 0x6ba98; mov rax, qword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000005e2f0: test rbp, rbp; jne 0x5e310; mov rdi, qword ptr [r14]; mov rdx, r12; mov rsi, r13; call rax; 
0x0000000000030432: test rbx, rbx; je 0x3043f; xorpd xmm0, xmmword ptr [rip + 0x7cb21]; add rsp, 0x10; pop rbx; ret; 
0x000000000003e549: test rbx, rbx; je 0x3e556; xorpd xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000005a64a: test rbx, rbx; je 0x5a655; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000006babb: test rbx, rbx; je 0x6bada; mov rax, qword ptr [rbx]; test rax, rax; je 0x6baca; call rax; 
0x000000000004708b: test rbx, rbx; jne 0x47080; pop rbx; ret; 
0x00000000000507ab: test rbx, rbx; jne 0x507a0; xor eax, eax; pop rbx; ret; 
0x000000000006bad5: test rbx, rbx; jne 0x6bac0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000076d33: test rbx, rbx; jne 0x76c50; add rsp, 0x108; pop rbx; pop rbp; ret; 
0x000000000005e3bd: test rcx, rcx; je 0x5e3f4; mov rdi, qword ptr [rax]; lea rsi, [rsp + 8]; call rcx; 
0x0000000000068a20: test rcx, rcx; jne 0x689dd; xor eax, eax; pop rbx; ret; 
0x0000000000076216: test rcx, rcx; jne 0x761f0; ret; 
0x000000000003fde6: test rdi, rdi; je 0x3fdf2; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003fe06: test rdi, rdi; je 0x3fe12; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000001ef5e: test rdi, rdi; jne 0x1ef50; xor eax, eax; pop rbx; ret; 
0x0000000000023d54: test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; 
0x0000000000023d54: test rdi, rdi; jne 0x23d68; mov eax, 0xc; syscall; ret; 
0x0000000000073c84: test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; 
0x0000000000073c84: test rdi, rdi; js 0x73c98; mov eax, 0xe2; syscall; ret; 
0x0000000000040538: test rdx, rdx; je 0x40550; cmp rdi, rdx; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000005d14a: test rdx, rdx; je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x000000000005f088: test rdx, rdx; je 0x5f098; mov qword ptr [rdx + 0xd8], rax; ret; 
0x000000000005f14e: test rdx, rdx; je 0x5f15a; mov qword ptr [rdx + 0xd0], rdi; mov qword ptr [rcx + 0xc0], rdi; ret; 
0x0000000000022eac: test rdx, rdx; jne 0x22e54; xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x0000000000068a56: test rdx, rdx; jne 0x68a40; xor eax, eax; ret; 
0x0000000000068ae4: test rdx, rdx; jne 0x68ac3; ret; 
0x000000000003cc86: test rdx, rdx; jns 0x3cc45; xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x000000000003cc40: test rdx, rdx; js 0x3cc8b; ret; 
0x000000000006e427: test rsi, rsi; je 0x6e430; mov eax, dword ptr [rsi]; mov dword ptr [rdi], eax; xor eax, eax; ret; 
0x00000000000748aa: test rsi, rsi; je 0x74948; mov eax, 0x4f; mov rdi, r12; syscall; 
0x00000000000760e3: test rsi, rsi; jne 0x760f0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000042134: test rsi, rsi; lea rdx, [rsp + 4]; mov esi, 0x80045430; cmove rbx, rax; mov eax, 0x10; syscall; 
0x00000000000221cf: test rsi, rsi; movsxd rdi, edi; cmovs rsi, rax; movsxd rdx, edx; mov eax, 0x1d; syscall; 
0x0000000000043db2: test sil, 0x40; jne 0x43de0; movsxd rsi, esi; mov eax, 0xf0; syscall; 
0x000000000006a03e: test sil, sil; jne 0x6a048; pop rbp; ret; 
0x000000000003463c: ucomisd xmm0, xmm1; jp 0x34650; comisd xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x0000000000039be2: ucomisd xmm0, xmm2; jp 0x39d78; jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000003463d: ucomiss xmm0, xmm1; jp 0x34650; comisd xmm0, xmm1; jne 0x34650; mov dword ptr [rdi], 0; ret; 
0x00000000000346c4: ucomiss xmm0, xmm1; jp 0x346d8; comiss xmm0, xmm1; jne 0x346d8; mov dword ptr [rdi], 0; ret; 
0x0000000000039be3: ucomiss xmm0, xmm2; jp 0x39d78; jne 0x39d78; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000003d8a5: ud0; jmp qword ptr [rsi + 0x41]; 
0x000000000001df16: vminsd xmm8, xmm4, qword ptr [rcx + 0x5c]; ret; 
0x0000000000074d41: wait; add byte ptr [rax], al; add byte ptr [rcx + 0x125b8f3], cl; add byte ptr [rax], al; movsxd rsi, esi; syscall; 
0x0000000000075374: wait; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000074981: wait; movsd dword ptr [rdi], dword ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000033a2e: wait; ret 0x440f; 
0x0000000000030a7b: wait; ret 0x450f; 
0x000000000004bb11: wait; ret; 
0x0000000000018e2e: wait; ror byte ptr [rdi], 0x45; ret 0xc084; 
0x0000000000070371: xadd dword ptr [rip + 0x46b08], eax; cmp eax, 1; je 0x70380; ret; 
0x00000000000479aa: xbegin 0x6ded79af; jne 0x479af; jmp qword ptr [rsi + 0x2e]; 
0x0000000000060e96: xchg al, ah; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000007113a: xchg bh, bh; dec dword ptr [rax - 0x77]; ret; 
0x000000000002af0f: xchg byte ptr [rax + rax - 0x7cbf0000], dl; ret 0x4901; 
0x000000000006bd20: xchg byte ptr [rax + rax], al; mov qword ptr [rbx + 8], rax; call 0x6b950; xor eax, eax; pop rbx; ret; 
0x0000000000052d26: xchg byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000002b466: xchg byte ptr [rax], al; add byte ptr [rax], al; mov edx, 0xc; mov rdi, rbx; mov rax, rdx; syscall; 
0x0000000000076c04: xchg byte ptr [rbx], al; add byte ptr [rax - 0x77], cl; ret 0xc031; 
0x00000000000301aa: xchg byte ptr [rcx + 0x48000000], cl; add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000000258fe: xchg byte ptr [rcx + rax - 0x49f10000], dl; ret; 
0x000000000006ae5a: xchg byte ptr [rcx - 0x77], al; adc al, 0x80; sub rax, 1; jae 0x6ae58; mov rax, r8; ret; 
0x0000000000039bee: xchg byte ptr [rcx], al; add byte ptr [rax], al; divsd xmm2, qword ptr [rip + 0x74226]; movapd xmm0, xmm2; ret; 
0x000000000002c638: xchg byte ptr [rdi + rdi*8 - 1], ch; inc dword ptr [rcx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, r8d; ret; 
0x0000000000038873: xchg dword ptr [rax - 0x17fffffd], ebp; ret; 
0x0000000000032305: xchg dword ptr [rax - 0x3d21fff9], esi; fdivrp st(1); fsubr dword ptr [rip + 0x7e7c1]; add rsp, 0x60; pop rbx; ret; 
0x000000000004f2d4: xchg dword ptr [rax - 0x77], ecx; ret 0x8b44; 
0x0000000000032b02: xchg dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 0x48; ret; 
0x0000000000023a59: xchg dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000027845: xchg dword ptr [rbp + 0x69000000], eax; sal byte ptr [rdx + 0x1000000], cl; ret 0xc281; 
0x0000000000036492: xchg dword ptr [rcx - 0x9000000], edi; ret; 
0x000000000006addf: xchg dword ptr [rcx], edi; retf 0xec74; mov eax, edx; sub eax, ecx; ret; 
0x0000000000028aa2: xchg dword ptr [rdi + rdx*8 - 0x76bb0001], eax; ret; 
0x0000000000035605: xchg dword ptr [rdi], eax; add dl, dh; divps xmm0, xmm1; ret; 
0x000000000006ece6: xchg dword ptr [rdi], eax; cmp eax, 3; je 0x6ecf0; ret; 
0x0000000000063150: xchg dword ptr [rsi - 0x76fffffe], eax; ret 0xc083; 
0x0000000000021ff3: xchg eax, ebp; add al, 0; mov rdi, rax; call 0x21bc0; add rsp, 0x18; ret; 
0x00000000000748af: xchg eax, ebp; add byte ptr [rax], al; add byte ptr [rax + 0x4f], bh; mov rdi, r12; syscall; 
0x000000000007798e: xchg eax, ebp; mov eax, 0xe8fffffb; ret 0x38; 
0x000000000001f7d7: xchg eax, ebp; mov ebp, 0xc0310004; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000004e5a3: xchg eax, ebp; rcr byte ptr [rbx - 9], 0xd8; ret; 
0x000000000006e266: xchg eax, ebp; ret 0x3948; 
0x0000000000055538: xchg eax, ebp; ret 0x45c7; 
0x00000000000553b4: xchg eax, ebp; ret 0x4c7; 
0x0000000000055181: xchg eax, ebp; ret 0x8341; 
0x0000000000056fe4: xchg eax, ebp; ret 0x8941; 
0x0000000000029372: xchg eax, ebp; ret 0xb60f; 
0x000000000002990c: xchg eax, ebp; ret 0xc031; 
0x000000000003f67c: xchg eax, ebp; ret 0xc148; 
0x000000000005ef31: xchg eax, ebp; ret 0xc283; 
0x0000000000029345: xchg eax, ebp; ret 0xd021; 
0x0000000000029421: xchg eax, ebp; ret 0xd084; 
0x0000000000045620: xchg eax, ebp; ret 0xd184; 
0x0000000000055a01: xchg eax, ebp; ret 0xd3e9; 
0x0000000000033e2a: xchg eax, ebp; ret 0xe083; 
0x00000000000557f9: xchg eax, ebp; ret 0xf8e9; 
0x0000000000044329: xchg eax, ebp; ret; 
0x000000000005e73f: xchg eax, ebp; rol byte ptr [rcx + 0x5c], 0xf; mov dh, 0xc0; neg eax; ret; 
0x000000000002d008: xchg eax, ebp; rol byte ptr [rcx - 0x7d], 0xc0; add al, byte ptr [rcx + rcx*4 - 0x40]; ret; 
0x0000000000023487: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000001dd54: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x00000000000234c1: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000006612c: xchg eax, ebp; ror byte ptr [rcx + 0x49282444], 0x8d; or byte ptr [r9 - 0x77], r9b; fisttp qword ptr [rax - 0x77]; ret; 
0x000000000001e57d: xchg eax, ebp; sal bh, 0xd8; ret; 
0x0000000000056056: xchg eax, ebp; sar dword ptr [rbx + rbp], 0xf; xchg eax, ebp; ret 0xd184; 
0x0000000000055eb4: xchg eax, ebp; sar dword ptr [rdi + rdi], 0xf; xchg eax, ebp; ret 0xd184; 
0x000000000005dc59: xchg eax, ebx; adc al, 0; add byte ptr [rbp + 0x5d0775c0], al; ret; 
0x000000000002568e: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000006f2c9: xchg eax, ebx; add eax, dword ptr [rax]; add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x0000000000038019: xchg eax, ebx; add eax, dword ptr [rax]; add byte ptr [rcx - 0x7f], al; cld; ret 0xfbb4; 
0x0000000000065bb3: xchg eax, ebx; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000064410: xchg eax, ecx; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000002fe47: xchg eax, ecx; add byte ptr [rax], al; add byte ptr [rcx + rdi], al; ret 0x5872; 
0x00000000000314cb: xchg eax, ecx; mov edx, 0xff20007; pop rcx; ret 0xff2; 
0x0000000000028eb7: xchg eax, ecx; or byte ptr [rax], al; cmove r8, rax; mov rax, r8; ret; 
0x0000000000028f48: xchg eax, ecx; or byte ptr [rax], al; lea r8, [rip + 0x8911e]; cmove r8, rax; mov rax, r8; ret; 
0x0000000000065df7: xchg eax, ecx; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000065d2b: xchg eax, ecx; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000015c76: xchg eax, edi; add byte ptr [rax], al; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; add rsp, 8; ret; 
0x000000000007a5a2: xchg eax, edi; ret 0x2e0f; 
0x000000000007a826: xchg eax, edi; ret 0x4566; 
0x0000000000033d17: xchg eax, edi; ret 0xf1df; 
0x000000000007a55c: xchg eax, edi; ret 0xf44; 
0x000000000007a864: xchg eax, edi; ret 0xf66; 
0x000000000002aa56: xchg eax, edi; ror byte ptr [rcx - 0x7d], 0xec; add al, 0x84; ret 0x840f; 
0x000000000005bada: xchg eax, edx; add byte ptr [rax], al; add byte ptr [rax + 0x101], bh; mov edx, 0x2a0100; syscall; 
0x000000000002fe42: xchg eax, edx; add byte ptr [rax], al; add byte ptr [rbp + 0x91], cl; add al, 0x39; ret 0x5872; 
0x0000000000070d8a: xchg eax, edx; loope 0x70d87; jmp qword ptr [rsi - 0x70]; 
0x000000000003f71e: xchg eax, edx; ret 0x148; 
0x000000000003f5dd: xchg eax, edx; ret 0x2949; 
0x00000000000514b9: xchg eax, edx; ret 0xc083; 
0x000000000003f539: xchg eax, edx; ret 0xc148; 
0x0000000000024684: xchg eax, edx; ror byte ptr [rdi], 0xb6; ror byte ptr [rdi], 0x47; ret 0xfc3; 
0x0000000000061c8a: xchg eax, edx; sar bl, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000071b8a: xchg eax, edx; sar edx, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000045c6e: xchg eax, edx; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000003d4b3: xchg eax, esi; add byte ptr [rax], al; add bh, dh; ret 0; 
0x000000000002b26c: xchg eax, esi; or byte ptr [rax], al; test al, al; jne 0x2b278; ret; 
0x0000000000032ddd: xchg eax, esi; pxor xmm0, xmm0; ret; 
0x000000000003b564: xchg eax, esi; ret 0x8141; 
0x000000000004bd9b: xchg eax, esi; ret 0xf980; 
0x000000000001dbf8: xchg eax, esi; rol byte ptr [rbx - 0x6bf08001], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000001dceb: xchg eax, esi; rol byte ptr [rbx - 0x6bf0df01], 0xc2; or eax, edx; movzx eax, al; ret; 
0x000000000001dd7d: xchg eax, esi; rol byte ptr [rcx + 0x1ffffff], 0; jbe 0x1dd90; ret; 
0x000000000001b2db: xchg eax, esp; adc byte ptr [rcx - 0x3f], al; ret 0x890a; 
0x000000000001b302: xchg eax, esp; adc byte ptr [rcx - 0x3f], al; ret; 
0x000000000005007a: xchg eax, esp; add byte ptr [rax], al; add byte ptr [rax + 0x66], bh; syscall; 
0x000000000002af10: xchg eax, esp; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; ret 0x4901; 
0x000000000005acd7: xchg eax, esp; add eax, 0xd8d4800; sal dword ptr [rbx + 5], 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000005588d: xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x0000000000058189: xchg eax, esp; and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000076272: xchg eax, esp; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x2374; 
0x000000000005571d: xchg eax, esp; and al, 0xd0; add byte ptr [rax], al; add byte ptr [rax + 9], cl; ret 0x8948; 
0x000000000006a7ef: xchg eax, esp; mov byte ptr [rax - 0x7c], 0xf7; jne 0x6a7d0; mov eax, edx; sub eax, ecx; ret; 
0x0000000000028eed: xchg eax, esp; or byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000061f9d: xchg eax, esp; ret 0x5423; 
0x0000000000021d5b: xchg eax, esp; ret 0x8548; 
0x0000000000055f6a: xchg eax, esp; ret 0x8944; 
0x0000000000029743: xchg eax, esp; ret 0x8948; 
0x0000000000077783: xchg eax, esp; ret 0x8b4d; 
0x00000000000560b9: xchg eax, esp; ret 0x8d47; 
0x000000000006e98e: xchg eax, esp; ret 0xc085; 
0x00000000000552b1: xchg eax, esp; ret 0xc208; 
0x000000000004db04: xchg eax, esp; ret 0xc748; 
0x000000000001dbce: xchg eax, esp; ret 0xd009; 
0x000000000004ebe9: xchg eax, esp; ret 0xd108; 
0x0000000000060eaf: xchg eax, esp; ret 0xd201; 
0x0000000000029c8e: xchg eax, esp; ret 0xd501; 
0x0000000000071b69: xchg eax, esp; ret 0xe9c1; 
0x000000000003f602: xchg eax, esp; ret; 
0x000000000001dbc8: xchg eax, esp; rol byte ptr [rbx - 0x6bf0f601], 0xc2; or eax, edx; movzx eax, al; ret; 
0x0000000000043eda: xchg eax, esp; ror byte ptr [rax + 1], 0xc7; mov eax, 0xf1; syscall; 
0x000000000001dcbc: xchg eax, esp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; ret; 
0x000000000001e42b: xchg eax, esp; ror byte ptr [rdi], 0xb6; ror byte ptr [rax + 1], 0xc0; ret; 
0x000000000005c9ad: xchg eax, esp; sti; dec dword ptr [rax + 0x63]; clc; mov eax, 3; syscall; 
0x000000000002ef7d: xchg esi, ebx; add byte ptr [rax], al; add bl, dh; movups xmm0, xmmword ptr [rip + 0x81a9e]; addss xmm0, dword ptr [rip + 0x81a9a]; ret; 
0x0000000000015a6d: xlatb; adc al, 0xa; add byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x0000000000044003: xlatb; add byte ptr [rax], al; xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000004ed1e: xlatb; call 0x5e530; add rsp, 0x28; sar eax, 0x1f; ret; 
0x000000000004053f: xlatb; jne 0x40530; mov rax, qword ptr [rax + 8]; ret; 
0x000000000006a428: xlatb; jne 0x6a410; ret; 
0x000000000005a78a: xlatb; mov dword ptr [rax + 0x18], edx; mov eax, edx; sub eax, r8d; ret; 
0x0000000000023cfa: xlatb; mov eax, 0xa9; mov edi, 0xfee1dead; mov esi, 0x28121969; syscall; 
0x0000000000059c70: xlatb; mov eax, edx; ret; 
0x000000000003d0e6: xlatb; mulsd xmm0, xmm2; ret; 
0x000000000003d19b: xlatb; mulss xmm0, xmm2; ret; 
0x00000000000743cd: xlatb; nop; movsxd rdi, eax; call 0x21bc0; add rsp, 8; ret; 
0x0000000000029370: xlatb; setne dl; movzx edx, dl; and eax, edx; ret; 
0x0000000000073b10: xlatb; syscall; 
0x000000000005be4f: xor ah, bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000479d5: xor al, 0; add byte ptr [rax], al; syscall; 
0x0000000000023af9: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x23b06; add rsp, 0x28; ret; 
0x00000000000428db: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x428e8; add rsp, 0x58; ret; 
0x000000000004d0b6: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4d0e9; add rsp, 0x28; ret; 
0x0000000000071abe: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71b89; add rsp, 0x18; ret; 
0x0000000000075006: xor al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x7503c; add rsp, 0x18; ret; 
0x000000000001e698: xor al, 0x48; add esp, 0xa8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000006ba63: xor al, 0x48; mov eax, dword ptr [rbx + 0x10]; test rax, rax; je 0x6ba6f; call rax; 
0x000000000003d0e1: xor al, 0x66; movd mm2, rdi; mulsd xmm0, xmm2; ret; 
0x000000000006aeb2: xor al, 0x80; add rax, 1; cmp rax, rdx; jne 0x6aeb0; mov rax, r8; ret; 
0x000000000002f184: xor al, 0x89; ret 0xe281; 
0x0000000000065667: xor al, 0x89; ret; 
0x0000000000031f9b: xor al, 0xf3; movups xmm2, xmmword ptr [rip + 0x7eadc]; subss xmm2, dword ptr [rip + 0x7ea7c]; movaps xmm0, xmm2; ret; 
0x000000000003cceb: xor al, 0xf3; subps xmm0, xmmword ptr [rip + 0x727cc]; test edx, edx; js 0x3cd39; ret; 
0x0000000000077230: xor al, 0xfb; dec dword ptr [rax - 0x77]; ret; 
0x0000000000051bf0: xor al, 0xfc; dec dword ptr [rax - 0x7b]; sal byte ptr [rsi + rdx*2 + 0x48], 0x89; ret; 
0x000000000005ba61: xor al, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x000000000004ba31: xor al, 0xfd; jmp qword ptr [rsi + 0x2e]; 
0x0000000000023edf: xor al, 1; add byte ptr [rax], al; syscall; 
0x0000000000048d78: xor al, byte ptr [rax]; add byte ptr [rax], al; xor edx, edx; syscall; 
0x00000000000240fc: xor al, byte ptr [rcx]; add byte ptr [rax], al; syscall; 
0x0000000000020887: xor al, ch; ret; 
0x0000000000043738: xor bh, bh; sldt word ptr [rax]; mov eax, 0xa; and rsi, 0xfffffffffffff000; sub rsi, rdi; syscall; 
0x000000000004fd2c: xor bh, dh; cld; dec dword ptr [rax - 0x77]; ret 0xffb8; 
0x000000000006de16: xor bh, dh; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000003ac2e: xor bl, bl; insb byte ptr [rdi], dx; and al, 0x40; faddp st(1); add rsp, 0x28; ret; 
0x000000000004d0ea: xor bl, byte ptr [rsi]; std; jmp qword ptr [rsi - 0x70]; 
0x000000000006ffa1: xor byte ptr [rax + 0x39], cl; ret 0x6974; 
0x000000000006d87a: xor byte ptr [rax + 0x63], cl; je 0x6d8a3; push rax; lea rdx, [rsp + 0x54]; mov eax, 0x90; syscall; 
0x000000000006dedb: xor byte ptr [rax + 0x91], bh; syscall; 
0x000000000001f561: xor byte ptr [rax + 0xc8], bh; syscall; 
0x0000000000059b77: xor byte ptr [rax + 0xcb], bh; syscall; 
0x0000000000059b77: xor byte ptr [rax + 0xcb], bh; syscall; neg eax; ret; 
0x000000000006e25d: xor byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, ebp; ret 0x3948; 
0x0000000000067676: xor byte ptr [rax - 0x73], cl; add eax, 0x4f602; pop rbx; pop rbp; pop r12; ret; 
0x0000000000068f1a: xor byte ptr [rax - 0x73], cl; add rcx, qword ptr [rax + 1]; ret; 
0x000000000007b21b: xor byte ptr [rax - 0x75], cl; adc al, 0x24; mov qword ptr [rdi + 0x38], rdx; xor eax, eax; ret; 
0x000000000003e89f: xor byte ptr [rax - 0x75], cl; and al, 0x48; sub rax, qword ptr fs:[0x28]; jne 0x3e8e9; add rsp, 0x58; ret; 
0x0000000000074223: xor byte ptr [rax - 0x75], cl; and al, 0x48; sub rcx, qword ptr fs:[0x28]; jne 0x74239; add rsp, 0x58; ret; 
0x000000000005222d: xor byte ptr [rax - 0x75], cl; and al, 8; call rax; 
0x000000000004ca89: xor byte ptr [rax - 0x762e76f2], cl; ret 0xf983; 
0x0000000000070431: xor byte ptr [rax - 0x77], cl; add byte ptr [r8 + 3], r15b; syscall; 
0x000000000005217d: xor byte ptr [rax - 0x77], cl; out dx, eax; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000073f96: xor byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000007288d: xor byte ptr [rax - 0x77], cl; ret 0x894c; 
0x0000000000070934: xor byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000063a58: xor byte ptr [rax - 0x77], cl; ret; 
0x00000000000546ae: xor byte ptr [rax - 0x7d], cl; ret; 
0x000000000004c3f8: xor byte ptr [rax], al; add byte ptr [rax], al; xor edx, edx; syscall; 
0x000000000004efed: xor byte ptr [rax], al; add byte ptr [rcx - 0x3ee87630], cl; call 0xffffffff89d52105; ret 0xe2c1; 
0x000000000006e3c5: xor byte ptr [rbp + 0x10], dh; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000006e3c4: xor byte ptr [rbp + 0x10], sil; mov eax, 0xbfffffff; lock and dword ptr [rdi + 4], eax; xor eax, eax; ret; 
0x000000000004fd00: xor byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x0000000000043f17: xor byte ptr [rbp + 6], 0x40; movzx eax, bh; ret; 
0x000000000006de84: xor byte ptr [rbp - 0x47ed8b01], al; pop qword ptr [rax]; add byte ptr [rax], al; mov rsi, r13; syscall; 
0x000000000006a3c8: xor byte ptr [rbp - 0x49f02faf], cl; ror byte ptr [rdi], cl; mov dh, 0xc0; sub eax, edx; ret; 
0x0000000000044e8d: xor byte ptr [rbp - 0x57c00aa], cl; jle 0x44f0c; ret 0x8348; 
0x000000000006e328: xor byte ptr [rbp - 0x7b], al; in al, 0x74; movsxd rdi, r12d; movsxd rsi, ebx; mov eax, 0xc8; syscall; 
0x000000000003e002: xor byte ptr [rbx + 0x41], bl; pop rsp; pop r13; fmulp st(1); ret; 
0x000000000003e035: xor byte ptr [rbx + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000006d135: xor byte ptr [rbx + 0x49e1405], cl; add byte ptr [rcx], bh; ret; 
0x0000000000048043: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000016999: xor byte ptr [rbx - 0x27], bl; leave; ret; 
0x0000000000031530: xor byte ptr [rbx - 0xe], bl; mulps xmm1, xmm0; divsd xmm1, xmm3; movapd xmm0, xmm1; ret; 
0x00000000000316d0: xor byte ptr [rbx - 0xe], bl; subps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000002387b: xor byte ptr [rcx + rcx*4 - 0x40], cl; syscall; 
0x000000000006c4e8: xor byte ptr [rcx + rcx*4 - 0xa], cl; syscall; 
0x000000000007008b: xor byte ptr [rcx + rcx*4 - 8], cl; syscall; 
0x0000000000073b68: xor byte ptr [rcx - 0x47dfdbbc], cl; fiadd word ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000006388a: xor byte ptr [rcx - 0x77], cl; ret 0x14c; 
0x00000000000404a7: xor byte ptr [rcx], al; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000023a2f: xor byte ptr [rcx], al; add byte ptr [rax], al; syscall; 
0x000000000001b231: xor byte ptr [rcx], dh; ret 0xf231; 
0x000000000001dc26: xor byte ptr [rcx], dh; rol byte ptr [rbx - 0x69f0f601], 0xc0; ret; 
0x00000000000546a9: xor byte ptr [rdi + rcx + 0x4d], al; xor byte ptr gs:[rax - 0x7d], cl; ret; 
0x000000000005083c: xor byte ptr [rdi], cl; adc dword ptr [rsi + 0x40], esp; movups xmmword ptr [rsi + 0x50], xmm5; movups xmmword ptr [rsi + 0x60], xmm6; movups xmmword ptr [rsi + 0x70], xmm7; ret; 
0x000000000006b58d: xor byte ptr [rdx + rbp*8 + 0x41], 0xb8; retf 0; add byte ptr [rdx + 1], bh; mov esi, 0x81; mov rax, r8; syscall; 
0x0000000000073cb9: xor byte ptr [rsi + 0x20], bh; syscall; 
0x0000000000073cb9: xor byte ptr [rsi + 0x20], bh; syscall; xor eax, eax; ret; 
0x000000000006c3d0: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; 
0x000000000006c3d0: xor byte ptr [rsi + 0x21], bh; mov eax, 0xc8; syscall; ret; 
0x00000000000399d4: xor byte ptr [rsi + 7], al; add dl, dh; divps xmm0, xmm1; ret; 
0x000000000004213d: xor byte ptr [rsp + rax - 0x80], dl; cmove rbx, rax; mov eax, 0x10; syscall; 
0x00000000000546ad: xor byte ptr gs:[rax - 0x7d], cl; ret; 
0x00000000000546a8: xor byte ptr gs:[rdi + rcx + 0x4d], al; xor byte ptr gs:[rax - 0x7d], cl; ret; 
0x0000000000022045: xor cl, byte ptr [rax + 0x63]; ror byte ptr [rax + 0x63], cl; test byte ptr [rax + 0x63], 0xff; mov eax, 0x42; syscall; 
0x0000000000071e25: xor cl, byte ptr [rax + 0x63]; sti; mov eax, 0xe4; mov rsi, rbp; syscall; 
0x0000000000051fd5: xor cl, byte ptr [rcx + 0x39]; ret; 
0x0000000000069d5f: xor cl, byte ptr [rdi]; xor dword ptr [rdx + 0x48000001], 0xffffff89; ret; 
0x000000000003fb8f: xor cl, byte ptr [rsp + 0x21]; cmovs eax, edx; mov dword ptr [rdi], eax; ret; 
0x0000000000016d5d: xor dh, bl; ret 0xc9d9; 
0x000000000001b138: xor dh, byte ptr [rcx]; ret 0xfa21; 
0x0000000000036e74: xor dh, byte ptr [rdi + 0x39]; movss xmm0, dword ptr [rip + 0x7a099]; divss xmm0, xmm1; ret; 
0x000000000006f59c: xor dh, byte ptr [rdi + rax + 0x48]; mov dword ptr [rdx], esi; or byte ptr [rax + 0x42], 1; xor eax, eax; ret; 
0x000000000004a402: xor dh, dh; ret 0x74df; 
0x00000000000306ca: xor dl, 0xf; pop rsi; ret; 
0x0000000000016d6a: xor dl, byte ptr [rdx]; add byte ptr [rax], al; add rsp, 0x28; fchs; fxch st(1); ret; 
0x000000000003fa0c: xor dl, dh; cvtps2pd xmm0, xmm0; pop rbx; ret; 
0x000000000003f8fa: xor dl, dh; cvtps2pd xmm0, xmm1; pop rbx; ret; 
0x000000000005de5e: xor dword ptr [rax - 0x75], ecx; push rcx; adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x00000000000451d7: xor dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x00000000000232a0: xor dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000069d61: xor dword ptr [rdx + 0x48000001], 0xffffff89; ret; 
0x0000000000028ee6: xor dword ptr [rsi + 0x1f], edi; lea r8, [rip + 0x8948d]; mov rax, r8; ret; 
0x000000000003aa59: xor dword ptr [rsp + rax], eax; add bl, bl; sub al, 0x24; add rsp, 0x10; pop rbx; ret; 
0x000000000003f468: xor eax, 0x20e1c148; or rdx, rcx; mov rax, r8; ret; 
0x0000000000059d5d: xor eax, 0x48000001; mov edi, ebp; mov rsi, rdx; syscall; 
0x000000000005b7a9: xor eax, 0x48c48148; add al, byte ptr [rax]; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000004c58b: xor eax, 0x4c000000; mov edi, esp; mov rdx, r13; movsxd rsi, esi; syscall; 
0x00000000000365d2: xor eax, 0x5100ff2; adc eax, 0xf2000787; divps xmm0, xmm1; ret; 
0x000000000006059c: xor eax, 0x53b67; pop r12; mov qword ptr [rip + 0x53bb6], r13; pop r13; pop r14; ret; 
0x000000000005abcf: xor eax, 0x5451c; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abcf: xor eax, 0x5451c; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005abaf: xor eax, 0x54544; xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abaf: xor eax, 0x54544; xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000005e304: xor eax, 0x5c415d5b; pop r13; pop r14; ret; 
0x000000000004ef7a: xor eax, 0x65407; call 0x4ee80; add rsp, 8; shr rax, 0x10; cdqe; ret; 
0x000000000004ef4a: xor eax, 0x65437; call 0x4ee80; add rsp, 8; shr rax, 0x11; ret; 
0x00000000000724fa: xor eax, 0xa7840f; add byte ptr [rax], al; ret; 
0x000000000002e567: xor eax, 0xd90007ec; ret 0xc9d8; 
0x00000000000338cf: xor eax, 0xf20007a7; movups xmmword ptr [rsp - 8], xmm1; ret; 
0x0000000000045dee: xor eax, 0xfce8990; mov dh, 0x48; add cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000005d0b9: xor eax, 1; and eax, 1; ret; 
0x000000000003b496: xor eax, dword ptr [rax + rax]; add byte ptr [rcx], ch; ror dword ptr [rax - 0x39], 1; ret 0xffff; 
0x0000000000047e65: xor eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000002d0c9: xor eax, eax; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x0000000000076477: xor eax, eax; add rdx, qword ptr [rbx]; call rdx; 
0x000000000002d001: xor eax, eax; add rdx, rdx; setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x000000000007448a: xor eax, eax; add rsp, 0x18; ret; 
0x0000000000022eb2: xor eax, eax; add rsp, 8; mov rax, r8; ret; 
0x000000000001f7db: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000019a1b: xor eax, eax; add rsp, 8; ret; 
0x000000000001e063: xor eax, eax; and edi, 0x7f; cmp edi, 0x20; seta al; ret; 
0x000000000001dbb4: xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x0000000000022ecd: xor eax, eax; call 0x1f8c0; add rsp, 8; sar eax, 0x1f; ret; 
0x0000000000048009: xor eax, eax; call 0x41450; movsxd rdi, ebx; mov edx, eax; mov eax, 3; syscall; 
0x00000000000199d8: xor eax, eax; call 0x60f80; add rsp, 8; add eax, 1; cdqe; ret; 
0x00000000000786b5: xor eax, eax; call rdx; 
0x0000000000049344: xor eax, eax; cmp byte ptr [rbx], 0; pop rbx; sete al; ret; 
0x0000000000043ed4: xor eax, eax; cmp byte ptr [rdi], 0x2f; sete al; add rdi, rax; mov eax, 0xf1; syscall; 
0x000000000004e59d: xor eax, eax; cmp byte ptr [rsi], 0xa; setne al; pop rbx; neg eax; ret; 
0x000000000001dc67: xor eax, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000001e084: xor eax, eax; cmp edi, 0x1ffff; jbe 0x1e090; ret; 
0x000000000001dc47: xor eax, eax; cmp edi, 0x5d; setbe al; ret; 
0x000000000001dc87: xor eax, eax; cmp edi, 0x5e; setbe al; ret; 
0x0000000000072594: xor eax, eax; cmp edi, 0xa3d70b; setb al; add eax, 0x34; ret; 
0x000000000001e4f8: xor eax, eax; cmp edi, 0xee; seta al; ret; 
0x000000000001e03a: xor eax, eax; cmp edi, 0xfffe; setne al; ret; 
0x000000000001de17: xor eax, eax; cmp edi, 2; setbe al; ret; 
0x000000000001dc27: xor eax, eax; cmp edi, 9; setbe al; ret; 
0x000000000001db5b: xor eax, eax; cmp edi, 9; setbe r8b; mov eax, r8d; ret; 
0x000000000001fc41: xor eax, eax; cmp edx, 0x400; sete al; lea eax, [rax*4 - 1]; add rsp, 8; ret; 
0x000000000001fc60: xor eax, eax; cmp edx, 0xc00; setne al; add rsp, 8; neg eax; ret; 
0x00000000000438f4: xor eax, eax; cmp edx, 4; je 0x43907; movsxd rdx, edx; mov eax, 0x1c; syscall; 
0x000000000005d09e: xor eax, eax; cmp qword ptr [rdi + 0x10], 0; setne al; ret; 
0x000000000005d0f4: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; je 0x5d105; mov rax, qword ptr [rdi + 0x28]; sub rax, qword ptr [rdi + 0x38]; ret; 
0x000000000005d07e: xor eax, eax; cmp qword ptr [rdi + 0x20], 0; setne al; ret; 
0x000000000005b3a4: xor eax, eax; cmp qword ptr [rdi], 0; sete al; ret; 
0x000000000006dd34: xor eax, eax; cmp rsi, rdi; sete al; ret; 
0x000000000007af08: xor eax, eax; fnstenv [rdi]; stmxcsr dword ptr [rdi + 0x1c]; ret; 
0x000000000007af11: xor eax, eax; inc rdi; je 0x7af20; fldenv [rdi - 1]; ldmxcsr dword ptr [rdi + 0x1b]; ret; 
0x000000000007a1d2: xor eax, eax; lea rdi, [rip + 0x383e3]; call 0x75ce0; mov eax, 1; add rsp, 8; ret; 
0x000000000007b3c7: xor eax, eax; mov al, 0x3c; syscall; 
0x000000000007b3c7: xor eax, eax; mov al, 0x3c; syscall; hlt; ret; 
0x0000000000060f4a: xor eax, eax; mov dword ptr [rdi + 0x90], 0xa; ret; 
0x000000000006b278: xor eax, eax; mov dword ptr [rdi + 8], esi; ret; 
0x000000000006f654: xor eax, eax; mov dword ptr [rdi], eax; lock or dword ptr [rsp], 0; ret; 
0x000000000006d0e9: xor eax, eax; mov dword ptr [rdi], esi; ret; 
0x000000000004125b: xor eax, eax; mov eax, 0x12e; syscall; 
0x000000000004fcd7: xor eax, eax; mov eax, 0x142; syscall; 
0x000000000005b9f0: xor eax, eax; mov eax, 0x5b; syscall; 
0x0000000000074757: xor eax, eax; mov eax, 0x5d; syscall; 
0x0000000000023c5b: xor eax, eax; mov eax, 0x65; syscall; 
0x0000000000074df5: xor eax, eax; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000006736c: xor eax, eax; mov eax, r8d; ret; 
0x00000000000508c4: xor eax, eax; mov ecx, 0x2a; rep stosq qword ptr [rdi], rax; ret; 
0x000000000006b9fa: xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi + 4], edx; shr eax, 4; and eax, 1; ret; 
0x000000000006f644: xor eax, eax; mov edx, 0x10; lock cmpxchg dword ptr [rdi], edx; ret; 
0x00000000000745f9: xor eax, eax; mov edx, 4; syscall; 
0x000000000005059a: xor eax, eax; mov qword ptr [r12 + 8], rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000070baf: xor eax, eax; mov qword ptr [r8], rdi; add r9, rax; mov byte ptr [r9], 0; ret; 
0x000000000001eaf0: xor eax, eax; mov qword ptr [rbx + 0x18], rbx; pop rbx; ret; 
0x000000000006bdf5: xor eax, eax; mov qword ptr [rdi + 0x10], rsi; ret; 
0x000000000005d11c: xor eax, eax; mov qword ptr [rdi + 0x38], 0; mov qword ptr [rdi + 0x28], 0; mov qword ptr [rdi + 0x10], 0; mov qword ptr [rdi + 8], 0; ret; 
0x0000000000060f63: xor eax, eax; mov qword ptr [rdi + 0x60], 0; ret; 
0x000000000006be27: xor eax, eax; mov qword ptr [rdi], rsi; ret; 
0x0000000000067424: xor eax, eax; mov rax, r8; ret; 
0x0000000000074b9e: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000006be96: xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi + 8], edx; ret; 
0x000000000006b983: xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; mov dword ptr [rdi], esi; ret; 
0x000000000006b8c8: xor eax, eax; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; ret; 
0x0000000000053449: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000001df21: xor eax, eax; pop rbp; pop r12; ret; 
0x000000000006a0e0: xor eax, eax; pop rbp; ret; 
0x0000000000043b59: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000043969: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000000162bf: xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000001ef63: xor eax, eax; pop rbx; ret; 
0x000000000002cdac: xor eax, eax; pop rdx; ret; 
0x000000000001dcac: xor eax, eax; ret; 
0x000000000002d051: xor eax, eax; shl edx, 9; sete r8b; mov eax, r8d; ret; 
0x0000000000044006: xor eax, eax; shl esi, 0xa; mov dword ptr [rdx], esi; ret; 
0x000000000002cff1: xor eax, eax; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000006949d: xor eax, eax; sub eax, ecx; ret; 
0x000000000001db87: xor eax, eax; sub edi, 0x61; cmp edi, 0x19; setbe al; ret; 
0x000000000001e154: xor eax, eax; sub edi, 0x61; cmp edi, 5; setbe al; ret; 
0x000000000002c5d9: xor eax, eax; sub rax, 0x10; cmp rax, rdx; setb r8b; mov eax, r8d; ret; 
0x000000000006bc07: xor eax, eax; sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000043792: xor eax, eax; test cl, 2; jne 0x437c8; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x000000000006f2b6: xor eax, eax; test edi, edi; jne 0x6f2c0; ret; 
0x000000000001e578: xor eax, eax; test edi, edi; setne al; neg eax; ret; 
0x0000000000044370: xor eax, eax; test edx, edx; sete al; ret; 
0x000000000006bc36: xor eax, eax; test edx, edx; setne al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001df7f: xor eax, eax; test r8d, r8d; je 0x1df90; pop rbp; ret; 
0x000000000003fde4: xor eax, eax; test rdi, rdi; je 0x3fdf2; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000003fe04: xor eax, eax; test rdi, rdi; je 0x3fe12; bsf rdi, rdi; lea eax, [rdi + 1]; ret; 
0x000000000005d148: xor eax, eax; test rdx, rdx; je 0x5d156; mov rax, rdx; sub rax, qword ptr [rdi + 8]; ret; 
0x0000000000068ae2: xor eax, eax; test rdx, rdx; jne 0x68ac3; ret; 
0x000000000006ece4: xor eax, eax; xchg dword ptr [rdi], eax; cmp eax, 3; je 0x6ecf0; ret; 
0x000000000002accb: xor eax, eax; xor edx, edx; pop rbx; ret; 
0x000000000004c4b6: xor eax, eax; xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c476: xor eax, eax; xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f2: xor eax, eax; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d1: xor eax, eax; xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000048d72: xor eax, eax; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5f: xor eax, eax; xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479cf: xor eax, eax; xor r9d, r9d; mov eax, 0x34; syscall; 
0x000000000004f011: xor eax, edx; mov edx, eax; shr edx, 0x12; xor eax, edx; shr eax, 1; ret; 
0x000000000004f018: xor eax, edx; shr eax, 1; ret; 
0x00000000000672c7: xor eax, edx; sub eax, edx; ret; 
0x00000000000677fa: xor eax, edx; sub rax, rdx; ret; 
0x0000000000044ea0: xor ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000004c4b9: xor ecx, ecx; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c479: xor ecx, ecx; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f5: xor ecx, ecx; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d4: xor ecx, ecx; mov eax, 0x31; syscall; 
0x0000000000048d75: xor ecx, ecx; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e62: xor ecx, ecx; mov eax, 0x33; syscall; 
0x00000000000479d2: xor ecx, ecx; mov eax, 0x34; syscall; 
0x000000000004c3c8: xor ecx, ecx; mov eax, 0x36; syscall; 
0x0000000000047e95: xor ecx, ecx; mov eax, 0x37; syscall; 
0x0000000000044a28: xor ecx, ecx; mov qword ptr [rsp + 8], rsi; lea rsi, [rsp + 8]; call 0x445c0; add rsp, 0x18; ret; 
0x000000000001f941: xor ecx, ecx; mov rax, r8; mov rdx, r9; syscall; 
0x000000000004bb24: xor edi, ebp; jmp qword ptr [rsi + 0xf]; 
0x0000000000023e28: xor edi, edi; call 0x5aba0; mov eax, 0x27; syscall; 
0x0000000000073d97: xor edi, edi; call 0x71e00; add rsp, 8; not eax; shr eax, 0x1f; ret; 
0x000000000007b38d: xor edi, edi; mov eax, 0x3c; syscall; 
0x000000000005abb4: xor edi, edi; mov eax, 0xe; syscall; 
0x000000000005abb4: xor edi, edi; mov eax, 0xe; syscall; ret; 
0x000000000006d44f: xor edi, edi; mov esi, 0x18; syscall; 
0x000000000006d41a: xor edi, edi; nop dword ptr [rax]; mov rax, rdx; syscall; 
0x000000000005004a: xor edi, edi; syscall; 
0x0000000000074b29: xor edi, edi; syscall; ret; 
0x000000000005bbe7: xor edi, esp; jmp qword ptr [rsi + 0xf]; 
0x000000000004508d: xor edx, edx; call 0x44bc0; add rsp, 8; ret; 
0x00000000000680f8: xor edx, edx; call 0x68050; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x00000000000685f8: xor edx, edx; call 0x684f0; fstp dword ptr [rsp + 0xc]; movss xmm0, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000006ebdd: xor edx, edx; mov dword ptr [rsp + 4], 0; mov esi, 6; syscall; 
0x000000000005bb46: xor edx, edx; mov eax, 0x10c; syscall; 
0x0000000000074455: xor edx, edx; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x0000000000059d5a: xor edx, edx; mov eax, 0x135; mov rdi, rbp; mov rsi, rdx; syscall; 
0x000000000005abf2: xor edx, edx; mov edi, 2; syscall; 
0x000000000005abf2: xor edx, edx; mov edi, 2; syscall; ret; 
0x000000000006cc2b: xor edx, edx; mov esi, 0x83; mov rax, rbx; syscall; 
0x000000000005b805: xor edx, edx; mov r10d, 8; mov eax, 0xe; mov edi, 2; syscall; 
0x000000000006d53e: xor edx, edx; mov r10d, 8; syscall; 
0x000000000006d53e: xor edx, edx; mov r10d, 8; syscall; mov rdi, qword ptr [rbx + 8]; call qword ptr [rbx]; 
0x000000000005bb93: xor edx, edx; mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x00000000000603f3: xor edx, edx; mov rax, r8; syscall; 
0x000000000006b539: xor edx, edx; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000006b859: xor edx, edx; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000006c301: xor edx, edx; mov rax, rbx; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005c85c: xor edx, edx; mov rax, rbx; mov rsi, rbp; syscall; 
0x000000000006e5dc: xor edx, edx; or esi, 6; nop dword ptr [rax]; mov r10, rbx; mov rax, r8; syscall; 
0x000000000002accd: xor edx, edx; pop rbx; ret; 
0x0000000000048d7c: xor edx, edx; syscall; 
0x0000000000048d7c: xor edx, edx; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000603f1: xor edx, edx; xor edx, edx; mov rax, r8; syscall; 
0x000000000005cd73: xor edx, edx; xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000005c86d: xor edx, edx; xor esi, esi; mov rax, rbx; syscall; 
0x000000000005c9ed: xor edx, edx; xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000059d48: xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000005eda0: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000004c3ef: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451ce: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000048d6f: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5c: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479cc: xor edx, edx; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000015e50: xor esi, esi; call 0x15cb0; mov eax, r12d; pop r12; ret; 
0x000000000006a837: xor esi, esi; call 0x6aea0; mov rax, r12; pop r12; ret; 
0x00000000000688eb: xor esi, esi; call 0x7b2b1; add rsp, 8; ret; 
0x0000000000059c1a: xor esi, esi; call 0x7b2b1; mov eax, r12d; pop r12; ret; 
0x00000000000691ac: xor esi, esi; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x0000000000059bca: xor esi, esi; call 0x7b2b1; mov rdi, rbp; call 0x21bc0; pop rbp; ret; 
0x000000000005cd75: xor esi, esi; call qword ptr [rdi + 0x48]; 
0x000000000006c328: xor esi, esi; mov rax, r12; mov rdx, rbp; syscall; 
0x000000000006b880: xor esi, esi; mov rax, r12; syscall; 
0x000000000006b549: xor esi, esi; mov rax, r9; syscall; 
0x000000000005c86f: xor esi, esi; mov rax, rbx; syscall; 
0x00000000000599ba: xor esi, esi; mov rdi, r12; call 0x7b2b1; mov rax, r12; pop r12; ret; 
0x000000000005c9ef: xor esi, esi; mov rdi, rbp; call qword ptr [rbp + 0x48]; 
0x0000000000059d4a: xor esi, esi; mov rdi, rbp; call rax; 
0x0000000000071e75: xor esi, esi; mov rdi, rbp; syscall; 
0x000000000005eda2: xor esi, esi; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000005ef36: xor esi, esi; mov rdi, rbx; call rax; 
0x000000000001fc12: xor esi, esi; mov rdx, r8; syscall; 
0x000000000001fc12: xor esi, esi; mov rdx, r8; syscall; neg eax; ret; 
0x00000000000238ee: xor esi, esi; syscall; 
0x00000000000239bd: xor esi, esi; syscall; mov rdi, rax; call 0x21bc0; add rsp, 8; ret; 
0x00000000000238ee: xor esi, esi; syscall; ret; 
0x0000000000072a01: xor esp, esp; add rsp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000006a22c: xor esp, esp; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000059bfd: xor esp, esp; cmp rsi, rax; ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000005a6b9: xor esp, esp; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000005bb45: xor r10d, r10d; mov eax, 0x10c; syscall; 
0x0000000000074454: xor r10d, r10d; mov eax, 0x10d; movsxd rdi, dword ptr [r8]; syscall; 
0x000000000005bb92: xor r10d, r10d; mov rax, r12; mov rsi, r14; mov rdi, -0x64; mov rdx, r13; syscall; 
0x000000000006b538: xor r10d, r10d; mov rax, r9; mov rsi, rbx; syscall; 
0x000000000006b858: xor r10d, r10d; mov rax, rbp; mov rsi, rbx; syscall; 
0x000000000006c300: xor r10d, r10d; mov rax, rbx; mov rsi, r9; mov rdx, r8; syscall; 
0x000000000005c85b: xor r10d, r10d; mov rax, rbx; mov rsi, rbp; syscall; 
0x00000000000603f0: xor r10d, r10d; xor edx, edx; mov rax, r8; syscall; 
0x000000000005c86c: xor r10d, r10d; xor esi, esi; mov rax, rbx; syscall; 
0x000000000004c3ee: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451cd: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000048d6e: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5b: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479cb: xor r10d, r10d; xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x0000000000072a00: xor r12d, r12d; add rsp, 0x18; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000006a22b: xor r12d, r12d; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000059bfc: xor r12d, r12d; cmp rsi, rax; ja 0x59c10; mov eax, r12d; pop r12; ret; 
0x000000000005a6b8: xor r12d, r12d; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000006de15: xor r15b, r14b; ror byte ptr [rbp + 0x6c504], 1; add byte ptr [rax], al; mov dword ptr [rsi], eax; xor eax, eax; ret; 
0x000000000001dd16: xor r8d, eax; cmp edi, 0x19; setbe al; ret; 
0x000000000006f2b5: xor r8d, eax; test edi, edi; jne 0x6f2c0; ret; 
0x000000000002d0c8: xor r8d, r8d; add rax, rax; sete r8b; mov eax, r8d; ret; 
0x000000000002d000: xor r8d, r8d; add rdx, rdx; setne r8b; add r8d, 2; mov eax, r8d; ret; 
0x0000000000022eb1: xor r8d, r8d; add rsp, 8; mov rax, r8; ret; 
0x000000000001db5a: xor r8d, r8d; cmp edi, 9; setbe r8b; mov eax, r8d; ret; 
0x0000000000023c5a: xor r8d, r8d; mov eax, 0x65; syscall; 
0x0000000000074df4: xor r8d, r8d; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000006736b: xor r8d, r8d; mov eax, r8d; ret; 
0x0000000000067423: xor r8d, r8d; mov rax, r8; ret; 
0x000000000002d050: xor r8d, r8d; shl edx, 9; sete r8b; mov eax, r8d; ret; 
0x000000000002cff0: xor r8d, r8d; shl rdx, 0xc; sete r8b; mov eax, r8d; ret; 
0x000000000002c5d8: xor r8d, r8d; sub rax, 0x10; cmp rax, rdx; setb r8b; mov eax, r8d; ret; 
0x000000000006bc06: xor r8d, r8d; sub rax, rcx; mov qword ptr [rdx], rcx; mov qword ptr [rsi], rax; mov eax, r8d; ret; 
0x0000000000043791: xor r8d, r8d; test cl, 2; jne 0x437c8; movsxd r10, ebp; mov eax, 0x19; syscall; 
0x000000000004c4b5: xor r8d, r8d; xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c475: xor r8d, r8d; xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f1: xor r8d, r8d; xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d0: xor r8d, r8d; xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000048d71: xor r8d, r8d; xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e5e: xor r8d, r8d; xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479ce: xor r8d, r8d; xor r9d, r9d; mov eax, 0x34; syscall; 
0x000000000004c4b8: xor r9d, r9d; and esi, 0xfff7f7ff; mov eax, 0x29; movsxd rsi, esi; syscall; 
0x000000000004c478: xor r9d, r9d; mov eax, 0x29; sub rsp, 8; syscall; 
0x000000000004c3f4: xor r9d, r9d; mov eax, 0x30; xor edx, edx; syscall; 
0x00000000000451d3: xor r9d, r9d; mov eax, 0x31; syscall; 
0x0000000000048d74: xor r9d, r9d; mov eax, 0x32; xor edx, edx; syscall; 
0x0000000000047e61: xor r9d, r9d; mov eax, 0x33; syscall; 
0x00000000000479d1: xor r9d, r9d; mov eax, 0x34; syscall; 
0x000000000004c3c7: xor r9d, r9d; mov eax, 0x36; syscall; 
0x0000000000047e94: xor r9d, r9d; mov eax, 0x37; syscall; 
0x000000000001f940: xor r9d, r9d; mov rax, r8; mov rdx, r9; syscall; 
0x00000000000677f9: xor rax, rdx; sub rax, rdx; ret; 
0x000000000007b38c: xor rdi, rdi; mov eax, 0x3c; syscall; 
0x000000000003e54e: xorpd xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000003cc8b: xorpd xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x0000000000037602: xorpd xmm0, xmmword ptr [rip + 0x75956]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000031729: xorpd xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x0000000000030437: xorpd xmm0, xmmword ptr [rip + 0x7cb21]; add rsp, 0x10; pop rbx; ret; 
0x000000000002ea99: xorpd xmm0, xmmword ptr [rip + 0x7e4bf]; ret; 
0x0000000000016868: xorpd xmm0, xmmword ptr [rip + 0x966f0]; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016c29: xorpd xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000002f7f6: xorpd xmm1, xmmword ptr [rip + 0x7d762]; add rsp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000002d20c: xorpd xmm1, xmmword ptr [rip + 0x7fd4c]; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000018034: xorpd xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000016880: xorpd xmm2, xmmword ptr [rip + 0x966d8]; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 
0x000000000003e649: xorps xmm0, xmmword ptr [rip + 0x6e920]; add rsp, 0x10; pop rbx; ret; 
0x000000000003e54f: xorps xmm0, xmmword ptr [rip + 0x6ea0a]; add rsp, 0x10; pop rbx; ret; 
0x000000000003cd39: xorps xmm0, xmmword ptr [rip + 0x70230]; ret; 
0x000000000003cc8c: xorps xmm0, xmmword ptr [rip + 0x702cd]; ret; 
0x0000000000037c75: xorps xmm0, xmmword ptr [rip + 0x752f4]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000037603: xorps xmm0, xmmword ptr [rip + 0x75956]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000031d76: xorps xmm0, xmmword ptr [rip + 0x7b1f3]; pop rbx; ret; 
0x000000000003172a: xorps xmm0, xmmword ptr [rip + 0x7b82f]; pop rbx; ret; 
0x00000000000304fb: xorps xmm0, xmmword ptr [rip + 0x7ca6e]; add rsp, 0x10; pop rbx; ret; 
0x0000000000030438: xorps xmm0, xmmword ptr [rip + 0x7cb21]; add rsp, 0x10; pop rbx; ret; 
0x0000000000030250: xorps xmm0, xmmword ptr [rip + 0x7cd19]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000002ea9a: xorps xmm0, xmmword ptr [rip + 0x7e4bf]; ret; 
0x0000000000016869: xorps xmm0, xmmword ptr [rip + 0x966f0]; pop rbx; movapd xmm1, xmm0; movapd xmm0, xmm2; ret; 
0x0000000000016c2a: xorps xmm1, xmm3; movapd xmm0, xmm2; ret; 
0x000000000002f937: xorps xmm1, xmmword ptr [rip + 0x7d632]; add rsp, 0x20; movaps xmm0, xmm1; pop rbx; ret; 
0x000000000002f7f7: xorps xmm1, xmmword ptr [rip + 0x7d762]; add rsp, 0x20; movapd xmm0, xmm1; pop rbx; ret; 
0x000000000002d23b: xorps xmm1, xmmword ptr [rip + 0x7fd2e]; movss dword ptr [rsp - 4], xmm1; movss xmm1, dword ptr [rsp - 4]; mulss xmm0, xmm1; ret; 
0x000000000002d20d: xorps xmm1, xmmword ptr [rip + 0x7fd4c]; movsd qword ptr [rsp - 8], xmm1; movsd xmm1, qword ptr [rsp - 8]; mulsd xmm0, xmm1; ret; 
0x0000000000018035: xorps xmm1, xmmword ptr [rip + 0x94f24]; ret; 
0x0000000000016881: xorps xmm2, xmmword ptr [rip + 0x966d8]; movapd xmm1, xmm0; pop rbx; movapd xmm0, xmm2; ret; 

19973 gadgets found

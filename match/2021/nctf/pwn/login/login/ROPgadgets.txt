


Gadgets
=======


0x00000000004010da: adc ch, byte ptr [rdi]; add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x00000000004010d5: adc dword ptr [rax], eax; call qword ptr [rip + 0x2f12]; hlt; nop; endbr64; ret; 
0x000000000040113e: adc dword ptr [rax], edi; test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x00000000004010d9: adc eax, 0x2f12; hlt; nop; endbr64; ret; 
0x00000000004010fc: adc edi, dword ptr [rax]; test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x000000000040116c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10f0; mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x00000000004010dd: add ah, dh; nop; endbr64; ret; 
0x0000000000401211: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x1090; mov eax, 0; leave; ret; 
0x00000000004010d7: add bh, bh; adc eax, 0x2f12; hlt; nop; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040129c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000040121b: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004010fe: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x0000000000401140: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x000000000040121c: add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000401213: add byte ptr [rax], al; call 0x1090; mov eax, 0; leave; ret; 
0x000000000040129e: add byte ptr [rax], al; endbr64; ret; 
0x00000000004012a6: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x00000000004010dc: add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x000000000040121d: add byte ptr [rax], al; leave; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401100: add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x0000000000401142: add byte ptr [rax], al; test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x000000000040117b: add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040121e: add cl, cl; ret; 
0x00000000004010d6: add dil, dil; adc eax, 0x2f12; hlt; nop; endbr64; ret; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x0000000000401215: call 0x1090; mov eax, 0; leave; ret; 
0x000000000040120b: call 0x1090; mov edi, 2; call 0x1090; mov eax, 0; leave; ret; 
0x0000000000401171: call 0x10f0; mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x00000000004010d8: call qword ptr [rip + 0x2f12]; hlt; nop; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x00000000004010e3: cli; ret; 
0x00000000004012ab: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010e0: endbr64; ret; 
0x00000000004012a8: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040127c: fisttp word ptr [rax - 0x7d]; ret; 
0x00000000004010de: hlt; nop; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010fb: je 0x1110; mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x0000000000401105: je 0x1110; mov edi, 0x404048; jmp rax; 
0x000000000040113d: je 0x1150; mov eax, 0; test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x0000000000401147: je 0x1150; mov edi, 0x404048; jmp rax; 
0x000000000040110c: jmp rax; 
0x000000000040121f: leave; ret; 
0x0000000000401176: mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x000000000040121a: mov eax, 0; leave; ret; 
0x00000000004010fd: mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x000000000040113f: mov eax, 0; test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040116f: mov ebp, esp; call 0x10f0; mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x0000000000401107: mov edi, 0x404048; jmp rax; 
0x0000000000401210: mov edi, 2; call 0x1090; mov eax, 0; leave; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040116e: mov rbp, rsp; call 0x10f0; mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x0000000000401298: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401297: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401296: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010df: nop; endbr64; ret; 
0x000000000040110f: nop; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401106: or dword ptr [rdi + 0x404048], edi; jmp rax; 
0x000000000040128c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040128e: pop r13; pop r14; pop r15; ret; 
0x0000000000401290: pop r14; pop r15; ret; 
0x0000000000401292: pop r15; ret; 
0x000000000040128b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040128f: pop rbp; pop r14; pop r15; ret; 
0x000000000040117d: pop rbp; ret; 
0x0000000000401293: pop rdi; ret; 
0x0000000000401291: pop rsi; pop r15; ret; 
0x000000000040128d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000040116d: push rbp; mov rbp, rsp; call 0x10f0; mov byte ptr [rip + 0x2f0b], 1; pop rbp; ret; 
0x000000000040101a: ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004012ad: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004012ac: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040129a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401103: test eax, eax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x0000000000401145: test eax, eax; je 0x1150; mov edi, 0x404048; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401102: test rax, rax; je 0x1110; mov edi, 0x404048; jmp rax; 
0x0000000000401144: test rax, rax; je 0x1150; mov edi, 0x404048; jmp rax; 

99 gadgets found
